#include "SparseMatrix.h"

void SparseMatrix::lsolve(double *b) {
    
    #pragma omp parallel 
    { 
        int j;
        
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 0; j < 10; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 10; j < 20; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 850; j < 860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 20; j < 30; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 860; j < 870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1700; j < 1710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 30; j < 40; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 870; j < 880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1710; j < 1720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2550; j < 2560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 40; j < 50; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 880; j < 890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1720; j < 1730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2560; j < 2570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 3400; j < 3410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 50; j < 60; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 890; j < 900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1730; j < 1740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2570; j < 2580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 3410; j < 3420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 4250; j < 4260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 60; j < 70; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 900; j < 910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1740; j < 1750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2580; j < 2590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 3420; j < 3430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 4260; j < 4270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5100; j < 5110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 70; j < 80; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 910; j < 920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1750; j < 1760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2590; j < 2600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 3430; j < 3440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 4270; j < 4280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5110; j < 5120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5950; j < 5960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 80; j < 90; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 920; j < 930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1760; j < 1770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2600; j < 2610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 3440; j < 3450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 4280; j < 4290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5120; j < 5130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5960; j < 5970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 6800; j < 6810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 90; j < 100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 930; j < 940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1770; j < 1780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2610; j < 2620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 3450; j < 3460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 4290; j < 4300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5130; j < 5140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5970; j < 5980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 6810; j < 6820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 7650; j < 7660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 100; j < 110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 940; j < 950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1780; j < 1790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2620; j < 2630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 3460; j < 3470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 4300; j < 4310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5140; j < 5150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5980; j < 5990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 6820; j < 6830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 7660; j < 7670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 8500; j < 8510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 110; j < 120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 950; j < 960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1790; j < 1800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2630; j < 2640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 3470; j < 3480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 4310; j < 4320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5150; j < 5160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5990; j < 6000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 6830; j < 6840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 7670; j < 7680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 8510; j < 8520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 9350; j < 9360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 120; j < 130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 960; j < 970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1800; j < 1810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2640; j < 2650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 3480; j < 3490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 4320; j < 4330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5160; j < 5170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 6000; j < 6010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 6840; j < 6850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 7680; j < 7690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 8520; j < 8530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 9360; j < 9370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 10200; j < 10210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 130; j < 140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 970; j < 980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1810; j < 1820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2650; j < 2660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 3490; j < 3500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 4330; j < 4340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5170; j < 5180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 6010; j < 6020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 6850; j < 6860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 7690; j < 7700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 8530; j < 8540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 9370; j < 9380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 10210; j < 10220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 11050; j < 11060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 140; j < 150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 980; j < 990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1820; j < 1830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2660; j < 2670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 3500; j < 3510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 4340; j < 4350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5180; j < 5190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 6020; j < 6030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 6860; j < 6870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 7700; j < 7710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 8540; j < 8550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 9380; j < 9390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 10220; j < 10230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 11060; j < 11070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 11900; j < 11910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 150; j < 160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 990; j < 1000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 1830; j < 1840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 2670; j < 2680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 3510; j < 3520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 4350; j < 4360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 5190; j < 5200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 6030; j < 6040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 6870; j < 6880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 7710; j < 7720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 8550; j < 8560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 9390; j < 9400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 10230; j < 10240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 11070; j < 11080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 11910; j < 11920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 12750; j < 12760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 160; j < 170; j++) _solve(b, j);
for(j = 1000; j < 1010; j++) _solve(b, j);
for(j = 1840; j < 1850; j++) _solve(b, j);
for(j = 2680; j < 2690; j++) _solve(b, j);
for(j = 3520; j < 3530; j++) _solve(b, j);
for(j = 4360; j < 4370; j++) _solve(b, j);
for(j = 5200; j < 5210; j++) _solve(b, j);
for(j = 6040; j < 6050; j++) _solve(b, j);
for(j = 6880; j < 6890; j++) _solve(b, j);
for(j = 7720; j < 7730; j++) _solve(b, j);
for(j = 8560; j < 8570; j++) _solve(b, j);
for(j = 9400; j < 9410; j++) _solve(b, j);
for(j = 10240; j < 10250; j++) _solve(b, j);
for(j = 11080; j < 11090; j++) _solve(b, j);
for(j = 11920; j < 11930; j++) _solve(b, j);
for(j = 12760; j < 12770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13600; j < 13610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 170; j < 180; j++) _solve(b, j);
for(j = 1010; j < 1020; j++) _solve(b, j);
for(j = 1850; j < 1860; j++) _solve(b, j);
for(j = 2690; j < 2700; j++) _solve(b, j);
for(j = 3530; j < 3540; j++) _solve(b, j);
for(j = 4370; j < 4380; j++) _solve(b, j);
for(j = 5210; j < 5220; j++) _solve(b, j);
for(j = 6050; j < 6060; j++) _solve(b, j);
for(j = 6890; j < 6900; j++) _solve(b, j);
for(j = 7730; j < 7740; j++) _solve(b, j);
for(j = 8570; j < 8580; j++) _solve(b, j);
for(j = 9410; j < 9420; j++) _solve(b, j);
for(j = 10250; j < 10260; j++) _solve(b, j);
for(j = 11090; j < 11100; j++) _solve(b, j);
for(j = 11930; j < 11940; j++) _solve(b, j);
for(j = 12770; j < 12780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13610; j < 13620; j++) _solve(b, j);
for(j = 14450; j < 14460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 180; j < 190; j++) _solve(b, j);
for(j = 1020; j < 1030; j++) _solve(b, j);
for(j = 1860; j < 1870; j++) _solve(b, j);
for(j = 2700; j < 2710; j++) _solve(b, j);
for(j = 3540; j < 3550; j++) _solve(b, j);
for(j = 4380; j < 4390; j++) _solve(b, j);
for(j = 5220; j < 5230; j++) _solve(b, j);
for(j = 6060; j < 6070; j++) _solve(b, j);
for(j = 6900; j < 6910; j++) _solve(b, j);
for(j = 7740; j < 7750; j++) _solve(b, j);
for(j = 8580; j < 8590; j++) _solve(b, j);
for(j = 9420; j < 9430; j++) _solve(b, j);
for(j = 10260; j < 10270; j++) _solve(b, j);
for(j = 11100; j < 11110; j++) _solve(b, j);
for(j = 11940; j < 11950; j++) _solve(b, j);
for(j = 12780; j < 12790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13620; j < 13630; j++) _solve(b, j);
for(j = 14460; j < 14470; j++) _solve(b, j);
for(j = 15300; j < 15310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 190; j < 200; j++) _solve(b, j);
for(j = 1030; j < 1040; j++) _solve(b, j);
for(j = 1870; j < 1880; j++) _solve(b, j);
for(j = 2710; j < 2720; j++) _solve(b, j);
for(j = 3550; j < 3560; j++) _solve(b, j);
for(j = 4390; j < 4400; j++) _solve(b, j);
for(j = 5230; j < 5240; j++) _solve(b, j);
for(j = 6070; j < 6080; j++) _solve(b, j);
for(j = 6910; j < 6920; j++) _solve(b, j);
for(j = 7750; j < 7760; j++) _solve(b, j);
for(j = 8590; j < 8600; j++) _solve(b, j);
for(j = 9430; j < 9440; j++) _solve(b, j);
for(j = 10270; j < 10280; j++) _solve(b, j);
for(j = 11110; j < 11120; j++) _solve(b, j);
for(j = 11950; j < 11960; j++) _solve(b, j);
for(j = 12790; j < 12800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13630; j < 13640; j++) _solve(b, j);
for(j = 14470; j < 14480; j++) _solve(b, j);
for(j = 15310; j < 15320; j++) _solve(b, j);
for(j = 16150; j < 16160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 200; j < 210; j++) _solve(b, j);
for(j = 1040; j < 1050; j++) _solve(b, j);
for(j = 1880; j < 1890; j++) _solve(b, j);
for(j = 2720; j < 2730; j++) _solve(b, j);
for(j = 3560; j < 3570; j++) _solve(b, j);
for(j = 4400; j < 4410; j++) _solve(b, j);
for(j = 5240; j < 5250; j++) _solve(b, j);
for(j = 6080; j < 6090; j++) _solve(b, j);
for(j = 6920; j < 6930; j++) _solve(b, j);
for(j = 7760; j < 7770; j++) _solve(b, j);
for(j = 8600; j < 8610; j++) _solve(b, j);
for(j = 9440; j < 9450; j++) _solve(b, j);
for(j = 10280; j < 10290; j++) _solve(b, j);
for(j = 11120; j < 11130; j++) _solve(b, j);
for(j = 11960; j < 11970; j++) _solve(b, j);
for(j = 12800; j < 12810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13640; j < 13650; j++) _solve(b, j);
for(j = 14480; j < 14490; j++) _solve(b, j);
for(j = 15320; j < 15330; j++) _solve(b, j);
for(j = 16160; j < 16170; j++) _solve(b, j);
for(j = 17000; j < 17010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 210; j < 220; j++) _solve(b, j);
for(j = 1050; j < 1060; j++) _solve(b, j);
for(j = 1890; j < 1900; j++) _solve(b, j);
for(j = 2730; j < 2740; j++) _solve(b, j);
for(j = 3570; j < 3580; j++) _solve(b, j);
for(j = 4410; j < 4420; j++) _solve(b, j);
for(j = 5250; j < 5260; j++) _solve(b, j);
for(j = 6090; j < 6100; j++) _solve(b, j);
for(j = 6930; j < 6940; j++) _solve(b, j);
for(j = 7770; j < 7780; j++) _solve(b, j);
for(j = 8610; j < 8620; j++) _solve(b, j);
for(j = 9450; j < 9460; j++) _solve(b, j);
for(j = 10290; j < 10300; j++) _solve(b, j);
for(j = 11130; j < 11140; j++) _solve(b, j);
for(j = 11970; j < 11980; j++) _solve(b, j);
for(j = 12810; j < 12820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13650; j < 13660; j++) _solve(b, j);
for(j = 14490; j < 14500; j++) _solve(b, j);
for(j = 15330; j < 15340; j++) _solve(b, j);
for(j = 16170; j < 16180; j++) _solve(b, j);
for(j = 17010; j < 17020; j++) _solve(b, j);
for(j = 17850; j < 17860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 220; j < 230; j++) _solve(b, j);
for(j = 1060; j < 1070; j++) _solve(b, j);
for(j = 1900; j < 1910; j++) _solve(b, j);
for(j = 2740; j < 2750; j++) _solve(b, j);
for(j = 3580; j < 3590; j++) _solve(b, j);
for(j = 4420; j < 4430; j++) _solve(b, j);
for(j = 5260; j < 5270; j++) _solve(b, j);
for(j = 6100; j < 6110; j++) _solve(b, j);
for(j = 6940; j < 6950; j++) _solve(b, j);
for(j = 7780; j < 7790; j++) _solve(b, j);
for(j = 8620; j < 8630; j++) _solve(b, j);
for(j = 9460; j < 9470; j++) _solve(b, j);
for(j = 10300; j < 10310; j++) _solve(b, j);
for(j = 11140; j < 11150; j++) _solve(b, j);
for(j = 11980; j < 11990; j++) _solve(b, j);
for(j = 12820; j < 12830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13660; j < 13670; j++) _solve(b, j);
for(j = 14500; j < 14510; j++) _solve(b, j);
for(j = 15340; j < 15350; j++) _solve(b, j);
for(j = 16180; j < 16190; j++) _solve(b, j);
for(j = 17020; j < 17030; j++) _solve(b, j);
for(j = 17860; j < 17870; j++) _solve(b, j);
for(j = 18700; j < 18710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 230; j < 240; j++) _solve(b, j);
for(j = 1070; j < 1080; j++) _solve(b, j);
for(j = 1910; j < 1920; j++) _solve(b, j);
for(j = 2750; j < 2760; j++) _solve(b, j);
for(j = 3590; j < 3600; j++) _solve(b, j);
for(j = 4430; j < 4440; j++) _solve(b, j);
for(j = 5270; j < 5280; j++) _solve(b, j);
for(j = 6110; j < 6120; j++) _solve(b, j);
for(j = 6950; j < 6960; j++) _solve(b, j);
for(j = 7790; j < 7800; j++) _solve(b, j);
for(j = 8630; j < 8640; j++) _solve(b, j);
for(j = 9470; j < 9480; j++) _solve(b, j);
for(j = 10310; j < 10320; j++) _solve(b, j);
for(j = 11150; j < 11160; j++) _solve(b, j);
for(j = 11990; j < 12000; j++) _solve(b, j);
for(j = 12830; j < 12840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13670; j < 13680; j++) _solve(b, j);
for(j = 14510; j < 14520; j++) _solve(b, j);
for(j = 15350; j < 15360; j++) _solve(b, j);
for(j = 16190; j < 16200; j++) _solve(b, j);
for(j = 17030; j < 17040; j++) _solve(b, j);
for(j = 17870; j < 17880; j++) _solve(b, j);
for(j = 18710; j < 18720; j++) _solve(b, j);
for(j = 19550; j < 19560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 240; j < 250; j++) _solve(b, j);
for(j = 1080; j < 1090; j++) _solve(b, j);
for(j = 1920; j < 1930; j++) _solve(b, j);
for(j = 2760; j < 2770; j++) _solve(b, j);
for(j = 3600; j < 3610; j++) _solve(b, j);
for(j = 4440; j < 4450; j++) _solve(b, j);
for(j = 5280; j < 5290; j++) _solve(b, j);
for(j = 6120; j < 6130; j++) _solve(b, j);
for(j = 6960; j < 6970; j++) _solve(b, j);
for(j = 7800; j < 7810; j++) _solve(b, j);
for(j = 8640; j < 8650; j++) _solve(b, j);
for(j = 9480; j < 9490; j++) _solve(b, j);
for(j = 10320; j < 10330; j++) _solve(b, j);
for(j = 11160; j < 11170; j++) _solve(b, j);
for(j = 12000; j < 12010; j++) _solve(b, j);
for(j = 12840; j < 12850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13680; j < 13690; j++) _solve(b, j);
for(j = 14520; j < 14530; j++) _solve(b, j);
for(j = 15360; j < 15370; j++) _solve(b, j);
for(j = 16200; j < 16210; j++) _solve(b, j);
for(j = 17040; j < 17050; j++) _solve(b, j);
for(j = 17880; j < 17890; j++) _solve(b, j);
for(j = 18720; j < 18730; j++) _solve(b, j);
for(j = 19560; j < 19570; j++) _solve(b, j);
for(j = 20400; j < 20410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 250; j < 260; j++) _solve(b, j);
for(j = 1090; j < 1100; j++) _solve(b, j);
for(j = 1930; j < 1940; j++) _solve(b, j);
for(j = 2770; j < 2780; j++) _solve(b, j);
for(j = 3610; j < 3620; j++) _solve(b, j);
for(j = 4450; j < 4460; j++) _solve(b, j);
for(j = 5290; j < 5300; j++) _solve(b, j);
for(j = 6130; j < 6140; j++) _solve(b, j);
for(j = 6970; j < 6980; j++) _solve(b, j);
for(j = 7810; j < 7820; j++) _solve(b, j);
for(j = 8650; j < 8660; j++) _solve(b, j);
for(j = 9490; j < 9500; j++) _solve(b, j);
for(j = 10330; j < 10340; j++) _solve(b, j);
for(j = 11170; j < 11180; j++) _solve(b, j);
for(j = 12010; j < 12020; j++) _solve(b, j);
for(j = 12850; j < 12860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13690; j < 13700; j++) _solve(b, j);
for(j = 14530; j < 14540; j++) _solve(b, j);
for(j = 15370; j < 15380; j++) _solve(b, j);
for(j = 16210; j < 16220; j++) _solve(b, j);
for(j = 17050; j < 17060; j++) _solve(b, j);
for(j = 17890; j < 17900; j++) _solve(b, j);
for(j = 18730; j < 18740; j++) _solve(b, j);
for(j = 19570; j < 19580; j++) _solve(b, j);
for(j = 20410; j < 20420; j++) _solve(b, j);
for(j = 21250; j < 21260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 260; j < 270; j++) _solve(b, j);
for(j = 1100; j < 1110; j++) _solve(b, j);
for(j = 1940; j < 1950; j++) _solve(b, j);
for(j = 2780; j < 2790; j++) _solve(b, j);
for(j = 3620; j < 3630; j++) _solve(b, j);
for(j = 4460; j < 4470; j++) _solve(b, j);
for(j = 5300; j < 5310; j++) _solve(b, j);
for(j = 6140; j < 6150; j++) _solve(b, j);
for(j = 6980; j < 6990; j++) _solve(b, j);
for(j = 7820; j < 7830; j++) _solve(b, j);
for(j = 8660; j < 8670; j++) _solve(b, j);
for(j = 9500; j < 9510; j++) _solve(b, j);
for(j = 10340; j < 10350; j++) _solve(b, j);
for(j = 11180; j < 11190; j++) _solve(b, j);
for(j = 12020; j < 12030; j++) _solve(b, j);
for(j = 12860; j < 12870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13700; j < 13710; j++) _solve(b, j);
for(j = 14540; j < 14550; j++) _solve(b, j);
for(j = 15380; j < 15390; j++) _solve(b, j);
for(j = 16220; j < 16230; j++) _solve(b, j);
for(j = 17060; j < 17070; j++) _solve(b, j);
for(j = 17900; j < 17910; j++) _solve(b, j);
for(j = 18740; j < 18750; j++) _solve(b, j);
for(j = 19580; j < 19590; j++) _solve(b, j);
for(j = 20420; j < 20430; j++) _solve(b, j);
for(j = 21260; j < 21270; j++) _solve(b, j);
for(j = 22100; j < 22110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 270; j < 280; j++) _solve(b, j);
for(j = 1110; j < 1120; j++) _solve(b, j);
for(j = 1950; j < 1960; j++) _solve(b, j);
for(j = 2790; j < 2800; j++) _solve(b, j);
for(j = 3630; j < 3640; j++) _solve(b, j);
for(j = 4470; j < 4480; j++) _solve(b, j);
for(j = 5310; j < 5320; j++) _solve(b, j);
for(j = 6150; j < 6160; j++) _solve(b, j);
for(j = 6990; j < 7000; j++) _solve(b, j);
for(j = 7830; j < 7840; j++) _solve(b, j);
for(j = 8670; j < 8680; j++) _solve(b, j);
for(j = 9510; j < 9520; j++) _solve(b, j);
for(j = 10350; j < 10360; j++) _solve(b, j);
for(j = 11190; j < 11200; j++) _solve(b, j);
for(j = 12030; j < 12040; j++) _solve(b, j);
for(j = 12870; j < 12880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13710; j < 13720; j++) _solve(b, j);
for(j = 14550; j < 14560; j++) _solve(b, j);
for(j = 15390; j < 15400; j++) _solve(b, j);
for(j = 16230; j < 16240; j++) _solve(b, j);
for(j = 17070; j < 17080; j++) _solve(b, j);
for(j = 17910; j < 17920; j++) _solve(b, j);
for(j = 18750; j < 18760; j++) _solve(b, j);
for(j = 19590; j < 19600; j++) _solve(b, j);
for(j = 20430; j < 20440; j++) _solve(b, j);
for(j = 21270; j < 21280; j++) _solve(b, j);
for(j = 22110; j < 22120; j++) _solve(b, j);
for(j = 22950; j < 22960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 280; j < 290; j++) _solve(b, j);
for(j = 1120; j < 1130; j++) _solve(b, j);
for(j = 1960; j < 1970; j++) _solve(b, j);
for(j = 2800; j < 2810; j++) _solve(b, j);
for(j = 3640; j < 3650; j++) _solve(b, j);
for(j = 4480; j < 4490; j++) _solve(b, j);
for(j = 5320; j < 5330; j++) _solve(b, j);
for(j = 6160; j < 6170; j++) _solve(b, j);
for(j = 7000; j < 7010; j++) _solve(b, j);
for(j = 7840; j < 7850; j++) _solve(b, j);
for(j = 8680; j < 8690; j++) _solve(b, j);
for(j = 9520; j < 9530; j++) _solve(b, j);
for(j = 10360; j < 10370; j++) _solve(b, j);
for(j = 11200; j < 11210; j++) _solve(b, j);
for(j = 12040; j < 12050; j++) _solve(b, j);
for(j = 12880; j < 12890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13720; j < 13730; j++) _solve(b, j);
for(j = 14560; j < 14570; j++) _solve(b, j);
for(j = 15400; j < 15410; j++) _solve(b, j);
for(j = 16240; j < 16250; j++) _solve(b, j);
for(j = 17080; j < 17090; j++) _solve(b, j);
for(j = 17920; j < 17930; j++) _solve(b, j);
for(j = 18760; j < 18770; j++) _solve(b, j);
for(j = 19600; j < 19610; j++) _solve(b, j);
for(j = 20440; j < 20450; j++) _solve(b, j);
for(j = 21280; j < 21290; j++) _solve(b, j);
for(j = 22120; j < 22130; j++) _solve(b, j);
for(j = 22960; j < 22970; j++) _solve(b, j);
for(j = 23800; j < 23810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 290; j < 300; j++) _solve(b, j);
for(j = 1130; j < 1140; j++) _solve(b, j);
for(j = 1970; j < 1980; j++) _solve(b, j);
for(j = 2810; j < 2820; j++) _solve(b, j);
for(j = 3650; j < 3660; j++) _solve(b, j);
for(j = 4490; j < 4500; j++) _solve(b, j);
for(j = 5330; j < 5340; j++) _solve(b, j);
for(j = 6170; j < 6180; j++) _solve(b, j);
for(j = 7010; j < 7020; j++) _solve(b, j);
for(j = 7850; j < 7860; j++) _solve(b, j);
for(j = 8690; j < 8700; j++) _solve(b, j);
for(j = 9530; j < 9540; j++) _solve(b, j);
for(j = 10370; j < 10380; j++) _solve(b, j);
for(j = 11210; j < 11220; j++) _solve(b, j);
for(j = 12050; j < 12060; j++) _solve(b, j);
for(j = 12890; j < 12900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13730; j < 13740; j++) _solve(b, j);
for(j = 14570; j < 14580; j++) _solve(b, j);
for(j = 15410; j < 15420; j++) _solve(b, j);
for(j = 16250; j < 16260; j++) _solve(b, j);
for(j = 17090; j < 17100; j++) _solve(b, j);
for(j = 17930; j < 17940; j++) _solve(b, j);
for(j = 18770; j < 18780; j++) _solve(b, j);
for(j = 19610; j < 19620; j++) _solve(b, j);
for(j = 20450; j < 20460; j++) _solve(b, j);
for(j = 21290; j < 21300; j++) _solve(b, j);
for(j = 22130; j < 22140; j++) _solve(b, j);
for(j = 22970; j < 22980; j++) _solve(b, j);
for(j = 23810; j < 23820; j++) _solve(b, j);
for(j = 24650; j < 24660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 300; j < 310; j++) _solve(b, j);
for(j = 1140; j < 1150; j++) _solve(b, j);
for(j = 1980; j < 1990; j++) _solve(b, j);
for(j = 2820; j < 2830; j++) _solve(b, j);
for(j = 3660; j < 3670; j++) _solve(b, j);
for(j = 4500; j < 4510; j++) _solve(b, j);
for(j = 5340; j < 5350; j++) _solve(b, j);
for(j = 6180; j < 6190; j++) _solve(b, j);
for(j = 7020; j < 7030; j++) _solve(b, j);
for(j = 7860; j < 7870; j++) _solve(b, j);
for(j = 8700; j < 8710; j++) _solve(b, j);
for(j = 9540; j < 9550; j++) _solve(b, j);
for(j = 10380; j < 10390; j++) _solve(b, j);
for(j = 11220; j < 11230; j++) _solve(b, j);
for(j = 12060; j < 12070; j++) _solve(b, j);
for(j = 12900; j < 12910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13740; j < 13750; j++) _solve(b, j);
for(j = 14580; j < 14590; j++) _solve(b, j);
for(j = 15420; j < 15430; j++) _solve(b, j);
for(j = 16260; j < 16270; j++) _solve(b, j);
for(j = 17100; j < 17110; j++) _solve(b, j);
for(j = 17940; j < 17950; j++) _solve(b, j);
for(j = 18780; j < 18790; j++) _solve(b, j);
for(j = 19620; j < 19630; j++) _solve(b, j);
for(j = 20460; j < 20470; j++) _solve(b, j);
for(j = 21300; j < 21310; j++) _solve(b, j);
for(j = 22140; j < 22150; j++) _solve(b, j);
for(j = 22980; j < 22990; j++) _solve(b, j);
for(j = 23820; j < 23830; j++) _solve(b, j);
for(j = 24660; j < 24670; j++) _solve(b, j);
for(j = 25500; j < 25510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 310; j < 320; j++) _solve(b, j);
for(j = 1150; j < 1160; j++) _solve(b, j);
for(j = 1990; j < 2000; j++) _solve(b, j);
for(j = 2830; j < 2840; j++) _solve(b, j);
for(j = 3670; j < 3680; j++) _solve(b, j);
for(j = 4510; j < 4520; j++) _solve(b, j);
for(j = 5350; j < 5360; j++) _solve(b, j);
for(j = 6190; j < 6200; j++) _solve(b, j);
for(j = 7030; j < 7040; j++) _solve(b, j);
for(j = 7870; j < 7880; j++) _solve(b, j);
for(j = 8710; j < 8720; j++) _solve(b, j);
for(j = 9550; j < 9560; j++) _solve(b, j);
for(j = 10390; j < 10400; j++) _solve(b, j);
for(j = 11230; j < 11240; j++) _solve(b, j);
for(j = 12070; j < 12080; j++) _solve(b, j);
for(j = 12910; j < 12920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13750; j < 13760; j++) _solve(b, j);
for(j = 14590; j < 14600; j++) _solve(b, j);
for(j = 15430; j < 15440; j++) _solve(b, j);
for(j = 16270; j < 16280; j++) _solve(b, j);
for(j = 17110; j < 17120; j++) _solve(b, j);
for(j = 17950; j < 17960; j++) _solve(b, j);
for(j = 18790; j < 18800; j++) _solve(b, j);
for(j = 19630; j < 19640; j++) _solve(b, j);
for(j = 20470; j < 20480; j++) _solve(b, j);
for(j = 21310; j < 21320; j++) _solve(b, j);
for(j = 22150; j < 22160; j++) _solve(b, j);
for(j = 22990; j < 23000; j++) _solve(b, j);
for(j = 23830; j < 23840; j++) _solve(b, j);
for(j = 24670; j < 24680; j++) _solve(b, j);
for(j = 25510; j < 25520; j++) _solve(b, j);
for(j = 26350; j < 26360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 320; j < 330; j++) _solve(b, j);
for(j = 1160; j < 1170; j++) _solve(b, j);
for(j = 2000; j < 2010; j++) _solve(b, j);
for(j = 2840; j < 2850; j++) _solve(b, j);
for(j = 3680; j < 3690; j++) _solve(b, j);
for(j = 4520; j < 4530; j++) _solve(b, j);
for(j = 5360; j < 5370; j++) _solve(b, j);
for(j = 6200; j < 6210; j++) _solve(b, j);
for(j = 7040; j < 7050; j++) _solve(b, j);
for(j = 7880; j < 7890; j++) _solve(b, j);
for(j = 8720; j < 8730; j++) _solve(b, j);
for(j = 9560; j < 9570; j++) _solve(b, j);
for(j = 10400; j < 10410; j++) _solve(b, j);
for(j = 11240; j < 11250; j++) _solve(b, j);
for(j = 12080; j < 12090; j++) _solve(b, j);
for(j = 12920; j < 12930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13760; j < 13770; j++) _solve(b, j);
for(j = 14600; j < 14610; j++) _solve(b, j);
for(j = 15440; j < 15450; j++) _solve(b, j);
for(j = 16280; j < 16290; j++) _solve(b, j);
for(j = 17120; j < 17130; j++) _solve(b, j);
for(j = 17960; j < 17970; j++) _solve(b, j);
for(j = 18800; j < 18810; j++) _solve(b, j);
for(j = 19640; j < 19650; j++) _solve(b, j);
for(j = 20480; j < 20490; j++) _solve(b, j);
for(j = 21320; j < 21330; j++) _solve(b, j);
for(j = 22160; j < 22170; j++) _solve(b, j);
for(j = 23000; j < 23010; j++) _solve(b, j);
for(j = 23840; j < 23850; j++) _solve(b, j);
for(j = 24680; j < 24690; j++) _solve(b, j);
for(j = 25520; j < 25530; j++) _solve(b, j);
for(j = 26360; j < 26370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27200; j < 27210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 330; j < 340; j++) _solve(b, j);
for(j = 1170; j < 1180; j++) _solve(b, j);
for(j = 2010; j < 2020; j++) _solve(b, j);
for(j = 2850; j < 2860; j++) _solve(b, j);
for(j = 3690; j < 3700; j++) _solve(b, j);
for(j = 4530; j < 4540; j++) _solve(b, j);
for(j = 5370; j < 5380; j++) _solve(b, j);
for(j = 6210; j < 6220; j++) _solve(b, j);
for(j = 7050; j < 7060; j++) _solve(b, j);
for(j = 7890; j < 7900; j++) _solve(b, j);
for(j = 8730; j < 8740; j++) _solve(b, j);
for(j = 9570; j < 9580; j++) _solve(b, j);
for(j = 10410; j < 10420; j++) _solve(b, j);
for(j = 11250; j < 11260; j++) _solve(b, j);
for(j = 12090; j < 12100; j++) _solve(b, j);
for(j = 12930; j < 12940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13770; j < 13780; j++) _solve(b, j);
for(j = 14610; j < 14620; j++) _solve(b, j);
for(j = 15450; j < 15460; j++) _solve(b, j);
for(j = 16290; j < 16300; j++) _solve(b, j);
for(j = 17130; j < 17140; j++) _solve(b, j);
for(j = 17970; j < 17980; j++) _solve(b, j);
for(j = 18810; j < 18820; j++) _solve(b, j);
for(j = 19650; j < 19660; j++) _solve(b, j);
for(j = 20490; j < 20500; j++) _solve(b, j);
for(j = 21330; j < 21340; j++) _solve(b, j);
for(j = 22170; j < 22180; j++) _solve(b, j);
for(j = 23010; j < 23020; j++) _solve(b, j);
for(j = 23850; j < 23860; j++) _solve(b, j);
for(j = 24690; j < 24700; j++) _solve(b, j);
for(j = 25530; j < 25540; j++) _solve(b, j);
for(j = 26370; j < 26380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27210; j < 27220; j++) _solve(b, j);
for(j = 28050; j < 28060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 340; j < 350; j++) _solve(b, j);
for(j = 1180; j < 1190; j++) _solve(b, j);
for(j = 2020; j < 2030; j++) _solve(b, j);
for(j = 2860; j < 2870; j++) _solve(b, j);
for(j = 3700; j < 3710; j++) _solve(b, j);
for(j = 4540; j < 4550; j++) _solve(b, j);
for(j = 5380; j < 5390; j++) _solve(b, j);
for(j = 6220; j < 6230; j++) _solve(b, j);
for(j = 7060; j < 7070; j++) _solve(b, j);
for(j = 7900; j < 7910; j++) _solve(b, j);
for(j = 8740; j < 8750; j++) _solve(b, j);
for(j = 9580; j < 9590; j++) _solve(b, j);
for(j = 10420; j < 10430; j++) _solve(b, j);
for(j = 11260; j < 11270; j++) _solve(b, j);
for(j = 12100; j < 12110; j++) _solve(b, j);
for(j = 12940; j < 12950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13780; j < 13790; j++) _solve(b, j);
for(j = 14620; j < 14630; j++) _solve(b, j);
for(j = 15460; j < 15470; j++) _solve(b, j);
for(j = 16300; j < 16310; j++) _solve(b, j);
for(j = 17140; j < 17150; j++) _solve(b, j);
for(j = 17980; j < 17990; j++) _solve(b, j);
for(j = 18820; j < 18830; j++) _solve(b, j);
for(j = 19660; j < 19670; j++) _solve(b, j);
for(j = 20500; j < 20510; j++) _solve(b, j);
for(j = 21340; j < 21350; j++) _solve(b, j);
for(j = 22180; j < 22190; j++) _solve(b, j);
for(j = 23020; j < 23030; j++) _solve(b, j);
for(j = 23860; j < 23870; j++) _solve(b, j);
for(j = 24700; j < 24710; j++) _solve(b, j);
for(j = 25540; j < 25550; j++) _solve(b, j);
for(j = 26380; j < 26390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27220; j < 27230; j++) _solve(b, j);
for(j = 28060; j < 28070; j++) _solve(b, j);
for(j = 28900; j < 28910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 350; j < 360; j++) _solve(b, j);
for(j = 1190; j < 1200; j++) _solve(b, j);
for(j = 2030; j < 2040; j++) _solve(b, j);
for(j = 2870; j < 2880; j++) _solve(b, j);
for(j = 3710; j < 3720; j++) _solve(b, j);
for(j = 4550; j < 4560; j++) _solve(b, j);
for(j = 5390; j < 5400; j++) _solve(b, j);
for(j = 6230; j < 6240; j++) _solve(b, j);
for(j = 7070; j < 7080; j++) _solve(b, j);
for(j = 7910; j < 7920; j++) _solve(b, j);
for(j = 8750; j < 8760; j++) _solve(b, j);
for(j = 9590; j < 9600; j++) _solve(b, j);
for(j = 10430; j < 10440; j++) _solve(b, j);
for(j = 11270; j < 11280; j++) _solve(b, j);
for(j = 12110; j < 12120; j++) _solve(b, j);
for(j = 12950; j < 12960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13790; j < 13800; j++) _solve(b, j);
for(j = 14630; j < 14640; j++) _solve(b, j);
for(j = 15470; j < 15480; j++) _solve(b, j);
for(j = 16310; j < 16320; j++) _solve(b, j);
for(j = 17150; j < 17160; j++) _solve(b, j);
for(j = 17990; j < 18000; j++) _solve(b, j);
for(j = 18830; j < 18840; j++) _solve(b, j);
for(j = 19670; j < 19680; j++) _solve(b, j);
for(j = 20510; j < 20520; j++) _solve(b, j);
for(j = 21350; j < 21360; j++) _solve(b, j);
for(j = 22190; j < 22200; j++) _solve(b, j);
for(j = 23030; j < 23040; j++) _solve(b, j);
for(j = 23870; j < 23880; j++) _solve(b, j);
for(j = 24710; j < 24720; j++) _solve(b, j);
for(j = 25550; j < 25560; j++) _solve(b, j);
for(j = 26390; j < 26400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27230; j < 27240; j++) _solve(b, j);
for(j = 28070; j < 28080; j++) _solve(b, j);
for(j = 28910; j < 28920; j++) _solve(b, j);
for(j = 29750; j < 29760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 360; j < 370; j++) _solve(b, j);
for(j = 1200; j < 1210; j++) _solve(b, j);
for(j = 2040; j < 2050; j++) _solve(b, j);
for(j = 2880; j < 2890; j++) _solve(b, j);
for(j = 3720; j < 3730; j++) _solve(b, j);
for(j = 4560; j < 4570; j++) _solve(b, j);
for(j = 5400; j < 5410; j++) _solve(b, j);
for(j = 6240; j < 6250; j++) _solve(b, j);
for(j = 7080; j < 7090; j++) _solve(b, j);
for(j = 7920; j < 7930; j++) _solve(b, j);
for(j = 8760; j < 8770; j++) _solve(b, j);
for(j = 9600; j < 9610; j++) _solve(b, j);
for(j = 10440; j < 10450; j++) _solve(b, j);
for(j = 11280; j < 11290; j++) _solve(b, j);
for(j = 12120; j < 12130; j++) _solve(b, j);
for(j = 12960; j < 12970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13800; j < 13810; j++) _solve(b, j);
for(j = 14640; j < 14650; j++) _solve(b, j);
for(j = 15480; j < 15490; j++) _solve(b, j);
for(j = 16320; j < 16330; j++) _solve(b, j);
for(j = 17160; j < 17170; j++) _solve(b, j);
for(j = 18000; j < 18010; j++) _solve(b, j);
for(j = 18840; j < 18850; j++) _solve(b, j);
for(j = 19680; j < 19690; j++) _solve(b, j);
for(j = 20520; j < 20530; j++) _solve(b, j);
for(j = 21360; j < 21370; j++) _solve(b, j);
for(j = 22200; j < 22210; j++) _solve(b, j);
for(j = 23040; j < 23050; j++) _solve(b, j);
for(j = 23880; j < 23890; j++) _solve(b, j);
for(j = 24720; j < 24730; j++) _solve(b, j);
for(j = 25560; j < 25570; j++) _solve(b, j);
for(j = 26400; j < 26410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27240; j < 27250; j++) _solve(b, j);
for(j = 28080; j < 28090; j++) _solve(b, j);
for(j = 28920; j < 28930; j++) _solve(b, j);
for(j = 29760; j < 29770; j++) _solve(b, j);
for(j = 30600; j < 30610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 370; j < 380; j++) _solve(b, j);
for(j = 1210; j < 1220; j++) _solve(b, j);
for(j = 2050; j < 2060; j++) _solve(b, j);
for(j = 2890; j < 2900; j++) _solve(b, j);
for(j = 3730; j < 3740; j++) _solve(b, j);
for(j = 4570; j < 4580; j++) _solve(b, j);
for(j = 5410; j < 5420; j++) _solve(b, j);
for(j = 6250; j < 6260; j++) _solve(b, j);
for(j = 7090; j < 7100; j++) _solve(b, j);
for(j = 7930; j < 7940; j++) _solve(b, j);
for(j = 8770; j < 8780; j++) _solve(b, j);
for(j = 9610; j < 9620; j++) _solve(b, j);
for(j = 10450; j < 10460; j++) _solve(b, j);
for(j = 11290; j < 11300; j++) _solve(b, j);
for(j = 12130; j < 12140; j++) _solve(b, j);
for(j = 12970; j < 12980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13810; j < 13820; j++) _solve(b, j);
for(j = 14650; j < 14660; j++) _solve(b, j);
for(j = 15490; j < 15500; j++) _solve(b, j);
for(j = 16330; j < 16340; j++) _solve(b, j);
for(j = 17170; j < 17180; j++) _solve(b, j);
for(j = 18010; j < 18020; j++) _solve(b, j);
for(j = 18850; j < 18860; j++) _solve(b, j);
for(j = 19690; j < 19700; j++) _solve(b, j);
for(j = 20530; j < 20540; j++) _solve(b, j);
for(j = 21370; j < 21380; j++) _solve(b, j);
for(j = 22210; j < 22220; j++) _solve(b, j);
for(j = 23050; j < 23060; j++) _solve(b, j);
for(j = 23890; j < 23900; j++) _solve(b, j);
for(j = 24730; j < 24740; j++) _solve(b, j);
for(j = 25570; j < 25580; j++) _solve(b, j);
for(j = 26410; j < 26420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27250; j < 27260; j++) _solve(b, j);
for(j = 28090; j < 28100; j++) _solve(b, j);
for(j = 28930; j < 28940; j++) _solve(b, j);
for(j = 29770; j < 29780; j++) _solve(b, j);
for(j = 30610; j < 30620; j++) _solve(b, j);
for(j = 31450; j < 31460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 380; j < 390; j++) _solve(b, j);
for(j = 1220; j < 1230; j++) _solve(b, j);
for(j = 2060; j < 2070; j++) _solve(b, j);
for(j = 2900; j < 2910; j++) _solve(b, j);
for(j = 3740; j < 3750; j++) _solve(b, j);
for(j = 4580; j < 4590; j++) _solve(b, j);
for(j = 5420; j < 5430; j++) _solve(b, j);
for(j = 6260; j < 6270; j++) _solve(b, j);
for(j = 7100; j < 7110; j++) _solve(b, j);
for(j = 7940; j < 7950; j++) _solve(b, j);
for(j = 8780; j < 8790; j++) _solve(b, j);
for(j = 9620; j < 9630; j++) _solve(b, j);
for(j = 10460; j < 10470; j++) _solve(b, j);
for(j = 11300; j < 11310; j++) _solve(b, j);
for(j = 12140; j < 12150; j++) _solve(b, j);
for(j = 12980; j < 12990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13820; j < 13830; j++) _solve(b, j);
for(j = 14660; j < 14670; j++) _solve(b, j);
for(j = 15500; j < 15510; j++) _solve(b, j);
for(j = 16340; j < 16350; j++) _solve(b, j);
for(j = 17180; j < 17190; j++) _solve(b, j);
for(j = 18020; j < 18030; j++) _solve(b, j);
for(j = 18860; j < 18870; j++) _solve(b, j);
for(j = 19700; j < 19710; j++) _solve(b, j);
for(j = 20540; j < 20550; j++) _solve(b, j);
for(j = 21380; j < 21390; j++) _solve(b, j);
for(j = 22220; j < 22230; j++) _solve(b, j);
for(j = 23060; j < 23070; j++) _solve(b, j);
for(j = 23900; j < 23910; j++) _solve(b, j);
for(j = 24740; j < 24750; j++) _solve(b, j);
for(j = 25580; j < 25590; j++) _solve(b, j);
for(j = 26420; j < 26430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27260; j < 27270; j++) _solve(b, j);
for(j = 28100; j < 28110; j++) _solve(b, j);
for(j = 28940; j < 28950; j++) _solve(b, j);
for(j = 29780; j < 29790; j++) _solve(b, j);
for(j = 30620; j < 30630; j++) _solve(b, j);
for(j = 31460; j < 31470; j++) _solve(b, j);
for(j = 32300; j < 32310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 390; j < 400; j++) _solve(b, j);
for(j = 1230; j < 1240; j++) _solve(b, j);
for(j = 2070; j < 2080; j++) _solve(b, j);
for(j = 2910; j < 2920; j++) _solve(b, j);
for(j = 3750; j < 3760; j++) _solve(b, j);
for(j = 4590; j < 4600; j++) _solve(b, j);
for(j = 5430; j < 5440; j++) _solve(b, j);
for(j = 6270; j < 6280; j++) _solve(b, j);
for(j = 7110; j < 7120; j++) _solve(b, j);
for(j = 7950; j < 7960; j++) _solve(b, j);
for(j = 8790; j < 8800; j++) _solve(b, j);
for(j = 9630; j < 9640; j++) _solve(b, j);
for(j = 10470; j < 10480; j++) _solve(b, j);
for(j = 11310; j < 11320; j++) _solve(b, j);
for(j = 12150; j < 12160; j++) _solve(b, j);
for(j = 12990; j < 13000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13830; j < 13840; j++) _solve(b, j);
for(j = 14670; j < 14680; j++) _solve(b, j);
for(j = 15510; j < 15520; j++) _solve(b, j);
for(j = 16350; j < 16360; j++) _solve(b, j);
for(j = 17190; j < 17200; j++) _solve(b, j);
for(j = 18030; j < 18040; j++) _solve(b, j);
for(j = 18870; j < 18880; j++) _solve(b, j);
for(j = 19710; j < 19720; j++) _solve(b, j);
for(j = 20550; j < 20560; j++) _solve(b, j);
for(j = 21390; j < 21400; j++) _solve(b, j);
for(j = 22230; j < 22240; j++) _solve(b, j);
for(j = 23070; j < 23080; j++) _solve(b, j);
for(j = 23910; j < 23920; j++) _solve(b, j);
for(j = 24750; j < 24760; j++) _solve(b, j);
for(j = 25590; j < 25600; j++) _solve(b, j);
for(j = 26430; j < 26440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27270; j < 27280; j++) _solve(b, j);
for(j = 28110; j < 28120; j++) _solve(b, j);
for(j = 28950; j < 28960; j++) _solve(b, j);
for(j = 29790; j < 29800; j++) _solve(b, j);
for(j = 30630; j < 30640; j++) _solve(b, j);
for(j = 31470; j < 31480; j++) _solve(b, j);
for(j = 32310; j < 32320; j++) _solve(b, j);
for(j = 33150; j < 33160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 400; j < 410; j++) _solve(b, j);
for(j = 1240; j < 1250; j++) _solve(b, j);
for(j = 2080; j < 2090; j++) _solve(b, j);
for(j = 2920; j < 2930; j++) _solve(b, j);
for(j = 3760; j < 3770; j++) _solve(b, j);
for(j = 4600; j < 4610; j++) _solve(b, j);
for(j = 5440; j < 5450; j++) _solve(b, j);
for(j = 6280; j < 6290; j++) _solve(b, j);
for(j = 7120; j < 7130; j++) _solve(b, j);
for(j = 7960; j < 7970; j++) _solve(b, j);
for(j = 8800; j < 8810; j++) _solve(b, j);
for(j = 9640; j < 9650; j++) _solve(b, j);
for(j = 10480; j < 10490; j++) _solve(b, j);
for(j = 11320; j < 11330; j++) _solve(b, j);
for(j = 12160; j < 12170; j++) _solve(b, j);
for(j = 13000; j < 13010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13840; j < 13850; j++) _solve(b, j);
for(j = 14680; j < 14690; j++) _solve(b, j);
for(j = 15520; j < 15530; j++) _solve(b, j);
for(j = 16360; j < 16370; j++) _solve(b, j);
for(j = 17200; j < 17210; j++) _solve(b, j);
for(j = 18040; j < 18050; j++) _solve(b, j);
for(j = 18880; j < 18890; j++) _solve(b, j);
for(j = 19720; j < 19730; j++) _solve(b, j);
for(j = 20560; j < 20570; j++) _solve(b, j);
for(j = 21400; j < 21410; j++) _solve(b, j);
for(j = 22240; j < 22250; j++) _solve(b, j);
for(j = 23080; j < 23090; j++) _solve(b, j);
for(j = 23920; j < 23930; j++) _solve(b, j);
for(j = 24760; j < 24770; j++) _solve(b, j);
for(j = 25600; j < 25610; j++) _solve(b, j);
for(j = 26440; j < 26450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27280; j < 27290; j++) _solve(b, j);
for(j = 28120; j < 28130; j++) _solve(b, j);
for(j = 28960; j < 28970; j++) _solve(b, j);
for(j = 29800; j < 29810; j++) _solve(b, j);
for(j = 30640; j < 30650; j++) _solve(b, j);
for(j = 31480; j < 31490; j++) _solve(b, j);
for(j = 32320; j < 32330; j++) _solve(b, j);
for(j = 33160; j < 33170; j++) _solve(b, j);
for(j = 34000; j < 34010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 410; j < 420; j++) _solve(b, j);
for(j = 1250; j < 1260; j++) _solve(b, j);
for(j = 2090; j < 2100; j++) _solve(b, j);
for(j = 2930; j < 2940; j++) _solve(b, j);
for(j = 3770; j < 3780; j++) _solve(b, j);
for(j = 4610; j < 4620; j++) _solve(b, j);
for(j = 5450; j < 5460; j++) _solve(b, j);
for(j = 6290; j < 6300; j++) _solve(b, j);
for(j = 7130; j < 7140; j++) _solve(b, j);
for(j = 7970; j < 7980; j++) _solve(b, j);
for(j = 8810; j < 8820; j++) _solve(b, j);
for(j = 9650; j < 9660; j++) _solve(b, j);
for(j = 10490; j < 10500; j++) _solve(b, j);
for(j = 11330; j < 11340; j++) _solve(b, j);
for(j = 12170; j < 12180; j++) _solve(b, j);
for(j = 13010; j < 13020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13850; j < 13860; j++) _solve(b, j);
for(j = 14690; j < 14700; j++) _solve(b, j);
for(j = 15530; j < 15540; j++) _solve(b, j);
for(j = 16370; j < 16380; j++) _solve(b, j);
for(j = 17210; j < 17220; j++) _solve(b, j);
for(j = 18050; j < 18060; j++) _solve(b, j);
for(j = 18890; j < 18900; j++) _solve(b, j);
for(j = 19730; j < 19740; j++) _solve(b, j);
for(j = 20570; j < 20580; j++) _solve(b, j);
for(j = 21410; j < 21420; j++) _solve(b, j);
for(j = 22250; j < 22260; j++) _solve(b, j);
for(j = 23090; j < 23100; j++) _solve(b, j);
for(j = 23930; j < 23940; j++) _solve(b, j);
for(j = 24770; j < 24780; j++) _solve(b, j);
for(j = 25610; j < 25620; j++) _solve(b, j);
for(j = 26450; j < 26460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27290; j < 27300; j++) _solve(b, j);
for(j = 28130; j < 28140; j++) _solve(b, j);
for(j = 28970; j < 28980; j++) _solve(b, j);
for(j = 29810; j < 29820; j++) _solve(b, j);
for(j = 30650; j < 30660; j++) _solve(b, j);
for(j = 31490; j < 31500; j++) _solve(b, j);
for(j = 32330; j < 32340; j++) _solve(b, j);
for(j = 33170; j < 33180; j++) _solve(b, j);
for(j = 34010; j < 34020; j++) _solve(b, j);
for(j = 34850; j < 34860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 420; j < 430; j++) _solve(b, j);
for(j = 1260; j < 1270; j++) _solve(b, j);
for(j = 2100; j < 2110; j++) _solve(b, j);
for(j = 2940; j < 2950; j++) _solve(b, j);
for(j = 3780; j < 3790; j++) _solve(b, j);
for(j = 4620; j < 4630; j++) _solve(b, j);
for(j = 5460; j < 5470; j++) _solve(b, j);
for(j = 6300; j < 6310; j++) _solve(b, j);
for(j = 7140; j < 7150; j++) _solve(b, j);
for(j = 7980; j < 7990; j++) _solve(b, j);
for(j = 8820; j < 8830; j++) _solve(b, j);
for(j = 9660; j < 9670; j++) _solve(b, j);
for(j = 10500; j < 10510; j++) _solve(b, j);
for(j = 11340; j < 11350; j++) _solve(b, j);
for(j = 12180; j < 12190; j++) _solve(b, j);
for(j = 13020; j < 13030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13860; j < 13870; j++) _solve(b, j);
for(j = 14700; j < 14710; j++) _solve(b, j);
for(j = 15540; j < 15550; j++) _solve(b, j);
for(j = 16380; j < 16390; j++) _solve(b, j);
for(j = 17220; j < 17230; j++) _solve(b, j);
for(j = 18060; j < 18070; j++) _solve(b, j);
for(j = 18900; j < 18910; j++) _solve(b, j);
for(j = 19740; j < 19750; j++) _solve(b, j);
for(j = 20580; j < 20590; j++) _solve(b, j);
for(j = 21420; j < 21430; j++) _solve(b, j);
for(j = 22260; j < 22270; j++) _solve(b, j);
for(j = 23100; j < 23110; j++) _solve(b, j);
for(j = 23940; j < 23950; j++) _solve(b, j);
for(j = 24780; j < 24790; j++) _solve(b, j);
for(j = 25620; j < 25630; j++) _solve(b, j);
for(j = 26460; j < 26470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27300; j < 27310; j++) _solve(b, j);
for(j = 28140; j < 28150; j++) _solve(b, j);
for(j = 28980; j < 28990; j++) _solve(b, j);
for(j = 29820; j < 29830; j++) _solve(b, j);
for(j = 30660; j < 30670; j++) _solve(b, j);
for(j = 31500; j < 31510; j++) _solve(b, j);
for(j = 32340; j < 32350; j++) _solve(b, j);
for(j = 33180; j < 33190; j++) _solve(b, j);
for(j = 34020; j < 34030; j++) _solve(b, j);
for(j = 34860; j < 34870; j++) _solve(b, j);
for(j = 35700; j < 35710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 430; j < 440; j++) _solve(b, j);
for(j = 1270; j < 1280; j++) _solve(b, j);
for(j = 2110; j < 2120; j++) _solve(b, j);
for(j = 2950; j < 2960; j++) _solve(b, j);
for(j = 3790; j < 3800; j++) _solve(b, j);
for(j = 4630; j < 4640; j++) _solve(b, j);
for(j = 5470; j < 5480; j++) _solve(b, j);
for(j = 6310; j < 6320; j++) _solve(b, j);
for(j = 7150; j < 7160; j++) _solve(b, j);
for(j = 7990; j < 8000; j++) _solve(b, j);
for(j = 8830; j < 8840; j++) _solve(b, j);
for(j = 9670; j < 9680; j++) _solve(b, j);
for(j = 10510; j < 10520; j++) _solve(b, j);
for(j = 11350; j < 11360; j++) _solve(b, j);
for(j = 12190; j < 12200; j++) _solve(b, j);
for(j = 13030; j < 13040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13870; j < 13880; j++) _solve(b, j);
for(j = 14710; j < 14720; j++) _solve(b, j);
for(j = 15550; j < 15560; j++) _solve(b, j);
for(j = 16390; j < 16400; j++) _solve(b, j);
for(j = 17230; j < 17240; j++) _solve(b, j);
for(j = 18070; j < 18080; j++) _solve(b, j);
for(j = 18910; j < 18920; j++) _solve(b, j);
for(j = 19750; j < 19760; j++) _solve(b, j);
for(j = 20590; j < 20600; j++) _solve(b, j);
for(j = 21430; j < 21440; j++) _solve(b, j);
for(j = 22270; j < 22280; j++) _solve(b, j);
for(j = 23110; j < 23120; j++) _solve(b, j);
for(j = 23950; j < 23960; j++) _solve(b, j);
for(j = 24790; j < 24800; j++) _solve(b, j);
for(j = 25630; j < 25640; j++) _solve(b, j);
for(j = 26470; j < 26480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27310; j < 27320; j++) _solve(b, j);
for(j = 28150; j < 28160; j++) _solve(b, j);
for(j = 28990; j < 29000; j++) _solve(b, j);
for(j = 29830; j < 29840; j++) _solve(b, j);
for(j = 30670; j < 30680; j++) _solve(b, j);
for(j = 31510; j < 31520; j++) _solve(b, j);
for(j = 32350; j < 32360; j++) _solve(b, j);
for(j = 33190; j < 33200; j++) _solve(b, j);
for(j = 34030; j < 34040; j++) _solve(b, j);
for(j = 34870; j < 34880; j++) _solve(b, j);
for(j = 35710; j < 35720; j++) _solve(b, j);
for(j = 36550; j < 36560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 440; j < 450; j++) _solve(b, j);
for(j = 1280; j < 1290; j++) _solve(b, j);
for(j = 2120; j < 2130; j++) _solve(b, j);
for(j = 2960; j < 2970; j++) _solve(b, j);
for(j = 3800; j < 3810; j++) _solve(b, j);
for(j = 4640; j < 4650; j++) _solve(b, j);
for(j = 5480; j < 5490; j++) _solve(b, j);
for(j = 6320; j < 6330; j++) _solve(b, j);
for(j = 7160; j < 7170; j++) _solve(b, j);
for(j = 8000; j < 8010; j++) _solve(b, j);
for(j = 8840; j < 8850; j++) _solve(b, j);
for(j = 9680; j < 9690; j++) _solve(b, j);
for(j = 10520; j < 10530; j++) _solve(b, j);
for(j = 11360; j < 11370; j++) _solve(b, j);
for(j = 12200; j < 12210; j++) _solve(b, j);
for(j = 13040; j < 13050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13880; j < 13890; j++) _solve(b, j);
for(j = 14720; j < 14730; j++) _solve(b, j);
for(j = 15560; j < 15570; j++) _solve(b, j);
for(j = 16400; j < 16410; j++) _solve(b, j);
for(j = 17240; j < 17250; j++) _solve(b, j);
for(j = 18080; j < 18090; j++) _solve(b, j);
for(j = 18920; j < 18930; j++) _solve(b, j);
for(j = 19760; j < 19770; j++) _solve(b, j);
for(j = 20600; j < 20610; j++) _solve(b, j);
for(j = 21440; j < 21450; j++) _solve(b, j);
for(j = 22280; j < 22290; j++) _solve(b, j);
for(j = 23120; j < 23130; j++) _solve(b, j);
for(j = 23960; j < 23970; j++) _solve(b, j);
for(j = 24800; j < 24810; j++) _solve(b, j);
for(j = 25640; j < 25650; j++) _solve(b, j);
for(j = 26480; j < 26490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27320; j < 27330; j++) _solve(b, j);
for(j = 28160; j < 28170; j++) _solve(b, j);
for(j = 29000; j < 29010; j++) _solve(b, j);
for(j = 29840; j < 29850; j++) _solve(b, j);
for(j = 30680; j < 30690; j++) _solve(b, j);
for(j = 31520; j < 31530; j++) _solve(b, j);
for(j = 32360; j < 32370; j++) _solve(b, j);
for(j = 33200; j < 33210; j++) _solve(b, j);
for(j = 34040; j < 34050; j++) _solve(b, j);
for(j = 34880; j < 34890; j++) _solve(b, j);
for(j = 35720; j < 35730; j++) _solve(b, j);
for(j = 36560; j < 36570; j++) _solve(b, j);
for(j = 37400; j < 37410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 450; j < 460; j++) _solve(b, j);
for(j = 1290; j < 1300; j++) _solve(b, j);
for(j = 2130; j < 2140; j++) _solve(b, j);
for(j = 2970; j < 2980; j++) _solve(b, j);
for(j = 3810; j < 3820; j++) _solve(b, j);
for(j = 4650; j < 4660; j++) _solve(b, j);
for(j = 5490; j < 5500; j++) _solve(b, j);
for(j = 6330; j < 6340; j++) _solve(b, j);
for(j = 7170; j < 7180; j++) _solve(b, j);
for(j = 8010; j < 8020; j++) _solve(b, j);
for(j = 8850; j < 8860; j++) _solve(b, j);
for(j = 9690; j < 9700; j++) _solve(b, j);
for(j = 10530; j < 10540; j++) _solve(b, j);
for(j = 11370; j < 11380; j++) _solve(b, j);
for(j = 12210; j < 12220; j++) _solve(b, j);
for(j = 13050; j < 13060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13890; j < 13900; j++) _solve(b, j);
for(j = 14730; j < 14740; j++) _solve(b, j);
for(j = 15570; j < 15580; j++) _solve(b, j);
for(j = 16410; j < 16420; j++) _solve(b, j);
for(j = 17250; j < 17260; j++) _solve(b, j);
for(j = 18090; j < 18100; j++) _solve(b, j);
for(j = 18930; j < 18940; j++) _solve(b, j);
for(j = 19770; j < 19780; j++) _solve(b, j);
for(j = 20610; j < 20620; j++) _solve(b, j);
for(j = 21450; j < 21460; j++) _solve(b, j);
for(j = 22290; j < 22300; j++) _solve(b, j);
for(j = 23130; j < 23140; j++) _solve(b, j);
for(j = 23970; j < 23980; j++) _solve(b, j);
for(j = 24810; j < 24820; j++) _solve(b, j);
for(j = 25650; j < 25660; j++) _solve(b, j);
for(j = 26490; j < 26500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27330; j < 27340; j++) _solve(b, j);
for(j = 28170; j < 28180; j++) _solve(b, j);
for(j = 29010; j < 29020; j++) _solve(b, j);
for(j = 29850; j < 29860; j++) _solve(b, j);
for(j = 30690; j < 30700; j++) _solve(b, j);
for(j = 31530; j < 31540; j++) _solve(b, j);
for(j = 32370; j < 32380; j++) _solve(b, j);
for(j = 33210; j < 33220; j++) _solve(b, j);
for(j = 34050; j < 34060; j++) _solve(b, j);
for(j = 34890; j < 34900; j++) _solve(b, j);
for(j = 35730; j < 35740; j++) _solve(b, j);
for(j = 36570; j < 36580; j++) _solve(b, j);
for(j = 37410; j < 37420; j++) _solve(b, j);
for(j = 38250; j < 38260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 460; j < 470; j++) _solve(b, j);
for(j = 1300; j < 1310; j++) _solve(b, j);
for(j = 2140; j < 2150; j++) _solve(b, j);
for(j = 2980; j < 2990; j++) _solve(b, j);
for(j = 3820; j < 3830; j++) _solve(b, j);
for(j = 4660; j < 4670; j++) _solve(b, j);
for(j = 5500; j < 5510; j++) _solve(b, j);
for(j = 6340; j < 6350; j++) _solve(b, j);
for(j = 7180; j < 7190; j++) _solve(b, j);
for(j = 8020; j < 8030; j++) _solve(b, j);
for(j = 8860; j < 8870; j++) _solve(b, j);
for(j = 9700; j < 9710; j++) _solve(b, j);
for(j = 10540; j < 10550; j++) _solve(b, j);
for(j = 11380; j < 11390; j++) _solve(b, j);
for(j = 12220; j < 12230; j++) _solve(b, j);
for(j = 13060; j < 13070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13900; j < 13910; j++) _solve(b, j);
for(j = 14740; j < 14750; j++) _solve(b, j);
for(j = 15580; j < 15590; j++) _solve(b, j);
for(j = 16420; j < 16430; j++) _solve(b, j);
for(j = 17260; j < 17270; j++) _solve(b, j);
for(j = 18100; j < 18110; j++) _solve(b, j);
for(j = 18940; j < 18950; j++) _solve(b, j);
for(j = 19780; j < 19790; j++) _solve(b, j);
for(j = 20620; j < 20630; j++) _solve(b, j);
for(j = 21460; j < 21470; j++) _solve(b, j);
for(j = 22300; j < 22310; j++) _solve(b, j);
for(j = 23140; j < 23150; j++) _solve(b, j);
for(j = 23980; j < 23990; j++) _solve(b, j);
for(j = 24820; j < 24830; j++) _solve(b, j);
for(j = 25660; j < 25670; j++) _solve(b, j);
for(j = 26500; j < 26510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27340; j < 27350; j++) _solve(b, j);
for(j = 28180; j < 28190; j++) _solve(b, j);
for(j = 29020; j < 29030; j++) _solve(b, j);
for(j = 29860; j < 29870; j++) _solve(b, j);
for(j = 30700; j < 30710; j++) _solve(b, j);
for(j = 31540; j < 31550; j++) _solve(b, j);
for(j = 32380; j < 32390; j++) _solve(b, j);
for(j = 33220; j < 33230; j++) _solve(b, j);
for(j = 34060; j < 34070; j++) _solve(b, j);
for(j = 34900; j < 34910; j++) _solve(b, j);
for(j = 35740; j < 35750; j++) _solve(b, j);
for(j = 36580; j < 36590; j++) _solve(b, j);
for(j = 37420; j < 37430; j++) _solve(b, j);
for(j = 38260; j < 38270; j++) _solve(b, j);
for(j = 39100; j < 39110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 470; j < 480; j++) _solve(b, j);
for(j = 1310; j < 1320; j++) _solve(b, j);
for(j = 2150; j < 2160; j++) _solve(b, j);
for(j = 2990; j < 3000; j++) _solve(b, j);
for(j = 3830; j < 3840; j++) _solve(b, j);
for(j = 4670; j < 4680; j++) _solve(b, j);
for(j = 5510; j < 5520; j++) _solve(b, j);
for(j = 6350; j < 6360; j++) _solve(b, j);
for(j = 7190; j < 7200; j++) _solve(b, j);
for(j = 8030; j < 8040; j++) _solve(b, j);
for(j = 8870; j < 8880; j++) _solve(b, j);
for(j = 9710; j < 9720; j++) _solve(b, j);
for(j = 10550; j < 10560; j++) _solve(b, j);
for(j = 11390; j < 11400; j++) _solve(b, j);
for(j = 12230; j < 12240; j++) _solve(b, j);
for(j = 13070; j < 13080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13910; j < 13920; j++) _solve(b, j);
for(j = 14750; j < 14760; j++) _solve(b, j);
for(j = 15590; j < 15600; j++) _solve(b, j);
for(j = 16430; j < 16440; j++) _solve(b, j);
for(j = 17270; j < 17280; j++) _solve(b, j);
for(j = 18110; j < 18120; j++) _solve(b, j);
for(j = 18950; j < 18960; j++) _solve(b, j);
for(j = 19790; j < 19800; j++) _solve(b, j);
for(j = 20630; j < 20640; j++) _solve(b, j);
for(j = 21470; j < 21480; j++) _solve(b, j);
for(j = 22310; j < 22320; j++) _solve(b, j);
for(j = 23150; j < 23160; j++) _solve(b, j);
for(j = 23990; j < 24000; j++) _solve(b, j);
for(j = 24830; j < 24840; j++) _solve(b, j);
for(j = 25670; j < 25680; j++) _solve(b, j);
for(j = 26510; j < 26520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27350; j < 27360; j++) _solve(b, j);
for(j = 28190; j < 28200; j++) _solve(b, j);
for(j = 29030; j < 29040; j++) _solve(b, j);
for(j = 29870; j < 29880; j++) _solve(b, j);
for(j = 30710; j < 30720; j++) _solve(b, j);
for(j = 31550; j < 31560; j++) _solve(b, j);
for(j = 32390; j < 32400; j++) _solve(b, j);
for(j = 33230; j < 33240; j++) _solve(b, j);
for(j = 34070; j < 34080; j++) _solve(b, j);
for(j = 34910; j < 34920; j++) _solve(b, j);
for(j = 35750; j < 35760; j++) _solve(b, j);
for(j = 36590; j < 36600; j++) _solve(b, j);
for(j = 37430; j < 37440; j++) _solve(b, j);
for(j = 38270; j < 38280; j++) _solve(b, j);
for(j = 39110; j < 39120; j++) _solve(b, j);
for(j = 39950; j < 39960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 480; j < 490; j++) _solve(b, j);
for(j = 1320; j < 1330; j++) _solve(b, j);
for(j = 2160; j < 2170; j++) _solve(b, j);
for(j = 3000; j < 3010; j++) _solve(b, j);
for(j = 3840; j < 3850; j++) _solve(b, j);
for(j = 4680; j < 4690; j++) _solve(b, j);
for(j = 5520; j < 5530; j++) _solve(b, j);
for(j = 6360; j < 6370; j++) _solve(b, j);
for(j = 7200; j < 7210; j++) _solve(b, j);
for(j = 8040; j < 8050; j++) _solve(b, j);
for(j = 8880; j < 8890; j++) _solve(b, j);
for(j = 9720; j < 9730; j++) _solve(b, j);
for(j = 10560; j < 10570; j++) _solve(b, j);
for(j = 11400; j < 11410; j++) _solve(b, j);
for(j = 12240; j < 12250; j++) _solve(b, j);
for(j = 13080; j < 13090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13920; j < 13930; j++) _solve(b, j);
for(j = 14760; j < 14770; j++) _solve(b, j);
for(j = 15600; j < 15610; j++) _solve(b, j);
for(j = 16440; j < 16450; j++) _solve(b, j);
for(j = 17280; j < 17290; j++) _solve(b, j);
for(j = 18120; j < 18130; j++) _solve(b, j);
for(j = 18960; j < 18970; j++) _solve(b, j);
for(j = 19800; j < 19810; j++) _solve(b, j);
for(j = 20640; j < 20650; j++) _solve(b, j);
for(j = 21480; j < 21490; j++) _solve(b, j);
for(j = 22320; j < 22330; j++) _solve(b, j);
for(j = 23160; j < 23170; j++) _solve(b, j);
for(j = 24000; j < 24010; j++) _solve(b, j);
for(j = 24840; j < 24850; j++) _solve(b, j);
for(j = 25680; j < 25690; j++) _solve(b, j);
for(j = 26520; j < 26530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27360; j < 27370; j++) _solve(b, j);
for(j = 28200; j < 28210; j++) _solve(b, j);
for(j = 29040; j < 29050; j++) _solve(b, j);
for(j = 29880; j < 29890; j++) _solve(b, j);
for(j = 30720; j < 30730; j++) _solve(b, j);
for(j = 31560; j < 31570; j++) _solve(b, j);
for(j = 32400; j < 32410; j++) _solve(b, j);
for(j = 33240; j < 33250; j++) _solve(b, j);
for(j = 34080; j < 34090; j++) _solve(b, j);
for(j = 34920; j < 34930; j++) _solve(b, j);
for(j = 35760; j < 35770; j++) _solve(b, j);
for(j = 36600; j < 36610; j++) _solve(b, j);
for(j = 37440; j < 37450; j++) _solve(b, j);
for(j = 38280; j < 38290; j++) _solve(b, j);
for(j = 39120; j < 39130; j++) _solve(b, j);
for(j = 39960; j < 39970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40800; j < 40810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 490; j < 500; j++) _solve(b, j);
for(j = 1330; j < 1340; j++) _solve(b, j);
for(j = 2170; j < 2180; j++) _solve(b, j);
for(j = 3010; j < 3020; j++) _solve(b, j);
for(j = 3850; j < 3860; j++) _solve(b, j);
for(j = 4690; j < 4700; j++) _solve(b, j);
for(j = 5530; j < 5540; j++) _solve(b, j);
for(j = 6370; j < 6380; j++) _solve(b, j);
for(j = 7210; j < 7220; j++) _solve(b, j);
for(j = 8050; j < 8060; j++) _solve(b, j);
for(j = 8890; j < 8900; j++) _solve(b, j);
for(j = 9730; j < 9740; j++) _solve(b, j);
for(j = 10570; j < 10580; j++) _solve(b, j);
for(j = 11410; j < 11420; j++) _solve(b, j);
for(j = 12250; j < 12260; j++) _solve(b, j);
for(j = 13090; j < 13100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13930; j < 13940; j++) _solve(b, j);
for(j = 14770; j < 14780; j++) _solve(b, j);
for(j = 15610; j < 15620; j++) _solve(b, j);
for(j = 16450; j < 16460; j++) _solve(b, j);
for(j = 17290; j < 17300; j++) _solve(b, j);
for(j = 18130; j < 18140; j++) _solve(b, j);
for(j = 18970; j < 18980; j++) _solve(b, j);
for(j = 19810; j < 19820; j++) _solve(b, j);
for(j = 20650; j < 20660; j++) _solve(b, j);
for(j = 21490; j < 21500; j++) _solve(b, j);
for(j = 22330; j < 22340; j++) _solve(b, j);
for(j = 23170; j < 23180; j++) _solve(b, j);
for(j = 24010; j < 24020; j++) _solve(b, j);
for(j = 24850; j < 24860; j++) _solve(b, j);
for(j = 25690; j < 25700; j++) _solve(b, j);
for(j = 26530; j < 26540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27370; j < 27380; j++) _solve(b, j);
for(j = 28210; j < 28220; j++) _solve(b, j);
for(j = 29050; j < 29060; j++) _solve(b, j);
for(j = 29890; j < 29900; j++) _solve(b, j);
for(j = 30730; j < 30740; j++) _solve(b, j);
for(j = 31570; j < 31580; j++) _solve(b, j);
for(j = 32410; j < 32420; j++) _solve(b, j);
for(j = 33250; j < 33260; j++) _solve(b, j);
for(j = 34090; j < 34100; j++) _solve(b, j);
for(j = 34930; j < 34940; j++) _solve(b, j);
for(j = 35770; j < 35780; j++) _solve(b, j);
for(j = 36610; j < 36620; j++) _solve(b, j);
for(j = 37450; j < 37460; j++) _solve(b, j);
for(j = 38290; j < 38300; j++) _solve(b, j);
for(j = 39130; j < 39140; j++) _solve(b, j);
for(j = 39970; j < 39980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40810; j < 40820; j++) _solve(b, j);
for(j = 41650; j < 41660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 500; j < 510; j++) _solve(b, j);
for(j = 1340; j < 1350; j++) _solve(b, j);
for(j = 2180; j < 2190; j++) _solve(b, j);
for(j = 3020; j < 3030; j++) _solve(b, j);
for(j = 3860; j < 3870; j++) _solve(b, j);
for(j = 4700; j < 4710; j++) _solve(b, j);
for(j = 5540; j < 5550; j++) _solve(b, j);
for(j = 6380; j < 6390; j++) _solve(b, j);
for(j = 7220; j < 7230; j++) _solve(b, j);
for(j = 8060; j < 8070; j++) _solve(b, j);
for(j = 8900; j < 8910; j++) _solve(b, j);
for(j = 9740; j < 9750; j++) _solve(b, j);
for(j = 10580; j < 10590; j++) _solve(b, j);
for(j = 11420; j < 11430; j++) _solve(b, j);
for(j = 12260; j < 12270; j++) _solve(b, j);
for(j = 13100; j < 13110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13940; j < 13950; j++) _solve(b, j);
for(j = 14780; j < 14790; j++) _solve(b, j);
for(j = 15620; j < 15630; j++) _solve(b, j);
for(j = 16460; j < 16470; j++) _solve(b, j);
for(j = 17300; j < 17310; j++) _solve(b, j);
for(j = 18140; j < 18150; j++) _solve(b, j);
for(j = 18980; j < 18990; j++) _solve(b, j);
for(j = 19820; j < 19830; j++) _solve(b, j);
for(j = 20660; j < 20670; j++) _solve(b, j);
for(j = 21500; j < 21510; j++) _solve(b, j);
for(j = 22340; j < 22350; j++) _solve(b, j);
for(j = 23180; j < 23190; j++) _solve(b, j);
for(j = 24020; j < 24030; j++) _solve(b, j);
for(j = 24860; j < 24870; j++) _solve(b, j);
for(j = 25700; j < 25710; j++) _solve(b, j);
for(j = 26540; j < 26550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27380; j < 27390; j++) _solve(b, j);
for(j = 28220; j < 28230; j++) _solve(b, j);
for(j = 29060; j < 29070; j++) _solve(b, j);
for(j = 29900; j < 29910; j++) _solve(b, j);
for(j = 30740; j < 30750; j++) _solve(b, j);
for(j = 31580; j < 31590; j++) _solve(b, j);
for(j = 32420; j < 32430; j++) _solve(b, j);
for(j = 33260; j < 33270; j++) _solve(b, j);
for(j = 34100; j < 34110; j++) _solve(b, j);
for(j = 34940; j < 34950; j++) _solve(b, j);
for(j = 35780; j < 35790; j++) _solve(b, j);
for(j = 36620; j < 36630; j++) _solve(b, j);
for(j = 37460; j < 37470; j++) _solve(b, j);
for(j = 38300; j < 38310; j++) _solve(b, j);
for(j = 39140; j < 39150; j++) _solve(b, j);
for(j = 39980; j < 39990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40820; j < 40830; j++) _solve(b, j);
for(j = 41660; j < 41670; j++) _solve(b, j);
for(j = 42500; j < 42510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 510; j < 520; j++) _solve(b, j);
for(j = 1350; j < 1360; j++) _solve(b, j);
for(j = 2190; j < 2200; j++) _solve(b, j);
for(j = 3030; j < 3040; j++) _solve(b, j);
for(j = 3870; j < 3880; j++) _solve(b, j);
for(j = 4710; j < 4720; j++) _solve(b, j);
for(j = 5550; j < 5560; j++) _solve(b, j);
for(j = 6390; j < 6400; j++) _solve(b, j);
for(j = 7230; j < 7240; j++) _solve(b, j);
for(j = 8070; j < 8080; j++) _solve(b, j);
for(j = 8910; j < 8920; j++) _solve(b, j);
for(j = 9750; j < 9760; j++) _solve(b, j);
for(j = 10590; j < 10600; j++) _solve(b, j);
for(j = 11430; j < 11440; j++) _solve(b, j);
for(j = 12270; j < 12280; j++) _solve(b, j);
for(j = 13110; j < 13120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13950; j < 13960; j++) _solve(b, j);
for(j = 14790; j < 14800; j++) _solve(b, j);
for(j = 15630; j < 15640; j++) _solve(b, j);
for(j = 16470; j < 16480; j++) _solve(b, j);
for(j = 17310; j < 17320; j++) _solve(b, j);
for(j = 18150; j < 18160; j++) _solve(b, j);
for(j = 18990; j < 19000; j++) _solve(b, j);
for(j = 19830; j < 19840; j++) _solve(b, j);
for(j = 20670; j < 20680; j++) _solve(b, j);
for(j = 21510; j < 21520; j++) _solve(b, j);
for(j = 22350; j < 22360; j++) _solve(b, j);
for(j = 23190; j < 23200; j++) _solve(b, j);
for(j = 24030; j < 24040; j++) _solve(b, j);
for(j = 24870; j < 24880; j++) _solve(b, j);
for(j = 25710; j < 25720; j++) _solve(b, j);
for(j = 26550; j < 26560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27390; j < 27400; j++) _solve(b, j);
for(j = 28230; j < 28240; j++) _solve(b, j);
for(j = 29070; j < 29080; j++) _solve(b, j);
for(j = 29910; j < 29920; j++) _solve(b, j);
for(j = 30750; j < 30760; j++) _solve(b, j);
for(j = 31590; j < 31600; j++) _solve(b, j);
for(j = 32430; j < 32440; j++) _solve(b, j);
for(j = 33270; j < 33280; j++) _solve(b, j);
for(j = 34110; j < 34120; j++) _solve(b, j);
for(j = 34950; j < 34960; j++) _solve(b, j);
for(j = 35790; j < 35800; j++) _solve(b, j);
for(j = 36630; j < 36640; j++) _solve(b, j);
for(j = 37470; j < 37480; j++) _solve(b, j);
for(j = 38310; j < 38320; j++) _solve(b, j);
for(j = 39150; j < 39160; j++) _solve(b, j);
for(j = 39990; j < 40000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40830; j < 40840; j++) _solve(b, j);
for(j = 41670; j < 41680; j++) _solve(b, j);
for(j = 42510; j < 42520; j++) _solve(b, j);
for(j = 43350; j < 43360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 520; j < 530; j++) _solve(b, j);
for(j = 1360; j < 1370; j++) _solve(b, j);
for(j = 2200; j < 2210; j++) _solve(b, j);
for(j = 3040; j < 3050; j++) _solve(b, j);
for(j = 3880; j < 3890; j++) _solve(b, j);
for(j = 4720; j < 4730; j++) _solve(b, j);
for(j = 5560; j < 5570; j++) _solve(b, j);
for(j = 6400; j < 6410; j++) _solve(b, j);
for(j = 7240; j < 7250; j++) _solve(b, j);
for(j = 8080; j < 8090; j++) _solve(b, j);
for(j = 8920; j < 8930; j++) _solve(b, j);
for(j = 9760; j < 9770; j++) _solve(b, j);
for(j = 10600; j < 10610; j++) _solve(b, j);
for(j = 11440; j < 11450; j++) _solve(b, j);
for(j = 12280; j < 12290; j++) _solve(b, j);
for(j = 13120; j < 13130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13960; j < 13970; j++) _solve(b, j);
for(j = 14800; j < 14810; j++) _solve(b, j);
for(j = 15640; j < 15650; j++) _solve(b, j);
for(j = 16480; j < 16490; j++) _solve(b, j);
for(j = 17320; j < 17330; j++) _solve(b, j);
for(j = 18160; j < 18170; j++) _solve(b, j);
for(j = 19000; j < 19010; j++) _solve(b, j);
for(j = 19840; j < 19850; j++) _solve(b, j);
for(j = 20680; j < 20690; j++) _solve(b, j);
for(j = 21520; j < 21530; j++) _solve(b, j);
for(j = 22360; j < 22370; j++) _solve(b, j);
for(j = 23200; j < 23210; j++) _solve(b, j);
for(j = 24040; j < 24050; j++) _solve(b, j);
for(j = 24880; j < 24890; j++) _solve(b, j);
for(j = 25720; j < 25730; j++) _solve(b, j);
for(j = 26560; j < 26570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27400; j < 27410; j++) _solve(b, j);
for(j = 28240; j < 28250; j++) _solve(b, j);
for(j = 29080; j < 29090; j++) _solve(b, j);
for(j = 29920; j < 29930; j++) _solve(b, j);
for(j = 30760; j < 30770; j++) _solve(b, j);
for(j = 31600; j < 31610; j++) _solve(b, j);
for(j = 32440; j < 32450; j++) _solve(b, j);
for(j = 33280; j < 33290; j++) _solve(b, j);
for(j = 34120; j < 34130; j++) _solve(b, j);
for(j = 34960; j < 34970; j++) _solve(b, j);
for(j = 35800; j < 35810; j++) _solve(b, j);
for(j = 36640; j < 36650; j++) _solve(b, j);
for(j = 37480; j < 37490; j++) _solve(b, j);
for(j = 38320; j < 38330; j++) _solve(b, j);
for(j = 39160; j < 39170; j++) _solve(b, j);
for(j = 40000; j < 40010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40840; j < 40850; j++) _solve(b, j);
for(j = 41680; j < 41690; j++) _solve(b, j);
for(j = 42520; j < 42530; j++) _solve(b, j);
for(j = 43360; j < 43370; j++) _solve(b, j);
for(j = 44200; j < 44210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 530; j < 540; j++) _solve(b, j);
for(j = 1370; j < 1380; j++) _solve(b, j);
for(j = 2210; j < 2220; j++) _solve(b, j);
for(j = 3050; j < 3060; j++) _solve(b, j);
for(j = 3890; j < 3900; j++) _solve(b, j);
for(j = 4730; j < 4740; j++) _solve(b, j);
for(j = 5570; j < 5580; j++) _solve(b, j);
for(j = 6410; j < 6420; j++) _solve(b, j);
for(j = 7250; j < 7260; j++) _solve(b, j);
for(j = 8090; j < 8100; j++) _solve(b, j);
for(j = 8930; j < 8940; j++) _solve(b, j);
for(j = 9770; j < 9780; j++) _solve(b, j);
for(j = 10610; j < 10620; j++) _solve(b, j);
for(j = 11450; j < 11460; j++) _solve(b, j);
for(j = 12290; j < 12300; j++) _solve(b, j);
for(j = 13130; j < 13140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13970; j < 13980; j++) _solve(b, j);
for(j = 14810; j < 14820; j++) _solve(b, j);
for(j = 15650; j < 15660; j++) _solve(b, j);
for(j = 16490; j < 16500; j++) _solve(b, j);
for(j = 17330; j < 17340; j++) _solve(b, j);
for(j = 18170; j < 18180; j++) _solve(b, j);
for(j = 19010; j < 19020; j++) _solve(b, j);
for(j = 19850; j < 19860; j++) _solve(b, j);
for(j = 20690; j < 20700; j++) _solve(b, j);
for(j = 21530; j < 21540; j++) _solve(b, j);
for(j = 22370; j < 22380; j++) _solve(b, j);
for(j = 23210; j < 23220; j++) _solve(b, j);
for(j = 24050; j < 24060; j++) _solve(b, j);
for(j = 24890; j < 24900; j++) _solve(b, j);
for(j = 25730; j < 25740; j++) _solve(b, j);
for(j = 26570; j < 26580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27410; j < 27420; j++) _solve(b, j);
for(j = 28250; j < 28260; j++) _solve(b, j);
for(j = 29090; j < 29100; j++) _solve(b, j);
for(j = 29930; j < 29940; j++) _solve(b, j);
for(j = 30770; j < 30780; j++) _solve(b, j);
for(j = 31610; j < 31620; j++) _solve(b, j);
for(j = 32450; j < 32460; j++) _solve(b, j);
for(j = 33290; j < 33300; j++) _solve(b, j);
for(j = 34130; j < 34140; j++) _solve(b, j);
for(j = 34970; j < 34980; j++) _solve(b, j);
for(j = 35810; j < 35820; j++) _solve(b, j);
for(j = 36650; j < 36660; j++) _solve(b, j);
for(j = 37490; j < 37500; j++) _solve(b, j);
for(j = 38330; j < 38340; j++) _solve(b, j);
for(j = 39170; j < 39180; j++) _solve(b, j);
for(j = 40010; j < 40020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40850; j < 40860; j++) _solve(b, j);
for(j = 41690; j < 41700; j++) _solve(b, j);
for(j = 42530; j < 42540; j++) _solve(b, j);
for(j = 43370; j < 43380; j++) _solve(b, j);
for(j = 44210; j < 44220; j++) _solve(b, j);
for(j = 45050; j < 45060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 540; j < 550; j++) _solve(b, j);
for(j = 1380; j < 1390; j++) _solve(b, j);
for(j = 2220; j < 2230; j++) _solve(b, j);
for(j = 3060; j < 3070; j++) _solve(b, j);
for(j = 3900; j < 3910; j++) _solve(b, j);
for(j = 4740; j < 4750; j++) _solve(b, j);
for(j = 5580; j < 5590; j++) _solve(b, j);
for(j = 6420; j < 6430; j++) _solve(b, j);
for(j = 7260; j < 7270; j++) _solve(b, j);
for(j = 8100; j < 8110; j++) _solve(b, j);
for(j = 8940; j < 8950; j++) _solve(b, j);
for(j = 9780; j < 9790; j++) _solve(b, j);
for(j = 10620; j < 10630; j++) _solve(b, j);
for(j = 11460; j < 11470; j++) _solve(b, j);
for(j = 12300; j < 12310; j++) _solve(b, j);
for(j = 13140; j < 13150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13980; j < 13990; j++) _solve(b, j);
for(j = 14820; j < 14830; j++) _solve(b, j);
for(j = 15660; j < 15670; j++) _solve(b, j);
for(j = 16500; j < 16510; j++) _solve(b, j);
for(j = 17340; j < 17350; j++) _solve(b, j);
for(j = 18180; j < 18190; j++) _solve(b, j);
for(j = 19020; j < 19030; j++) _solve(b, j);
for(j = 19860; j < 19870; j++) _solve(b, j);
for(j = 20700; j < 20710; j++) _solve(b, j);
for(j = 21540; j < 21550; j++) _solve(b, j);
for(j = 22380; j < 22390; j++) _solve(b, j);
for(j = 23220; j < 23230; j++) _solve(b, j);
for(j = 24060; j < 24070; j++) _solve(b, j);
for(j = 24900; j < 24910; j++) _solve(b, j);
for(j = 25740; j < 25750; j++) _solve(b, j);
for(j = 26580; j < 26590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27420; j < 27430; j++) _solve(b, j);
for(j = 28260; j < 28270; j++) _solve(b, j);
for(j = 29100; j < 29110; j++) _solve(b, j);
for(j = 29940; j < 29950; j++) _solve(b, j);
for(j = 30780; j < 30790; j++) _solve(b, j);
for(j = 31620; j < 31630; j++) _solve(b, j);
for(j = 32460; j < 32470; j++) _solve(b, j);
for(j = 33300; j < 33310; j++) _solve(b, j);
for(j = 34140; j < 34150; j++) _solve(b, j);
for(j = 34980; j < 34990; j++) _solve(b, j);
for(j = 35820; j < 35830; j++) _solve(b, j);
for(j = 36660; j < 36670; j++) _solve(b, j);
for(j = 37500; j < 37510; j++) _solve(b, j);
for(j = 38340; j < 38350; j++) _solve(b, j);
for(j = 39180; j < 39190; j++) _solve(b, j);
for(j = 40020; j < 40030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40860; j < 40870; j++) _solve(b, j);
for(j = 41700; j < 41710; j++) _solve(b, j);
for(j = 42540; j < 42550; j++) _solve(b, j);
for(j = 43380; j < 43390; j++) _solve(b, j);
for(j = 44220; j < 44230; j++) _solve(b, j);
for(j = 45060; j < 45070; j++) _solve(b, j);
for(j = 45900; j < 45910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 550; j < 560; j++) _solve(b, j);
for(j = 1390; j < 1400; j++) _solve(b, j);
for(j = 2230; j < 2240; j++) _solve(b, j);
for(j = 3070; j < 3080; j++) _solve(b, j);
for(j = 3910; j < 3920; j++) _solve(b, j);
for(j = 4750; j < 4760; j++) _solve(b, j);
for(j = 5590; j < 5600; j++) _solve(b, j);
for(j = 6430; j < 6440; j++) _solve(b, j);
for(j = 7270; j < 7280; j++) _solve(b, j);
for(j = 8110; j < 8120; j++) _solve(b, j);
for(j = 8950; j < 8960; j++) _solve(b, j);
for(j = 9790; j < 9800; j++) _solve(b, j);
for(j = 10630; j < 10640; j++) _solve(b, j);
for(j = 11470; j < 11480; j++) _solve(b, j);
for(j = 12310; j < 12320; j++) _solve(b, j);
for(j = 13150; j < 13160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 13990; j < 14000; j++) _solve(b, j);
for(j = 14830; j < 14840; j++) _solve(b, j);
for(j = 15670; j < 15680; j++) _solve(b, j);
for(j = 16510; j < 16520; j++) _solve(b, j);
for(j = 17350; j < 17360; j++) _solve(b, j);
for(j = 18190; j < 18200; j++) _solve(b, j);
for(j = 19030; j < 19040; j++) _solve(b, j);
for(j = 19870; j < 19880; j++) _solve(b, j);
for(j = 20710; j < 20720; j++) _solve(b, j);
for(j = 21550; j < 21560; j++) _solve(b, j);
for(j = 22390; j < 22400; j++) _solve(b, j);
for(j = 23230; j < 23240; j++) _solve(b, j);
for(j = 24070; j < 24080; j++) _solve(b, j);
for(j = 24910; j < 24920; j++) _solve(b, j);
for(j = 25750; j < 25760; j++) _solve(b, j);
for(j = 26590; j < 26600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27430; j < 27440; j++) _solve(b, j);
for(j = 28270; j < 28280; j++) _solve(b, j);
for(j = 29110; j < 29120; j++) _solve(b, j);
for(j = 29950; j < 29960; j++) _solve(b, j);
for(j = 30790; j < 30800; j++) _solve(b, j);
for(j = 31630; j < 31640; j++) _solve(b, j);
for(j = 32470; j < 32480; j++) _solve(b, j);
for(j = 33310; j < 33320; j++) _solve(b, j);
for(j = 34150; j < 34160; j++) _solve(b, j);
for(j = 34990; j < 35000; j++) _solve(b, j);
for(j = 35830; j < 35840; j++) _solve(b, j);
for(j = 36670; j < 36680; j++) _solve(b, j);
for(j = 37510; j < 37520; j++) _solve(b, j);
for(j = 38350; j < 38360; j++) _solve(b, j);
for(j = 39190; j < 39200; j++) _solve(b, j);
for(j = 40030; j < 40040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40870; j < 40880; j++) _solve(b, j);
for(j = 41710; j < 41720; j++) _solve(b, j);
for(j = 42550; j < 42560; j++) _solve(b, j);
for(j = 43390; j < 43400; j++) _solve(b, j);
for(j = 44230; j < 44240; j++) _solve(b, j);
for(j = 45070; j < 45080; j++) _solve(b, j);
for(j = 45910; j < 45920; j++) _solve(b, j);
for(j = 46750; j < 46760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 560; j < 570; j++) _solve(b, j);
for(j = 1400; j < 1410; j++) _solve(b, j);
for(j = 2240; j < 2250; j++) _solve(b, j);
for(j = 3080; j < 3090; j++) _solve(b, j);
for(j = 3920; j < 3930; j++) _solve(b, j);
for(j = 4760; j < 4770; j++) _solve(b, j);
for(j = 5600; j < 5610; j++) _solve(b, j);
for(j = 6440; j < 6450; j++) _solve(b, j);
for(j = 7280; j < 7290; j++) _solve(b, j);
for(j = 8120; j < 8130; j++) _solve(b, j);
for(j = 8960; j < 8970; j++) _solve(b, j);
for(j = 9800; j < 9810; j++) _solve(b, j);
for(j = 10640; j < 10650; j++) _solve(b, j);
for(j = 11480; j < 11490; j++) _solve(b, j);
for(j = 12320; j < 12330; j++) _solve(b, j);
for(j = 13160; j < 13170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14000; j < 14010; j++) _solve(b, j);
for(j = 14840; j < 14850; j++) _solve(b, j);
for(j = 15680; j < 15690; j++) _solve(b, j);
for(j = 16520; j < 16530; j++) _solve(b, j);
for(j = 17360; j < 17370; j++) _solve(b, j);
for(j = 18200; j < 18210; j++) _solve(b, j);
for(j = 19040; j < 19050; j++) _solve(b, j);
for(j = 19880; j < 19890; j++) _solve(b, j);
for(j = 20720; j < 20730; j++) _solve(b, j);
for(j = 21560; j < 21570; j++) _solve(b, j);
for(j = 22400; j < 22410; j++) _solve(b, j);
for(j = 23240; j < 23250; j++) _solve(b, j);
for(j = 24080; j < 24090; j++) _solve(b, j);
for(j = 24920; j < 24930; j++) _solve(b, j);
for(j = 25760; j < 25770; j++) _solve(b, j);
for(j = 26600; j < 26610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27440; j < 27450; j++) _solve(b, j);
for(j = 28280; j < 28290; j++) _solve(b, j);
for(j = 29120; j < 29130; j++) _solve(b, j);
for(j = 29960; j < 29970; j++) _solve(b, j);
for(j = 30800; j < 30810; j++) _solve(b, j);
for(j = 31640; j < 31650; j++) _solve(b, j);
for(j = 32480; j < 32490; j++) _solve(b, j);
for(j = 33320; j < 33330; j++) _solve(b, j);
for(j = 34160; j < 34170; j++) _solve(b, j);
for(j = 35000; j < 35010; j++) _solve(b, j);
for(j = 35840; j < 35850; j++) _solve(b, j);
for(j = 36680; j < 36690; j++) _solve(b, j);
for(j = 37520; j < 37530; j++) _solve(b, j);
for(j = 38360; j < 38370; j++) _solve(b, j);
for(j = 39200; j < 39210; j++) _solve(b, j);
for(j = 40040; j < 40050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40880; j < 40890; j++) _solve(b, j);
for(j = 41720; j < 41730; j++) _solve(b, j);
for(j = 42560; j < 42570; j++) _solve(b, j);
for(j = 43400; j < 43410; j++) _solve(b, j);
for(j = 44240; j < 44250; j++) _solve(b, j);
for(j = 45080; j < 45090; j++) _solve(b, j);
for(j = 45920; j < 45930; j++) _solve(b, j);
for(j = 46760; j < 46770; j++) _solve(b, j);
for(j = 47600; j < 47610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 570; j < 580; j++) _solve(b, j);
for(j = 1410; j < 1420; j++) _solve(b, j);
for(j = 2250; j < 2260; j++) _solve(b, j);
for(j = 3090; j < 3100; j++) _solve(b, j);
for(j = 3930; j < 3940; j++) _solve(b, j);
for(j = 4770; j < 4780; j++) _solve(b, j);
for(j = 5610; j < 5620; j++) _solve(b, j);
for(j = 6450; j < 6460; j++) _solve(b, j);
for(j = 7290; j < 7300; j++) _solve(b, j);
for(j = 8130; j < 8140; j++) _solve(b, j);
for(j = 8970; j < 8980; j++) _solve(b, j);
for(j = 9810; j < 9820; j++) _solve(b, j);
for(j = 10650; j < 10660; j++) _solve(b, j);
for(j = 11490; j < 11500; j++) _solve(b, j);
for(j = 12330; j < 12340; j++) _solve(b, j);
for(j = 13170; j < 13180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14010; j < 14020; j++) _solve(b, j);
for(j = 14850; j < 14860; j++) _solve(b, j);
for(j = 15690; j < 15700; j++) _solve(b, j);
for(j = 16530; j < 16540; j++) _solve(b, j);
for(j = 17370; j < 17380; j++) _solve(b, j);
for(j = 18210; j < 18220; j++) _solve(b, j);
for(j = 19050; j < 19060; j++) _solve(b, j);
for(j = 19890; j < 19900; j++) _solve(b, j);
for(j = 20730; j < 20740; j++) _solve(b, j);
for(j = 21570; j < 21580; j++) _solve(b, j);
for(j = 22410; j < 22420; j++) _solve(b, j);
for(j = 23250; j < 23260; j++) _solve(b, j);
for(j = 24090; j < 24100; j++) _solve(b, j);
for(j = 24930; j < 24940; j++) _solve(b, j);
for(j = 25770; j < 25780; j++) _solve(b, j);
for(j = 26610; j < 26620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27450; j < 27460; j++) _solve(b, j);
for(j = 28290; j < 28300; j++) _solve(b, j);
for(j = 29130; j < 29140; j++) _solve(b, j);
for(j = 29970; j < 29980; j++) _solve(b, j);
for(j = 30810; j < 30820; j++) _solve(b, j);
for(j = 31650; j < 31660; j++) _solve(b, j);
for(j = 32490; j < 32500; j++) _solve(b, j);
for(j = 33330; j < 33340; j++) _solve(b, j);
for(j = 34170; j < 34180; j++) _solve(b, j);
for(j = 35010; j < 35020; j++) _solve(b, j);
for(j = 35850; j < 35860; j++) _solve(b, j);
for(j = 36690; j < 36700; j++) _solve(b, j);
for(j = 37530; j < 37540; j++) _solve(b, j);
for(j = 38370; j < 38380; j++) _solve(b, j);
for(j = 39210; j < 39220; j++) _solve(b, j);
for(j = 40050; j < 40060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40890; j < 40900; j++) _solve(b, j);
for(j = 41730; j < 41740; j++) _solve(b, j);
for(j = 42570; j < 42580; j++) _solve(b, j);
for(j = 43410; j < 43420; j++) _solve(b, j);
for(j = 44250; j < 44260; j++) _solve(b, j);
for(j = 45090; j < 45100; j++) _solve(b, j);
for(j = 45930; j < 45940; j++) _solve(b, j);
for(j = 46770; j < 46780; j++) _solve(b, j);
for(j = 47610; j < 47620; j++) _solve(b, j);
for(j = 48450; j < 48460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 580; j < 590; j++) _solve(b, j);
for(j = 1420; j < 1430; j++) _solve(b, j);
for(j = 2260; j < 2270; j++) _solve(b, j);
for(j = 3100; j < 3110; j++) _solve(b, j);
for(j = 3940; j < 3950; j++) _solve(b, j);
for(j = 4780; j < 4790; j++) _solve(b, j);
for(j = 5620; j < 5630; j++) _solve(b, j);
for(j = 6460; j < 6470; j++) _solve(b, j);
for(j = 7300; j < 7310; j++) _solve(b, j);
for(j = 8140; j < 8150; j++) _solve(b, j);
for(j = 8980; j < 8990; j++) _solve(b, j);
for(j = 9820; j < 9830; j++) _solve(b, j);
for(j = 10660; j < 10670; j++) _solve(b, j);
for(j = 11500; j < 11510; j++) _solve(b, j);
for(j = 12340; j < 12350; j++) _solve(b, j);
for(j = 13180; j < 13190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14020; j < 14030; j++) _solve(b, j);
for(j = 14860; j < 14870; j++) _solve(b, j);
for(j = 15700; j < 15710; j++) _solve(b, j);
for(j = 16540; j < 16550; j++) _solve(b, j);
for(j = 17380; j < 17390; j++) _solve(b, j);
for(j = 18220; j < 18230; j++) _solve(b, j);
for(j = 19060; j < 19070; j++) _solve(b, j);
for(j = 19900; j < 19910; j++) _solve(b, j);
for(j = 20740; j < 20750; j++) _solve(b, j);
for(j = 21580; j < 21590; j++) _solve(b, j);
for(j = 22420; j < 22430; j++) _solve(b, j);
for(j = 23260; j < 23270; j++) _solve(b, j);
for(j = 24100; j < 24110; j++) _solve(b, j);
for(j = 24940; j < 24950; j++) _solve(b, j);
for(j = 25780; j < 25790; j++) _solve(b, j);
for(j = 26620; j < 26630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27460; j < 27470; j++) _solve(b, j);
for(j = 28300; j < 28310; j++) _solve(b, j);
for(j = 29140; j < 29150; j++) _solve(b, j);
for(j = 29980; j < 29990; j++) _solve(b, j);
for(j = 30820; j < 30830; j++) _solve(b, j);
for(j = 31660; j < 31670; j++) _solve(b, j);
for(j = 32500; j < 32510; j++) _solve(b, j);
for(j = 33340; j < 33350; j++) _solve(b, j);
for(j = 34180; j < 34190; j++) _solve(b, j);
for(j = 35020; j < 35030; j++) _solve(b, j);
for(j = 35860; j < 35870; j++) _solve(b, j);
for(j = 36700; j < 36710; j++) _solve(b, j);
for(j = 37540; j < 37550; j++) _solve(b, j);
for(j = 38380; j < 38390; j++) _solve(b, j);
for(j = 39220; j < 39230; j++) _solve(b, j);
for(j = 40060; j < 40070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40900; j < 40910; j++) _solve(b, j);
for(j = 41740; j < 41750; j++) _solve(b, j);
for(j = 42580; j < 42590; j++) _solve(b, j);
for(j = 43420; j < 43430; j++) _solve(b, j);
for(j = 44260; j < 44270; j++) _solve(b, j);
for(j = 45100; j < 45110; j++) _solve(b, j);
for(j = 45940; j < 45950; j++) _solve(b, j);
for(j = 46780; j < 46790; j++) _solve(b, j);
for(j = 47620; j < 47630; j++) _solve(b, j);
for(j = 48460; j < 48470; j++) _solve(b, j);
for(j = 49300; j < 49310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 590; j < 600; j++) _solve(b, j);
for(j = 1430; j < 1440; j++) _solve(b, j);
for(j = 2270; j < 2280; j++) _solve(b, j);
for(j = 3110; j < 3120; j++) _solve(b, j);
for(j = 3950; j < 3960; j++) _solve(b, j);
for(j = 4790; j < 4800; j++) _solve(b, j);
for(j = 5630; j < 5640; j++) _solve(b, j);
for(j = 6470; j < 6480; j++) _solve(b, j);
for(j = 7310; j < 7320; j++) _solve(b, j);
for(j = 8150; j < 8160; j++) _solve(b, j);
for(j = 8990; j < 9000; j++) _solve(b, j);
for(j = 9830; j < 9840; j++) _solve(b, j);
for(j = 10670; j < 10680; j++) _solve(b, j);
for(j = 11510; j < 11520; j++) _solve(b, j);
for(j = 12350; j < 12360; j++) _solve(b, j);
for(j = 13190; j < 13200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14030; j < 14040; j++) _solve(b, j);
for(j = 14870; j < 14880; j++) _solve(b, j);
for(j = 15710; j < 15720; j++) _solve(b, j);
for(j = 16550; j < 16560; j++) _solve(b, j);
for(j = 17390; j < 17400; j++) _solve(b, j);
for(j = 18230; j < 18240; j++) _solve(b, j);
for(j = 19070; j < 19080; j++) _solve(b, j);
for(j = 19910; j < 19920; j++) _solve(b, j);
for(j = 20750; j < 20760; j++) _solve(b, j);
for(j = 21590; j < 21600; j++) _solve(b, j);
for(j = 22430; j < 22440; j++) _solve(b, j);
for(j = 23270; j < 23280; j++) _solve(b, j);
for(j = 24110; j < 24120; j++) _solve(b, j);
for(j = 24950; j < 24960; j++) _solve(b, j);
for(j = 25790; j < 25800; j++) _solve(b, j);
for(j = 26630; j < 26640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27470; j < 27480; j++) _solve(b, j);
for(j = 28310; j < 28320; j++) _solve(b, j);
for(j = 29150; j < 29160; j++) _solve(b, j);
for(j = 29990; j < 30000; j++) _solve(b, j);
for(j = 30830; j < 30840; j++) _solve(b, j);
for(j = 31670; j < 31680; j++) _solve(b, j);
for(j = 32510; j < 32520; j++) _solve(b, j);
for(j = 33350; j < 33360; j++) _solve(b, j);
for(j = 34190; j < 34200; j++) _solve(b, j);
for(j = 35030; j < 35040; j++) _solve(b, j);
for(j = 35870; j < 35880; j++) _solve(b, j);
for(j = 36710; j < 36720; j++) _solve(b, j);
for(j = 37550; j < 37560; j++) _solve(b, j);
for(j = 38390; j < 38400; j++) _solve(b, j);
for(j = 39230; j < 39240; j++) _solve(b, j);
for(j = 40070; j < 40080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40910; j < 40920; j++) _solve(b, j);
for(j = 41750; j < 41760; j++) _solve(b, j);
for(j = 42590; j < 42600; j++) _solve(b, j);
for(j = 43430; j < 43440; j++) _solve(b, j);
for(j = 44270; j < 44280; j++) _solve(b, j);
for(j = 45110; j < 45120; j++) _solve(b, j);
for(j = 45950; j < 45960; j++) _solve(b, j);
for(j = 46790; j < 46800; j++) _solve(b, j);
for(j = 47630; j < 47640; j++) _solve(b, j);
for(j = 48470; j < 48480; j++) _solve(b, j);
for(j = 49310; j < 49320; j++) _solve(b, j);
for(j = 50150; j < 50160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 600; j < 610; j++) _solve(b, j);
for(j = 1440; j < 1450; j++) _solve(b, j);
for(j = 2280; j < 2290; j++) _solve(b, j);
for(j = 3120; j < 3130; j++) _solve(b, j);
for(j = 3960; j < 3970; j++) _solve(b, j);
for(j = 4800; j < 4810; j++) _solve(b, j);
for(j = 5640; j < 5650; j++) _solve(b, j);
for(j = 6480; j < 6490; j++) _solve(b, j);
for(j = 7320; j < 7330; j++) _solve(b, j);
for(j = 8160; j < 8170; j++) _solve(b, j);
for(j = 9000; j < 9010; j++) _solve(b, j);
for(j = 9840; j < 9850; j++) _solve(b, j);
for(j = 10680; j < 10690; j++) _solve(b, j);
for(j = 11520; j < 11530; j++) _solve(b, j);
for(j = 12360; j < 12370; j++) _solve(b, j);
for(j = 13200; j < 13210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14040; j < 14050; j++) _solve(b, j);
for(j = 14880; j < 14890; j++) _solve(b, j);
for(j = 15720; j < 15730; j++) _solve(b, j);
for(j = 16560; j < 16570; j++) _solve(b, j);
for(j = 17400; j < 17410; j++) _solve(b, j);
for(j = 18240; j < 18250; j++) _solve(b, j);
for(j = 19080; j < 19090; j++) _solve(b, j);
for(j = 19920; j < 19930; j++) _solve(b, j);
for(j = 20760; j < 20770; j++) _solve(b, j);
for(j = 21600; j < 21610; j++) _solve(b, j);
for(j = 22440; j < 22450; j++) _solve(b, j);
for(j = 23280; j < 23290; j++) _solve(b, j);
for(j = 24120; j < 24130; j++) _solve(b, j);
for(j = 24960; j < 24970; j++) _solve(b, j);
for(j = 25800; j < 25810; j++) _solve(b, j);
for(j = 26640; j < 26650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27480; j < 27490; j++) _solve(b, j);
for(j = 28320; j < 28330; j++) _solve(b, j);
for(j = 29160; j < 29170; j++) _solve(b, j);
for(j = 30000; j < 30010; j++) _solve(b, j);
for(j = 30840; j < 30850; j++) _solve(b, j);
for(j = 31680; j < 31690; j++) _solve(b, j);
for(j = 32520; j < 32530; j++) _solve(b, j);
for(j = 33360; j < 33370; j++) _solve(b, j);
for(j = 34200; j < 34210; j++) _solve(b, j);
for(j = 35040; j < 35050; j++) _solve(b, j);
for(j = 35880; j < 35890; j++) _solve(b, j);
for(j = 36720; j < 36730; j++) _solve(b, j);
for(j = 37560; j < 37570; j++) _solve(b, j);
for(j = 38400; j < 38410; j++) _solve(b, j);
for(j = 39240; j < 39250; j++) _solve(b, j);
for(j = 40080; j < 40090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40920; j < 40930; j++) _solve(b, j);
for(j = 41760; j < 41770; j++) _solve(b, j);
for(j = 42600; j < 42610; j++) _solve(b, j);
for(j = 43440; j < 43450; j++) _solve(b, j);
for(j = 44280; j < 44290; j++) _solve(b, j);
for(j = 45120; j < 45130; j++) _solve(b, j);
for(j = 45960; j < 45970; j++) _solve(b, j);
for(j = 46800; j < 46810; j++) _solve(b, j);
for(j = 47640; j < 47650; j++) _solve(b, j);
for(j = 48480; j < 48490; j++) _solve(b, j);
for(j = 49320; j < 49330; j++) _solve(b, j);
for(j = 50160; j < 50170; j++) _solve(b, j);
for(j = 51000; j < 51010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 610; j < 620; j++) _solve(b, j);
for(j = 1450; j < 1460; j++) _solve(b, j);
for(j = 2290; j < 2300; j++) _solve(b, j);
for(j = 3130; j < 3140; j++) _solve(b, j);
for(j = 3970; j < 3980; j++) _solve(b, j);
for(j = 4810; j < 4820; j++) _solve(b, j);
for(j = 5650; j < 5660; j++) _solve(b, j);
for(j = 6490; j < 6500; j++) _solve(b, j);
for(j = 7330; j < 7340; j++) _solve(b, j);
for(j = 8170; j < 8180; j++) _solve(b, j);
for(j = 9010; j < 9020; j++) _solve(b, j);
for(j = 9850; j < 9860; j++) _solve(b, j);
for(j = 10690; j < 10700; j++) _solve(b, j);
for(j = 11530; j < 11540; j++) _solve(b, j);
for(j = 12370; j < 12380; j++) _solve(b, j);
for(j = 13210; j < 13220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14050; j < 14060; j++) _solve(b, j);
for(j = 14890; j < 14900; j++) _solve(b, j);
for(j = 15730; j < 15740; j++) _solve(b, j);
for(j = 16570; j < 16580; j++) _solve(b, j);
for(j = 17410; j < 17420; j++) _solve(b, j);
for(j = 18250; j < 18260; j++) _solve(b, j);
for(j = 19090; j < 19100; j++) _solve(b, j);
for(j = 19930; j < 19940; j++) _solve(b, j);
for(j = 20770; j < 20780; j++) _solve(b, j);
for(j = 21610; j < 21620; j++) _solve(b, j);
for(j = 22450; j < 22460; j++) _solve(b, j);
for(j = 23290; j < 23300; j++) _solve(b, j);
for(j = 24130; j < 24140; j++) _solve(b, j);
for(j = 24970; j < 24980; j++) _solve(b, j);
for(j = 25810; j < 25820; j++) _solve(b, j);
for(j = 26650; j < 26660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27490; j < 27500; j++) _solve(b, j);
for(j = 28330; j < 28340; j++) _solve(b, j);
for(j = 29170; j < 29180; j++) _solve(b, j);
for(j = 30010; j < 30020; j++) _solve(b, j);
for(j = 30850; j < 30860; j++) _solve(b, j);
for(j = 31690; j < 31700; j++) _solve(b, j);
for(j = 32530; j < 32540; j++) _solve(b, j);
for(j = 33370; j < 33380; j++) _solve(b, j);
for(j = 34210; j < 34220; j++) _solve(b, j);
for(j = 35050; j < 35060; j++) _solve(b, j);
for(j = 35890; j < 35900; j++) _solve(b, j);
for(j = 36730; j < 36740; j++) _solve(b, j);
for(j = 37570; j < 37580; j++) _solve(b, j);
for(j = 38410; j < 38420; j++) _solve(b, j);
for(j = 39250; j < 39260; j++) _solve(b, j);
for(j = 40090; j < 40100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40930; j < 40940; j++) _solve(b, j);
for(j = 41770; j < 41780; j++) _solve(b, j);
for(j = 42610; j < 42620; j++) _solve(b, j);
for(j = 43450; j < 43460; j++) _solve(b, j);
for(j = 44290; j < 44300; j++) _solve(b, j);
for(j = 45130; j < 45140; j++) _solve(b, j);
for(j = 45970; j < 45980; j++) _solve(b, j);
for(j = 46810; j < 46820; j++) _solve(b, j);
for(j = 47650; j < 47660; j++) _solve(b, j);
for(j = 48490; j < 48500; j++) _solve(b, j);
for(j = 49330; j < 49340; j++) _solve(b, j);
for(j = 50170; j < 50180; j++) _solve(b, j);
for(j = 51010; j < 51020; j++) _solve(b, j);
for(j = 51850; j < 51860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 620; j < 630; j++) _solve(b, j);
for(j = 1460; j < 1470; j++) _solve(b, j);
for(j = 2300; j < 2310; j++) _solve(b, j);
for(j = 3140; j < 3150; j++) _solve(b, j);
for(j = 3980; j < 3990; j++) _solve(b, j);
for(j = 4820; j < 4830; j++) _solve(b, j);
for(j = 5660; j < 5670; j++) _solve(b, j);
for(j = 6500; j < 6510; j++) _solve(b, j);
for(j = 7340; j < 7350; j++) _solve(b, j);
for(j = 8180; j < 8190; j++) _solve(b, j);
for(j = 9020; j < 9030; j++) _solve(b, j);
for(j = 9860; j < 9870; j++) _solve(b, j);
for(j = 10700; j < 10710; j++) _solve(b, j);
for(j = 11540; j < 11550; j++) _solve(b, j);
for(j = 12380; j < 12390; j++) _solve(b, j);
for(j = 13220; j < 13230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14060; j < 14070; j++) _solve(b, j);
for(j = 14900; j < 14910; j++) _solve(b, j);
for(j = 15740; j < 15750; j++) _solve(b, j);
for(j = 16580; j < 16590; j++) _solve(b, j);
for(j = 17420; j < 17430; j++) _solve(b, j);
for(j = 18260; j < 18270; j++) _solve(b, j);
for(j = 19100; j < 19110; j++) _solve(b, j);
for(j = 19940; j < 19950; j++) _solve(b, j);
for(j = 20780; j < 20790; j++) _solve(b, j);
for(j = 21620; j < 21630; j++) _solve(b, j);
for(j = 22460; j < 22470; j++) _solve(b, j);
for(j = 23300; j < 23310; j++) _solve(b, j);
for(j = 24140; j < 24150; j++) _solve(b, j);
for(j = 24980; j < 24990; j++) _solve(b, j);
for(j = 25820; j < 25830; j++) _solve(b, j);
for(j = 26660; j < 26670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27500; j < 27510; j++) _solve(b, j);
for(j = 28340; j < 28350; j++) _solve(b, j);
for(j = 29180; j < 29190; j++) _solve(b, j);
for(j = 30020; j < 30030; j++) _solve(b, j);
for(j = 30860; j < 30870; j++) _solve(b, j);
for(j = 31700; j < 31710; j++) _solve(b, j);
for(j = 32540; j < 32550; j++) _solve(b, j);
for(j = 33380; j < 33390; j++) _solve(b, j);
for(j = 34220; j < 34230; j++) _solve(b, j);
for(j = 35060; j < 35070; j++) _solve(b, j);
for(j = 35900; j < 35910; j++) _solve(b, j);
for(j = 36740; j < 36750; j++) _solve(b, j);
for(j = 37580; j < 37590; j++) _solve(b, j);
for(j = 38420; j < 38430; j++) _solve(b, j);
for(j = 39260; j < 39270; j++) _solve(b, j);
for(j = 40100; j < 40110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40940; j < 40950; j++) _solve(b, j);
for(j = 41780; j < 41790; j++) _solve(b, j);
for(j = 42620; j < 42630; j++) _solve(b, j);
for(j = 43460; j < 43470; j++) _solve(b, j);
for(j = 44300; j < 44310; j++) _solve(b, j);
for(j = 45140; j < 45150; j++) _solve(b, j);
for(j = 45980; j < 45990; j++) _solve(b, j);
for(j = 46820; j < 46830; j++) _solve(b, j);
for(j = 47660; j < 47670; j++) _solve(b, j);
for(j = 48500; j < 48510; j++) _solve(b, j);
for(j = 49340; j < 49350; j++) _solve(b, j);
for(j = 50180; j < 50190; j++) _solve(b, j);
for(j = 51020; j < 51030; j++) _solve(b, j);
for(j = 51860; j < 51870; j++) _solve(b, j);
for(j = 52700; j < 52710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 630; j < 640; j++) _solve(b, j);
for(j = 1470; j < 1480; j++) _solve(b, j);
for(j = 2310; j < 2320; j++) _solve(b, j);
for(j = 3150; j < 3160; j++) _solve(b, j);
for(j = 3990; j < 4000; j++) _solve(b, j);
for(j = 4830; j < 4840; j++) _solve(b, j);
for(j = 5670; j < 5680; j++) _solve(b, j);
for(j = 6510; j < 6520; j++) _solve(b, j);
for(j = 7350; j < 7360; j++) _solve(b, j);
for(j = 8190; j < 8200; j++) _solve(b, j);
for(j = 9030; j < 9040; j++) _solve(b, j);
for(j = 9870; j < 9880; j++) _solve(b, j);
for(j = 10710; j < 10720; j++) _solve(b, j);
for(j = 11550; j < 11560; j++) _solve(b, j);
for(j = 12390; j < 12400; j++) _solve(b, j);
for(j = 13230; j < 13240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14070; j < 14080; j++) _solve(b, j);
for(j = 14910; j < 14920; j++) _solve(b, j);
for(j = 15750; j < 15760; j++) _solve(b, j);
for(j = 16590; j < 16600; j++) _solve(b, j);
for(j = 17430; j < 17440; j++) _solve(b, j);
for(j = 18270; j < 18280; j++) _solve(b, j);
for(j = 19110; j < 19120; j++) _solve(b, j);
for(j = 19950; j < 19960; j++) _solve(b, j);
for(j = 20790; j < 20800; j++) _solve(b, j);
for(j = 21630; j < 21640; j++) _solve(b, j);
for(j = 22470; j < 22480; j++) _solve(b, j);
for(j = 23310; j < 23320; j++) _solve(b, j);
for(j = 24150; j < 24160; j++) _solve(b, j);
for(j = 24990; j < 25000; j++) _solve(b, j);
for(j = 25830; j < 25840; j++) _solve(b, j);
for(j = 26670; j < 26680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27510; j < 27520; j++) _solve(b, j);
for(j = 28350; j < 28360; j++) _solve(b, j);
for(j = 29190; j < 29200; j++) _solve(b, j);
for(j = 30030; j < 30040; j++) _solve(b, j);
for(j = 30870; j < 30880; j++) _solve(b, j);
for(j = 31710; j < 31720; j++) _solve(b, j);
for(j = 32550; j < 32560; j++) _solve(b, j);
for(j = 33390; j < 33400; j++) _solve(b, j);
for(j = 34230; j < 34240; j++) _solve(b, j);
for(j = 35070; j < 35080; j++) _solve(b, j);
for(j = 35910; j < 35920; j++) _solve(b, j);
for(j = 36750; j < 36760; j++) _solve(b, j);
for(j = 37590; j < 37600; j++) _solve(b, j);
for(j = 38430; j < 38440; j++) _solve(b, j);
for(j = 39270; j < 39280; j++) _solve(b, j);
for(j = 40110; j < 40120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40950; j < 40960; j++) _solve(b, j);
for(j = 41790; j < 41800; j++) _solve(b, j);
for(j = 42630; j < 42640; j++) _solve(b, j);
for(j = 43470; j < 43480; j++) _solve(b, j);
for(j = 44310; j < 44320; j++) _solve(b, j);
for(j = 45150; j < 45160; j++) _solve(b, j);
for(j = 45990; j < 46000; j++) _solve(b, j);
for(j = 46830; j < 46840; j++) _solve(b, j);
for(j = 47670; j < 47680; j++) _solve(b, j);
for(j = 48510; j < 48520; j++) _solve(b, j);
for(j = 49350; j < 49360; j++) _solve(b, j);
for(j = 50190; j < 50200; j++) _solve(b, j);
for(j = 51030; j < 51040; j++) _solve(b, j);
for(j = 51870; j < 51880; j++) _solve(b, j);
for(j = 52710; j < 52720; j++) _solve(b, j);
for(j = 53550; j < 53560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 640; j < 650; j++) _solve(b, j);
for(j = 1480; j < 1490; j++) _solve(b, j);
for(j = 2320; j < 2330; j++) _solve(b, j);
for(j = 3160; j < 3170; j++) _solve(b, j);
for(j = 4000; j < 4010; j++) _solve(b, j);
for(j = 4840; j < 4850; j++) _solve(b, j);
for(j = 5680; j < 5690; j++) _solve(b, j);
for(j = 6520; j < 6530; j++) _solve(b, j);
for(j = 7360; j < 7370; j++) _solve(b, j);
for(j = 8200; j < 8210; j++) _solve(b, j);
for(j = 9040; j < 9050; j++) _solve(b, j);
for(j = 9880; j < 9890; j++) _solve(b, j);
for(j = 10720; j < 10730; j++) _solve(b, j);
for(j = 11560; j < 11570; j++) _solve(b, j);
for(j = 12400; j < 12410; j++) _solve(b, j);
for(j = 13240; j < 13250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14080; j < 14090; j++) _solve(b, j);
for(j = 14920; j < 14930; j++) _solve(b, j);
for(j = 15760; j < 15770; j++) _solve(b, j);
for(j = 16600; j < 16610; j++) _solve(b, j);
for(j = 17440; j < 17450; j++) _solve(b, j);
for(j = 18280; j < 18290; j++) _solve(b, j);
for(j = 19120; j < 19130; j++) _solve(b, j);
for(j = 19960; j < 19970; j++) _solve(b, j);
for(j = 20800; j < 20810; j++) _solve(b, j);
for(j = 21640; j < 21650; j++) _solve(b, j);
for(j = 22480; j < 22490; j++) _solve(b, j);
for(j = 23320; j < 23330; j++) _solve(b, j);
for(j = 24160; j < 24170; j++) _solve(b, j);
for(j = 25000; j < 25010; j++) _solve(b, j);
for(j = 25840; j < 25850; j++) _solve(b, j);
for(j = 26680; j < 26690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27520; j < 27530; j++) _solve(b, j);
for(j = 28360; j < 28370; j++) _solve(b, j);
for(j = 29200; j < 29210; j++) _solve(b, j);
for(j = 30040; j < 30050; j++) _solve(b, j);
for(j = 30880; j < 30890; j++) _solve(b, j);
for(j = 31720; j < 31730; j++) _solve(b, j);
for(j = 32560; j < 32570; j++) _solve(b, j);
for(j = 33400; j < 33410; j++) _solve(b, j);
for(j = 34240; j < 34250; j++) _solve(b, j);
for(j = 35080; j < 35090; j++) _solve(b, j);
for(j = 35920; j < 35930; j++) _solve(b, j);
for(j = 36760; j < 36770; j++) _solve(b, j);
for(j = 37600; j < 37610; j++) _solve(b, j);
for(j = 38440; j < 38450; j++) _solve(b, j);
for(j = 39280; j < 39290; j++) _solve(b, j);
for(j = 40120; j < 40130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40960; j < 40970; j++) _solve(b, j);
for(j = 41800; j < 41810; j++) _solve(b, j);
for(j = 42640; j < 42650; j++) _solve(b, j);
for(j = 43480; j < 43490; j++) _solve(b, j);
for(j = 44320; j < 44330; j++) _solve(b, j);
for(j = 45160; j < 45170; j++) _solve(b, j);
for(j = 46000; j < 46010; j++) _solve(b, j);
for(j = 46840; j < 46850; j++) _solve(b, j);
for(j = 47680; j < 47690; j++) _solve(b, j);
for(j = 48520; j < 48530; j++) _solve(b, j);
for(j = 49360; j < 49370; j++) _solve(b, j);
for(j = 50200; j < 50210; j++) _solve(b, j);
for(j = 51040; j < 51050; j++) _solve(b, j);
for(j = 51880; j < 51890; j++) _solve(b, j);
for(j = 52720; j < 52730; j++) _solve(b, j);
for(j = 53560; j < 53570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54400; j < 54410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 650; j < 660; j++) _solve(b, j);
for(j = 1490; j < 1500; j++) _solve(b, j);
for(j = 2330; j < 2340; j++) _solve(b, j);
for(j = 3170; j < 3180; j++) _solve(b, j);
for(j = 4010; j < 4020; j++) _solve(b, j);
for(j = 4850; j < 4860; j++) _solve(b, j);
for(j = 5690; j < 5700; j++) _solve(b, j);
for(j = 6530; j < 6540; j++) _solve(b, j);
for(j = 7370; j < 7380; j++) _solve(b, j);
for(j = 8210; j < 8220; j++) _solve(b, j);
for(j = 9050; j < 9060; j++) _solve(b, j);
for(j = 9890; j < 9900; j++) _solve(b, j);
for(j = 10730; j < 10740; j++) _solve(b, j);
for(j = 11570; j < 11580; j++) _solve(b, j);
for(j = 12410; j < 12420; j++) _solve(b, j);
for(j = 13250; j < 13260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14090; j < 14100; j++) _solve(b, j);
for(j = 14930; j < 14940; j++) _solve(b, j);
for(j = 15770; j < 15780; j++) _solve(b, j);
for(j = 16610; j < 16620; j++) _solve(b, j);
for(j = 17450; j < 17460; j++) _solve(b, j);
for(j = 18290; j < 18300; j++) _solve(b, j);
for(j = 19130; j < 19140; j++) _solve(b, j);
for(j = 19970; j < 19980; j++) _solve(b, j);
for(j = 20810; j < 20820; j++) _solve(b, j);
for(j = 21650; j < 21660; j++) _solve(b, j);
for(j = 22490; j < 22500; j++) _solve(b, j);
for(j = 23330; j < 23340; j++) _solve(b, j);
for(j = 24170; j < 24180; j++) _solve(b, j);
for(j = 25010; j < 25020; j++) _solve(b, j);
for(j = 25850; j < 25860; j++) _solve(b, j);
for(j = 26690; j < 26700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27530; j < 27540; j++) _solve(b, j);
for(j = 28370; j < 28380; j++) _solve(b, j);
for(j = 29210; j < 29220; j++) _solve(b, j);
for(j = 30050; j < 30060; j++) _solve(b, j);
for(j = 30890; j < 30900; j++) _solve(b, j);
for(j = 31730; j < 31740; j++) _solve(b, j);
for(j = 32570; j < 32580; j++) _solve(b, j);
for(j = 33410; j < 33420; j++) _solve(b, j);
for(j = 34250; j < 34260; j++) _solve(b, j);
for(j = 35090; j < 35100; j++) _solve(b, j);
for(j = 35930; j < 35940; j++) _solve(b, j);
for(j = 36770; j < 36780; j++) _solve(b, j);
for(j = 37610; j < 37620; j++) _solve(b, j);
for(j = 38450; j < 38460; j++) _solve(b, j);
for(j = 39290; j < 39300; j++) _solve(b, j);
for(j = 40130; j < 40140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40970; j < 40980; j++) _solve(b, j);
for(j = 41810; j < 41820; j++) _solve(b, j);
for(j = 42650; j < 42660; j++) _solve(b, j);
for(j = 43490; j < 43500; j++) _solve(b, j);
for(j = 44330; j < 44340; j++) _solve(b, j);
for(j = 45170; j < 45180; j++) _solve(b, j);
for(j = 46010; j < 46020; j++) _solve(b, j);
for(j = 46850; j < 46860; j++) _solve(b, j);
for(j = 47690; j < 47700; j++) _solve(b, j);
for(j = 48530; j < 48540; j++) _solve(b, j);
for(j = 49370; j < 49380; j++) _solve(b, j);
for(j = 50210; j < 50220; j++) _solve(b, j);
for(j = 51050; j < 51060; j++) _solve(b, j);
for(j = 51890; j < 51900; j++) _solve(b, j);
for(j = 52730; j < 52740; j++) _solve(b, j);
for(j = 53570; j < 53580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54410; j < 54420; j++) _solve(b, j);
for(j = 55250; j < 55260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 660; j < 670; j++) _solve(b, j);
for(j = 1500; j < 1510; j++) _solve(b, j);
for(j = 2340; j < 2350; j++) _solve(b, j);
for(j = 3180; j < 3190; j++) _solve(b, j);
for(j = 4020; j < 4030; j++) _solve(b, j);
for(j = 4860; j < 4870; j++) _solve(b, j);
for(j = 5700; j < 5710; j++) _solve(b, j);
for(j = 6540; j < 6550; j++) _solve(b, j);
for(j = 7380; j < 7390; j++) _solve(b, j);
for(j = 8220; j < 8230; j++) _solve(b, j);
for(j = 9060; j < 9070; j++) _solve(b, j);
for(j = 9900; j < 9910; j++) _solve(b, j);
for(j = 10740; j < 10750; j++) _solve(b, j);
for(j = 11580; j < 11590; j++) _solve(b, j);
for(j = 12420; j < 12430; j++) _solve(b, j);
for(j = 13260; j < 13270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14100; j < 14110; j++) _solve(b, j);
for(j = 14940; j < 14950; j++) _solve(b, j);
for(j = 15780; j < 15790; j++) _solve(b, j);
for(j = 16620; j < 16630; j++) _solve(b, j);
for(j = 17460; j < 17470; j++) _solve(b, j);
for(j = 18300; j < 18310; j++) _solve(b, j);
for(j = 19140; j < 19150; j++) _solve(b, j);
for(j = 19980; j < 19990; j++) _solve(b, j);
for(j = 20820; j < 20830; j++) _solve(b, j);
for(j = 21660; j < 21670; j++) _solve(b, j);
for(j = 22500; j < 22510; j++) _solve(b, j);
for(j = 23340; j < 23350; j++) _solve(b, j);
for(j = 24180; j < 24190; j++) _solve(b, j);
for(j = 25020; j < 25030; j++) _solve(b, j);
for(j = 25860; j < 25870; j++) _solve(b, j);
for(j = 26700; j < 26710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27540; j < 27550; j++) _solve(b, j);
for(j = 28380; j < 28390; j++) _solve(b, j);
for(j = 29220; j < 29230; j++) _solve(b, j);
for(j = 30060; j < 30070; j++) _solve(b, j);
for(j = 30900; j < 30910; j++) _solve(b, j);
for(j = 31740; j < 31750; j++) _solve(b, j);
for(j = 32580; j < 32590; j++) _solve(b, j);
for(j = 33420; j < 33430; j++) _solve(b, j);
for(j = 34260; j < 34270; j++) _solve(b, j);
for(j = 35100; j < 35110; j++) _solve(b, j);
for(j = 35940; j < 35950; j++) _solve(b, j);
for(j = 36780; j < 36790; j++) _solve(b, j);
for(j = 37620; j < 37630; j++) _solve(b, j);
for(j = 38460; j < 38470; j++) _solve(b, j);
for(j = 39300; j < 39310; j++) _solve(b, j);
for(j = 40140; j < 40150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40980; j < 40990; j++) _solve(b, j);
for(j = 41820; j < 41830; j++) _solve(b, j);
for(j = 42660; j < 42670; j++) _solve(b, j);
for(j = 43500; j < 43510; j++) _solve(b, j);
for(j = 44340; j < 44350; j++) _solve(b, j);
for(j = 45180; j < 45190; j++) _solve(b, j);
for(j = 46020; j < 46030; j++) _solve(b, j);
for(j = 46860; j < 46870; j++) _solve(b, j);
for(j = 47700; j < 47710; j++) _solve(b, j);
for(j = 48540; j < 48550; j++) _solve(b, j);
for(j = 49380; j < 49390; j++) _solve(b, j);
for(j = 50220; j < 50230; j++) _solve(b, j);
for(j = 51060; j < 51070; j++) _solve(b, j);
for(j = 51900; j < 51910; j++) _solve(b, j);
for(j = 52740; j < 52750; j++) _solve(b, j);
for(j = 53580; j < 53590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54420; j < 54430; j++) _solve(b, j);
for(j = 55260; j < 55270; j++) _solve(b, j);
for(j = 56100; j < 56110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 670; j < 680; j++) _solve(b, j);
for(j = 1510; j < 1520; j++) _solve(b, j);
for(j = 2350; j < 2360; j++) _solve(b, j);
for(j = 3190; j < 3200; j++) _solve(b, j);
for(j = 4030; j < 4040; j++) _solve(b, j);
for(j = 4870; j < 4880; j++) _solve(b, j);
for(j = 5710; j < 5720; j++) _solve(b, j);
for(j = 6550; j < 6560; j++) _solve(b, j);
for(j = 7390; j < 7400; j++) _solve(b, j);
for(j = 8230; j < 8240; j++) _solve(b, j);
for(j = 9070; j < 9080; j++) _solve(b, j);
for(j = 9910; j < 9920; j++) _solve(b, j);
for(j = 10750; j < 10760; j++) _solve(b, j);
for(j = 11590; j < 11600; j++) _solve(b, j);
for(j = 12430; j < 12440; j++) _solve(b, j);
for(j = 13270; j < 13280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14110; j < 14120; j++) _solve(b, j);
for(j = 14950; j < 14960; j++) _solve(b, j);
for(j = 15790; j < 15800; j++) _solve(b, j);
for(j = 16630; j < 16640; j++) _solve(b, j);
for(j = 17470; j < 17480; j++) _solve(b, j);
for(j = 18310; j < 18320; j++) _solve(b, j);
for(j = 19150; j < 19160; j++) _solve(b, j);
for(j = 19990; j < 20000; j++) _solve(b, j);
for(j = 20830; j < 20840; j++) _solve(b, j);
for(j = 21670; j < 21680; j++) _solve(b, j);
for(j = 22510; j < 22520; j++) _solve(b, j);
for(j = 23350; j < 23360; j++) _solve(b, j);
for(j = 24190; j < 24200; j++) _solve(b, j);
for(j = 25030; j < 25040; j++) _solve(b, j);
for(j = 25870; j < 25880; j++) _solve(b, j);
for(j = 26710; j < 26720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27550; j < 27560; j++) _solve(b, j);
for(j = 28390; j < 28400; j++) _solve(b, j);
for(j = 29230; j < 29240; j++) _solve(b, j);
for(j = 30070; j < 30080; j++) _solve(b, j);
for(j = 30910; j < 30920; j++) _solve(b, j);
for(j = 31750; j < 31760; j++) _solve(b, j);
for(j = 32590; j < 32600; j++) _solve(b, j);
for(j = 33430; j < 33440; j++) _solve(b, j);
for(j = 34270; j < 34280; j++) _solve(b, j);
for(j = 35110; j < 35120; j++) _solve(b, j);
for(j = 35950; j < 35960; j++) _solve(b, j);
for(j = 36790; j < 36800; j++) _solve(b, j);
for(j = 37630; j < 37640; j++) _solve(b, j);
for(j = 38470; j < 38480; j++) _solve(b, j);
for(j = 39310; j < 39320; j++) _solve(b, j);
for(j = 40150; j < 40160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40990; j < 41000; j++) _solve(b, j);
for(j = 41830; j < 41840; j++) _solve(b, j);
for(j = 42670; j < 42680; j++) _solve(b, j);
for(j = 43510; j < 43520; j++) _solve(b, j);
for(j = 44350; j < 44360; j++) _solve(b, j);
for(j = 45190; j < 45200; j++) _solve(b, j);
for(j = 46030; j < 46040; j++) _solve(b, j);
for(j = 46870; j < 46880; j++) _solve(b, j);
for(j = 47710; j < 47720; j++) _solve(b, j);
for(j = 48550; j < 48560; j++) _solve(b, j);
for(j = 49390; j < 49400; j++) _solve(b, j);
for(j = 50230; j < 50240; j++) _solve(b, j);
for(j = 51070; j < 51080; j++) _solve(b, j);
for(j = 51910; j < 51920; j++) _solve(b, j);
for(j = 52750; j < 52760; j++) _solve(b, j);
for(j = 53590; j < 53600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54430; j < 54440; j++) _solve(b, j);
for(j = 55270; j < 55280; j++) _solve(b, j);
for(j = 56110; j < 56120; j++) _solve(b, j);
for(j = 56950; j < 56960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 680; j < 690; j++) _solve(b, j);
for(j = 1520; j < 1530; j++) _solve(b, j);
for(j = 2360; j < 2370; j++) _solve(b, j);
for(j = 3200; j < 3210; j++) _solve(b, j);
for(j = 4040; j < 4050; j++) _solve(b, j);
for(j = 4880; j < 4890; j++) _solve(b, j);
for(j = 5720; j < 5730; j++) _solve(b, j);
for(j = 6560; j < 6570; j++) _solve(b, j);
for(j = 7400; j < 7410; j++) _solve(b, j);
for(j = 8240; j < 8250; j++) _solve(b, j);
for(j = 9080; j < 9090; j++) _solve(b, j);
for(j = 9920; j < 9930; j++) _solve(b, j);
for(j = 10760; j < 10770; j++) _solve(b, j);
for(j = 11600; j < 11610; j++) _solve(b, j);
for(j = 12440; j < 12450; j++) _solve(b, j);
for(j = 13280; j < 13290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14120; j < 14130; j++) _solve(b, j);
for(j = 14960; j < 14970; j++) _solve(b, j);
for(j = 15800; j < 15810; j++) _solve(b, j);
for(j = 16640; j < 16650; j++) _solve(b, j);
for(j = 17480; j < 17490; j++) _solve(b, j);
for(j = 18320; j < 18330; j++) _solve(b, j);
for(j = 19160; j < 19170; j++) _solve(b, j);
for(j = 20000; j < 20010; j++) _solve(b, j);
for(j = 20840; j < 20850; j++) _solve(b, j);
for(j = 21680; j < 21690; j++) _solve(b, j);
for(j = 22520; j < 22530; j++) _solve(b, j);
for(j = 23360; j < 23370; j++) _solve(b, j);
for(j = 24200; j < 24210; j++) _solve(b, j);
for(j = 25040; j < 25050; j++) _solve(b, j);
for(j = 25880; j < 25890; j++) _solve(b, j);
for(j = 26720; j < 26730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27560; j < 27570; j++) _solve(b, j);
for(j = 28400; j < 28410; j++) _solve(b, j);
for(j = 29240; j < 29250; j++) _solve(b, j);
for(j = 30080; j < 30090; j++) _solve(b, j);
for(j = 30920; j < 30930; j++) _solve(b, j);
for(j = 31760; j < 31770; j++) _solve(b, j);
for(j = 32600; j < 32610; j++) _solve(b, j);
for(j = 33440; j < 33450; j++) _solve(b, j);
for(j = 34280; j < 34290; j++) _solve(b, j);
for(j = 35120; j < 35130; j++) _solve(b, j);
for(j = 35960; j < 35970; j++) _solve(b, j);
for(j = 36800; j < 36810; j++) _solve(b, j);
for(j = 37640; j < 37650; j++) _solve(b, j);
for(j = 38480; j < 38490; j++) _solve(b, j);
for(j = 39320; j < 39330; j++) _solve(b, j);
for(j = 40160; j < 40170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41000; j < 41010; j++) _solve(b, j);
for(j = 41840; j < 41850; j++) _solve(b, j);
for(j = 42680; j < 42690; j++) _solve(b, j);
for(j = 43520; j < 43530; j++) _solve(b, j);
for(j = 44360; j < 44370; j++) _solve(b, j);
for(j = 45200; j < 45210; j++) _solve(b, j);
for(j = 46040; j < 46050; j++) _solve(b, j);
for(j = 46880; j < 46890; j++) _solve(b, j);
for(j = 47720; j < 47730; j++) _solve(b, j);
for(j = 48560; j < 48570; j++) _solve(b, j);
for(j = 49400; j < 49410; j++) _solve(b, j);
for(j = 50240; j < 50250; j++) _solve(b, j);
for(j = 51080; j < 51090; j++) _solve(b, j);
for(j = 51920; j < 51930; j++) _solve(b, j);
for(j = 52760; j < 52770; j++) _solve(b, j);
for(j = 53600; j < 53610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54440; j < 54450; j++) _solve(b, j);
for(j = 55280; j < 55290; j++) _solve(b, j);
for(j = 56120; j < 56130; j++) _solve(b, j);
for(j = 56960; j < 56970; j++) _solve(b, j);
for(j = 57800; j < 57810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 690; j < 700; j++) _solve(b, j);
for(j = 1530; j < 1540; j++) _solve(b, j);
for(j = 2370; j < 2380; j++) _solve(b, j);
for(j = 3210; j < 3220; j++) _solve(b, j);
for(j = 4050; j < 4060; j++) _solve(b, j);
for(j = 4890; j < 4900; j++) _solve(b, j);
for(j = 5730; j < 5740; j++) _solve(b, j);
for(j = 6570; j < 6580; j++) _solve(b, j);
for(j = 7410; j < 7420; j++) _solve(b, j);
for(j = 8250; j < 8260; j++) _solve(b, j);
for(j = 9090; j < 9100; j++) _solve(b, j);
for(j = 9930; j < 9940; j++) _solve(b, j);
for(j = 10770; j < 10780; j++) _solve(b, j);
for(j = 11610; j < 11620; j++) _solve(b, j);
for(j = 12450; j < 12460; j++) _solve(b, j);
for(j = 13290; j < 13300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14130; j < 14140; j++) _solve(b, j);
for(j = 14970; j < 14980; j++) _solve(b, j);
for(j = 15810; j < 15820; j++) _solve(b, j);
for(j = 16650; j < 16660; j++) _solve(b, j);
for(j = 17490; j < 17500; j++) _solve(b, j);
for(j = 18330; j < 18340; j++) _solve(b, j);
for(j = 19170; j < 19180; j++) _solve(b, j);
for(j = 20010; j < 20020; j++) _solve(b, j);
for(j = 20850; j < 20860; j++) _solve(b, j);
for(j = 21690; j < 21700; j++) _solve(b, j);
for(j = 22530; j < 22540; j++) _solve(b, j);
for(j = 23370; j < 23380; j++) _solve(b, j);
for(j = 24210; j < 24220; j++) _solve(b, j);
for(j = 25050; j < 25060; j++) _solve(b, j);
for(j = 25890; j < 25900; j++) _solve(b, j);
for(j = 26730; j < 26740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27570; j < 27580; j++) _solve(b, j);
for(j = 28410; j < 28420; j++) _solve(b, j);
for(j = 29250; j < 29260; j++) _solve(b, j);
for(j = 30090; j < 30100; j++) _solve(b, j);
for(j = 30930; j < 30940; j++) _solve(b, j);
for(j = 31770; j < 31780; j++) _solve(b, j);
for(j = 32610; j < 32620; j++) _solve(b, j);
for(j = 33450; j < 33460; j++) _solve(b, j);
for(j = 34290; j < 34300; j++) _solve(b, j);
for(j = 35130; j < 35140; j++) _solve(b, j);
for(j = 35970; j < 35980; j++) _solve(b, j);
for(j = 36810; j < 36820; j++) _solve(b, j);
for(j = 37650; j < 37660; j++) _solve(b, j);
for(j = 38490; j < 38500; j++) _solve(b, j);
for(j = 39330; j < 39340; j++) _solve(b, j);
for(j = 40170; j < 40180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41010; j < 41020; j++) _solve(b, j);
for(j = 41850; j < 41860; j++) _solve(b, j);
for(j = 42690; j < 42700; j++) _solve(b, j);
for(j = 43530; j < 43540; j++) _solve(b, j);
for(j = 44370; j < 44380; j++) _solve(b, j);
for(j = 45210; j < 45220; j++) _solve(b, j);
for(j = 46050; j < 46060; j++) _solve(b, j);
for(j = 46890; j < 46900; j++) _solve(b, j);
for(j = 47730; j < 47740; j++) _solve(b, j);
for(j = 48570; j < 48580; j++) _solve(b, j);
for(j = 49410; j < 49420; j++) _solve(b, j);
for(j = 50250; j < 50260; j++) _solve(b, j);
for(j = 51090; j < 51100; j++) _solve(b, j);
for(j = 51930; j < 51940; j++) _solve(b, j);
for(j = 52770; j < 52780; j++) _solve(b, j);
for(j = 53610; j < 53620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54450; j < 54460; j++) _solve(b, j);
for(j = 55290; j < 55300; j++) _solve(b, j);
for(j = 56130; j < 56140; j++) _solve(b, j);
for(j = 56970; j < 56980; j++) _solve(b, j);
for(j = 57810; j < 57820; j++) _solve(b, j);
for(j = 58650; j < 58660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 700; j < 710; j++) _solve(b, j);
for(j = 1540; j < 1550; j++) _solve(b, j);
for(j = 2380; j < 2390; j++) _solve(b, j);
for(j = 3220; j < 3230; j++) _solve(b, j);
for(j = 4060; j < 4070; j++) _solve(b, j);
for(j = 4900; j < 4910; j++) _solve(b, j);
for(j = 5740; j < 5750; j++) _solve(b, j);
for(j = 6580; j < 6590; j++) _solve(b, j);
for(j = 7420; j < 7430; j++) _solve(b, j);
for(j = 8260; j < 8270; j++) _solve(b, j);
for(j = 9100; j < 9110; j++) _solve(b, j);
for(j = 9940; j < 9950; j++) _solve(b, j);
for(j = 10780; j < 10790; j++) _solve(b, j);
for(j = 11620; j < 11630; j++) _solve(b, j);
for(j = 12460; j < 12470; j++) _solve(b, j);
for(j = 13300; j < 13310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14140; j < 14150; j++) _solve(b, j);
for(j = 14980; j < 14990; j++) _solve(b, j);
for(j = 15820; j < 15830; j++) _solve(b, j);
for(j = 16660; j < 16670; j++) _solve(b, j);
for(j = 17500; j < 17510; j++) _solve(b, j);
for(j = 18340; j < 18350; j++) _solve(b, j);
for(j = 19180; j < 19190; j++) _solve(b, j);
for(j = 20020; j < 20030; j++) _solve(b, j);
for(j = 20860; j < 20870; j++) _solve(b, j);
for(j = 21700; j < 21710; j++) _solve(b, j);
for(j = 22540; j < 22550; j++) _solve(b, j);
for(j = 23380; j < 23390; j++) _solve(b, j);
for(j = 24220; j < 24230; j++) _solve(b, j);
for(j = 25060; j < 25070; j++) _solve(b, j);
for(j = 25900; j < 25910; j++) _solve(b, j);
for(j = 26740; j < 26750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27580; j < 27590; j++) _solve(b, j);
for(j = 28420; j < 28430; j++) _solve(b, j);
for(j = 29260; j < 29270; j++) _solve(b, j);
for(j = 30100; j < 30110; j++) _solve(b, j);
for(j = 30940; j < 30950; j++) _solve(b, j);
for(j = 31780; j < 31790; j++) _solve(b, j);
for(j = 32620; j < 32630; j++) _solve(b, j);
for(j = 33460; j < 33470; j++) _solve(b, j);
for(j = 34300; j < 34310; j++) _solve(b, j);
for(j = 35140; j < 35150; j++) _solve(b, j);
for(j = 35980; j < 35990; j++) _solve(b, j);
for(j = 36820; j < 36830; j++) _solve(b, j);
for(j = 37660; j < 37670; j++) _solve(b, j);
for(j = 38500; j < 38510; j++) _solve(b, j);
for(j = 39340; j < 39350; j++) _solve(b, j);
for(j = 40180; j < 40190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41020; j < 41030; j++) _solve(b, j);
for(j = 41860; j < 41870; j++) _solve(b, j);
for(j = 42700; j < 42710; j++) _solve(b, j);
for(j = 43540; j < 43550; j++) _solve(b, j);
for(j = 44380; j < 44390; j++) _solve(b, j);
for(j = 45220; j < 45230; j++) _solve(b, j);
for(j = 46060; j < 46070; j++) _solve(b, j);
for(j = 46900; j < 46910; j++) _solve(b, j);
for(j = 47740; j < 47750; j++) _solve(b, j);
for(j = 48580; j < 48590; j++) _solve(b, j);
for(j = 49420; j < 49430; j++) _solve(b, j);
for(j = 50260; j < 50270; j++) _solve(b, j);
for(j = 51100; j < 51110; j++) _solve(b, j);
for(j = 51940; j < 51950; j++) _solve(b, j);
for(j = 52780; j < 52790; j++) _solve(b, j);
for(j = 53620; j < 53630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54460; j < 54470; j++) _solve(b, j);
for(j = 55300; j < 55310; j++) _solve(b, j);
for(j = 56140; j < 56150; j++) _solve(b, j);
for(j = 56980; j < 56990; j++) _solve(b, j);
for(j = 57820; j < 57830; j++) _solve(b, j);
for(j = 58660; j < 58670; j++) _solve(b, j);
for(j = 59500; j < 59510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 710; j < 720; j++) _solve(b, j);
for(j = 1550; j < 1560; j++) _solve(b, j);
for(j = 2390; j < 2400; j++) _solve(b, j);
for(j = 3230; j < 3240; j++) _solve(b, j);
for(j = 4070; j < 4080; j++) _solve(b, j);
for(j = 4910; j < 4920; j++) _solve(b, j);
for(j = 5750; j < 5760; j++) _solve(b, j);
for(j = 6590; j < 6600; j++) _solve(b, j);
for(j = 7430; j < 7440; j++) _solve(b, j);
for(j = 8270; j < 8280; j++) _solve(b, j);
for(j = 9110; j < 9120; j++) _solve(b, j);
for(j = 9950; j < 9960; j++) _solve(b, j);
for(j = 10790; j < 10800; j++) _solve(b, j);
for(j = 11630; j < 11640; j++) _solve(b, j);
for(j = 12470; j < 12480; j++) _solve(b, j);
for(j = 13310; j < 13320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14150; j < 14160; j++) _solve(b, j);
for(j = 14990; j < 15000; j++) _solve(b, j);
for(j = 15830; j < 15840; j++) _solve(b, j);
for(j = 16670; j < 16680; j++) _solve(b, j);
for(j = 17510; j < 17520; j++) _solve(b, j);
for(j = 18350; j < 18360; j++) _solve(b, j);
for(j = 19190; j < 19200; j++) _solve(b, j);
for(j = 20030; j < 20040; j++) _solve(b, j);
for(j = 20870; j < 20880; j++) _solve(b, j);
for(j = 21710; j < 21720; j++) _solve(b, j);
for(j = 22550; j < 22560; j++) _solve(b, j);
for(j = 23390; j < 23400; j++) _solve(b, j);
for(j = 24230; j < 24240; j++) _solve(b, j);
for(j = 25070; j < 25080; j++) _solve(b, j);
for(j = 25910; j < 25920; j++) _solve(b, j);
for(j = 26750; j < 26760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27590; j < 27600; j++) _solve(b, j);
for(j = 28430; j < 28440; j++) _solve(b, j);
for(j = 29270; j < 29280; j++) _solve(b, j);
for(j = 30110; j < 30120; j++) _solve(b, j);
for(j = 30950; j < 30960; j++) _solve(b, j);
for(j = 31790; j < 31800; j++) _solve(b, j);
for(j = 32630; j < 32640; j++) _solve(b, j);
for(j = 33470; j < 33480; j++) _solve(b, j);
for(j = 34310; j < 34320; j++) _solve(b, j);
for(j = 35150; j < 35160; j++) _solve(b, j);
for(j = 35990; j < 36000; j++) _solve(b, j);
for(j = 36830; j < 36840; j++) _solve(b, j);
for(j = 37670; j < 37680; j++) _solve(b, j);
for(j = 38510; j < 38520; j++) _solve(b, j);
for(j = 39350; j < 39360; j++) _solve(b, j);
for(j = 40190; j < 40200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41030; j < 41040; j++) _solve(b, j);
for(j = 41870; j < 41880; j++) _solve(b, j);
for(j = 42710; j < 42720; j++) _solve(b, j);
for(j = 43550; j < 43560; j++) _solve(b, j);
for(j = 44390; j < 44400; j++) _solve(b, j);
for(j = 45230; j < 45240; j++) _solve(b, j);
for(j = 46070; j < 46080; j++) _solve(b, j);
for(j = 46910; j < 46920; j++) _solve(b, j);
for(j = 47750; j < 47760; j++) _solve(b, j);
for(j = 48590; j < 48600; j++) _solve(b, j);
for(j = 49430; j < 49440; j++) _solve(b, j);
for(j = 50270; j < 50280; j++) _solve(b, j);
for(j = 51110; j < 51120; j++) _solve(b, j);
for(j = 51950; j < 51960; j++) _solve(b, j);
for(j = 52790; j < 52800; j++) _solve(b, j);
for(j = 53630; j < 53640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54470; j < 54480; j++) _solve(b, j);
for(j = 55310; j < 55320; j++) _solve(b, j);
for(j = 56150; j < 56160; j++) _solve(b, j);
for(j = 56990; j < 57000; j++) _solve(b, j);
for(j = 57830; j < 57840; j++) _solve(b, j);
for(j = 58670; j < 58680; j++) _solve(b, j);
for(j = 59510; j < 59520; j++) _solve(b, j);
for(j = 60350; j < 60360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 720; j < 730; j++) _solve(b, j);
for(j = 1560; j < 1570; j++) _solve(b, j);
for(j = 2400; j < 2410; j++) _solve(b, j);
for(j = 3240; j < 3250; j++) _solve(b, j);
for(j = 4080; j < 4090; j++) _solve(b, j);
for(j = 4920; j < 4930; j++) _solve(b, j);
for(j = 5760; j < 5770; j++) _solve(b, j);
for(j = 6600; j < 6610; j++) _solve(b, j);
for(j = 7440; j < 7450; j++) _solve(b, j);
for(j = 8280; j < 8290; j++) _solve(b, j);
for(j = 9120; j < 9130; j++) _solve(b, j);
for(j = 9960; j < 9970; j++) _solve(b, j);
for(j = 10800; j < 10810; j++) _solve(b, j);
for(j = 11640; j < 11650; j++) _solve(b, j);
for(j = 12480; j < 12490; j++) _solve(b, j);
for(j = 13320; j < 13330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14160; j < 14170; j++) _solve(b, j);
for(j = 15000; j < 15010; j++) _solve(b, j);
for(j = 15840; j < 15850; j++) _solve(b, j);
for(j = 16680; j < 16690; j++) _solve(b, j);
for(j = 17520; j < 17530; j++) _solve(b, j);
for(j = 18360; j < 18370; j++) _solve(b, j);
for(j = 19200; j < 19210; j++) _solve(b, j);
for(j = 20040; j < 20050; j++) _solve(b, j);
for(j = 20880; j < 20890; j++) _solve(b, j);
for(j = 21720; j < 21730; j++) _solve(b, j);
for(j = 22560; j < 22570; j++) _solve(b, j);
for(j = 23400; j < 23410; j++) _solve(b, j);
for(j = 24240; j < 24250; j++) _solve(b, j);
for(j = 25080; j < 25090; j++) _solve(b, j);
for(j = 25920; j < 25930; j++) _solve(b, j);
for(j = 26760; j < 26770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27600; j < 27610; j++) _solve(b, j);
for(j = 28440; j < 28450; j++) _solve(b, j);
for(j = 29280; j < 29290; j++) _solve(b, j);
for(j = 30120; j < 30130; j++) _solve(b, j);
for(j = 30960; j < 30970; j++) _solve(b, j);
for(j = 31800; j < 31810; j++) _solve(b, j);
for(j = 32640; j < 32650; j++) _solve(b, j);
for(j = 33480; j < 33490; j++) _solve(b, j);
for(j = 34320; j < 34330; j++) _solve(b, j);
for(j = 35160; j < 35170; j++) _solve(b, j);
for(j = 36000; j < 36010; j++) _solve(b, j);
for(j = 36840; j < 36850; j++) _solve(b, j);
for(j = 37680; j < 37690; j++) _solve(b, j);
for(j = 38520; j < 38530; j++) _solve(b, j);
for(j = 39360; j < 39370; j++) _solve(b, j);
for(j = 40200; j < 40210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41040; j < 41050; j++) _solve(b, j);
for(j = 41880; j < 41890; j++) _solve(b, j);
for(j = 42720; j < 42730; j++) _solve(b, j);
for(j = 43560; j < 43570; j++) _solve(b, j);
for(j = 44400; j < 44410; j++) _solve(b, j);
for(j = 45240; j < 45250; j++) _solve(b, j);
for(j = 46080; j < 46090; j++) _solve(b, j);
for(j = 46920; j < 46930; j++) _solve(b, j);
for(j = 47760; j < 47770; j++) _solve(b, j);
for(j = 48600; j < 48610; j++) _solve(b, j);
for(j = 49440; j < 49450; j++) _solve(b, j);
for(j = 50280; j < 50290; j++) _solve(b, j);
for(j = 51120; j < 51130; j++) _solve(b, j);
for(j = 51960; j < 51970; j++) _solve(b, j);
for(j = 52800; j < 52810; j++) _solve(b, j);
for(j = 53640; j < 53650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54480; j < 54490; j++) _solve(b, j);
for(j = 55320; j < 55330; j++) _solve(b, j);
for(j = 56160; j < 56170; j++) _solve(b, j);
for(j = 57000; j < 57010; j++) _solve(b, j);
for(j = 57840; j < 57850; j++) _solve(b, j);
for(j = 58680; j < 58690; j++) _solve(b, j);
for(j = 59520; j < 59530; j++) _solve(b, j);
for(j = 60360; j < 60370; j++) _solve(b, j);
for(j = 61200; j < 61210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 730; j < 740; j++) _solve(b, j);
for(j = 1570; j < 1580; j++) _solve(b, j);
for(j = 2410; j < 2420; j++) _solve(b, j);
for(j = 3250; j < 3260; j++) _solve(b, j);
for(j = 4090; j < 4100; j++) _solve(b, j);
for(j = 4930; j < 4940; j++) _solve(b, j);
for(j = 5770; j < 5780; j++) _solve(b, j);
for(j = 6610; j < 6620; j++) _solve(b, j);
for(j = 7450; j < 7460; j++) _solve(b, j);
for(j = 8290; j < 8300; j++) _solve(b, j);
for(j = 9130; j < 9140; j++) _solve(b, j);
for(j = 9970; j < 9980; j++) _solve(b, j);
for(j = 10810; j < 10820; j++) _solve(b, j);
for(j = 11650; j < 11660; j++) _solve(b, j);
for(j = 12490; j < 12500; j++) _solve(b, j);
for(j = 13330; j < 13340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14170; j < 14180; j++) _solve(b, j);
for(j = 15010; j < 15020; j++) _solve(b, j);
for(j = 15850; j < 15860; j++) _solve(b, j);
for(j = 16690; j < 16700; j++) _solve(b, j);
for(j = 17530; j < 17540; j++) _solve(b, j);
for(j = 18370; j < 18380; j++) _solve(b, j);
for(j = 19210; j < 19220; j++) _solve(b, j);
for(j = 20050; j < 20060; j++) _solve(b, j);
for(j = 20890; j < 20900; j++) _solve(b, j);
for(j = 21730; j < 21740; j++) _solve(b, j);
for(j = 22570; j < 22580; j++) _solve(b, j);
for(j = 23410; j < 23420; j++) _solve(b, j);
for(j = 24250; j < 24260; j++) _solve(b, j);
for(j = 25090; j < 25100; j++) _solve(b, j);
for(j = 25930; j < 25940; j++) _solve(b, j);
for(j = 26770; j < 26780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27610; j < 27620; j++) _solve(b, j);
for(j = 28450; j < 28460; j++) _solve(b, j);
for(j = 29290; j < 29300; j++) _solve(b, j);
for(j = 30130; j < 30140; j++) _solve(b, j);
for(j = 30970; j < 30980; j++) _solve(b, j);
for(j = 31810; j < 31820; j++) _solve(b, j);
for(j = 32650; j < 32660; j++) _solve(b, j);
for(j = 33490; j < 33500; j++) _solve(b, j);
for(j = 34330; j < 34340; j++) _solve(b, j);
for(j = 35170; j < 35180; j++) _solve(b, j);
for(j = 36010; j < 36020; j++) _solve(b, j);
for(j = 36850; j < 36860; j++) _solve(b, j);
for(j = 37690; j < 37700; j++) _solve(b, j);
for(j = 38530; j < 38540; j++) _solve(b, j);
for(j = 39370; j < 39380; j++) _solve(b, j);
for(j = 40210; j < 40220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41050; j < 41060; j++) _solve(b, j);
for(j = 41890; j < 41900; j++) _solve(b, j);
for(j = 42730; j < 42740; j++) _solve(b, j);
for(j = 43570; j < 43580; j++) _solve(b, j);
for(j = 44410; j < 44420; j++) _solve(b, j);
for(j = 45250; j < 45260; j++) _solve(b, j);
for(j = 46090; j < 46100; j++) _solve(b, j);
for(j = 46930; j < 46940; j++) _solve(b, j);
for(j = 47770; j < 47780; j++) _solve(b, j);
for(j = 48610; j < 48620; j++) _solve(b, j);
for(j = 49450; j < 49460; j++) _solve(b, j);
for(j = 50290; j < 50300; j++) _solve(b, j);
for(j = 51130; j < 51140; j++) _solve(b, j);
for(j = 51970; j < 51980; j++) _solve(b, j);
for(j = 52810; j < 52820; j++) _solve(b, j);
for(j = 53650; j < 53660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54490; j < 54500; j++) _solve(b, j);
for(j = 55330; j < 55340; j++) _solve(b, j);
for(j = 56170; j < 56180; j++) _solve(b, j);
for(j = 57010; j < 57020; j++) _solve(b, j);
for(j = 57850; j < 57860; j++) _solve(b, j);
for(j = 58690; j < 58700; j++) _solve(b, j);
for(j = 59530; j < 59540; j++) _solve(b, j);
for(j = 60370; j < 60380; j++) _solve(b, j);
for(j = 61210; j < 61220; j++) _solve(b, j);
for(j = 62050; j < 62060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 740; j < 750; j++) _solve(b, j);
for(j = 1580; j < 1590; j++) _solve(b, j);
for(j = 2420; j < 2430; j++) _solve(b, j);
for(j = 3260; j < 3270; j++) _solve(b, j);
for(j = 4100; j < 4110; j++) _solve(b, j);
for(j = 4940; j < 4950; j++) _solve(b, j);
for(j = 5780; j < 5790; j++) _solve(b, j);
for(j = 6620; j < 6630; j++) _solve(b, j);
for(j = 7460; j < 7470; j++) _solve(b, j);
for(j = 8300; j < 8310; j++) _solve(b, j);
for(j = 9140; j < 9150; j++) _solve(b, j);
for(j = 9980; j < 9990; j++) _solve(b, j);
for(j = 10820; j < 10830; j++) _solve(b, j);
for(j = 11660; j < 11670; j++) _solve(b, j);
for(j = 12500; j < 12510; j++) _solve(b, j);
for(j = 13340; j < 13350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14180; j < 14190; j++) _solve(b, j);
for(j = 15020; j < 15030; j++) _solve(b, j);
for(j = 15860; j < 15870; j++) _solve(b, j);
for(j = 16700; j < 16710; j++) _solve(b, j);
for(j = 17540; j < 17550; j++) _solve(b, j);
for(j = 18380; j < 18390; j++) _solve(b, j);
for(j = 19220; j < 19230; j++) _solve(b, j);
for(j = 20060; j < 20070; j++) _solve(b, j);
for(j = 20900; j < 20910; j++) _solve(b, j);
for(j = 21740; j < 21750; j++) _solve(b, j);
for(j = 22580; j < 22590; j++) _solve(b, j);
for(j = 23420; j < 23430; j++) _solve(b, j);
for(j = 24260; j < 24270; j++) _solve(b, j);
for(j = 25100; j < 25110; j++) _solve(b, j);
for(j = 25940; j < 25950; j++) _solve(b, j);
for(j = 26780; j < 26790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27620; j < 27630; j++) _solve(b, j);
for(j = 28460; j < 28470; j++) _solve(b, j);
for(j = 29300; j < 29310; j++) _solve(b, j);
for(j = 30140; j < 30150; j++) _solve(b, j);
for(j = 30980; j < 30990; j++) _solve(b, j);
for(j = 31820; j < 31830; j++) _solve(b, j);
for(j = 32660; j < 32670; j++) _solve(b, j);
for(j = 33500; j < 33510; j++) _solve(b, j);
for(j = 34340; j < 34350; j++) _solve(b, j);
for(j = 35180; j < 35190; j++) _solve(b, j);
for(j = 36020; j < 36030; j++) _solve(b, j);
for(j = 36860; j < 36870; j++) _solve(b, j);
for(j = 37700; j < 37710; j++) _solve(b, j);
for(j = 38540; j < 38550; j++) _solve(b, j);
for(j = 39380; j < 39390; j++) _solve(b, j);
for(j = 40220; j < 40230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41060; j < 41070; j++) _solve(b, j);
for(j = 41900; j < 41910; j++) _solve(b, j);
for(j = 42740; j < 42750; j++) _solve(b, j);
for(j = 43580; j < 43590; j++) _solve(b, j);
for(j = 44420; j < 44430; j++) _solve(b, j);
for(j = 45260; j < 45270; j++) _solve(b, j);
for(j = 46100; j < 46110; j++) _solve(b, j);
for(j = 46940; j < 46950; j++) _solve(b, j);
for(j = 47780; j < 47790; j++) _solve(b, j);
for(j = 48620; j < 48630; j++) _solve(b, j);
for(j = 49460; j < 49470; j++) _solve(b, j);
for(j = 50300; j < 50310; j++) _solve(b, j);
for(j = 51140; j < 51150; j++) _solve(b, j);
for(j = 51980; j < 51990; j++) _solve(b, j);
for(j = 52820; j < 52830; j++) _solve(b, j);
for(j = 53660; j < 53670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54500; j < 54510; j++) _solve(b, j);
for(j = 55340; j < 55350; j++) _solve(b, j);
for(j = 56180; j < 56190; j++) _solve(b, j);
for(j = 57020; j < 57030; j++) _solve(b, j);
for(j = 57860; j < 57870; j++) _solve(b, j);
for(j = 58700; j < 58710; j++) _solve(b, j);
for(j = 59540; j < 59550; j++) _solve(b, j);
for(j = 60380; j < 60390; j++) _solve(b, j);
for(j = 61220; j < 61230; j++) _solve(b, j);
for(j = 62060; j < 62070; j++) _solve(b, j);
for(j = 62900; j < 62910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 750; j < 760; j++) _solve(b, j);
for(j = 1590; j < 1600; j++) _solve(b, j);
for(j = 2430; j < 2440; j++) _solve(b, j);
for(j = 3270; j < 3280; j++) _solve(b, j);
for(j = 4110; j < 4120; j++) _solve(b, j);
for(j = 4950; j < 4960; j++) _solve(b, j);
for(j = 5790; j < 5800; j++) _solve(b, j);
for(j = 6630; j < 6640; j++) _solve(b, j);
for(j = 7470; j < 7480; j++) _solve(b, j);
for(j = 8310; j < 8320; j++) _solve(b, j);
for(j = 9150; j < 9160; j++) _solve(b, j);
for(j = 9990; j < 10000; j++) _solve(b, j);
for(j = 10830; j < 10840; j++) _solve(b, j);
for(j = 11670; j < 11680; j++) _solve(b, j);
for(j = 12510; j < 12520; j++) _solve(b, j);
for(j = 13350; j < 13360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14190; j < 14200; j++) _solve(b, j);
for(j = 15030; j < 15040; j++) _solve(b, j);
for(j = 15870; j < 15880; j++) _solve(b, j);
for(j = 16710; j < 16720; j++) _solve(b, j);
for(j = 17550; j < 17560; j++) _solve(b, j);
for(j = 18390; j < 18400; j++) _solve(b, j);
for(j = 19230; j < 19240; j++) _solve(b, j);
for(j = 20070; j < 20080; j++) _solve(b, j);
for(j = 20910; j < 20920; j++) _solve(b, j);
for(j = 21750; j < 21760; j++) _solve(b, j);
for(j = 22590; j < 22600; j++) _solve(b, j);
for(j = 23430; j < 23440; j++) _solve(b, j);
for(j = 24270; j < 24280; j++) _solve(b, j);
for(j = 25110; j < 25120; j++) _solve(b, j);
for(j = 25950; j < 25960; j++) _solve(b, j);
for(j = 26790; j < 26800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27630; j < 27640; j++) _solve(b, j);
for(j = 28470; j < 28480; j++) _solve(b, j);
for(j = 29310; j < 29320; j++) _solve(b, j);
for(j = 30150; j < 30160; j++) _solve(b, j);
for(j = 30990; j < 31000; j++) _solve(b, j);
for(j = 31830; j < 31840; j++) _solve(b, j);
for(j = 32670; j < 32680; j++) _solve(b, j);
for(j = 33510; j < 33520; j++) _solve(b, j);
for(j = 34350; j < 34360; j++) _solve(b, j);
for(j = 35190; j < 35200; j++) _solve(b, j);
for(j = 36030; j < 36040; j++) _solve(b, j);
for(j = 36870; j < 36880; j++) _solve(b, j);
for(j = 37710; j < 37720; j++) _solve(b, j);
for(j = 38550; j < 38560; j++) _solve(b, j);
for(j = 39390; j < 39400; j++) _solve(b, j);
for(j = 40230; j < 40240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41070; j < 41080; j++) _solve(b, j);
for(j = 41910; j < 41920; j++) _solve(b, j);
for(j = 42750; j < 42760; j++) _solve(b, j);
for(j = 43590; j < 43600; j++) _solve(b, j);
for(j = 44430; j < 44440; j++) _solve(b, j);
for(j = 45270; j < 45280; j++) _solve(b, j);
for(j = 46110; j < 46120; j++) _solve(b, j);
for(j = 46950; j < 46960; j++) _solve(b, j);
for(j = 47790; j < 47800; j++) _solve(b, j);
for(j = 48630; j < 48640; j++) _solve(b, j);
for(j = 49470; j < 49480; j++) _solve(b, j);
for(j = 50310; j < 50320; j++) _solve(b, j);
for(j = 51150; j < 51160; j++) _solve(b, j);
for(j = 51990; j < 52000; j++) _solve(b, j);
for(j = 52830; j < 52840; j++) _solve(b, j);
for(j = 53670; j < 53680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54510; j < 54520; j++) _solve(b, j);
for(j = 55350; j < 55360; j++) _solve(b, j);
for(j = 56190; j < 56200; j++) _solve(b, j);
for(j = 57030; j < 57040; j++) _solve(b, j);
for(j = 57870; j < 57880; j++) _solve(b, j);
for(j = 58710; j < 58720; j++) _solve(b, j);
for(j = 59550; j < 59560; j++) _solve(b, j);
for(j = 60390; j < 60400; j++) _solve(b, j);
for(j = 61230; j < 61240; j++) _solve(b, j);
for(j = 62070; j < 62080; j++) _solve(b, j);
for(j = 62910; j < 62920; j++) _solve(b, j);
for(j = 63750; j < 63760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 760; j < 770; j++) _solve(b, j);
for(j = 1600; j < 1610; j++) _solve(b, j);
for(j = 2440; j < 2450; j++) _solve(b, j);
for(j = 3280; j < 3290; j++) _solve(b, j);
for(j = 4120; j < 4130; j++) _solve(b, j);
for(j = 4960; j < 4970; j++) _solve(b, j);
for(j = 5800; j < 5810; j++) _solve(b, j);
for(j = 6640; j < 6650; j++) _solve(b, j);
for(j = 7480; j < 7490; j++) _solve(b, j);
for(j = 8320; j < 8330; j++) _solve(b, j);
for(j = 9160; j < 9170; j++) _solve(b, j);
for(j = 10000; j < 10010; j++) _solve(b, j);
for(j = 10840; j < 10850; j++) _solve(b, j);
for(j = 11680; j < 11690; j++) _solve(b, j);
for(j = 12520; j < 12530; j++) _solve(b, j);
for(j = 13360; j < 13370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14200; j < 14210; j++) _solve(b, j);
for(j = 15040; j < 15050; j++) _solve(b, j);
for(j = 15880; j < 15890; j++) _solve(b, j);
for(j = 16720; j < 16730; j++) _solve(b, j);
for(j = 17560; j < 17570; j++) _solve(b, j);
for(j = 18400; j < 18410; j++) _solve(b, j);
for(j = 19240; j < 19250; j++) _solve(b, j);
for(j = 20080; j < 20090; j++) _solve(b, j);
for(j = 20920; j < 20930; j++) _solve(b, j);
for(j = 21760; j < 21770; j++) _solve(b, j);
for(j = 22600; j < 22610; j++) _solve(b, j);
for(j = 23440; j < 23450; j++) _solve(b, j);
for(j = 24280; j < 24290; j++) _solve(b, j);
for(j = 25120; j < 25130; j++) _solve(b, j);
for(j = 25960; j < 25970; j++) _solve(b, j);
for(j = 26800; j < 26810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27640; j < 27650; j++) _solve(b, j);
for(j = 28480; j < 28490; j++) _solve(b, j);
for(j = 29320; j < 29330; j++) _solve(b, j);
for(j = 30160; j < 30170; j++) _solve(b, j);
for(j = 31000; j < 31010; j++) _solve(b, j);
for(j = 31840; j < 31850; j++) _solve(b, j);
for(j = 32680; j < 32690; j++) _solve(b, j);
for(j = 33520; j < 33530; j++) _solve(b, j);
for(j = 34360; j < 34370; j++) _solve(b, j);
for(j = 35200; j < 35210; j++) _solve(b, j);
for(j = 36040; j < 36050; j++) _solve(b, j);
for(j = 36880; j < 36890; j++) _solve(b, j);
for(j = 37720; j < 37730; j++) _solve(b, j);
for(j = 38560; j < 38570; j++) _solve(b, j);
for(j = 39400; j < 39410; j++) _solve(b, j);
for(j = 40240; j < 40250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41080; j < 41090; j++) _solve(b, j);
for(j = 41920; j < 41930; j++) _solve(b, j);
for(j = 42760; j < 42770; j++) _solve(b, j);
for(j = 43600; j < 43610; j++) _solve(b, j);
for(j = 44440; j < 44450; j++) _solve(b, j);
for(j = 45280; j < 45290; j++) _solve(b, j);
for(j = 46120; j < 46130; j++) _solve(b, j);
for(j = 46960; j < 46970; j++) _solve(b, j);
for(j = 47800; j < 47810; j++) _solve(b, j);
for(j = 48640; j < 48650; j++) _solve(b, j);
for(j = 49480; j < 49490; j++) _solve(b, j);
for(j = 50320; j < 50330; j++) _solve(b, j);
for(j = 51160; j < 51170; j++) _solve(b, j);
for(j = 52000; j < 52010; j++) _solve(b, j);
for(j = 52840; j < 52850; j++) _solve(b, j);
for(j = 53680; j < 53690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54520; j < 54530; j++) _solve(b, j);
for(j = 55360; j < 55370; j++) _solve(b, j);
for(j = 56200; j < 56210; j++) _solve(b, j);
for(j = 57040; j < 57050; j++) _solve(b, j);
for(j = 57880; j < 57890; j++) _solve(b, j);
for(j = 58720; j < 58730; j++) _solve(b, j);
for(j = 59560; j < 59570; j++) _solve(b, j);
for(j = 60400; j < 60410; j++) _solve(b, j);
for(j = 61240; j < 61250; j++) _solve(b, j);
for(j = 62080; j < 62090; j++) _solve(b, j);
for(j = 62920; j < 62930; j++) _solve(b, j);
for(j = 63760; j < 63770; j++) _solve(b, j);
for(j = 64600; j < 64610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 770; j < 780; j++) _solve(b, j);
for(j = 1610; j < 1620; j++) _solve(b, j);
for(j = 2450; j < 2460; j++) _solve(b, j);
for(j = 3290; j < 3300; j++) _solve(b, j);
for(j = 4130; j < 4140; j++) _solve(b, j);
for(j = 4970; j < 4980; j++) _solve(b, j);
for(j = 5810; j < 5820; j++) _solve(b, j);
for(j = 6650; j < 6660; j++) _solve(b, j);
for(j = 7490; j < 7500; j++) _solve(b, j);
for(j = 8330; j < 8340; j++) _solve(b, j);
for(j = 9170; j < 9180; j++) _solve(b, j);
for(j = 10010; j < 10020; j++) _solve(b, j);
for(j = 10850; j < 10860; j++) _solve(b, j);
for(j = 11690; j < 11700; j++) _solve(b, j);
for(j = 12530; j < 12540; j++) _solve(b, j);
for(j = 13370; j < 13380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14210; j < 14220; j++) _solve(b, j);
for(j = 15050; j < 15060; j++) _solve(b, j);
for(j = 15890; j < 15900; j++) _solve(b, j);
for(j = 16730; j < 16740; j++) _solve(b, j);
for(j = 17570; j < 17580; j++) _solve(b, j);
for(j = 18410; j < 18420; j++) _solve(b, j);
for(j = 19250; j < 19260; j++) _solve(b, j);
for(j = 20090; j < 20100; j++) _solve(b, j);
for(j = 20930; j < 20940; j++) _solve(b, j);
for(j = 21770; j < 21780; j++) _solve(b, j);
for(j = 22610; j < 22620; j++) _solve(b, j);
for(j = 23450; j < 23460; j++) _solve(b, j);
for(j = 24290; j < 24300; j++) _solve(b, j);
for(j = 25130; j < 25140; j++) _solve(b, j);
for(j = 25970; j < 25980; j++) _solve(b, j);
for(j = 26810; j < 26820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27650; j < 27660; j++) _solve(b, j);
for(j = 28490; j < 28500; j++) _solve(b, j);
for(j = 29330; j < 29340; j++) _solve(b, j);
for(j = 30170; j < 30180; j++) _solve(b, j);
for(j = 31010; j < 31020; j++) _solve(b, j);
for(j = 31850; j < 31860; j++) _solve(b, j);
for(j = 32690; j < 32700; j++) _solve(b, j);
for(j = 33530; j < 33540; j++) _solve(b, j);
for(j = 34370; j < 34380; j++) _solve(b, j);
for(j = 35210; j < 35220; j++) _solve(b, j);
for(j = 36050; j < 36060; j++) _solve(b, j);
for(j = 36890; j < 36900; j++) _solve(b, j);
for(j = 37730; j < 37740; j++) _solve(b, j);
for(j = 38570; j < 38580; j++) _solve(b, j);
for(j = 39410; j < 39420; j++) _solve(b, j);
for(j = 40250; j < 40260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41090; j < 41100; j++) _solve(b, j);
for(j = 41930; j < 41940; j++) _solve(b, j);
for(j = 42770; j < 42780; j++) _solve(b, j);
for(j = 43610; j < 43620; j++) _solve(b, j);
for(j = 44450; j < 44460; j++) _solve(b, j);
for(j = 45290; j < 45300; j++) _solve(b, j);
for(j = 46130; j < 46140; j++) _solve(b, j);
for(j = 46970; j < 46980; j++) _solve(b, j);
for(j = 47810; j < 47820; j++) _solve(b, j);
for(j = 48650; j < 48660; j++) _solve(b, j);
for(j = 49490; j < 49500; j++) _solve(b, j);
for(j = 50330; j < 50340; j++) _solve(b, j);
for(j = 51170; j < 51180; j++) _solve(b, j);
for(j = 52010; j < 52020; j++) _solve(b, j);
for(j = 52850; j < 52860; j++) _solve(b, j);
for(j = 53690; j < 53700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54530; j < 54540; j++) _solve(b, j);
for(j = 55370; j < 55380; j++) _solve(b, j);
for(j = 56210; j < 56220; j++) _solve(b, j);
for(j = 57050; j < 57060; j++) _solve(b, j);
for(j = 57890; j < 57900; j++) _solve(b, j);
for(j = 58730; j < 58740; j++) _solve(b, j);
for(j = 59570; j < 59580; j++) _solve(b, j);
for(j = 60410; j < 60420; j++) _solve(b, j);
for(j = 61250; j < 61260; j++) _solve(b, j);
for(j = 62090; j < 62100; j++) _solve(b, j);
for(j = 62930; j < 62940; j++) _solve(b, j);
for(j = 63770; j < 63780; j++) _solve(b, j);
for(j = 64610; j < 64620; j++) _solve(b, j);
for(j = 65450; j < 65460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 780; j < 790; j++) _solve(b, j);
for(j = 1620; j < 1630; j++) _solve(b, j);
for(j = 2460; j < 2470; j++) _solve(b, j);
for(j = 3300; j < 3310; j++) _solve(b, j);
for(j = 4140; j < 4150; j++) _solve(b, j);
for(j = 4980; j < 4990; j++) _solve(b, j);
for(j = 5820; j < 5830; j++) _solve(b, j);
for(j = 6660; j < 6670; j++) _solve(b, j);
for(j = 7500; j < 7510; j++) _solve(b, j);
for(j = 8340; j < 8350; j++) _solve(b, j);
for(j = 9180; j < 9190; j++) _solve(b, j);
for(j = 10020; j < 10030; j++) _solve(b, j);
for(j = 10860; j < 10870; j++) _solve(b, j);
for(j = 11700; j < 11710; j++) _solve(b, j);
for(j = 12540; j < 12550; j++) _solve(b, j);
for(j = 13380; j < 13390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14220; j < 14230; j++) _solve(b, j);
for(j = 15060; j < 15070; j++) _solve(b, j);
for(j = 15900; j < 15910; j++) _solve(b, j);
for(j = 16740; j < 16750; j++) _solve(b, j);
for(j = 17580; j < 17590; j++) _solve(b, j);
for(j = 18420; j < 18430; j++) _solve(b, j);
for(j = 19260; j < 19270; j++) _solve(b, j);
for(j = 20100; j < 20110; j++) _solve(b, j);
for(j = 20940; j < 20950; j++) _solve(b, j);
for(j = 21780; j < 21790; j++) _solve(b, j);
for(j = 22620; j < 22630; j++) _solve(b, j);
for(j = 23460; j < 23470; j++) _solve(b, j);
for(j = 24300; j < 24310; j++) _solve(b, j);
for(j = 25140; j < 25150; j++) _solve(b, j);
for(j = 25980; j < 25990; j++) _solve(b, j);
for(j = 26820; j < 26830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27660; j < 27670; j++) _solve(b, j);
for(j = 28500; j < 28510; j++) _solve(b, j);
for(j = 29340; j < 29350; j++) _solve(b, j);
for(j = 30180; j < 30190; j++) _solve(b, j);
for(j = 31020; j < 31030; j++) _solve(b, j);
for(j = 31860; j < 31870; j++) _solve(b, j);
for(j = 32700; j < 32710; j++) _solve(b, j);
for(j = 33540; j < 33550; j++) _solve(b, j);
for(j = 34380; j < 34390; j++) _solve(b, j);
for(j = 35220; j < 35230; j++) _solve(b, j);
for(j = 36060; j < 36070; j++) _solve(b, j);
for(j = 36900; j < 36910; j++) _solve(b, j);
for(j = 37740; j < 37750; j++) _solve(b, j);
for(j = 38580; j < 38590; j++) _solve(b, j);
for(j = 39420; j < 39430; j++) _solve(b, j);
for(j = 40260; j < 40270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41100; j < 41110; j++) _solve(b, j);
for(j = 41940; j < 41950; j++) _solve(b, j);
for(j = 42780; j < 42790; j++) _solve(b, j);
for(j = 43620; j < 43630; j++) _solve(b, j);
for(j = 44460; j < 44470; j++) _solve(b, j);
for(j = 45300; j < 45310; j++) _solve(b, j);
for(j = 46140; j < 46150; j++) _solve(b, j);
for(j = 46980; j < 46990; j++) _solve(b, j);
for(j = 47820; j < 47830; j++) _solve(b, j);
for(j = 48660; j < 48670; j++) _solve(b, j);
for(j = 49500; j < 49510; j++) _solve(b, j);
for(j = 50340; j < 50350; j++) _solve(b, j);
for(j = 51180; j < 51190; j++) _solve(b, j);
for(j = 52020; j < 52030; j++) _solve(b, j);
for(j = 52860; j < 52870; j++) _solve(b, j);
for(j = 53700; j < 53710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54540; j < 54550; j++) _solve(b, j);
for(j = 55380; j < 55390; j++) _solve(b, j);
for(j = 56220; j < 56230; j++) _solve(b, j);
for(j = 57060; j < 57070; j++) _solve(b, j);
for(j = 57900; j < 57910; j++) _solve(b, j);
for(j = 58740; j < 58750; j++) _solve(b, j);
for(j = 59580; j < 59590; j++) _solve(b, j);
for(j = 60420; j < 60430; j++) _solve(b, j);
for(j = 61260; j < 61270; j++) _solve(b, j);
for(j = 62100; j < 62110; j++) _solve(b, j);
for(j = 62940; j < 62950; j++) _solve(b, j);
for(j = 63780; j < 63790; j++) _solve(b, j);
for(j = 64620; j < 64630; j++) _solve(b, j);
for(j = 65460; j < 65470; j++) _solve(b, j);
for(j = 66300; j < 66310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 790; j < 800; j++) _solve(b, j);
for(j = 1630; j < 1640; j++) _solve(b, j);
for(j = 2470; j < 2480; j++) _solve(b, j);
for(j = 3310; j < 3320; j++) _solve(b, j);
for(j = 4150; j < 4160; j++) _solve(b, j);
for(j = 4990; j < 5000; j++) _solve(b, j);
for(j = 5830; j < 5840; j++) _solve(b, j);
for(j = 6670; j < 6680; j++) _solve(b, j);
for(j = 7510; j < 7520; j++) _solve(b, j);
for(j = 8350; j < 8360; j++) _solve(b, j);
for(j = 9190; j < 9200; j++) _solve(b, j);
for(j = 10030; j < 10040; j++) _solve(b, j);
for(j = 10870; j < 10880; j++) _solve(b, j);
for(j = 11710; j < 11720; j++) _solve(b, j);
for(j = 12550; j < 12560; j++) _solve(b, j);
for(j = 13390; j < 13400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14230; j < 14240; j++) _solve(b, j);
for(j = 15070; j < 15080; j++) _solve(b, j);
for(j = 15910; j < 15920; j++) _solve(b, j);
for(j = 16750; j < 16760; j++) _solve(b, j);
for(j = 17590; j < 17600; j++) _solve(b, j);
for(j = 18430; j < 18440; j++) _solve(b, j);
for(j = 19270; j < 19280; j++) _solve(b, j);
for(j = 20110; j < 20120; j++) _solve(b, j);
for(j = 20950; j < 20960; j++) _solve(b, j);
for(j = 21790; j < 21800; j++) _solve(b, j);
for(j = 22630; j < 22640; j++) _solve(b, j);
for(j = 23470; j < 23480; j++) _solve(b, j);
for(j = 24310; j < 24320; j++) _solve(b, j);
for(j = 25150; j < 25160; j++) _solve(b, j);
for(j = 25990; j < 26000; j++) _solve(b, j);
for(j = 26830; j < 26840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27670; j < 27680; j++) _solve(b, j);
for(j = 28510; j < 28520; j++) _solve(b, j);
for(j = 29350; j < 29360; j++) _solve(b, j);
for(j = 30190; j < 30200; j++) _solve(b, j);
for(j = 31030; j < 31040; j++) _solve(b, j);
for(j = 31870; j < 31880; j++) _solve(b, j);
for(j = 32710; j < 32720; j++) _solve(b, j);
for(j = 33550; j < 33560; j++) _solve(b, j);
for(j = 34390; j < 34400; j++) _solve(b, j);
for(j = 35230; j < 35240; j++) _solve(b, j);
for(j = 36070; j < 36080; j++) _solve(b, j);
for(j = 36910; j < 36920; j++) _solve(b, j);
for(j = 37750; j < 37760; j++) _solve(b, j);
for(j = 38590; j < 38600; j++) _solve(b, j);
for(j = 39430; j < 39440; j++) _solve(b, j);
for(j = 40270; j < 40280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41110; j < 41120; j++) _solve(b, j);
for(j = 41950; j < 41960; j++) _solve(b, j);
for(j = 42790; j < 42800; j++) _solve(b, j);
for(j = 43630; j < 43640; j++) _solve(b, j);
for(j = 44470; j < 44480; j++) _solve(b, j);
for(j = 45310; j < 45320; j++) _solve(b, j);
for(j = 46150; j < 46160; j++) _solve(b, j);
for(j = 46990; j < 47000; j++) _solve(b, j);
for(j = 47830; j < 47840; j++) _solve(b, j);
for(j = 48670; j < 48680; j++) _solve(b, j);
for(j = 49510; j < 49520; j++) _solve(b, j);
for(j = 50350; j < 50360; j++) _solve(b, j);
for(j = 51190; j < 51200; j++) _solve(b, j);
for(j = 52030; j < 52040; j++) _solve(b, j);
for(j = 52870; j < 52880; j++) _solve(b, j);
for(j = 53710; j < 53720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54550; j < 54560; j++) _solve(b, j);
for(j = 55390; j < 55400; j++) _solve(b, j);
for(j = 56230; j < 56240; j++) _solve(b, j);
for(j = 57070; j < 57080; j++) _solve(b, j);
for(j = 57910; j < 57920; j++) _solve(b, j);
for(j = 58750; j < 58760; j++) _solve(b, j);
for(j = 59590; j < 59600; j++) _solve(b, j);
for(j = 60430; j < 60440; j++) _solve(b, j);
for(j = 61270; j < 61280; j++) _solve(b, j);
for(j = 62110; j < 62120; j++) _solve(b, j);
for(j = 62950; j < 62960; j++) _solve(b, j);
for(j = 63790; j < 63800; j++) _solve(b, j);
for(j = 64630; j < 64640; j++) _solve(b, j);
for(j = 65470; j < 65480; j++) _solve(b, j);
for(j = 66310; j < 66320; j++) _solve(b, j);
for(j = 67150; j < 67160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 800; j < 810; j++) _solve(b, j);
for(j = 1640; j < 1650; j++) _solve(b, j);
for(j = 2480; j < 2490; j++) _solve(b, j);
for(j = 3320; j < 3330; j++) _solve(b, j);
for(j = 4160; j < 4170; j++) _solve(b, j);
for(j = 5000; j < 5010; j++) _solve(b, j);
for(j = 5840; j < 5850; j++) _solve(b, j);
for(j = 6680; j < 6690; j++) _solve(b, j);
for(j = 7520; j < 7530; j++) _solve(b, j);
for(j = 8360; j < 8370; j++) _solve(b, j);
for(j = 9200; j < 9210; j++) _solve(b, j);
for(j = 10040; j < 10050; j++) _solve(b, j);
for(j = 10880; j < 10890; j++) _solve(b, j);
for(j = 11720; j < 11730; j++) _solve(b, j);
for(j = 12560; j < 12570; j++) _solve(b, j);
for(j = 13400; j < 13410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14240; j < 14250; j++) _solve(b, j);
for(j = 15080; j < 15090; j++) _solve(b, j);
for(j = 15920; j < 15930; j++) _solve(b, j);
for(j = 16760; j < 16770; j++) _solve(b, j);
for(j = 17600; j < 17610; j++) _solve(b, j);
for(j = 18440; j < 18450; j++) _solve(b, j);
for(j = 19280; j < 19290; j++) _solve(b, j);
for(j = 20120; j < 20130; j++) _solve(b, j);
for(j = 20960; j < 20970; j++) _solve(b, j);
for(j = 21800; j < 21810; j++) _solve(b, j);
for(j = 22640; j < 22650; j++) _solve(b, j);
for(j = 23480; j < 23490; j++) _solve(b, j);
for(j = 24320; j < 24330; j++) _solve(b, j);
for(j = 25160; j < 25170; j++) _solve(b, j);
for(j = 26000; j < 26010; j++) _solve(b, j);
for(j = 26840; j < 26850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27680; j < 27690; j++) _solve(b, j);
for(j = 28520; j < 28530; j++) _solve(b, j);
for(j = 29360; j < 29370; j++) _solve(b, j);
for(j = 30200; j < 30210; j++) _solve(b, j);
for(j = 31040; j < 31050; j++) _solve(b, j);
for(j = 31880; j < 31890; j++) _solve(b, j);
for(j = 32720; j < 32730; j++) _solve(b, j);
for(j = 33560; j < 33570; j++) _solve(b, j);
for(j = 34400; j < 34410; j++) _solve(b, j);
for(j = 35240; j < 35250; j++) _solve(b, j);
for(j = 36080; j < 36090; j++) _solve(b, j);
for(j = 36920; j < 36930; j++) _solve(b, j);
for(j = 37760; j < 37770; j++) _solve(b, j);
for(j = 38600; j < 38610; j++) _solve(b, j);
for(j = 39440; j < 39450; j++) _solve(b, j);
for(j = 40280; j < 40290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41120; j < 41130; j++) _solve(b, j);
for(j = 41960; j < 41970; j++) _solve(b, j);
for(j = 42800; j < 42810; j++) _solve(b, j);
for(j = 43640; j < 43650; j++) _solve(b, j);
for(j = 44480; j < 44490; j++) _solve(b, j);
for(j = 45320; j < 45330; j++) _solve(b, j);
for(j = 46160; j < 46170; j++) _solve(b, j);
for(j = 47000; j < 47010; j++) _solve(b, j);
for(j = 47840; j < 47850; j++) _solve(b, j);
for(j = 48680; j < 48690; j++) _solve(b, j);
for(j = 49520; j < 49530; j++) _solve(b, j);
for(j = 50360; j < 50370; j++) _solve(b, j);
for(j = 51200; j < 51210; j++) _solve(b, j);
for(j = 52040; j < 52050; j++) _solve(b, j);
for(j = 52880; j < 52890; j++) _solve(b, j);
for(j = 53720; j < 53730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54560; j < 54570; j++) _solve(b, j);
for(j = 55400; j < 55410; j++) _solve(b, j);
for(j = 56240; j < 56250; j++) _solve(b, j);
for(j = 57080; j < 57090; j++) _solve(b, j);
for(j = 57920; j < 57930; j++) _solve(b, j);
for(j = 58760; j < 58770; j++) _solve(b, j);
for(j = 59600; j < 59610; j++) _solve(b, j);
for(j = 60440; j < 60450; j++) _solve(b, j);
for(j = 61280; j < 61290; j++) _solve(b, j);
for(j = 62120; j < 62130; j++) _solve(b, j);
for(j = 62960; j < 62970; j++) _solve(b, j);
for(j = 63800; j < 63810; j++) _solve(b, j);
for(j = 64640; j < 64650; j++) _solve(b, j);
for(j = 65480; j < 65490; j++) _solve(b, j);
for(j = 66320; j < 66330; j++) _solve(b, j);
for(j = 67160; j < 67170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 68000; j < 68010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 810; j < 820; j++) _solve(b, j);
for(j = 1650; j < 1660; j++) _solve(b, j);
for(j = 2490; j < 2500; j++) _solve(b, j);
for(j = 3330; j < 3340; j++) _solve(b, j);
for(j = 4170; j < 4180; j++) _solve(b, j);
for(j = 5010; j < 5020; j++) _solve(b, j);
for(j = 5850; j < 5860; j++) _solve(b, j);
for(j = 6690; j < 6700; j++) _solve(b, j);
for(j = 7530; j < 7540; j++) _solve(b, j);
for(j = 8370; j < 8380; j++) _solve(b, j);
for(j = 9210; j < 9220; j++) _solve(b, j);
for(j = 10050; j < 10060; j++) _solve(b, j);
for(j = 10890; j < 10900; j++) _solve(b, j);
for(j = 11730; j < 11740; j++) _solve(b, j);
for(j = 12570; j < 12580; j++) _solve(b, j);
for(j = 13410; j < 13420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14250; j < 14260; j++) _solve(b, j);
for(j = 15090; j < 15100; j++) _solve(b, j);
for(j = 15930; j < 15940; j++) _solve(b, j);
for(j = 16770; j < 16780; j++) _solve(b, j);
for(j = 17610; j < 17620; j++) _solve(b, j);
for(j = 18450; j < 18460; j++) _solve(b, j);
for(j = 19290; j < 19300; j++) _solve(b, j);
for(j = 20130; j < 20140; j++) _solve(b, j);
for(j = 20970; j < 20980; j++) _solve(b, j);
for(j = 21810; j < 21820; j++) _solve(b, j);
for(j = 22650; j < 22660; j++) _solve(b, j);
for(j = 23490; j < 23500; j++) _solve(b, j);
for(j = 24330; j < 24340; j++) _solve(b, j);
for(j = 25170; j < 25180; j++) _solve(b, j);
for(j = 26010; j < 26020; j++) _solve(b, j);
for(j = 26850; j < 26860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27690; j < 27700; j++) _solve(b, j);
for(j = 28530; j < 28540; j++) _solve(b, j);
for(j = 29370; j < 29380; j++) _solve(b, j);
for(j = 30210; j < 30220; j++) _solve(b, j);
for(j = 31050; j < 31060; j++) _solve(b, j);
for(j = 31890; j < 31900; j++) _solve(b, j);
for(j = 32730; j < 32740; j++) _solve(b, j);
for(j = 33570; j < 33580; j++) _solve(b, j);
for(j = 34410; j < 34420; j++) _solve(b, j);
for(j = 35250; j < 35260; j++) _solve(b, j);
for(j = 36090; j < 36100; j++) _solve(b, j);
for(j = 36930; j < 36940; j++) _solve(b, j);
for(j = 37770; j < 37780; j++) _solve(b, j);
for(j = 38610; j < 38620; j++) _solve(b, j);
for(j = 39450; j < 39460; j++) _solve(b, j);
for(j = 40290; j < 40300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41130; j < 41140; j++) _solve(b, j);
for(j = 41970; j < 41980; j++) _solve(b, j);
for(j = 42810; j < 42820; j++) _solve(b, j);
for(j = 43650; j < 43660; j++) _solve(b, j);
for(j = 44490; j < 44500; j++) _solve(b, j);
for(j = 45330; j < 45340; j++) _solve(b, j);
for(j = 46170; j < 46180; j++) _solve(b, j);
for(j = 47010; j < 47020; j++) _solve(b, j);
for(j = 47850; j < 47860; j++) _solve(b, j);
for(j = 48690; j < 48700; j++) _solve(b, j);
for(j = 49530; j < 49540; j++) _solve(b, j);
for(j = 50370; j < 50380; j++) _solve(b, j);
for(j = 51210; j < 51220; j++) _solve(b, j);
for(j = 52050; j < 52060; j++) _solve(b, j);
for(j = 52890; j < 52900; j++) _solve(b, j);
for(j = 53730; j < 53740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54570; j < 54580; j++) _solve(b, j);
for(j = 55410; j < 55420; j++) _solve(b, j);
for(j = 56250; j < 56260; j++) _solve(b, j);
for(j = 57090; j < 57100; j++) _solve(b, j);
for(j = 57930; j < 57940; j++) _solve(b, j);
for(j = 58770; j < 58780; j++) _solve(b, j);
for(j = 59610; j < 59620; j++) _solve(b, j);
for(j = 60450; j < 60460; j++) _solve(b, j);
for(j = 61290; j < 61300; j++) _solve(b, j);
for(j = 62130; j < 62140; j++) _solve(b, j);
for(j = 62970; j < 62980; j++) _solve(b, j);
for(j = 63810; j < 63820; j++) _solve(b, j);
for(j = 64650; j < 64660; j++) _solve(b, j);
for(j = 65490; j < 65500; j++) _solve(b, j);
for(j = 66330; j < 66340; j++) _solve(b, j);
for(j = 67170; j < 67180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 68010; j < 68020; j++) _solve(b, j);
for(j = 68850; j < 68860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 820; j < 830; j++) _solve(b, j);
for(j = 1660; j < 1670; j++) _solve(b, j);
for(j = 2500; j < 2510; j++) _solve(b, j);
for(j = 3340; j < 3350; j++) _solve(b, j);
for(j = 4180; j < 4190; j++) _solve(b, j);
for(j = 5020; j < 5030; j++) _solve(b, j);
for(j = 5860; j < 5870; j++) _solve(b, j);
for(j = 6700; j < 6710; j++) _solve(b, j);
for(j = 7540; j < 7550; j++) _solve(b, j);
for(j = 8380; j < 8390; j++) _solve(b, j);
for(j = 9220; j < 9230; j++) _solve(b, j);
for(j = 10060; j < 10070; j++) _solve(b, j);
for(j = 10900; j < 10910; j++) _solve(b, j);
for(j = 11740; j < 11750; j++) _solve(b, j);
for(j = 12580; j < 12590; j++) _solve(b, j);
for(j = 13420; j < 13430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14260; j < 14270; j++) _solve(b, j);
for(j = 15100; j < 15110; j++) _solve(b, j);
for(j = 15940; j < 15950; j++) _solve(b, j);
for(j = 16780; j < 16790; j++) _solve(b, j);
for(j = 17620; j < 17630; j++) _solve(b, j);
for(j = 18460; j < 18470; j++) _solve(b, j);
for(j = 19300; j < 19310; j++) _solve(b, j);
for(j = 20140; j < 20150; j++) _solve(b, j);
for(j = 20980; j < 20990; j++) _solve(b, j);
for(j = 21820; j < 21830; j++) _solve(b, j);
for(j = 22660; j < 22670; j++) _solve(b, j);
for(j = 23500; j < 23510; j++) _solve(b, j);
for(j = 24340; j < 24350; j++) _solve(b, j);
for(j = 25180; j < 25190; j++) _solve(b, j);
for(j = 26020; j < 26030; j++) _solve(b, j);
for(j = 26860; j < 26870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27700; j < 27710; j++) _solve(b, j);
for(j = 28540; j < 28550; j++) _solve(b, j);
for(j = 29380; j < 29390; j++) _solve(b, j);
for(j = 30220; j < 30230; j++) _solve(b, j);
for(j = 31060; j < 31070; j++) _solve(b, j);
for(j = 31900; j < 31910; j++) _solve(b, j);
for(j = 32740; j < 32750; j++) _solve(b, j);
for(j = 33580; j < 33590; j++) _solve(b, j);
for(j = 34420; j < 34430; j++) _solve(b, j);
for(j = 35260; j < 35270; j++) _solve(b, j);
for(j = 36100; j < 36110; j++) _solve(b, j);
for(j = 36940; j < 36950; j++) _solve(b, j);
for(j = 37780; j < 37790; j++) _solve(b, j);
for(j = 38620; j < 38630; j++) _solve(b, j);
for(j = 39460; j < 39470; j++) _solve(b, j);
for(j = 40300; j < 40310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41140; j < 41150; j++) _solve(b, j);
for(j = 41980; j < 41990; j++) _solve(b, j);
for(j = 42820; j < 42830; j++) _solve(b, j);
for(j = 43660; j < 43670; j++) _solve(b, j);
for(j = 44500; j < 44510; j++) _solve(b, j);
for(j = 45340; j < 45350; j++) _solve(b, j);
for(j = 46180; j < 46190; j++) _solve(b, j);
for(j = 47020; j < 47030; j++) _solve(b, j);
for(j = 47860; j < 47870; j++) _solve(b, j);
for(j = 48700; j < 48710; j++) _solve(b, j);
for(j = 49540; j < 49550; j++) _solve(b, j);
for(j = 50380; j < 50390; j++) _solve(b, j);
for(j = 51220; j < 51230; j++) _solve(b, j);
for(j = 52060; j < 52070; j++) _solve(b, j);
for(j = 52900; j < 52910; j++) _solve(b, j);
for(j = 53740; j < 53750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54580; j < 54590; j++) _solve(b, j);
for(j = 55420; j < 55430; j++) _solve(b, j);
for(j = 56260; j < 56270; j++) _solve(b, j);
for(j = 57100; j < 57110; j++) _solve(b, j);
for(j = 57940; j < 57950; j++) _solve(b, j);
for(j = 58780; j < 58790; j++) _solve(b, j);
for(j = 59620; j < 59630; j++) _solve(b, j);
for(j = 60460; j < 60470; j++) _solve(b, j);
for(j = 61300; j < 61310; j++) _solve(b, j);
for(j = 62140; j < 62150; j++) _solve(b, j);
for(j = 62980; j < 62990; j++) _solve(b, j);
for(j = 63820; j < 63830; j++) _solve(b, j);
for(j = 64660; j < 64670; j++) _solve(b, j);
for(j = 65500; j < 65510; j++) _solve(b, j);
for(j = 66340; j < 66350; j++) _solve(b, j);
for(j = 67180; j < 67190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 68020; j < 68030; j++) _solve(b, j);
for(j = 68860; j < 68870; j++) _solve(b, j);
for(j = 69700; j < 69710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 830; j < 840; j++) _solve(b, j);
for(j = 1670; j < 1680; j++) _solve(b, j);
for(j = 2510; j < 2520; j++) _solve(b, j);
for(j = 3350; j < 3360; j++) _solve(b, j);
for(j = 4190; j < 4200; j++) _solve(b, j);
for(j = 5030; j < 5040; j++) _solve(b, j);
for(j = 5870; j < 5880; j++) _solve(b, j);
for(j = 6710; j < 6720; j++) _solve(b, j);
for(j = 7550; j < 7560; j++) _solve(b, j);
for(j = 8390; j < 8400; j++) _solve(b, j);
for(j = 9230; j < 9240; j++) _solve(b, j);
for(j = 10070; j < 10080; j++) _solve(b, j);
for(j = 10910; j < 10920; j++) _solve(b, j);
for(j = 11750; j < 11760; j++) _solve(b, j);
for(j = 12590; j < 12600; j++) _solve(b, j);
for(j = 13430; j < 13440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14270; j < 14280; j++) _solve(b, j);
for(j = 15110; j < 15120; j++) _solve(b, j);
for(j = 15950; j < 15960; j++) _solve(b, j);
for(j = 16790; j < 16800; j++) _solve(b, j);
for(j = 17630; j < 17640; j++) _solve(b, j);
for(j = 18470; j < 18480; j++) _solve(b, j);
for(j = 19310; j < 19320; j++) _solve(b, j);
for(j = 20150; j < 20160; j++) _solve(b, j);
for(j = 20990; j < 21000; j++) _solve(b, j);
for(j = 21830; j < 21840; j++) _solve(b, j);
for(j = 22670; j < 22680; j++) _solve(b, j);
for(j = 23510; j < 23520; j++) _solve(b, j);
for(j = 24350; j < 24360; j++) _solve(b, j);
for(j = 25190; j < 25200; j++) _solve(b, j);
for(j = 26030; j < 26040; j++) _solve(b, j);
for(j = 26870; j < 26880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27710; j < 27720; j++) _solve(b, j);
for(j = 28550; j < 28560; j++) _solve(b, j);
for(j = 29390; j < 29400; j++) _solve(b, j);
for(j = 30230; j < 30240; j++) _solve(b, j);
for(j = 31070; j < 31080; j++) _solve(b, j);
for(j = 31910; j < 31920; j++) _solve(b, j);
for(j = 32750; j < 32760; j++) _solve(b, j);
for(j = 33590; j < 33600; j++) _solve(b, j);
for(j = 34430; j < 34440; j++) _solve(b, j);
for(j = 35270; j < 35280; j++) _solve(b, j);
for(j = 36110; j < 36120; j++) _solve(b, j);
for(j = 36950; j < 36960; j++) _solve(b, j);
for(j = 37790; j < 37800; j++) _solve(b, j);
for(j = 38630; j < 38640; j++) _solve(b, j);
for(j = 39470; j < 39480; j++) _solve(b, j);
for(j = 40310; j < 40320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41150; j < 41160; j++) _solve(b, j);
for(j = 41990; j < 42000; j++) _solve(b, j);
for(j = 42830; j < 42840; j++) _solve(b, j);
for(j = 43670; j < 43680; j++) _solve(b, j);
for(j = 44510; j < 44520; j++) _solve(b, j);
for(j = 45350; j < 45360; j++) _solve(b, j);
for(j = 46190; j < 46200; j++) _solve(b, j);
for(j = 47030; j < 47040; j++) _solve(b, j);
for(j = 47870; j < 47880; j++) _solve(b, j);
for(j = 48710; j < 48720; j++) _solve(b, j);
for(j = 49550; j < 49560; j++) _solve(b, j);
for(j = 50390; j < 50400; j++) _solve(b, j);
for(j = 51230; j < 51240; j++) _solve(b, j);
for(j = 52070; j < 52080; j++) _solve(b, j);
for(j = 52910; j < 52920; j++) _solve(b, j);
for(j = 53750; j < 53760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54590; j < 54600; j++) _solve(b, j);
for(j = 55430; j < 55440; j++) _solve(b, j);
for(j = 56270; j < 56280; j++) _solve(b, j);
for(j = 57110; j < 57120; j++) _solve(b, j);
for(j = 57950; j < 57960; j++) _solve(b, j);
for(j = 58790; j < 58800; j++) _solve(b, j);
for(j = 59630; j < 59640; j++) _solve(b, j);
for(j = 60470; j < 60480; j++) _solve(b, j);
for(j = 61310; j < 61320; j++) _solve(b, j);
for(j = 62150; j < 62160; j++) _solve(b, j);
for(j = 62990; j < 63000; j++) _solve(b, j);
for(j = 63830; j < 63840; j++) _solve(b, j);
for(j = 64670; j < 64680; j++) _solve(b, j);
for(j = 65510; j < 65520; j++) _solve(b, j);
for(j = 66350; j < 66360; j++) _solve(b, j);
for(j = 67190; j < 67200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 68030; j < 68040; j++) _solve(b, j);
for(j = 68870; j < 68880; j++) _solve(b, j);
for(j = 69710; j < 69720; j++) _solve(b, j);
for(j = 70550; j < 70560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 840; j < 850; j++) _solve(b, j);
for(j = 1680; j < 1690; j++) _solve(b, j);
for(j = 2520; j < 2530; j++) _solve(b, j);
for(j = 3360; j < 3370; j++) _solve(b, j);
for(j = 4200; j < 4210; j++) _solve(b, j);
for(j = 5040; j < 5050; j++) _solve(b, j);
for(j = 5880; j < 5890; j++) _solve(b, j);
for(j = 6720; j < 6730; j++) _solve(b, j);
for(j = 7560; j < 7570; j++) _solve(b, j);
for(j = 8400; j < 8410; j++) _solve(b, j);
for(j = 9240; j < 9250; j++) _solve(b, j);
for(j = 10080; j < 10090; j++) _solve(b, j);
for(j = 10920; j < 10930; j++) _solve(b, j);
for(j = 11760; j < 11770; j++) _solve(b, j);
for(j = 12600; j < 12610; j++) _solve(b, j);
for(j = 13440; j < 13450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 14280; j < 14290; j++) _solve(b, j);
for(j = 15120; j < 15130; j++) _solve(b, j);
for(j = 15960; j < 15970; j++) _solve(b, j);
for(j = 16800; j < 16810; j++) _solve(b, j);
for(j = 17640; j < 17650; j++) _solve(b, j);
for(j = 18480; j < 18490; j++) _solve(b, j);
for(j = 19320; j < 19330; j++) _solve(b, j);
for(j = 20160; j < 20170; j++) _solve(b, j);
for(j = 21000; j < 21010; j++) _solve(b, j);
for(j = 21840; j < 21850; j++) _solve(b, j);
for(j = 22680; j < 22690; j++) _solve(b, j);
for(j = 23520; j < 23530; j++) _solve(b, j);
for(j = 24360; j < 24370; j++) _solve(b, j);
for(j = 25200; j < 25210; j++) _solve(b, j);
for(j = 26040; j < 26050; j++) _solve(b, j);
for(j = 26880; j < 26890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27720; j < 27730; j++) _solve(b, j);
for(j = 28560; j < 28570; j++) _solve(b, j);
for(j = 29400; j < 29410; j++) _solve(b, j);
for(j = 30240; j < 30250; j++) _solve(b, j);
for(j = 31080; j < 31090; j++) _solve(b, j);
for(j = 31920; j < 31930; j++) _solve(b, j);
for(j = 32760; j < 32770; j++) _solve(b, j);
for(j = 33600; j < 33610; j++) _solve(b, j);
for(j = 34440; j < 34450; j++) _solve(b, j);
for(j = 35280; j < 35290; j++) _solve(b, j);
for(j = 36120; j < 36130; j++) _solve(b, j);
for(j = 36960; j < 36970; j++) _solve(b, j);
for(j = 37800; j < 37810; j++) _solve(b, j);
for(j = 38640; j < 38650; j++) _solve(b, j);
for(j = 39480; j < 39490; j++) _solve(b, j);
for(j = 40320; j < 40330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41160; j < 41170; j++) _solve(b, j);
for(j = 42000; j < 42010; j++) _solve(b, j);
for(j = 42840; j < 42850; j++) _solve(b, j);
for(j = 43680; j < 43690; j++) _solve(b, j);
for(j = 44520; j < 44530; j++) _solve(b, j);
for(j = 45360; j < 45370; j++) _solve(b, j);
for(j = 46200; j < 46210; j++) _solve(b, j);
for(j = 47040; j < 47050; j++) _solve(b, j);
for(j = 47880; j < 47890; j++) _solve(b, j);
for(j = 48720; j < 48730; j++) _solve(b, j);
for(j = 49560; j < 49570; j++) _solve(b, j);
for(j = 50400; j < 50410; j++) _solve(b, j);
for(j = 51240; j < 51250; j++) _solve(b, j);
for(j = 52080; j < 52090; j++) _solve(b, j);
for(j = 52920; j < 52930; j++) _solve(b, j);
for(j = 53760; j < 53770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54600; j < 54610; j++) _solve(b, j);
for(j = 55440; j < 55450; j++) _solve(b, j);
for(j = 56280; j < 56290; j++) _solve(b, j);
for(j = 57120; j < 57130; j++) _solve(b, j);
for(j = 57960; j < 57970; j++) _solve(b, j);
for(j = 58800; j < 58810; j++) _solve(b, j);
for(j = 59640; j < 59650; j++) _solve(b, j);
for(j = 60480; j < 60490; j++) _solve(b, j);
for(j = 61320; j < 61330; j++) _solve(b, j);
for(j = 62160; j < 62170; j++) _solve(b, j);
for(j = 63000; j < 63010; j++) _solve(b, j);
for(j = 63840; j < 63850; j++) _solve(b, j);
for(j = 64680; j < 64690; j++) _solve(b, j);
for(j = 65520; j < 65530; j++) _solve(b, j);
for(j = 66360; j < 66370; j++) _solve(b, j);
for(j = 67200; j < 67210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 68040; j < 68050; j++) _solve(b, j);
for(j = 68880; j < 68890; j++) _solve(b, j);
for(j = 69720; j < 69730; j++) _solve(b, j);
for(j = 70560; j < 70570; j++) _solve(b, j);
for(j = 71400; j < 71410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 1690; j < 1700; j++) _solve(b, j);
for(j = 2530; j < 2540; j++) _solve(b, j);
for(j = 3370; j < 3380; j++) _solve(b, j);
for(j = 4210; j < 4220; j++) _solve(b, j);
for(j = 5050; j < 5060; j++) _solve(b, j);
for(j = 5890; j < 5900; j++) _solve(b, j);
for(j = 6730; j < 6740; j++) _solve(b, j);
for(j = 7570; j < 7580; j++) _solve(b, j);
for(j = 8410; j < 8420; j++) _solve(b, j);
for(j = 9250; j < 9260; j++) _solve(b, j);
for(j = 10090; j < 10100; j++) _solve(b, j);
for(j = 10930; j < 10940; j++) _solve(b, j);
for(j = 11770; j < 11780; j++) _solve(b, j);
for(j = 12610; j < 12620; j++) _solve(b, j);
for(j = 13450; j < 13460; j++) _solve(b, j);
for(j = 14290; j < 14300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 15130; j < 15140; j++) _solve(b, j);
for(j = 15970; j < 15980; j++) _solve(b, j);
for(j = 16810; j < 16820; j++) _solve(b, j);
for(j = 17650; j < 17660; j++) _solve(b, j);
for(j = 18490; j < 18500; j++) _solve(b, j);
for(j = 19330; j < 19340; j++) _solve(b, j);
for(j = 20170; j < 20180; j++) _solve(b, j);
for(j = 21010; j < 21020; j++) _solve(b, j);
for(j = 21850; j < 21860; j++) _solve(b, j);
for(j = 22690; j < 22700; j++) _solve(b, j);
for(j = 23530; j < 23540; j++) _solve(b, j);
for(j = 24370; j < 24380; j++) _solve(b, j);
for(j = 25210; j < 25220; j++) _solve(b, j);
for(j = 26050; j < 26060; j++) _solve(b, j);
for(j = 26890; j < 26900; j++) _solve(b, j);
for(j = 27730; j < 27740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 28570; j < 28580; j++) _solve(b, j);
for(j = 29410; j < 29420; j++) _solve(b, j);
for(j = 30250; j < 30260; j++) _solve(b, j);
for(j = 31090; j < 31100; j++) _solve(b, j);
for(j = 31930; j < 31940; j++) _solve(b, j);
for(j = 32770; j < 32780; j++) _solve(b, j);
for(j = 33610; j < 33620; j++) _solve(b, j);
for(j = 34450; j < 34460; j++) _solve(b, j);
for(j = 35290; j < 35300; j++) _solve(b, j);
for(j = 36130; j < 36140; j++) _solve(b, j);
for(j = 36970; j < 36980; j++) _solve(b, j);
for(j = 37810; j < 37820; j++) _solve(b, j);
for(j = 38650; j < 38660; j++) _solve(b, j);
for(j = 39490; j < 39500; j++) _solve(b, j);
for(j = 40330; j < 40340; j++) _solve(b, j);
for(j = 41170; j < 41180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 42010; j < 42020; j++) _solve(b, j);
for(j = 42850; j < 42860; j++) _solve(b, j);
for(j = 43690; j < 43700; j++) _solve(b, j);
for(j = 44530; j < 44540; j++) _solve(b, j);
for(j = 45370; j < 45380; j++) _solve(b, j);
for(j = 46210; j < 46220; j++) _solve(b, j);
for(j = 47050; j < 47060; j++) _solve(b, j);
for(j = 47890; j < 47900; j++) _solve(b, j);
for(j = 48730; j < 48740; j++) _solve(b, j);
for(j = 49570; j < 49580; j++) _solve(b, j);
for(j = 50410; j < 50420; j++) _solve(b, j);
for(j = 51250; j < 51260; j++) _solve(b, j);
for(j = 52090; j < 52100; j++) _solve(b, j);
for(j = 52930; j < 52940; j++) _solve(b, j);
for(j = 53770; j < 53780; j++) _solve(b, j);
for(j = 54610; j < 54620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 55450; j < 55460; j++) _solve(b, j);
for(j = 56290; j < 56300; j++) _solve(b, j);
for(j = 57130; j < 57140; j++) _solve(b, j);
for(j = 57970; j < 57980; j++) _solve(b, j);
for(j = 58810; j < 58820; j++) _solve(b, j);
for(j = 59650; j < 59660; j++) _solve(b, j);
for(j = 60490; j < 60500; j++) _solve(b, j);
for(j = 61330; j < 61340; j++) _solve(b, j);
for(j = 62170; j < 62180; j++) _solve(b, j);
for(j = 63010; j < 63020; j++) _solve(b, j);
for(j = 63850; j < 63860; j++) _solve(b, j);
for(j = 64690; j < 64700; j++) _solve(b, j);
for(j = 65530; j < 65540; j++) _solve(b, j);
for(j = 66370; j < 66380; j++) _solve(b, j);
for(j = 67210; j < 67220; j++) _solve(b, j);
for(j = 68050; j < 68060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 68890; j < 68900; j++) _solve(b, j);
for(j = 69730; j < 69740; j++) _solve(b, j);
for(j = 70570; j < 70580; j++) _solve(b, j);
for(j = 71410; j < 71420; j++) _solve(b, j);
for(j = 72250; j < 72260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 2540; j < 2550; j++) _solve(b, j);
for(j = 3380; j < 3390; j++) _solve(b, j);
for(j = 4220; j < 4230; j++) _solve(b, j);
for(j = 5060; j < 5070; j++) _solve(b, j);
for(j = 5900; j < 5910; j++) _solve(b, j);
for(j = 6740; j < 6750; j++) _solve(b, j);
for(j = 7580; j < 7590; j++) _solve(b, j);
for(j = 8420; j < 8430; j++) _solve(b, j);
for(j = 9260; j < 9270; j++) _solve(b, j);
for(j = 10100; j < 10110; j++) _solve(b, j);
for(j = 10940; j < 10950; j++) _solve(b, j);
for(j = 11780; j < 11790; j++) _solve(b, j);
for(j = 12620; j < 12630; j++) _solve(b, j);
for(j = 13460; j < 13470; j++) _solve(b, j);
for(j = 14300; j < 14310; j++) _solve(b, j);
for(j = 15140; j < 15150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 15980; j < 15990; j++) _solve(b, j);
for(j = 16820; j < 16830; j++) _solve(b, j);
for(j = 17660; j < 17670; j++) _solve(b, j);
for(j = 18500; j < 18510; j++) _solve(b, j);
for(j = 19340; j < 19350; j++) _solve(b, j);
for(j = 20180; j < 20190; j++) _solve(b, j);
for(j = 21020; j < 21030; j++) _solve(b, j);
for(j = 21860; j < 21870; j++) _solve(b, j);
for(j = 22700; j < 22710; j++) _solve(b, j);
for(j = 23540; j < 23550; j++) _solve(b, j);
for(j = 24380; j < 24390; j++) _solve(b, j);
for(j = 25220; j < 25230; j++) _solve(b, j);
for(j = 26060; j < 26070; j++) _solve(b, j);
for(j = 26900; j < 26910; j++) _solve(b, j);
for(j = 27740; j < 27750; j++) _solve(b, j);
for(j = 28580; j < 28590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 29420; j < 29430; j++) _solve(b, j);
for(j = 30260; j < 30270; j++) _solve(b, j);
for(j = 31100; j < 31110; j++) _solve(b, j);
for(j = 31940; j < 31950; j++) _solve(b, j);
for(j = 32780; j < 32790; j++) _solve(b, j);
for(j = 33620; j < 33630; j++) _solve(b, j);
for(j = 34460; j < 34470; j++) _solve(b, j);
for(j = 35300; j < 35310; j++) _solve(b, j);
for(j = 36140; j < 36150; j++) _solve(b, j);
for(j = 36980; j < 36990; j++) _solve(b, j);
for(j = 37820; j < 37830; j++) _solve(b, j);
for(j = 38660; j < 38670; j++) _solve(b, j);
for(j = 39500; j < 39510; j++) _solve(b, j);
for(j = 40340; j < 40350; j++) _solve(b, j);
for(j = 41180; j < 41190; j++) _solve(b, j);
for(j = 42020; j < 42030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 42860; j < 42870; j++) _solve(b, j);
for(j = 43700; j < 43710; j++) _solve(b, j);
for(j = 44540; j < 44550; j++) _solve(b, j);
for(j = 45380; j < 45390; j++) _solve(b, j);
for(j = 46220; j < 46230; j++) _solve(b, j);
for(j = 47060; j < 47070; j++) _solve(b, j);
for(j = 47900; j < 47910; j++) _solve(b, j);
for(j = 48740; j < 48750; j++) _solve(b, j);
for(j = 49580; j < 49590; j++) _solve(b, j);
for(j = 50420; j < 50430; j++) _solve(b, j);
for(j = 51260; j < 51270; j++) _solve(b, j);
for(j = 52100; j < 52110; j++) _solve(b, j);
for(j = 52940; j < 52950; j++) _solve(b, j);
for(j = 53780; j < 53790; j++) _solve(b, j);
for(j = 54620; j < 54630; j++) _solve(b, j);
for(j = 55460; j < 55470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 56300; j < 56310; j++) _solve(b, j);
for(j = 57140; j < 57150; j++) _solve(b, j);
for(j = 57980; j < 57990; j++) _solve(b, j);
for(j = 58820; j < 58830; j++) _solve(b, j);
for(j = 59660; j < 59670; j++) _solve(b, j);
for(j = 60500; j < 60510; j++) _solve(b, j);
for(j = 61340; j < 61350; j++) _solve(b, j);
for(j = 62180; j < 62190; j++) _solve(b, j);
for(j = 63020; j < 63030; j++) _solve(b, j);
for(j = 63860; j < 63870; j++) _solve(b, j);
for(j = 64700; j < 64710; j++) _solve(b, j);
for(j = 65540; j < 65550; j++) _solve(b, j);
for(j = 66380; j < 66390; j++) _solve(b, j);
for(j = 67220; j < 67230; j++) _solve(b, j);
for(j = 68060; j < 68070; j++) _solve(b, j);
for(j = 68900; j < 68910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 69740; j < 69750; j++) _solve(b, j);
for(j = 70580; j < 70590; j++) _solve(b, j);
for(j = 71420; j < 71430; j++) _solve(b, j);
for(j = 72260; j < 72270; j++) _solve(b, j);
for(j = 73100; j < 73110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 3390; j < 3400; j++) _solve(b, j);
for(j = 4230; j < 4240; j++) _solve(b, j);
for(j = 5070; j < 5080; j++) _solve(b, j);
for(j = 5910; j < 5920; j++) _solve(b, j);
for(j = 6750; j < 6760; j++) _solve(b, j);
for(j = 7590; j < 7600; j++) _solve(b, j);
for(j = 8430; j < 8440; j++) _solve(b, j);
for(j = 9270; j < 9280; j++) _solve(b, j);
for(j = 10110; j < 10120; j++) _solve(b, j);
for(j = 10950; j < 10960; j++) _solve(b, j);
for(j = 11790; j < 11800; j++) _solve(b, j);
for(j = 12630; j < 12640; j++) _solve(b, j);
for(j = 13470; j < 13480; j++) _solve(b, j);
for(j = 14310; j < 14320; j++) _solve(b, j);
for(j = 15150; j < 15160; j++) _solve(b, j);
for(j = 15990; j < 16000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 16830; j < 16840; j++) _solve(b, j);
for(j = 17670; j < 17680; j++) _solve(b, j);
for(j = 18510; j < 18520; j++) _solve(b, j);
for(j = 19350; j < 19360; j++) _solve(b, j);
for(j = 20190; j < 20200; j++) _solve(b, j);
for(j = 21030; j < 21040; j++) _solve(b, j);
for(j = 21870; j < 21880; j++) _solve(b, j);
for(j = 22710; j < 22720; j++) _solve(b, j);
for(j = 23550; j < 23560; j++) _solve(b, j);
for(j = 24390; j < 24400; j++) _solve(b, j);
for(j = 25230; j < 25240; j++) _solve(b, j);
for(j = 26070; j < 26080; j++) _solve(b, j);
for(j = 26910; j < 26920; j++) _solve(b, j);
for(j = 27750; j < 27760; j++) _solve(b, j);
for(j = 28590; j < 28600; j++) _solve(b, j);
for(j = 29430; j < 29440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 30270; j < 30280; j++) _solve(b, j);
for(j = 31110; j < 31120; j++) _solve(b, j);
for(j = 31950; j < 31960; j++) _solve(b, j);
for(j = 32790; j < 32800; j++) _solve(b, j);
for(j = 33630; j < 33640; j++) _solve(b, j);
for(j = 34470; j < 34480; j++) _solve(b, j);
for(j = 35310; j < 35320; j++) _solve(b, j);
for(j = 36150; j < 36160; j++) _solve(b, j);
for(j = 36990; j < 37000; j++) _solve(b, j);
for(j = 37830; j < 37840; j++) _solve(b, j);
for(j = 38670; j < 38680; j++) _solve(b, j);
for(j = 39510; j < 39520; j++) _solve(b, j);
for(j = 40350; j < 40360; j++) _solve(b, j);
for(j = 41190; j < 41200; j++) _solve(b, j);
for(j = 42030; j < 42040; j++) _solve(b, j);
for(j = 42870; j < 42880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 43710; j < 43720; j++) _solve(b, j);
for(j = 44550; j < 44560; j++) _solve(b, j);
for(j = 45390; j < 45400; j++) _solve(b, j);
for(j = 46230; j < 46240; j++) _solve(b, j);
for(j = 47070; j < 47080; j++) _solve(b, j);
for(j = 47910; j < 47920; j++) _solve(b, j);
for(j = 48750; j < 48760; j++) _solve(b, j);
for(j = 49590; j < 49600; j++) _solve(b, j);
for(j = 50430; j < 50440; j++) _solve(b, j);
for(j = 51270; j < 51280; j++) _solve(b, j);
for(j = 52110; j < 52120; j++) _solve(b, j);
for(j = 52950; j < 52960; j++) _solve(b, j);
for(j = 53790; j < 53800; j++) _solve(b, j);
for(j = 54630; j < 54640; j++) _solve(b, j);
for(j = 55470; j < 55480; j++) _solve(b, j);
for(j = 56310; j < 56320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 57150; j < 57160; j++) _solve(b, j);
for(j = 57990; j < 58000; j++) _solve(b, j);
for(j = 58830; j < 58840; j++) _solve(b, j);
for(j = 59670; j < 59680; j++) _solve(b, j);
for(j = 60510; j < 60520; j++) _solve(b, j);
for(j = 61350; j < 61360; j++) _solve(b, j);
for(j = 62190; j < 62200; j++) _solve(b, j);
for(j = 63030; j < 63040; j++) _solve(b, j);
for(j = 63870; j < 63880; j++) _solve(b, j);
for(j = 64710; j < 64720; j++) _solve(b, j);
for(j = 65550; j < 65560; j++) _solve(b, j);
for(j = 66390; j < 66400; j++) _solve(b, j);
for(j = 67230; j < 67240; j++) _solve(b, j);
for(j = 68070; j < 68080; j++) _solve(b, j);
for(j = 68910; j < 68920; j++) _solve(b, j);
for(j = 69750; j < 69760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 70590; j < 70600; j++) _solve(b, j);
for(j = 71430; j < 71440; j++) _solve(b, j);
for(j = 72270; j < 72280; j++) _solve(b, j);
for(j = 73110; j < 73120; j++) _solve(b, j);
for(j = 73950; j < 73960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 4240; j < 4250; j++) _solve(b, j);
for(j = 5080; j < 5090; j++) _solve(b, j);
for(j = 5920; j < 5930; j++) _solve(b, j);
for(j = 6760; j < 6770; j++) _solve(b, j);
for(j = 7600; j < 7610; j++) _solve(b, j);
for(j = 8440; j < 8450; j++) _solve(b, j);
for(j = 9280; j < 9290; j++) _solve(b, j);
for(j = 10120; j < 10130; j++) _solve(b, j);
for(j = 10960; j < 10970; j++) _solve(b, j);
for(j = 11800; j < 11810; j++) _solve(b, j);
for(j = 12640; j < 12650; j++) _solve(b, j);
for(j = 13480; j < 13490; j++) _solve(b, j);
for(j = 14320; j < 14330; j++) _solve(b, j);
for(j = 15160; j < 15170; j++) _solve(b, j);
for(j = 16000; j < 16010; j++) _solve(b, j);
for(j = 16840; j < 16850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 17680; j < 17690; j++) _solve(b, j);
for(j = 18520; j < 18530; j++) _solve(b, j);
for(j = 19360; j < 19370; j++) _solve(b, j);
for(j = 20200; j < 20210; j++) _solve(b, j);
for(j = 21040; j < 21050; j++) _solve(b, j);
for(j = 21880; j < 21890; j++) _solve(b, j);
for(j = 22720; j < 22730; j++) _solve(b, j);
for(j = 23560; j < 23570; j++) _solve(b, j);
for(j = 24400; j < 24410; j++) _solve(b, j);
for(j = 25240; j < 25250; j++) _solve(b, j);
for(j = 26080; j < 26090; j++) _solve(b, j);
for(j = 26920; j < 26930; j++) _solve(b, j);
for(j = 27760; j < 27770; j++) _solve(b, j);
for(j = 28600; j < 28610; j++) _solve(b, j);
for(j = 29440; j < 29450; j++) _solve(b, j);
for(j = 30280; j < 30290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 31120; j < 31130; j++) _solve(b, j);
for(j = 31960; j < 31970; j++) _solve(b, j);
for(j = 32800; j < 32810; j++) _solve(b, j);
for(j = 33640; j < 33650; j++) _solve(b, j);
for(j = 34480; j < 34490; j++) _solve(b, j);
for(j = 35320; j < 35330; j++) _solve(b, j);
for(j = 36160; j < 36170; j++) _solve(b, j);
for(j = 37000; j < 37010; j++) _solve(b, j);
for(j = 37840; j < 37850; j++) _solve(b, j);
for(j = 38680; j < 38690; j++) _solve(b, j);
for(j = 39520; j < 39530; j++) _solve(b, j);
for(j = 40360; j < 40370; j++) _solve(b, j);
for(j = 41200; j < 41210; j++) _solve(b, j);
for(j = 42040; j < 42050; j++) _solve(b, j);
for(j = 42880; j < 42890; j++) _solve(b, j);
for(j = 43720; j < 43730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 44560; j < 44570; j++) _solve(b, j);
for(j = 45400; j < 45410; j++) _solve(b, j);
for(j = 46240; j < 46250; j++) _solve(b, j);
for(j = 47080; j < 47090; j++) _solve(b, j);
for(j = 47920; j < 47930; j++) _solve(b, j);
for(j = 48760; j < 48770; j++) _solve(b, j);
for(j = 49600; j < 49610; j++) _solve(b, j);
for(j = 50440; j < 50450; j++) _solve(b, j);
for(j = 51280; j < 51290; j++) _solve(b, j);
for(j = 52120; j < 52130; j++) _solve(b, j);
for(j = 52960; j < 52970; j++) _solve(b, j);
for(j = 53800; j < 53810; j++) _solve(b, j);
for(j = 54640; j < 54650; j++) _solve(b, j);
for(j = 55480; j < 55490; j++) _solve(b, j);
for(j = 56320; j < 56330; j++) _solve(b, j);
for(j = 57160; j < 57170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 58000; j < 58010; j++) _solve(b, j);
for(j = 58840; j < 58850; j++) _solve(b, j);
for(j = 59680; j < 59690; j++) _solve(b, j);
for(j = 60520; j < 60530; j++) _solve(b, j);
for(j = 61360; j < 61370; j++) _solve(b, j);
for(j = 62200; j < 62210; j++) _solve(b, j);
for(j = 63040; j < 63050; j++) _solve(b, j);
for(j = 63880; j < 63890; j++) _solve(b, j);
for(j = 64720; j < 64730; j++) _solve(b, j);
for(j = 65560; j < 65570; j++) _solve(b, j);
for(j = 66400; j < 66410; j++) _solve(b, j);
for(j = 67240; j < 67250; j++) _solve(b, j);
for(j = 68080; j < 68090; j++) _solve(b, j);
for(j = 68920; j < 68930; j++) _solve(b, j);
for(j = 69760; j < 69770; j++) _solve(b, j);
for(j = 70600; j < 70610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 71440; j < 71450; j++) _solve(b, j);
for(j = 72280; j < 72290; j++) _solve(b, j);
for(j = 73120; j < 73130; j++) _solve(b, j);
for(j = 73960; j < 73970; j++) _solve(b, j);
for(j = 74800; j < 74810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 5090; j < 5100; j++) _solve(b, j);
for(j = 5930; j < 5940; j++) _solve(b, j);
for(j = 6770; j < 6780; j++) _solve(b, j);
for(j = 7610; j < 7620; j++) _solve(b, j);
for(j = 8450; j < 8460; j++) _solve(b, j);
for(j = 9290; j < 9300; j++) _solve(b, j);
for(j = 10130; j < 10140; j++) _solve(b, j);
for(j = 10970; j < 10980; j++) _solve(b, j);
for(j = 11810; j < 11820; j++) _solve(b, j);
for(j = 12650; j < 12660; j++) _solve(b, j);
for(j = 13490; j < 13500; j++) _solve(b, j);
for(j = 14330; j < 14340; j++) _solve(b, j);
for(j = 15170; j < 15180; j++) _solve(b, j);
for(j = 16010; j < 16020; j++) _solve(b, j);
for(j = 16850; j < 16860; j++) _solve(b, j);
for(j = 17690; j < 17700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 18530; j < 18540; j++) _solve(b, j);
for(j = 19370; j < 19380; j++) _solve(b, j);
for(j = 20210; j < 20220; j++) _solve(b, j);
for(j = 21050; j < 21060; j++) _solve(b, j);
for(j = 21890; j < 21900; j++) _solve(b, j);
for(j = 22730; j < 22740; j++) _solve(b, j);
for(j = 23570; j < 23580; j++) _solve(b, j);
for(j = 24410; j < 24420; j++) _solve(b, j);
for(j = 25250; j < 25260; j++) _solve(b, j);
for(j = 26090; j < 26100; j++) _solve(b, j);
for(j = 26930; j < 26940; j++) _solve(b, j);
for(j = 27770; j < 27780; j++) _solve(b, j);
for(j = 28610; j < 28620; j++) _solve(b, j);
for(j = 29450; j < 29460; j++) _solve(b, j);
for(j = 30290; j < 30300; j++) _solve(b, j);
for(j = 31130; j < 31140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 31970; j < 31980; j++) _solve(b, j);
for(j = 32810; j < 32820; j++) _solve(b, j);
for(j = 33650; j < 33660; j++) _solve(b, j);
for(j = 34490; j < 34500; j++) _solve(b, j);
for(j = 35330; j < 35340; j++) _solve(b, j);
for(j = 36170; j < 36180; j++) _solve(b, j);
for(j = 37010; j < 37020; j++) _solve(b, j);
for(j = 37850; j < 37860; j++) _solve(b, j);
for(j = 38690; j < 38700; j++) _solve(b, j);
for(j = 39530; j < 39540; j++) _solve(b, j);
for(j = 40370; j < 40380; j++) _solve(b, j);
for(j = 41210; j < 41220; j++) _solve(b, j);
for(j = 42050; j < 42060; j++) _solve(b, j);
for(j = 42890; j < 42900; j++) _solve(b, j);
for(j = 43730; j < 43740; j++) _solve(b, j);
for(j = 44570; j < 44580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 45410; j < 45420; j++) _solve(b, j);
for(j = 46250; j < 46260; j++) _solve(b, j);
for(j = 47090; j < 47100; j++) _solve(b, j);
for(j = 47930; j < 47940; j++) _solve(b, j);
for(j = 48770; j < 48780; j++) _solve(b, j);
for(j = 49610; j < 49620; j++) _solve(b, j);
for(j = 50450; j < 50460; j++) _solve(b, j);
for(j = 51290; j < 51300; j++) _solve(b, j);
for(j = 52130; j < 52140; j++) _solve(b, j);
for(j = 52970; j < 52980; j++) _solve(b, j);
for(j = 53810; j < 53820; j++) _solve(b, j);
for(j = 54650; j < 54660; j++) _solve(b, j);
for(j = 55490; j < 55500; j++) _solve(b, j);
for(j = 56330; j < 56340; j++) _solve(b, j);
for(j = 57170; j < 57180; j++) _solve(b, j);
for(j = 58010; j < 58020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 58850; j < 58860; j++) _solve(b, j);
for(j = 59690; j < 59700; j++) _solve(b, j);
for(j = 60530; j < 60540; j++) _solve(b, j);
for(j = 61370; j < 61380; j++) _solve(b, j);
for(j = 62210; j < 62220; j++) _solve(b, j);
for(j = 63050; j < 63060; j++) _solve(b, j);
for(j = 63890; j < 63900; j++) _solve(b, j);
for(j = 64730; j < 64740; j++) _solve(b, j);
for(j = 65570; j < 65580; j++) _solve(b, j);
for(j = 66410; j < 66420; j++) _solve(b, j);
for(j = 67250; j < 67260; j++) _solve(b, j);
for(j = 68090; j < 68100; j++) _solve(b, j);
for(j = 68930; j < 68940; j++) _solve(b, j);
for(j = 69770; j < 69780; j++) _solve(b, j);
for(j = 70610; j < 70620; j++) _solve(b, j);
for(j = 71450; j < 71460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 72290; j < 72300; j++) _solve(b, j);
for(j = 73130; j < 73140; j++) _solve(b, j);
for(j = 73970; j < 73980; j++) _solve(b, j);
for(j = 74810; j < 74820; j++) _solve(b, j);
for(j = 75650; j < 75660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 5940; j < 5950; j++) _solve(b, j);
for(j = 6780; j < 6790; j++) _solve(b, j);
for(j = 7620; j < 7630; j++) _solve(b, j);
for(j = 8460; j < 8470; j++) _solve(b, j);
for(j = 9300; j < 9310; j++) _solve(b, j);
for(j = 10140; j < 10150; j++) _solve(b, j);
for(j = 10980; j < 10990; j++) _solve(b, j);
for(j = 11820; j < 11830; j++) _solve(b, j);
for(j = 12660; j < 12670; j++) _solve(b, j);
for(j = 13500; j < 13510; j++) _solve(b, j);
for(j = 14340; j < 14350; j++) _solve(b, j);
for(j = 15180; j < 15190; j++) _solve(b, j);
for(j = 16020; j < 16030; j++) _solve(b, j);
for(j = 16860; j < 16870; j++) _solve(b, j);
for(j = 17700; j < 17710; j++) _solve(b, j);
for(j = 18540; j < 18550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 19380; j < 19390; j++) _solve(b, j);
for(j = 20220; j < 20230; j++) _solve(b, j);
for(j = 21060; j < 21070; j++) _solve(b, j);
for(j = 21900; j < 21910; j++) _solve(b, j);
for(j = 22740; j < 22750; j++) _solve(b, j);
for(j = 23580; j < 23590; j++) _solve(b, j);
for(j = 24420; j < 24430; j++) _solve(b, j);
for(j = 25260; j < 25270; j++) _solve(b, j);
for(j = 26100; j < 26110; j++) _solve(b, j);
for(j = 26940; j < 26950; j++) _solve(b, j);
for(j = 27780; j < 27790; j++) _solve(b, j);
for(j = 28620; j < 28630; j++) _solve(b, j);
for(j = 29460; j < 29470; j++) _solve(b, j);
for(j = 30300; j < 30310; j++) _solve(b, j);
for(j = 31140; j < 31150; j++) _solve(b, j);
for(j = 31980; j < 31990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 32820; j < 32830; j++) _solve(b, j);
for(j = 33660; j < 33670; j++) _solve(b, j);
for(j = 34500; j < 34510; j++) _solve(b, j);
for(j = 35340; j < 35350; j++) _solve(b, j);
for(j = 36180; j < 36190; j++) _solve(b, j);
for(j = 37020; j < 37030; j++) _solve(b, j);
for(j = 37860; j < 37870; j++) _solve(b, j);
for(j = 38700; j < 38710; j++) _solve(b, j);
for(j = 39540; j < 39550; j++) _solve(b, j);
for(j = 40380; j < 40390; j++) _solve(b, j);
for(j = 41220; j < 41230; j++) _solve(b, j);
for(j = 42060; j < 42070; j++) _solve(b, j);
for(j = 42900; j < 42910; j++) _solve(b, j);
for(j = 43740; j < 43750; j++) _solve(b, j);
for(j = 44580; j < 44590; j++) _solve(b, j);
for(j = 45420; j < 45430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 46260; j < 46270; j++) _solve(b, j);
for(j = 47100; j < 47110; j++) _solve(b, j);
for(j = 47940; j < 47950; j++) _solve(b, j);
for(j = 48780; j < 48790; j++) _solve(b, j);
for(j = 49620; j < 49630; j++) _solve(b, j);
for(j = 50460; j < 50470; j++) _solve(b, j);
for(j = 51300; j < 51310; j++) _solve(b, j);
for(j = 52140; j < 52150; j++) _solve(b, j);
for(j = 52980; j < 52990; j++) _solve(b, j);
for(j = 53820; j < 53830; j++) _solve(b, j);
for(j = 54660; j < 54670; j++) _solve(b, j);
for(j = 55500; j < 55510; j++) _solve(b, j);
for(j = 56340; j < 56350; j++) _solve(b, j);
for(j = 57180; j < 57190; j++) _solve(b, j);
for(j = 58020; j < 58030; j++) _solve(b, j);
for(j = 58860; j < 58870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 59700; j < 59710; j++) _solve(b, j);
for(j = 60540; j < 60550; j++) _solve(b, j);
for(j = 61380; j < 61390; j++) _solve(b, j);
for(j = 62220; j < 62230; j++) _solve(b, j);
for(j = 63060; j < 63070; j++) _solve(b, j);
for(j = 63900; j < 63910; j++) _solve(b, j);
for(j = 64740; j < 64750; j++) _solve(b, j);
for(j = 65580; j < 65590; j++) _solve(b, j);
for(j = 66420; j < 66430; j++) _solve(b, j);
for(j = 67260; j < 67270; j++) _solve(b, j);
for(j = 68100; j < 68110; j++) _solve(b, j);
for(j = 68940; j < 68950; j++) _solve(b, j);
for(j = 69780; j < 69790; j++) _solve(b, j);
for(j = 70620; j < 70630; j++) _solve(b, j);
for(j = 71460; j < 71470; j++) _solve(b, j);
for(j = 72300; j < 72310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 73140; j < 73150; j++) _solve(b, j);
for(j = 73980; j < 73990; j++) _solve(b, j);
for(j = 74820; j < 74830; j++) _solve(b, j);
for(j = 75660; j < 75670; j++) _solve(b, j);
for(j = 76500; j < 76510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 6790; j < 6800; j++) _solve(b, j);
for(j = 7630; j < 7640; j++) _solve(b, j);
for(j = 8470; j < 8480; j++) _solve(b, j);
for(j = 9310; j < 9320; j++) _solve(b, j);
for(j = 10150; j < 10160; j++) _solve(b, j);
for(j = 10990; j < 11000; j++) _solve(b, j);
for(j = 11830; j < 11840; j++) _solve(b, j);
for(j = 12670; j < 12680; j++) _solve(b, j);
for(j = 13510; j < 13520; j++) _solve(b, j);
for(j = 14350; j < 14360; j++) _solve(b, j);
for(j = 15190; j < 15200; j++) _solve(b, j);
for(j = 16030; j < 16040; j++) _solve(b, j);
for(j = 16870; j < 16880; j++) _solve(b, j);
for(j = 17710; j < 17720; j++) _solve(b, j);
for(j = 18550; j < 18560; j++) _solve(b, j);
for(j = 19390; j < 19400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 20230; j < 20240; j++) _solve(b, j);
for(j = 21070; j < 21080; j++) _solve(b, j);
for(j = 21910; j < 21920; j++) _solve(b, j);
for(j = 22750; j < 22760; j++) _solve(b, j);
for(j = 23590; j < 23600; j++) _solve(b, j);
for(j = 24430; j < 24440; j++) _solve(b, j);
for(j = 25270; j < 25280; j++) _solve(b, j);
for(j = 26110; j < 26120; j++) _solve(b, j);
for(j = 26950; j < 26960; j++) _solve(b, j);
for(j = 27790; j < 27800; j++) _solve(b, j);
for(j = 28630; j < 28640; j++) _solve(b, j);
for(j = 29470; j < 29480; j++) _solve(b, j);
for(j = 30310; j < 30320; j++) _solve(b, j);
for(j = 31150; j < 31160; j++) _solve(b, j);
for(j = 31990; j < 32000; j++) _solve(b, j);
for(j = 32830; j < 32840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 33670; j < 33680; j++) _solve(b, j);
for(j = 34510; j < 34520; j++) _solve(b, j);
for(j = 35350; j < 35360; j++) _solve(b, j);
for(j = 36190; j < 36200; j++) _solve(b, j);
for(j = 37030; j < 37040; j++) _solve(b, j);
for(j = 37870; j < 37880; j++) _solve(b, j);
for(j = 38710; j < 38720; j++) _solve(b, j);
for(j = 39550; j < 39560; j++) _solve(b, j);
for(j = 40390; j < 40400; j++) _solve(b, j);
for(j = 41230; j < 41240; j++) _solve(b, j);
for(j = 42070; j < 42080; j++) _solve(b, j);
for(j = 42910; j < 42920; j++) _solve(b, j);
for(j = 43750; j < 43760; j++) _solve(b, j);
for(j = 44590; j < 44600; j++) _solve(b, j);
for(j = 45430; j < 45440; j++) _solve(b, j);
for(j = 46270; j < 46280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 47110; j < 47120; j++) _solve(b, j);
for(j = 47950; j < 47960; j++) _solve(b, j);
for(j = 48790; j < 48800; j++) _solve(b, j);
for(j = 49630; j < 49640; j++) _solve(b, j);
for(j = 50470; j < 50480; j++) _solve(b, j);
for(j = 51310; j < 51320; j++) _solve(b, j);
for(j = 52150; j < 52160; j++) _solve(b, j);
for(j = 52990; j < 53000; j++) _solve(b, j);
for(j = 53830; j < 53840; j++) _solve(b, j);
for(j = 54670; j < 54680; j++) _solve(b, j);
for(j = 55510; j < 55520; j++) _solve(b, j);
for(j = 56350; j < 56360; j++) _solve(b, j);
for(j = 57190; j < 57200; j++) _solve(b, j);
for(j = 58030; j < 58040; j++) _solve(b, j);
for(j = 58870; j < 58880; j++) _solve(b, j);
for(j = 59710; j < 59720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 60550; j < 60560; j++) _solve(b, j);
for(j = 61390; j < 61400; j++) _solve(b, j);
for(j = 62230; j < 62240; j++) _solve(b, j);
for(j = 63070; j < 63080; j++) _solve(b, j);
for(j = 63910; j < 63920; j++) _solve(b, j);
for(j = 64750; j < 64760; j++) _solve(b, j);
for(j = 65590; j < 65600; j++) _solve(b, j);
for(j = 66430; j < 66440; j++) _solve(b, j);
for(j = 67270; j < 67280; j++) _solve(b, j);
for(j = 68110; j < 68120; j++) _solve(b, j);
for(j = 68950; j < 68960; j++) _solve(b, j);
for(j = 69790; j < 69800; j++) _solve(b, j);
for(j = 70630; j < 70640; j++) _solve(b, j);
for(j = 71470; j < 71480; j++) _solve(b, j);
for(j = 72310; j < 72320; j++) _solve(b, j);
for(j = 73150; j < 73160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 73990; j < 74000; j++) _solve(b, j);
for(j = 74830; j < 74840; j++) _solve(b, j);
for(j = 75670; j < 75680; j++) _solve(b, j);
for(j = 76510; j < 76520; j++) _solve(b, j);
for(j = 77350; j < 77360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 7640; j < 7650; j++) _solve(b, j);
for(j = 8480; j < 8490; j++) _solve(b, j);
for(j = 9320; j < 9330; j++) _solve(b, j);
for(j = 10160; j < 10170; j++) _solve(b, j);
for(j = 11000; j < 11010; j++) _solve(b, j);
for(j = 11840; j < 11850; j++) _solve(b, j);
for(j = 12680; j < 12690; j++) _solve(b, j);
for(j = 13520; j < 13530; j++) _solve(b, j);
for(j = 14360; j < 14370; j++) _solve(b, j);
for(j = 15200; j < 15210; j++) _solve(b, j);
for(j = 16040; j < 16050; j++) _solve(b, j);
for(j = 16880; j < 16890; j++) _solve(b, j);
for(j = 17720; j < 17730; j++) _solve(b, j);
for(j = 18560; j < 18570; j++) _solve(b, j);
for(j = 19400; j < 19410; j++) _solve(b, j);
for(j = 20240; j < 20250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 21080; j < 21090; j++) _solve(b, j);
for(j = 21920; j < 21930; j++) _solve(b, j);
for(j = 22760; j < 22770; j++) _solve(b, j);
for(j = 23600; j < 23610; j++) _solve(b, j);
for(j = 24440; j < 24450; j++) _solve(b, j);
for(j = 25280; j < 25290; j++) _solve(b, j);
for(j = 26120; j < 26130; j++) _solve(b, j);
for(j = 26960; j < 26970; j++) _solve(b, j);
for(j = 27800; j < 27810; j++) _solve(b, j);
for(j = 28640; j < 28650; j++) _solve(b, j);
for(j = 29480; j < 29490; j++) _solve(b, j);
for(j = 30320; j < 30330; j++) _solve(b, j);
for(j = 31160; j < 31170; j++) _solve(b, j);
for(j = 32000; j < 32010; j++) _solve(b, j);
for(j = 32840; j < 32850; j++) _solve(b, j);
for(j = 33680; j < 33690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 34520; j < 34530; j++) _solve(b, j);
for(j = 35360; j < 35370; j++) _solve(b, j);
for(j = 36200; j < 36210; j++) _solve(b, j);
for(j = 37040; j < 37050; j++) _solve(b, j);
for(j = 37880; j < 37890; j++) _solve(b, j);
for(j = 38720; j < 38730; j++) _solve(b, j);
for(j = 39560; j < 39570; j++) _solve(b, j);
for(j = 40400; j < 40410; j++) _solve(b, j);
for(j = 41240; j < 41250; j++) _solve(b, j);
for(j = 42080; j < 42090; j++) _solve(b, j);
for(j = 42920; j < 42930; j++) _solve(b, j);
for(j = 43760; j < 43770; j++) _solve(b, j);
for(j = 44600; j < 44610; j++) _solve(b, j);
for(j = 45440; j < 45450; j++) _solve(b, j);
for(j = 46280; j < 46290; j++) _solve(b, j);
for(j = 47120; j < 47130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 47960; j < 47970; j++) _solve(b, j);
for(j = 48800; j < 48810; j++) _solve(b, j);
for(j = 49640; j < 49650; j++) _solve(b, j);
for(j = 50480; j < 50490; j++) _solve(b, j);
for(j = 51320; j < 51330; j++) _solve(b, j);
for(j = 52160; j < 52170; j++) _solve(b, j);
for(j = 53000; j < 53010; j++) _solve(b, j);
for(j = 53840; j < 53850; j++) _solve(b, j);
for(j = 54680; j < 54690; j++) _solve(b, j);
for(j = 55520; j < 55530; j++) _solve(b, j);
for(j = 56360; j < 56370; j++) _solve(b, j);
for(j = 57200; j < 57210; j++) _solve(b, j);
for(j = 58040; j < 58050; j++) _solve(b, j);
for(j = 58880; j < 58890; j++) _solve(b, j);
for(j = 59720; j < 59730; j++) _solve(b, j);
for(j = 60560; j < 60570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 61400; j < 61410; j++) _solve(b, j);
for(j = 62240; j < 62250; j++) _solve(b, j);
for(j = 63080; j < 63090; j++) _solve(b, j);
for(j = 63920; j < 63930; j++) _solve(b, j);
for(j = 64760; j < 64770; j++) _solve(b, j);
for(j = 65600; j < 65610; j++) _solve(b, j);
for(j = 66440; j < 66450; j++) _solve(b, j);
for(j = 67280; j < 67290; j++) _solve(b, j);
for(j = 68120; j < 68130; j++) _solve(b, j);
for(j = 68960; j < 68970; j++) _solve(b, j);
for(j = 69800; j < 69810; j++) _solve(b, j);
for(j = 70640; j < 70650; j++) _solve(b, j);
for(j = 71480; j < 71490; j++) _solve(b, j);
for(j = 72320; j < 72330; j++) _solve(b, j);
for(j = 73160; j < 73170; j++) _solve(b, j);
for(j = 74000; j < 74010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 74840; j < 74850; j++) _solve(b, j);
for(j = 75680; j < 75690; j++) _solve(b, j);
for(j = 76520; j < 76530; j++) _solve(b, j);
for(j = 77360; j < 77370; j++) _solve(b, j);
for(j = 78200; j < 78210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 8490; j < 8500; j++) _solve(b, j);
for(j = 9330; j < 9340; j++) _solve(b, j);
for(j = 10170; j < 10180; j++) _solve(b, j);
for(j = 11010; j < 11020; j++) _solve(b, j);
for(j = 11850; j < 11860; j++) _solve(b, j);
for(j = 12690; j < 12700; j++) _solve(b, j);
for(j = 13530; j < 13540; j++) _solve(b, j);
for(j = 14370; j < 14380; j++) _solve(b, j);
for(j = 15210; j < 15220; j++) _solve(b, j);
for(j = 16050; j < 16060; j++) _solve(b, j);
for(j = 16890; j < 16900; j++) _solve(b, j);
for(j = 17730; j < 17740; j++) _solve(b, j);
for(j = 18570; j < 18580; j++) _solve(b, j);
for(j = 19410; j < 19420; j++) _solve(b, j);
for(j = 20250; j < 20260; j++) _solve(b, j);
for(j = 21090; j < 21100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 21930; j < 21940; j++) _solve(b, j);
for(j = 22770; j < 22780; j++) _solve(b, j);
for(j = 23610; j < 23620; j++) _solve(b, j);
for(j = 24450; j < 24460; j++) _solve(b, j);
for(j = 25290; j < 25300; j++) _solve(b, j);
for(j = 26130; j < 26140; j++) _solve(b, j);
for(j = 26970; j < 26980; j++) _solve(b, j);
for(j = 27810; j < 27820; j++) _solve(b, j);
for(j = 28650; j < 28660; j++) _solve(b, j);
for(j = 29490; j < 29500; j++) _solve(b, j);
for(j = 30330; j < 30340; j++) _solve(b, j);
for(j = 31170; j < 31180; j++) _solve(b, j);
for(j = 32010; j < 32020; j++) _solve(b, j);
for(j = 32850; j < 32860; j++) _solve(b, j);
for(j = 33690; j < 33700; j++) _solve(b, j);
for(j = 34530; j < 34540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 35370; j < 35380; j++) _solve(b, j);
for(j = 36210; j < 36220; j++) _solve(b, j);
for(j = 37050; j < 37060; j++) _solve(b, j);
for(j = 37890; j < 37900; j++) _solve(b, j);
for(j = 38730; j < 38740; j++) _solve(b, j);
for(j = 39570; j < 39580; j++) _solve(b, j);
for(j = 40410; j < 40420; j++) _solve(b, j);
for(j = 41250; j < 41260; j++) _solve(b, j);
for(j = 42090; j < 42100; j++) _solve(b, j);
for(j = 42930; j < 42940; j++) _solve(b, j);
for(j = 43770; j < 43780; j++) _solve(b, j);
for(j = 44610; j < 44620; j++) _solve(b, j);
for(j = 45450; j < 45460; j++) _solve(b, j);
for(j = 46290; j < 46300; j++) _solve(b, j);
for(j = 47130; j < 47140; j++) _solve(b, j);
for(j = 47970; j < 47980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 48810; j < 48820; j++) _solve(b, j);
for(j = 49650; j < 49660; j++) _solve(b, j);
for(j = 50490; j < 50500; j++) _solve(b, j);
for(j = 51330; j < 51340; j++) _solve(b, j);
for(j = 52170; j < 52180; j++) _solve(b, j);
for(j = 53010; j < 53020; j++) _solve(b, j);
for(j = 53850; j < 53860; j++) _solve(b, j);
for(j = 54690; j < 54700; j++) _solve(b, j);
for(j = 55530; j < 55540; j++) _solve(b, j);
for(j = 56370; j < 56380; j++) _solve(b, j);
for(j = 57210; j < 57220; j++) _solve(b, j);
for(j = 58050; j < 58060; j++) _solve(b, j);
for(j = 58890; j < 58900; j++) _solve(b, j);
for(j = 59730; j < 59740; j++) _solve(b, j);
for(j = 60570; j < 60580; j++) _solve(b, j);
for(j = 61410; j < 61420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 62250; j < 62260; j++) _solve(b, j);
for(j = 63090; j < 63100; j++) _solve(b, j);
for(j = 63930; j < 63940; j++) _solve(b, j);
for(j = 64770; j < 64780; j++) _solve(b, j);
for(j = 65610; j < 65620; j++) _solve(b, j);
for(j = 66450; j < 66460; j++) _solve(b, j);
for(j = 67290; j < 67300; j++) _solve(b, j);
for(j = 68130; j < 68140; j++) _solve(b, j);
for(j = 68970; j < 68980; j++) _solve(b, j);
for(j = 69810; j < 69820; j++) _solve(b, j);
for(j = 70650; j < 70660; j++) _solve(b, j);
for(j = 71490; j < 71500; j++) _solve(b, j);
for(j = 72330; j < 72340; j++) _solve(b, j);
for(j = 73170; j < 73180; j++) _solve(b, j);
for(j = 74010; j < 74020; j++) _solve(b, j);
for(j = 74850; j < 74860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 75690; j < 75700; j++) _solve(b, j);
for(j = 76530; j < 76540; j++) _solve(b, j);
for(j = 77370; j < 77380; j++) _solve(b, j);
for(j = 78210; j < 78220; j++) _solve(b, j);
for(j = 79050; j < 79060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 9340; j < 9350; j++) _solve(b, j);
for(j = 10180; j < 10190; j++) _solve(b, j);
for(j = 11020; j < 11030; j++) _solve(b, j);
for(j = 11860; j < 11870; j++) _solve(b, j);
for(j = 12700; j < 12710; j++) _solve(b, j);
for(j = 13540; j < 13550; j++) _solve(b, j);
for(j = 14380; j < 14390; j++) _solve(b, j);
for(j = 15220; j < 15230; j++) _solve(b, j);
for(j = 16060; j < 16070; j++) _solve(b, j);
for(j = 16900; j < 16910; j++) _solve(b, j);
for(j = 17740; j < 17750; j++) _solve(b, j);
for(j = 18580; j < 18590; j++) _solve(b, j);
for(j = 19420; j < 19430; j++) _solve(b, j);
for(j = 20260; j < 20270; j++) _solve(b, j);
for(j = 21100; j < 21110; j++) _solve(b, j);
for(j = 21940; j < 21950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 22780; j < 22790; j++) _solve(b, j);
for(j = 23620; j < 23630; j++) _solve(b, j);
for(j = 24460; j < 24470; j++) _solve(b, j);
for(j = 25300; j < 25310; j++) _solve(b, j);
for(j = 26140; j < 26150; j++) _solve(b, j);
for(j = 26980; j < 26990; j++) _solve(b, j);
for(j = 27820; j < 27830; j++) _solve(b, j);
for(j = 28660; j < 28670; j++) _solve(b, j);
for(j = 29500; j < 29510; j++) _solve(b, j);
for(j = 30340; j < 30350; j++) _solve(b, j);
for(j = 31180; j < 31190; j++) _solve(b, j);
for(j = 32020; j < 32030; j++) _solve(b, j);
for(j = 32860; j < 32870; j++) _solve(b, j);
for(j = 33700; j < 33710; j++) _solve(b, j);
for(j = 34540; j < 34550; j++) _solve(b, j);
for(j = 35380; j < 35390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 36220; j < 36230; j++) _solve(b, j);
for(j = 37060; j < 37070; j++) _solve(b, j);
for(j = 37900; j < 37910; j++) _solve(b, j);
for(j = 38740; j < 38750; j++) _solve(b, j);
for(j = 39580; j < 39590; j++) _solve(b, j);
for(j = 40420; j < 40430; j++) _solve(b, j);
for(j = 41260; j < 41270; j++) _solve(b, j);
for(j = 42100; j < 42110; j++) _solve(b, j);
for(j = 42940; j < 42950; j++) _solve(b, j);
for(j = 43780; j < 43790; j++) _solve(b, j);
for(j = 44620; j < 44630; j++) _solve(b, j);
for(j = 45460; j < 45470; j++) _solve(b, j);
for(j = 46300; j < 46310; j++) _solve(b, j);
for(j = 47140; j < 47150; j++) _solve(b, j);
for(j = 47980; j < 47990; j++) _solve(b, j);
for(j = 48820; j < 48830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 49660; j < 49670; j++) _solve(b, j);
for(j = 50500; j < 50510; j++) _solve(b, j);
for(j = 51340; j < 51350; j++) _solve(b, j);
for(j = 52180; j < 52190; j++) _solve(b, j);
for(j = 53020; j < 53030; j++) _solve(b, j);
for(j = 53860; j < 53870; j++) _solve(b, j);
for(j = 54700; j < 54710; j++) _solve(b, j);
for(j = 55540; j < 55550; j++) _solve(b, j);
for(j = 56380; j < 56390; j++) _solve(b, j);
for(j = 57220; j < 57230; j++) _solve(b, j);
for(j = 58060; j < 58070; j++) _solve(b, j);
for(j = 58900; j < 58910; j++) _solve(b, j);
for(j = 59740; j < 59750; j++) _solve(b, j);
for(j = 60580; j < 60590; j++) _solve(b, j);
for(j = 61420; j < 61430; j++) _solve(b, j);
for(j = 62260; j < 62270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 63100; j < 63110; j++) _solve(b, j);
for(j = 63940; j < 63950; j++) _solve(b, j);
for(j = 64780; j < 64790; j++) _solve(b, j);
for(j = 65620; j < 65630; j++) _solve(b, j);
for(j = 66460; j < 66470; j++) _solve(b, j);
for(j = 67300; j < 67310; j++) _solve(b, j);
for(j = 68140; j < 68150; j++) _solve(b, j);
for(j = 68980; j < 68990; j++) _solve(b, j);
for(j = 69820; j < 69830; j++) _solve(b, j);
for(j = 70660; j < 70670; j++) _solve(b, j);
for(j = 71500; j < 71510; j++) _solve(b, j);
for(j = 72340; j < 72350; j++) _solve(b, j);
for(j = 73180; j < 73190; j++) _solve(b, j);
for(j = 74020; j < 74030; j++) _solve(b, j);
for(j = 74860; j < 74870; j++) _solve(b, j);
for(j = 75700; j < 75710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 76540; j < 76550; j++) _solve(b, j);
for(j = 77380; j < 77390; j++) _solve(b, j);
for(j = 78220; j < 78230; j++) _solve(b, j);
for(j = 79060; j < 79070; j++) _solve(b, j);
for(j = 79900; j < 79910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 10190; j < 10200; j++) _solve(b, j);
for(j = 11030; j < 11040; j++) _solve(b, j);
for(j = 11870; j < 11880; j++) _solve(b, j);
for(j = 12710; j < 12720; j++) _solve(b, j);
for(j = 13550; j < 13560; j++) _solve(b, j);
for(j = 14390; j < 14400; j++) _solve(b, j);
for(j = 15230; j < 15240; j++) _solve(b, j);
for(j = 16070; j < 16080; j++) _solve(b, j);
for(j = 16910; j < 16920; j++) _solve(b, j);
for(j = 17750; j < 17760; j++) _solve(b, j);
for(j = 18590; j < 18600; j++) _solve(b, j);
for(j = 19430; j < 19440; j++) _solve(b, j);
for(j = 20270; j < 20280; j++) _solve(b, j);
for(j = 21110; j < 21120; j++) _solve(b, j);
for(j = 21950; j < 21960; j++) _solve(b, j);
for(j = 22790; j < 22800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 23630; j < 23640; j++) _solve(b, j);
for(j = 24470; j < 24480; j++) _solve(b, j);
for(j = 25310; j < 25320; j++) _solve(b, j);
for(j = 26150; j < 26160; j++) _solve(b, j);
for(j = 26990; j < 27000; j++) _solve(b, j);
for(j = 27830; j < 27840; j++) _solve(b, j);
for(j = 28670; j < 28680; j++) _solve(b, j);
for(j = 29510; j < 29520; j++) _solve(b, j);
for(j = 30350; j < 30360; j++) _solve(b, j);
for(j = 31190; j < 31200; j++) _solve(b, j);
for(j = 32030; j < 32040; j++) _solve(b, j);
for(j = 32870; j < 32880; j++) _solve(b, j);
for(j = 33710; j < 33720; j++) _solve(b, j);
for(j = 34550; j < 34560; j++) _solve(b, j);
for(j = 35390; j < 35400; j++) _solve(b, j);
for(j = 36230; j < 36240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 37070; j < 37080; j++) _solve(b, j);
for(j = 37910; j < 37920; j++) _solve(b, j);
for(j = 38750; j < 38760; j++) _solve(b, j);
for(j = 39590; j < 39600; j++) _solve(b, j);
for(j = 40430; j < 40440; j++) _solve(b, j);
for(j = 41270; j < 41280; j++) _solve(b, j);
for(j = 42110; j < 42120; j++) _solve(b, j);
for(j = 42950; j < 42960; j++) _solve(b, j);
for(j = 43790; j < 43800; j++) _solve(b, j);
for(j = 44630; j < 44640; j++) _solve(b, j);
for(j = 45470; j < 45480; j++) _solve(b, j);
for(j = 46310; j < 46320; j++) _solve(b, j);
for(j = 47150; j < 47160; j++) _solve(b, j);
for(j = 47990; j < 48000; j++) _solve(b, j);
for(j = 48830; j < 48840; j++) _solve(b, j);
for(j = 49670; j < 49680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 50510; j < 50520; j++) _solve(b, j);
for(j = 51350; j < 51360; j++) _solve(b, j);
for(j = 52190; j < 52200; j++) _solve(b, j);
for(j = 53030; j < 53040; j++) _solve(b, j);
for(j = 53870; j < 53880; j++) _solve(b, j);
for(j = 54710; j < 54720; j++) _solve(b, j);
for(j = 55550; j < 55560; j++) _solve(b, j);
for(j = 56390; j < 56400; j++) _solve(b, j);
for(j = 57230; j < 57240; j++) _solve(b, j);
for(j = 58070; j < 58080; j++) _solve(b, j);
for(j = 58910; j < 58920; j++) _solve(b, j);
for(j = 59750; j < 59760; j++) _solve(b, j);
for(j = 60590; j < 60600; j++) _solve(b, j);
for(j = 61430; j < 61440; j++) _solve(b, j);
for(j = 62270; j < 62280; j++) _solve(b, j);
for(j = 63110; j < 63120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 63950; j < 63960; j++) _solve(b, j);
for(j = 64790; j < 64800; j++) _solve(b, j);
for(j = 65630; j < 65640; j++) _solve(b, j);
for(j = 66470; j < 66480; j++) _solve(b, j);
for(j = 67310; j < 67320; j++) _solve(b, j);
for(j = 68150; j < 68160; j++) _solve(b, j);
for(j = 68990; j < 69000; j++) _solve(b, j);
for(j = 69830; j < 69840; j++) _solve(b, j);
for(j = 70670; j < 70680; j++) _solve(b, j);
for(j = 71510; j < 71520; j++) _solve(b, j);
for(j = 72350; j < 72360; j++) _solve(b, j);
for(j = 73190; j < 73200; j++) _solve(b, j);
for(j = 74030; j < 74040; j++) _solve(b, j);
for(j = 74870; j < 74880; j++) _solve(b, j);
for(j = 75710; j < 75720; j++) _solve(b, j);
for(j = 76550; j < 76560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 77390; j < 77400; j++) _solve(b, j);
for(j = 78230; j < 78240; j++) _solve(b, j);
for(j = 79070; j < 79080; j++) _solve(b, j);
for(j = 79910; j < 79920; j++) _solve(b, j);
for(j = 80750; j < 80760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 11040; j < 11050; j++) _solve(b, j);
for(j = 11880; j < 11890; j++) _solve(b, j);
for(j = 12720; j < 12730; j++) _solve(b, j);
for(j = 13560; j < 13570; j++) _solve(b, j);
for(j = 14400; j < 14410; j++) _solve(b, j);
for(j = 15240; j < 15250; j++) _solve(b, j);
for(j = 16080; j < 16090; j++) _solve(b, j);
for(j = 16920; j < 16930; j++) _solve(b, j);
for(j = 17760; j < 17770; j++) _solve(b, j);
for(j = 18600; j < 18610; j++) _solve(b, j);
for(j = 19440; j < 19450; j++) _solve(b, j);
for(j = 20280; j < 20290; j++) _solve(b, j);
for(j = 21120; j < 21130; j++) _solve(b, j);
for(j = 21960; j < 21970; j++) _solve(b, j);
for(j = 22800; j < 22810; j++) _solve(b, j);
for(j = 23640; j < 23650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 24480; j < 24490; j++) _solve(b, j);
for(j = 25320; j < 25330; j++) _solve(b, j);
for(j = 26160; j < 26170; j++) _solve(b, j);
for(j = 27000; j < 27010; j++) _solve(b, j);
for(j = 27840; j < 27850; j++) _solve(b, j);
for(j = 28680; j < 28690; j++) _solve(b, j);
for(j = 29520; j < 29530; j++) _solve(b, j);
for(j = 30360; j < 30370; j++) _solve(b, j);
for(j = 31200; j < 31210; j++) _solve(b, j);
for(j = 32040; j < 32050; j++) _solve(b, j);
for(j = 32880; j < 32890; j++) _solve(b, j);
for(j = 33720; j < 33730; j++) _solve(b, j);
for(j = 34560; j < 34570; j++) _solve(b, j);
for(j = 35400; j < 35410; j++) _solve(b, j);
for(j = 36240; j < 36250; j++) _solve(b, j);
for(j = 37080; j < 37090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 37920; j < 37930; j++) _solve(b, j);
for(j = 38760; j < 38770; j++) _solve(b, j);
for(j = 39600; j < 39610; j++) _solve(b, j);
for(j = 40440; j < 40450; j++) _solve(b, j);
for(j = 41280; j < 41290; j++) _solve(b, j);
for(j = 42120; j < 42130; j++) _solve(b, j);
for(j = 42960; j < 42970; j++) _solve(b, j);
for(j = 43800; j < 43810; j++) _solve(b, j);
for(j = 44640; j < 44650; j++) _solve(b, j);
for(j = 45480; j < 45490; j++) _solve(b, j);
for(j = 46320; j < 46330; j++) _solve(b, j);
for(j = 47160; j < 47170; j++) _solve(b, j);
for(j = 48000; j < 48010; j++) _solve(b, j);
for(j = 48840; j < 48850; j++) _solve(b, j);
for(j = 49680; j < 49690; j++) _solve(b, j);
for(j = 50520; j < 50530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 51360; j < 51370; j++) _solve(b, j);
for(j = 52200; j < 52210; j++) _solve(b, j);
for(j = 53040; j < 53050; j++) _solve(b, j);
for(j = 53880; j < 53890; j++) _solve(b, j);
for(j = 54720; j < 54730; j++) _solve(b, j);
for(j = 55560; j < 55570; j++) _solve(b, j);
for(j = 56400; j < 56410; j++) _solve(b, j);
for(j = 57240; j < 57250; j++) _solve(b, j);
for(j = 58080; j < 58090; j++) _solve(b, j);
for(j = 58920; j < 58930; j++) _solve(b, j);
for(j = 59760; j < 59770; j++) _solve(b, j);
for(j = 60600; j < 60610; j++) _solve(b, j);
for(j = 61440; j < 61450; j++) _solve(b, j);
for(j = 62280; j < 62290; j++) _solve(b, j);
for(j = 63120; j < 63130; j++) _solve(b, j);
for(j = 63960; j < 63970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 64800; j < 64810; j++) _solve(b, j);
for(j = 65640; j < 65650; j++) _solve(b, j);
for(j = 66480; j < 66490; j++) _solve(b, j);
for(j = 67320; j < 67330; j++) _solve(b, j);
for(j = 68160; j < 68170; j++) _solve(b, j);
for(j = 69000; j < 69010; j++) _solve(b, j);
for(j = 69840; j < 69850; j++) _solve(b, j);
for(j = 70680; j < 70690; j++) _solve(b, j);
for(j = 71520; j < 71530; j++) _solve(b, j);
for(j = 72360; j < 72370; j++) _solve(b, j);
for(j = 73200; j < 73210; j++) _solve(b, j);
for(j = 74040; j < 74050; j++) _solve(b, j);
for(j = 74880; j < 74890; j++) _solve(b, j);
for(j = 75720; j < 75730; j++) _solve(b, j);
for(j = 76560; j < 76570; j++) _solve(b, j);
for(j = 77400; j < 77410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 78240; j < 78250; j++) _solve(b, j);
for(j = 79080; j < 79090; j++) _solve(b, j);
for(j = 79920; j < 79930; j++) _solve(b, j);
for(j = 80760; j < 80770; j++) _solve(b, j);
for(j = 81600; j < 81610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 11890; j < 11900; j++) _solve(b, j);
for(j = 12730; j < 12740; j++) _solve(b, j);
for(j = 13570; j < 13580; j++) _solve(b, j);
for(j = 14410; j < 14420; j++) _solve(b, j);
for(j = 15250; j < 15260; j++) _solve(b, j);
for(j = 16090; j < 16100; j++) _solve(b, j);
for(j = 16930; j < 16940; j++) _solve(b, j);
for(j = 17770; j < 17780; j++) _solve(b, j);
for(j = 18610; j < 18620; j++) _solve(b, j);
for(j = 19450; j < 19460; j++) _solve(b, j);
for(j = 20290; j < 20300; j++) _solve(b, j);
for(j = 21130; j < 21140; j++) _solve(b, j);
for(j = 21970; j < 21980; j++) _solve(b, j);
for(j = 22810; j < 22820; j++) _solve(b, j);
for(j = 23650; j < 23660; j++) _solve(b, j);
for(j = 24490; j < 24500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 25330; j < 25340; j++) _solve(b, j);
for(j = 26170; j < 26180; j++) _solve(b, j);
for(j = 27010; j < 27020; j++) _solve(b, j);
for(j = 27850; j < 27860; j++) _solve(b, j);
for(j = 28690; j < 28700; j++) _solve(b, j);
for(j = 29530; j < 29540; j++) _solve(b, j);
for(j = 30370; j < 30380; j++) _solve(b, j);
for(j = 31210; j < 31220; j++) _solve(b, j);
for(j = 32050; j < 32060; j++) _solve(b, j);
for(j = 32890; j < 32900; j++) _solve(b, j);
for(j = 33730; j < 33740; j++) _solve(b, j);
for(j = 34570; j < 34580; j++) _solve(b, j);
for(j = 35410; j < 35420; j++) _solve(b, j);
for(j = 36250; j < 36260; j++) _solve(b, j);
for(j = 37090; j < 37100; j++) _solve(b, j);
for(j = 37930; j < 37940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 38770; j < 38780; j++) _solve(b, j);
for(j = 39610; j < 39620; j++) _solve(b, j);
for(j = 40450; j < 40460; j++) _solve(b, j);
for(j = 41290; j < 41300; j++) _solve(b, j);
for(j = 42130; j < 42140; j++) _solve(b, j);
for(j = 42970; j < 42980; j++) _solve(b, j);
for(j = 43810; j < 43820; j++) _solve(b, j);
for(j = 44650; j < 44660; j++) _solve(b, j);
for(j = 45490; j < 45500; j++) _solve(b, j);
for(j = 46330; j < 46340; j++) _solve(b, j);
for(j = 47170; j < 47180; j++) _solve(b, j);
for(j = 48010; j < 48020; j++) _solve(b, j);
for(j = 48850; j < 48860; j++) _solve(b, j);
for(j = 49690; j < 49700; j++) _solve(b, j);
for(j = 50530; j < 50540; j++) _solve(b, j);
for(j = 51370; j < 51380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 52210; j < 52220; j++) _solve(b, j);
for(j = 53050; j < 53060; j++) _solve(b, j);
for(j = 53890; j < 53900; j++) _solve(b, j);
for(j = 54730; j < 54740; j++) _solve(b, j);
for(j = 55570; j < 55580; j++) _solve(b, j);
for(j = 56410; j < 56420; j++) _solve(b, j);
for(j = 57250; j < 57260; j++) _solve(b, j);
for(j = 58090; j < 58100; j++) _solve(b, j);
for(j = 58930; j < 58940; j++) _solve(b, j);
for(j = 59770; j < 59780; j++) _solve(b, j);
for(j = 60610; j < 60620; j++) _solve(b, j);
for(j = 61450; j < 61460; j++) _solve(b, j);
for(j = 62290; j < 62300; j++) _solve(b, j);
for(j = 63130; j < 63140; j++) _solve(b, j);
for(j = 63970; j < 63980; j++) _solve(b, j);
for(j = 64810; j < 64820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 65650; j < 65660; j++) _solve(b, j);
for(j = 66490; j < 66500; j++) _solve(b, j);
for(j = 67330; j < 67340; j++) _solve(b, j);
for(j = 68170; j < 68180; j++) _solve(b, j);
for(j = 69010; j < 69020; j++) _solve(b, j);
for(j = 69850; j < 69860; j++) _solve(b, j);
for(j = 70690; j < 70700; j++) _solve(b, j);
for(j = 71530; j < 71540; j++) _solve(b, j);
for(j = 72370; j < 72380; j++) _solve(b, j);
for(j = 73210; j < 73220; j++) _solve(b, j);
for(j = 74050; j < 74060; j++) _solve(b, j);
for(j = 74890; j < 74900; j++) _solve(b, j);
for(j = 75730; j < 75740; j++) _solve(b, j);
for(j = 76570; j < 76580; j++) _solve(b, j);
for(j = 77410; j < 77420; j++) _solve(b, j);
for(j = 78250; j < 78260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 79090; j < 79100; j++) _solve(b, j);
for(j = 79930; j < 79940; j++) _solve(b, j);
for(j = 80770; j < 80780; j++) _solve(b, j);
for(j = 81610; j < 81620; j++) _solve(b, j);
for(j = 82450; j < 82460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 12740; j < 12750; j++) _solve(b, j);
for(j = 13580; j < 13590; j++) _solve(b, j);
for(j = 14420; j < 14430; j++) _solve(b, j);
for(j = 15260; j < 15270; j++) _solve(b, j);
for(j = 16100; j < 16110; j++) _solve(b, j);
for(j = 16940; j < 16950; j++) _solve(b, j);
for(j = 17780; j < 17790; j++) _solve(b, j);
for(j = 18620; j < 18630; j++) _solve(b, j);
for(j = 19460; j < 19470; j++) _solve(b, j);
for(j = 20300; j < 20310; j++) _solve(b, j);
for(j = 21140; j < 21150; j++) _solve(b, j);
for(j = 21980; j < 21990; j++) _solve(b, j);
for(j = 22820; j < 22830; j++) _solve(b, j);
for(j = 23660; j < 23670; j++) _solve(b, j);
for(j = 24500; j < 24510; j++) _solve(b, j);
for(j = 25340; j < 25350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 26180; j < 26190; j++) _solve(b, j);
for(j = 27020; j < 27030; j++) _solve(b, j);
for(j = 27860; j < 27870; j++) _solve(b, j);
for(j = 28700; j < 28710; j++) _solve(b, j);
for(j = 29540; j < 29550; j++) _solve(b, j);
for(j = 30380; j < 30390; j++) _solve(b, j);
for(j = 31220; j < 31230; j++) _solve(b, j);
for(j = 32060; j < 32070; j++) _solve(b, j);
for(j = 32900; j < 32910; j++) _solve(b, j);
for(j = 33740; j < 33750; j++) _solve(b, j);
for(j = 34580; j < 34590; j++) _solve(b, j);
for(j = 35420; j < 35430; j++) _solve(b, j);
for(j = 36260; j < 36270; j++) _solve(b, j);
for(j = 37100; j < 37110; j++) _solve(b, j);
for(j = 37940; j < 37950; j++) _solve(b, j);
for(j = 38780; j < 38790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 39620; j < 39630; j++) _solve(b, j);
for(j = 40460; j < 40470; j++) _solve(b, j);
for(j = 41300; j < 41310; j++) _solve(b, j);
for(j = 42140; j < 42150; j++) _solve(b, j);
for(j = 42980; j < 42990; j++) _solve(b, j);
for(j = 43820; j < 43830; j++) _solve(b, j);
for(j = 44660; j < 44670; j++) _solve(b, j);
for(j = 45500; j < 45510; j++) _solve(b, j);
for(j = 46340; j < 46350; j++) _solve(b, j);
for(j = 47180; j < 47190; j++) _solve(b, j);
for(j = 48020; j < 48030; j++) _solve(b, j);
for(j = 48860; j < 48870; j++) _solve(b, j);
for(j = 49700; j < 49710; j++) _solve(b, j);
for(j = 50540; j < 50550; j++) _solve(b, j);
for(j = 51380; j < 51390; j++) _solve(b, j);
for(j = 52220; j < 52230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 53060; j < 53070; j++) _solve(b, j);
for(j = 53900; j < 53910; j++) _solve(b, j);
for(j = 54740; j < 54750; j++) _solve(b, j);
for(j = 55580; j < 55590; j++) _solve(b, j);
for(j = 56420; j < 56430; j++) _solve(b, j);
for(j = 57260; j < 57270; j++) _solve(b, j);
for(j = 58100; j < 58110; j++) _solve(b, j);
for(j = 58940; j < 58950; j++) _solve(b, j);
for(j = 59780; j < 59790; j++) _solve(b, j);
for(j = 60620; j < 60630; j++) _solve(b, j);
for(j = 61460; j < 61470; j++) _solve(b, j);
for(j = 62300; j < 62310; j++) _solve(b, j);
for(j = 63140; j < 63150; j++) _solve(b, j);
for(j = 63980; j < 63990; j++) _solve(b, j);
for(j = 64820; j < 64830; j++) _solve(b, j);
for(j = 65660; j < 65670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 66500; j < 66510; j++) _solve(b, j);
for(j = 67340; j < 67350; j++) _solve(b, j);
for(j = 68180; j < 68190; j++) _solve(b, j);
for(j = 69020; j < 69030; j++) _solve(b, j);
for(j = 69860; j < 69870; j++) _solve(b, j);
for(j = 70700; j < 70710; j++) _solve(b, j);
for(j = 71540; j < 71550; j++) _solve(b, j);
for(j = 72380; j < 72390; j++) _solve(b, j);
for(j = 73220; j < 73230; j++) _solve(b, j);
for(j = 74060; j < 74070; j++) _solve(b, j);
for(j = 74900; j < 74910; j++) _solve(b, j);
for(j = 75740; j < 75750; j++) _solve(b, j);
for(j = 76580; j < 76590; j++) _solve(b, j);
for(j = 77420; j < 77430; j++) _solve(b, j);
for(j = 78260; j < 78270; j++) _solve(b, j);
for(j = 79100; j < 79110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 79940; j < 79950; j++) _solve(b, j);
for(j = 80780; j < 80790; j++) _solve(b, j);
for(j = 81620; j < 81630; j++) _solve(b, j);
for(j = 82460; j < 82470; j++) _solve(b, j);
for(j = 83300; j < 83310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 13590; j < 13600; j++) _solve(b, j);
for(j = 14430; j < 14440; j++) _solve(b, j);
for(j = 15270; j < 15280; j++) _solve(b, j);
for(j = 16110; j < 16120; j++) _solve(b, j);
for(j = 16950; j < 16960; j++) _solve(b, j);
for(j = 17790; j < 17800; j++) _solve(b, j);
for(j = 18630; j < 18640; j++) _solve(b, j);
for(j = 19470; j < 19480; j++) _solve(b, j);
for(j = 20310; j < 20320; j++) _solve(b, j);
for(j = 21150; j < 21160; j++) _solve(b, j);
for(j = 21990; j < 22000; j++) _solve(b, j);
for(j = 22830; j < 22840; j++) _solve(b, j);
for(j = 23670; j < 23680; j++) _solve(b, j);
for(j = 24510; j < 24520; j++) _solve(b, j);
for(j = 25350; j < 25360; j++) _solve(b, j);
for(j = 26190; j < 26200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27030; j < 27040; j++) _solve(b, j);
for(j = 27870; j < 27880; j++) _solve(b, j);
for(j = 28710; j < 28720; j++) _solve(b, j);
for(j = 29550; j < 29560; j++) _solve(b, j);
for(j = 30390; j < 30400; j++) _solve(b, j);
for(j = 31230; j < 31240; j++) _solve(b, j);
for(j = 32070; j < 32080; j++) _solve(b, j);
for(j = 32910; j < 32920; j++) _solve(b, j);
for(j = 33750; j < 33760; j++) _solve(b, j);
for(j = 34590; j < 34600; j++) _solve(b, j);
for(j = 35430; j < 35440; j++) _solve(b, j);
for(j = 36270; j < 36280; j++) _solve(b, j);
for(j = 37110; j < 37120; j++) _solve(b, j);
for(j = 37950; j < 37960; j++) _solve(b, j);
for(j = 38790; j < 38800; j++) _solve(b, j);
for(j = 39630; j < 39640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40470; j < 40480; j++) _solve(b, j);
for(j = 41310; j < 41320; j++) _solve(b, j);
for(j = 42150; j < 42160; j++) _solve(b, j);
for(j = 42990; j < 43000; j++) _solve(b, j);
for(j = 43830; j < 43840; j++) _solve(b, j);
for(j = 44670; j < 44680; j++) _solve(b, j);
for(j = 45510; j < 45520; j++) _solve(b, j);
for(j = 46350; j < 46360; j++) _solve(b, j);
for(j = 47190; j < 47200; j++) _solve(b, j);
for(j = 48030; j < 48040; j++) _solve(b, j);
for(j = 48870; j < 48880; j++) _solve(b, j);
for(j = 49710; j < 49720; j++) _solve(b, j);
for(j = 50550; j < 50560; j++) _solve(b, j);
for(j = 51390; j < 51400; j++) _solve(b, j);
for(j = 52230; j < 52240; j++) _solve(b, j);
for(j = 53070; j < 53080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 53910; j < 53920; j++) _solve(b, j);
for(j = 54750; j < 54760; j++) _solve(b, j);
for(j = 55590; j < 55600; j++) _solve(b, j);
for(j = 56430; j < 56440; j++) _solve(b, j);
for(j = 57270; j < 57280; j++) _solve(b, j);
for(j = 58110; j < 58120; j++) _solve(b, j);
for(j = 58950; j < 58960; j++) _solve(b, j);
for(j = 59790; j < 59800; j++) _solve(b, j);
for(j = 60630; j < 60640; j++) _solve(b, j);
for(j = 61470; j < 61480; j++) _solve(b, j);
for(j = 62310; j < 62320; j++) _solve(b, j);
for(j = 63150; j < 63160; j++) _solve(b, j);
for(j = 63990; j < 64000; j++) _solve(b, j);
for(j = 64830; j < 64840; j++) _solve(b, j);
for(j = 65670; j < 65680; j++) _solve(b, j);
for(j = 66510; j < 66520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 67350; j < 67360; j++) _solve(b, j);
for(j = 68190; j < 68200; j++) _solve(b, j);
for(j = 69030; j < 69040; j++) _solve(b, j);
for(j = 69870; j < 69880; j++) _solve(b, j);
for(j = 70710; j < 70720; j++) _solve(b, j);
for(j = 71550; j < 71560; j++) _solve(b, j);
for(j = 72390; j < 72400; j++) _solve(b, j);
for(j = 73230; j < 73240; j++) _solve(b, j);
for(j = 74070; j < 74080; j++) _solve(b, j);
for(j = 74910; j < 74920; j++) _solve(b, j);
for(j = 75750; j < 75760; j++) _solve(b, j);
for(j = 76590; j < 76600; j++) _solve(b, j);
for(j = 77430; j < 77440; j++) _solve(b, j);
for(j = 78270; j < 78280; j++) _solve(b, j);
for(j = 79110; j < 79120; j++) _solve(b, j);
for(j = 79950; j < 79960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 80790; j < 80800; j++) _solve(b, j);
for(j = 81630; j < 81640; j++) _solve(b, j);
for(j = 82470; j < 82480; j++) _solve(b, j);
for(j = 83310; j < 83320; j++) _solve(b, j);
for(j = 84150; j < 84160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 14440; j < 14450; j++) _solve(b, j);
for(j = 15280; j < 15290; j++) _solve(b, j);
for(j = 16120; j < 16130; j++) _solve(b, j);
for(j = 16960; j < 16970; j++) _solve(b, j);
for(j = 17800; j < 17810; j++) _solve(b, j);
for(j = 18640; j < 18650; j++) _solve(b, j);
for(j = 19480; j < 19490; j++) _solve(b, j);
for(j = 20320; j < 20330; j++) _solve(b, j);
for(j = 21160; j < 21170; j++) _solve(b, j);
for(j = 22000; j < 22010; j++) _solve(b, j);
for(j = 22840; j < 22850; j++) _solve(b, j);
for(j = 23680; j < 23690; j++) _solve(b, j);
for(j = 24520; j < 24530; j++) _solve(b, j);
for(j = 25360; j < 25370; j++) _solve(b, j);
for(j = 26200; j < 26210; j++) _solve(b, j);
for(j = 27040; j < 27050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 27880; j < 27890; j++) _solve(b, j);
for(j = 28720; j < 28730; j++) _solve(b, j);
for(j = 29560; j < 29570; j++) _solve(b, j);
for(j = 30400; j < 30410; j++) _solve(b, j);
for(j = 31240; j < 31250; j++) _solve(b, j);
for(j = 32080; j < 32090; j++) _solve(b, j);
for(j = 32920; j < 32930; j++) _solve(b, j);
for(j = 33760; j < 33770; j++) _solve(b, j);
for(j = 34600; j < 34610; j++) _solve(b, j);
for(j = 35440; j < 35450; j++) _solve(b, j);
for(j = 36280; j < 36290; j++) _solve(b, j);
for(j = 37120; j < 37130; j++) _solve(b, j);
for(j = 37960; j < 37970; j++) _solve(b, j);
for(j = 38800; j < 38810; j++) _solve(b, j);
for(j = 39640; j < 39650; j++) _solve(b, j);
for(j = 40480; j < 40490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41320; j < 41330; j++) _solve(b, j);
for(j = 42160; j < 42170; j++) _solve(b, j);
for(j = 43000; j < 43010; j++) _solve(b, j);
for(j = 43840; j < 43850; j++) _solve(b, j);
for(j = 44680; j < 44690; j++) _solve(b, j);
for(j = 45520; j < 45530; j++) _solve(b, j);
for(j = 46360; j < 46370; j++) _solve(b, j);
for(j = 47200; j < 47210; j++) _solve(b, j);
for(j = 48040; j < 48050; j++) _solve(b, j);
for(j = 48880; j < 48890; j++) _solve(b, j);
for(j = 49720; j < 49730; j++) _solve(b, j);
for(j = 50560; j < 50570; j++) _solve(b, j);
for(j = 51400; j < 51410; j++) _solve(b, j);
for(j = 52240; j < 52250; j++) _solve(b, j);
for(j = 53080; j < 53090; j++) _solve(b, j);
for(j = 53920; j < 53930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54760; j < 54770; j++) _solve(b, j);
for(j = 55600; j < 55610; j++) _solve(b, j);
for(j = 56440; j < 56450; j++) _solve(b, j);
for(j = 57280; j < 57290; j++) _solve(b, j);
for(j = 58120; j < 58130; j++) _solve(b, j);
for(j = 58960; j < 58970; j++) _solve(b, j);
for(j = 59800; j < 59810; j++) _solve(b, j);
for(j = 60640; j < 60650; j++) _solve(b, j);
for(j = 61480; j < 61490; j++) _solve(b, j);
for(j = 62320; j < 62330; j++) _solve(b, j);
for(j = 63160; j < 63170; j++) _solve(b, j);
for(j = 64000; j < 64010; j++) _solve(b, j);
for(j = 64840; j < 64850; j++) _solve(b, j);
for(j = 65680; j < 65690; j++) _solve(b, j);
for(j = 66520; j < 66530; j++) _solve(b, j);
for(j = 67360; j < 67370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 68200; j < 68210; j++) _solve(b, j);
for(j = 69040; j < 69050; j++) _solve(b, j);
for(j = 69880; j < 69890; j++) _solve(b, j);
for(j = 70720; j < 70730; j++) _solve(b, j);
for(j = 71560; j < 71570; j++) _solve(b, j);
for(j = 72400; j < 72410; j++) _solve(b, j);
for(j = 73240; j < 73250; j++) _solve(b, j);
for(j = 74080; j < 74090; j++) _solve(b, j);
for(j = 74920; j < 74930; j++) _solve(b, j);
for(j = 75760; j < 75770; j++) _solve(b, j);
for(j = 76600; j < 76610; j++) _solve(b, j);
for(j = 77440; j < 77450; j++) _solve(b, j);
for(j = 78280; j < 78290; j++) _solve(b, j);
for(j = 79120; j < 79130; j++) _solve(b, j);
for(j = 79960; j < 79970; j++) _solve(b, j);
for(j = 80800; j < 80810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 81640; j < 81650; j++) _solve(b, j);
for(j = 82480; j < 82490; j++) _solve(b, j);
for(j = 83320; j < 83330; j++) _solve(b, j);
for(j = 84160; j < 84170; j++) _solve(b, j);
for(j = 85000; j < 85010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 15290; j < 15300; j++) _solve(b, j);
for(j = 16130; j < 16140; j++) _solve(b, j);
for(j = 16970; j < 16980; j++) _solve(b, j);
for(j = 17810; j < 17820; j++) _solve(b, j);
for(j = 18650; j < 18660; j++) _solve(b, j);
for(j = 19490; j < 19500; j++) _solve(b, j);
for(j = 20330; j < 20340; j++) _solve(b, j);
for(j = 21170; j < 21180; j++) _solve(b, j);
for(j = 22010; j < 22020; j++) _solve(b, j);
for(j = 22850; j < 22860; j++) _solve(b, j);
for(j = 23690; j < 23700; j++) _solve(b, j);
for(j = 24530; j < 24540; j++) _solve(b, j);
for(j = 25370; j < 25380; j++) _solve(b, j);
for(j = 26210; j < 26220; j++) _solve(b, j);
for(j = 27050; j < 27060; j++) _solve(b, j);
for(j = 27890; j < 27900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 28730; j < 28740; j++) _solve(b, j);
for(j = 29570; j < 29580; j++) _solve(b, j);
for(j = 30410; j < 30420; j++) _solve(b, j);
for(j = 31250; j < 31260; j++) _solve(b, j);
for(j = 32090; j < 32100; j++) _solve(b, j);
for(j = 32930; j < 32940; j++) _solve(b, j);
for(j = 33770; j < 33780; j++) _solve(b, j);
for(j = 34610; j < 34620; j++) _solve(b, j);
for(j = 35450; j < 35460; j++) _solve(b, j);
for(j = 36290; j < 36300; j++) _solve(b, j);
for(j = 37130; j < 37140; j++) _solve(b, j);
for(j = 37970; j < 37980; j++) _solve(b, j);
for(j = 38810; j < 38820; j++) _solve(b, j);
for(j = 39650; j < 39660; j++) _solve(b, j);
for(j = 40490; j < 40500; j++) _solve(b, j);
for(j = 41330; j < 41340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 42170; j < 42180; j++) _solve(b, j);
for(j = 43010; j < 43020; j++) _solve(b, j);
for(j = 43850; j < 43860; j++) _solve(b, j);
for(j = 44690; j < 44700; j++) _solve(b, j);
for(j = 45530; j < 45540; j++) _solve(b, j);
for(j = 46370; j < 46380; j++) _solve(b, j);
for(j = 47210; j < 47220; j++) _solve(b, j);
for(j = 48050; j < 48060; j++) _solve(b, j);
for(j = 48890; j < 48900; j++) _solve(b, j);
for(j = 49730; j < 49740; j++) _solve(b, j);
for(j = 50570; j < 50580; j++) _solve(b, j);
for(j = 51410; j < 51420; j++) _solve(b, j);
for(j = 52250; j < 52260; j++) _solve(b, j);
for(j = 53090; j < 53100; j++) _solve(b, j);
for(j = 53930; j < 53940; j++) _solve(b, j);
for(j = 54770; j < 54780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 55610; j < 55620; j++) _solve(b, j);
for(j = 56450; j < 56460; j++) _solve(b, j);
for(j = 57290; j < 57300; j++) _solve(b, j);
for(j = 58130; j < 58140; j++) _solve(b, j);
for(j = 58970; j < 58980; j++) _solve(b, j);
for(j = 59810; j < 59820; j++) _solve(b, j);
for(j = 60650; j < 60660; j++) _solve(b, j);
for(j = 61490; j < 61500; j++) _solve(b, j);
for(j = 62330; j < 62340; j++) _solve(b, j);
for(j = 63170; j < 63180; j++) _solve(b, j);
for(j = 64010; j < 64020; j++) _solve(b, j);
for(j = 64850; j < 64860; j++) _solve(b, j);
for(j = 65690; j < 65700; j++) _solve(b, j);
for(j = 66530; j < 66540; j++) _solve(b, j);
for(j = 67370; j < 67380; j++) _solve(b, j);
for(j = 68210; j < 68220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 69050; j < 69060; j++) _solve(b, j);
for(j = 69890; j < 69900; j++) _solve(b, j);
for(j = 70730; j < 70740; j++) _solve(b, j);
for(j = 71570; j < 71580; j++) _solve(b, j);
for(j = 72410; j < 72420; j++) _solve(b, j);
for(j = 73250; j < 73260; j++) _solve(b, j);
for(j = 74090; j < 74100; j++) _solve(b, j);
for(j = 74930; j < 74940; j++) _solve(b, j);
for(j = 75770; j < 75780; j++) _solve(b, j);
for(j = 76610; j < 76620; j++) _solve(b, j);
for(j = 77450; j < 77460; j++) _solve(b, j);
for(j = 78290; j < 78300; j++) _solve(b, j);
for(j = 79130; j < 79140; j++) _solve(b, j);
for(j = 79970; j < 79980; j++) _solve(b, j);
for(j = 80810; j < 80820; j++) _solve(b, j);
for(j = 81650; j < 81660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 82490; j < 82500; j++) _solve(b, j);
for(j = 83330; j < 83340; j++) _solve(b, j);
for(j = 84170; j < 84180; j++) _solve(b, j);
for(j = 85010; j < 85020; j++) _solve(b, j);
for(j = 85850; j < 85860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 16140; j < 16150; j++) _solve(b, j);
for(j = 16980; j < 16990; j++) _solve(b, j);
for(j = 17820; j < 17830; j++) _solve(b, j);
for(j = 18660; j < 18670; j++) _solve(b, j);
for(j = 19500; j < 19510; j++) _solve(b, j);
for(j = 20340; j < 20350; j++) _solve(b, j);
for(j = 21180; j < 21190; j++) _solve(b, j);
for(j = 22020; j < 22030; j++) _solve(b, j);
for(j = 22860; j < 22870; j++) _solve(b, j);
for(j = 23700; j < 23710; j++) _solve(b, j);
for(j = 24540; j < 24550; j++) _solve(b, j);
for(j = 25380; j < 25390; j++) _solve(b, j);
for(j = 26220; j < 26230; j++) _solve(b, j);
for(j = 27060; j < 27070; j++) _solve(b, j);
for(j = 27900; j < 27910; j++) _solve(b, j);
for(j = 28740; j < 28750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 29580; j < 29590; j++) _solve(b, j);
for(j = 30420; j < 30430; j++) _solve(b, j);
for(j = 31260; j < 31270; j++) _solve(b, j);
for(j = 32100; j < 32110; j++) _solve(b, j);
for(j = 32940; j < 32950; j++) _solve(b, j);
for(j = 33780; j < 33790; j++) _solve(b, j);
for(j = 34620; j < 34630; j++) _solve(b, j);
for(j = 35460; j < 35470; j++) _solve(b, j);
for(j = 36300; j < 36310; j++) _solve(b, j);
for(j = 37140; j < 37150; j++) _solve(b, j);
for(j = 37980; j < 37990; j++) _solve(b, j);
for(j = 38820; j < 38830; j++) _solve(b, j);
for(j = 39660; j < 39670; j++) _solve(b, j);
for(j = 40500; j < 40510; j++) _solve(b, j);
for(j = 41340; j < 41350; j++) _solve(b, j);
for(j = 42180; j < 42190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 43020; j < 43030; j++) _solve(b, j);
for(j = 43860; j < 43870; j++) _solve(b, j);
for(j = 44700; j < 44710; j++) _solve(b, j);
for(j = 45540; j < 45550; j++) _solve(b, j);
for(j = 46380; j < 46390; j++) _solve(b, j);
for(j = 47220; j < 47230; j++) _solve(b, j);
for(j = 48060; j < 48070; j++) _solve(b, j);
for(j = 48900; j < 48910; j++) _solve(b, j);
for(j = 49740; j < 49750; j++) _solve(b, j);
for(j = 50580; j < 50590; j++) _solve(b, j);
for(j = 51420; j < 51430; j++) _solve(b, j);
for(j = 52260; j < 52270; j++) _solve(b, j);
for(j = 53100; j < 53110; j++) _solve(b, j);
for(j = 53940; j < 53950; j++) _solve(b, j);
for(j = 54780; j < 54790; j++) _solve(b, j);
for(j = 55620; j < 55630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 56460; j < 56470; j++) _solve(b, j);
for(j = 57300; j < 57310; j++) _solve(b, j);
for(j = 58140; j < 58150; j++) _solve(b, j);
for(j = 58980; j < 58990; j++) _solve(b, j);
for(j = 59820; j < 59830; j++) _solve(b, j);
for(j = 60660; j < 60670; j++) _solve(b, j);
for(j = 61500; j < 61510; j++) _solve(b, j);
for(j = 62340; j < 62350; j++) _solve(b, j);
for(j = 63180; j < 63190; j++) _solve(b, j);
for(j = 64020; j < 64030; j++) _solve(b, j);
for(j = 64860; j < 64870; j++) _solve(b, j);
for(j = 65700; j < 65710; j++) _solve(b, j);
for(j = 66540; j < 66550; j++) _solve(b, j);
for(j = 67380; j < 67390; j++) _solve(b, j);
for(j = 68220; j < 68230; j++) _solve(b, j);
for(j = 69060; j < 69070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 69900; j < 69910; j++) _solve(b, j);
for(j = 70740; j < 70750; j++) _solve(b, j);
for(j = 71580; j < 71590; j++) _solve(b, j);
for(j = 72420; j < 72430; j++) _solve(b, j);
for(j = 73260; j < 73270; j++) _solve(b, j);
for(j = 74100; j < 74110; j++) _solve(b, j);
for(j = 74940; j < 74950; j++) _solve(b, j);
for(j = 75780; j < 75790; j++) _solve(b, j);
for(j = 76620; j < 76630; j++) _solve(b, j);
for(j = 77460; j < 77470; j++) _solve(b, j);
for(j = 78300; j < 78310; j++) _solve(b, j);
for(j = 79140; j < 79150; j++) _solve(b, j);
for(j = 79980; j < 79990; j++) _solve(b, j);
for(j = 80820; j < 80830; j++) _solve(b, j);
for(j = 81660; j < 81670; j++) _solve(b, j);
for(j = 82500; j < 82510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 83340; j < 83350; j++) _solve(b, j);
for(j = 84180; j < 84190; j++) _solve(b, j);
for(j = 85020; j < 85030; j++) _solve(b, j);
for(j = 85860; j < 85870; j++) _solve(b, j);
for(j = 86700; j < 86710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 16990; j < 17000; j++) _solve(b, j);
for(j = 17830; j < 17840; j++) _solve(b, j);
for(j = 18670; j < 18680; j++) _solve(b, j);
for(j = 19510; j < 19520; j++) _solve(b, j);
for(j = 20350; j < 20360; j++) _solve(b, j);
for(j = 21190; j < 21200; j++) _solve(b, j);
for(j = 22030; j < 22040; j++) _solve(b, j);
for(j = 22870; j < 22880; j++) _solve(b, j);
for(j = 23710; j < 23720; j++) _solve(b, j);
for(j = 24550; j < 24560; j++) _solve(b, j);
for(j = 25390; j < 25400; j++) _solve(b, j);
for(j = 26230; j < 26240; j++) _solve(b, j);
for(j = 27070; j < 27080; j++) _solve(b, j);
for(j = 27910; j < 27920; j++) _solve(b, j);
for(j = 28750; j < 28760; j++) _solve(b, j);
for(j = 29590; j < 29600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 30430; j < 30440; j++) _solve(b, j);
for(j = 31270; j < 31280; j++) _solve(b, j);
for(j = 32110; j < 32120; j++) _solve(b, j);
for(j = 32950; j < 32960; j++) _solve(b, j);
for(j = 33790; j < 33800; j++) _solve(b, j);
for(j = 34630; j < 34640; j++) _solve(b, j);
for(j = 35470; j < 35480; j++) _solve(b, j);
for(j = 36310; j < 36320; j++) _solve(b, j);
for(j = 37150; j < 37160; j++) _solve(b, j);
for(j = 37990; j < 38000; j++) _solve(b, j);
for(j = 38830; j < 38840; j++) _solve(b, j);
for(j = 39670; j < 39680; j++) _solve(b, j);
for(j = 40510; j < 40520; j++) _solve(b, j);
for(j = 41350; j < 41360; j++) _solve(b, j);
for(j = 42190; j < 42200; j++) _solve(b, j);
for(j = 43030; j < 43040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 43870; j < 43880; j++) _solve(b, j);
for(j = 44710; j < 44720; j++) _solve(b, j);
for(j = 45550; j < 45560; j++) _solve(b, j);
for(j = 46390; j < 46400; j++) _solve(b, j);
for(j = 47230; j < 47240; j++) _solve(b, j);
for(j = 48070; j < 48080; j++) _solve(b, j);
for(j = 48910; j < 48920; j++) _solve(b, j);
for(j = 49750; j < 49760; j++) _solve(b, j);
for(j = 50590; j < 50600; j++) _solve(b, j);
for(j = 51430; j < 51440; j++) _solve(b, j);
for(j = 52270; j < 52280; j++) _solve(b, j);
for(j = 53110; j < 53120; j++) _solve(b, j);
for(j = 53950; j < 53960; j++) _solve(b, j);
for(j = 54790; j < 54800; j++) _solve(b, j);
for(j = 55630; j < 55640; j++) _solve(b, j);
for(j = 56470; j < 56480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 57310; j < 57320; j++) _solve(b, j);
for(j = 58150; j < 58160; j++) _solve(b, j);
for(j = 58990; j < 59000; j++) _solve(b, j);
for(j = 59830; j < 59840; j++) _solve(b, j);
for(j = 60670; j < 60680; j++) _solve(b, j);
for(j = 61510; j < 61520; j++) _solve(b, j);
for(j = 62350; j < 62360; j++) _solve(b, j);
for(j = 63190; j < 63200; j++) _solve(b, j);
for(j = 64030; j < 64040; j++) _solve(b, j);
for(j = 64870; j < 64880; j++) _solve(b, j);
for(j = 65710; j < 65720; j++) _solve(b, j);
for(j = 66550; j < 66560; j++) _solve(b, j);
for(j = 67390; j < 67400; j++) _solve(b, j);
for(j = 68230; j < 68240; j++) _solve(b, j);
for(j = 69070; j < 69080; j++) _solve(b, j);
for(j = 69910; j < 69920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 70750; j < 70760; j++) _solve(b, j);
for(j = 71590; j < 71600; j++) _solve(b, j);
for(j = 72430; j < 72440; j++) _solve(b, j);
for(j = 73270; j < 73280; j++) _solve(b, j);
for(j = 74110; j < 74120; j++) _solve(b, j);
for(j = 74950; j < 74960; j++) _solve(b, j);
for(j = 75790; j < 75800; j++) _solve(b, j);
for(j = 76630; j < 76640; j++) _solve(b, j);
for(j = 77470; j < 77480; j++) _solve(b, j);
for(j = 78310; j < 78320; j++) _solve(b, j);
for(j = 79150; j < 79160; j++) _solve(b, j);
for(j = 79990; j < 80000; j++) _solve(b, j);
for(j = 80830; j < 80840; j++) _solve(b, j);
for(j = 81670; j < 81680; j++) _solve(b, j);
for(j = 82510; j < 82520; j++) _solve(b, j);
for(j = 83350; j < 83360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 84190; j < 84200; j++) _solve(b, j);
for(j = 85030; j < 85040; j++) _solve(b, j);
for(j = 85870; j < 85880; j++) _solve(b, j);
for(j = 86710; j < 86720; j++) _solve(b, j);
for(j = 87550; j < 87560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 17840; j < 17850; j++) _solve(b, j);
for(j = 18680; j < 18690; j++) _solve(b, j);
for(j = 19520; j < 19530; j++) _solve(b, j);
for(j = 20360; j < 20370; j++) _solve(b, j);
for(j = 21200; j < 21210; j++) _solve(b, j);
for(j = 22040; j < 22050; j++) _solve(b, j);
for(j = 22880; j < 22890; j++) _solve(b, j);
for(j = 23720; j < 23730; j++) _solve(b, j);
for(j = 24560; j < 24570; j++) _solve(b, j);
for(j = 25400; j < 25410; j++) _solve(b, j);
for(j = 26240; j < 26250; j++) _solve(b, j);
for(j = 27080; j < 27090; j++) _solve(b, j);
for(j = 27920; j < 27930; j++) _solve(b, j);
for(j = 28760; j < 28770; j++) _solve(b, j);
for(j = 29600; j < 29610; j++) _solve(b, j);
for(j = 30440; j < 30450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 31280; j < 31290; j++) _solve(b, j);
for(j = 32120; j < 32130; j++) _solve(b, j);
for(j = 32960; j < 32970; j++) _solve(b, j);
for(j = 33800; j < 33810; j++) _solve(b, j);
for(j = 34640; j < 34650; j++) _solve(b, j);
for(j = 35480; j < 35490; j++) _solve(b, j);
for(j = 36320; j < 36330; j++) _solve(b, j);
for(j = 37160; j < 37170; j++) _solve(b, j);
for(j = 38000; j < 38010; j++) _solve(b, j);
for(j = 38840; j < 38850; j++) _solve(b, j);
for(j = 39680; j < 39690; j++) _solve(b, j);
for(j = 40520; j < 40530; j++) _solve(b, j);
for(j = 41360; j < 41370; j++) _solve(b, j);
for(j = 42200; j < 42210; j++) _solve(b, j);
for(j = 43040; j < 43050; j++) _solve(b, j);
for(j = 43880; j < 43890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 44720; j < 44730; j++) _solve(b, j);
for(j = 45560; j < 45570; j++) _solve(b, j);
for(j = 46400; j < 46410; j++) _solve(b, j);
for(j = 47240; j < 47250; j++) _solve(b, j);
for(j = 48080; j < 48090; j++) _solve(b, j);
for(j = 48920; j < 48930; j++) _solve(b, j);
for(j = 49760; j < 49770; j++) _solve(b, j);
for(j = 50600; j < 50610; j++) _solve(b, j);
for(j = 51440; j < 51450; j++) _solve(b, j);
for(j = 52280; j < 52290; j++) _solve(b, j);
for(j = 53120; j < 53130; j++) _solve(b, j);
for(j = 53960; j < 53970; j++) _solve(b, j);
for(j = 54800; j < 54810; j++) _solve(b, j);
for(j = 55640; j < 55650; j++) _solve(b, j);
for(j = 56480; j < 56490; j++) _solve(b, j);
for(j = 57320; j < 57330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 58160; j < 58170; j++) _solve(b, j);
for(j = 59000; j < 59010; j++) _solve(b, j);
for(j = 59840; j < 59850; j++) _solve(b, j);
for(j = 60680; j < 60690; j++) _solve(b, j);
for(j = 61520; j < 61530; j++) _solve(b, j);
for(j = 62360; j < 62370; j++) _solve(b, j);
for(j = 63200; j < 63210; j++) _solve(b, j);
for(j = 64040; j < 64050; j++) _solve(b, j);
for(j = 64880; j < 64890; j++) _solve(b, j);
for(j = 65720; j < 65730; j++) _solve(b, j);
for(j = 66560; j < 66570; j++) _solve(b, j);
for(j = 67400; j < 67410; j++) _solve(b, j);
for(j = 68240; j < 68250; j++) _solve(b, j);
for(j = 69080; j < 69090; j++) _solve(b, j);
for(j = 69920; j < 69930; j++) _solve(b, j);
for(j = 70760; j < 70770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 71600; j < 71610; j++) _solve(b, j);
for(j = 72440; j < 72450; j++) _solve(b, j);
for(j = 73280; j < 73290; j++) _solve(b, j);
for(j = 74120; j < 74130; j++) _solve(b, j);
for(j = 74960; j < 74970; j++) _solve(b, j);
for(j = 75800; j < 75810; j++) _solve(b, j);
for(j = 76640; j < 76650; j++) _solve(b, j);
for(j = 77480; j < 77490; j++) _solve(b, j);
for(j = 78320; j < 78330; j++) _solve(b, j);
for(j = 79160; j < 79170; j++) _solve(b, j);
for(j = 80000; j < 80010; j++) _solve(b, j);
for(j = 80840; j < 80850; j++) _solve(b, j);
for(j = 81680; j < 81690; j++) _solve(b, j);
for(j = 82520; j < 82530; j++) _solve(b, j);
for(j = 83360; j < 83370; j++) _solve(b, j);
for(j = 84200; j < 84210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 85040; j < 85050; j++) _solve(b, j);
for(j = 85880; j < 85890; j++) _solve(b, j);
for(j = 86720; j < 86730; j++) _solve(b, j);
for(j = 87560; j < 87570; j++) _solve(b, j);
for(j = 88400; j < 88410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 18690; j < 18700; j++) _solve(b, j);
for(j = 19530; j < 19540; j++) _solve(b, j);
for(j = 20370; j < 20380; j++) _solve(b, j);
for(j = 21210; j < 21220; j++) _solve(b, j);
for(j = 22050; j < 22060; j++) _solve(b, j);
for(j = 22890; j < 22900; j++) _solve(b, j);
for(j = 23730; j < 23740; j++) _solve(b, j);
for(j = 24570; j < 24580; j++) _solve(b, j);
for(j = 25410; j < 25420; j++) _solve(b, j);
for(j = 26250; j < 26260; j++) _solve(b, j);
for(j = 27090; j < 27100; j++) _solve(b, j);
for(j = 27930; j < 27940; j++) _solve(b, j);
for(j = 28770; j < 28780; j++) _solve(b, j);
for(j = 29610; j < 29620; j++) _solve(b, j);
for(j = 30450; j < 30460; j++) _solve(b, j);
for(j = 31290; j < 31300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 32130; j < 32140; j++) _solve(b, j);
for(j = 32970; j < 32980; j++) _solve(b, j);
for(j = 33810; j < 33820; j++) _solve(b, j);
for(j = 34650; j < 34660; j++) _solve(b, j);
for(j = 35490; j < 35500; j++) _solve(b, j);
for(j = 36330; j < 36340; j++) _solve(b, j);
for(j = 37170; j < 37180; j++) _solve(b, j);
for(j = 38010; j < 38020; j++) _solve(b, j);
for(j = 38850; j < 38860; j++) _solve(b, j);
for(j = 39690; j < 39700; j++) _solve(b, j);
for(j = 40530; j < 40540; j++) _solve(b, j);
for(j = 41370; j < 41380; j++) _solve(b, j);
for(j = 42210; j < 42220; j++) _solve(b, j);
for(j = 43050; j < 43060; j++) _solve(b, j);
for(j = 43890; j < 43900; j++) _solve(b, j);
for(j = 44730; j < 44740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 45570; j < 45580; j++) _solve(b, j);
for(j = 46410; j < 46420; j++) _solve(b, j);
for(j = 47250; j < 47260; j++) _solve(b, j);
for(j = 48090; j < 48100; j++) _solve(b, j);
for(j = 48930; j < 48940; j++) _solve(b, j);
for(j = 49770; j < 49780; j++) _solve(b, j);
for(j = 50610; j < 50620; j++) _solve(b, j);
for(j = 51450; j < 51460; j++) _solve(b, j);
for(j = 52290; j < 52300; j++) _solve(b, j);
for(j = 53130; j < 53140; j++) _solve(b, j);
for(j = 53970; j < 53980; j++) _solve(b, j);
for(j = 54810; j < 54820; j++) _solve(b, j);
for(j = 55650; j < 55660; j++) _solve(b, j);
for(j = 56490; j < 56500; j++) _solve(b, j);
for(j = 57330; j < 57340; j++) _solve(b, j);
for(j = 58170; j < 58180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 59010; j < 59020; j++) _solve(b, j);
for(j = 59850; j < 59860; j++) _solve(b, j);
for(j = 60690; j < 60700; j++) _solve(b, j);
for(j = 61530; j < 61540; j++) _solve(b, j);
for(j = 62370; j < 62380; j++) _solve(b, j);
for(j = 63210; j < 63220; j++) _solve(b, j);
for(j = 64050; j < 64060; j++) _solve(b, j);
for(j = 64890; j < 64900; j++) _solve(b, j);
for(j = 65730; j < 65740; j++) _solve(b, j);
for(j = 66570; j < 66580; j++) _solve(b, j);
for(j = 67410; j < 67420; j++) _solve(b, j);
for(j = 68250; j < 68260; j++) _solve(b, j);
for(j = 69090; j < 69100; j++) _solve(b, j);
for(j = 69930; j < 69940; j++) _solve(b, j);
for(j = 70770; j < 70780; j++) _solve(b, j);
for(j = 71610; j < 71620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 72450; j < 72460; j++) _solve(b, j);
for(j = 73290; j < 73300; j++) _solve(b, j);
for(j = 74130; j < 74140; j++) _solve(b, j);
for(j = 74970; j < 74980; j++) _solve(b, j);
for(j = 75810; j < 75820; j++) _solve(b, j);
for(j = 76650; j < 76660; j++) _solve(b, j);
for(j = 77490; j < 77500; j++) _solve(b, j);
for(j = 78330; j < 78340; j++) _solve(b, j);
for(j = 79170; j < 79180; j++) _solve(b, j);
for(j = 80010; j < 80020; j++) _solve(b, j);
for(j = 80850; j < 80860; j++) _solve(b, j);
for(j = 81690; j < 81700; j++) _solve(b, j);
for(j = 82530; j < 82540; j++) _solve(b, j);
for(j = 83370; j < 83380; j++) _solve(b, j);
for(j = 84210; j < 84220; j++) _solve(b, j);
for(j = 85050; j < 85060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 85890; j < 85900; j++) _solve(b, j);
for(j = 86730; j < 86740; j++) _solve(b, j);
for(j = 87570; j < 87580; j++) _solve(b, j);
for(j = 88410; j < 88420; j++) _solve(b, j);
for(j = 89250; j < 89260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 19540; j < 19550; j++) _solve(b, j);
for(j = 20380; j < 20390; j++) _solve(b, j);
for(j = 21220; j < 21230; j++) _solve(b, j);
for(j = 22060; j < 22070; j++) _solve(b, j);
for(j = 22900; j < 22910; j++) _solve(b, j);
for(j = 23740; j < 23750; j++) _solve(b, j);
for(j = 24580; j < 24590; j++) _solve(b, j);
for(j = 25420; j < 25430; j++) _solve(b, j);
for(j = 26260; j < 26270; j++) _solve(b, j);
for(j = 27100; j < 27110; j++) _solve(b, j);
for(j = 27940; j < 27950; j++) _solve(b, j);
for(j = 28780; j < 28790; j++) _solve(b, j);
for(j = 29620; j < 29630; j++) _solve(b, j);
for(j = 30460; j < 30470; j++) _solve(b, j);
for(j = 31300; j < 31310; j++) _solve(b, j);
for(j = 32140; j < 32150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 32980; j < 32990; j++) _solve(b, j);
for(j = 33820; j < 33830; j++) _solve(b, j);
for(j = 34660; j < 34670; j++) _solve(b, j);
for(j = 35500; j < 35510; j++) _solve(b, j);
for(j = 36340; j < 36350; j++) _solve(b, j);
for(j = 37180; j < 37190; j++) _solve(b, j);
for(j = 38020; j < 38030; j++) _solve(b, j);
for(j = 38860; j < 38870; j++) _solve(b, j);
for(j = 39700; j < 39710; j++) _solve(b, j);
for(j = 40540; j < 40550; j++) _solve(b, j);
for(j = 41380; j < 41390; j++) _solve(b, j);
for(j = 42220; j < 42230; j++) _solve(b, j);
for(j = 43060; j < 43070; j++) _solve(b, j);
for(j = 43900; j < 43910; j++) _solve(b, j);
for(j = 44740; j < 44750; j++) _solve(b, j);
for(j = 45580; j < 45590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 46420; j < 46430; j++) _solve(b, j);
for(j = 47260; j < 47270; j++) _solve(b, j);
for(j = 48100; j < 48110; j++) _solve(b, j);
for(j = 48940; j < 48950; j++) _solve(b, j);
for(j = 49780; j < 49790; j++) _solve(b, j);
for(j = 50620; j < 50630; j++) _solve(b, j);
for(j = 51460; j < 51470; j++) _solve(b, j);
for(j = 52300; j < 52310; j++) _solve(b, j);
for(j = 53140; j < 53150; j++) _solve(b, j);
for(j = 53980; j < 53990; j++) _solve(b, j);
for(j = 54820; j < 54830; j++) _solve(b, j);
for(j = 55660; j < 55670; j++) _solve(b, j);
for(j = 56500; j < 56510; j++) _solve(b, j);
for(j = 57340; j < 57350; j++) _solve(b, j);
for(j = 58180; j < 58190; j++) _solve(b, j);
for(j = 59020; j < 59030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 59860; j < 59870; j++) _solve(b, j);
for(j = 60700; j < 60710; j++) _solve(b, j);
for(j = 61540; j < 61550; j++) _solve(b, j);
for(j = 62380; j < 62390; j++) _solve(b, j);
for(j = 63220; j < 63230; j++) _solve(b, j);
for(j = 64060; j < 64070; j++) _solve(b, j);
for(j = 64900; j < 64910; j++) _solve(b, j);
for(j = 65740; j < 65750; j++) _solve(b, j);
for(j = 66580; j < 66590; j++) _solve(b, j);
for(j = 67420; j < 67430; j++) _solve(b, j);
for(j = 68260; j < 68270; j++) _solve(b, j);
for(j = 69100; j < 69110; j++) _solve(b, j);
for(j = 69940; j < 69950; j++) _solve(b, j);
for(j = 70780; j < 70790; j++) _solve(b, j);
for(j = 71620; j < 71630; j++) _solve(b, j);
for(j = 72460; j < 72470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 73300; j < 73310; j++) _solve(b, j);
for(j = 74140; j < 74150; j++) _solve(b, j);
for(j = 74980; j < 74990; j++) _solve(b, j);
for(j = 75820; j < 75830; j++) _solve(b, j);
for(j = 76660; j < 76670; j++) _solve(b, j);
for(j = 77500; j < 77510; j++) _solve(b, j);
for(j = 78340; j < 78350; j++) _solve(b, j);
for(j = 79180; j < 79190; j++) _solve(b, j);
for(j = 80020; j < 80030; j++) _solve(b, j);
for(j = 80860; j < 80870; j++) _solve(b, j);
for(j = 81700; j < 81710; j++) _solve(b, j);
for(j = 82540; j < 82550; j++) _solve(b, j);
for(j = 83380; j < 83390; j++) _solve(b, j);
for(j = 84220; j < 84230; j++) _solve(b, j);
for(j = 85060; j < 85070; j++) _solve(b, j);
for(j = 85900; j < 85910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 86740; j < 86750; j++) _solve(b, j);
for(j = 87580; j < 87590; j++) _solve(b, j);
for(j = 88420; j < 88430; j++) _solve(b, j);
for(j = 89260; j < 89270; j++) _solve(b, j);
for(j = 90100; j < 90110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 20390; j < 20400; j++) _solve(b, j);
for(j = 21230; j < 21240; j++) _solve(b, j);
for(j = 22070; j < 22080; j++) _solve(b, j);
for(j = 22910; j < 22920; j++) _solve(b, j);
for(j = 23750; j < 23760; j++) _solve(b, j);
for(j = 24590; j < 24600; j++) _solve(b, j);
for(j = 25430; j < 25440; j++) _solve(b, j);
for(j = 26270; j < 26280; j++) _solve(b, j);
for(j = 27110; j < 27120; j++) _solve(b, j);
for(j = 27950; j < 27960; j++) _solve(b, j);
for(j = 28790; j < 28800; j++) _solve(b, j);
for(j = 29630; j < 29640; j++) _solve(b, j);
for(j = 30470; j < 30480; j++) _solve(b, j);
for(j = 31310; j < 31320; j++) _solve(b, j);
for(j = 32150; j < 32160; j++) _solve(b, j);
for(j = 32990; j < 33000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 33830; j < 33840; j++) _solve(b, j);
for(j = 34670; j < 34680; j++) _solve(b, j);
for(j = 35510; j < 35520; j++) _solve(b, j);
for(j = 36350; j < 36360; j++) _solve(b, j);
for(j = 37190; j < 37200; j++) _solve(b, j);
for(j = 38030; j < 38040; j++) _solve(b, j);
for(j = 38870; j < 38880; j++) _solve(b, j);
for(j = 39710; j < 39720; j++) _solve(b, j);
for(j = 40550; j < 40560; j++) _solve(b, j);
for(j = 41390; j < 41400; j++) _solve(b, j);
for(j = 42230; j < 42240; j++) _solve(b, j);
for(j = 43070; j < 43080; j++) _solve(b, j);
for(j = 43910; j < 43920; j++) _solve(b, j);
for(j = 44750; j < 44760; j++) _solve(b, j);
for(j = 45590; j < 45600; j++) _solve(b, j);
for(j = 46430; j < 46440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 47270; j < 47280; j++) _solve(b, j);
for(j = 48110; j < 48120; j++) _solve(b, j);
for(j = 48950; j < 48960; j++) _solve(b, j);
for(j = 49790; j < 49800; j++) _solve(b, j);
for(j = 50630; j < 50640; j++) _solve(b, j);
for(j = 51470; j < 51480; j++) _solve(b, j);
for(j = 52310; j < 52320; j++) _solve(b, j);
for(j = 53150; j < 53160; j++) _solve(b, j);
for(j = 53990; j < 54000; j++) _solve(b, j);
for(j = 54830; j < 54840; j++) _solve(b, j);
for(j = 55670; j < 55680; j++) _solve(b, j);
for(j = 56510; j < 56520; j++) _solve(b, j);
for(j = 57350; j < 57360; j++) _solve(b, j);
for(j = 58190; j < 58200; j++) _solve(b, j);
for(j = 59030; j < 59040; j++) _solve(b, j);
for(j = 59870; j < 59880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 60710; j < 60720; j++) _solve(b, j);
for(j = 61550; j < 61560; j++) _solve(b, j);
for(j = 62390; j < 62400; j++) _solve(b, j);
for(j = 63230; j < 63240; j++) _solve(b, j);
for(j = 64070; j < 64080; j++) _solve(b, j);
for(j = 64910; j < 64920; j++) _solve(b, j);
for(j = 65750; j < 65760; j++) _solve(b, j);
for(j = 66590; j < 66600; j++) _solve(b, j);
for(j = 67430; j < 67440; j++) _solve(b, j);
for(j = 68270; j < 68280; j++) _solve(b, j);
for(j = 69110; j < 69120; j++) _solve(b, j);
for(j = 69950; j < 69960; j++) _solve(b, j);
for(j = 70790; j < 70800; j++) _solve(b, j);
for(j = 71630; j < 71640; j++) _solve(b, j);
for(j = 72470; j < 72480; j++) _solve(b, j);
for(j = 73310; j < 73320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 74150; j < 74160; j++) _solve(b, j);
for(j = 74990; j < 75000; j++) _solve(b, j);
for(j = 75830; j < 75840; j++) _solve(b, j);
for(j = 76670; j < 76680; j++) _solve(b, j);
for(j = 77510; j < 77520; j++) _solve(b, j);
for(j = 78350; j < 78360; j++) _solve(b, j);
for(j = 79190; j < 79200; j++) _solve(b, j);
for(j = 80030; j < 80040; j++) _solve(b, j);
for(j = 80870; j < 80880; j++) _solve(b, j);
for(j = 81710; j < 81720; j++) _solve(b, j);
for(j = 82550; j < 82560; j++) _solve(b, j);
for(j = 83390; j < 83400; j++) _solve(b, j);
for(j = 84230; j < 84240; j++) _solve(b, j);
for(j = 85070; j < 85080; j++) _solve(b, j);
for(j = 85910; j < 85920; j++) _solve(b, j);
for(j = 86750; j < 86760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 87590; j < 87600; j++) _solve(b, j);
for(j = 88430; j < 88440; j++) _solve(b, j);
for(j = 89270; j < 89280; j++) _solve(b, j);
for(j = 90110; j < 90120; j++) _solve(b, j);
for(j = 90950; j < 90960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 21240; j < 21250; j++) _solve(b, j);
for(j = 22080; j < 22090; j++) _solve(b, j);
for(j = 22920; j < 22930; j++) _solve(b, j);
for(j = 23760; j < 23770; j++) _solve(b, j);
for(j = 24600; j < 24610; j++) _solve(b, j);
for(j = 25440; j < 25450; j++) _solve(b, j);
for(j = 26280; j < 26290; j++) _solve(b, j);
for(j = 27120; j < 27130; j++) _solve(b, j);
for(j = 27960; j < 27970; j++) _solve(b, j);
for(j = 28800; j < 28810; j++) _solve(b, j);
for(j = 29640; j < 29650; j++) _solve(b, j);
for(j = 30480; j < 30490; j++) _solve(b, j);
for(j = 31320; j < 31330; j++) _solve(b, j);
for(j = 32160; j < 32170; j++) _solve(b, j);
for(j = 33000; j < 33010; j++) _solve(b, j);
for(j = 33840; j < 33850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 34680; j < 34690; j++) _solve(b, j);
for(j = 35520; j < 35530; j++) _solve(b, j);
for(j = 36360; j < 36370; j++) _solve(b, j);
for(j = 37200; j < 37210; j++) _solve(b, j);
for(j = 38040; j < 38050; j++) _solve(b, j);
for(j = 38880; j < 38890; j++) _solve(b, j);
for(j = 39720; j < 39730; j++) _solve(b, j);
for(j = 40560; j < 40570; j++) _solve(b, j);
for(j = 41400; j < 41410; j++) _solve(b, j);
for(j = 42240; j < 42250; j++) _solve(b, j);
for(j = 43080; j < 43090; j++) _solve(b, j);
for(j = 43920; j < 43930; j++) _solve(b, j);
for(j = 44760; j < 44770; j++) _solve(b, j);
for(j = 45600; j < 45610; j++) _solve(b, j);
for(j = 46440; j < 46450; j++) _solve(b, j);
for(j = 47280; j < 47290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 48120; j < 48130; j++) _solve(b, j);
for(j = 48960; j < 48970; j++) _solve(b, j);
for(j = 49800; j < 49810; j++) _solve(b, j);
for(j = 50640; j < 50650; j++) _solve(b, j);
for(j = 51480; j < 51490; j++) _solve(b, j);
for(j = 52320; j < 52330; j++) _solve(b, j);
for(j = 53160; j < 53170; j++) _solve(b, j);
for(j = 54000; j < 54010; j++) _solve(b, j);
for(j = 54840; j < 54850; j++) _solve(b, j);
for(j = 55680; j < 55690; j++) _solve(b, j);
for(j = 56520; j < 56530; j++) _solve(b, j);
for(j = 57360; j < 57370; j++) _solve(b, j);
for(j = 58200; j < 58210; j++) _solve(b, j);
for(j = 59040; j < 59050; j++) _solve(b, j);
for(j = 59880; j < 59890; j++) _solve(b, j);
for(j = 60720; j < 60730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 61560; j < 61570; j++) _solve(b, j);
for(j = 62400; j < 62410; j++) _solve(b, j);
for(j = 63240; j < 63250; j++) _solve(b, j);
for(j = 64080; j < 64090; j++) _solve(b, j);
for(j = 64920; j < 64930; j++) _solve(b, j);
for(j = 65760; j < 65770; j++) _solve(b, j);
for(j = 66600; j < 66610; j++) _solve(b, j);
for(j = 67440; j < 67450; j++) _solve(b, j);
for(j = 68280; j < 68290; j++) _solve(b, j);
for(j = 69120; j < 69130; j++) _solve(b, j);
for(j = 69960; j < 69970; j++) _solve(b, j);
for(j = 70800; j < 70810; j++) _solve(b, j);
for(j = 71640; j < 71650; j++) _solve(b, j);
for(j = 72480; j < 72490; j++) _solve(b, j);
for(j = 73320; j < 73330; j++) _solve(b, j);
for(j = 74160; j < 74170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 75000; j < 75010; j++) _solve(b, j);
for(j = 75840; j < 75850; j++) _solve(b, j);
for(j = 76680; j < 76690; j++) _solve(b, j);
for(j = 77520; j < 77530; j++) _solve(b, j);
for(j = 78360; j < 78370; j++) _solve(b, j);
for(j = 79200; j < 79210; j++) _solve(b, j);
for(j = 80040; j < 80050; j++) _solve(b, j);
for(j = 80880; j < 80890; j++) _solve(b, j);
for(j = 81720; j < 81730; j++) _solve(b, j);
for(j = 82560; j < 82570; j++) _solve(b, j);
for(j = 83400; j < 83410; j++) _solve(b, j);
for(j = 84240; j < 84250; j++) _solve(b, j);
for(j = 85080; j < 85090; j++) _solve(b, j);
for(j = 85920; j < 85930; j++) _solve(b, j);
for(j = 86760; j < 86770; j++) _solve(b, j);
for(j = 87600; j < 87610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 88440; j < 88450; j++) _solve(b, j);
for(j = 89280; j < 89290; j++) _solve(b, j);
for(j = 90120; j < 90130; j++) _solve(b, j);
for(j = 90960; j < 90970; j++) _solve(b, j);
for(j = 91800; j < 91810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 22090; j < 22100; j++) _solve(b, j);
for(j = 22930; j < 22940; j++) _solve(b, j);
for(j = 23770; j < 23780; j++) _solve(b, j);
for(j = 24610; j < 24620; j++) _solve(b, j);
for(j = 25450; j < 25460; j++) _solve(b, j);
for(j = 26290; j < 26300; j++) _solve(b, j);
for(j = 27130; j < 27140; j++) _solve(b, j);
for(j = 27970; j < 27980; j++) _solve(b, j);
for(j = 28810; j < 28820; j++) _solve(b, j);
for(j = 29650; j < 29660; j++) _solve(b, j);
for(j = 30490; j < 30500; j++) _solve(b, j);
for(j = 31330; j < 31340; j++) _solve(b, j);
for(j = 32170; j < 32180; j++) _solve(b, j);
for(j = 33010; j < 33020; j++) _solve(b, j);
for(j = 33850; j < 33860; j++) _solve(b, j);
for(j = 34690; j < 34700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 35530; j < 35540; j++) _solve(b, j);
for(j = 36370; j < 36380; j++) _solve(b, j);
for(j = 37210; j < 37220; j++) _solve(b, j);
for(j = 38050; j < 38060; j++) _solve(b, j);
for(j = 38890; j < 38900; j++) _solve(b, j);
for(j = 39730; j < 39740; j++) _solve(b, j);
for(j = 40570; j < 40580; j++) _solve(b, j);
for(j = 41410; j < 41420; j++) _solve(b, j);
for(j = 42250; j < 42260; j++) _solve(b, j);
for(j = 43090; j < 43100; j++) _solve(b, j);
for(j = 43930; j < 43940; j++) _solve(b, j);
for(j = 44770; j < 44780; j++) _solve(b, j);
for(j = 45610; j < 45620; j++) _solve(b, j);
for(j = 46450; j < 46460; j++) _solve(b, j);
for(j = 47290; j < 47300; j++) _solve(b, j);
for(j = 48130; j < 48140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 48970; j < 48980; j++) _solve(b, j);
for(j = 49810; j < 49820; j++) _solve(b, j);
for(j = 50650; j < 50660; j++) _solve(b, j);
for(j = 51490; j < 51500; j++) _solve(b, j);
for(j = 52330; j < 52340; j++) _solve(b, j);
for(j = 53170; j < 53180; j++) _solve(b, j);
for(j = 54010; j < 54020; j++) _solve(b, j);
for(j = 54850; j < 54860; j++) _solve(b, j);
for(j = 55690; j < 55700; j++) _solve(b, j);
for(j = 56530; j < 56540; j++) _solve(b, j);
for(j = 57370; j < 57380; j++) _solve(b, j);
for(j = 58210; j < 58220; j++) _solve(b, j);
for(j = 59050; j < 59060; j++) _solve(b, j);
for(j = 59890; j < 59900; j++) _solve(b, j);
for(j = 60730; j < 60740; j++) _solve(b, j);
for(j = 61570; j < 61580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 62410; j < 62420; j++) _solve(b, j);
for(j = 63250; j < 63260; j++) _solve(b, j);
for(j = 64090; j < 64100; j++) _solve(b, j);
for(j = 64930; j < 64940; j++) _solve(b, j);
for(j = 65770; j < 65780; j++) _solve(b, j);
for(j = 66610; j < 66620; j++) _solve(b, j);
for(j = 67450; j < 67460; j++) _solve(b, j);
for(j = 68290; j < 68300; j++) _solve(b, j);
for(j = 69130; j < 69140; j++) _solve(b, j);
for(j = 69970; j < 69980; j++) _solve(b, j);
for(j = 70810; j < 70820; j++) _solve(b, j);
for(j = 71650; j < 71660; j++) _solve(b, j);
for(j = 72490; j < 72500; j++) _solve(b, j);
for(j = 73330; j < 73340; j++) _solve(b, j);
for(j = 74170; j < 74180; j++) _solve(b, j);
for(j = 75010; j < 75020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 75850; j < 75860; j++) _solve(b, j);
for(j = 76690; j < 76700; j++) _solve(b, j);
for(j = 77530; j < 77540; j++) _solve(b, j);
for(j = 78370; j < 78380; j++) _solve(b, j);
for(j = 79210; j < 79220; j++) _solve(b, j);
for(j = 80050; j < 80060; j++) _solve(b, j);
for(j = 80890; j < 80900; j++) _solve(b, j);
for(j = 81730; j < 81740; j++) _solve(b, j);
for(j = 82570; j < 82580; j++) _solve(b, j);
for(j = 83410; j < 83420; j++) _solve(b, j);
for(j = 84250; j < 84260; j++) _solve(b, j);
for(j = 85090; j < 85100; j++) _solve(b, j);
for(j = 85930; j < 85940; j++) _solve(b, j);
for(j = 86770; j < 86780; j++) _solve(b, j);
for(j = 87610; j < 87620; j++) _solve(b, j);
for(j = 88450; j < 88460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 89290; j < 89300; j++) _solve(b, j);
for(j = 90130; j < 90140; j++) _solve(b, j);
for(j = 90970; j < 90980; j++) _solve(b, j);
for(j = 91810; j < 91820; j++) _solve(b, j);
for(j = 92650; j < 92660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 22940; j < 22950; j++) _solve(b, j);
for(j = 23780; j < 23790; j++) _solve(b, j);
for(j = 24620; j < 24630; j++) _solve(b, j);
for(j = 25460; j < 25470; j++) _solve(b, j);
for(j = 26300; j < 26310; j++) _solve(b, j);
for(j = 27140; j < 27150; j++) _solve(b, j);
for(j = 27980; j < 27990; j++) _solve(b, j);
for(j = 28820; j < 28830; j++) _solve(b, j);
for(j = 29660; j < 29670; j++) _solve(b, j);
for(j = 30500; j < 30510; j++) _solve(b, j);
for(j = 31340; j < 31350; j++) _solve(b, j);
for(j = 32180; j < 32190; j++) _solve(b, j);
for(j = 33020; j < 33030; j++) _solve(b, j);
for(j = 33860; j < 33870; j++) _solve(b, j);
for(j = 34700; j < 34710; j++) _solve(b, j);
for(j = 35540; j < 35550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 36380; j < 36390; j++) _solve(b, j);
for(j = 37220; j < 37230; j++) _solve(b, j);
for(j = 38060; j < 38070; j++) _solve(b, j);
for(j = 38900; j < 38910; j++) _solve(b, j);
for(j = 39740; j < 39750; j++) _solve(b, j);
for(j = 40580; j < 40590; j++) _solve(b, j);
for(j = 41420; j < 41430; j++) _solve(b, j);
for(j = 42260; j < 42270; j++) _solve(b, j);
for(j = 43100; j < 43110; j++) _solve(b, j);
for(j = 43940; j < 43950; j++) _solve(b, j);
for(j = 44780; j < 44790; j++) _solve(b, j);
for(j = 45620; j < 45630; j++) _solve(b, j);
for(j = 46460; j < 46470; j++) _solve(b, j);
for(j = 47300; j < 47310; j++) _solve(b, j);
for(j = 48140; j < 48150; j++) _solve(b, j);
for(j = 48980; j < 48990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 49820; j < 49830; j++) _solve(b, j);
for(j = 50660; j < 50670; j++) _solve(b, j);
for(j = 51500; j < 51510; j++) _solve(b, j);
for(j = 52340; j < 52350; j++) _solve(b, j);
for(j = 53180; j < 53190; j++) _solve(b, j);
for(j = 54020; j < 54030; j++) _solve(b, j);
for(j = 54860; j < 54870; j++) _solve(b, j);
for(j = 55700; j < 55710; j++) _solve(b, j);
for(j = 56540; j < 56550; j++) _solve(b, j);
for(j = 57380; j < 57390; j++) _solve(b, j);
for(j = 58220; j < 58230; j++) _solve(b, j);
for(j = 59060; j < 59070; j++) _solve(b, j);
for(j = 59900; j < 59910; j++) _solve(b, j);
for(j = 60740; j < 60750; j++) _solve(b, j);
for(j = 61580; j < 61590; j++) _solve(b, j);
for(j = 62420; j < 62430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 63260; j < 63270; j++) _solve(b, j);
for(j = 64100; j < 64110; j++) _solve(b, j);
for(j = 64940; j < 64950; j++) _solve(b, j);
for(j = 65780; j < 65790; j++) _solve(b, j);
for(j = 66620; j < 66630; j++) _solve(b, j);
for(j = 67460; j < 67470; j++) _solve(b, j);
for(j = 68300; j < 68310; j++) _solve(b, j);
for(j = 69140; j < 69150; j++) _solve(b, j);
for(j = 69980; j < 69990; j++) _solve(b, j);
for(j = 70820; j < 70830; j++) _solve(b, j);
for(j = 71660; j < 71670; j++) _solve(b, j);
for(j = 72500; j < 72510; j++) _solve(b, j);
for(j = 73340; j < 73350; j++) _solve(b, j);
for(j = 74180; j < 74190; j++) _solve(b, j);
for(j = 75020; j < 75030; j++) _solve(b, j);
for(j = 75860; j < 75870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 76700; j < 76710; j++) _solve(b, j);
for(j = 77540; j < 77550; j++) _solve(b, j);
for(j = 78380; j < 78390; j++) _solve(b, j);
for(j = 79220; j < 79230; j++) _solve(b, j);
for(j = 80060; j < 80070; j++) _solve(b, j);
for(j = 80900; j < 80910; j++) _solve(b, j);
for(j = 81740; j < 81750; j++) _solve(b, j);
for(j = 82580; j < 82590; j++) _solve(b, j);
for(j = 83420; j < 83430; j++) _solve(b, j);
for(j = 84260; j < 84270; j++) _solve(b, j);
for(j = 85100; j < 85110; j++) _solve(b, j);
for(j = 85940; j < 85950; j++) _solve(b, j);
for(j = 86780; j < 86790; j++) _solve(b, j);
for(j = 87620; j < 87630; j++) _solve(b, j);
for(j = 88460; j < 88470; j++) _solve(b, j);
for(j = 89300; j < 89310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 90140; j < 90150; j++) _solve(b, j);
for(j = 90980; j < 90990; j++) _solve(b, j);
for(j = 91820; j < 91830; j++) _solve(b, j);
for(j = 92660; j < 92670; j++) _solve(b, j);
for(j = 93500; j < 93510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 23790; j < 23800; j++) _solve(b, j);
for(j = 24630; j < 24640; j++) _solve(b, j);
for(j = 25470; j < 25480; j++) _solve(b, j);
for(j = 26310; j < 26320; j++) _solve(b, j);
for(j = 27150; j < 27160; j++) _solve(b, j);
for(j = 27990; j < 28000; j++) _solve(b, j);
for(j = 28830; j < 28840; j++) _solve(b, j);
for(j = 29670; j < 29680; j++) _solve(b, j);
for(j = 30510; j < 30520; j++) _solve(b, j);
for(j = 31350; j < 31360; j++) _solve(b, j);
for(j = 32190; j < 32200; j++) _solve(b, j);
for(j = 33030; j < 33040; j++) _solve(b, j);
for(j = 33870; j < 33880; j++) _solve(b, j);
for(j = 34710; j < 34720; j++) _solve(b, j);
for(j = 35550; j < 35560; j++) _solve(b, j);
for(j = 36390; j < 36400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 37230; j < 37240; j++) _solve(b, j);
for(j = 38070; j < 38080; j++) _solve(b, j);
for(j = 38910; j < 38920; j++) _solve(b, j);
for(j = 39750; j < 39760; j++) _solve(b, j);
for(j = 40590; j < 40600; j++) _solve(b, j);
for(j = 41430; j < 41440; j++) _solve(b, j);
for(j = 42270; j < 42280; j++) _solve(b, j);
for(j = 43110; j < 43120; j++) _solve(b, j);
for(j = 43950; j < 43960; j++) _solve(b, j);
for(j = 44790; j < 44800; j++) _solve(b, j);
for(j = 45630; j < 45640; j++) _solve(b, j);
for(j = 46470; j < 46480; j++) _solve(b, j);
for(j = 47310; j < 47320; j++) _solve(b, j);
for(j = 48150; j < 48160; j++) _solve(b, j);
for(j = 48990; j < 49000; j++) _solve(b, j);
for(j = 49830; j < 49840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 50670; j < 50680; j++) _solve(b, j);
for(j = 51510; j < 51520; j++) _solve(b, j);
for(j = 52350; j < 52360; j++) _solve(b, j);
for(j = 53190; j < 53200; j++) _solve(b, j);
for(j = 54030; j < 54040; j++) _solve(b, j);
for(j = 54870; j < 54880; j++) _solve(b, j);
for(j = 55710; j < 55720; j++) _solve(b, j);
for(j = 56550; j < 56560; j++) _solve(b, j);
for(j = 57390; j < 57400; j++) _solve(b, j);
for(j = 58230; j < 58240; j++) _solve(b, j);
for(j = 59070; j < 59080; j++) _solve(b, j);
for(j = 59910; j < 59920; j++) _solve(b, j);
for(j = 60750; j < 60760; j++) _solve(b, j);
for(j = 61590; j < 61600; j++) _solve(b, j);
for(j = 62430; j < 62440; j++) _solve(b, j);
for(j = 63270; j < 63280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 64110; j < 64120; j++) _solve(b, j);
for(j = 64950; j < 64960; j++) _solve(b, j);
for(j = 65790; j < 65800; j++) _solve(b, j);
for(j = 66630; j < 66640; j++) _solve(b, j);
for(j = 67470; j < 67480; j++) _solve(b, j);
for(j = 68310; j < 68320; j++) _solve(b, j);
for(j = 69150; j < 69160; j++) _solve(b, j);
for(j = 69990; j < 70000; j++) _solve(b, j);
for(j = 70830; j < 70840; j++) _solve(b, j);
for(j = 71670; j < 71680; j++) _solve(b, j);
for(j = 72510; j < 72520; j++) _solve(b, j);
for(j = 73350; j < 73360; j++) _solve(b, j);
for(j = 74190; j < 74200; j++) _solve(b, j);
for(j = 75030; j < 75040; j++) _solve(b, j);
for(j = 75870; j < 75880; j++) _solve(b, j);
for(j = 76710; j < 76720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 77550; j < 77560; j++) _solve(b, j);
for(j = 78390; j < 78400; j++) _solve(b, j);
for(j = 79230; j < 79240; j++) _solve(b, j);
for(j = 80070; j < 80080; j++) _solve(b, j);
for(j = 80910; j < 80920; j++) _solve(b, j);
for(j = 81750; j < 81760; j++) _solve(b, j);
for(j = 82590; j < 82600; j++) _solve(b, j);
for(j = 83430; j < 83440; j++) _solve(b, j);
for(j = 84270; j < 84280; j++) _solve(b, j);
for(j = 85110; j < 85120; j++) _solve(b, j);
for(j = 85950; j < 85960; j++) _solve(b, j);
for(j = 86790; j < 86800; j++) _solve(b, j);
for(j = 87630; j < 87640; j++) _solve(b, j);
for(j = 88470; j < 88480; j++) _solve(b, j);
for(j = 89310; j < 89320; j++) _solve(b, j);
for(j = 90150; j < 90160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 90990; j < 91000; j++) _solve(b, j);
for(j = 91830; j < 91840; j++) _solve(b, j);
for(j = 92670; j < 92680; j++) _solve(b, j);
for(j = 93510; j < 93520; j++) _solve(b, j);
for(j = 94350; j < 94360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 24640; j < 24650; j++) _solve(b, j);
for(j = 25480; j < 25490; j++) _solve(b, j);
for(j = 26320; j < 26330; j++) _solve(b, j);
for(j = 27160; j < 27170; j++) _solve(b, j);
for(j = 28000; j < 28010; j++) _solve(b, j);
for(j = 28840; j < 28850; j++) _solve(b, j);
for(j = 29680; j < 29690; j++) _solve(b, j);
for(j = 30520; j < 30530; j++) _solve(b, j);
for(j = 31360; j < 31370; j++) _solve(b, j);
for(j = 32200; j < 32210; j++) _solve(b, j);
for(j = 33040; j < 33050; j++) _solve(b, j);
for(j = 33880; j < 33890; j++) _solve(b, j);
for(j = 34720; j < 34730; j++) _solve(b, j);
for(j = 35560; j < 35570; j++) _solve(b, j);
for(j = 36400; j < 36410; j++) _solve(b, j);
for(j = 37240; j < 37250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 38080; j < 38090; j++) _solve(b, j);
for(j = 38920; j < 38930; j++) _solve(b, j);
for(j = 39760; j < 39770; j++) _solve(b, j);
for(j = 40600; j < 40610; j++) _solve(b, j);
for(j = 41440; j < 41450; j++) _solve(b, j);
for(j = 42280; j < 42290; j++) _solve(b, j);
for(j = 43120; j < 43130; j++) _solve(b, j);
for(j = 43960; j < 43970; j++) _solve(b, j);
for(j = 44800; j < 44810; j++) _solve(b, j);
for(j = 45640; j < 45650; j++) _solve(b, j);
for(j = 46480; j < 46490; j++) _solve(b, j);
for(j = 47320; j < 47330; j++) _solve(b, j);
for(j = 48160; j < 48170; j++) _solve(b, j);
for(j = 49000; j < 49010; j++) _solve(b, j);
for(j = 49840; j < 49850; j++) _solve(b, j);
for(j = 50680; j < 50690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 51520; j < 51530; j++) _solve(b, j);
for(j = 52360; j < 52370; j++) _solve(b, j);
for(j = 53200; j < 53210; j++) _solve(b, j);
for(j = 54040; j < 54050; j++) _solve(b, j);
for(j = 54880; j < 54890; j++) _solve(b, j);
for(j = 55720; j < 55730; j++) _solve(b, j);
for(j = 56560; j < 56570; j++) _solve(b, j);
for(j = 57400; j < 57410; j++) _solve(b, j);
for(j = 58240; j < 58250; j++) _solve(b, j);
for(j = 59080; j < 59090; j++) _solve(b, j);
for(j = 59920; j < 59930; j++) _solve(b, j);
for(j = 60760; j < 60770; j++) _solve(b, j);
for(j = 61600; j < 61610; j++) _solve(b, j);
for(j = 62440; j < 62450; j++) _solve(b, j);
for(j = 63280; j < 63290; j++) _solve(b, j);
for(j = 64120; j < 64130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 64960; j < 64970; j++) _solve(b, j);
for(j = 65800; j < 65810; j++) _solve(b, j);
for(j = 66640; j < 66650; j++) _solve(b, j);
for(j = 67480; j < 67490; j++) _solve(b, j);
for(j = 68320; j < 68330; j++) _solve(b, j);
for(j = 69160; j < 69170; j++) _solve(b, j);
for(j = 70000; j < 70010; j++) _solve(b, j);
for(j = 70840; j < 70850; j++) _solve(b, j);
for(j = 71680; j < 71690; j++) _solve(b, j);
for(j = 72520; j < 72530; j++) _solve(b, j);
for(j = 73360; j < 73370; j++) _solve(b, j);
for(j = 74200; j < 74210; j++) _solve(b, j);
for(j = 75040; j < 75050; j++) _solve(b, j);
for(j = 75880; j < 75890; j++) _solve(b, j);
for(j = 76720; j < 76730; j++) _solve(b, j);
for(j = 77560; j < 77570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 78400; j < 78410; j++) _solve(b, j);
for(j = 79240; j < 79250; j++) _solve(b, j);
for(j = 80080; j < 80090; j++) _solve(b, j);
for(j = 80920; j < 80930; j++) _solve(b, j);
for(j = 81760; j < 81770; j++) _solve(b, j);
for(j = 82600; j < 82610; j++) _solve(b, j);
for(j = 83440; j < 83450; j++) _solve(b, j);
for(j = 84280; j < 84290; j++) _solve(b, j);
for(j = 85120; j < 85130; j++) _solve(b, j);
for(j = 85960; j < 85970; j++) _solve(b, j);
for(j = 86800; j < 86810; j++) _solve(b, j);
for(j = 87640; j < 87650; j++) _solve(b, j);
for(j = 88480; j < 88490; j++) _solve(b, j);
for(j = 89320; j < 89330; j++) _solve(b, j);
for(j = 90160; j < 90170; j++) _solve(b, j);
for(j = 91000; j < 91010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 91840; j < 91850; j++) _solve(b, j);
for(j = 92680; j < 92690; j++) _solve(b, j);
for(j = 93520; j < 93530; j++) _solve(b, j);
for(j = 94360; j < 94370; j++) _solve(b, j);
for(j = 95200; j < 95210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 25490; j < 25500; j++) _solve(b, j);
for(j = 26330; j < 26340; j++) _solve(b, j);
for(j = 27170; j < 27180; j++) _solve(b, j);
for(j = 28010; j < 28020; j++) _solve(b, j);
for(j = 28850; j < 28860; j++) _solve(b, j);
for(j = 29690; j < 29700; j++) _solve(b, j);
for(j = 30530; j < 30540; j++) _solve(b, j);
for(j = 31370; j < 31380; j++) _solve(b, j);
for(j = 32210; j < 32220; j++) _solve(b, j);
for(j = 33050; j < 33060; j++) _solve(b, j);
for(j = 33890; j < 33900; j++) _solve(b, j);
for(j = 34730; j < 34740; j++) _solve(b, j);
for(j = 35570; j < 35580; j++) _solve(b, j);
for(j = 36410; j < 36420; j++) _solve(b, j);
for(j = 37250; j < 37260; j++) _solve(b, j);
for(j = 38090; j < 38100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 38930; j < 38940; j++) _solve(b, j);
for(j = 39770; j < 39780; j++) _solve(b, j);
for(j = 40610; j < 40620; j++) _solve(b, j);
for(j = 41450; j < 41460; j++) _solve(b, j);
for(j = 42290; j < 42300; j++) _solve(b, j);
for(j = 43130; j < 43140; j++) _solve(b, j);
for(j = 43970; j < 43980; j++) _solve(b, j);
for(j = 44810; j < 44820; j++) _solve(b, j);
for(j = 45650; j < 45660; j++) _solve(b, j);
for(j = 46490; j < 46500; j++) _solve(b, j);
for(j = 47330; j < 47340; j++) _solve(b, j);
for(j = 48170; j < 48180; j++) _solve(b, j);
for(j = 49010; j < 49020; j++) _solve(b, j);
for(j = 49850; j < 49860; j++) _solve(b, j);
for(j = 50690; j < 50700; j++) _solve(b, j);
for(j = 51530; j < 51540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 52370; j < 52380; j++) _solve(b, j);
for(j = 53210; j < 53220; j++) _solve(b, j);
for(j = 54050; j < 54060; j++) _solve(b, j);
for(j = 54890; j < 54900; j++) _solve(b, j);
for(j = 55730; j < 55740; j++) _solve(b, j);
for(j = 56570; j < 56580; j++) _solve(b, j);
for(j = 57410; j < 57420; j++) _solve(b, j);
for(j = 58250; j < 58260; j++) _solve(b, j);
for(j = 59090; j < 59100; j++) _solve(b, j);
for(j = 59930; j < 59940; j++) _solve(b, j);
for(j = 60770; j < 60780; j++) _solve(b, j);
for(j = 61610; j < 61620; j++) _solve(b, j);
for(j = 62450; j < 62460; j++) _solve(b, j);
for(j = 63290; j < 63300; j++) _solve(b, j);
for(j = 64130; j < 64140; j++) _solve(b, j);
for(j = 64970; j < 64980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 65810; j < 65820; j++) _solve(b, j);
for(j = 66650; j < 66660; j++) _solve(b, j);
for(j = 67490; j < 67500; j++) _solve(b, j);
for(j = 68330; j < 68340; j++) _solve(b, j);
for(j = 69170; j < 69180; j++) _solve(b, j);
for(j = 70010; j < 70020; j++) _solve(b, j);
for(j = 70850; j < 70860; j++) _solve(b, j);
for(j = 71690; j < 71700; j++) _solve(b, j);
for(j = 72530; j < 72540; j++) _solve(b, j);
for(j = 73370; j < 73380; j++) _solve(b, j);
for(j = 74210; j < 74220; j++) _solve(b, j);
for(j = 75050; j < 75060; j++) _solve(b, j);
for(j = 75890; j < 75900; j++) _solve(b, j);
for(j = 76730; j < 76740; j++) _solve(b, j);
for(j = 77570; j < 77580; j++) _solve(b, j);
for(j = 78410; j < 78420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 79250; j < 79260; j++) _solve(b, j);
for(j = 80090; j < 80100; j++) _solve(b, j);
for(j = 80930; j < 80940; j++) _solve(b, j);
for(j = 81770; j < 81780; j++) _solve(b, j);
for(j = 82610; j < 82620; j++) _solve(b, j);
for(j = 83450; j < 83460; j++) _solve(b, j);
for(j = 84290; j < 84300; j++) _solve(b, j);
for(j = 85130; j < 85140; j++) _solve(b, j);
for(j = 85970; j < 85980; j++) _solve(b, j);
for(j = 86810; j < 86820; j++) _solve(b, j);
for(j = 87650; j < 87660; j++) _solve(b, j);
for(j = 88490; j < 88500; j++) _solve(b, j);
for(j = 89330; j < 89340; j++) _solve(b, j);
for(j = 90170; j < 90180; j++) _solve(b, j);
for(j = 91010; j < 91020; j++) _solve(b, j);
for(j = 91850; j < 91860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 92690; j < 92700; j++) _solve(b, j);
for(j = 93530; j < 93540; j++) _solve(b, j);
for(j = 94370; j < 94380; j++) _solve(b, j);
for(j = 95210; j < 95220; j++) _solve(b, j);
for(j = 96050; j < 96060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 26340; j < 26350; j++) _solve(b, j);
for(j = 27180; j < 27190; j++) _solve(b, j);
for(j = 28020; j < 28030; j++) _solve(b, j);
for(j = 28860; j < 28870; j++) _solve(b, j);
for(j = 29700; j < 29710; j++) _solve(b, j);
for(j = 30540; j < 30550; j++) _solve(b, j);
for(j = 31380; j < 31390; j++) _solve(b, j);
for(j = 32220; j < 32230; j++) _solve(b, j);
for(j = 33060; j < 33070; j++) _solve(b, j);
for(j = 33900; j < 33910; j++) _solve(b, j);
for(j = 34740; j < 34750; j++) _solve(b, j);
for(j = 35580; j < 35590; j++) _solve(b, j);
for(j = 36420; j < 36430; j++) _solve(b, j);
for(j = 37260; j < 37270; j++) _solve(b, j);
for(j = 38100; j < 38110; j++) _solve(b, j);
for(j = 38940; j < 38950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 39780; j < 39790; j++) _solve(b, j);
for(j = 40620; j < 40630; j++) _solve(b, j);
for(j = 41460; j < 41470; j++) _solve(b, j);
for(j = 42300; j < 42310; j++) _solve(b, j);
for(j = 43140; j < 43150; j++) _solve(b, j);
for(j = 43980; j < 43990; j++) _solve(b, j);
for(j = 44820; j < 44830; j++) _solve(b, j);
for(j = 45660; j < 45670; j++) _solve(b, j);
for(j = 46500; j < 46510; j++) _solve(b, j);
for(j = 47340; j < 47350; j++) _solve(b, j);
for(j = 48180; j < 48190; j++) _solve(b, j);
for(j = 49020; j < 49030; j++) _solve(b, j);
for(j = 49860; j < 49870; j++) _solve(b, j);
for(j = 50700; j < 50710; j++) _solve(b, j);
for(j = 51540; j < 51550; j++) _solve(b, j);
for(j = 52380; j < 52390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 53220; j < 53230; j++) _solve(b, j);
for(j = 54060; j < 54070; j++) _solve(b, j);
for(j = 54900; j < 54910; j++) _solve(b, j);
for(j = 55740; j < 55750; j++) _solve(b, j);
for(j = 56580; j < 56590; j++) _solve(b, j);
for(j = 57420; j < 57430; j++) _solve(b, j);
for(j = 58260; j < 58270; j++) _solve(b, j);
for(j = 59100; j < 59110; j++) _solve(b, j);
for(j = 59940; j < 59950; j++) _solve(b, j);
for(j = 60780; j < 60790; j++) _solve(b, j);
for(j = 61620; j < 61630; j++) _solve(b, j);
for(j = 62460; j < 62470; j++) _solve(b, j);
for(j = 63300; j < 63310; j++) _solve(b, j);
for(j = 64140; j < 64150; j++) _solve(b, j);
for(j = 64980; j < 64990; j++) _solve(b, j);
for(j = 65820; j < 65830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 66660; j < 66670; j++) _solve(b, j);
for(j = 67500; j < 67510; j++) _solve(b, j);
for(j = 68340; j < 68350; j++) _solve(b, j);
for(j = 69180; j < 69190; j++) _solve(b, j);
for(j = 70020; j < 70030; j++) _solve(b, j);
for(j = 70860; j < 70870; j++) _solve(b, j);
for(j = 71700; j < 71710; j++) _solve(b, j);
for(j = 72540; j < 72550; j++) _solve(b, j);
for(j = 73380; j < 73390; j++) _solve(b, j);
for(j = 74220; j < 74230; j++) _solve(b, j);
for(j = 75060; j < 75070; j++) _solve(b, j);
for(j = 75900; j < 75910; j++) _solve(b, j);
for(j = 76740; j < 76750; j++) _solve(b, j);
for(j = 77580; j < 77590; j++) _solve(b, j);
for(j = 78420; j < 78430; j++) _solve(b, j);
for(j = 79260; j < 79270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 80100; j < 80110; j++) _solve(b, j);
for(j = 80940; j < 80950; j++) _solve(b, j);
for(j = 81780; j < 81790; j++) _solve(b, j);
for(j = 82620; j < 82630; j++) _solve(b, j);
for(j = 83460; j < 83470; j++) _solve(b, j);
for(j = 84300; j < 84310; j++) _solve(b, j);
for(j = 85140; j < 85150; j++) _solve(b, j);
for(j = 85980; j < 85990; j++) _solve(b, j);
for(j = 86820; j < 86830; j++) _solve(b, j);
for(j = 87660; j < 87670; j++) _solve(b, j);
for(j = 88500; j < 88510; j++) _solve(b, j);
for(j = 89340; j < 89350; j++) _solve(b, j);
for(j = 90180; j < 90190; j++) _solve(b, j);
for(j = 91020; j < 91030; j++) _solve(b, j);
for(j = 91860; j < 91870; j++) _solve(b, j);
for(j = 92700; j < 92710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 93540; j < 93550; j++) _solve(b, j);
for(j = 94380; j < 94390; j++) _solve(b, j);
for(j = 95220; j < 95230; j++) _solve(b, j);
for(j = 96060; j < 96070; j++) _solve(b, j);
for(j = 96900; j < 96910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 27190; j < 27200; j++) _solve(b, j);
for(j = 28030; j < 28040; j++) _solve(b, j);
for(j = 28870; j < 28880; j++) _solve(b, j);
for(j = 29710; j < 29720; j++) _solve(b, j);
for(j = 30550; j < 30560; j++) _solve(b, j);
for(j = 31390; j < 31400; j++) _solve(b, j);
for(j = 32230; j < 32240; j++) _solve(b, j);
for(j = 33070; j < 33080; j++) _solve(b, j);
for(j = 33910; j < 33920; j++) _solve(b, j);
for(j = 34750; j < 34760; j++) _solve(b, j);
for(j = 35590; j < 35600; j++) _solve(b, j);
for(j = 36430; j < 36440; j++) _solve(b, j);
for(j = 37270; j < 37280; j++) _solve(b, j);
for(j = 38110; j < 38120; j++) _solve(b, j);
for(j = 38950; j < 38960; j++) _solve(b, j);
for(j = 39790; j < 39800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 40630; j < 40640; j++) _solve(b, j);
for(j = 41470; j < 41480; j++) _solve(b, j);
for(j = 42310; j < 42320; j++) _solve(b, j);
for(j = 43150; j < 43160; j++) _solve(b, j);
for(j = 43990; j < 44000; j++) _solve(b, j);
for(j = 44830; j < 44840; j++) _solve(b, j);
for(j = 45670; j < 45680; j++) _solve(b, j);
for(j = 46510; j < 46520; j++) _solve(b, j);
for(j = 47350; j < 47360; j++) _solve(b, j);
for(j = 48190; j < 48200; j++) _solve(b, j);
for(j = 49030; j < 49040; j++) _solve(b, j);
for(j = 49870; j < 49880; j++) _solve(b, j);
for(j = 50710; j < 50720; j++) _solve(b, j);
for(j = 51550; j < 51560; j++) _solve(b, j);
for(j = 52390; j < 52400; j++) _solve(b, j);
for(j = 53230; j < 53240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54070; j < 54080; j++) _solve(b, j);
for(j = 54910; j < 54920; j++) _solve(b, j);
for(j = 55750; j < 55760; j++) _solve(b, j);
for(j = 56590; j < 56600; j++) _solve(b, j);
for(j = 57430; j < 57440; j++) _solve(b, j);
for(j = 58270; j < 58280; j++) _solve(b, j);
for(j = 59110; j < 59120; j++) _solve(b, j);
for(j = 59950; j < 59960; j++) _solve(b, j);
for(j = 60790; j < 60800; j++) _solve(b, j);
for(j = 61630; j < 61640; j++) _solve(b, j);
for(j = 62470; j < 62480; j++) _solve(b, j);
for(j = 63310; j < 63320; j++) _solve(b, j);
for(j = 64150; j < 64160; j++) _solve(b, j);
for(j = 64990; j < 65000; j++) _solve(b, j);
for(j = 65830; j < 65840; j++) _solve(b, j);
for(j = 66670; j < 66680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 67510; j < 67520; j++) _solve(b, j);
for(j = 68350; j < 68360; j++) _solve(b, j);
for(j = 69190; j < 69200; j++) _solve(b, j);
for(j = 70030; j < 70040; j++) _solve(b, j);
for(j = 70870; j < 70880; j++) _solve(b, j);
for(j = 71710; j < 71720; j++) _solve(b, j);
for(j = 72550; j < 72560; j++) _solve(b, j);
for(j = 73390; j < 73400; j++) _solve(b, j);
for(j = 74230; j < 74240; j++) _solve(b, j);
for(j = 75070; j < 75080; j++) _solve(b, j);
for(j = 75910; j < 75920; j++) _solve(b, j);
for(j = 76750; j < 76760; j++) _solve(b, j);
for(j = 77590; j < 77600; j++) _solve(b, j);
for(j = 78430; j < 78440; j++) _solve(b, j);
for(j = 79270; j < 79280; j++) _solve(b, j);
for(j = 80110; j < 80120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 80950; j < 80960; j++) _solve(b, j);
for(j = 81790; j < 81800; j++) _solve(b, j);
for(j = 82630; j < 82640; j++) _solve(b, j);
for(j = 83470; j < 83480; j++) _solve(b, j);
for(j = 84310; j < 84320; j++) _solve(b, j);
for(j = 85150; j < 85160; j++) _solve(b, j);
for(j = 85990; j < 86000; j++) _solve(b, j);
for(j = 86830; j < 86840; j++) _solve(b, j);
for(j = 87670; j < 87680; j++) _solve(b, j);
for(j = 88510; j < 88520; j++) _solve(b, j);
for(j = 89350; j < 89360; j++) _solve(b, j);
for(j = 90190; j < 90200; j++) _solve(b, j);
for(j = 91030; j < 91040; j++) _solve(b, j);
for(j = 91870; j < 91880; j++) _solve(b, j);
for(j = 92710; j < 92720; j++) _solve(b, j);
for(j = 93550; j < 93560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 94390; j < 94400; j++) _solve(b, j);
for(j = 95230; j < 95240; j++) _solve(b, j);
for(j = 96070; j < 96080; j++) _solve(b, j);
for(j = 96910; j < 96920; j++) _solve(b, j);
for(j = 97750; j < 97760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 28040; j < 28050; j++) _solve(b, j);
for(j = 28880; j < 28890; j++) _solve(b, j);
for(j = 29720; j < 29730; j++) _solve(b, j);
for(j = 30560; j < 30570; j++) _solve(b, j);
for(j = 31400; j < 31410; j++) _solve(b, j);
for(j = 32240; j < 32250; j++) _solve(b, j);
for(j = 33080; j < 33090; j++) _solve(b, j);
for(j = 33920; j < 33930; j++) _solve(b, j);
for(j = 34760; j < 34770; j++) _solve(b, j);
for(j = 35600; j < 35610; j++) _solve(b, j);
for(j = 36440; j < 36450; j++) _solve(b, j);
for(j = 37280; j < 37290; j++) _solve(b, j);
for(j = 38120; j < 38130; j++) _solve(b, j);
for(j = 38960; j < 38970; j++) _solve(b, j);
for(j = 39800; j < 39810; j++) _solve(b, j);
for(j = 40640; j < 40650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 41480; j < 41490; j++) _solve(b, j);
for(j = 42320; j < 42330; j++) _solve(b, j);
for(j = 43160; j < 43170; j++) _solve(b, j);
for(j = 44000; j < 44010; j++) _solve(b, j);
for(j = 44840; j < 44850; j++) _solve(b, j);
for(j = 45680; j < 45690; j++) _solve(b, j);
for(j = 46520; j < 46530; j++) _solve(b, j);
for(j = 47360; j < 47370; j++) _solve(b, j);
for(j = 48200; j < 48210; j++) _solve(b, j);
for(j = 49040; j < 49050; j++) _solve(b, j);
for(j = 49880; j < 49890; j++) _solve(b, j);
for(j = 50720; j < 50730; j++) _solve(b, j);
for(j = 51560; j < 51570; j++) _solve(b, j);
for(j = 52400; j < 52410; j++) _solve(b, j);
for(j = 53240; j < 53250; j++) _solve(b, j);
for(j = 54080; j < 54090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54920; j < 54930; j++) _solve(b, j);
for(j = 55760; j < 55770; j++) _solve(b, j);
for(j = 56600; j < 56610; j++) _solve(b, j);
for(j = 57440; j < 57450; j++) _solve(b, j);
for(j = 58280; j < 58290; j++) _solve(b, j);
for(j = 59120; j < 59130; j++) _solve(b, j);
for(j = 59960; j < 59970; j++) _solve(b, j);
for(j = 60800; j < 60810; j++) _solve(b, j);
for(j = 61640; j < 61650; j++) _solve(b, j);
for(j = 62480; j < 62490; j++) _solve(b, j);
for(j = 63320; j < 63330; j++) _solve(b, j);
for(j = 64160; j < 64170; j++) _solve(b, j);
for(j = 65000; j < 65010; j++) _solve(b, j);
for(j = 65840; j < 65850; j++) _solve(b, j);
for(j = 66680; j < 66690; j++) _solve(b, j);
for(j = 67520; j < 67530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 68360; j < 68370; j++) _solve(b, j);
for(j = 69200; j < 69210; j++) _solve(b, j);
for(j = 70040; j < 70050; j++) _solve(b, j);
for(j = 70880; j < 70890; j++) _solve(b, j);
for(j = 71720; j < 71730; j++) _solve(b, j);
for(j = 72560; j < 72570; j++) _solve(b, j);
for(j = 73400; j < 73410; j++) _solve(b, j);
for(j = 74240; j < 74250; j++) _solve(b, j);
for(j = 75080; j < 75090; j++) _solve(b, j);
for(j = 75920; j < 75930; j++) _solve(b, j);
for(j = 76760; j < 76770; j++) _solve(b, j);
for(j = 77600; j < 77610; j++) _solve(b, j);
for(j = 78440; j < 78450; j++) _solve(b, j);
for(j = 79280; j < 79290; j++) _solve(b, j);
for(j = 80120; j < 80130; j++) _solve(b, j);
for(j = 80960; j < 80970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 81800; j < 81810; j++) _solve(b, j);
for(j = 82640; j < 82650; j++) _solve(b, j);
for(j = 83480; j < 83490; j++) _solve(b, j);
for(j = 84320; j < 84330; j++) _solve(b, j);
for(j = 85160; j < 85170; j++) _solve(b, j);
for(j = 86000; j < 86010; j++) _solve(b, j);
for(j = 86840; j < 86850; j++) _solve(b, j);
for(j = 87680; j < 87690; j++) _solve(b, j);
for(j = 88520; j < 88530; j++) _solve(b, j);
for(j = 89360; j < 89370; j++) _solve(b, j);
for(j = 90200; j < 90210; j++) _solve(b, j);
for(j = 91040; j < 91050; j++) _solve(b, j);
for(j = 91880; j < 91890; j++) _solve(b, j);
for(j = 92720; j < 92730; j++) _solve(b, j);
for(j = 93560; j < 93570; j++) _solve(b, j);
for(j = 94400; j < 94410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 95240; j < 95250; j++) _solve(b, j);
for(j = 96080; j < 96090; j++) _solve(b, j);
for(j = 96920; j < 96930; j++) _solve(b, j);
for(j = 97760; j < 97770; j++) _solve(b, j);
for(j = 98600; j < 98610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 28890; j < 28900; j++) _solve(b, j);
for(j = 29730; j < 29740; j++) _solve(b, j);
for(j = 30570; j < 30580; j++) _solve(b, j);
for(j = 31410; j < 31420; j++) _solve(b, j);
for(j = 32250; j < 32260; j++) _solve(b, j);
for(j = 33090; j < 33100; j++) _solve(b, j);
for(j = 33930; j < 33940; j++) _solve(b, j);
for(j = 34770; j < 34780; j++) _solve(b, j);
for(j = 35610; j < 35620; j++) _solve(b, j);
for(j = 36450; j < 36460; j++) _solve(b, j);
for(j = 37290; j < 37300; j++) _solve(b, j);
for(j = 38130; j < 38140; j++) _solve(b, j);
for(j = 38970; j < 38980; j++) _solve(b, j);
for(j = 39810; j < 39820; j++) _solve(b, j);
for(j = 40650; j < 40660; j++) _solve(b, j);
for(j = 41490; j < 41500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 42330; j < 42340; j++) _solve(b, j);
for(j = 43170; j < 43180; j++) _solve(b, j);
for(j = 44010; j < 44020; j++) _solve(b, j);
for(j = 44850; j < 44860; j++) _solve(b, j);
for(j = 45690; j < 45700; j++) _solve(b, j);
for(j = 46530; j < 46540; j++) _solve(b, j);
for(j = 47370; j < 47380; j++) _solve(b, j);
for(j = 48210; j < 48220; j++) _solve(b, j);
for(j = 49050; j < 49060; j++) _solve(b, j);
for(j = 49890; j < 49900; j++) _solve(b, j);
for(j = 50730; j < 50740; j++) _solve(b, j);
for(j = 51570; j < 51580; j++) _solve(b, j);
for(j = 52410; j < 52420; j++) _solve(b, j);
for(j = 53250; j < 53260; j++) _solve(b, j);
for(j = 54090; j < 54100; j++) _solve(b, j);
for(j = 54930; j < 54940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 55770; j < 55780; j++) _solve(b, j);
for(j = 56610; j < 56620; j++) _solve(b, j);
for(j = 57450; j < 57460; j++) _solve(b, j);
for(j = 58290; j < 58300; j++) _solve(b, j);
for(j = 59130; j < 59140; j++) _solve(b, j);
for(j = 59970; j < 59980; j++) _solve(b, j);
for(j = 60810; j < 60820; j++) _solve(b, j);
for(j = 61650; j < 61660; j++) _solve(b, j);
for(j = 62490; j < 62500; j++) _solve(b, j);
for(j = 63330; j < 63340; j++) _solve(b, j);
for(j = 64170; j < 64180; j++) _solve(b, j);
for(j = 65010; j < 65020; j++) _solve(b, j);
for(j = 65850; j < 65860; j++) _solve(b, j);
for(j = 66690; j < 66700; j++) _solve(b, j);
for(j = 67530; j < 67540; j++) _solve(b, j);
for(j = 68370; j < 68380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 69210; j < 69220; j++) _solve(b, j);
for(j = 70050; j < 70060; j++) _solve(b, j);
for(j = 70890; j < 70900; j++) _solve(b, j);
for(j = 71730; j < 71740; j++) _solve(b, j);
for(j = 72570; j < 72580; j++) _solve(b, j);
for(j = 73410; j < 73420; j++) _solve(b, j);
for(j = 74250; j < 74260; j++) _solve(b, j);
for(j = 75090; j < 75100; j++) _solve(b, j);
for(j = 75930; j < 75940; j++) _solve(b, j);
for(j = 76770; j < 76780; j++) _solve(b, j);
for(j = 77610; j < 77620; j++) _solve(b, j);
for(j = 78450; j < 78460; j++) _solve(b, j);
for(j = 79290; j < 79300; j++) _solve(b, j);
for(j = 80130; j < 80140; j++) _solve(b, j);
for(j = 80970; j < 80980; j++) _solve(b, j);
for(j = 81810; j < 81820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 82650; j < 82660; j++) _solve(b, j);
for(j = 83490; j < 83500; j++) _solve(b, j);
for(j = 84330; j < 84340; j++) _solve(b, j);
for(j = 85170; j < 85180; j++) _solve(b, j);
for(j = 86010; j < 86020; j++) _solve(b, j);
for(j = 86850; j < 86860; j++) _solve(b, j);
for(j = 87690; j < 87700; j++) _solve(b, j);
for(j = 88530; j < 88540; j++) _solve(b, j);
for(j = 89370; j < 89380; j++) _solve(b, j);
for(j = 90210; j < 90220; j++) _solve(b, j);
for(j = 91050; j < 91060; j++) _solve(b, j);
for(j = 91890; j < 91900; j++) _solve(b, j);
for(j = 92730; j < 92740; j++) _solve(b, j);
for(j = 93570; j < 93580; j++) _solve(b, j);
for(j = 94410; j < 94420; j++) _solve(b, j);
for(j = 95250; j < 95260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 96090; j < 96100; j++) _solve(b, j);
for(j = 96930; j < 96940; j++) _solve(b, j);
for(j = 97770; j < 97780; j++) _solve(b, j);
for(j = 98610; j < 98620; j++) _solve(b, j);
for(j = 99450; j < 99460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 29740; j < 29750; j++) _solve(b, j);
for(j = 30580; j < 30590; j++) _solve(b, j);
for(j = 31420; j < 31430; j++) _solve(b, j);
for(j = 32260; j < 32270; j++) _solve(b, j);
for(j = 33100; j < 33110; j++) _solve(b, j);
for(j = 33940; j < 33950; j++) _solve(b, j);
for(j = 34780; j < 34790; j++) _solve(b, j);
for(j = 35620; j < 35630; j++) _solve(b, j);
for(j = 36460; j < 36470; j++) _solve(b, j);
for(j = 37300; j < 37310; j++) _solve(b, j);
for(j = 38140; j < 38150; j++) _solve(b, j);
for(j = 38980; j < 38990; j++) _solve(b, j);
for(j = 39820; j < 39830; j++) _solve(b, j);
for(j = 40660; j < 40670; j++) _solve(b, j);
for(j = 41500; j < 41510; j++) _solve(b, j);
for(j = 42340; j < 42350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 43180; j < 43190; j++) _solve(b, j);
for(j = 44020; j < 44030; j++) _solve(b, j);
for(j = 44860; j < 44870; j++) _solve(b, j);
for(j = 45700; j < 45710; j++) _solve(b, j);
for(j = 46540; j < 46550; j++) _solve(b, j);
for(j = 47380; j < 47390; j++) _solve(b, j);
for(j = 48220; j < 48230; j++) _solve(b, j);
for(j = 49060; j < 49070; j++) _solve(b, j);
for(j = 49900; j < 49910; j++) _solve(b, j);
for(j = 50740; j < 50750; j++) _solve(b, j);
for(j = 51580; j < 51590; j++) _solve(b, j);
for(j = 52420; j < 52430; j++) _solve(b, j);
for(j = 53260; j < 53270; j++) _solve(b, j);
for(j = 54100; j < 54110; j++) _solve(b, j);
for(j = 54940; j < 54950; j++) _solve(b, j);
for(j = 55780; j < 55790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 56620; j < 56630; j++) _solve(b, j);
for(j = 57460; j < 57470; j++) _solve(b, j);
for(j = 58300; j < 58310; j++) _solve(b, j);
for(j = 59140; j < 59150; j++) _solve(b, j);
for(j = 59980; j < 59990; j++) _solve(b, j);
for(j = 60820; j < 60830; j++) _solve(b, j);
for(j = 61660; j < 61670; j++) _solve(b, j);
for(j = 62500; j < 62510; j++) _solve(b, j);
for(j = 63340; j < 63350; j++) _solve(b, j);
for(j = 64180; j < 64190; j++) _solve(b, j);
for(j = 65020; j < 65030; j++) _solve(b, j);
for(j = 65860; j < 65870; j++) _solve(b, j);
for(j = 66700; j < 66710; j++) _solve(b, j);
for(j = 67540; j < 67550; j++) _solve(b, j);
for(j = 68380; j < 68390; j++) _solve(b, j);
for(j = 69220; j < 69230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 70060; j < 70070; j++) _solve(b, j);
for(j = 70900; j < 70910; j++) _solve(b, j);
for(j = 71740; j < 71750; j++) _solve(b, j);
for(j = 72580; j < 72590; j++) _solve(b, j);
for(j = 73420; j < 73430; j++) _solve(b, j);
for(j = 74260; j < 74270; j++) _solve(b, j);
for(j = 75100; j < 75110; j++) _solve(b, j);
for(j = 75940; j < 75950; j++) _solve(b, j);
for(j = 76780; j < 76790; j++) _solve(b, j);
for(j = 77620; j < 77630; j++) _solve(b, j);
for(j = 78460; j < 78470; j++) _solve(b, j);
for(j = 79300; j < 79310; j++) _solve(b, j);
for(j = 80140; j < 80150; j++) _solve(b, j);
for(j = 80980; j < 80990; j++) _solve(b, j);
for(j = 81820; j < 81830; j++) _solve(b, j);
for(j = 82660; j < 82670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 83500; j < 83510; j++) _solve(b, j);
for(j = 84340; j < 84350; j++) _solve(b, j);
for(j = 85180; j < 85190; j++) _solve(b, j);
for(j = 86020; j < 86030; j++) _solve(b, j);
for(j = 86860; j < 86870; j++) _solve(b, j);
for(j = 87700; j < 87710; j++) _solve(b, j);
for(j = 88540; j < 88550; j++) _solve(b, j);
for(j = 89380; j < 89390; j++) _solve(b, j);
for(j = 90220; j < 90230; j++) _solve(b, j);
for(j = 91060; j < 91070; j++) _solve(b, j);
for(j = 91900; j < 91910; j++) _solve(b, j);
for(j = 92740; j < 92750; j++) _solve(b, j);
for(j = 93580; j < 93590; j++) _solve(b, j);
for(j = 94420; j < 94430; j++) _solve(b, j);
for(j = 95260; j < 95270; j++) _solve(b, j);
for(j = 96100; j < 96110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 96940; j < 96950; j++) _solve(b, j);
for(j = 97780; j < 97790; j++) _solve(b, j);
for(j = 98620; j < 98630; j++) _solve(b, j);
for(j = 99460; j < 99470; j++) _solve(b, j);
for(j = 100300; j < 100310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 30590; j < 30600; j++) _solve(b, j);
for(j = 31430; j < 31440; j++) _solve(b, j);
for(j = 32270; j < 32280; j++) _solve(b, j);
for(j = 33110; j < 33120; j++) _solve(b, j);
for(j = 33950; j < 33960; j++) _solve(b, j);
for(j = 34790; j < 34800; j++) _solve(b, j);
for(j = 35630; j < 35640; j++) _solve(b, j);
for(j = 36470; j < 36480; j++) _solve(b, j);
for(j = 37310; j < 37320; j++) _solve(b, j);
for(j = 38150; j < 38160; j++) _solve(b, j);
for(j = 38990; j < 39000; j++) _solve(b, j);
for(j = 39830; j < 39840; j++) _solve(b, j);
for(j = 40670; j < 40680; j++) _solve(b, j);
for(j = 41510; j < 41520; j++) _solve(b, j);
for(j = 42350; j < 42360; j++) _solve(b, j);
for(j = 43190; j < 43200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 44030; j < 44040; j++) _solve(b, j);
for(j = 44870; j < 44880; j++) _solve(b, j);
for(j = 45710; j < 45720; j++) _solve(b, j);
for(j = 46550; j < 46560; j++) _solve(b, j);
for(j = 47390; j < 47400; j++) _solve(b, j);
for(j = 48230; j < 48240; j++) _solve(b, j);
for(j = 49070; j < 49080; j++) _solve(b, j);
for(j = 49910; j < 49920; j++) _solve(b, j);
for(j = 50750; j < 50760; j++) _solve(b, j);
for(j = 51590; j < 51600; j++) _solve(b, j);
for(j = 52430; j < 52440; j++) _solve(b, j);
for(j = 53270; j < 53280; j++) _solve(b, j);
for(j = 54110; j < 54120; j++) _solve(b, j);
for(j = 54950; j < 54960; j++) _solve(b, j);
for(j = 55790; j < 55800; j++) _solve(b, j);
for(j = 56630; j < 56640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 57470; j < 57480; j++) _solve(b, j);
for(j = 58310; j < 58320; j++) _solve(b, j);
for(j = 59150; j < 59160; j++) _solve(b, j);
for(j = 59990; j < 60000; j++) _solve(b, j);
for(j = 60830; j < 60840; j++) _solve(b, j);
for(j = 61670; j < 61680; j++) _solve(b, j);
for(j = 62510; j < 62520; j++) _solve(b, j);
for(j = 63350; j < 63360; j++) _solve(b, j);
for(j = 64190; j < 64200; j++) _solve(b, j);
for(j = 65030; j < 65040; j++) _solve(b, j);
for(j = 65870; j < 65880; j++) _solve(b, j);
for(j = 66710; j < 66720; j++) _solve(b, j);
for(j = 67550; j < 67560; j++) _solve(b, j);
for(j = 68390; j < 68400; j++) _solve(b, j);
for(j = 69230; j < 69240; j++) _solve(b, j);
for(j = 70070; j < 70080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 70910; j < 70920; j++) _solve(b, j);
for(j = 71750; j < 71760; j++) _solve(b, j);
for(j = 72590; j < 72600; j++) _solve(b, j);
for(j = 73430; j < 73440; j++) _solve(b, j);
for(j = 74270; j < 74280; j++) _solve(b, j);
for(j = 75110; j < 75120; j++) _solve(b, j);
for(j = 75950; j < 75960; j++) _solve(b, j);
for(j = 76790; j < 76800; j++) _solve(b, j);
for(j = 77630; j < 77640; j++) _solve(b, j);
for(j = 78470; j < 78480; j++) _solve(b, j);
for(j = 79310; j < 79320; j++) _solve(b, j);
for(j = 80150; j < 80160; j++) _solve(b, j);
for(j = 80990; j < 81000; j++) _solve(b, j);
for(j = 81830; j < 81840; j++) _solve(b, j);
for(j = 82670; j < 82680; j++) _solve(b, j);
for(j = 83510; j < 83520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 84350; j < 84360; j++) _solve(b, j);
for(j = 85190; j < 85200; j++) _solve(b, j);
for(j = 86030; j < 86040; j++) _solve(b, j);
for(j = 86870; j < 86880; j++) _solve(b, j);
for(j = 87710; j < 87720; j++) _solve(b, j);
for(j = 88550; j < 88560; j++) _solve(b, j);
for(j = 89390; j < 89400; j++) _solve(b, j);
for(j = 90230; j < 90240; j++) _solve(b, j);
for(j = 91070; j < 91080; j++) _solve(b, j);
for(j = 91910; j < 91920; j++) _solve(b, j);
for(j = 92750; j < 92760; j++) _solve(b, j);
for(j = 93590; j < 93600; j++) _solve(b, j);
for(j = 94430; j < 94440; j++) _solve(b, j);
for(j = 95270; j < 95280; j++) _solve(b, j);
for(j = 96110; j < 96120; j++) _solve(b, j);
for(j = 96950; j < 96960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 97790; j < 97800; j++) _solve(b, j);
for(j = 98630; j < 98640; j++) _solve(b, j);
for(j = 99470; j < 99480; j++) _solve(b, j);
for(j = 100310; j < 100320; j++) _solve(b, j);
for(j = 101150; j < 101160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 31440; j < 31450; j++) _solve(b, j);
for(j = 32280; j < 32290; j++) _solve(b, j);
for(j = 33120; j < 33130; j++) _solve(b, j);
for(j = 33960; j < 33970; j++) _solve(b, j);
for(j = 34800; j < 34810; j++) _solve(b, j);
for(j = 35640; j < 35650; j++) _solve(b, j);
for(j = 36480; j < 36490; j++) _solve(b, j);
for(j = 37320; j < 37330; j++) _solve(b, j);
for(j = 38160; j < 38170; j++) _solve(b, j);
for(j = 39000; j < 39010; j++) _solve(b, j);
for(j = 39840; j < 39850; j++) _solve(b, j);
for(j = 40680; j < 40690; j++) _solve(b, j);
for(j = 41520; j < 41530; j++) _solve(b, j);
for(j = 42360; j < 42370; j++) _solve(b, j);
for(j = 43200; j < 43210; j++) _solve(b, j);
for(j = 44040; j < 44050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 44880; j < 44890; j++) _solve(b, j);
for(j = 45720; j < 45730; j++) _solve(b, j);
for(j = 46560; j < 46570; j++) _solve(b, j);
for(j = 47400; j < 47410; j++) _solve(b, j);
for(j = 48240; j < 48250; j++) _solve(b, j);
for(j = 49080; j < 49090; j++) _solve(b, j);
for(j = 49920; j < 49930; j++) _solve(b, j);
for(j = 50760; j < 50770; j++) _solve(b, j);
for(j = 51600; j < 51610; j++) _solve(b, j);
for(j = 52440; j < 52450; j++) _solve(b, j);
for(j = 53280; j < 53290; j++) _solve(b, j);
for(j = 54120; j < 54130; j++) _solve(b, j);
for(j = 54960; j < 54970; j++) _solve(b, j);
for(j = 55800; j < 55810; j++) _solve(b, j);
for(j = 56640; j < 56650; j++) _solve(b, j);
for(j = 57480; j < 57490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 58320; j < 58330; j++) _solve(b, j);
for(j = 59160; j < 59170; j++) _solve(b, j);
for(j = 60000; j < 60010; j++) _solve(b, j);
for(j = 60840; j < 60850; j++) _solve(b, j);
for(j = 61680; j < 61690; j++) _solve(b, j);
for(j = 62520; j < 62530; j++) _solve(b, j);
for(j = 63360; j < 63370; j++) _solve(b, j);
for(j = 64200; j < 64210; j++) _solve(b, j);
for(j = 65040; j < 65050; j++) _solve(b, j);
for(j = 65880; j < 65890; j++) _solve(b, j);
for(j = 66720; j < 66730; j++) _solve(b, j);
for(j = 67560; j < 67570; j++) _solve(b, j);
for(j = 68400; j < 68410; j++) _solve(b, j);
for(j = 69240; j < 69250; j++) _solve(b, j);
for(j = 70080; j < 70090; j++) _solve(b, j);
for(j = 70920; j < 70930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 71760; j < 71770; j++) _solve(b, j);
for(j = 72600; j < 72610; j++) _solve(b, j);
for(j = 73440; j < 73450; j++) _solve(b, j);
for(j = 74280; j < 74290; j++) _solve(b, j);
for(j = 75120; j < 75130; j++) _solve(b, j);
for(j = 75960; j < 75970; j++) _solve(b, j);
for(j = 76800; j < 76810; j++) _solve(b, j);
for(j = 77640; j < 77650; j++) _solve(b, j);
for(j = 78480; j < 78490; j++) _solve(b, j);
for(j = 79320; j < 79330; j++) _solve(b, j);
for(j = 80160; j < 80170; j++) _solve(b, j);
for(j = 81000; j < 81010; j++) _solve(b, j);
for(j = 81840; j < 81850; j++) _solve(b, j);
for(j = 82680; j < 82690; j++) _solve(b, j);
for(j = 83520; j < 83530; j++) _solve(b, j);
for(j = 84360; j < 84370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 85200; j < 85210; j++) _solve(b, j);
for(j = 86040; j < 86050; j++) _solve(b, j);
for(j = 86880; j < 86890; j++) _solve(b, j);
for(j = 87720; j < 87730; j++) _solve(b, j);
for(j = 88560; j < 88570; j++) _solve(b, j);
for(j = 89400; j < 89410; j++) _solve(b, j);
for(j = 90240; j < 90250; j++) _solve(b, j);
for(j = 91080; j < 91090; j++) _solve(b, j);
for(j = 91920; j < 91930; j++) _solve(b, j);
for(j = 92760; j < 92770; j++) _solve(b, j);
for(j = 93600; j < 93610; j++) _solve(b, j);
for(j = 94440; j < 94450; j++) _solve(b, j);
for(j = 95280; j < 95290; j++) _solve(b, j);
for(j = 96120; j < 96130; j++) _solve(b, j);
for(j = 96960; j < 96970; j++) _solve(b, j);
for(j = 97800; j < 97810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 98640; j < 98650; j++) _solve(b, j);
for(j = 99480; j < 99490; j++) _solve(b, j);
for(j = 100320; j < 100330; j++) _solve(b, j);
for(j = 101160; j < 101170; j++) _solve(b, j);
for(j = 102000; j < 102010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 32290; j < 32300; j++) _solve(b, j);
for(j = 33130; j < 33140; j++) _solve(b, j);
for(j = 33970; j < 33980; j++) _solve(b, j);
for(j = 34810; j < 34820; j++) _solve(b, j);
for(j = 35650; j < 35660; j++) _solve(b, j);
for(j = 36490; j < 36500; j++) _solve(b, j);
for(j = 37330; j < 37340; j++) _solve(b, j);
for(j = 38170; j < 38180; j++) _solve(b, j);
for(j = 39010; j < 39020; j++) _solve(b, j);
for(j = 39850; j < 39860; j++) _solve(b, j);
for(j = 40690; j < 40700; j++) _solve(b, j);
for(j = 41530; j < 41540; j++) _solve(b, j);
for(j = 42370; j < 42380; j++) _solve(b, j);
for(j = 43210; j < 43220; j++) _solve(b, j);
for(j = 44050; j < 44060; j++) _solve(b, j);
for(j = 44890; j < 44900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 45730; j < 45740; j++) _solve(b, j);
for(j = 46570; j < 46580; j++) _solve(b, j);
for(j = 47410; j < 47420; j++) _solve(b, j);
for(j = 48250; j < 48260; j++) _solve(b, j);
for(j = 49090; j < 49100; j++) _solve(b, j);
for(j = 49930; j < 49940; j++) _solve(b, j);
for(j = 50770; j < 50780; j++) _solve(b, j);
for(j = 51610; j < 51620; j++) _solve(b, j);
for(j = 52450; j < 52460; j++) _solve(b, j);
for(j = 53290; j < 53300; j++) _solve(b, j);
for(j = 54130; j < 54140; j++) _solve(b, j);
for(j = 54970; j < 54980; j++) _solve(b, j);
for(j = 55810; j < 55820; j++) _solve(b, j);
for(j = 56650; j < 56660; j++) _solve(b, j);
for(j = 57490; j < 57500; j++) _solve(b, j);
for(j = 58330; j < 58340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 59170; j < 59180; j++) _solve(b, j);
for(j = 60010; j < 60020; j++) _solve(b, j);
for(j = 60850; j < 60860; j++) _solve(b, j);
for(j = 61690; j < 61700; j++) _solve(b, j);
for(j = 62530; j < 62540; j++) _solve(b, j);
for(j = 63370; j < 63380; j++) _solve(b, j);
for(j = 64210; j < 64220; j++) _solve(b, j);
for(j = 65050; j < 65060; j++) _solve(b, j);
for(j = 65890; j < 65900; j++) _solve(b, j);
for(j = 66730; j < 66740; j++) _solve(b, j);
for(j = 67570; j < 67580; j++) _solve(b, j);
for(j = 68410; j < 68420; j++) _solve(b, j);
for(j = 69250; j < 69260; j++) _solve(b, j);
for(j = 70090; j < 70100; j++) _solve(b, j);
for(j = 70930; j < 70940; j++) _solve(b, j);
for(j = 71770; j < 71780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 72610; j < 72620; j++) _solve(b, j);
for(j = 73450; j < 73460; j++) _solve(b, j);
for(j = 74290; j < 74300; j++) _solve(b, j);
for(j = 75130; j < 75140; j++) _solve(b, j);
for(j = 75970; j < 75980; j++) _solve(b, j);
for(j = 76810; j < 76820; j++) _solve(b, j);
for(j = 77650; j < 77660; j++) _solve(b, j);
for(j = 78490; j < 78500; j++) _solve(b, j);
for(j = 79330; j < 79340; j++) _solve(b, j);
for(j = 80170; j < 80180; j++) _solve(b, j);
for(j = 81010; j < 81020; j++) _solve(b, j);
for(j = 81850; j < 81860; j++) _solve(b, j);
for(j = 82690; j < 82700; j++) _solve(b, j);
for(j = 83530; j < 83540; j++) _solve(b, j);
for(j = 84370; j < 84380; j++) _solve(b, j);
for(j = 85210; j < 85220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 86050; j < 86060; j++) _solve(b, j);
for(j = 86890; j < 86900; j++) _solve(b, j);
for(j = 87730; j < 87740; j++) _solve(b, j);
for(j = 88570; j < 88580; j++) _solve(b, j);
for(j = 89410; j < 89420; j++) _solve(b, j);
for(j = 90250; j < 90260; j++) _solve(b, j);
for(j = 91090; j < 91100; j++) _solve(b, j);
for(j = 91930; j < 91940; j++) _solve(b, j);
for(j = 92770; j < 92780; j++) _solve(b, j);
for(j = 93610; j < 93620; j++) _solve(b, j);
for(j = 94450; j < 94460; j++) _solve(b, j);
for(j = 95290; j < 95300; j++) _solve(b, j);
for(j = 96130; j < 96140; j++) _solve(b, j);
for(j = 96970; j < 96980; j++) _solve(b, j);
for(j = 97810; j < 97820; j++) _solve(b, j);
for(j = 98650; j < 98660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 99490; j < 99500; j++) _solve(b, j);
for(j = 100330; j < 100340; j++) _solve(b, j);
for(j = 101170; j < 101180; j++) _solve(b, j);
for(j = 102010; j < 102020; j++) _solve(b, j);
for(j = 102850; j < 102860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 33140; j < 33150; j++) _solve(b, j);
for(j = 33980; j < 33990; j++) _solve(b, j);
for(j = 34820; j < 34830; j++) _solve(b, j);
for(j = 35660; j < 35670; j++) _solve(b, j);
for(j = 36500; j < 36510; j++) _solve(b, j);
for(j = 37340; j < 37350; j++) _solve(b, j);
for(j = 38180; j < 38190; j++) _solve(b, j);
for(j = 39020; j < 39030; j++) _solve(b, j);
for(j = 39860; j < 39870; j++) _solve(b, j);
for(j = 40700; j < 40710; j++) _solve(b, j);
for(j = 41540; j < 41550; j++) _solve(b, j);
for(j = 42380; j < 42390; j++) _solve(b, j);
for(j = 43220; j < 43230; j++) _solve(b, j);
for(j = 44060; j < 44070; j++) _solve(b, j);
for(j = 44900; j < 44910; j++) _solve(b, j);
for(j = 45740; j < 45750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 46580; j < 46590; j++) _solve(b, j);
for(j = 47420; j < 47430; j++) _solve(b, j);
for(j = 48260; j < 48270; j++) _solve(b, j);
for(j = 49100; j < 49110; j++) _solve(b, j);
for(j = 49940; j < 49950; j++) _solve(b, j);
for(j = 50780; j < 50790; j++) _solve(b, j);
for(j = 51620; j < 51630; j++) _solve(b, j);
for(j = 52460; j < 52470; j++) _solve(b, j);
for(j = 53300; j < 53310; j++) _solve(b, j);
for(j = 54140; j < 54150; j++) _solve(b, j);
for(j = 54980; j < 54990; j++) _solve(b, j);
for(j = 55820; j < 55830; j++) _solve(b, j);
for(j = 56660; j < 56670; j++) _solve(b, j);
for(j = 57500; j < 57510; j++) _solve(b, j);
for(j = 58340; j < 58350; j++) _solve(b, j);
for(j = 59180; j < 59190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 60020; j < 60030; j++) _solve(b, j);
for(j = 60860; j < 60870; j++) _solve(b, j);
for(j = 61700; j < 61710; j++) _solve(b, j);
for(j = 62540; j < 62550; j++) _solve(b, j);
for(j = 63380; j < 63390; j++) _solve(b, j);
for(j = 64220; j < 64230; j++) _solve(b, j);
for(j = 65060; j < 65070; j++) _solve(b, j);
for(j = 65900; j < 65910; j++) _solve(b, j);
for(j = 66740; j < 66750; j++) _solve(b, j);
for(j = 67580; j < 67590; j++) _solve(b, j);
for(j = 68420; j < 68430; j++) _solve(b, j);
for(j = 69260; j < 69270; j++) _solve(b, j);
for(j = 70100; j < 70110; j++) _solve(b, j);
for(j = 70940; j < 70950; j++) _solve(b, j);
for(j = 71780; j < 71790; j++) _solve(b, j);
for(j = 72620; j < 72630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 73460; j < 73470; j++) _solve(b, j);
for(j = 74300; j < 74310; j++) _solve(b, j);
for(j = 75140; j < 75150; j++) _solve(b, j);
for(j = 75980; j < 75990; j++) _solve(b, j);
for(j = 76820; j < 76830; j++) _solve(b, j);
for(j = 77660; j < 77670; j++) _solve(b, j);
for(j = 78500; j < 78510; j++) _solve(b, j);
for(j = 79340; j < 79350; j++) _solve(b, j);
for(j = 80180; j < 80190; j++) _solve(b, j);
for(j = 81020; j < 81030; j++) _solve(b, j);
for(j = 81860; j < 81870; j++) _solve(b, j);
for(j = 82700; j < 82710; j++) _solve(b, j);
for(j = 83540; j < 83550; j++) _solve(b, j);
for(j = 84380; j < 84390; j++) _solve(b, j);
for(j = 85220; j < 85230; j++) _solve(b, j);
for(j = 86060; j < 86070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 86900; j < 86910; j++) _solve(b, j);
for(j = 87740; j < 87750; j++) _solve(b, j);
for(j = 88580; j < 88590; j++) _solve(b, j);
for(j = 89420; j < 89430; j++) _solve(b, j);
for(j = 90260; j < 90270; j++) _solve(b, j);
for(j = 91100; j < 91110; j++) _solve(b, j);
for(j = 91940; j < 91950; j++) _solve(b, j);
for(j = 92780; j < 92790; j++) _solve(b, j);
for(j = 93620; j < 93630; j++) _solve(b, j);
for(j = 94460; j < 94470; j++) _solve(b, j);
for(j = 95300; j < 95310; j++) _solve(b, j);
for(j = 96140; j < 96150; j++) _solve(b, j);
for(j = 96980; j < 96990; j++) _solve(b, j);
for(j = 97820; j < 97830; j++) _solve(b, j);
for(j = 98660; j < 98670; j++) _solve(b, j);
for(j = 99500; j < 99510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 100340; j < 100350; j++) _solve(b, j);
for(j = 101180; j < 101190; j++) _solve(b, j);
for(j = 102020; j < 102030; j++) _solve(b, j);
for(j = 102860; j < 102870; j++) _solve(b, j);
for(j = 103700; j < 103710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 33990; j < 34000; j++) _solve(b, j);
for(j = 34830; j < 34840; j++) _solve(b, j);
for(j = 35670; j < 35680; j++) _solve(b, j);
for(j = 36510; j < 36520; j++) _solve(b, j);
for(j = 37350; j < 37360; j++) _solve(b, j);
for(j = 38190; j < 38200; j++) _solve(b, j);
for(j = 39030; j < 39040; j++) _solve(b, j);
for(j = 39870; j < 39880; j++) _solve(b, j);
for(j = 40710; j < 40720; j++) _solve(b, j);
for(j = 41550; j < 41560; j++) _solve(b, j);
for(j = 42390; j < 42400; j++) _solve(b, j);
for(j = 43230; j < 43240; j++) _solve(b, j);
for(j = 44070; j < 44080; j++) _solve(b, j);
for(j = 44910; j < 44920; j++) _solve(b, j);
for(j = 45750; j < 45760; j++) _solve(b, j);
for(j = 46590; j < 46600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 47430; j < 47440; j++) _solve(b, j);
for(j = 48270; j < 48280; j++) _solve(b, j);
for(j = 49110; j < 49120; j++) _solve(b, j);
for(j = 49950; j < 49960; j++) _solve(b, j);
for(j = 50790; j < 50800; j++) _solve(b, j);
for(j = 51630; j < 51640; j++) _solve(b, j);
for(j = 52470; j < 52480; j++) _solve(b, j);
for(j = 53310; j < 53320; j++) _solve(b, j);
for(j = 54150; j < 54160; j++) _solve(b, j);
for(j = 54990; j < 55000; j++) _solve(b, j);
for(j = 55830; j < 55840; j++) _solve(b, j);
for(j = 56670; j < 56680; j++) _solve(b, j);
for(j = 57510; j < 57520; j++) _solve(b, j);
for(j = 58350; j < 58360; j++) _solve(b, j);
for(j = 59190; j < 59200; j++) _solve(b, j);
for(j = 60030; j < 60040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 60870; j < 60880; j++) _solve(b, j);
for(j = 61710; j < 61720; j++) _solve(b, j);
for(j = 62550; j < 62560; j++) _solve(b, j);
for(j = 63390; j < 63400; j++) _solve(b, j);
for(j = 64230; j < 64240; j++) _solve(b, j);
for(j = 65070; j < 65080; j++) _solve(b, j);
for(j = 65910; j < 65920; j++) _solve(b, j);
for(j = 66750; j < 66760; j++) _solve(b, j);
for(j = 67590; j < 67600; j++) _solve(b, j);
for(j = 68430; j < 68440; j++) _solve(b, j);
for(j = 69270; j < 69280; j++) _solve(b, j);
for(j = 70110; j < 70120; j++) _solve(b, j);
for(j = 70950; j < 70960; j++) _solve(b, j);
for(j = 71790; j < 71800; j++) _solve(b, j);
for(j = 72630; j < 72640; j++) _solve(b, j);
for(j = 73470; j < 73480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 74310; j < 74320; j++) _solve(b, j);
for(j = 75150; j < 75160; j++) _solve(b, j);
for(j = 75990; j < 76000; j++) _solve(b, j);
for(j = 76830; j < 76840; j++) _solve(b, j);
for(j = 77670; j < 77680; j++) _solve(b, j);
for(j = 78510; j < 78520; j++) _solve(b, j);
for(j = 79350; j < 79360; j++) _solve(b, j);
for(j = 80190; j < 80200; j++) _solve(b, j);
for(j = 81030; j < 81040; j++) _solve(b, j);
for(j = 81870; j < 81880; j++) _solve(b, j);
for(j = 82710; j < 82720; j++) _solve(b, j);
for(j = 83550; j < 83560; j++) _solve(b, j);
for(j = 84390; j < 84400; j++) _solve(b, j);
for(j = 85230; j < 85240; j++) _solve(b, j);
for(j = 86070; j < 86080; j++) _solve(b, j);
for(j = 86910; j < 86920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 87750; j < 87760; j++) _solve(b, j);
for(j = 88590; j < 88600; j++) _solve(b, j);
for(j = 89430; j < 89440; j++) _solve(b, j);
for(j = 90270; j < 90280; j++) _solve(b, j);
for(j = 91110; j < 91120; j++) _solve(b, j);
for(j = 91950; j < 91960; j++) _solve(b, j);
for(j = 92790; j < 92800; j++) _solve(b, j);
for(j = 93630; j < 93640; j++) _solve(b, j);
for(j = 94470; j < 94480; j++) _solve(b, j);
for(j = 95310; j < 95320; j++) _solve(b, j);
for(j = 96150; j < 96160; j++) _solve(b, j);
for(j = 96990; j < 97000; j++) _solve(b, j);
for(j = 97830; j < 97840; j++) _solve(b, j);
for(j = 98670; j < 98680; j++) _solve(b, j);
for(j = 99510; j < 99520; j++) _solve(b, j);
for(j = 100350; j < 100360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 101190; j < 101200; j++) _solve(b, j);
for(j = 102030; j < 102040; j++) _solve(b, j);
for(j = 102870; j < 102880; j++) _solve(b, j);
for(j = 103710; j < 103720; j++) _solve(b, j);
for(j = 104550; j < 104560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 34840; j < 34850; j++) _solve(b, j);
for(j = 35680; j < 35690; j++) _solve(b, j);
for(j = 36520; j < 36530; j++) _solve(b, j);
for(j = 37360; j < 37370; j++) _solve(b, j);
for(j = 38200; j < 38210; j++) _solve(b, j);
for(j = 39040; j < 39050; j++) _solve(b, j);
for(j = 39880; j < 39890; j++) _solve(b, j);
for(j = 40720; j < 40730; j++) _solve(b, j);
for(j = 41560; j < 41570; j++) _solve(b, j);
for(j = 42400; j < 42410; j++) _solve(b, j);
for(j = 43240; j < 43250; j++) _solve(b, j);
for(j = 44080; j < 44090; j++) _solve(b, j);
for(j = 44920; j < 44930; j++) _solve(b, j);
for(j = 45760; j < 45770; j++) _solve(b, j);
for(j = 46600; j < 46610; j++) _solve(b, j);
for(j = 47440; j < 47450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 48280; j < 48290; j++) _solve(b, j);
for(j = 49120; j < 49130; j++) _solve(b, j);
for(j = 49960; j < 49970; j++) _solve(b, j);
for(j = 50800; j < 50810; j++) _solve(b, j);
for(j = 51640; j < 51650; j++) _solve(b, j);
for(j = 52480; j < 52490; j++) _solve(b, j);
for(j = 53320; j < 53330; j++) _solve(b, j);
for(j = 54160; j < 54170; j++) _solve(b, j);
for(j = 55000; j < 55010; j++) _solve(b, j);
for(j = 55840; j < 55850; j++) _solve(b, j);
for(j = 56680; j < 56690; j++) _solve(b, j);
for(j = 57520; j < 57530; j++) _solve(b, j);
for(j = 58360; j < 58370; j++) _solve(b, j);
for(j = 59200; j < 59210; j++) _solve(b, j);
for(j = 60040; j < 60050; j++) _solve(b, j);
for(j = 60880; j < 60890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 61720; j < 61730; j++) _solve(b, j);
for(j = 62560; j < 62570; j++) _solve(b, j);
for(j = 63400; j < 63410; j++) _solve(b, j);
for(j = 64240; j < 64250; j++) _solve(b, j);
for(j = 65080; j < 65090; j++) _solve(b, j);
for(j = 65920; j < 65930; j++) _solve(b, j);
for(j = 66760; j < 66770; j++) _solve(b, j);
for(j = 67600; j < 67610; j++) _solve(b, j);
for(j = 68440; j < 68450; j++) _solve(b, j);
for(j = 69280; j < 69290; j++) _solve(b, j);
for(j = 70120; j < 70130; j++) _solve(b, j);
for(j = 70960; j < 70970; j++) _solve(b, j);
for(j = 71800; j < 71810; j++) _solve(b, j);
for(j = 72640; j < 72650; j++) _solve(b, j);
for(j = 73480; j < 73490; j++) _solve(b, j);
for(j = 74320; j < 74330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 75160; j < 75170; j++) _solve(b, j);
for(j = 76000; j < 76010; j++) _solve(b, j);
for(j = 76840; j < 76850; j++) _solve(b, j);
for(j = 77680; j < 77690; j++) _solve(b, j);
for(j = 78520; j < 78530; j++) _solve(b, j);
for(j = 79360; j < 79370; j++) _solve(b, j);
for(j = 80200; j < 80210; j++) _solve(b, j);
for(j = 81040; j < 81050; j++) _solve(b, j);
for(j = 81880; j < 81890; j++) _solve(b, j);
for(j = 82720; j < 82730; j++) _solve(b, j);
for(j = 83560; j < 83570; j++) _solve(b, j);
for(j = 84400; j < 84410; j++) _solve(b, j);
for(j = 85240; j < 85250; j++) _solve(b, j);
for(j = 86080; j < 86090; j++) _solve(b, j);
for(j = 86920; j < 86930; j++) _solve(b, j);
for(j = 87760; j < 87770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 88600; j < 88610; j++) _solve(b, j);
for(j = 89440; j < 89450; j++) _solve(b, j);
for(j = 90280; j < 90290; j++) _solve(b, j);
for(j = 91120; j < 91130; j++) _solve(b, j);
for(j = 91960; j < 91970; j++) _solve(b, j);
for(j = 92800; j < 92810; j++) _solve(b, j);
for(j = 93640; j < 93650; j++) _solve(b, j);
for(j = 94480; j < 94490; j++) _solve(b, j);
for(j = 95320; j < 95330; j++) _solve(b, j);
for(j = 96160; j < 96170; j++) _solve(b, j);
for(j = 97000; j < 97010; j++) _solve(b, j);
for(j = 97840; j < 97850; j++) _solve(b, j);
for(j = 98680; j < 98690; j++) _solve(b, j);
for(j = 99520; j < 99530; j++) _solve(b, j);
for(j = 100360; j < 100370; j++) _solve(b, j);
for(j = 101200; j < 101210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 102040; j < 102050; j++) _solve(b, j);
for(j = 102880; j < 102890; j++) _solve(b, j);
for(j = 103720; j < 103730; j++) _solve(b, j);
for(j = 104560; j < 104570; j++) _solve(b, j);
for(j = 105400; j < 105410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 35690; j < 35700; j++) _solve(b, j);
for(j = 36530; j < 36540; j++) _solve(b, j);
for(j = 37370; j < 37380; j++) _solve(b, j);
for(j = 38210; j < 38220; j++) _solve(b, j);
for(j = 39050; j < 39060; j++) _solve(b, j);
for(j = 39890; j < 39900; j++) _solve(b, j);
for(j = 40730; j < 40740; j++) _solve(b, j);
for(j = 41570; j < 41580; j++) _solve(b, j);
for(j = 42410; j < 42420; j++) _solve(b, j);
for(j = 43250; j < 43260; j++) _solve(b, j);
for(j = 44090; j < 44100; j++) _solve(b, j);
for(j = 44930; j < 44940; j++) _solve(b, j);
for(j = 45770; j < 45780; j++) _solve(b, j);
for(j = 46610; j < 46620; j++) _solve(b, j);
for(j = 47450; j < 47460; j++) _solve(b, j);
for(j = 48290; j < 48300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 49130; j < 49140; j++) _solve(b, j);
for(j = 49970; j < 49980; j++) _solve(b, j);
for(j = 50810; j < 50820; j++) _solve(b, j);
for(j = 51650; j < 51660; j++) _solve(b, j);
for(j = 52490; j < 52500; j++) _solve(b, j);
for(j = 53330; j < 53340; j++) _solve(b, j);
for(j = 54170; j < 54180; j++) _solve(b, j);
for(j = 55010; j < 55020; j++) _solve(b, j);
for(j = 55850; j < 55860; j++) _solve(b, j);
for(j = 56690; j < 56700; j++) _solve(b, j);
for(j = 57530; j < 57540; j++) _solve(b, j);
for(j = 58370; j < 58380; j++) _solve(b, j);
for(j = 59210; j < 59220; j++) _solve(b, j);
for(j = 60050; j < 60060; j++) _solve(b, j);
for(j = 60890; j < 60900; j++) _solve(b, j);
for(j = 61730; j < 61740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 62570; j < 62580; j++) _solve(b, j);
for(j = 63410; j < 63420; j++) _solve(b, j);
for(j = 64250; j < 64260; j++) _solve(b, j);
for(j = 65090; j < 65100; j++) _solve(b, j);
for(j = 65930; j < 65940; j++) _solve(b, j);
for(j = 66770; j < 66780; j++) _solve(b, j);
for(j = 67610; j < 67620; j++) _solve(b, j);
for(j = 68450; j < 68460; j++) _solve(b, j);
for(j = 69290; j < 69300; j++) _solve(b, j);
for(j = 70130; j < 70140; j++) _solve(b, j);
for(j = 70970; j < 70980; j++) _solve(b, j);
for(j = 71810; j < 71820; j++) _solve(b, j);
for(j = 72650; j < 72660; j++) _solve(b, j);
for(j = 73490; j < 73500; j++) _solve(b, j);
for(j = 74330; j < 74340; j++) _solve(b, j);
for(j = 75170; j < 75180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 76010; j < 76020; j++) _solve(b, j);
for(j = 76850; j < 76860; j++) _solve(b, j);
for(j = 77690; j < 77700; j++) _solve(b, j);
for(j = 78530; j < 78540; j++) _solve(b, j);
for(j = 79370; j < 79380; j++) _solve(b, j);
for(j = 80210; j < 80220; j++) _solve(b, j);
for(j = 81050; j < 81060; j++) _solve(b, j);
for(j = 81890; j < 81900; j++) _solve(b, j);
for(j = 82730; j < 82740; j++) _solve(b, j);
for(j = 83570; j < 83580; j++) _solve(b, j);
for(j = 84410; j < 84420; j++) _solve(b, j);
for(j = 85250; j < 85260; j++) _solve(b, j);
for(j = 86090; j < 86100; j++) _solve(b, j);
for(j = 86930; j < 86940; j++) _solve(b, j);
for(j = 87770; j < 87780; j++) _solve(b, j);
for(j = 88610; j < 88620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 89450; j < 89460; j++) _solve(b, j);
for(j = 90290; j < 90300; j++) _solve(b, j);
for(j = 91130; j < 91140; j++) _solve(b, j);
for(j = 91970; j < 91980; j++) _solve(b, j);
for(j = 92810; j < 92820; j++) _solve(b, j);
for(j = 93650; j < 93660; j++) _solve(b, j);
for(j = 94490; j < 94500; j++) _solve(b, j);
for(j = 95330; j < 95340; j++) _solve(b, j);
for(j = 96170; j < 96180; j++) _solve(b, j);
for(j = 97010; j < 97020; j++) _solve(b, j);
for(j = 97850; j < 97860; j++) _solve(b, j);
for(j = 98690; j < 98700; j++) _solve(b, j);
for(j = 99530; j < 99540; j++) _solve(b, j);
for(j = 100370; j < 100380; j++) _solve(b, j);
for(j = 101210; j < 101220; j++) _solve(b, j);
for(j = 102050; j < 102060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 102890; j < 102900; j++) _solve(b, j);
for(j = 103730; j < 103740; j++) _solve(b, j);
for(j = 104570; j < 104580; j++) _solve(b, j);
for(j = 105410; j < 105420; j++) _solve(b, j);
for(j = 106250; j < 106260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 36540; j < 36550; j++) _solve(b, j);
for(j = 37380; j < 37390; j++) _solve(b, j);
for(j = 38220; j < 38230; j++) _solve(b, j);
for(j = 39060; j < 39070; j++) _solve(b, j);
for(j = 39900; j < 39910; j++) _solve(b, j);
for(j = 40740; j < 40750; j++) _solve(b, j);
for(j = 41580; j < 41590; j++) _solve(b, j);
for(j = 42420; j < 42430; j++) _solve(b, j);
for(j = 43260; j < 43270; j++) _solve(b, j);
for(j = 44100; j < 44110; j++) _solve(b, j);
for(j = 44940; j < 44950; j++) _solve(b, j);
for(j = 45780; j < 45790; j++) _solve(b, j);
for(j = 46620; j < 46630; j++) _solve(b, j);
for(j = 47460; j < 47470; j++) _solve(b, j);
for(j = 48300; j < 48310; j++) _solve(b, j);
for(j = 49140; j < 49150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 49980; j < 49990; j++) _solve(b, j);
for(j = 50820; j < 50830; j++) _solve(b, j);
for(j = 51660; j < 51670; j++) _solve(b, j);
for(j = 52500; j < 52510; j++) _solve(b, j);
for(j = 53340; j < 53350; j++) _solve(b, j);
for(j = 54180; j < 54190; j++) _solve(b, j);
for(j = 55020; j < 55030; j++) _solve(b, j);
for(j = 55860; j < 55870; j++) _solve(b, j);
for(j = 56700; j < 56710; j++) _solve(b, j);
for(j = 57540; j < 57550; j++) _solve(b, j);
for(j = 58380; j < 58390; j++) _solve(b, j);
for(j = 59220; j < 59230; j++) _solve(b, j);
for(j = 60060; j < 60070; j++) _solve(b, j);
for(j = 60900; j < 60910; j++) _solve(b, j);
for(j = 61740; j < 61750; j++) _solve(b, j);
for(j = 62580; j < 62590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 63420; j < 63430; j++) _solve(b, j);
for(j = 64260; j < 64270; j++) _solve(b, j);
for(j = 65100; j < 65110; j++) _solve(b, j);
for(j = 65940; j < 65950; j++) _solve(b, j);
for(j = 66780; j < 66790; j++) _solve(b, j);
for(j = 67620; j < 67630; j++) _solve(b, j);
for(j = 68460; j < 68470; j++) _solve(b, j);
for(j = 69300; j < 69310; j++) _solve(b, j);
for(j = 70140; j < 70150; j++) _solve(b, j);
for(j = 70980; j < 70990; j++) _solve(b, j);
for(j = 71820; j < 71830; j++) _solve(b, j);
for(j = 72660; j < 72670; j++) _solve(b, j);
for(j = 73500; j < 73510; j++) _solve(b, j);
for(j = 74340; j < 74350; j++) _solve(b, j);
for(j = 75180; j < 75190; j++) _solve(b, j);
for(j = 76020; j < 76030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 76860; j < 76870; j++) _solve(b, j);
for(j = 77700; j < 77710; j++) _solve(b, j);
for(j = 78540; j < 78550; j++) _solve(b, j);
for(j = 79380; j < 79390; j++) _solve(b, j);
for(j = 80220; j < 80230; j++) _solve(b, j);
for(j = 81060; j < 81070; j++) _solve(b, j);
for(j = 81900; j < 81910; j++) _solve(b, j);
for(j = 82740; j < 82750; j++) _solve(b, j);
for(j = 83580; j < 83590; j++) _solve(b, j);
for(j = 84420; j < 84430; j++) _solve(b, j);
for(j = 85260; j < 85270; j++) _solve(b, j);
for(j = 86100; j < 86110; j++) _solve(b, j);
for(j = 86940; j < 86950; j++) _solve(b, j);
for(j = 87780; j < 87790; j++) _solve(b, j);
for(j = 88620; j < 88630; j++) _solve(b, j);
for(j = 89460; j < 89470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 90300; j < 90310; j++) _solve(b, j);
for(j = 91140; j < 91150; j++) _solve(b, j);
for(j = 91980; j < 91990; j++) _solve(b, j);
for(j = 92820; j < 92830; j++) _solve(b, j);
for(j = 93660; j < 93670; j++) _solve(b, j);
for(j = 94500; j < 94510; j++) _solve(b, j);
for(j = 95340; j < 95350; j++) _solve(b, j);
for(j = 96180; j < 96190; j++) _solve(b, j);
for(j = 97020; j < 97030; j++) _solve(b, j);
for(j = 97860; j < 97870; j++) _solve(b, j);
for(j = 98700; j < 98710; j++) _solve(b, j);
for(j = 99540; j < 99550; j++) _solve(b, j);
for(j = 100380; j < 100390; j++) _solve(b, j);
for(j = 101220; j < 101230; j++) _solve(b, j);
for(j = 102060; j < 102070; j++) _solve(b, j);
for(j = 102900; j < 102910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 103740; j < 103750; j++) _solve(b, j);
for(j = 104580; j < 104590; j++) _solve(b, j);
for(j = 105420; j < 105430; j++) _solve(b, j);
for(j = 106260; j < 106270; j++) _solve(b, j);
for(j = 107100; j < 107110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 37390; j < 37400; j++) _solve(b, j);
for(j = 38230; j < 38240; j++) _solve(b, j);
for(j = 39070; j < 39080; j++) _solve(b, j);
for(j = 39910; j < 39920; j++) _solve(b, j);
for(j = 40750; j < 40760; j++) _solve(b, j);
for(j = 41590; j < 41600; j++) _solve(b, j);
for(j = 42430; j < 42440; j++) _solve(b, j);
for(j = 43270; j < 43280; j++) _solve(b, j);
for(j = 44110; j < 44120; j++) _solve(b, j);
for(j = 44950; j < 44960; j++) _solve(b, j);
for(j = 45790; j < 45800; j++) _solve(b, j);
for(j = 46630; j < 46640; j++) _solve(b, j);
for(j = 47470; j < 47480; j++) _solve(b, j);
for(j = 48310; j < 48320; j++) _solve(b, j);
for(j = 49150; j < 49160; j++) _solve(b, j);
for(j = 49990; j < 50000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 50830; j < 50840; j++) _solve(b, j);
for(j = 51670; j < 51680; j++) _solve(b, j);
for(j = 52510; j < 52520; j++) _solve(b, j);
for(j = 53350; j < 53360; j++) _solve(b, j);
for(j = 54190; j < 54200; j++) _solve(b, j);
for(j = 55030; j < 55040; j++) _solve(b, j);
for(j = 55870; j < 55880; j++) _solve(b, j);
for(j = 56710; j < 56720; j++) _solve(b, j);
for(j = 57550; j < 57560; j++) _solve(b, j);
for(j = 58390; j < 58400; j++) _solve(b, j);
for(j = 59230; j < 59240; j++) _solve(b, j);
for(j = 60070; j < 60080; j++) _solve(b, j);
for(j = 60910; j < 60920; j++) _solve(b, j);
for(j = 61750; j < 61760; j++) _solve(b, j);
for(j = 62590; j < 62600; j++) _solve(b, j);
for(j = 63430; j < 63440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 64270; j < 64280; j++) _solve(b, j);
for(j = 65110; j < 65120; j++) _solve(b, j);
for(j = 65950; j < 65960; j++) _solve(b, j);
for(j = 66790; j < 66800; j++) _solve(b, j);
for(j = 67630; j < 67640; j++) _solve(b, j);
for(j = 68470; j < 68480; j++) _solve(b, j);
for(j = 69310; j < 69320; j++) _solve(b, j);
for(j = 70150; j < 70160; j++) _solve(b, j);
for(j = 70990; j < 71000; j++) _solve(b, j);
for(j = 71830; j < 71840; j++) _solve(b, j);
for(j = 72670; j < 72680; j++) _solve(b, j);
for(j = 73510; j < 73520; j++) _solve(b, j);
for(j = 74350; j < 74360; j++) _solve(b, j);
for(j = 75190; j < 75200; j++) _solve(b, j);
for(j = 76030; j < 76040; j++) _solve(b, j);
for(j = 76870; j < 76880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 77710; j < 77720; j++) _solve(b, j);
for(j = 78550; j < 78560; j++) _solve(b, j);
for(j = 79390; j < 79400; j++) _solve(b, j);
for(j = 80230; j < 80240; j++) _solve(b, j);
for(j = 81070; j < 81080; j++) _solve(b, j);
for(j = 81910; j < 81920; j++) _solve(b, j);
for(j = 82750; j < 82760; j++) _solve(b, j);
for(j = 83590; j < 83600; j++) _solve(b, j);
for(j = 84430; j < 84440; j++) _solve(b, j);
for(j = 85270; j < 85280; j++) _solve(b, j);
for(j = 86110; j < 86120; j++) _solve(b, j);
for(j = 86950; j < 86960; j++) _solve(b, j);
for(j = 87790; j < 87800; j++) _solve(b, j);
for(j = 88630; j < 88640; j++) _solve(b, j);
for(j = 89470; j < 89480; j++) _solve(b, j);
for(j = 90310; j < 90320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 91150; j < 91160; j++) _solve(b, j);
for(j = 91990; j < 92000; j++) _solve(b, j);
for(j = 92830; j < 92840; j++) _solve(b, j);
for(j = 93670; j < 93680; j++) _solve(b, j);
for(j = 94510; j < 94520; j++) _solve(b, j);
for(j = 95350; j < 95360; j++) _solve(b, j);
for(j = 96190; j < 96200; j++) _solve(b, j);
for(j = 97030; j < 97040; j++) _solve(b, j);
for(j = 97870; j < 97880; j++) _solve(b, j);
for(j = 98710; j < 98720; j++) _solve(b, j);
for(j = 99550; j < 99560; j++) _solve(b, j);
for(j = 100390; j < 100400; j++) _solve(b, j);
for(j = 101230; j < 101240; j++) _solve(b, j);
for(j = 102070; j < 102080; j++) _solve(b, j);
for(j = 102910; j < 102920; j++) _solve(b, j);
for(j = 103750; j < 103760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 104590; j < 104600; j++) _solve(b, j);
for(j = 105430; j < 105440; j++) _solve(b, j);
for(j = 106270; j < 106280; j++) _solve(b, j);
for(j = 107110; j < 107120; j++) _solve(b, j);
for(j = 107950; j < 107960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 38240; j < 38250; j++) _solve(b, j);
for(j = 39080; j < 39090; j++) _solve(b, j);
for(j = 39920; j < 39930; j++) _solve(b, j);
for(j = 40760; j < 40770; j++) _solve(b, j);
for(j = 41600; j < 41610; j++) _solve(b, j);
for(j = 42440; j < 42450; j++) _solve(b, j);
for(j = 43280; j < 43290; j++) _solve(b, j);
for(j = 44120; j < 44130; j++) _solve(b, j);
for(j = 44960; j < 44970; j++) _solve(b, j);
for(j = 45800; j < 45810; j++) _solve(b, j);
for(j = 46640; j < 46650; j++) _solve(b, j);
for(j = 47480; j < 47490; j++) _solve(b, j);
for(j = 48320; j < 48330; j++) _solve(b, j);
for(j = 49160; j < 49170; j++) _solve(b, j);
for(j = 50000; j < 50010; j++) _solve(b, j);
for(j = 50840; j < 50850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 51680; j < 51690; j++) _solve(b, j);
for(j = 52520; j < 52530; j++) _solve(b, j);
for(j = 53360; j < 53370; j++) _solve(b, j);
for(j = 54200; j < 54210; j++) _solve(b, j);
for(j = 55040; j < 55050; j++) _solve(b, j);
for(j = 55880; j < 55890; j++) _solve(b, j);
for(j = 56720; j < 56730; j++) _solve(b, j);
for(j = 57560; j < 57570; j++) _solve(b, j);
for(j = 58400; j < 58410; j++) _solve(b, j);
for(j = 59240; j < 59250; j++) _solve(b, j);
for(j = 60080; j < 60090; j++) _solve(b, j);
for(j = 60920; j < 60930; j++) _solve(b, j);
for(j = 61760; j < 61770; j++) _solve(b, j);
for(j = 62600; j < 62610; j++) _solve(b, j);
for(j = 63440; j < 63450; j++) _solve(b, j);
for(j = 64280; j < 64290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 65120; j < 65130; j++) _solve(b, j);
for(j = 65960; j < 65970; j++) _solve(b, j);
for(j = 66800; j < 66810; j++) _solve(b, j);
for(j = 67640; j < 67650; j++) _solve(b, j);
for(j = 68480; j < 68490; j++) _solve(b, j);
for(j = 69320; j < 69330; j++) _solve(b, j);
for(j = 70160; j < 70170; j++) _solve(b, j);
for(j = 71000; j < 71010; j++) _solve(b, j);
for(j = 71840; j < 71850; j++) _solve(b, j);
for(j = 72680; j < 72690; j++) _solve(b, j);
for(j = 73520; j < 73530; j++) _solve(b, j);
for(j = 74360; j < 74370; j++) _solve(b, j);
for(j = 75200; j < 75210; j++) _solve(b, j);
for(j = 76040; j < 76050; j++) _solve(b, j);
for(j = 76880; j < 76890; j++) _solve(b, j);
for(j = 77720; j < 77730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 78560; j < 78570; j++) _solve(b, j);
for(j = 79400; j < 79410; j++) _solve(b, j);
for(j = 80240; j < 80250; j++) _solve(b, j);
for(j = 81080; j < 81090; j++) _solve(b, j);
for(j = 81920; j < 81930; j++) _solve(b, j);
for(j = 82760; j < 82770; j++) _solve(b, j);
for(j = 83600; j < 83610; j++) _solve(b, j);
for(j = 84440; j < 84450; j++) _solve(b, j);
for(j = 85280; j < 85290; j++) _solve(b, j);
for(j = 86120; j < 86130; j++) _solve(b, j);
for(j = 86960; j < 86970; j++) _solve(b, j);
for(j = 87800; j < 87810; j++) _solve(b, j);
for(j = 88640; j < 88650; j++) _solve(b, j);
for(j = 89480; j < 89490; j++) _solve(b, j);
for(j = 90320; j < 90330; j++) _solve(b, j);
for(j = 91160; j < 91170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 92000; j < 92010; j++) _solve(b, j);
for(j = 92840; j < 92850; j++) _solve(b, j);
for(j = 93680; j < 93690; j++) _solve(b, j);
for(j = 94520; j < 94530; j++) _solve(b, j);
for(j = 95360; j < 95370; j++) _solve(b, j);
for(j = 96200; j < 96210; j++) _solve(b, j);
for(j = 97040; j < 97050; j++) _solve(b, j);
for(j = 97880; j < 97890; j++) _solve(b, j);
for(j = 98720; j < 98730; j++) _solve(b, j);
for(j = 99560; j < 99570; j++) _solve(b, j);
for(j = 100400; j < 100410; j++) _solve(b, j);
for(j = 101240; j < 101250; j++) _solve(b, j);
for(j = 102080; j < 102090; j++) _solve(b, j);
for(j = 102920; j < 102930; j++) _solve(b, j);
for(j = 103760; j < 103770; j++) _solve(b, j);
for(j = 104600; j < 104610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 105440; j < 105450; j++) _solve(b, j);
for(j = 106280; j < 106290; j++) _solve(b, j);
for(j = 107120; j < 107130; j++) _solve(b, j);
for(j = 107960; j < 107970; j++) _solve(b, j);
for(j = 108800; j < 108810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 39090; j < 39100; j++) _solve(b, j);
for(j = 39930; j < 39940; j++) _solve(b, j);
for(j = 40770; j < 40780; j++) _solve(b, j);
for(j = 41610; j < 41620; j++) _solve(b, j);
for(j = 42450; j < 42460; j++) _solve(b, j);
for(j = 43290; j < 43300; j++) _solve(b, j);
for(j = 44130; j < 44140; j++) _solve(b, j);
for(j = 44970; j < 44980; j++) _solve(b, j);
for(j = 45810; j < 45820; j++) _solve(b, j);
for(j = 46650; j < 46660; j++) _solve(b, j);
for(j = 47490; j < 47500; j++) _solve(b, j);
for(j = 48330; j < 48340; j++) _solve(b, j);
for(j = 49170; j < 49180; j++) _solve(b, j);
for(j = 50010; j < 50020; j++) _solve(b, j);
for(j = 50850; j < 50860; j++) _solve(b, j);
for(j = 51690; j < 51700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 52530; j < 52540; j++) _solve(b, j);
for(j = 53370; j < 53380; j++) _solve(b, j);
for(j = 54210; j < 54220; j++) _solve(b, j);
for(j = 55050; j < 55060; j++) _solve(b, j);
for(j = 55890; j < 55900; j++) _solve(b, j);
for(j = 56730; j < 56740; j++) _solve(b, j);
for(j = 57570; j < 57580; j++) _solve(b, j);
for(j = 58410; j < 58420; j++) _solve(b, j);
for(j = 59250; j < 59260; j++) _solve(b, j);
for(j = 60090; j < 60100; j++) _solve(b, j);
for(j = 60930; j < 60940; j++) _solve(b, j);
for(j = 61770; j < 61780; j++) _solve(b, j);
for(j = 62610; j < 62620; j++) _solve(b, j);
for(j = 63450; j < 63460; j++) _solve(b, j);
for(j = 64290; j < 64300; j++) _solve(b, j);
for(j = 65130; j < 65140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 65970; j < 65980; j++) _solve(b, j);
for(j = 66810; j < 66820; j++) _solve(b, j);
for(j = 67650; j < 67660; j++) _solve(b, j);
for(j = 68490; j < 68500; j++) _solve(b, j);
for(j = 69330; j < 69340; j++) _solve(b, j);
for(j = 70170; j < 70180; j++) _solve(b, j);
for(j = 71010; j < 71020; j++) _solve(b, j);
for(j = 71850; j < 71860; j++) _solve(b, j);
for(j = 72690; j < 72700; j++) _solve(b, j);
for(j = 73530; j < 73540; j++) _solve(b, j);
for(j = 74370; j < 74380; j++) _solve(b, j);
for(j = 75210; j < 75220; j++) _solve(b, j);
for(j = 76050; j < 76060; j++) _solve(b, j);
for(j = 76890; j < 76900; j++) _solve(b, j);
for(j = 77730; j < 77740; j++) _solve(b, j);
for(j = 78570; j < 78580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 79410; j < 79420; j++) _solve(b, j);
for(j = 80250; j < 80260; j++) _solve(b, j);
for(j = 81090; j < 81100; j++) _solve(b, j);
for(j = 81930; j < 81940; j++) _solve(b, j);
for(j = 82770; j < 82780; j++) _solve(b, j);
for(j = 83610; j < 83620; j++) _solve(b, j);
for(j = 84450; j < 84460; j++) _solve(b, j);
for(j = 85290; j < 85300; j++) _solve(b, j);
for(j = 86130; j < 86140; j++) _solve(b, j);
for(j = 86970; j < 86980; j++) _solve(b, j);
for(j = 87810; j < 87820; j++) _solve(b, j);
for(j = 88650; j < 88660; j++) _solve(b, j);
for(j = 89490; j < 89500; j++) _solve(b, j);
for(j = 90330; j < 90340; j++) _solve(b, j);
for(j = 91170; j < 91180; j++) _solve(b, j);
for(j = 92010; j < 92020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 92850; j < 92860; j++) _solve(b, j);
for(j = 93690; j < 93700; j++) _solve(b, j);
for(j = 94530; j < 94540; j++) _solve(b, j);
for(j = 95370; j < 95380; j++) _solve(b, j);
for(j = 96210; j < 96220; j++) _solve(b, j);
for(j = 97050; j < 97060; j++) _solve(b, j);
for(j = 97890; j < 97900; j++) _solve(b, j);
for(j = 98730; j < 98740; j++) _solve(b, j);
for(j = 99570; j < 99580; j++) _solve(b, j);
for(j = 100410; j < 100420; j++) _solve(b, j);
for(j = 101250; j < 101260; j++) _solve(b, j);
for(j = 102090; j < 102100; j++) _solve(b, j);
for(j = 102930; j < 102940; j++) _solve(b, j);
for(j = 103770; j < 103780; j++) _solve(b, j);
for(j = 104610; j < 104620; j++) _solve(b, j);
for(j = 105450; j < 105460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 106290; j < 106300; j++) _solve(b, j);
for(j = 107130; j < 107140; j++) _solve(b, j);
for(j = 107970; j < 107980; j++) _solve(b, j);
for(j = 108810; j < 108820; j++) _solve(b, j);
for(j = 109650; j < 109660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 39940; j < 39950; j++) _solve(b, j);
for(j = 40780; j < 40790; j++) _solve(b, j);
for(j = 41620; j < 41630; j++) _solve(b, j);
for(j = 42460; j < 42470; j++) _solve(b, j);
for(j = 43300; j < 43310; j++) _solve(b, j);
for(j = 44140; j < 44150; j++) _solve(b, j);
for(j = 44980; j < 44990; j++) _solve(b, j);
for(j = 45820; j < 45830; j++) _solve(b, j);
for(j = 46660; j < 46670; j++) _solve(b, j);
for(j = 47500; j < 47510; j++) _solve(b, j);
for(j = 48340; j < 48350; j++) _solve(b, j);
for(j = 49180; j < 49190; j++) _solve(b, j);
for(j = 50020; j < 50030; j++) _solve(b, j);
for(j = 50860; j < 50870; j++) _solve(b, j);
for(j = 51700; j < 51710; j++) _solve(b, j);
for(j = 52540; j < 52550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 53380; j < 53390; j++) _solve(b, j);
for(j = 54220; j < 54230; j++) _solve(b, j);
for(j = 55060; j < 55070; j++) _solve(b, j);
for(j = 55900; j < 55910; j++) _solve(b, j);
for(j = 56740; j < 56750; j++) _solve(b, j);
for(j = 57580; j < 57590; j++) _solve(b, j);
for(j = 58420; j < 58430; j++) _solve(b, j);
for(j = 59260; j < 59270; j++) _solve(b, j);
for(j = 60100; j < 60110; j++) _solve(b, j);
for(j = 60940; j < 60950; j++) _solve(b, j);
for(j = 61780; j < 61790; j++) _solve(b, j);
for(j = 62620; j < 62630; j++) _solve(b, j);
for(j = 63460; j < 63470; j++) _solve(b, j);
for(j = 64300; j < 64310; j++) _solve(b, j);
for(j = 65140; j < 65150; j++) _solve(b, j);
for(j = 65980; j < 65990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 66820; j < 66830; j++) _solve(b, j);
for(j = 67660; j < 67670; j++) _solve(b, j);
for(j = 68500; j < 68510; j++) _solve(b, j);
for(j = 69340; j < 69350; j++) _solve(b, j);
for(j = 70180; j < 70190; j++) _solve(b, j);
for(j = 71020; j < 71030; j++) _solve(b, j);
for(j = 71860; j < 71870; j++) _solve(b, j);
for(j = 72700; j < 72710; j++) _solve(b, j);
for(j = 73540; j < 73550; j++) _solve(b, j);
for(j = 74380; j < 74390; j++) _solve(b, j);
for(j = 75220; j < 75230; j++) _solve(b, j);
for(j = 76060; j < 76070; j++) _solve(b, j);
for(j = 76900; j < 76910; j++) _solve(b, j);
for(j = 77740; j < 77750; j++) _solve(b, j);
for(j = 78580; j < 78590; j++) _solve(b, j);
for(j = 79420; j < 79430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 80260; j < 80270; j++) _solve(b, j);
for(j = 81100; j < 81110; j++) _solve(b, j);
for(j = 81940; j < 81950; j++) _solve(b, j);
for(j = 82780; j < 82790; j++) _solve(b, j);
for(j = 83620; j < 83630; j++) _solve(b, j);
for(j = 84460; j < 84470; j++) _solve(b, j);
for(j = 85300; j < 85310; j++) _solve(b, j);
for(j = 86140; j < 86150; j++) _solve(b, j);
for(j = 86980; j < 86990; j++) _solve(b, j);
for(j = 87820; j < 87830; j++) _solve(b, j);
for(j = 88660; j < 88670; j++) _solve(b, j);
for(j = 89500; j < 89510; j++) _solve(b, j);
for(j = 90340; j < 90350; j++) _solve(b, j);
for(j = 91180; j < 91190; j++) _solve(b, j);
for(j = 92020; j < 92030; j++) _solve(b, j);
for(j = 92860; j < 92870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 93700; j < 93710; j++) _solve(b, j);
for(j = 94540; j < 94550; j++) _solve(b, j);
for(j = 95380; j < 95390; j++) _solve(b, j);
for(j = 96220; j < 96230; j++) _solve(b, j);
for(j = 97060; j < 97070; j++) _solve(b, j);
for(j = 97900; j < 97910; j++) _solve(b, j);
for(j = 98740; j < 98750; j++) _solve(b, j);
for(j = 99580; j < 99590; j++) _solve(b, j);
for(j = 100420; j < 100430; j++) _solve(b, j);
for(j = 101260; j < 101270; j++) _solve(b, j);
for(j = 102100; j < 102110; j++) _solve(b, j);
for(j = 102940; j < 102950; j++) _solve(b, j);
for(j = 103780; j < 103790; j++) _solve(b, j);
for(j = 104620; j < 104630; j++) _solve(b, j);
for(j = 105460; j < 105470; j++) _solve(b, j);
for(j = 106300; j < 106310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 107140; j < 107150; j++) _solve(b, j);
for(j = 107980; j < 107990; j++) _solve(b, j);
for(j = 108820; j < 108830; j++) _solve(b, j);
for(j = 109660; j < 109670; j++) _solve(b, j);
for(j = 110500; j < 110510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 40790; j < 40800; j++) _solve(b, j);
for(j = 41630; j < 41640; j++) _solve(b, j);
for(j = 42470; j < 42480; j++) _solve(b, j);
for(j = 43310; j < 43320; j++) _solve(b, j);
for(j = 44150; j < 44160; j++) _solve(b, j);
for(j = 44990; j < 45000; j++) _solve(b, j);
for(j = 45830; j < 45840; j++) _solve(b, j);
for(j = 46670; j < 46680; j++) _solve(b, j);
for(j = 47510; j < 47520; j++) _solve(b, j);
for(j = 48350; j < 48360; j++) _solve(b, j);
for(j = 49190; j < 49200; j++) _solve(b, j);
for(j = 50030; j < 50040; j++) _solve(b, j);
for(j = 50870; j < 50880; j++) _solve(b, j);
for(j = 51710; j < 51720; j++) _solve(b, j);
for(j = 52550; j < 52560; j++) _solve(b, j);
for(j = 53390; j < 53400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 54230; j < 54240; j++) _solve(b, j);
for(j = 55070; j < 55080; j++) _solve(b, j);
for(j = 55910; j < 55920; j++) _solve(b, j);
for(j = 56750; j < 56760; j++) _solve(b, j);
for(j = 57590; j < 57600; j++) _solve(b, j);
for(j = 58430; j < 58440; j++) _solve(b, j);
for(j = 59270; j < 59280; j++) _solve(b, j);
for(j = 60110; j < 60120; j++) _solve(b, j);
for(j = 60950; j < 60960; j++) _solve(b, j);
for(j = 61790; j < 61800; j++) _solve(b, j);
for(j = 62630; j < 62640; j++) _solve(b, j);
for(j = 63470; j < 63480; j++) _solve(b, j);
for(j = 64310; j < 64320; j++) _solve(b, j);
for(j = 65150; j < 65160; j++) _solve(b, j);
for(j = 65990; j < 66000; j++) _solve(b, j);
for(j = 66830; j < 66840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 67670; j < 67680; j++) _solve(b, j);
for(j = 68510; j < 68520; j++) _solve(b, j);
for(j = 69350; j < 69360; j++) _solve(b, j);
for(j = 70190; j < 70200; j++) _solve(b, j);
for(j = 71030; j < 71040; j++) _solve(b, j);
for(j = 71870; j < 71880; j++) _solve(b, j);
for(j = 72710; j < 72720; j++) _solve(b, j);
for(j = 73550; j < 73560; j++) _solve(b, j);
for(j = 74390; j < 74400; j++) _solve(b, j);
for(j = 75230; j < 75240; j++) _solve(b, j);
for(j = 76070; j < 76080; j++) _solve(b, j);
for(j = 76910; j < 76920; j++) _solve(b, j);
for(j = 77750; j < 77760; j++) _solve(b, j);
for(j = 78590; j < 78600; j++) _solve(b, j);
for(j = 79430; j < 79440; j++) _solve(b, j);
for(j = 80270; j < 80280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 81110; j < 81120; j++) _solve(b, j);
for(j = 81950; j < 81960; j++) _solve(b, j);
for(j = 82790; j < 82800; j++) _solve(b, j);
for(j = 83630; j < 83640; j++) _solve(b, j);
for(j = 84470; j < 84480; j++) _solve(b, j);
for(j = 85310; j < 85320; j++) _solve(b, j);
for(j = 86150; j < 86160; j++) _solve(b, j);
for(j = 86990; j < 87000; j++) _solve(b, j);
for(j = 87830; j < 87840; j++) _solve(b, j);
for(j = 88670; j < 88680; j++) _solve(b, j);
for(j = 89510; j < 89520; j++) _solve(b, j);
for(j = 90350; j < 90360; j++) _solve(b, j);
for(j = 91190; j < 91200; j++) _solve(b, j);
for(j = 92030; j < 92040; j++) _solve(b, j);
for(j = 92870; j < 92880; j++) _solve(b, j);
for(j = 93710; j < 93720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 94550; j < 94560; j++) _solve(b, j);
for(j = 95390; j < 95400; j++) _solve(b, j);
for(j = 96230; j < 96240; j++) _solve(b, j);
for(j = 97070; j < 97080; j++) _solve(b, j);
for(j = 97910; j < 97920; j++) _solve(b, j);
for(j = 98750; j < 98760; j++) _solve(b, j);
for(j = 99590; j < 99600; j++) _solve(b, j);
for(j = 100430; j < 100440; j++) _solve(b, j);
for(j = 101270; j < 101280; j++) _solve(b, j);
for(j = 102110; j < 102120; j++) _solve(b, j);
for(j = 102950; j < 102960; j++) _solve(b, j);
for(j = 103790; j < 103800; j++) _solve(b, j);
for(j = 104630; j < 104640; j++) _solve(b, j);
for(j = 105470; j < 105480; j++) _solve(b, j);
for(j = 106310; j < 106320; j++) _solve(b, j);
for(j = 107150; j < 107160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 107990; j < 108000; j++) _solve(b, j);
for(j = 108830; j < 108840; j++) _solve(b, j);
for(j = 109670; j < 109680; j++) _solve(b, j);
for(j = 110510; j < 110520; j++) _solve(b, j);
for(j = 111350; j < 111360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 41640; j < 41650; j++) _solve(b, j);
for(j = 42480; j < 42490; j++) _solve(b, j);
for(j = 43320; j < 43330; j++) _solve(b, j);
for(j = 44160; j < 44170; j++) _solve(b, j);
for(j = 45000; j < 45010; j++) _solve(b, j);
for(j = 45840; j < 45850; j++) _solve(b, j);
for(j = 46680; j < 46690; j++) _solve(b, j);
for(j = 47520; j < 47530; j++) _solve(b, j);
for(j = 48360; j < 48370; j++) _solve(b, j);
for(j = 49200; j < 49210; j++) _solve(b, j);
for(j = 50040; j < 50050; j++) _solve(b, j);
for(j = 50880; j < 50890; j++) _solve(b, j);
for(j = 51720; j < 51730; j++) _solve(b, j);
for(j = 52560; j < 52570; j++) _solve(b, j);
for(j = 53400; j < 53410; j++) _solve(b, j);
for(j = 54240; j < 54250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 55080; j < 55090; j++) _solve(b, j);
for(j = 55920; j < 55930; j++) _solve(b, j);
for(j = 56760; j < 56770; j++) _solve(b, j);
for(j = 57600; j < 57610; j++) _solve(b, j);
for(j = 58440; j < 58450; j++) _solve(b, j);
for(j = 59280; j < 59290; j++) _solve(b, j);
for(j = 60120; j < 60130; j++) _solve(b, j);
for(j = 60960; j < 60970; j++) _solve(b, j);
for(j = 61800; j < 61810; j++) _solve(b, j);
for(j = 62640; j < 62650; j++) _solve(b, j);
for(j = 63480; j < 63490; j++) _solve(b, j);
for(j = 64320; j < 64330; j++) _solve(b, j);
for(j = 65160; j < 65170; j++) _solve(b, j);
for(j = 66000; j < 66010; j++) _solve(b, j);
for(j = 66840; j < 66850; j++) _solve(b, j);
for(j = 67680; j < 67690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 68520; j < 68530; j++) _solve(b, j);
for(j = 69360; j < 69370; j++) _solve(b, j);
for(j = 70200; j < 70210; j++) _solve(b, j);
for(j = 71040; j < 71050; j++) _solve(b, j);
for(j = 71880; j < 71890; j++) _solve(b, j);
for(j = 72720; j < 72730; j++) _solve(b, j);
for(j = 73560; j < 73570; j++) _solve(b, j);
for(j = 74400; j < 74410; j++) _solve(b, j);
for(j = 75240; j < 75250; j++) _solve(b, j);
for(j = 76080; j < 76090; j++) _solve(b, j);
for(j = 76920; j < 76930; j++) _solve(b, j);
for(j = 77760; j < 77770; j++) _solve(b, j);
for(j = 78600; j < 78610; j++) _solve(b, j);
for(j = 79440; j < 79450; j++) _solve(b, j);
for(j = 80280; j < 80290; j++) _solve(b, j);
for(j = 81120; j < 81130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 81960; j < 81970; j++) _solve(b, j);
for(j = 82800; j < 82810; j++) _solve(b, j);
for(j = 83640; j < 83650; j++) _solve(b, j);
for(j = 84480; j < 84490; j++) _solve(b, j);
for(j = 85320; j < 85330; j++) _solve(b, j);
for(j = 86160; j < 86170; j++) _solve(b, j);
for(j = 87000; j < 87010; j++) _solve(b, j);
for(j = 87840; j < 87850; j++) _solve(b, j);
for(j = 88680; j < 88690; j++) _solve(b, j);
for(j = 89520; j < 89530; j++) _solve(b, j);
for(j = 90360; j < 90370; j++) _solve(b, j);
for(j = 91200; j < 91210; j++) _solve(b, j);
for(j = 92040; j < 92050; j++) _solve(b, j);
for(j = 92880; j < 92890; j++) _solve(b, j);
for(j = 93720; j < 93730; j++) _solve(b, j);
for(j = 94560; j < 94570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 95400; j < 95410; j++) _solve(b, j);
for(j = 96240; j < 96250; j++) _solve(b, j);
for(j = 97080; j < 97090; j++) _solve(b, j);
for(j = 97920; j < 97930; j++) _solve(b, j);
for(j = 98760; j < 98770; j++) _solve(b, j);
for(j = 99600; j < 99610; j++) _solve(b, j);
for(j = 100440; j < 100450; j++) _solve(b, j);
for(j = 101280; j < 101290; j++) _solve(b, j);
for(j = 102120; j < 102130; j++) _solve(b, j);
for(j = 102960; j < 102970; j++) _solve(b, j);
for(j = 103800; j < 103810; j++) _solve(b, j);
for(j = 104640; j < 104650; j++) _solve(b, j);
for(j = 105480; j < 105490; j++) _solve(b, j);
for(j = 106320; j < 106330; j++) _solve(b, j);
for(j = 107160; j < 107170; j++) _solve(b, j);
for(j = 108000; j < 108010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 108840; j < 108850; j++) _solve(b, j);
for(j = 109680; j < 109690; j++) _solve(b, j);
for(j = 110520; j < 110530; j++) _solve(b, j);
for(j = 111360; j < 111370; j++) _solve(b, j);
for(j = 112200; j < 112210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 42490; j < 42500; j++) _solve(b, j);
for(j = 43330; j < 43340; j++) _solve(b, j);
for(j = 44170; j < 44180; j++) _solve(b, j);
for(j = 45010; j < 45020; j++) _solve(b, j);
for(j = 45850; j < 45860; j++) _solve(b, j);
for(j = 46690; j < 46700; j++) _solve(b, j);
for(j = 47530; j < 47540; j++) _solve(b, j);
for(j = 48370; j < 48380; j++) _solve(b, j);
for(j = 49210; j < 49220; j++) _solve(b, j);
for(j = 50050; j < 50060; j++) _solve(b, j);
for(j = 50890; j < 50900; j++) _solve(b, j);
for(j = 51730; j < 51740; j++) _solve(b, j);
for(j = 52570; j < 52580; j++) _solve(b, j);
for(j = 53410; j < 53420; j++) _solve(b, j);
for(j = 54250; j < 54260; j++) _solve(b, j);
for(j = 55090; j < 55100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 55930; j < 55940; j++) _solve(b, j);
for(j = 56770; j < 56780; j++) _solve(b, j);
for(j = 57610; j < 57620; j++) _solve(b, j);
for(j = 58450; j < 58460; j++) _solve(b, j);
for(j = 59290; j < 59300; j++) _solve(b, j);
for(j = 60130; j < 60140; j++) _solve(b, j);
for(j = 60970; j < 60980; j++) _solve(b, j);
for(j = 61810; j < 61820; j++) _solve(b, j);
for(j = 62650; j < 62660; j++) _solve(b, j);
for(j = 63490; j < 63500; j++) _solve(b, j);
for(j = 64330; j < 64340; j++) _solve(b, j);
for(j = 65170; j < 65180; j++) _solve(b, j);
for(j = 66010; j < 66020; j++) _solve(b, j);
for(j = 66850; j < 66860; j++) _solve(b, j);
for(j = 67690; j < 67700; j++) _solve(b, j);
for(j = 68530; j < 68540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 69370; j < 69380; j++) _solve(b, j);
for(j = 70210; j < 70220; j++) _solve(b, j);
for(j = 71050; j < 71060; j++) _solve(b, j);
for(j = 71890; j < 71900; j++) _solve(b, j);
for(j = 72730; j < 72740; j++) _solve(b, j);
for(j = 73570; j < 73580; j++) _solve(b, j);
for(j = 74410; j < 74420; j++) _solve(b, j);
for(j = 75250; j < 75260; j++) _solve(b, j);
for(j = 76090; j < 76100; j++) _solve(b, j);
for(j = 76930; j < 76940; j++) _solve(b, j);
for(j = 77770; j < 77780; j++) _solve(b, j);
for(j = 78610; j < 78620; j++) _solve(b, j);
for(j = 79450; j < 79460; j++) _solve(b, j);
for(j = 80290; j < 80300; j++) _solve(b, j);
for(j = 81130; j < 81140; j++) _solve(b, j);
for(j = 81970; j < 81980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 82810; j < 82820; j++) _solve(b, j);
for(j = 83650; j < 83660; j++) _solve(b, j);
for(j = 84490; j < 84500; j++) _solve(b, j);
for(j = 85330; j < 85340; j++) _solve(b, j);
for(j = 86170; j < 86180; j++) _solve(b, j);
for(j = 87010; j < 87020; j++) _solve(b, j);
for(j = 87850; j < 87860; j++) _solve(b, j);
for(j = 88690; j < 88700; j++) _solve(b, j);
for(j = 89530; j < 89540; j++) _solve(b, j);
for(j = 90370; j < 90380; j++) _solve(b, j);
for(j = 91210; j < 91220; j++) _solve(b, j);
for(j = 92050; j < 92060; j++) _solve(b, j);
for(j = 92890; j < 92900; j++) _solve(b, j);
for(j = 93730; j < 93740; j++) _solve(b, j);
for(j = 94570; j < 94580; j++) _solve(b, j);
for(j = 95410; j < 95420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 96250; j < 96260; j++) _solve(b, j);
for(j = 97090; j < 97100; j++) _solve(b, j);
for(j = 97930; j < 97940; j++) _solve(b, j);
for(j = 98770; j < 98780; j++) _solve(b, j);
for(j = 99610; j < 99620; j++) _solve(b, j);
for(j = 100450; j < 100460; j++) _solve(b, j);
for(j = 101290; j < 101300; j++) _solve(b, j);
for(j = 102130; j < 102140; j++) _solve(b, j);
for(j = 102970; j < 102980; j++) _solve(b, j);
for(j = 103810; j < 103820; j++) _solve(b, j);
for(j = 104650; j < 104660; j++) _solve(b, j);
for(j = 105490; j < 105500; j++) _solve(b, j);
for(j = 106330; j < 106340; j++) _solve(b, j);
for(j = 107170; j < 107180; j++) _solve(b, j);
for(j = 108010; j < 108020; j++) _solve(b, j);
for(j = 108850; j < 108860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 109690; j < 109700; j++) _solve(b, j);
for(j = 110530; j < 110540; j++) _solve(b, j);
for(j = 111370; j < 111380; j++) _solve(b, j);
for(j = 112210; j < 112220; j++) _solve(b, j);
for(j = 113050; j < 113060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 43340; j < 43350; j++) _solve(b, j);
for(j = 44180; j < 44190; j++) _solve(b, j);
for(j = 45020; j < 45030; j++) _solve(b, j);
for(j = 45860; j < 45870; j++) _solve(b, j);
for(j = 46700; j < 46710; j++) _solve(b, j);
for(j = 47540; j < 47550; j++) _solve(b, j);
for(j = 48380; j < 48390; j++) _solve(b, j);
for(j = 49220; j < 49230; j++) _solve(b, j);
for(j = 50060; j < 50070; j++) _solve(b, j);
for(j = 50900; j < 50910; j++) _solve(b, j);
for(j = 51740; j < 51750; j++) _solve(b, j);
for(j = 52580; j < 52590; j++) _solve(b, j);
for(j = 53420; j < 53430; j++) _solve(b, j);
for(j = 54260; j < 54270; j++) _solve(b, j);
for(j = 55100; j < 55110; j++) _solve(b, j);
for(j = 55940; j < 55950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 56780; j < 56790; j++) _solve(b, j);
for(j = 57620; j < 57630; j++) _solve(b, j);
for(j = 58460; j < 58470; j++) _solve(b, j);
for(j = 59300; j < 59310; j++) _solve(b, j);
for(j = 60140; j < 60150; j++) _solve(b, j);
for(j = 60980; j < 60990; j++) _solve(b, j);
for(j = 61820; j < 61830; j++) _solve(b, j);
for(j = 62660; j < 62670; j++) _solve(b, j);
for(j = 63500; j < 63510; j++) _solve(b, j);
for(j = 64340; j < 64350; j++) _solve(b, j);
for(j = 65180; j < 65190; j++) _solve(b, j);
for(j = 66020; j < 66030; j++) _solve(b, j);
for(j = 66860; j < 66870; j++) _solve(b, j);
for(j = 67700; j < 67710; j++) _solve(b, j);
for(j = 68540; j < 68550; j++) _solve(b, j);
for(j = 69380; j < 69390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 70220; j < 70230; j++) _solve(b, j);
for(j = 71060; j < 71070; j++) _solve(b, j);
for(j = 71900; j < 71910; j++) _solve(b, j);
for(j = 72740; j < 72750; j++) _solve(b, j);
for(j = 73580; j < 73590; j++) _solve(b, j);
for(j = 74420; j < 74430; j++) _solve(b, j);
for(j = 75260; j < 75270; j++) _solve(b, j);
for(j = 76100; j < 76110; j++) _solve(b, j);
for(j = 76940; j < 76950; j++) _solve(b, j);
for(j = 77780; j < 77790; j++) _solve(b, j);
for(j = 78620; j < 78630; j++) _solve(b, j);
for(j = 79460; j < 79470; j++) _solve(b, j);
for(j = 80300; j < 80310; j++) _solve(b, j);
for(j = 81140; j < 81150; j++) _solve(b, j);
for(j = 81980; j < 81990; j++) _solve(b, j);
for(j = 82820; j < 82830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 83660; j < 83670; j++) _solve(b, j);
for(j = 84500; j < 84510; j++) _solve(b, j);
for(j = 85340; j < 85350; j++) _solve(b, j);
for(j = 86180; j < 86190; j++) _solve(b, j);
for(j = 87020; j < 87030; j++) _solve(b, j);
for(j = 87860; j < 87870; j++) _solve(b, j);
for(j = 88700; j < 88710; j++) _solve(b, j);
for(j = 89540; j < 89550; j++) _solve(b, j);
for(j = 90380; j < 90390; j++) _solve(b, j);
for(j = 91220; j < 91230; j++) _solve(b, j);
for(j = 92060; j < 92070; j++) _solve(b, j);
for(j = 92900; j < 92910; j++) _solve(b, j);
for(j = 93740; j < 93750; j++) _solve(b, j);
for(j = 94580; j < 94590; j++) _solve(b, j);
for(j = 95420; j < 95430; j++) _solve(b, j);
for(j = 96260; j < 96270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 97100; j < 97110; j++) _solve(b, j);
for(j = 97940; j < 97950; j++) _solve(b, j);
for(j = 98780; j < 98790; j++) _solve(b, j);
for(j = 99620; j < 99630; j++) _solve(b, j);
for(j = 100460; j < 100470; j++) _solve(b, j);
for(j = 101300; j < 101310; j++) _solve(b, j);
for(j = 102140; j < 102150; j++) _solve(b, j);
for(j = 102980; j < 102990; j++) _solve(b, j);
for(j = 103820; j < 103830; j++) _solve(b, j);
for(j = 104660; j < 104670; j++) _solve(b, j);
for(j = 105500; j < 105510; j++) _solve(b, j);
for(j = 106340; j < 106350; j++) _solve(b, j);
for(j = 107180; j < 107190; j++) _solve(b, j);
for(j = 108020; j < 108030; j++) _solve(b, j);
for(j = 108860; j < 108870; j++) _solve(b, j);
for(j = 109700; j < 109710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 110540; j < 110550; j++) _solve(b, j);
for(j = 111380; j < 111390; j++) _solve(b, j);
for(j = 112220; j < 112230; j++) _solve(b, j);
for(j = 113060; j < 113070; j++) _solve(b, j);
for(j = 113900; j < 113910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 44190; j < 44200; j++) _solve(b, j);
for(j = 45030; j < 45040; j++) _solve(b, j);
for(j = 45870; j < 45880; j++) _solve(b, j);
for(j = 46710; j < 46720; j++) _solve(b, j);
for(j = 47550; j < 47560; j++) _solve(b, j);
for(j = 48390; j < 48400; j++) _solve(b, j);
for(j = 49230; j < 49240; j++) _solve(b, j);
for(j = 50070; j < 50080; j++) _solve(b, j);
for(j = 50910; j < 50920; j++) _solve(b, j);
for(j = 51750; j < 51760; j++) _solve(b, j);
for(j = 52590; j < 52600; j++) _solve(b, j);
for(j = 53430; j < 53440; j++) _solve(b, j);
for(j = 54270; j < 54280; j++) _solve(b, j);
for(j = 55110; j < 55120; j++) _solve(b, j);
for(j = 55950; j < 55960; j++) _solve(b, j);
for(j = 56790; j < 56800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 57630; j < 57640; j++) _solve(b, j);
for(j = 58470; j < 58480; j++) _solve(b, j);
for(j = 59310; j < 59320; j++) _solve(b, j);
for(j = 60150; j < 60160; j++) _solve(b, j);
for(j = 60990; j < 61000; j++) _solve(b, j);
for(j = 61830; j < 61840; j++) _solve(b, j);
for(j = 62670; j < 62680; j++) _solve(b, j);
for(j = 63510; j < 63520; j++) _solve(b, j);
for(j = 64350; j < 64360; j++) _solve(b, j);
for(j = 65190; j < 65200; j++) _solve(b, j);
for(j = 66030; j < 66040; j++) _solve(b, j);
for(j = 66870; j < 66880; j++) _solve(b, j);
for(j = 67710; j < 67720; j++) _solve(b, j);
for(j = 68550; j < 68560; j++) _solve(b, j);
for(j = 69390; j < 69400; j++) _solve(b, j);
for(j = 70230; j < 70240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 71070; j < 71080; j++) _solve(b, j);
for(j = 71910; j < 71920; j++) _solve(b, j);
for(j = 72750; j < 72760; j++) _solve(b, j);
for(j = 73590; j < 73600; j++) _solve(b, j);
for(j = 74430; j < 74440; j++) _solve(b, j);
for(j = 75270; j < 75280; j++) _solve(b, j);
for(j = 76110; j < 76120; j++) _solve(b, j);
for(j = 76950; j < 76960; j++) _solve(b, j);
for(j = 77790; j < 77800; j++) _solve(b, j);
for(j = 78630; j < 78640; j++) _solve(b, j);
for(j = 79470; j < 79480; j++) _solve(b, j);
for(j = 80310; j < 80320; j++) _solve(b, j);
for(j = 81150; j < 81160; j++) _solve(b, j);
for(j = 81990; j < 82000; j++) _solve(b, j);
for(j = 82830; j < 82840; j++) _solve(b, j);
for(j = 83670; j < 83680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 84510; j < 84520; j++) _solve(b, j);
for(j = 85350; j < 85360; j++) _solve(b, j);
for(j = 86190; j < 86200; j++) _solve(b, j);
for(j = 87030; j < 87040; j++) _solve(b, j);
for(j = 87870; j < 87880; j++) _solve(b, j);
for(j = 88710; j < 88720; j++) _solve(b, j);
for(j = 89550; j < 89560; j++) _solve(b, j);
for(j = 90390; j < 90400; j++) _solve(b, j);
for(j = 91230; j < 91240; j++) _solve(b, j);
for(j = 92070; j < 92080; j++) _solve(b, j);
for(j = 92910; j < 92920; j++) _solve(b, j);
for(j = 93750; j < 93760; j++) _solve(b, j);
for(j = 94590; j < 94600; j++) _solve(b, j);
for(j = 95430; j < 95440; j++) _solve(b, j);
for(j = 96270; j < 96280; j++) _solve(b, j);
for(j = 97110; j < 97120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 97950; j < 97960; j++) _solve(b, j);
for(j = 98790; j < 98800; j++) _solve(b, j);
for(j = 99630; j < 99640; j++) _solve(b, j);
for(j = 100470; j < 100480; j++) _solve(b, j);
for(j = 101310; j < 101320; j++) _solve(b, j);
for(j = 102150; j < 102160; j++) _solve(b, j);
for(j = 102990; j < 103000; j++) _solve(b, j);
for(j = 103830; j < 103840; j++) _solve(b, j);
for(j = 104670; j < 104680; j++) _solve(b, j);
for(j = 105510; j < 105520; j++) _solve(b, j);
for(j = 106350; j < 106360; j++) _solve(b, j);
for(j = 107190; j < 107200; j++) _solve(b, j);
for(j = 108030; j < 108040; j++) _solve(b, j);
for(j = 108870; j < 108880; j++) _solve(b, j);
for(j = 109710; j < 109720; j++) _solve(b, j);
for(j = 110550; j < 110560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 111390; j < 111400; j++) _solve(b, j);
for(j = 112230; j < 112240; j++) _solve(b, j);
for(j = 113070; j < 113080; j++) _solve(b, j);
for(j = 113910; j < 113920; j++) _solve(b, j);
for(j = 114750; j < 114760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 45040; j < 45050; j++) _solve(b, j);
for(j = 45880; j < 45890; j++) _solve(b, j);
for(j = 46720; j < 46730; j++) _solve(b, j);
for(j = 47560; j < 47570; j++) _solve(b, j);
for(j = 48400; j < 48410; j++) _solve(b, j);
for(j = 49240; j < 49250; j++) _solve(b, j);
for(j = 50080; j < 50090; j++) _solve(b, j);
for(j = 50920; j < 50930; j++) _solve(b, j);
for(j = 51760; j < 51770; j++) _solve(b, j);
for(j = 52600; j < 52610; j++) _solve(b, j);
for(j = 53440; j < 53450; j++) _solve(b, j);
for(j = 54280; j < 54290; j++) _solve(b, j);
for(j = 55120; j < 55130; j++) _solve(b, j);
for(j = 55960; j < 55970; j++) _solve(b, j);
for(j = 56800; j < 56810; j++) _solve(b, j);
for(j = 57640; j < 57650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 58480; j < 58490; j++) _solve(b, j);
for(j = 59320; j < 59330; j++) _solve(b, j);
for(j = 60160; j < 60170; j++) _solve(b, j);
for(j = 61000; j < 61010; j++) _solve(b, j);
for(j = 61840; j < 61850; j++) _solve(b, j);
for(j = 62680; j < 62690; j++) _solve(b, j);
for(j = 63520; j < 63530; j++) _solve(b, j);
for(j = 64360; j < 64370; j++) _solve(b, j);
for(j = 65200; j < 65210; j++) _solve(b, j);
for(j = 66040; j < 66050; j++) _solve(b, j);
for(j = 66880; j < 66890; j++) _solve(b, j);
for(j = 67720; j < 67730; j++) _solve(b, j);
for(j = 68560; j < 68570; j++) _solve(b, j);
for(j = 69400; j < 69410; j++) _solve(b, j);
for(j = 70240; j < 70250; j++) _solve(b, j);
for(j = 71080; j < 71090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 71920; j < 71930; j++) _solve(b, j);
for(j = 72760; j < 72770; j++) _solve(b, j);
for(j = 73600; j < 73610; j++) _solve(b, j);
for(j = 74440; j < 74450; j++) _solve(b, j);
for(j = 75280; j < 75290; j++) _solve(b, j);
for(j = 76120; j < 76130; j++) _solve(b, j);
for(j = 76960; j < 76970; j++) _solve(b, j);
for(j = 77800; j < 77810; j++) _solve(b, j);
for(j = 78640; j < 78650; j++) _solve(b, j);
for(j = 79480; j < 79490; j++) _solve(b, j);
for(j = 80320; j < 80330; j++) _solve(b, j);
for(j = 81160; j < 81170; j++) _solve(b, j);
for(j = 82000; j < 82010; j++) _solve(b, j);
for(j = 82840; j < 82850; j++) _solve(b, j);
for(j = 83680; j < 83690; j++) _solve(b, j);
for(j = 84520; j < 84530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 85360; j < 85370; j++) _solve(b, j);
for(j = 86200; j < 86210; j++) _solve(b, j);
for(j = 87040; j < 87050; j++) _solve(b, j);
for(j = 87880; j < 87890; j++) _solve(b, j);
for(j = 88720; j < 88730; j++) _solve(b, j);
for(j = 89560; j < 89570; j++) _solve(b, j);
for(j = 90400; j < 90410; j++) _solve(b, j);
for(j = 91240; j < 91250; j++) _solve(b, j);
for(j = 92080; j < 92090; j++) _solve(b, j);
for(j = 92920; j < 92930; j++) _solve(b, j);
for(j = 93760; j < 93770; j++) _solve(b, j);
for(j = 94600; j < 94610; j++) _solve(b, j);
for(j = 95440; j < 95450; j++) _solve(b, j);
for(j = 96280; j < 96290; j++) _solve(b, j);
for(j = 97120; j < 97130; j++) _solve(b, j);
for(j = 97960; j < 97970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 98800; j < 98810; j++) _solve(b, j);
for(j = 99640; j < 99650; j++) _solve(b, j);
for(j = 100480; j < 100490; j++) _solve(b, j);
for(j = 101320; j < 101330; j++) _solve(b, j);
for(j = 102160; j < 102170; j++) _solve(b, j);
for(j = 103000; j < 103010; j++) _solve(b, j);
for(j = 103840; j < 103850; j++) _solve(b, j);
for(j = 104680; j < 104690; j++) _solve(b, j);
for(j = 105520; j < 105530; j++) _solve(b, j);
for(j = 106360; j < 106370; j++) _solve(b, j);
for(j = 107200; j < 107210; j++) _solve(b, j);
for(j = 108040; j < 108050; j++) _solve(b, j);
for(j = 108880; j < 108890; j++) _solve(b, j);
for(j = 109720; j < 109730; j++) _solve(b, j);
for(j = 110560; j < 110570; j++) _solve(b, j);
for(j = 111400; j < 111410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 112240; j < 112250; j++) _solve(b, j);
for(j = 113080; j < 113090; j++) _solve(b, j);
for(j = 113920; j < 113930; j++) _solve(b, j);
for(j = 114760; j < 114770; j++) _solve(b, j);
for(j = 115600; j < 115610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 45890; j < 45900; j++) _solve(b, j);
for(j = 46730; j < 46740; j++) _solve(b, j);
for(j = 47570; j < 47580; j++) _solve(b, j);
for(j = 48410; j < 48420; j++) _solve(b, j);
for(j = 49250; j < 49260; j++) _solve(b, j);
for(j = 50090; j < 50100; j++) _solve(b, j);
for(j = 50930; j < 50940; j++) _solve(b, j);
for(j = 51770; j < 51780; j++) _solve(b, j);
for(j = 52610; j < 52620; j++) _solve(b, j);
for(j = 53450; j < 53460; j++) _solve(b, j);
for(j = 54290; j < 54300; j++) _solve(b, j);
for(j = 55130; j < 55140; j++) _solve(b, j);
for(j = 55970; j < 55980; j++) _solve(b, j);
for(j = 56810; j < 56820; j++) _solve(b, j);
for(j = 57650; j < 57660; j++) _solve(b, j);
for(j = 58490; j < 58500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 59330; j < 59340; j++) _solve(b, j);
for(j = 60170; j < 60180; j++) _solve(b, j);
for(j = 61010; j < 61020; j++) _solve(b, j);
for(j = 61850; j < 61860; j++) _solve(b, j);
for(j = 62690; j < 62700; j++) _solve(b, j);
for(j = 63530; j < 63540; j++) _solve(b, j);
for(j = 64370; j < 64380; j++) _solve(b, j);
for(j = 65210; j < 65220; j++) _solve(b, j);
for(j = 66050; j < 66060; j++) _solve(b, j);
for(j = 66890; j < 66900; j++) _solve(b, j);
for(j = 67730; j < 67740; j++) _solve(b, j);
for(j = 68570; j < 68580; j++) _solve(b, j);
for(j = 69410; j < 69420; j++) _solve(b, j);
for(j = 70250; j < 70260; j++) _solve(b, j);
for(j = 71090; j < 71100; j++) _solve(b, j);
for(j = 71930; j < 71940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 72770; j < 72780; j++) _solve(b, j);
for(j = 73610; j < 73620; j++) _solve(b, j);
for(j = 74450; j < 74460; j++) _solve(b, j);
for(j = 75290; j < 75300; j++) _solve(b, j);
for(j = 76130; j < 76140; j++) _solve(b, j);
for(j = 76970; j < 76980; j++) _solve(b, j);
for(j = 77810; j < 77820; j++) _solve(b, j);
for(j = 78650; j < 78660; j++) _solve(b, j);
for(j = 79490; j < 79500; j++) _solve(b, j);
for(j = 80330; j < 80340; j++) _solve(b, j);
for(j = 81170; j < 81180; j++) _solve(b, j);
for(j = 82010; j < 82020; j++) _solve(b, j);
for(j = 82850; j < 82860; j++) _solve(b, j);
for(j = 83690; j < 83700; j++) _solve(b, j);
for(j = 84530; j < 84540; j++) _solve(b, j);
for(j = 85370; j < 85380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 86210; j < 86220; j++) _solve(b, j);
for(j = 87050; j < 87060; j++) _solve(b, j);
for(j = 87890; j < 87900; j++) _solve(b, j);
for(j = 88730; j < 88740; j++) _solve(b, j);
for(j = 89570; j < 89580; j++) _solve(b, j);
for(j = 90410; j < 90420; j++) _solve(b, j);
for(j = 91250; j < 91260; j++) _solve(b, j);
for(j = 92090; j < 92100; j++) _solve(b, j);
for(j = 92930; j < 92940; j++) _solve(b, j);
for(j = 93770; j < 93780; j++) _solve(b, j);
for(j = 94610; j < 94620; j++) _solve(b, j);
for(j = 95450; j < 95460; j++) _solve(b, j);
for(j = 96290; j < 96300; j++) _solve(b, j);
for(j = 97130; j < 97140; j++) _solve(b, j);
for(j = 97970; j < 97980; j++) _solve(b, j);
for(j = 98810; j < 98820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 99650; j < 99660; j++) _solve(b, j);
for(j = 100490; j < 100500; j++) _solve(b, j);
for(j = 101330; j < 101340; j++) _solve(b, j);
for(j = 102170; j < 102180; j++) _solve(b, j);
for(j = 103010; j < 103020; j++) _solve(b, j);
for(j = 103850; j < 103860; j++) _solve(b, j);
for(j = 104690; j < 104700; j++) _solve(b, j);
for(j = 105530; j < 105540; j++) _solve(b, j);
for(j = 106370; j < 106380; j++) _solve(b, j);
for(j = 107210; j < 107220; j++) _solve(b, j);
for(j = 108050; j < 108060; j++) _solve(b, j);
for(j = 108890; j < 108900; j++) _solve(b, j);
for(j = 109730; j < 109740; j++) _solve(b, j);
for(j = 110570; j < 110580; j++) _solve(b, j);
for(j = 111410; j < 111420; j++) _solve(b, j);
for(j = 112250; j < 112260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 113090; j < 113100; j++) _solve(b, j);
for(j = 113930; j < 113940; j++) _solve(b, j);
for(j = 114770; j < 114780; j++) _solve(b, j);
for(j = 115610; j < 115620; j++) _solve(b, j);
for(j = 116450; j < 116460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 46740; j < 46750; j++) _solve(b, j);
for(j = 47580; j < 47590; j++) _solve(b, j);
for(j = 48420; j < 48430; j++) _solve(b, j);
for(j = 49260; j < 49270; j++) _solve(b, j);
for(j = 50100; j < 50110; j++) _solve(b, j);
for(j = 50940; j < 50950; j++) _solve(b, j);
for(j = 51780; j < 51790; j++) _solve(b, j);
for(j = 52620; j < 52630; j++) _solve(b, j);
for(j = 53460; j < 53470; j++) _solve(b, j);
for(j = 54300; j < 54310; j++) _solve(b, j);
for(j = 55140; j < 55150; j++) _solve(b, j);
for(j = 55980; j < 55990; j++) _solve(b, j);
for(j = 56820; j < 56830; j++) _solve(b, j);
for(j = 57660; j < 57670; j++) _solve(b, j);
for(j = 58500; j < 58510; j++) _solve(b, j);
for(j = 59340; j < 59350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 60180; j < 60190; j++) _solve(b, j);
for(j = 61020; j < 61030; j++) _solve(b, j);
for(j = 61860; j < 61870; j++) _solve(b, j);
for(j = 62700; j < 62710; j++) _solve(b, j);
for(j = 63540; j < 63550; j++) _solve(b, j);
for(j = 64380; j < 64390; j++) _solve(b, j);
for(j = 65220; j < 65230; j++) _solve(b, j);
for(j = 66060; j < 66070; j++) _solve(b, j);
for(j = 66900; j < 66910; j++) _solve(b, j);
for(j = 67740; j < 67750; j++) _solve(b, j);
for(j = 68580; j < 68590; j++) _solve(b, j);
for(j = 69420; j < 69430; j++) _solve(b, j);
for(j = 70260; j < 70270; j++) _solve(b, j);
for(j = 71100; j < 71110; j++) _solve(b, j);
for(j = 71940; j < 71950; j++) _solve(b, j);
for(j = 72780; j < 72790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 73620; j < 73630; j++) _solve(b, j);
for(j = 74460; j < 74470; j++) _solve(b, j);
for(j = 75300; j < 75310; j++) _solve(b, j);
for(j = 76140; j < 76150; j++) _solve(b, j);
for(j = 76980; j < 76990; j++) _solve(b, j);
for(j = 77820; j < 77830; j++) _solve(b, j);
for(j = 78660; j < 78670; j++) _solve(b, j);
for(j = 79500; j < 79510; j++) _solve(b, j);
for(j = 80340; j < 80350; j++) _solve(b, j);
for(j = 81180; j < 81190; j++) _solve(b, j);
for(j = 82020; j < 82030; j++) _solve(b, j);
for(j = 82860; j < 82870; j++) _solve(b, j);
for(j = 83700; j < 83710; j++) _solve(b, j);
for(j = 84540; j < 84550; j++) _solve(b, j);
for(j = 85380; j < 85390; j++) _solve(b, j);
for(j = 86220; j < 86230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 87060; j < 87070; j++) _solve(b, j);
for(j = 87900; j < 87910; j++) _solve(b, j);
for(j = 88740; j < 88750; j++) _solve(b, j);
for(j = 89580; j < 89590; j++) _solve(b, j);
for(j = 90420; j < 90430; j++) _solve(b, j);
for(j = 91260; j < 91270; j++) _solve(b, j);
for(j = 92100; j < 92110; j++) _solve(b, j);
for(j = 92940; j < 92950; j++) _solve(b, j);
for(j = 93780; j < 93790; j++) _solve(b, j);
for(j = 94620; j < 94630; j++) _solve(b, j);
for(j = 95460; j < 95470; j++) _solve(b, j);
for(j = 96300; j < 96310; j++) _solve(b, j);
for(j = 97140; j < 97150; j++) _solve(b, j);
for(j = 97980; j < 97990; j++) _solve(b, j);
for(j = 98820; j < 98830; j++) _solve(b, j);
for(j = 99660; j < 99670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 100500; j < 100510; j++) _solve(b, j);
for(j = 101340; j < 101350; j++) _solve(b, j);
for(j = 102180; j < 102190; j++) _solve(b, j);
for(j = 103020; j < 103030; j++) _solve(b, j);
for(j = 103860; j < 103870; j++) _solve(b, j);
for(j = 104700; j < 104710; j++) _solve(b, j);
for(j = 105540; j < 105550; j++) _solve(b, j);
for(j = 106380; j < 106390; j++) _solve(b, j);
for(j = 107220; j < 107230; j++) _solve(b, j);
for(j = 108060; j < 108070; j++) _solve(b, j);
for(j = 108900; j < 108910; j++) _solve(b, j);
for(j = 109740; j < 109750; j++) _solve(b, j);
for(j = 110580; j < 110590; j++) _solve(b, j);
for(j = 111420; j < 111430; j++) _solve(b, j);
for(j = 112260; j < 112270; j++) _solve(b, j);
for(j = 113100; j < 113110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 113940; j < 113950; j++) _solve(b, j);
for(j = 114780; j < 114790; j++) _solve(b, j);
for(j = 115620; j < 115630; j++) _solve(b, j);
for(j = 116460; j < 116470; j++) _solve(b, j);
for(j = 117300; j < 117310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 47590; j < 47600; j++) _solve(b, j);
for(j = 48430; j < 48440; j++) _solve(b, j);
for(j = 49270; j < 49280; j++) _solve(b, j);
for(j = 50110; j < 50120; j++) _solve(b, j);
for(j = 50950; j < 50960; j++) _solve(b, j);
for(j = 51790; j < 51800; j++) _solve(b, j);
for(j = 52630; j < 52640; j++) _solve(b, j);
for(j = 53470; j < 53480; j++) _solve(b, j);
for(j = 54310; j < 54320; j++) _solve(b, j);
for(j = 55150; j < 55160; j++) _solve(b, j);
for(j = 55990; j < 56000; j++) _solve(b, j);
for(j = 56830; j < 56840; j++) _solve(b, j);
for(j = 57670; j < 57680; j++) _solve(b, j);
for(j = 58510; j < 58520; j++) _solve(b, j);
for(j = 59350; j < 59360; j++) _solve(b, j);
for(j = 60190; j < 60200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 61030; j < 61040; j++) _solve(b, j);
for(j = 61870; j < 61880; j++) _solve(b, j);
for(j = 62710; j < 62720; j++) _solve(b, j);
for(j = 63550; j < 63560; j++) _solve(b, j);
for(j = 64390; j < 64400; j++) _solve(b, j);
for(j = 65230; j < 65240; j++) _solve(b, j);
for(j = 66070; j < 66080; j++) _solve(b, j);
for(j = 66910; j < 66920; j++) _solve(b, j);
for(j = 67750; j < 67760; j++) _solve(b, j);
for(j = 68590; j < 68600; j++) _solve(b, j);
for(j = 69430; j < 69440; j++) _solve(b, j);
for(j = 70270; j < 70280; j++) _solve(b, j);
for(j = 71110; j < 71120; j++) _solve(b, j);
for(j = 71950; j < 71960; j++) _solve(b, j);
for(j = 72790; j < 72800; j++) _solve(b, j);
for(j = 73630; j < 73640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 74470; j < 74480; j++) _solve(b, j);
for(j = 75310; j < 75320; j++) _solve(b, j);
for(j = 76150; j < 76160; j++) _solve(b, j);
for(j = 76990; j < 77000; j++) _solve(b, j);
for(j = 77830; j < 77840; j++) _solve(b, j);
for(j = 78670; j < 78680; j++) _solve(b, j);
for(j = 79510; j < 79520; j++) _solve(b, j);
for(j = 80350; j < 80360; j++) _solve(b, j);
for(j = 81190; j < 81200; j++) _solve(b, j);
for(j = 82030; j < 82040; j++) _solve(b, j);
for(j = 82870; j < 82880; j++) _solve(b, j);
for(j = 83710; j < 83720; j++) _solve(b, j);
for(j = 84550; j < 84560; j++) _solve(b, j);
for(j = 85390; j < 85400; j++) _solve(b, j);
for(j = 86230; j < 86240; j++) _solve(b, j);
for(j = 87070; j < 87080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 87910; j < 87920; j++) _solve(b, j);
for(j = 88750; j < 88760; j++) _solve(b, j);
for(j = 89590; j < 89600; j++) _solve(b, j);
for(j = 90430; j < 90440; j++) _solve(b, j);
for(j = 91270; j < 91280; j++) _solve(b, j);
for(j = 92110; j < 92120; j++) _solve(b, j);
for(j = 92950; j < 92960; j++) _solve(b, j);
for(j = 93790; j < 93800; j++) _solve(b, j);
for(j = 94630; j < 94640; j++) _solve(b, j);
for(j = 95470; j < 95480; j++) _solve(b, j);
for(j = 96310; j < 96320; j++) _solve(b, j);
for(j = 97150; j < 97160; j++) _solve(b, j);
for(j = 97990; j < 98000; j++) _solve(b, j);
for(j = 98830; j < 98840; j++) _solve(b, j);
for(j = 99670; j < 99680; j++) _solve(b, j);
for(j = 100510; j < 100520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 101350; j < 101360; j++) _solve(b, j);
for(j = 102190; j < 102200; j++) _solve(b, j);
for(j = 103030; j < 103040; j++) _solve(b, j);
for(j = 103870; j < 103880; j++) _solve(b, j);
for(j = 104710; j < 104720; j++) _solve(b, j);
for(j = 105550; j < 105560; j++) _solve(b, j);
for(j = 106390; j < 106400; j++) _solve(b, j);
for(j = 107230; j < 107240; j++) _solve(b, j);
for(j = 108070; j < 108080; j++) _solve(b, j);
for(j = 108910; j < 108920; j++) _solve(b, j);
for(j = 109750; j < 109760; j++) _solve(b, j);
for(j = 110590; j < 110600; j++) _solve(b, j);
for(j = 111430; j < 111440; j++) _solve(b, j);
for(j = 112270; j < 112280; j++) _solve(b, j);
for(j = 113110; j < 113120; j++) _solve(b, j);
for(j = 113950; j < 113960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 114790; j < 114800; j++) _solve(b, j);
for(j = 115630; j < 115640; j++) _solve(b, j);
for(j = 116470; j < 116480; j++) _solve(b, j);
for(j = 117310; j < 117320; j++) _solve(b, j);
for(j = 118150; j < 118160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 48440; j < 48450; j++) _solve(b, j);
for(j = 49280; j < 49290; j++) _solve(b, j);
for(j = 50120; j < 50130; j++) _solve(b, j);
for(j = 50960; j < 50970; j++) _solve(b, j);
for(j = 51800; j < 51810; j++) _solve(b, j);
for(j = 52640; j < 52650; j++) _solve(b, j);
for(j = 53480; j < 53490; j++) _solve(b, j);
for(j = 54320; j < 54330; j++) _solve(b, j);
for(j = 55160; j < 55170; j++) _solve(b, j);
for(j = 56000; j < 56010; j++) _solve(b, j);
for(j = 56840; j < 56850; j++) _solve(b, j);
for(j = 57680; j < 57690; j++) _solve(b, j);
for(j = 58520; j < 58530; j++) _solve(b, j);
for(j = 59360; j < 59370; j++) _solve(b, j);
for(j = 60200; j < 60210; j++) _solve(b, j);
for(j = 61040; j < 61050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 61880; j < 61890; j++) _solve(b, j);
for(j = 62720; j < 62730; j++) _solve(b, j);
for(j = 63560; j < 63570; j++) _solve(b, j);
for(j = 64400; j < 64410; j++) _solve(b, j);
for(j = 65240; j < 65250; j++) _solve(b, j);
for(j = 66080; j < 66090; j++) _solve(b, j);
for(j = 66920; j < 66930; j++) _solve(b, j);
for(j = 67760; j < 67770; j++) _solve(b, j);
for(j = 68600; j < 68610; j++) _solve(b, j);
for(j = 69440; j < 69450; j++) _solve(b, j);
for(j = 70280; j < 70290; j++) _solve(b, j);
for(j = 71120; j < 71130; j++) _solve(b, j);
for(j = 71960; j < 71970; j++) _solve(b, j);
for(j = 72800; j < 72810; j++) _solve(b, j);
for(j = 73640; j < 73650; j++) _solve(b, j);
for(j = 74480; j < 74490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 75320; j < 75330; j++) _solve(b, j);
for(j = 76160; j < 76170; j++) _solve(b, j);
for(j = 77000; j < 77010; j++) _solve(b, j);
for(j = 77840; j < 77850; j++) _solve(b, j);
for(j = 78680; j < 78690; j++) _solve(b, j);
for(j = 79520; j < 79530; j++) _solve(b, j);
for(j = 80360; j < 80370; j++) _solve(b, j);
for(j = 81200; j < 81210; j++) _solve(b, j);
for(j = 82040; j < 82050; j++) _solve(b, j);
for(j = 82880; j < 82890; j++) _solve(b, j);
for(j = 83720; j < 83730; j++) _solve(b, j);
for(j = 84560; j < 84570; j++) _solve(b, j);
for(j = 85400; j < 85410; j++) _solve(b, j);
for(j = 86240; j < 86250; j++) _solve(b, j);
for(j = 87080; j < 87090; j++) _solve(b, j);
for(j = 87920; j < 87930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 88760; j < 88770; j++) _solve(b, j);
for(j = 89600; j < 89610; j++) _solve(b, j);
for(j = 90440; j < 90450; j++) _solve(b, j);
for(j = 91280; j < 91290; j++) _solve(b, j);
for(j = 92120; j < 92130; j++) _solve(b, j);
for(j = 92960; j < 92970; j++) _solve(b, j);
for(j = 93800; j < 93810; j++) _solve(b, j);
for(j = 94640; j < 94650; j++) _solve(b, j);
for(j = 95480; j < 95490; j++) _solve(b, j);
for(j = 96320; j < 96330; j++) _solve(b, j);
for(j = 97160; j < 97170; j++) _solve(b, j);
for(j = 98000; j < 98010; j++) _solve(b, j);
for(j = 98840; j < 98850; j++) _solve(b, j);
for(j = 99680; j < 99690; j++) _solve(b, j);
for(j = 100520; j < 100530; j++) _solve(b, j);
for(j = 101360; j < 101370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 102200; j < 102210; j++) _solve(b, j);
for(j = 103040; j < 103050; j++) _solve(b, j);
for(j = 103880; j < 103890; j++) _solve(b, j);
for(j = 104720; j < 104730; j++) _solve(b, j);
for(j = 105560; j < 105570; j++) _solve(b, j);
for(j = 106400; j < 106410; j++) _solve(b, j);
for(j = 107240; j < 107250; j++) _solve(b, j);
for(j = 108080; j < 108090; j++) _solve(b, j);
for(j = 108920; j < 108930; j++) _solve(b, j);
for(j = 109760; j < 109770; j++) _solve(b, j);
for(j = 110600; j < 110610; j++) _solve(b, j);
for(j = 111440; j < 111450; j++) _solve(b, j);
for(j = 112280; j < 112290; j++) _solve(b, j);
for(j = 113120; j < 113130; j++) _solve(b, j);
for(j = 113960; j < 113970; j++) _solve(b, j);
for(j = 114800; j < 114810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 115640; j < 115650; j++) _solve(b, j);
for(j = 116480; j < 116490; j++) _solve(b, j);
for(j = 117320; j < 117330; j++) _solve(b, j);
for(j = 118160; j < 118170; j++) _solve(b, j);
for(j = 119000; j < 119010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 49290; j < 49300; j++) _solve(b, j);
for(j = 50130; j < 50140; j++) _solve(b, j);
for(j = 50970; j < 50980; j++) _solve(b, j);
for(j = 51810; j < 51820; j++) _solve(b, j);
for(j = 52650; j < 52660; j++) _solve(b, j);
for(j = 53490; j < 53500; j++) _solve(b, j);
for(j = 54330; j < 54340; j++) _solve(b, j);
for(j = 55170; j < 55180; j++) _solve(b, j);
for(j = 56010; j < 56020; j++) _solve(b, j);
for(j = 56850; j < 56860; j++) _solve(b, j);
for(j = 57690; j < 57700; j++) _solve(b, j);
for(j = 58530; j < 58540; j++) _solve(b, j);
for(j = 59370; j < 59380; j++) _solve(b, j);
for(j = 60210; j < 60220; j++) _solve(b, j);
for(j = 61050; j < 61060; j++) _solve(b, j);
for(j = 61890; j < 61900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 62730; j < 62740; j++) _solve(b, j);
for(j = 63570; j < 63580; j++) _solve(b, j);
for(j = 64410; j < 64420; j++) _solve(b, j);
for(j = 65250; j < 65260; j++) _solve(b, j);
for(j = 66090; j < 66100; j++) _solve(b, j);
for(j = 66930; j < 66940; j++) _solve(b, j);
for(j = 67770; j < 67780; j++) _solve(b, j);
for(j = 68610; j < 68620; j++) _solve(b, j);
for(j = 69450; j < 69460; j++) _solve(b, j);
for(j = 70290; j < 70300; j++) _solve(b, j);
for(j = 71130; j < 71140; j++) _solve(b, j);
for(j = 71970; j < 71980; j++) _solve(b, j);
for(j = 72810; j < 72820; j++) _solve(b, j);
for(j = 73650; j < 73660; j++) _solve(b, j);
for(j = 74490; j < 74500; j++) _solve(b, j);
for(j = 75330; j < 75340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 76170; j < 76180; j++) _solve(b, j);
for(j = 77010; j < 77020; j++) _solve(b, j);
for(j = 77850; j < 77860; j++) _solve(b, j);
for(j = 78690; j < 78700; j++) _solve(b, j);
for(j = 79530; j < 79540; j++) _solve(b, j);
for(j = 80370; j < 80380; j++) _solve(b, j);
for(j = 81210; j < 81220; j++) _solve(b, j);
for(j = 82050; j < 82060; j++) _solve(b, j);
for(j = 82890; j < 82900; j++) _solve(b, j);
for(j = 83730; j < 83740; j++) _solve(b, j);
for(j = 84570; j < 84580; j++) _solve(b, j);
for(j = 85410; j < 85420; j++) _solve(b, j);
for(j = 86250; j < 86260; j++) _solve(b, j);
for(j = 87090; j < 87100; j++) _solve(b, j);
for(j = 87930; j < 87940; j++) _solve(b, j);
for(j = 88770; j < 88780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 89610; j < 89620; j++) _solve(b, j);
for(j = 90450; j < 90460; j++) _solve(b, j);
for(j = 91290; j < 91300; j++) _solve(b, j);
for(j = 92130; j < 92140; j++) _solve(b, j);
for(j = 92970; j < 92980; j++) _solve(b, j);
for(j = 93810; j < 93820; j++) _solve(b, j);
for(j = 94650; j < 94660; j++) _solve(b, j);
for(j = 95490; j < 95500; j++) _solve(b, j);
for(j = 96330; j < 96340; j++) _solve(b, j);
for(j = 97170; j < 97180; j++) _solve(b, j);
for(j = 98010; j < 98020; j++) _solve(b, j);
for(j = 98850; j < 98860; j++) _solve(b, j);
for(j = 99690; j < 99700; j++) _solve(b, j);
for(j = 100530; j < 100540; j++) _solve(b, j);
for(j = 101370; j < 101380; j++) _solve(b, j);
for(j = 102210; j < 102220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 103050; j < 103060; j++) _solve(b, j);
for(j = 103890; j < 103900; j++) _solve(b, j);
for(j = 104730; j < 104740; j++) _solve(b, j);
for(j = 105570; j < 105580; j++) _solve(b, j);
for(j = 106410; j < 106420; j++) _solve(b, j);
for(j = 107250; j < 107260; j++) _solve(b, j);
for(j = 108090; j < 108100; j++) _solve(b, j);
for(j = 108930; j < 108940; j++) _solve(b, j);
for(j = 109770; j < 109780; j++) _solve(b, j);
for(j = 110610; j < 110620; j++) _solve(b, j);
for(j = 111450; j < 111460; j++) _solve(b, j);
for(j = 112290; j < 112300; j++) _solve(b, j);
for(j = 113130; j < 113140; j++) _solve(b, j);
for(j = 113970; j < 113980; j++) _solve(b, j);
for(j = 114810; j < 114820; j++) _solve(b, j);
for(j = 115650; j < 115660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 116490; j < 116500; j++) _solve(b, j);
for(j = 117330; j < 117340; j++) _solve(b, j);
for(j = 118170; j < 118180; j++) _solve(b, j);
for(j = 119010; j < 119020; j++) _solve(b, j);
for(j = 119850; j < 119860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 50140; j < 50150; j++) _solve(b, j);
for(j = 50980; j < 50990; j++) _solve(b, j);
for(j = 51820; j < 51830; j++) _solve(b, j);
for(j = 52660; j < 52670; j++) _solve(b, j);
for(j = 53500; j < 53510; j++) _solve(b, j);
for(j = 54340; j < 54350; j++) _solve(b, j);
for(j = 55180; j < 55190; j++) _solve(b, j);
for(j = 56020; j < 56030; j++) _solve(b, j);
for(j = 56860; j < 56870; j++) _solve(b, j);
for(j = 57700; j < 57710; j++) _solve(b, j);
for(j = 58540; j < 58550; j++) _solve(b, j);
for(j = 59380; j < 59390; j++) _solve(b, j);
for(j = 60220; j < 60230; j++) _solve(b, j);
for(j = 61060; j < 61070; j++) _solve(b, j);
for(j = 61900; j < 61910; j++) _solve(b, j);
for(j = 62740; j < 62750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 63580; j < 63590; j++) _solve(b, j);
for(j = 64420; j < 64430; j++) _solve(b, j);
for(j = 65260; j < 65270; j++) _solve(b, j);
for(j = 66100; j < 66110; j++) _solve(b, j);
for(j = 66940; j < 66950; j++) _solve(b, j);
for(j = 67780; j < 67790; j++) _solve(b, j);
for(j = 68620; j < 68630; j++) _solve(b, j);
for(j = 69460; j < 69470; j++) _solve(b, j);
for(j = 70300; j < 70310; j++) _solve(b, j);
for(j = 71140; j < 71150; j++) _solve(b, j);
for(j = 71980; j < 71990; j++) _solve(b, j);
for(j = 72820; j < 72830; j++) _solve(b, j);
for(j = 73660; j < 73670; j++) _solve(b, j);
for(j = 74500; j < 74510; j++) _solve(b, j);
for(j = 75340; j < 75350; j++) _solve(b, j);
for(j = 76180; j < 76190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 77020; j < 77030; j++) _solve(b, j);
for(j = 77860; j < 77870; j++) _solve(b, j);
for(j = 78700; j < 78710; j++) _solve(b, j);
for(j = 79540; j < 79550; j++) _solve(b, j);
for(j = 80380; j < 80390; j++) _solve(b, j);
for(j = 81220; j < 81230; j++) _solve(b, j);
for(j = 82060; j < 82070; j++) _solve(b, j);
for(j = 82900; j < 82910; j++) _solve(b, j);
for(j = 83740; j < 83750; j++) _solve(b, j);
for(j = 84580; j < 84590; j++) _solve(b, j);
for(j = 85420; j < 85430; j++) _solve(b, j);
for(j = 86260; j < 86270; j++) _solve(b, j);
for(j = 87100; j < 87110; j++) _solve(b, j);
for(j = 87940; j < 87950; j++) _solve(b, j);
for(j = 88780; j < 88790; j++) _solve(b, j);
for(j = 89620; j < 89630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 90460; j < 90470; j++) _solve(b, j);
for(j = 91300; j < 91310; j++) _solve(b, j);
for(j = 92140; j < 92150; j++) _solve(b, j);
for(j = 92980; j < 92990; j++) _solve(b, j);
for(j = 93820; j < 93830; j++) _solve(b, j);
for(j = 94660; j < 94670; j++) _solve(b, j);
for(j = 95500; j < 95510; j++) _solve(b, j);
for(j = 96340; j < 96350; j++) _solve(b, j);
for(j = 97180; j < 97190; j++) _solve(b, j);
for(j = 98020; j < 98030; j++) _solve(b, j);
for(j = 98860; j < 98870; j++) _solve(b, j);
for(j = 99700; j < 99710; j++) _solve(b, j);
for(j = 100540; j < 100550; j++) _solve(b, j);
for(j = 101380; j < 101390; j++) _solve(b, j);
for(j = 102220; j < 102230; j++) _solve(b, j);
for(j = 103060; j < 103070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 103900; j < 103910; j++) _solve(b, j);
for(j = 104740; j < 104750; j++) _solve(b, j);
for(j = 105580; j < 105590; j++) _solve(b, j);
for(j = 106420; j < 106430; j++) _solve(b, j);
for(j = 107260; j < 107270; j++) _solve(b, j);
for(j = 108100; j < 108110; j++) _solve(b, j);
for(j = 108940; j < 108950; j++) _solve(b, j);
for(j = 109780; j < 109790; j++) _solve(b, j);
for(j = 110620; j < 110630; j++) _solve(b, j);
for(j = 111460; j < 111470; j++) _solve(b, j);
for(j = 112300; j < 112310; j++) _solve(b, j);
for(j = 113140; j < 113150; j++) _solve(b, j);
for(j = 113980; j < 113990; j++) _solve(b, j);
for(j = 114820; j < 114830; j++) _solve(b, j);
for(j = 115660; j < 115670; j++) _solve(b, j);
for(j = 116500; j < 116510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 117340; j < 117350; j++) _solve(b, j);
for(j = 118180; j < 118190; j++) _solve(b, j);
for(j = 119020; j < 119030; j++) _solve(b, j);
for(j = 119860; j < 119870; j++) _solve(b, j);
for(j = 120700; j < 120710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 50990; j < 51000; j++) _solve(b, j);
for(j = 51830; j < 51840; j++) _solve(b, j);
for(j = 52670; j < 52680; j++) _solve(b, j);
for(j = 53510; j < 53520; j++) _solve(b, j);
for(j = 54350; j < 54360; j++) _solve(b, j);
for(j = 55190; j < 55200; j++) _solve(b, j);
for(j = 56030; j < 56040; j++) _solve(b, j);
for(j = 56870; j < 56880; j++) _solve(b, j);
for(j = 57710; j < 57720; j++) _solve(b, j);
for(j = 58550; j < 58560; j++) _solve(b, j);
for(j = 59390; j < 59400; j++) _solve(b, j);
for(j = 60230; j < 60240; j++) _solve(b, j);
for(j = 61070; j < 61080; j++) _solve(b, j);
for(j = 61910; j < 61920; j++) _solve(b, j);
for(j = 62750; j < 62760; j++) _solve(b, j);
for(j = 63590; j < 63600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 64430; j < 64440; j++) _solve(b, j);
for(j = 65270; j < 65280; j++) _solve(b, j);
for(j = 66110; j < 66120; j++) _solve(b, j);
for(j = 66950; j < 66960; j++) _solve(b, j);
for(j = 67790; j < 67800; j++) _solve(b, j);
for(j = 68630; j < 68640; j++) _solve(b, j);
for(j = 69470; j < 69480; j++) _solve(b, j);
for(j = 70310; j < 70320; j++) _solve(b, j);
for(j = 71150; j < 71160; j++) _solve(b, j);
for(j = 71990; j < 72000; j++) _solve(b, j);
for(j = 72830; j < 72840; j++) _solve(b, j);
for(j = 73670; j < 73680; j++) _solve(b, j);
for(j = 74510; j < 74520; j++) _solve(b, j);
for(j = 75350; j < 75360; j++) _solve(b, j);
for(j = 76190; j < 76200; j++) _solve(b, j);
for(j = 77030; j < 77040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 77870; j < 77880; j++) _solve(b, j);
for(j = 78710; j < 78720; j++) _solve(b, j);
for(j = 79550; j < 79560; j++) _solve(b, j);
for(j = 80390; j < 80400; j++) _solve(b, j);
for(j = 81230; j < 81240; j++) _solve(b, j);
for(j = 82070; j < 82080; j++) _solve(b, j);
for(j = 82910; j < 82920; j++) _solve(b, j);
for(j = 83750; j < 83760; j++) _solve(b, j);
for(j = 84590; j < 84600; j++) _solve(b, j);
for(j = 85430; j < 85440; j++) _solve(b, j);
for(j = 86270; j < 86280; j++) _solve(b, j);
for(j = 87110; j < 87120; j++) _solve(b, j);
for(j = 87950; j < 87960; j++) _solve(b, j);
for(j = 88790; j < 88800; j++) _solve(b, j);
for(j = 89630; j < 89640; j++) _solve(b, j);
for(j = 90470; j < 90480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 91310; j < 91320; j++) _solve(b, j);
for(j = 92150; j < 92160; j++) _solve(b, j);
for(j = 92990; j < 93000; j++) _solve(b, j);
for(j = 93830; j < 93840; j++) _solve(b, j);
for(j = 94670; j < 94680; j++) _solve(b, j);
for(j = 95510; j < 95520; j++) _solve(b, j);
for(j = 96350; j < 96360; j++) _solve(b, j);
for(j = 97190; j < 97200; j++) _solve(b, j);
for(j = 98030; j < 98040; j++) _solve(b, j);
for(j = 98870; j < 98880; j++) _solve(b, j);
for(j = 99710; j < 99720; j++) _solve(b, j);
for(j = 100550; j < 100560; j++) _solve(b, j);
for(j = 101390; j < 101400; j++) _solve(b, j);
for(j = 102230; j < 102240; j++) _solve(b, j);
for(j = 103070; j < 103080; j++) _solve(b, j);
for(j = 103910; j < 103920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 104750; j < 104760; j++) _solve(b, j);
for(j = 105590; j < 105600; j++) _solve(b, j);
for(j = 106430; j < 106440; j++) _solve(b, j);
for(j = 107270; j < 107280; j++) _solve(b, j);
for(j = 108110; j < 108120; j++) _solve(b, j);
for(j = 108950; j < 108960; j++) _solve(b, j);
for(j = 109790; j < 109800; j++) _solve(b, j);
for(j = 110630; j < 110640; j++) _solve(b, j);
for(j = 111470; j < 111480; j++) _solve(b, j);
for(j = 112310; j < 112320; j++) _solve(b, j);
for(j = 113150; j < 113160; j++) _solve(b, j);
for(j = 113990; j < 114000; j++) _solve(b, j);
for(j = 114830; j < 114840; j++) _solve(b, j);
for(j = 115670; j < 115680; j++) _solve(b, j);
for(j = 116510; j < 116520; j++) _solve(b, j);
for(j = 117350; j < 117360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 118190; j < 118200; j++) _solve(b, j);
for(j = 119030; j < 119040; j++) _solve(b, j);
for(j = 119870; j < 119880; j++) _solve(b, j);
for(j = 120710; j < 120720; j++) _solve(b, j);
for(j = 121550; j < 121560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 51840; j < 51850; j++) _solve(b, j);
for(j = 52680; j < 52690; j++) _solve(b, j);
for(j = 53520; j < 53530; j++) _solve(b, j);
for(j = 54360; j < 54370; j++) _solve(b, j);
for(j = 55200; j < 55210; j++) _solve(b, j);
for(j = 56040; j < 56050; j++) _solve(b, j);
for(j = 56880; j < 56890; j++) _solve(b, j);
for(j = 57720; j < 57730; j++) _solve(b, j);
for(j = 58560; j < 58570; j++) _solve(b, j);
for(j = 59400; j < 59410; j++) _solve(b, j);
for(j = 60240; j < 60250; j++) _solve(b, j);
for(j = 61080; j < 61090; j++) _solve(b, j);
for(j = 61920; j < 61930; j++) _solve(b, j);
for(j = 62760; j < 62770; j++) _solve(b, j);
for(j = 63600; j < 63610; j++) _solve(b, j);
for(j = 64440; j < 64450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 65280; j < 65290; j++) _solve(b, j);
for(j = 66120; j < 66130; j++) _solve(b, j);
for(j = 66960; j < 66970; j++) _solve(b, j);
for(j = 67800; j < 67810; j++) _solve(b, j);
for(j = 68640; j < 68650; j++) _solve(b, j);
for(j = 69480; j < 69490; j++) _solve(b, j);
for(j = 70320; j < 70330; j++) _solve(b, j);
for(j = 71160; j < 71170; j++) _solve(b, j);
for(j = 72000; j < 72010; j++) _solve(b, j);
for(j = 72840; j < 72850; j++) _solve(b, j);
for(j = 73680; j < 73690; j++) _solve(b, j);
for(j = 74520; j < 74530; j++) _solve(b, j);
for(j = 75360; j < 75370; j++) _solve(b, j);
for(j = 76200; j < 76210; j++) _solve(b, j);
for(j = 77040; j < 77050; j++) _solve(b, j);
for(j = 77880; j < 77890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 78720; j < 78730; j++) _solve(b, j);
for(j = 79560; j < 79570; j++) _solve(b, j);
for(j = 80400; j < 80410; j++) _solve(b, j);
for(j = 81240; j < 81250; j++) _solve(b, j);
for(j = 82080; j < 82090; j++) _solve(b, j);
for(j = 82920; j < 82930; j++) _solve(b, j);
for(j = 83760; j < 83770; j++) _solve(b, j);
for(j = 84600; j < 84610; j++) _solve(b, j);
for(j = 85440; j < 85450; j++) _solve(b, j);
for(j = 86280; j < 86290; j++) _solve(b, j);
for(j = 87120; j < 87130; j++) _solve(b, j);
for(j = 87960; j < 87970; j++) _solve(b, j);
for(j = 88800; j < 88810; j++) _solve(b, j);
for(j = 89640; j < 89650; j++) _solve(b, j);
for(j = 90480; j < 90490; j++) _solve(b, j);
for(j = 91320; j < 91330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 92160; j < 92170; j++) _solve(b, j);
for(j = 93000; j < 93010; j++) _solve(b, j);
for(j = 93840; j < 93850; j++) _solve(b, j);
for(j = 94680; j < 94690; j++) _solve(b, j);
for(j = 95520; j < 95530; j++) _solve(b, j);
for(j = 96360; j < 96370; j++) _solve(b, j);
for(j = 97200; j < 97210; j++) _solve(b, j);
for(j = 98040; j < 98050; j++) _solve(b, j);
for(j = 98880; j < 98890; j++) _solve(b, j);
for(j = 99720; j < 99730; j++) _solve(b, j);
for(j = 100560; j < 100570; j++) _solve(b, j);
for(j = 101400; j < 101410; j++) _solve(b, j);
for(j = 102240; j < 102250; j++) _solve(b, j);
for(j = 103080; j < 103090; j++) _solve(b, j);
for(j = 103920; j < 103930; j++) _solve(b, j);
for(j = 104760; j < 104770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 105600; j < 105610; j++) _solve(b, j);
for(j = 106440; j < 106450; j++) _solve(b, j);
for(j = 107280; j < 107290; j++) _solve(b, j);
for(j = 108120; j < 108130; j++) _solve(b, j);
for(j = 108960; j < 108970; j++) _solve(b, j);
for(j = 109800; j < 109810; j++) _solve(b, j);
for(j = 110640; j < 110650; j++) _solve(b, j);
for(j = 111480; j < 111490; j++) _solve(b, j);
for(j = 112320; j < 112330; j++) _solve(b, j);
for(j = 113160; j < 113170; j++) _solve(b, j);
for(j = 114000; j < 114010; j++) _solve(b, j);
for(j = 114840; j < 114850; j++) _solve(b, j);
for(j = 115680; j < 115690; j++) _solve(b, j);
for(j = 116520; j < 116530; j++) _solve(b, j);
for(j = 117360; j < 117370; j++) _solve(b, j);
for(j = 118200; j < 118210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 119040; j < 119050; j++) _solve(b, j);
for(j = 119880; j < 119890; j++) _solve(b, j);
for(j = 120720; j < 120730; j++) _solve(b, j);
for(j = 121560; j < 121570; j++) _solve(b, j);
for(j = 122400; j < 122410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 52690; j < 52700; j++) _solve(b, j);
for(j = 53530; j < 53540; j++) _solve(b, j);
for(j = 54370; j < 54380; j++) _solve(b, j);
for(j = 55210; j < 55220; j++) _solve(b, j);
for(j = 56050; j < 56060; j++) _solve(b, j);
for(j = 56890; j < 56900; j++) _solve(b, j);
for(j = 57730; j < 57740; j++) _solve(b, j);
for(j = 58570; j < 58580; j++) _solve(b, j);
for(j = 59410; j < 59420; j++) _solve(b, j);
for(j = 60250; j < 60260; j++) _solve(b, j);
for(j = 61090; j < 61100; j++) _solve(b, j);
for(j = 61930; j < 61940; j++) _solve(b, j);
for(j = 62770; j < 62780; j++) _solve(b, j);
for(j = 63610; j < 63620; j++) _solve(b, j);
for(j = 64450; j < 64460; j++) _solve(b, j);
for(j = 65290; j < 65300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 66130; j < 66140; j++) _solve(b, j);
for(j = 66970; j < 66980; j++) _solve(b, j);
for(j = 67810; j < 67820; j++) _solve(b, j);
for(j = 68650; j < 68660; j++) _solve(b, j);
for(j = 69490; j < 69500; j++) _solve(b, j);
for(j = 70330; j < 70340; j++) _solve(b, j);
for(j = 71170; j < 71180; j++) _solve(b, j);
for(j = 72010; j < 72020; j++) _solve(b, j);
for(j = 72850; j < 72860; j++) _solve(b, j);
for(j = 73690; j < 73700; j++) _solve(b, j);
for(j = 74530; j < 74540; j++) _solve(b, j);
for(j = 75370; j < 75380; j++) _solve(b, j);
for(j = 76210; j < 76220; j++) _solve(b, j);
for(j = 77050; j < 77060; j++) _solve(b, j);
for(j = 77890; j < 77900; j++) _solve(b, j);
for(j = 78730; j < 78740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 79570; j < 79580; j++) _solve(b, j);
for(j = 80410; j < 80420; j++) _solve(b, j);
for(j = 81250; j < 81260; j++) _solve(b, j);
for(j = 82090; j < 82100; j++) _solve(b, j);
for(j = 82930; j < 82940; j++) _solve(b, j);
for(j = 83770; j < 83780; j++) _solve(b, j);
for(j = 84610; j < 84620; j++) _solve(b, j);
for(j = 85450; j < 85460; j++) _solve(b, j);
for(j = 86290; j < 86300; j++) _solve(b, j);
for(j = 87130; j < 87140; j++) _solve(b, j);
for(j = 87970; j < 87980; j++) _solve(b, j);
for(j = 88810; j < 88820; j++) _solve(b, j);
for(j = 89650; j < 89660; j++) _solve(b, j);
for(j = 90490; j < 90500; j++) _solve(b, j);
for(j = 91330; j < 91340; j++) _solve(b, j);
for(j = 92170; j < 92180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 93010; j < 93020; j++) _solve(b, j);
for(j = 93850; j < 93860; j++) _solve(b, j);
for(j = 94690; j < 94700; j++) _solve(b, j);
for(j = 95530; j < 95540; j++) _solve(b, j);
for(j = 96370; j < 96380; j++) _solve(b, j);
for(j = 97210; j < 97220; j++) _solve(b, j);
for(j = 98050; j < 98060; j++) _solve(b, j);
for(j = 98890; j < 98900; j++) _solve(b, j);
for(j = 99730; j < 99740; j++) _solve(b, j);
for(j = 100570; j < 100580; j++) _solve(b, j);
for(j = 101410; j < 101420; j++) _solve(b, j);
for(j = 102250; j < 102260; j++) _solve(b, j);
for(j = 103090; j < 103100; j++) _solve(b, j);
for(j = 103930; j < 103940; j++) _solve(b, j);
for(j = 104770; j < 104780; j++) _solve(b, j);
for(j = 105610; j < 105620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 106450; j < 106460; j++) _solve(b, j);
for(j = 107290; j < 107300; j++) _solve(b, j);
for(j = 108130; j < 108140; j++) _solve(b, j);
for(j = 108970; j < 108980; j++) _solve(b, j);
for(j = 109810; j < 109820; j++) _solve(b, j);
for(j = 110650; j < 110660; j++) _solve(b, j);
for(j = 111490; j < 111500; j++) _solve(b, j);
for(j = 112330; j < 112340; j++) _solve(b, j);
for(j = 113170; j < 113180; j++) _solve(b, j);
for(j = 114010; j < 114020; j++) _solve(b, j);
for(j = 114850; j < 114860; j++) _solve(b, j);
for(j = 115690; j < 115700; j++) _solve(b, j);
for(j = 116530; j < 116540; j++) _solve(b, j);
for(j = 117370; j < 117380; j++) _solve(b, j);
for(j = 118210; j < 118220; j++) _solve(b, j);
for(j = 119050; j < 119060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 119890; j < 119900; j++) _solve(b, j);
for(j = 120730; j < 120740; j++) _solve(b, j);
for(j = 121570; j < 121580; j++) _solve(b, j);
for(j = 122410; j < 122420; j++) _solve(b, j);
for(j = 123250; j < 123260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 53540; j < 53550; j++) _solve(b, j);
for(j = 54380; j < 54390; j++) _solve(b, j);
for(j = 55220; j < 55230; j++) _solve(b, j);
for(j = 56060; j < 56070; j++) _solve(b, j);
for(j = 56900; j < 56910; j++) _solve(b, j);
for(j = 57740; j < 57750; j++) _solve(b, j);
for(j = 58580; j < 58590; j++) _solve(b, j);
for(j = 59420; j < 59430; j++) _solve(b, j);
for(j = 60260; j < 60270; j++) _solve(b, j);
for(j = 61100; j < 61110; j++) _solve(b, j);
for(j = 61940; j < 61950; j++) _solve(b, j);
for(j = 62780; j < 62790; j++) _solve(b, j);
for(j = 63620; j < 63630; j++) _solve(b, j);
for(j = 64460; j < 64470; j++) _solve(b, j);
for(j = 65300; j < 65310; j++) _solve(b, j);
for(j = 66140; j < 66150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 66980; j < 66990; j++) _solve(b, j);
for(j = 67820; j < 67830; j++) _solve(b, j);
for(j = 68660; j < 68670; j++) _solve(b, j);
for(j = 69500; j < 69510; j++) _solve(b, j);
for(j = 70340; j < 70350; j++) _solve(b, j);
for(j = 71180; j < 71190; j++) _solve(b, j);
for(j = 72020; j < 72030; j++) _solve(b, j);
for(j = 72860; j < 72870; j++) _solve(b, j);
for(j = 73700; j < 73710; j++) _solve(b, j);
for(j = 74540; j < 74550; j++) _solve(b, j);
for(j = 75380; j < 75390; j++) _solve(b, j);
for(j = 76220; j < 76230; j++) _solve(b, j);
for(j = 77060; j < 77070; j++) _solve(b, j);
for(j = 77900; j < 77910; j++) _solve(b, j);
for(j = 78740; j < 78750; j++) _solve(b, j);
for(j = 79580; j < 79590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 80420; j < 80430; j++) _solve(b, j);
for(j = 81260; j < 81270; j++) _solve(b, j);
for(j = 82100; j < 82110; j++) _solve(b, j);
for(j = 82940; j < 82950; j++) _solve(b, j);
for(j = 83780; j < 83790; j++) _solve(b, j);
for(j = 84620; j < 84630; j++) _solve(b, j);
for(j = 85460; j < 85470; j++) _solve(b, j);
for(j = 86300; j < 86310; j++) _solve(b, j);
for(j = 87140; j < 87150; j++) _solve(b, j);
for(j = 87980; j < 87990; j++) _solve(b, j);
for(j = 88820; j < 88830; j++) _solve(b, j);
for(j = 89660; j < 89670; j++) _solve(b, j);
for(j = 90500; j < 90510; j++) _solve(b, j);
for(j = 91340; j < 91350; j++) _solve(b, j);
for(j = 92180; j < 92190; j++) _solve(b, j);
for(j = 93020; j < 93030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 93860; j < 93870; j++) _solve(b, j);
for(j = 94700; j < 94710; j++) _solve(b, j);
for(j = 95540; j < 95550; j++) _solve(b, j);
for(j = 96380; j < 96390; j++) _solve(b, j);
for(j = 97220; j < 97230; j++) _solve(b, j);
for(j = 98060; j < 98070; j++) _solve(b, j);
for(j = 98900; j < 98910; j++) _solve(b, j);
for(j = 99740; j < 99750; j++) _solve(b, j);
for(j = 100580; j < 100590; j++) _solve(b, j);
for(j = 101420; j < 101430; j++) _solve(b, j);
for(j = 102260; j < 102270; j++) _solve(b, j);
for(j = 103100; j < 103110; j++) _solve(b, j);
for(j = 103940; j < 103950; j++) _solve(b, j);
for(j = 104780; j < 104790; j++) _solve(b, j);
for(j = 105620; j < 105630; j++) _solve(b, j);
for(j = 106460; j < 106470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 107300; j < 107310; j++) _solve(b, j);
for(j = 108140; j < 108150; j++) _solve(b, j);
for(j = 108980; j < 108990; j++) _solve(b, j);
for(j = 109820; j < 109830; j++) _solve(b, j);
for(j = 110660; j < 110670; j++) _solve(b, j);
for(j = 111500; j < 111510; j++) _solve(b, j);
for(j = 112340; j < 112350; j++) _solve(b, j);
for(j = 113180; j < 113190; j++) _solve(b, j);
for(j = 114020; j < 114030; j++) _solve(b, j);
for(j = 114860; j < 114870; j++) _solve(b, j);
for(j = 115700; j < 115710; j++) _solve(b, j);
for(j = 116540; j < 116550; j++) _solve(b, j);
for(j = 117380; j < 117390; j++) _solve(b, j);
for(j = 118220; j < 118230; j++) _solve(b, j);
for(j = 119060; j < 119070; j++) _solve(b, j);
for(j = 119900; j < 119910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 120740; j < 120750; j++) _solve(b, j);
for(j = 121580; j < 121590; j++) _solve(b, j);
for(j = 122420; j < 122430; j++) _solve(b, j);
for(j = 123260; j < 123270; j++) _solve(b, j);
for(j = 124100; j < 124110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 54390; j < 54400; j++) _solve(b, j);
for(j = 55230; j < 55240; j++) _solve(b, j);
for(j = 56070; j < 56080; j++) _solve(b, j);
for(j = 56910; j < 56920; j++) _solve(b, j);
for(j = 57750; j < 57760; j++) _solve(b, j);
for(j = 58590; j < 58600; j++) _solve(b, j);
for(j = 59430; j < 59440; j++) _solve(b, j);
for(j = 60270; j < 60280; j++) _solve(b, j);
for(j = 61110; j < 61120; j++) _solve(b, j);
for(j = 61950; j < 61960; j++) _solve(b, j);
for(j = 62790; j < 62800; j++) _solve(b, j);
for(j = 63630; j < 63640; j++) _solve(b, j);
for(j = 64470; j < 64480; j++) _solve(b, j);
for(j = 65310; j < 65320; j++) _solve(b, j);
for(j = 66150; j < 66160; j++) _solve(b, j);
for(j = 66990; j < 67000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 67830; j < 67840; j++) _solve(b, j);
for(j = 68670; j < 68680; j++) _solve(b, j);
for(j = 69510; j < 69520; j++) _solve(b, j);
for(j = 70350; j < 70360; j++) _solve(b, j);
for(j = 71190; j < 71200; j++) _solve(b, j);
for(j = 72030; j < 72040; j++) _solve(b, j);
for(j = 72870; j < 72880; j++) _solve(b, j);
for(j = 73710; j < 73720; j++) _solve(b, j);
for(j = 74550; j < 74560; j++) _solve(b, j);
for(j = 75390; j < 75400; j++) _solve(b, j);
for(j = 76230; j < 76240; j++) _solve(b, j);
for(j = 77070; j < 77080; j++) _solve(b, j);
for(j = 77910; j < 77920; j++) _solve(b, j);
for(j = 78750; j < 78760; j++) _solve(b, j);
for(j = 79590; j < 79600; j++) _solve(b, j);
for(j = 80430; j < 80440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 81270; j < 81280; j++) _solve(b, j);
for(j = 82110; j < 82120; j++) _solve(b, j);
for(j = 82950; j < 82960; j++) _solve(b, j);
for(j = 83790; j < 83800; j++) _solve(b, j);
for(j = 84630; j < 84640; j++) _solve(b, j);
for(j = 85470; j < 85480; j++) _solve(b, j);
for(j = 86310; j < 86320; j++) _solve(b, j);
for(j = 87150; j < 87160; j++) _solve(b, j);
for(j = 87990; j < 88000; j++) _solve(b, j);
for(j = 88830; j < 88840; j++) _solve(b, j);
for(j = 89670; j < 89680; j++) _solve(b, j);
for(j = 90510; j < 90520; j++) _solve(b, j);
for(j = 91350; j < 91360; j++) _solve(b, j);
for(j = 92190; j < 92200; j++) _solve(b, j);
for(j = 93030; j < 93040; j++) _solve(b, j);
for(j = 93870; j < 93880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 94710; j < 94720; j++) _solve(b, j);
for(j = 95550; j < 95560; j++) _solve(b, j);
for(j = 96390; j < 96400; j++) _solve(b, j);
for(j = 97230; j < 97240; j++) _solve(b, j);
for(j = 98070; j < 98080; j++) _solve(b, j);
for(j = 98910; j < 98920; j++) _solve(b, j);
for(j = 99750; j < 99760; j++) _solve(b, j);
for(j = 100590; j < 100600; j++) _solve(b, j);
for(j = 101430; j < 101440; j++) _solve(b, j);
for(j = 102270; j < 102280; j++) _solve(b, j);
for(j = 103110; j < 103120; j++) _solve(b, j);
for(j = 103950; j < 103960; j++) _solve(b, j);
for(j = 104790; j < 104800; j++) _solve(b, j);
for(j = 105630; j < 105640; j++) _solve(b, j);
for(j = 106470; j < 106480; j++) _solve(b, j);
for(j = 107310; j < 107320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 108150; j < 108160; j++) _solve(b, j);
for(j = 108990; j < 109000; j++) _solve(b, j);
for(j = 109830; j < 109840; j++) _solve(b, j);
for(j = 110670; j < 110680; j++) _solve(b, j);
for(j = 111510; j < 111520; j++) _solve(b, j);
for(j = 112350; j < 112360; j++) _solve(b, j);
for(j = 113190; j < 113200; j++) _solve(b, j);
for(j = 114030; j < 114040; j++) _solve(b, j);
for(j = 114870; j < 114880; j++) _solve(b, j);
for(j = 115710; j < 115720; j++) _solve(b, j);
for(j = 116550; j < 116560; j++) _solve(b, j);
for(j = 117390; j < 117400; j++) _solve(b, j);
for(j = 118230; j < 118240; j++) _solve(b, j);
for(j = 119070; j < 119080; j++) _solve(b, j);
for(j = 119910; j < 119920; j++) _solve(b, j);
for(j = 120750; j < 120760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 121590; j < 121600; j++) _solve(b, j);
for(j = 122430; j < 122440; j++) _solve(b, j);
for(j = 123270; j < 123280; j++) _solve(b, j);
for(j = 124110; j < 124120; j++) _solve(b, j);
for(j = 124950; j < 124960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 55240; j < 55250; j++) _solve(b, j);
for(j = 56080; j < 56090; j++) _solve(b, j);
for(j = 56920; j < 56930; j++) _solve(b, j);
for(j = 57760; j < 57770; j++) _solve(b, j);
for(j = 58600; j < 58610; j++) _solve(b, j);
for(j = 59440; j < 59450; j++) _solve(b, j);
for(j = 60280; j < 60290; j++) _solve(b, j);
for(j = 61120; j < 61130; j++) _solve(b, j);
for(j = 61960; j < 61970; j++) _solve(b, j);
for(j = 62800; j < 62810; j++) _solve(b, j);
for(j = 63640; j < 63650; j++) _solve(b, j);
for(j = 64480; j < 64490; j++) _solve(b, j);
for(j = 65320; j < 65330; j++) _solve(b, j);
for(j = 66160; j < 66170; j++) _solve(b, j);
for(j = 67000; j < 67010; j++) _solve(b, j);
for(j = 67840; j < 67850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 68680; j < 68690; j++) _solve(b, j);
for(j = 69520; j < 69530; j++) _solve(b, j);
for(j = 70360; j < 70370; j++) _solve(b, j);
for(j = 71200; j < 71210; j++) _solve(b, j);
for(j = 72040; j < 72050; j++) _solve(b, j);
for(j = 72880; j < 72890; j++) _solve(b, j);
for(j = 73720; j < 73730; j++) _solve(b, j);
for(j = 74560; j < 74570; j++) _solve(b, j);
for(j = 75400; j < 75410; j++) _solve(b, j);
for(j = 76240; j < 76250; j++) _solve(b, j);
for(j = 77080; j < 77090; j++) _solve(b, j);
for(j = 77920; j < 77930; j++) _solve(b, j);
for(j = 78760; j < 78770; j++) _solve(b, j);
for(j = 79600; j < 79610; j++) _solve(b, j);
for(j = 80440; j < 80450; j++) _solve(b, j);
for(j = 81280; j < 81290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 82120; j < 82130; j++) _solve(b, j);
for(j = 82960; j < 82970; j++) _solve(b, j);
for(j = 83800; j < 83810; j++) _solve(b, j);
for(j = 84640; j < 84650; j++) _solve(b, j);
for(j = 85480; j < 85490; j++) _solve(b, j);
for(j = 86320; j < 86330; j++) _solve(b, j);
for(j = 87160; j < 87170; j++) _solve(b, j);
for(j = 88000; j < 88010; j++) _solve(b, j);
for(j = 88840; j < 88850; j++) _solve(b, j);
for(j = 89680; j < 89690; j++) _solve(b, j);
for(j = 90520; j < 90530; j++) _solve(b, j);
for(j = 91360; j < 91370; j++) _solve(b, j);
for(j = 92200; j < 92210; j++) _solve(b, j);
for(j = 93040; j < 93050; j++) _solve(b, j);
for(j = 93880; j < 93890; j++) _solve(b, j);
for(j = 94720; j < 94730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 95560; j < 95570; j++) _solve(b, j);
for(j = 96400; j < 96410; j++) _solve(b, j);
for(j = 97240; j < 97250; j++) _solve(b, j);
for(j = 98080; j < 98090; j++) _solve(b, j);
for(j = 98920; j < 98930; j++) _solve(b, j);
for(j = 99760; j < 99770; j++) _solve(b, j);
for(j = 100600; j < 100610; j++) _solve(b, j);
for(j = 101440; j < 101450; j++) _solve(b, j);
for(j = 102280; j < 102290; j++) _solve(b, j);
for(j = 103120; j < 103130; j++) _solve(b, j);
for(j = 103960; j < 103970; j++) _solve(b, j);
for(j = 104800; j < 104810; j++) _solve(b, j);
for(j = 105640; j < 105650; j++) _solve(b, j);
for(j = 106480; j < 106490; j++) _solve(b, j);
for(j = 107320; j < 107330; j++) _solve(b, j);
for(j = 108160; j < 108170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 109000; j < 109010; j++) _solve(b, j);
for(j = 109840; j < 109850; j++) _solve(b, j);
for(j = 110680; j < 110690; j++) _solve(b, j);
for(j = 111520; j < 111530; j++) _solve(b, j);
for(j = 112360; j < 112370; j++) _solve(b, j);
for(j = 113200; j < 113210; j++) _solve(b, j);
for(j = 114040; j < 114050; j++) _solve(b, j);
for(j = 114880; j < 114890; j++) _solve(b, j);
for(j = 115720; j < 115730; j++) _solve(b, j);
for(j = 116560; j < 116570; j++) _solve(b, j);
for(j = 117400; j < 117410; j++) _solve(b, j);
for(j = 118240; j < 118250; j++) _solve(b, j);
for(j = 119080; j < 119090; j++) _solve(b, j);
for(j = 119920; j < 119930; j++) _solve(b, j);
for(j = 120760; j < 120770; j++) _solve(b, j);
for(j = 121600; j < 121610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 122440; j < 122450; j++) _solve(b, j);
for(j = 123280; j < 123290; j++) _solve(b, j);
for(j = 124120; j < 124130; j++) _solve(b, j);
for(j = 124960; j < 124970; j++) _solve(b, j);
for(j = 125800; j < 125810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 56090; j < 56100; j++) _solve(b, j);
for(j = 56930; j < 56940; j++) _solve(b, j);
for(j = 57770; j < 57780; j++) _solve(b, j);
for(j = 58610; j < 58620; j++) _solve(b, j);
for(j = 59450; j < 59460; j++) _solve(b, j);
for(j = 60290; j < 60300; j++) _solve(b, j);
for(j = 61130; j < 61140; j++) _solve(b, j);
for(j = 61970; j < 61980; j++) _solve(b, j);
for(j = 62810; j < 62820; j++) _solve(b, j);
for(j = 63650; j < 63660; j++) _solve(b, j);
for(j = 64490; j < 64500; j++) _solve(b, j);
for(j = 65330; j < 65340; j++) _solve(b, j);
for(j = 66170; j < 66180; j++) _solve(b, j);
for(j = 67010; j < 67020; j++) _solve(b, j);
for(j = 67850; j < 67860; j++) _solve(b, j);
for(j = 68690; j < 68700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 69530; j < 69540; j++) _solve(b, j);
for(j = 70370; j < 70380; j++) _solve(b, j);
for(j = 71210; j < 71220; j++) _solve(b, j);
for(j = 72050; j < 72060; j++) _solve(b, j);
for(j = 72890; j < 72900; j++) _solve(b, j);
for(j = 73730; j < 73740; j++) _solve(b, j);
for(j = 74570; j < 74580; j++) _solve(b, j);
for(j = 75410; j < 75420; j++) _solve(b, j);
for(j = 76250; j < 76260; j++) _solve(b, j);
for(j = 77090; j < 77100; j++) _solve(b, j);
for(j = 77930; j < 77940; j++) _solve(b, j);
for(j = 78770; j < 78780; j++) _solve(b, j);
for(j = 79610; j < 79620; j++) _solve(b, j);
for(j = 80450; j < 80460; j++) _solve(b, j);
for(j = 81290; j < 81300; j++) _solve(b, j);
for(j = 82130; j < 82140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 82970; j < 82980; j++) _solve(b, j);
for(j = 83810; j < 83820; j++) _solve(b, j);
for(j = 84650; j < 84660; j++) _solve(b, j);
for(j = 85490; j < 85500; j++) _solve(b, j);
for(j = 86330; j < 86340; j++) _solve(b, j);
for(j = 87170; j < 87180; j++) _solve(b, j);
for(j = 88010; j < 88020; j++) _solve(b, j);
for(j = 88850; j < 88860; j++) _solve(b, j);
for(j = 89690; j < 89700; j++) _solve(b, j);
for(j = 90530; j < 90540; j++) _solve(b, j);
for(j = 91370; j < 91380; j++) _solve(b, j);
for(j = 92210; j < 92220; j++) _solve(b, j);
for(j = 93050; j < 93060; j++) _solve(b, j);
for(j = 93890; j < 93900; j++) _solve(b, j);
for(j = 94730; j < 94740; j++) _solve(b, j);
for(j = 95570; j < 95580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 96410; j < 96420; j++) _solve(b, j);
for(j = 97250; j < 97260; j++) _solve(b, j);
for(j = 98090; j < 98100; j++) _solve(b, j);
for(j = 98930; j < 98940; j++) _solve(b, j);
for(j = 99770; j < 99780; j++) _solve(b, j);
for(j = 100610; j < 100620; j++) _solve(b, j);
for(j = 101450; j < 101460; j++) _solve(b, j);
for(j = 102290; j < 102300; j++) _solve(b, j);
for(j = 103130; j < 103140; j++) _solve(b, j);
for(j = 103970; j < 103980; j++) _solve(b, j);
for(j = 104810; j < 104820; j++) _solve(b, j);
for(j = 105650; j < 105660; j++) _solve(b, j);
for(j = 106490; j < 106500; j++) _solve(b, j);
for(j = 107330; j < 107340; j++) _solve(b, j);
for(j = 108170; j < 108180; j++) _solve(b, j);
for(j = 109010; j < 109020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 109850; j < 109860; j++) _solve(b, j);
for(j = 110690; j < 110700; j++) _solve(b, j);
for(j = 111530; j < 111540; j++) _solve(b, j);
for(j = 112370; j < 112380; j++) _solve(b, j);
for(j = 113210; j < 113220; j++) _solve(b, j);
for(j = 114050; j < 114060; j++) _solve(b, j);
for(j = 114890; j < 114900; j++) _solve(b, j);
for(j = 115730; j < 115740; j++) _solve(b, j);
for(j = 116570; j < 116580; j++) _solve(b, j);
for(j = 117410; j < 117420; j++) _solve(b, j);
for(j = 118250; j < 118260; j++) _solve(b, j);
for(j = 119090; j < 119100; j++) _solve(b, j);
for(j = 119930; j < 119940; j++) _solve(b, j);
for(j = 120770; j < 120780; j++) _solve(b, j);
for(j = 121610; j < 121620; j++) _solve(b, j);
for(j = 122450; j < 122460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 123290; j < 123300; j++) _solve(b, j);
for(j = 124130; j < 124140; j++) _solve(b, j);
for(j = 124970; j < 124980; j++) _solve(b, j);
for(j = 125810; j < 125820; j++) _solve(b, j);
for(j = 126650; j < 126660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 56940; j < 56950; j++) _solve(b, j);
for(j = 57780; j < 57790; j++) _solve(b, j);
for(j = 58620; j < 58630; j++) _solve(b, j);
for(j = 59460; j < 59470; j++) _solve(b, j);
for(j = 60300; j < 60310; j++) _solve(b, j);
for(j = 61140; j < 61150; j++) _solve(b, j);
for(j = 61980; j < 61990; j++) _solve(b, j);
for(j = 62820; j < 62830; j++) _solve(b, j);
for(j = 63660; j < 63670; j++) _solve(b, j);
for(j = 64500; j < 64510; j++) _solve(b, j);
for(j = 65340; j < 65350; j++) _solve(b, j);
for(j = 66180; j < 66190; j++) _solve(b, j);
for(j = 67020; j < 67030; j++) _solve(b, j);
for(j = 67860; j < 67870; j++) _solve(b, j);
for(j = 68700; j < 68710; j++) _solve(b, j);
for(j = 69540; j < 69550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 70380; j < 70390; j++) _solve(b, j);
for(j = 71220; j < 71230; j++) _solve(b, j);
for(j = 72060; j < 72070; j++) _solve(b, j);
for(j = 72900; j < 72910; j++) _solve(b, j);
for(j = 73740; j < 73750; j++) _solve(b, j);
for(j = 74580; j < 74590; j++) _solve(b, j);
for(j = 75420; j < 75430; j++) _solve(b, j);
for(j = 76260; j < 76270; j++) _solve(b, j);
for(j = 77100; j < 77110; j++) _solve(b, j);
for(j = 77940; j < 77950; j++) _solve(b, j);
for(j = 78780; j < 78790; j++) _solve(b, j);
for(j = 79620; j < 79630; j++) _solve(b, j);
for(j = 80460; j < 80470; j++) _solve(b, j);
for(j = 81300; j < 81310; j++) _solve(b, j);
for(j = 82140; j < 82150; j++) _solve(b, j);
for(j = 82980; j < 82990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 83820; j < 83830; j++) _solve(b, j);
for(j = 84660; j < 84670; j++) _solve(b, j);
for(j = 85500; j < 85510; j++) _solve(b, j);
for(j = 86340; j < 86350; j++) _solve(b, j);
for(j = 87180; j < 87190; j++) _solve(b, j);
for(j = 88020; j < 88030; j++) _solve(b, j);
for(j = 88860; j < 88870; j++) _solve(b, j);
for(j = 89700; j < 89710; j++) _solve(b, j);
for(j = 90540; j < 90550; j++) _solve(b, j);
for(j = 91380; j < 91390; j++) _solve(b, j);
for(j = 92220; j < 92230; j++) _solve(b, j);
for(j = 93060; j < 93070; j++) _solve(b, j);
for(j = 93900; j < 93910; j++) _solve(b, j);
for(j = 94740; j < 94750; j++) _solve(b, j);
for(j = 95580; j < 95590; j++) _solve(b, j);
for(j = 96420; j < 96430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 97260; j < 97270; j++) _solve(b, j);
for(j = 98100; j < 98110; j++) _solve(b, j);
for(j = 98940; j < 98950; j++) _solve(b, j);
for(j = 99780; j < 99790; j++) _solve(b, j);
for(j = 100620; j < 100630; j++) _solve(b, j);
for(j = 101460; j < 101470; j++) _solve(b, j);
for(j = 102300; j < 102310; j++) _solve(b, j);
for(j = 103140; j < 103150; j++) _solve(b, j);
for(j = 103980; j < 103990; j++) _solve(b, j);
for(j = 104820; j < 104830; j++) _solve(b, j);
for(j = 105660; j < 105670; j++) _solve(b, j);
for(j = 106500; j < 106510; j++) _solve(b, j);
for(j = 107340; j < 107350; j++) _solve(b, j);
for(j = 108180; j < 108190; j++) _solve(b, j);
for(j = 109020; j < 109030; j++) _solve(b, j);
for(j = 109860; j < 109870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 110700; j < 110710; j++) _solve(b, j);
for(j = 111540; j < 111550; j++) _solve(b, j);
for(j = 112380; j < 112390; j++) _solve(b, j);
for(j = 113220; j < 113230; j++) _solve(b, j);
for(j = 114060; j < 114070; j++) _solve(b, j);
for(j = 114900; j < 114910; j++) _solve(b, j);
for(j = 115740; j < 115750; j++) _solve(b, j);
for(j = 116580; j < 116590; j++) _solve(b, j);
for(j = 117420; j < 117430; j++) _solve(b, j);
for(j = 118260; j < 118270; j++) _solve(b, j);
for(j = 119100; j < 119110; j++) _solve(b, j);
for(j = 119940; j < 119950; j++) _solve(b, j);
for(j = 120780; j < 120790; j++) _solve(b, j);
for(j = 121620; j < 121630; j++) _solve(b, j);
for(j = 122460; j < 122470; j++) _solve(b, j);
for(j = 123300; j < 123310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 124140; j < 124150; j++) _solve(b, j);
for(j = 124980; j < 124990; j++) _solve(b, j);
for(j = 125820; j < 125830; j++) _solve(b, j);
for(j = 126660; j < 126670; j++) _solve(b, j);
for(j = 127500; j < 127510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 57790; j < 57800; j++) _solve(b, j);
for(j = 58630; j < 58640; j++) _solve(b, j);
for(j = 59470; j < 59480; j++) _solve(b, j);
for(j = 60310; j < 60320; j++) _solve(b, j);
for(j = 61150; j < 61160; j++) _solve(b, j);
for(j = 61990; j < 62000; j++) _solve(b, j);
for(j = 62830; j < 62840; j++) _solve(b, j);
for(j = 63670; j < 63680; j++) _solve(b, j);
for(j = 64510; j < 64520; j++) _solve(b, j);
for(j = 65350; j < 65360; j++) _solve(b, j);
for(j = 66190; j < 66200; j++) _solve(b, j);
for(j = 67030; j < 67040; j++) _solve(b, j);
for(j = 67870; j < 67880; j++) _solve(b, j);
for(j = 68710; j < 68720; j++) _solve(b, j);
for(j = 69550; j < 69560; j++) _solve(b, j);
for(j = 70390; j < 70400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 71230; j < 71240; j++) _solve(b, j);
for(j = 72070; j < 72080; j++) _solve(b, j);
for(j = 72910; j < 72920; j++) _solve(b, j);
for(j = 73750; j < 73760; j++) _solve(b, j);
for(j = 74590; j < 74600; j++) _solve(b, j);
for(j = 75430; j < 75440; j++) _solve(b, j);
for(j = 76270; j < 76280; j++) _solve(b, j);
for(j = 77110; j < 77120; j++) _solve(b, j);
for(j = 77950; j < 77960; j++) _solve(b, j);
for(j = 78790; j < 78800; j++) _solve(b, j);
for(j = 79630; j < 79640; j++) _solve(b, j);
for(j = 80470; j < 80480; j++) _solve(b, j);
for(j = 81310; j < 81320; j++) _solve(b, j);
for(j = 82150; j < 82160; j++) _solve(b, j);
for(j = 82990; j < 83000; j++) _solve(b, j);
for(j = 83830; j < 83840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 84670; j < 84680; j++) _solve(b, j);
for(j = 85510; j < 85520; j++) _solve(b, j);
for(j = 86350; j < 86360; j++) _solve(b, j);
for(j = 87190; j < 87200; j++) _solve(b, j);
for(j = 88030; j < 88040; j++) _solve(b, j);
for(j = 88870; j < 88880; j++) _solve(b, j);
for(j = 89710; j < 89720; j++) _solve(b, j);
for(j = 90550; j < 90560; j++) _solve(b, j);
for(j = 91390; j < 91400; j++) _solve(b, j);
for(j = 92230; j < 92240; j++) _solve(b, j);
for(j = 93070; j < 93080; j++) _solve(b, j);
for(j = 93910; j < 93920; j++) _solve(b, j);
for(j = 94750; j < 94760; j++) _solve(b, j);
for(j = 95590; j < 95600; j++) _solve(b, j);
for(j = 96430; j < 96440; j++) _solve(b, j);
for(j = 97270; j < 97280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 98110; j < 98120; j++) _solve(b, j);
for(j = 98950; j < 98960; j++) _solve(b, j);
for(j = 99790; j < 99800; j++) _solve(b, j);
for(j = 100630; j < 100640; j++) _solve(b, j);
for(j = 101470; j < 101480; j++) _solve(b, j);
for(j = 102310; j < 102320; j++) _solve(b, j);
for(j = 103150; j < 103160; j++) _solve(b, j);
for(j = 103990; j < 104000; j++) _solve(b, j);
for(j = 104830; j < 104840; j++) _solve(b, j);
for(j = 105670; j < 105680; j++) _solve(b, j);
for(j = 106510; j < 106520; j++) _solve(b, j);
for(j = 107350; j < 107360; j++) _solve(b, j);
for(j = 108190; j < 108200; j++) _solve(b, j);
for(j = 109030; j < 109040; j++) _solve(b, j);
for(j = 109870; j < 109880; j++) _solve(b, j);
for(j = 110710; j < 110720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 111550; j < 111560; j++) _solve(b, j);
for(j = 112390; j < 112400; j++) _solve(b, j);
for(j = 113230; j < 113240; j++) _solve(b, j);
for(j = 114070; j < 114080; j++) _solve(b, j);
for(j = 114910; j < 114920; j++) _solve(b, j);
for(j = 115750; j < 115760; j++) _solve(b, j);
for(j = 116590; j < 116600; j++) _solve(b, j);
for(j = 117430; j < 117440; j++) _solve(b, j);
for(j = 118270; j < 118280; j++) _solve(b, j);
for(j = 119110; j < 119120; j++) _solve(b, j);
for(j = 119950; j < 119960; j++) _solve(b, j);
for(j = 120790; j < 120800; j++) _solve(b, j);
for(j = 121630; j < 121640; j++) _solve(b, j);
for(j = 122470; j < 122480; j++) _solve(b, j);
for(j = 123310; j < 123320; j++) _solve(b, j);
for(j = 124150; j < 124160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 124990; j < 125000; j++) _solve(b, j);
for(j = 125830; j < 125840; j++) _solve(b, j);
for(j = 126670; j < 126680; j++) _solve(b, j);
for(j = 127510; j < 127520; j++) _solve(b, j);
for(j = 128350; j < 128360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 58640; j < 58650; j++) _solve(b, j);
for(j = 59480; j < 59490; j++) _solve(b, j);
for(j = 60320; j < 60330; j++) _solve(b, j);
for(j = 61160; j < 61170; j++) _solve(b, j);
for(j = 62000; j < 62010; j++) _solve(b, j);
for(j = 62840; j < 62850; j++) _solve(b, j);
for(j = 63680; j < 63690; j++) _solve(b, j);
for(j = 64520; j < 64530; j++) _solve(b, j);
for(j = 65360; j < 65370; j++) _solve(b, j);
for(j = 66200; j < 66210; j++) _solve(b, j);
for(j = 67040; j < 67050; j++) _solve(b, j);
for(j = 67880; j < 67890; j++) _solve(b, j);
for(j = 68720; j < 68730; j++) _solve(b, j);
for(j = 69560; j < 69570; j++) _solve(b, j);
for(j = 70400; j < 70410; j++) _solve(b, j);
for(j = 71240; j < 71250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 72080; j < 72090; j++) _solve(b, j);
for(j = 72920; j < 72930; j++) _solve(b, j);
for(j = 73760; j < 73770; j++) _solve(b, j);
for(j = 74600; j < 74610; j++) _solve(b, j);
for(j = 75440; j < 75450; j++) _solve(b, j);
for(j = 76280; j < 76290; j++) _solve(b, j);
for(j = 77120; j < 77130; j++) _solve(b, j);
for(j = 77960; j < 77970; j++) _solve(b, j);
for(j = 78800; j < 78810; j++) _solve(b, j);
for(j = 79640; j < 79650; j++) _solve(b, j);
for(j = 80480; j < 80490; j++) _solve(b, j);
for(j = 81320; j < 81330; j++) _solve(b, j);
for(j = 82160; j < 82170; j++) _solve(b, j);
for(j = 83000; j < 83010; j++) _solve(b, j);
for(j = 83840; j < 83850; j++) _solve(b, j);
for(j = 84680; j < 84690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 85520; j < 85530; j++) _solve(b, j);
for(j = 86360; j < 86370; j++) _solve(b, j);
for(j = 87200; j < 87210; j++) _solve(b, j);
for(j = 88040; j < 88050; j++) _solve(b, j);
for(j = 88880; j < 88890; j++) _solve(b, j);
for(j = 89720; j < 89730; j++) _solve(b, j);
for(j = 90560; j < 90570; j++) _solve(b, j);
for(j = 91400; j < 91410; j++) _solve(b, j);
for(j = 92240; j < 92250; j++) _solve(b, j);
for(j = 93080; j < 93090; j++) _solve(b, j);
for(j = 93920; j < 93930; j++) _solve(b, j);
for(j = 94760; j < 94770; j++) _solve(b, j);
for(j = 95600; j < 95610; j++) _solve(b, j);
for(j = 96440; j < 96450; j++) _solve(b, j);
for(j = 97280; j < 97290; j++) _solve(b, j);
for(j = 98120; j < 98130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 98960; j < 98970; j++) _solve(b, j);
for(j = 99800; j < 99810; j++) _solve(b, j);
for(j = 100640; j < 100650; j++) _solve(b, j);
for(j = 101480; j < 101490; j++) _solve(b, j);
for(j = 102320; j < 102330; j++) _solve(b, j);
for(j = 103160; j < 103170; j++) _solve(b, j);
for(j = 104000; j < 104010; j++) _solve(b, j);
for(j = 104840; j < 104850; j++) _solve(b, j);
for(j = 105680; j < 105690; j++) _solve(b, j);
for(j = 106520; j < 106530; j++) _solve(b, j);
for(j = 107360; j < 107370; j++) _solve(b, j);
for(j = 108200; j < 108210; j++) _solve(b, j);
for(j = 109040; j < 109050; j++) _solve(b, j);
for(j = 109880; j < 109890; j++) _solve(b, j);
for(j = 110720; j < 110730; j++) _solve(b, j);
for(j = 111560; j < 111570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 112400; j < 112410; j++) _solve(b, j);
for(j = 113240; j < 113250; j++) _solve(b, j);
for(j = 114080; j < 114090; j++) _solve(b, j);
for(j = 114920; j < 114930; j++) _solve(b, j);
for(j = 115760; j < 115770; j++) _solve(b, j);
for(j = 116600; j < 116610; j++) _solve(b, j);
for(j = 117440; j < 117450; j++) _solve(b, j);
for(j = 118280; j < 118290; j++) _solve(b, j);
for(j = 119120; j < 119130; j++) _solve(b, j);
for(j = 119960; j < 119970; j++) _solve(b, j);
for(j = 120800; j < 120810; j++) _solve(b, j);
for(j = 121640; j < 121650; j++) _solve(b, j);
for(j = 122480; j < 122490; j++) _solve(b, j);
for(j = 123320; j < 123330; j++) _solve(b, j);
for(j = 124160; j < 124170; j++) _solve(b, j);
for(j = 125000; j < 125010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 125840; j < 125850; j++) _solve(b, j);
for(j = 126680; j < 126690; j++) _solve(b, j);
for(j = 127520; j < 127530; j++) _solve(b, j);
for(j = 128360; j < 128370; j++) _solve(b, j);
for(j = 129200; j < 129210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 59490; j < 59500; j++) _solve(b, j);
for(j = 60330; j < 60340; j++) _solve(b, j);
for(j = 61170; j < 61180; j++) _solve(b, j);
for(j = 62010; j < 62020; j++) _solve(b, j);
for(j = 62850; j < 62860; j++) _solve(b, j);
for(j = 63690; j < 63700; j++) _solve(b, j);
for(j = 64530; j < 64540; j++) _solve(b, j);
for(j = 65370; j < 65380; j++) _solve(b, j);
for(j = 66210; j < 66220; j++) _solve(b, j);
for(j = 67050; j < 67060; j++) _solve(b, j);
for(j = 67890; j < 67900; j++) _solve(b, j);
for(j = 68730; j < 68740; j++) _solve(b, j);
for(j = 69570; j < 69580; j++) _solve(b, j);
for(j = 70410; j < 70420; j++) _solve(b, j);
for(j = 71250; j < 71260; j++) _solve(b, j);
for(j = 72090; j < 72100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 72930; j < 72940; j++) _solve(b, j);
for(j = 73770; j < 73780; j++) _solve(b, j);
for(j = 74610; j < 74620; j++) _solve(b, j);
for(j = 75450; j < 75460; j++) _solve(b, j);
for(j = 76290; j < 76300; j++) _solve(b, j);
for(j = 77130; j < 77140; j++) _solve(b, j);
for(j = 77970; j < 77980; j++) _solve(b, j);
for(j = 78810; j < 78820; j++) _solve(b, j);
for(j = 79650; j < 79660; j++) _solve(b, j);
for(j = 80490; j < 80500; j++) _solve(b, j);
for(j = 81330; j < 81340; j++) _solve(b, j);
for(j = 82170; j < 82180; j++) _solve(b, j);
for(j = 83010; j < 83020; j++) _solve(b, j);
for(j = 83850; j < 83860; j++) _solve(b, j);
for(j = 84690; j < 84700; j++) _solve(b, j);
for(j = 85530; j < 85540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 86370; j < 86380; j++) _solve(b, j);
for(j = 87210; j < 87220; j++) _solve(b, j);
for(j = 88050; j < 88060; j++) _solve(b, j);
for(j = 88890; j < 88900; j++) _solve(b, j);
for(j = 89730; j < 89740; j++) _solve(b, j);
for(j = 90570; j < 90580; j++) _solve(b, j);
for(j = 91410; j < 91420; j++) _solve(b, j);
for(j = 92250; j < 92260; j++) _solve(b, j);
for(j = 93090; j < 93100; j++) _solve(b, j);
for(j = 93930; j < 93940; j++) _solve(b, j);
for(j = 94770; j < 94780; j++) _solve(b, j);
for(j = 95610; j < 95620; j++) _solve(b, j);
for(j = 96450; j < 96460; j++) _solve(b, j);
for(j = 97290; j < 97300; j++) _solve(b, j);
for(j = 98130; j < 98140; j++) _solve(b, j);
for(j = 98970; j < 98980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 99810; j < 99820; j++) _solve(b, j);
for(j = 100650; j < 100660; j++) _solve(b, j);
for(j = 101490; j < 101500; j++) _solve(b, j);
for(j = 102330; j < 102340; j++) _solve(b, j);
for(j = 103170; j < 103180; j++) _solve(b, j);
for(j = 104010; j < 104020; j++) _solve(b, j);
for(j = 104850; j < 104860; j++) _solve(b, j);
for(j = 105690; j < 105700; j++) _solve(b, j);
for(j = 106530; j < 106540; j++) _solve(b, j);
for(j = 107370; j < 107380; j++) _solve(b, j);
for(j = 108210; j < 108220; j++) _solve(b, j);
for(j = 109050; j < 109060; j++) _solve(b, j);
for(j = 109890; j < 109900; j++) _solve(b, j);
for(j = 110730; j < 110740; j++) _solve(b, j);
for(j = 111570; j < 111580; j++) _solve(b, j);
for(j = 112410; j < 112420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 113250; j < 113260; j++) _solve(b, j);
for(j = 114090; j < 114100; j++) _solve(b, j);
for(j = 114930; j < 114940; j++) _solve(b, j);
for(j = 115770; j < 115780; j++) _solve(b, j);
for(j = 116610; j < 116620; j++) _solve(b, j);
for(j = 117450; j < 117460; j++) _solve(b, j);
for(j = 118290; j < 118300; j++) _solve(b, j);
for(j = 119130; j < 119140; j++) _solve(b, j);
for(j = 119970; j < 119980; j++) _solve(b, j);
for(j = 120810; j < 120820; j++) _solve(b, j);
for(j = 121650; j < 121660; j++) _solve(b, j);
for(j = 122490; j < 122500; j++) _solve(b, j);
for(j = 123330; j < 123340; j++) _solve(b, j);
for(j = 124170; j < 124180; j++) _solve(b, j);
for(j = 125010; j < 125020; j++) _solve(b, j);
for(j = 125850; j < 125860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 126690; j < 126700; j++) _solve(b, j);
for(j = 127530; j < 127540; j++) _solve(b, j);
for(j = 128370; j < 128380; j++) _solve(b, j);
for(j = 129210; j < 129220; j++) _solve(b, j);
for(j = 130050; j < 130060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 60340; j < 60350; j++) _solve(b, j);
for(j = 61180; j < 61190; j++) _solve(b, j);
for(j = 62020; j < 62030; j++) _solve(b, j);
for(j = 62860; j < 62870; j++) _solve(b, j);
for(j = 63700; j < 63710; j++) _solve(b, j);
for(j = 64540; j < 64550; j++) _solve(b, j);
for(j = 65380; j < 65390; j++) _solve(b, j);
for(j = 66220; j < 66230; j++) _solve(b, j);
for(j = 67060; j < 67070; j++) _solve(b, j);
for(j = 67900; j < 67910; j++) _solve(b, j);
for(j = 68740; j < 68750; j++) _solve(b, j);
for(j = 69580; j < 69590; j++) _solve(b, j);
for(j = 70420; j < 70430; j++) _solve(b, j);
for(j = 71260; j < 71270; j++) _solve(b, j);
for(j = 72100; j < 72110; j++) _solve(b, j);
for(j = 72940; j < 72950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 73780; j < 73790; j++) _solve(b, j);
for(j = 74620; j < 74630; j++) _solve(b, j);
for(j = 75460; j < 75470; j++) _solve(b, j);
for(j = 76300; j < 76310; j++) _solve(b, j);
for(j = 77140; j < 77150; j++) _solve(b, j);
for(j = 77980; j < 77990; j++) _solve(b, j);
for(j = 78820; j < 78830; j++) _solve(b, j);
for(j = 79660; j < 79670; j++) _solve(b, j);
for(j = 80500; j < 80510; j++) _solve(b, j);
for(j = 81340; j < 81350; j++) _solve(b, j);
for(j = 82180; j < 82190; j++) _solve(b, j);
for(j = 83020; j < 83030; j++) _solve(b, j);
for(j = 83860; j < 83870; j++) _solve(b, j);
for(j = 84700; j < 84710; j++) _solve(b, j);
for(j = 85540; j < 85550; j++) _solve(b, j);
for(j = 86380; j < 86390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 87220; j < 87230; j++) _solve(b, j);
for(j = 88060; j < 88070; j++) _solve(b, j);
for(j = 88900; j < 88910; j++) _solve(b, j);
for(j = 89740; j < 89750; j++) _solve(b, j);
for(j = 90580; j < 90590; j++) _solve(b, j);
for(j = 91420; j < 91430; j++) _solve(b, j);
for(j = 92260; j < 92270; j++) _solve(b, j);
for(j = 93100; j < 93110; j++) _solve(b, j);
for(j = 93940; j < 93950; j++) _solve(b, j);
for(j = 94780; j < 94790; j++) _solve(b, j);
for(j = 95620; j < 95630; j++) _solve(b, j);
for(j = 96460; j < 96470; j++) _solve(b, j);
for(j = 97300; j < 97310; j++) _solve(b, j);
for(j = 98140; j < 98150; j++) _solve(b, j);
for(j = 98980; j < 98990; j++) _solve(b, j);
for(j = 99820; j < 99830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 100660; j < 100670; j++) _solve(b, j);
for(j = 101500; j < 101510; j++) _solve(b, j);
for(j = 102340; j < 102350; j++) _solve(b, j);
for(j = 103180; j < 103190; j++) _solve(b, j);
for(j = 104020; j < 104030; j++) _solve(b, j);
for(j = 104860; j < 104870; j++) _solve(b, j);
for(j = 105700; j < 105710; j++) _solve(b, j);
for(j = 106540; j < 106550; j++) _solve(b, j);
for(j = 107380; j < 107390; j++) _solve(b, j);
for(j = 108220; j < 108230; j++) _solve(b, j);
for(j = 109060; j < 109070; j++) _solve(b, j);
for(j = 109900; j < 109910; j++) _solve(b, j);
for(j = 110740; j < 110750; j++) _solve(b, j);
for(j = 111580; j < 111590; j++) _solve(b, j);
for(j = 112420; j < 112430; j++) _solve(b, j);
for(j = 113260; j < 113270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 114100; j < 114110; j++) _solve(b, j);
for(j = 114940; j < 114950; j++) _solve(b, j);
for(j = 115780; j < 115790; j++) _solve(b, j);
for(j = 116620; j < 116630; j++) _solve(b, j);
for(j = 117460; j < 117470; j++) _solve(b, j);
for(j = 118300; j < 118310; j++) _solve(b, j);
for(j = 119140; j < 119150; j++) _solve(b, j);
for(j = 119980; j < 119990; j++) _solve(b, j);
for(j = 120820; j < 120830; j++) _solve(b, j);
for(j = 121660; j < 121670; j++) _solve(b, j);
for(j = 122500; j < 122510; j++) _solve(b, j);
for(j = 123340; j < 123350; j++) _solve(b, j);
for(j = 124180; j < 124190; j++) _solve(b, j);
for(j = 125020; j < 125030; j++) _solve(b, j);
for(j = 125860; j < 125870; j++) _solve(b, j);
for(j = 126700; j < 126710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 127540; j < 127550; j++) _solve(b, j);
for(j = 128380; j < 128390; j++) _solve(b, j);
for(j = 129220; j < 129230; j++) _solve(b, j);
for(j = 130060; j < 130070; j++) _solve(b, j);
for(j = 130900; j < 130910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 61190; j < 61200; j++) _solve(b, j);
for(j = 62030; j < 62040; j++) _solve(b, j);
for(j = 62870; j < 62880; j++) _solve(b, j);
for(j = 63710; j < 63720; j++) _solve(b, j);
for(j = 64550; j < 64560; j++) _solve(b, j);
for(j = 65390; j < 65400; j++) _solve(b, j);
for(j = 66230; j < 66240; j++) _solve(b, j);
for(j = 67070; j < 67080; j++) _solve(b, j);
for(j = 67910; j < 67920; j++) _solve(b, j);
for(j = 68750; j < 68760; j++) _solve(b, j);
for(j = 69590; j < 69600; j++) _solve(b, j);
for(j = 70430; j < 70440; j++) _solve(b, j);
for(j = 71270; j < 71280; j++) _solve(b, j);
for(j = 72110; j < 72120; j++) _solve(b, j);
for(j = 72950; j < 72960; j++) _solve(b, j);
for(j = 73790; j < 73800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 74630; j < 74640; j++) _solve(b, j);
for(j = 75470; j < 75480; j++) _solve(b, j);
for(j = 76310; j < 76320; j++) _solve(b, j);
for(j = 77150; j < 77160; j++) _solve(b, j);
for(j = 77990; j < 78000; j++) _solve(b, j);
for(j = 78830; j < 78840; j++) _solve(b, j);
for(j = 79670; j < 79680; j++) _solve(b, j);
for(j = 80510; j < 80520; j++) _solve(b, j);
for(j = 81350; j < 81360; j++) _solve(b, j);
for(j = 82190; j < 82200; j++) _solve(b, j);
for(j = 83030; j < 83040; j++) _solve(b, j);
for(j = 83870; j < 83880; j++) _solve(b, j);
for(j = 84710; j < 84720; j++) _solve(b, j);
for(j = 85550; j < 85560; j++) _solve(b, j);
for(j = 86390; j < 86400; j++) _solve(b, j);
for(j = 87230; j < 87240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 88070; j < 88080; j++) _solve(b, j);
for(j = 88910; j < 88920; j++) _solve(b, j);
for(j = 89750; j < 89760; j++) _solve(b, j);
for(j = 90590; j < 90600; j++) _solve(b, j);
for(j = 91430; j < 91440; j++) _solve(b, j);
for(j = 92270; j < 92280; j++) _solve(b, j);
for(j = 93110; j < 93120; j++) _solve(b, j);
for(j = 93950; j < 93960; j++) _solve(b, j);
for(j = 94790; j < 94800; j++) _solve(b, j);
for(j = 95630; j < 95640; j++) _solve(b, j);
for(j = 96470; j < 96480; j++) _solve(b, j);
for(j = 97310; j < 97320; j++) _solve(b, j);
for(j = 98150; j < 98160; j++) _solve(b, j);
for(j = 98990; j < 99000; j++) _solve(b, j);
for(j = 99830; j < 99840; j++) _solve(b, j);
for(j = 100670; j < 100680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 101510; j < 101520; j++) _solve(b, j);
for(j = 102350; j < 102360; j++) _solve(b, j);
for(j = 103190; j < 103200; j++) _solve(b, j);
for(j = 104030; j < 104040; j++) _solve(b, j);
for(j = 104870; j < 104880; j++) _solve(b, j);
for(j = 105710; j < 105720; j++) _solve(b, j);
for(j = 106550; j < 106560; j++) _solve(b, j);
for(j = 107390; j < 107400; j++) _solve(b, j);
for(j = 108230; j < 108240; j++) _solve(b, j);
for(j = 109070; j < 109080; j++) _solve(b, j);
for(j = 109910; j < 109920; j++) _solve(b, j);
for(j = 110750; j < 110760; j++) _solve(b, j);
for(j = 111590; j < 111600; j++) _solve(b, j);
for(j = 112430; j < 112440; j++) _solve(b, j);
for(j = 113270; j < 113280; j++) _solve(b, j);
for(j = 114110; j < 114120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 114950; j < 114960; j++) _solve(b, j);
for(j = 115790; j < 115800; j++) _solve(b, j);
for(j = 116630; j < 116640; j++) _solve(b, j);
for(j = 117470; j < 117480; j++) _solve(b, j);
for(j = 118310; j < 118320; j++) _solve(b, j);
for(j = 119150; j < 119160; j++) _solve(b, j);
for(j = 119990; j < 120000; j++) _solve(b, j);
for(j = 120830; j < 120840; j++) _solve(b, j);
for(j = 121670; j < 121680; j++) _solve(b, j);
for(j = 122510; j < 122520; j++) _solve(b, j);
for(j = 123350; j < 123360; j++) _solve(b, j);
for(j = 124190; j < 124200; j++) _solve(b, j);
for(j = 125030; j < 125040; j++) _solve(b, j);
for(j = 125870; j < 125880; j++) _solve(b, j);
for(j = 126710; j < 126720; j++) _solve(b, j);
for(j = 127550; j < 127560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 128390; j < 128400; j++) _solve(b, j);
for(j = 129230; j < 129240; j++) _solve(b, j);
for(j = 130070; j < 130080; j++) _solve(b, j);
for(j = 130910; j < 130920; j++) _solve(b, j);
for(j = 131750; j < 131760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 62040; j < 62050; j++) _solve(b, j);
for(j = 62880; j < 62890; j++) _solve(b, j);
for(j = 63720; j < 63730; j++) _solve(b, j);
for(j = 64560; j < 64570; j++) _solve(b, j);
for(j = 65400; j < 65410; j++) _solve(b, j);
for(j = 66240; j < 66250; j++) _solve(b, j);
for(j = 67080; j < 67090; j++) _solve(b, j);
for(j = 67920; j < 67930; j++) _solve(b, j);
for(j = 68760; j < 68770; j++) _solve(b, j);
for(j = 69600; j < 69610; j++) _solve(b, j);
for(j = 70440; j < 70450; j++) _solve(b, j);
for(j = 71280; j < 71290; j++) _solve(b, j);
for(j = 72120; j < 72130; j++) _solve(b, j);
for(j = 72960; j < 72970; j++) _solve(b, j);
for(j = 73800; j < 73810; j++) _solve(b, j);
for(j = 74640; j < 74650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 75480; j < 75490; j++) _solve(b, j);
for(j = 76320; j < 76330; j++) _solve(b, j);
for(j = 77160; j < 77170; j++) _solve(b, j);
for(j = 78000; j < 78010; j++) _solve(b, j);
for(j = 78840; j < 78850; j++) _solve(b, j);
for(j = 79680; j < 79690; j++) _solve(b, j);
for(j = 80520; j < 80530; j++) _solve(b, j);
for(j = 81360; j < 81370; j++) _solve(b, j);
for(j = 82200; j < 82210; j++) _solve(b, j);
for(j = 83040; j < 83050; j++) _solve(b, j);
for(j = 83880; j < 83890; j++) _solve(b, j);
for(j = 84720; j < 84730; j++) _solve(b, j);
for(j = 85560; j < 85570; j++) _solve(b, j);
for(j = 86400; j < 86410; j++) _solve(b, j);
for(j = 87240; j < 87250; j++) _solve(b, j);
for(j = 88080; j < 88090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 88920; j < 88930; j++) _solve(b, j);
for(j = 89760; j < 89770; j++) _solve(b, j);
for(j = 90600; j < 90610; j++) _solve(b, j);
for(j = 91440; j < 91450; j++) _solve(b, j);
for(j = 92280; j < 92290; j++) _solve(b, j);
for(j = 93120; j < 93130; j++) _solve(b, j);
for(j = 93960; j < 93970; j++) _solve(b, j);
for(j = 94800; j < 94810; j++) _solve(b, j);
for(j = 95640; j < 95650; j++) _solve(b, j);
for(j = 96480; j < 96490; j++) _solve(b, j);
for(j = 97320; j < 97330; j++) _solve(b, j);
for(j = 98160; j < 98170; j++) _solve(b, j);
for(j = 99000; j < 99010; j++) _solve(b, j);
for(j = 99840; j < 99850; j++) _solve(b, j);
for(j = 100680; j < 100690; j++) _solve(b, j);
for(j = 101520; j < 101530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 102360; j < 102370; j++) _solve(b, j);
for(j = 103200; j < 103210; j++) _solve(b, j);
for(j = 104040; j < 104050; j++) _solve(b, j);
for(j = 104880; j < 104890; j++) _solve(b, j);
for(j = 105720; j < 105730; j++) _solve(b, j);
for(j = 106560; j < 106570; j++) _solve(b, j);
for(j = 107400; j < 107410; j++) _solve(b, j);
for(j = 108240; j < 108250; j++) _solve(b, j);
for(j = 109080; j < 109090; j++) _solve(b, j);
for(j = 109920; j < 109930; j++) _solve(b, j);
for(j = 110760; j < 110770; j++) _solve(b, j);
for(j = 111600; j < 111610; j++) _solve(b, j);
for(j = 112440; j < 112450; j++) _solve(b, j);
for(j = 113280; j < 113290; j++) _solve(b, j);
for(j = 114120; j < 114130; j++) _solve(b, j);
for(j = 114960; j < 114970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 115800; j < 115810; j++) _solve(b, j);
for(j = 116640; j < 116650; j++) _solve(b, j);
for(j = 117480; j < 117490; j++) _solve(b, j);
for(j = 118320; j < 118330; j++) _solve(b, j);
for(j = 119160; j < 119170; j++) _solve(b, j);
for(j = 120000; j < 120010; j++) _solve(b, j);
for(j = 120840; j < 120850; j++) _solve(b, j);
for(j = 121680; j < 121690; j++) _solve(b, j);
for(j = 122520; j < 122530; j++) _solve(b, j);
for(j = 123360; j < 123370; j++) _solve(b, j);
for(j = 124200; j < 124210; j++) _solve(b, j);
for(j = 125040; j < 125050; j++) _solve(b, j);
for(j = 125880; j < 125890; j++) _solve(b, j);
for(j = 126720; j < 126730; j++) _solve(b, j);
for(j = 127560; j < 127570; j++) _solve(b, j);
for(j = 128400; j < 128410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 129240; j < 129250; j++) _solve(b, j);
for(j = 130080; j < 130090; j++) _solve(b, j);
for(j = 130920; j < 130930; j++) _solve(b, j);
for(j = 131760; j < 131770; j++) _solve(b, j);
for(j = 132600; j < 132610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 62890; j < 62900; j++) _solve(b, j);
for(j = 63730; j < 63740; j++) _solve(b, j);
for(j = 64570; j < 64580; j++) _solve(b, j);
for(j = 65410; j < 65420; j++) _solve(b, j);
for(j = 66250; j < 66260; j++) _solve(b, j);
for(j = 67090; j < 67100; j++) _solve(b, j);
for(j = 67930; j < 67940; j++) _solve(b, j);
for(j = 68770; j < 68780; j++) _solve(b, j);
for(j = 69610; j < 69620; j++) _solve(b, j);
for(j = 70450; j < 70460; j++) _solve(b, j);
for(j = 71290; j < 71300; j++) _solve(b, j);
for(j = 72130; j < 72140; j++) _solve(b, j);
for(j = 72970; j < 72980; j++) _solve(b, j);
for(j = 73810; j < 73820; j++) _solve(b, j);
for(j = 74650; j < 74660; j++) _solve(b, j);
for(j = 75490; j < 75500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 76330; j < 76340; j++) _solve(b, j);
for(j = 77170; j < 77180; j++) _solve(b, j);
for(j = 78010; j < 78020; j++) _solve(b, j);
for(j = 78850; j < 78860; j++) _solve(b, j);
for(j = 79690; j < 79700; j++) _solve(b, j);
for(j = 80530; j < 80540; j++) _solve(b, j);
for(j = 81370; j < 81380; j++) _solve(b, j);
for(j = 82210; j < 82220; j++) _solve(b, j);
for(j = 83050; j < 83060; j++) _solve(b, j);
for(j = 83890; j < 83900; j++) _solve(b, j);
for(j = 84730; j < 84740; j++) _solve(b, j);
for(j = 85570; j < 85580; j++) _solve(b, j);
for(j = 86410; j < 86420; j++) _solve(b, j);
for(j = 87250; j < 87260; j++) _solve(b, j);
for(j = 88090; j < 88100; j++) _solve(b, j);
for(j = 88930; j < 88940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 89770; j < 89780; j++) _solve(b, j);
for(j = 90610; j < 90620; j++) _solve(b, j);
for(j = 91450; j < 91460; j++) _solve(b, j);
for(j = 92290; j < 92300; j++) _solve(b, j);
for(j = 93130; j < 93140; j++) _solve(b, j);
for(j = 93970; j < 93980; j++) _solve(b, j);
for(j = 94810; j < 94820; j++) _solve(b, j);
for(j = 95650; j < 95660; j++) _solve(b, j);
for(j = 96490; j < 96500; j++) _solve(b, j);
for(j = 97330; j < 97340; j++) _solve(b, j);
for(j = 98170; j < 98180; j++) _solve(b, j);
for(j = 99010; j < 99020; j++) _solve(b, j);
for(j = 99850; j < 99860; j++) _solve(b, j);
for(j = 100690; j < 100700; j++) _solve(b, j);
for(j = 101530; j < 101540; j++) _solve(b, j);
for(j = 102370; j < 102380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 103210; j < 103220; j++) _solve(b, j);
for(j = 104050; j < 104060; j++) _solve(b, j);
for(j = 104890; j < 104900; j++) _solve(b, j);
for(j = 105730; j < 105740; j++) _solve(b, j);
for(j = 106570; j < 106580; j++) _solve(b, j);
for(j = 107410; j < 107420; j++) _solve(b, j);
for(j = 108250; j < 108260; j++) _solve(b, j);
for(j = 109090; j < 109100; j++) _solve(b, j);
for(j = 109930; j < 109940; j++) _solve(b, j);
for(j = 110770; j < 110780; j++) _solve(b, j);
for(j = 111610; j < 111620; j++) _solve(b, j);
for(j = 112450; j < 112460; j++) _solve(b, j);
for(j = 113290; j < 113300; j++) _solve(b, j);
for(j = 114130; j < 114140; j++) _solve(b, j);
for(j = 114970; j < 114980; j++) _solve(b, j);
for(j = 115810; j < 115820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 116650; j < 116660; j++) _solve(b, j);
for(j = 117490; j < 117500; j++) _solve(b, j);
for(j = 118330; j < 118340; j++) _solve(b, j);
for(j = 119170; j < 119180; j++) _solve(b, j);
for(j = 120010; j < 120020; j++) _solve(b, j);
for(j = 120850; j < 120860; j++) _solve(b, j);
for(j = 121690; j < 121700; j++) _solve(b, j);
for(j = 122530; j < 122540; j++) _solve(b, j);
for(j = 123370; j < 123380; j++) _solve(b, j);
for(j = 124210; j < 124220; j++) _solve(b, j);
for(j = 125050; j < 125060; j++) _solve(b, j);
for(j = 125890; j < 125900; j++) _solve(b, j);
for(j = 126730; j < 126740; j++) _solve(b, j);
for(j = 127570; j < 127580; j++) _solve(b, j);
for(j = 128410; j < 128420; j++) _solve(b, j);
for(j = 129250; j < 129260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 130090; j < 130100; j++) _solve(b, j);
for(j = 130930; j < 130940; j++) _solve(b, j);
for(j = 131770; j < 131780; j++) _solve(b, j);
for(j = 132610; j < 132620; j++) _solve(b, j);
for(j = 133450; j < 133460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 63740; j < 63750; j++) _solve(b, j);
for(j = 64580; j < 64590; j++) _solve(b, j);
for(j = 65420; j < 65430; j++) _solve(b, j);
for(j = 66260; j < 66270; j++) _solve(b, j);
for(j = 67100; j < 67110; j++) _solve(b, j);
for(j = 67940; j < 67950; j++) _solve(b, j);
for(j = 68780; j < 68790; j++) _solve(b, j);
for(j = 69620; j < 69630; j++) _solve(b, j);
for(j = 70460; j < 70470; j++) _solve(b, j);
for(j = 71300; j < 71310; j++) _solve(b, j);
for(j = 72140; j < 72150; j++) _solve(b, j);
for(j = 72980; j < 72990; j++) _solve(b, j);
for(j = 73820; j < 73830; j++) _solve(b, j);
for(j = 74660; j < 74670; j++) _solve(b, j);
for(j = 75500; j < 75510; j++) _solve(b, j);
for(j = 76340; j < 76350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 77180; j < 77190; j++) _solve(b, j);
for(j = 78020; j < 78030; j++) _solve(b, j);
for(j = 78860; j < 78870; j++) _solve(b, j);
for(j = 79700; j < 79710; j++) _solve(b, j);
for(j = 80540; j < 80550; j++) _solve(b, j);
for(j = 81380; j < 81390; j++) _solve(b, j);
for(j = 82220; j < 82230; j++) _solve(b, j);
for(j = 83060; j < 83070; j++) _solve(b, j);
for(j = 83900; j < 83910; j++) _solve(b, j);
for(j = 84740; j < 84750; j++) _solve(b, j);
for(j = 85580; j < 85590; j++) _solve(b, j);
for(j = 86420; j < 86430; j++) _solve(b, j);
for(j = 87260; j < 87270; j++) _solve(b, j);
for(j = 88100; j < 88110; j++) _solve(b, j);
for(j = 88940; j < 88950; j++) _solve(b, j);
for(j = 89780; j < 89790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 90620; j < 90630; j++) _solve(b, j);
for(j = 91460; j < 91470; j++) _solve(b, j);
for(j = 92300; j < 92310; j++) _solve(b, j);
for(j = 93140; j < 93150; j++) _solve(b, j);
for(j = 93980; j < 93990; j++) _solve(b, j);
for(j = 94820; j < 94830; j++) _solve(b, j);
for(j = 95660; j < 95670; j++) _solve(b, j);
for(j = 96500; j < 96510; j++) _solve(b, j);
for(j = 97340; j < 97350; j++) _solve(b, j);
for(j = 98180; j < 98190; j++) _solve(b, j);
for(j = 99020; j < 99030; j++) _solve(b, j);
for(j = 99860; j < 99870; j++) _solve(b, j);
for(j = 100700; j < 100710; j++) _solve(b, j);
for(j = 101540; j < 101550; j++) _solve(b, j);
for(j = 102380; j < 102390; j++) _solve(b, j);
for(j = 103220; j < 103230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 104060; j < 104070; j++) _solve(b, j);
for(j = 104900; j < 104910; j++) _solve(b, j);
for(j = 105740; j < 105750; j++) _solve(b, j);
for(j = 106580; j < 106590; j++) _solve(b, j);
for(j = 107420; j < 107430; j++) _solve(b, j);
for(j = 108260; j < 108270; j++) _solve(b, j);
for(j = 109100; j < 109110; j++) _solve(b, j);
for(j = 109940; j < 109950; j++) _solve(b, j);
for(j = 110780; j < 110790; j++) _solve(b, j);
for(j = 111620; j < 111630; j++) _solve(b, j);
for(j = 112460; j < 112470; j++) _solve(b, j);
for(j = 113300; j < 113310; j++) _solve(b, j);
for(j = 114140; j < 114150; j++) _solve(b, j);
for(j = 114980; j < 114990; j++) _solve(b, j);
for(j = 115820; j < 115830; j++) _solve(b, j);
for(j = 116660; j < 116670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 117500; j < 117510; j++) _solve(b, j);
for(j = 118340; j < 118350; j++) _solve(b, j);
for(j = 119180; j < 119190; j++) _solve(b, j);
for(j = 120020; j < 120030; j++) _solve(b, j);
for(j = 120860; j < 120870; j++) _solve(b, j);
for(j = 121700; j < 121710; j++) _solve(b, j);
for(j = 122540; j < 122550; j++) _solve(b, j);
for(j = 123380; j < 123390; j++) _solve(b, j);
for(j = 124220; j < 124230; j++) _solve(b, j);
for(j = 125060; j < 125070; j++) _solve(b, j);
for(j = 125900; j < 125910; j++) _solve(b, j);
for(j = 126740; j < 126750; j++) _solve(b, j);
for(j = 127580; j < 127590; j++) _solve(b, j);
for(j = 128420; j < 128430; j++) _solve(b, j);
for(j = 129260; j < 129270; j++) _solve(b, j);
for(j = 130100; j < 130110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 130940; j < 130950; j++) _solve(b, j);
for(j = 131780; j < 131790; j++) _solve(b, j);
for(j = 132620; j < 132630; j++) _solve(b, j);
for(j = 133460; j < 133470; j++) _solve(b, j);
for(j = 134300; j < 134310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 64590; j < 64600; j++) _solve(b, j);
for(j = 65430; j < 65440; j++) _solve(b, j);
for(j = 66270; j < 66280; j++) _solve(b, j);
for(j = 67110; j < 67120; j++) _solve(b, j);
for(j = 67950; j < 67960; j++) _solve(b, j);
for(j = 68790; j < 68800; j++) _solve(b, j);
for(j = 69630; j < 69640; j++) _solve(b, j);
for(j = 70470; j < 70480; j++) _solve(b, j);
for(j = 71310; j < 71320; j++) _solve(b, j);
for(j = 72150; j < 72160; j++) _solve(b, j);
for(j = 72990; j < 73000; j++) _solve(b, j);
for(j = 73830; j < 73840; j++) _solve(b, j);
for(j = 74670; j < 74680; j++) _solve(b, j);
for(j = 75510; j < 75520; j++) _solve(b, j);
for(j = 76350; j < 76360; j++) _solve(b, j);
for(j = 77190; j < 77200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 78030; j < 78040; j++) _solve(b, j);
for(j = 78870; j < 78880; j++) _solve(b, j);
for(j = 79710; j < 79720; j++) _solve(b, j);
for(j = 80550; j < 80560; j++) _solve(b, j);
for(j = 81390; j < 81400; j++) _solve(b, j);
for(j = 82230; j < 82240; j++) _solve(b, j);
for(j = 83070; j < 83080; j++) _solve(b, j);
for(j = 83910; j < 83920; j++) _solve(b, j);
for(j = 84750; j < 84760; j++) _solve(b, j);
for(j = 85590; j < 85600; j++) _solve(b, j);
for(j = 86430; j < 86440; j++) _solve(b, j);
for(j = 87270; j < 87280; j++) _solve(b, j);
for(j = 88110; j < 88120; j++) _solve(b, j);
for(j = 88950; j < 88960; j++) _solve(b, j);
for(j = 89790; j < 89800; j++) _solve(b, j);
for(j = 90630; j < 90640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 91470; j < 91480; j++) _solve(b, j);
for(j = 92310; j < 92320; j++) _solve(b, j);
for(j = 93150; j < 93160; j++) _solve(b, j);
for(j = 93990; j < 94000; j++) _solve(b, j);
for(j = 94830; j < 94840; j++) _solve(b, j);
for(j = 95670; j < 95680; j++) _solve(b, j);
for(j = 96510; j < 96520; j++) _solve(b, j);
for(j = 97350; j < 97360; j++) _solve(b, j);
for(j = 98190; j < 98200; j++) _solve(b, j);
for(j = 99030; j < 99040; j++) _solve(b, j);
for(j = 99870; j < 99880; j++) _solve(b, j);
for(j = 100710; j < 100720; j++) _solve(b, j);
for(j = 101550; j < 101560; j++) _solve(b, j);
for(j = 102390; j < 102400; j++) _solve(b, j);
for(j = 103230; j < 103240; j++) _solve(b, j);
for(j = 104070; j < 104080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 104910; j < 104920; j++) _solve(b, j);
for(j = 105750; j < 105760; j++) _solve(b, j);
for(j = 106590; j < 106600; j++) _solve(b, j);
for(j = 107430; j < 107440; j++) _solve(b, j);
for(j = 108270; j < 108280; j++) _solve(b, j);
for(j = 109110; j < 109120; j++) _solve(b, j);
for(j = 109950; j < 109960; j++) _solve(b, j);
for(j = 110790; j < 110800; j++) _solve(b, j);
for(j = 111630; j < 111640; j++) _solve(b, j);
for(j = 112470; j < 112480; j++) _solve(b, j);
for(j = 113310; j < 113320; j++) _solve(b, j);
for(j = 114150; j < 114160; j++) _solve(b, j);
for(j = 114990; j < 115000; j++) _solve(b, j);
for(j = 115830; j < 115840; j++) _solve(b, j);
for(j = 116670; j < 116680; j++) _solve(b, j);
for(j = 117510; j < 117520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 118350; j < 118360; j++) _solve(b, j);
for(j = 119190; j < 119200; j++) _solve(b, j);
for(j = 120030; j < 120040; j++) _solve(b, j);
for(j = 120870; j < 120880; j++) _solve(b, j);
for(j = 121710; j < 121720; j++) _solve(b, j);
for(j = 122550; j < 122560; j++) _solve(b, j);
for(j = 123390; j < 123400; j++) _solve(b, j);
for(j = 124230; j < 124240; j++) _solve(b, j);
for(j = 125070; j < 125080; j++) _solve(b, j);
for(j = 125910; j < 125920; j++) _solve(b, j);
for(j = 126750; j < 126760; j++) _solve(b, j);
for(j = 127590; j < 127600; j++) _solve(b, j);
for(j = 128430; j < 128440; j++) _solve(b, j);
for(j = 129270; j < 129280; j++) _solve(b, j);
for(j = 130110; j < 130120; j++) _solve(b, j);
for(j = 130950; j < 130960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 131790; j < 131800; j++) _solve(b, j);
for(j = 132630; j < 132640; j++) _solve(b, j);
for(j = 133470; j < 133480; j++) _solve(b, j);
for(j = 134310; j < 134320; j++) _solve(b, j);
for(j = 135150; j < 135160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 65440; j < 65450; j++) _solve(b, j);
for(j = 66280; j < 66290; j++) _solve(b, j);
for(j = 67120; j < 67130; j++) _solve(b, j);
for(j = 67960; j < 67970; j++) _solve(b, j);
for(j = 68800; j < 68810; j++) _solve(b, j);
for(j = 69640; j < 69650; j++) _solve(b, j);
for(j = 70480; j < 70490; j++) _solve(b, j);
for(j = 71320; j < 71330; j++) _solve(b, j);
for(j = 72160; j < 72170; j++) _solve(b, j);
for(j = 73000; j < 73010; j++) _solve(b, j);
for(j = 73840; j < 73850; j++) _solve(b, j);
for(j = 74680; j < 74690; j++) _solve(b, j);
for(j = 75520; j < 75530; j++) _solve(b, j);
for(j = 76360; j < 76370; j++) _solve(b, j);
for(j = 77200; j < 77210; j++) _solve(b, j);
for(j = 78040; j < 78050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 78880; j < 78890; j++) _solve(b, j);
for(j = 79720; j < 79730; j++) _solve(b, j);
for(j = 80560; j < 80570; j++) _solve(b, j);
for(j = 81400; j < 81410; j++) _solve(b, j);
for(j = 82240; j < 82250; j++) _solve(b, j);
for(j = 83080; j < 83090; j++) _solve(b, j);
for(j = 83920; j < 83930; j++) _solve(b, j);
for(j = 84760; j < 84770; j++) _solve(b, j);
for(j = 85600; j < 85610; j++) _solve(b, j);
for(j = 86440; j < 86450; j++) _solve(b, j);
for(j = 87280; j < 87290; j++) _solve(b, j);
for(j = 88120; j < 88130; j++) _solve(b, j);
for(j = 88960; j < 88970; j++) _solve(b, j);
for(j = 89800; j < 89810; j++) _solve(b, j);
for(j = 90640; j < 90650; j++) _solve(b, j);
for(j = 91480; j < 91490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 92320; j < 92330; j++) _solve(b, j);
for(j = 93160; j < 93170; j++) _solve(b, j);
for(j = 94000; j < 94010; j++) _solve(b, j);
for(j = 94840; j < 94850; j++) _solve(b, j);
for(j = 95680; j < 95690; j++) _solve(b, j);
for(j = 96520; j < 96530; j++) _solve(b, j);
for(j = 97360; j < 97370; j++) _solve(b, j);
for(j = 98200; j < 98210; j++) _solve(b, j);
for(j = 99040; j < 99050; j++) _solve(b, j);
for(j = 99880; j < 99890; j++) _solve(b, j);
for(j = 100720; j < 100730; j++) _solve(b, j);
for(j = 101560; j < 101570; j++) _solve(b, j);
for(j = 102400; j < 102410; j++) _solve(b, j);
for(j = 103240; j < 103250; j++) _solve(b, j);
for(j = 104080; j < 104090; j++) _solve(b, j);
for(j = 104920; j < 104930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 105760; j < 105770; j++) _solve(b, j);
for(j = 106600; j < 106610; j++) _solve(b, j);
for(j = 107440; j < 107450; j++) _solve(b, j);
for(j = 108280; j < 108290; j++) _solve(b, j);
for(j = 109120; j < 109130; j++) _solve(b, j);
for(j = 109960; j < 109970; j++) _solve(b, j);
for(j = 110800; j < 110810; j++) _solve(b, j);
for(j = 111640; j < 111650; j++) _solve(b, j);
for(j = 112480; j < 112490; j++) _solve(b, j);
for(j = 113320; j < 113330; j++) _solve(b, j);
for(j = 114160; j < 114170; j++) _solve(b, j);
for(j = 115000; j < 115010; j++) _solve(b, j);
for(j = 115840; j < 115850; j++) _solve(b, j);
for(j = 116680; j < 116690; j++) _solve(b, j);
for(j = 117520; j < 117530; j++) _solve(b, j);
for(j = 118360; j < 118370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 119200; j < 119210; j++) _solve(b, j);
for(j = 120040; j < 120050; j++) _solve(b, j);
for(j = 120880; j < 120890; j++) _solve(b, j);
for(j = 121720; j < 121730; j++) _solve(b, j);
for(j = 122560; j < 122570; j++) _solve(b, j);
for(j = 123400; j < 123410; j++) _solve(b, j);
for(j = 124240; j < 124250; j++) _solve(b, j);
for(j = 125080; j < 125090; j++) _solve(b, j);
for(j = 125920; j < 125930; j++) _solve(b, j);
for(j = 126760; j < 126770; j++) _solve(b, j);
for(j = 127600; j < 127610; j++) _solve(b, j);
for(j = 128440; j < 128450; j++) _solve(b, j);
for(j = 129280; j < 129290; j++) _solve(b, j);
for(j = 130120; j < 130130; j++) _solve(b, j);
for(j = 130960; j < 130970; j++) _solve(b, j);
for(j = 131800; j < 131810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 132640; j < 132650; j++) _solve(b, j);
for(j = 133480; j < 133490; j++) _solve(b, j);
for(j = 134320; j < 134330; j++) _solve(b, j);
for(j = 135160; j < 135170; j++) _solve(b, j);
for(j = 136000; j < 136010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 66290; j < 66300; j++) _solve(b, j);
for(j = 67130; j < 67140; j++) _solve(b, j);
for(j = 67970; j < 67980; j++) _solve(b, j);
for(j = 68810; j < 68820; j++) _solve(b, j);
for(j = 69650; j < 69660; j++) _solve(b, j);
for(j = 70490; j < 70500; j++) _solve(b, j);
for(j = 71330; j < 71340; j++) _solve(b, j);
for(j = 72170; j < 72180; j++) _solve(b, j);
for(j = 73010; j < 73020; j++) _solve(b, j);
for(j = 73850; j < 73860; j++) _solve(b, j);
for(j = 74690; j < 74700; j++) _solve(b, j);
for(j = 75530; j < 75540; j++) _solve(b, j);
for(j = 76370; j < 76380; j++) _solve(b, j);
for(j = 77210; j < 77220; j++) _solve(b, j);
for(j = 78050; j < 78060; j++) _solve(b, j);
for(j = 78890; j < 78900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 79730; j < 79740; j++) _solve(b, j);
for(j = 80570; j < 80580; j++) _solve(b, j);
for(j = 81410; j < 81420; j++) _solve(b, j);
for(j = 82250; j < 82260; j++) _solve(b, j);
for(j = 83090; j < 83100; j++) _solve(b, j);
for(j = 83930; j < 83940; j++) _solve(b, j);
for(j = 84770; j < 84780; j++) _solve(b, j);
for(j = 85610; j < 85620; j++) _solve(b, j);
for(j = 86450; j < 86460; j++) _solve(b, j);
for(j = 87290; j < 87300; j++) _solve(b, j);
for(j = 88130; j < 88140; j++) _solve(b, j);
for(j = 88970; j < 88980; j++) _solve(b, j);
for(j = 89810; j < 89820; j++) _solve(b, j);
for(j = 90650; j < 90660; j++) _solve(b, j);
for(j = 91490; j < 91500; j++) _solve(b, j);
for(j = 92330; j < 92340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 93170; j < 93180; j++) _solve(b, j);
for(j = 94010; j < 94020; j++) _solve(b, j);
for(j = 94850; j < 94860; j++) _solve(b, j);
for(j = 95690; j < 95700; j++) _solve(b, j);
for(j = 96530; j < 96540; j++) _solve(b, j);
for(j = 97370; j < 97380; j++) _solve(b, j);
for(j = 98210; j < 98220; j++) _solve(b, j);
for(j = 99050; j < 99060; j++) _solve(b, j);
for(j = 99890; j < 99900; j++) _solve(b, j);
for(j = 100730; j < 100740; j++) _solve(b, j);
for(j = 101570; j < 101580; j++) _solve(b, j);
for(j = 102410; j < 102420; j++) _solve(b, j);
for(j = 103250; j < 103260; j++) _solve(b, j);
for(j = 104090; j < 104100; j++) _solve(b, j);
for(j = 104930; j < 104940; j++) _solve(b, j);
for(j = 105770; j < 105780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 106610; j < 106620; j++) _solve(b, j);
for(j = 107450; j < 107460; j++) _solve(b, j);
for(j = 108290; j < 108300; j++) _solve(b, j);
for(j = 109130; j < 109140; j++) _solve(b, j);
for(j = 109970; j < 109980; j++) _solve(b, j);
for(j = 110810; j < 110820; j++) _solve(b, j);
for(j = 111650; j < 111660; j++) _solve(b, j);
for(j = 112490; j < 112500; j++) _solve(b, j);
for(j = 113330; j < 113340; j++) _solve(b, j);
for(j = 114170; j < 114180; j++) _solve(b, j);
for(j = 115010; j < 115020; j++) _solve(b, j);
for(j = 115850; j < 115860; j++) _solve(b, j);
for(j = 116690; j < 116700; j++) _solve(b, j);
for(j = 117530; j < 117540; j++) _solve(b, j);
for(j = 118370; j < 118380; j++) _solve(b, j);
for(j = 119210; j < 119220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 120050; j < 120060; j++) _solve(b, j);
for(j = 120890; j < 120900; j++) _solve(b, j);
for(j = 121730; j < 121740; j++) _solve(b, j);
for(j = 122570; j < 122580; j++) _solve(b, j);
for(j = 123410; j < 123420; j++) _solve(b, j);
for(j = 124250; j < 124260; j++) _solve(b, j);
for(j = 125090; j < 125100; j++) _solve(b, j);
for(j = 125930; j < 125940; j++) _solve(b, j);
for(j = 126770; j < 126780; j++) _solve(b, j);
for(j = 127610; j < 127620; j++) _solve(b, j);
for(j = 128450; j < 128460; j++) _solve(b, j);
for(j = 129290; j < 129300; j++) _solve(b, j);
for(j = 130130; j < 130140; j++) _solve(b, j);
for(j = 130970; j < 130980; j++) _solve(b, j);
for(j = 131810; j < 131820; j++) _solve(b, j);
for(j = 132650; j < 132660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 133490; j < 133500; j++) _solve(b, j);
for(j = 134330; j < 134340; j++) _solve(b, j);
for(j = 135170; j < 135180; j++) _solve(b, j);
for(j = 136010; j < 136020; j++) _solve(b, j);
for(j = 136850; j < 136860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 67140; j < 67150; j++) _solve(b, j);
for(j = 67980; j < 67990; j++) _solve(b, j);
for(j = 68820; j < 68830; j++) _solve(b, j);
for(j = 69660; j < 69670; j++) _solve(b, j);
for(j = 70500; j < 70510; j++) _solve(b, j);
for(j = 71340; j < 71350; j++) _solve(b, j);
for(j = 72180; j < 72190; j++) _solve(b, j);
for(j = 73020; j < 73030; j++) _solve(b, j);
for(j = 73860; j < 73870; j++) _solve(b, j);
for(j = 74700; j < 74710; j++) _solve(b, j);
for(j = 75540; j < 75550; j++) _solve(b, j);
for(j = 76380; j < 76390; j++) _solve(b, j);
for(j = 77220; j < 77230; j++) _solve(b, j);
for(j = 78060; j < 78070; j++) _solve(b, j);
for(j = 78900; j < 78910; j++) _solve(b, j);
for(j = 79740; j < 79750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 80580; j < 80590; j++) _solve(b, j);
for(j = 81420; j < 81430; j++) _solve(b, j);
for(j = 82260; j < 82270; j++) _solve(b, j);
for(j = 83100; j < 83110; j++) _solve(b, j);
for(j = 83940; j < 83950; j++) _solve(b, j);
for(j = 84780; j < 84790; j++) _solve(b, j);
for(j = 85620; j < 85630; j++) _solve(b, j);
for(j = 86460; j < 86470; j++) _solve(b, j);
for(j = 87300; j < 87310; j++) _solve(b, j);
for(j = 88140; j < 88150; j++) _solve(b, j);
for(j = 88980; j < 88990; j++) _solve(b, j);
for(j = 89820; j < 89830; j++) _solve(b, j);
for(j = 90660; j < 90670; j++) _solve(b, j);
for(j = 91500; j < 91510; j++) _solve(b, j);
for(j = 92340; j < 92350; j++) _solve(b, j);
for(j = 93180; j < 93190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 94020; j < 94030; j++) _solve(b, j);
for(j = 94860; j < 94870; j++) _solve(b, j);
for(j = 95700; j < 95710; j++) _solve(b, j);
for(j = 96540; j < 96550; j++) _solve(b, j);
for(j = 97380; j < 97390; j++) _solve(b, j);
for(j = 98220; j < 98230; j++) _solve(b, j);
for(j = 99060; j < 99070; j++) _solve(b, j);
for(j = 99900; j < 99910; j++) _solve(b, j);
for(j = 100740; j < 100750; j++) _solve(b, j);
for(j = 101580; j < 101590; j++) _solve(b, j);
for(j = 102420; j < 102430; j++) _solve(b, j);
for(j = 103260; j < 103270; j++) _solve(b, j);
for(j = 104100; j < 104110; j++) _solve(b, j);
for(j = 104940; j < 104950; j++) _solve(b, j);
for(j = 105780; j < 105790; j++) _solve(b, j);
for(j = 106620; j < 106630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 107460; j < 107470; j++) _solve(b, j);
for(j = 108300; j < 108310; j++) _solve(b, j);
for(j = 109140; j < 109150; j++) _solve(b, j);
for(j = 109980; j < 109990; j++) _solve(b, j);
for(j = 110820; j < 110830; j++) _solve(b, j);
for(j = 111660; j < 111670; j++) _solve(b, j);
for(j = 112500; j < 112510; j++) _solve(b, j);
for(j = 113340; j < 113350; j++) _solve(b, j);
for(j = 114180; j < 114190; j++) _solve(b, j);
for(j = 115020; j < 115030; j++) _solve(b, j);
for(j = 115860; j < 115870; j++) _solve(b, j);
for(j = 116700; j < 116710; j++) _solve(b, j);
for(j = 117540; j < 117550; j++) _solve(b, j);
for(j = 118380; j < 118390; j++) _solve(b, j);
for(j = 119220; j < 119230; j++) _solve(b, j);
for(j = 120060; j < 120070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 120900; j < 120910; j++) _solve(b, j);
for(j = 121740; j < 121750; j++) _solve(b, j);
for(j = 122580; j < 122590; j++) _solve(b, j);
for(j = 123420; j < 123430; j++) _solve(b, j);
for(j = 124260; j < 124270; j++) _solve(b, j);
for(j = 125100; j < 125110; j++) _solve(b, j);
for(j = 125940; j < 125950; j++) _solve(b, j);
for(j = 126780; j < 126790; j++) _solve(b, j);
for(j = 127620; j < 127630; j++) _solve(b, j);
for(j = 128460; j < 128470; j++) _solve(b, j);
for(j = 129300; j < 129310; j++) _solve(b, j);
for(j = 130140; j < 130150; j++) _solve(b, j);
for(j = 130980; j < 130990; j++) _solve(b, j);
for(j = 131820; j < 131830; j++) _solve(b, j);
for(j = 132660; j < 132670; j++) _solve(b, j);
for(j = 133500; j < 133510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 134340; j < 134350; j++) _solve(b, j);
for(j = 135180; j < 135190; j++) _solve(b, j);
for(j = 136020; j < 136030; j++) _solve(b, j);
for(j = 136860; j < 136870; j++) _solve(b, j);
for(j = 137700; j < 137710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 67990; j < 68000; j++) _solve(b, j);
for(j = 68830; j < 68840; j++) _solve(b, j);
for(j = 69670; j < 69680; j++) _solve(b, j);
for(j = 70510; j < 70520; j++) _solve(b, j);
for(j = 71350; j < 71360; j++) _solve(b, j);
for(j = 72190; j < 72200; j++) _solve(b, j);
for(j = 73030; j < 73040; j++) _solve(b, j);
for(j = 73870; j < 73880; j++) _solve(b, j);
for(j = 74710; j < 74720; j++) _solve(b, j);
for(j = 75550; j < 75560; j++) _solve(b, j);
for(j = 76390; j < 76400; j++) _solve(b, j);
for(j = 77230; j < 77240; j++) _solve(b, j);
for(j = 78070; j < 78080; j++) _solve(b, j);
for(j = 78910; j < 78920; j++) _solve(b, j);
for(j = 79750; j < 79760; j++) _solve(b, j);
for(j = 80590; j < 80600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 81430; j < 81440; j++) _solve(b, j);
for(j = 82270; j < 82280; j++) _solve(b, j);
for(j = 83110; j < 83120; j++) _solve(b, j);
for(j = 83950; j < 83960; j++) _solve(b, j);
for(j = 84790; j < 84800; j++) _solve(b, j);
for(j = 85630; j < 85640; j++) _solve(b, j);
for(j = 86470; j < 86480; j++) _solve(b, j);
for(j = 87310; j < 87320; j++) _solve(b, j);
for(j = 88150; j < 88160; j++) _solve(b, j);
for(j = 88990; j < 89000; j++) _solve(b, j);
for(j = 89830; j < 89840; j++) _solve(b, j);
for(j = 90670; j < 90680; j++) _solve(b, j);
for(j = 91510; j < 91520; j++) _solve(b, j);
for(j = 92350; j < 92360; j++) _solve(b, j);
for(j = 93190; j < 93200; j++) _solve(b, j);
for(j = 94030; j < 94040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 94870; j < 94880; j++) _solve(b, j);
for(j = 95710; j < 95720; j++) _solve(b, j);
for(j = 96550; j < 96560; j++) _solve(b, j);
for(j = 97390; j < 97400; j++) _solve(b, j);
for(j = 98230; j < 98240; j++) _solve(b, j);
for(j = 99070; j < 99080; j++) _solve(b, j);
for(j = 99910; j < 99920; j++) _solve(b, j);
for(j = 100750; j < 100760; j++) _solve(b, j);
for(j = 101590; j < 101600; j++) _solve(b, j);
for(j = 102430; j < 102440; j++) _solve(b, j);
for(j = 103270; j < 103280; j++) _solve(b, j);
for(j = 104110; j < 104120; j++) _solve(b, j);
for(j = 104950; j < 104960; j++) _solve(b, j);
for(j = 105790; j < 105800; j++) _solve(b, j);
for(j = 106630; j < 106640; j++) _solve(b, j);
for(j = 107470; j < 107480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 108310; j < 108320; j++) _solve(b, j);
for(j = 109150; j < 109160; j++) _solve(b, j);
for(j = 109990; j < 110000; j++) _solve(b, j);
for(j = 110830; j < 110840; j++) _solve(b, j);
for(j = 111670; j < 111680; j++) _solve(b, j);
for(j = 112510; j < 112520; j++) _solve(b, j);
for(j = 113350; j < 113360; j++) _solve(b, j);
for(j = 114190; j < 114200; j++) _solve(b, j);
for(j = 115030; j < 115040; j++) _solve(b, j);
for(j = 115870; j < 115880; j++) _solve(b, j);
for(j = 116710; j < 116720; j++) _solve(b, j);
for(j = 117550; j < 117560; j++) _solve(b, j);
for(j = 118390; j < 118400; j++) _solve(b, j);
for(j = 119230; j < 119240; j++) _solve(b, j);
for(j = 120070; j < 120080; j++) _solve(b, j);
for(j = 120910; j < 120920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 121750; j < 121760; j++) _solve(b, j);
for(j = 122590; j < 122600; j++) _solve(b, j);
for(j = 123430; j < 123440; j++) _solve(b, j);
for(j = 124270; j < 124280; j++) _solve(b, j);
for(j = 125110; j < 125120; j++) _solve(b, j);
for(j = 125950; j < 125960; j++) _solve(b, j);
for(j = 126790; j < 126800; j++) _solve(b, j);
for(j = 127630; j < 127640; j++) _solve(b, j);
for(j = 128470; j < 128480; j++) _solve(b, j);
for(j = 129310; j < 129320; j++) _solve(b, j);
for(j = 130150; j < 130160; j++) _solve(b, j);
for(j = 130990; j < 131000; j++) _solve(b, j);
for(j = 131830; j < 131840; j++) _solve(b, j);
for(j = 132670; j < 132680; j++) _solve(b, j);
for(j = 133510; j < 133520; j++) _solve(b, j);
for(j = 134350; j < 134360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 135190; j < 135200; j++) _solve(b, j);
for(j = 136030; j < 136040; j++) _solve(b, j);
for(j = 136870; j < 136880; j++) _solve(b, j);
for(j = 137710; j < 137720; j++) _solve(b, j);
for(j = 138550; j < 138560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 68840; j < 68850; j++) _solve(b, j);
for(j = 69680; j < 69690; j++) _solve(b, j);
for(j = 70520; j < 70530; j++) _solve(b, j);
for(j = 71360; j < 71370; j++) _solve(b, j);
for(j = 72200; j < 72210; j++) _solve(b, j);
for(j = 73040; j < 73050; j++) _solve(b, j);
for(j = 73880; j < 73890; j++) _solve(b, j);
for(j = 74720; j < 74730; j++) _solve(b, j);
for(j = 75560; j < 75570; j++) _solve(b, j);
for(j = 76400; j < 76410; j++) _solve(b, j);
for(j = 77240; j < 77250; j++) _solve(b, j);
for(j = 78080; j < 78090; j++) _solve(b, j);
for(j = 78920; j < 78930; j++) _solve(b, j);
for(j = 79760; j < 79770; j++) _solve(b, j);
for(j = 80600; j < 80610; j++) _solve(b, j);
for(j = 81440; j < 81450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 82280; j < 82290; j++) _solve(b, j);
for(j = 83120; j < 83130; j++) _solve(b, j);
for(j = 83960; j < 83970; j++) _solve(b, j);
for(j = 84800; j < 84810; j++) _solve(b, j);
for(j = 85640; j < 85650; j++) _solve(b, j);
for(j = 86480; j < 86490; j++) _solve(b, j);
for(j = 87320; j < 87330; j++) _solve(b, j);
for(j = 88160; j < 88170; j++) _solve(b, j);
for(j = 89000; j < 89010; j++) _solve(b, j);
for(j = 89840; j < 89850; j++) _solve(b, j);
for(j = 90680; j < 90690; j++) _solve(b, j);
for(j = 91520; j < 91530; j++) _solve(b, j);
for(j = 92360; j < 92370; j++) _solve(b, j);
for(j = 93200; j < 93210; j++) _solve(b, j);
for(j = 94040; j < 94050; j++) _solve(b, j);
for(j = 94880; j < 94890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 95720; j < 95730; j++) _solve(b, j);
for(j = 96560; j < 96570; j++) _solve(b, j);
for(j = 97400; j < 97410; j++) _solve(b, j);
for(j = 98240; j < 98250; j++) _solve(b, j);
for(j = 99080; j < 99090; j++) _solve(b, j);
for(j = 99920; j < 99930; j++) _solve(b, j);
for(j = 100760; j < 100770; j++) _solve(b, j);
for(j = 101600; j < 101610; j++) _solve(b, j);
for(j = 102440; j < 102450; j++) _solve(b, j);
for(j = 103280; j < 103290; j++) _solve(b, j);
for(j = 104120; j < 104130; j++) _solve(b, j);
for(j = 104960; j < 104970; j++) _solve(b, j);
for(j = 105800; j < 105810; j++) _solve(b, j);
for(j = 106640; j < 106650; j++) _solve(b, j);
for(j = 107480; j < 107490; j++) _solve(b, j);
for(j = 108320; j < 108330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 109160; j < 109170; j++) _solve(b, j);
for(j = 110000; j < 110010; j++) _solve(b, j);
for(j = 110840; j < 110850; j++) _solve(b, j);
for(j = 111680; j < 111690; j++) _solve(b, j);
for(j = 112520; j < 112530; j++) _solve(b, j);
for(j = 113360; j < 113370; j++) _solve(b, j);
for(j = 114200; j < 114210; j++) _solve(b, j);
for(j = 115040; j < 115050; j++) _solve(b, j);
for(j = 115880; j < 115890; j++) _solve(b, j);
for(j = 116720; j < 116730; j++) _solve(b, j);
for(j = 117560; j < 117570; j++) _solve(b, j);
for(j = 118400; j < 118410; j++) _solve(b, j);
for(j = 119240; j < 119250; j++) _solve(b, j);
for(j = 120080; j < 120090; j++) _solve(b, j);
for(j = 120920; j < 120930; j++) _solve(b, j);
for(j = 121760; j < 121770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 122600; j < 122610; j++) _solve(b, j);
for(j = 123440; j < 123450; j++) _solve(b, j);
for(j = 124280; j < 124290; j++) _solve(b, j);
for(j = 125120; j < 125130; j++) _solve(b, j);
for(j = 125960; j < 125970; j++) _solve(b, j);
for(j = 126800; j < 126810; j++) _solve(b, j);
for(j = 127640; j < 127650; j++) _solve(b, j);
for(j = 128480; j < 128490; j++) _solve(b, j);
for(j = 129320; j < 129330; j++) _solve(b, j);
for(j = 130160; j < 130170; j++) _solve(b, j);
for(j = 131000; j < 131010; j++) _solve(b, j);
for(j = 131840; j < 131850; j++) _solve(b, j);
for(j = 132680; j < 132690; j++) _solve(b, j);
for(j = 133520; j < 133530; j++) _solve(b, j);
for(j = 134360; j < 134370; j++) _solve(b, j);
for(j = 135200; j < 135210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 136040; j < 136050; j++) _solve(b, j);
for(j = 136880; j < 136890; j++) _solve(b, j);
for(j = 137720; j < 137730; j++) _solve(b, j);
for(j = 138560; j < 138570; j++) _solve(b, j);
for(j = 139400; j < 139410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 69690; j < 69700; j++) _solve(b, j);
for(j = 70530; j < 70540; j++) _solve(b, j);
for(j = 71370; j < 71380; j++) _solve(b, j);
for(j = 72210; j < 72220; j++) _solve(b, j);
for(j = 73050; j < 73060; j++) _solve(b, j);
for(j = 73890; j < 73900; j++) _solve(b, j);
for(j = 74730; j < 74740; j++) _solve(b, j);
for(j = 75570; j < 75580; j++) _solve(b, j);
for(j = 76410; j < 76420; j++) _solve(b, j);
for(j = 77250; j < 77260; j++) _solve(b, j);
for(j = 78090; j < 78100; j++) _solve(b, j);
for(j = 78930; j < 78940; j++) _solve(b, j);
for(j = 79770; j < 79780; j++) _solve(b, j);
for(j = 80610; j < 80620; j++) _solve(b, j);
for(j = 81450; j < 81460; j++) _solve(b, j);
for(j = 82290; j < 82300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 83130; j < 83140; j++) _solve(b, j);
for(j = 83970; j < 83980; j++) _solve(b, j);
for(j = 84810; j < 84820; j++) _solve(b, j);
for(j = 85650; j < 85660; j++) _solve(b, j);
for(j = 86490; j < 86500; j++) _solve(b, j);
for(j = 87330; j < 87340; j++) _solve(b, j);
for(j = 88170; j < 88180; j++) _solve(b, j);
for(j = 89010; j < 89020; j++) _solve(b, j);
for(j = 89850; j < 89860; j++) _solve(b, j);
for(j = 90690; j < 90700; j++) _solve(b, j);
for(j = 91530; j < 91540; j++) _solve(b, j);
for(j = 92370; j < 92380; j++) _solve(b, j);
for(j = 93210; j < 93220; j++) _solve(b, j);
for(j = 94050; j < 94060; j++) _solve(b, j);
for(j = 94890; j < 94900; j++) _solve(b, j);
for(j = 95730; j < 95740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 96570; j < 96580; j++) _solve(b, j);
for(j = 97410; j < 97420; j++) _solve(b, j);
for(j = 98250; j < 98260; j++) _solve(b, j);
for(j = 99090; j < 99100; j++) _solve(b, j);
for(j = 99930; j < 99940; j++) _solve(b, j);
for(j = 100770; j < 100780; j++) _solve(b, j);
for(j = 101610; j < 101620; j++) _solve(b, j);
for(j = 102450; j < 102460; j++) _solve(b, j);
for(j = 103290; j < 103300; j++) _solve(b, j);
for(j = 104130; j < 104140; j++) _solve(b, j);
for(j = 104970; j < 104980; j++) _solve(b, j);
for(j = 105810; j < 105820; j++) _solve(b, j);
for(j = 106650; j < 106660; j++) _solve(b, j);
for(j = 107490; j < 107500; j++) _solve(b, j);
for(j = 108330; j < 108340; j++) _solve(b, j);
for(j = 109170; j < 109180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 110010; j < 110020; j++) _solve(b, j);
for(j = 110850; j < 110860; j++) _solve(b, j);
for(j = 111690; j < 111700; j++) _solve(b, j);
for(j = 112530; j < 112540; j++) _solve(b, j);
for(j = 113370; j < 113380; j++) _solve(b, j);
for(j = 114210; j < 114220; j++) _solve(b, j);
for(j = 115050; j < 115060; j++) _solve(b, j);
for(j = 115890; j < 115900; j++) _solve(b, j);
for(j = 116730; j < 116740; j++) _solve(b, j);
for(j = 117570; j < 117580; j++) _solve(b, j);
for(j = 118410; j < 118420; j++) _solve(b, j);
for(j = 119250; j < 119260; j++) _solve(b, j);
for(j = 120090; j < 120100; j++) _solve(b, j);
for(j = 120930; j < 120940; j++) _solve(b, j);
for(j = 121770; j < 121780; j++) _solve(b, j);
for(j = 122610; j < 122620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 123450; j < 123460; j++) _solve(b, j);
for(j = 124290; j < 124300; j++) _solve(b, j);
for(j = 125130; j < 125140; j++) _solve(b, j);
for(j = 125970; j < 125980; j++) _solve(b, j);
for(j = 126810; j < 126820; j++) _solve(b, j);
for(j = 127650; j < 127660; j++) _solve(b, j);
for(j = 128490; j < 128500; j++) _solve(b, j);
for(j = 129330; j < 129340; j++) _solve(b, j);
for(j = 130170; j < 130180; j++) _solve(b, j);
for(j = 131010; j < 131020; j++) _solve(b, j);
for(j = 131850; j < 131860; j++) _solve(b, j);
for(j = 132690; j < 132700; j++) _solve(b, j);
for(j = 133530; j < 133540; j++) _solve(b, j);
for(j = 134370; j < 134380; j++) _solve(b, j);
for(j = 135210; j < 135220; j++) _solve(b, j);
for(j = 136050; j < 136060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 136890; j < 136900; j++) _solve(b, j);
for(j = 137730; j < 137740; j++) _solve(b, j);
for(j = 138570; j < 138580; j++) _solve(b, j);
for(j = 139410; j < 139420; j++) _solve(b, j);
for(j = 140250; j < 140260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 70540; j < 70550; j++) _solve(b, j);
for(j = 71380; j < 71390; j++) _solve(b, j);
for(j = 72220; j < 72230; j++) _solve(b, j);
for(j = 73060; j < 73070; j++) _solve(b, j);
for(j = 73900; j < 73910; j++) _solve(b, j);
for(j = 74740; j < 74750; j++) _solve(b, j);
for(j = 75580; j < 75590; j++) _solve(b, j);
for(j = 76420; j < 76430; j++) _solve(b, j);
for(j = 77260; j < 77270; j++) _solve(b, j);
for(j = 78100; j < 78110; j++) _solve(b, j);
for(j = 78940; j < 78950; j++) _solve(b, j);
for(j = 79780; j < 79790; j++) _solve(b, j);
for(j = 80620; j < 80630; j++) _solve(b, j);
for(j = 81460; j < 81470; j++) _solve(b, j);
for(j = 82300; j < 82310; j++) _solve(b, j);
for(j = 83140; j < 83150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 83980; j < 83990; j++) _solve(b, j);
for(j = 84820; j < 84830; j++) _solve(b, j);
for(j = 85660; j < 85670; j++) _solve(b, j);
for(j = 86500; j < 86510; j++) _solve(b, j);
for(j = 87340; j < 87350; j++) _solve(b, j);
for(j = 88180; j < 88190; j++) _solve(b, j);
for(j = 89020; j < 89030; j++) _solve(b, j);
for(j = 89860; j < 89870; j++) _solve(b, j);
for(j = 90700; j < 90710; j++) _solve(b, j);
for(j = 91540; j < 91550; j++) _solve(b, j);
for(j = 92380; j < 92390; j++) _solve(b, j);
for(j = 93220; j < 93230; j++) _solve(b, j);
for(j = 94060; j < 94070; j++) _solve(b, j);
for(j = 94900; j < 94910; j++) _solve(b, j);
for(j = 95740; j < 95750; j++) _solve(b, j);
for(j = 96580; j < 96590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 97420; j < 97430; j++) _solve(b, j);
for(j = 98260; j < 98270; j++) _solve(b, j);
for(j = 99100; j < 99110; j++) _solve(b, j);
for(j = 99940; j < 99950; j++) _solve(b, j);
for(j = 100780; j < 100790; j++) _solve(b, j);
for(j = 101620; j < 101630; j++) _solve(b, j);
for(j = 102460; j < 102470; j++) _solve(b, j);
for(j = 103300; j < 103310; j++) _solve(b, j);
for(j = 104140; j < 104150; j++) _solve(b, j);
for(j = 104980; j < 104990; j++) _solve(b, j);
for(j = 105820; j < 105830; j++) _solve(b, j);
for(j = 106660; j < 106670; j++) _solve(b, j);
for(j = 107500; j < 107510; j++) _solve(b, j);
for(j = 108340; j < 108350; j++) _solve(b, j);
for(j = 109180; j < 109190; j++) _solve(b, j);
for(j = 110020; j < 110030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 110860; j < 110870; j++) _solve(b, j);
for(j = 111700; j < 111710; j++) _solve(b, j);
for(j = 112540; j < 112550; j++) _solve(b, j);
for(j = 113380; j < 113390; j++) _solve(b, j);
for(j = 114220; j < 114230; j++) _solve(b, j);
for(j = 115060; j < 115070; j++) _solve(b, j);
for(j = 115900; j < 115910; j++) _solve(b, j);
for(j = 116740; j < 116750; j++) _solve(b, j);
for(j = 117580; j < 117590; j++) _solve(b, j);
for(j = 118420; j < 118430; j++) _solve(b, j);
for(j = 119260; j < 119270; j++) _solve(b, j);
for(j = 120100; j < 120110; j++) _solve(b, j);
for(j = 120940; j < 120950; j++) _solve(b, j);
for(j = 121780; j < 121790; j++) _solve(b, j);
for(j = 122620; j < 122630; j++) _solve(b, j);
for(j = 123460; j < 123470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 124300; j < 124310; j++) _solve(b, j);
for(j = 125140; j < 125150; j++) _solve(b, j);
for(j = 125980; j < 125990; j++) _solve(b, j);
for(j = 126820; j < 126830; j++) _solve(b, j);
for(j = 127660; j < 127670; j++) _solve(b, j);
for(j = 128500; j < 128510; j++) _solve(b, j);
for(j = 129340; j < 129350; j++) _solve(b, j);
for(j = 130180; j < 130190; j++) _solve(b, j);
for(j = 131020; j < 131030; j++) _solve(b, j);
for(j = 131860; j < 131870; j++) _solve(b, j);
for(j = 132700; j < 132710; j++) _solve(b, j);
for(j = 133540; j < 133550; j++) _solve(b, j);
for(j = 134380; j < 134390; j++) _solve(b, j);
for(j = 135220; j < 135230; j++) _solve(b, j);
for(j = 136060; j < 136070; j++) _solve(b, j);
for(j = 136900; j < 136910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 137740; j < 137750; j++) _solve(b, j);
for(j = 138580; j < 138590; j++) _solve(b, j);
for(j = 139420; j < 139430; j++) _solve(b, j);
for(j = 140260; j < 140270; j++) _solve(b, j);
for(j = 141100; j < 141110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 71390; j < 71400; j++) _solve(b, j);
for(j = 72230; j < 72240; j++) _solve(b, j);
for(j = 73070; j < 73080; j++) _solve(b, j);
for(j = 73910; j < 73920; j++) _solve(b, j);
for(j = 74750; j < 74760; j++) _solve(b, j);
for(j = 75590; j < 75600; j++) _solve(b, j);
for(j = 76430; j < 76440; j++) _solve(b, j);
for(j = 77270; j < 77280; j++) _solve(b, j);
for(j = 78110; j < 78120; j++) _solve(b, j);
for(j = 78950; j < 78960; j++) _solve(b, j);
for(j = 79790; j < 79800; j++) _solve(b, j);
for(j = 80630; j < 80640; j++) _solve(b, j);
for(j = 81470; j < 81480; j++) _solve(b, j);
for(j = 82310; j < 82320; j++) _solve(b, j);
for(j = 83150; j < 83160; j++) _solve(b, j);
for(j = 83990; j < 84000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 84830; j < 84840; j++) _solve(b, j);
for(j = 85670; j < 85680; j++) _solve(b, j);
for(j = 86510; j < 86520; j++) _solve(b, j);
for(j = 87350; j < 87360; j++) _solve(b, j);
for(j = 88190; j < 88200; j++) _solve(b, j);
for(j = 89030; j < 89040; j++) _solve(b, j);
for(j = 89870; j < 89880; j++) _solve(b, j);
for(j = 90710; j < 90720; j++) _solve(b, j);
for(j = 91550; j < 91560; j++) _solve(b, j);
for(j = 92390; j < 92400; j++) _solve(b, j);
for(j = 93230; j < 93240; j++) _solve(b, j);
for(j = 94070; j < 94080; j++) _solve(b, j);
for(j = 94910; j < 94920; j++) _solve(b, j);
for(j = 95750; j < 95760; j++) _solve(b, j);
for(j = 96590; j < 96600; j++) _solve(b, j);
for(j = 97430; j < 97440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 98270; j < 98280; j++) _solve(b, j);
for(j = 99110; j < 99120; j++) _solve(b, j);
for(j = 99950; j < 99960; j++) _solve(b, j);
for(j = 100790; j < 100800; j++) _solve(b, j);
for(j = 101630; j < 101640; j++) _solve(b, j);
for(j = 102470; j < 102480; j++) _solve(b, j);
for(j = 103310; j < 103320; j++) _solve(b, j);
for(j = 104150; j < 104160; j++) _solve(b, j);
for(j = 104990; j < 105000; j++) _solve(b, j);
for(j = 105830; j < 105840; j++) _solve(b, j);
for(j = 106670; j < 106680; j++) _solve(b, j);
for(j = 107510; j < 107520; j++) _solve(b, j);
for(j = 108350; j < 108360; j++) _solve(b, j);
for(j = 109190; j < 109200; j++) _solve(b, j);
for(j = 110030; j < 110040; j++) _solve(b, j);
for(j = 110870; j < 110880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 111710; j < 111720; j++) _solve(b, j);
for(j = 112550; j < 112560; j++) _solve(b, j);
for(j = 113390; j < 113400; j++) _solve(b, j);
for(j = 114230; j < 114240; j++) _solve(b, j);
for(j = 115070; j < 115080; j++) _solve(b, j);
for(j = 115910; j < 115920; j++) _solve(b, j);
for(j = 116750; j < 116760; j++) _solve(b, j);
for(j = 117590; j < 117600; j++) _solve(b, j);
for(j = 118430; j < 118440; j++) _solve(b, j);
for(j = 119270; j < 119280; j++) _solve(b, j);
for(j = 120110; j < 120120; j++) _solve(b, j);
for(j = 120950; j < 120960; j++) _solve(b, j);
for(j = 121790; j < 121800; j++) _solve(b, j);
for(j = 122630; j < 122640; j++) _solve(b, j);
for(j = 123470; j < 123480; j++) _solve(b, j);
for(j = 124310; j < 124320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 125150; j < 125160; j++) _solve(b, j);
for(j = 125990; j < 126000; j++) _solve(b, j);
for(j = 126830; j < 126840; j++) _solve(b, j);
for(j = 127670; j < 127680; j++) _solve(b, j);
for(j = 128510; j < 128520; j++) _solve(b, j);
for(j = 129350; j < 129360; j++) _solve(b, j);
for(j = 130190; j < 130200; j++) _solve(b, j);
for(j = 131030; j < 131040; j++) _solve(b, j);
for(j = 131870; j < 131880; j++) _solve(b, j);
for(j = 132710; j < 132720; j++) _solve(b, j);
for(j = 133550; j < 133560; j++) _solve(b, j);
for(j = 134390; j < 134400; j++) _solve(b, j);
for(j = 135230; j < 135240; j++) _solve(b, j);
for(j = 136070; j < 136080; j++) _solve(b, j);
for(j = 136910; j < 136920; j++) _solve(b, j);
for(j = 137750; j < 137760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 138590; j < 138600; j++) _solve(b, j);
for(j = 139430; j < 139440; j++) _solve(b, j);
for(j = 140270; j < 140280; j++) _solve(b, j);
for(j = 141110; j < 141120; j++) _solve(b, j);
for(j = 141950; j < 141960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 72240; j < 72250; j++) _solve(b, j);
for(j = 73080; j < 73090; j++) _solve(b, j);
for(j = 73920; j < 73930; j++) _solve(b, j);
for(j = 74760; j < 74770; j++) _solve(b, j);
for(j = 75600; j < 75610; j++) _solve(b, j);
for(j = 76440; j < 76450; j++) _solve(b, j);
for(j = 77280; j < 77290; j++) _solve(b, j);
for(j = 78120; j < 78130; j++) _solve(b, j);
for(j = 78960; j < 78970; j++) _solve(b, j);
for(j = 79800; j < 79810; j++) _solve(b, j);
for(j = 80640; j < 80650; j++) _solve(b, j);
for(j = 81480; j < 81490; j++) _solve(b, j);
for(j = 82320; j < 82330; j++) _solve(b, j);
for(j = 83160; j < 83170; j++) _solve(b, j);
for(j = 84000; j < 84010; j++) _solve(b, j);
for(j = 84840; j < 84850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 85680; j < 85690; j++) _solve(b, j);
for(j = 86520; j < 86530; j++) _solve(b, j);
for(j = 87360; j < 87370; j++) _solve(b, j);
for(j = 88200; j < 88210; j++) _solve(b, j);
for(j = 89040; j < 89050; j++) _solve(b, j);
for(j = 89880; j < 89890; j++) _solve(b, j);
for(j = 90720; j < 90730; j++) _solve(b, j);
for(j = 91560; j < 91570; j++) _solve(b, j);
for(j = 92400; j < 92410; j++) _solve(b, j);
for(j = 93240; j < 93250; j++) _solve(b, j);
for(j = 94080; j < 94090; j++) _solve(b, j);
for(j = 94920; j < 94930; j++) _solve(b, j);
for(j = 95760; j < 95770; j++) _solve(b, j);
for(j = 96600; j < 96610; j++) _solve(b, j);
for(j = 97440; j < 97450; j++) _solve(b, j);
for(j = 98280; j < 98290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 99120; j < 99130; j++) _solve(b, j);
for(j = 99960; j < 99970; j++) _solve(b, j);
for(j = 100800; j < 100810; j++) _solve(b, j);
for(j = 101640; j < 101650; j++) _solve(b, j);
for(j = 102480; j < 102490; j++) _solve(b, j);
for(j = 103320; j < 103330; j++) _solve(b, j);
for(j = 104160; j < 104170; j++) _solve(b, j);
for(j = 105000; j < 105010; j++) _solve(b, j);
for(j = 105840; j < 105850; j++) _solve(b, j);
for(j = 106680; j < 106690; j++) _solve(b, j);
for(j = 107520; j < 107530; j++) _solve(b, j);
for(j = 108360; j < 108370; j++) _solve(b, j);
for(j = 109200; j < 109210; j++) _solve(b, j);
for(j = 110040; j < 110050; j++) _solve(b, j);
for(j = 110880; j < 110890; j++) _solve(b, j);
for(j = 111720; j < 111730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 112560; j < 112570; j++) _solve(b, j);
for(j = 113400; j < 113410; j++) _solve(b, j);
for(j = 114240; j < 114250; j++) _solve(b, j);
for(j = 115080; j < 115090; j++) _solve(b, j);
for(j = 115920; j < 115930; j++) _solve(b, j);
for(j = 116760; j < 116770; j++) _solve(b, j);
for(j = 117600; j < 117610; j++) _solve(b, j);
for(j = 118440; j < 118450; j++) _solve(b, j);
for(j = 119280; j < 119290; j++) _solve(b, j);
for(j = 120120; j < 120130; j++) _solve(b, j);
for(j = 120960; j < 120970; j++) _solve(b, j);
for(j = 121800; j < 121810; j++) _solve(b, j);
for(j = 122640; j < 122650; j++) _solve(b, j);
for(j = 123480; j < 123490; j++) _solve(b, j);
for(j = 124320; j < 124330; j++) _solve(b, j);
for(j = 125160; j < 125170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 126000; j < 126010; j++) _solve(b, j);
for(j = 126840; j < 126850; j++) _solve(b, j);
for(j = 127680; j < 127690; j++) _solve(b, j);
for(j = 128520; j < 128530; j++) _solve(b, j);
for(j = 129360; j < 129370; j++) _solve(b, j);
for(j = 130200; j < 130210; j++) _solve(b, j);
for(j = 131040; j < 131050; j++) _solve(b, j);
for(j = 131880; j < 131890; j++) _solve(b, j);
for(j = 132720; j < 132730; j++) _solve(b, j);
for(j = 133560; j < 133570; j++) _solve(b, j);
for(j = 134400; j < 134410; j++) _solve(b, j);
for(j = 135240; j < 135250; j++) _solve(b, j);
for(j = 136080; j < 136090; j++) _solve(b, j);
for(j = 136920; j < 136930; j++) _solve(b, j);
for(j = 137760; j < 137770; j++) _solve(b, j);
for(j = 138600; j < 138610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 139440; j < 139450; j++) _solve(b, j);
for(j = 140280; j < 140290; j++) _solve(b, j);
for(j = 141120; j < 141130; j++) _solve(b, j);
for(j = 141960; j < 141970; j++) _solve(b, j);
for(j = 142800; j < 142810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 73090; j < 73100; j++) _solve(b, j);
for(j = 73930; j < 73940; j++) _solve(b, j);
for(j = 74770; j < 74780; j++) _solve(b, j);
for(j = 75610; j < 75620; j++) _solve(b, j);
for(j = 76450; j < 76460; j++) _solve(b, j);
for(j = 77290; j < 77300; j++) _solve(b, j);
for(j = 78130; j < 78140; j++) _solve(b, j);
for(j = 78970; j < 78980; j++) _solve(b, j);
for(j = 79810; j < 79820; j++) _solve(b, j);
for(j = 80650; j < 80660; j++) _solve(b, j);
for(j = 81490; j < 81500; j++) _solve(b, j);
for(j = 82330; j < 82340; j++) _solve(b, j);
for(j = 83170; j < 83180; j++) _solve(b, j);
for(j = 84010; j < 84020; j++) _solve(b, j);
for(j = 84850; j < 84860; j++) _solve(b, j);
for(j = 85690; j < 85700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 86530; j < 86540; j++) _solve(b, j);
for(j = 87370; j < 87380; j++) _solve(b, j);
for(j = 88210; j < 88220; j++) _solve(b, j);
for(j = 89050; j < 89060; j++) _solve(b, j);
for(j = 89890; j < 89900; j++) _solve(b, j);
for(j = 90730; j < 90740; j++) _solve(b, j);
for(j = 91570; j < 91580; j++) _solve(b, j);
for(j = 92410; j < 92420; j++) _solve(b, j);
for(j = 93250; j < 93260; j++) _solve(b, j);
for(j = 94090; j < 94100; j++) _solve(b, j);
for(j = 94930; j < 94940; j++) _solve(b, j);
for(j = 95770; j < 95780; j++) _solve(b, j);
for(j = 96610; j < 96620; j++) _solve(b, j);
for(j = 97450; j < 97460; j++) _solve(b, j);
for(j = 98290; j < 98300; j++) _solve(b, j);
for(j = 99130; j < 99140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 99970; j < 99980; j++) _solve(b, j);
for(j = 100810; j < 100820; j++) _solve(b, j);
for(j = 101650; j < 101660; j++) _solve(b, j);
for(j = 102490; j < 102500; j++) _solve(b, j);
for(j = 103330; j < 103340; j++) _solve(b, j);
for(j = 104170; j < 104180; j++) _solve(b, j);
for(j = 105010; j < 105020; j++) _solve(b, j);
for(j = 105850; j < 105860; j++) _solve(b, j);
for(j = 106690; j < 106700; j++) _solve(b, j);
for(j = 107530; j < 107540; j++) _solve(b, j);
for(j = 108370; j < 108380; j++) _solve(b, j);
for(j = 109210; j < 109220; j++) _solve(b, j);
for(j = 110050; j < 110060; j++) _solve(b, j);
for(j = 110890; j < 110900; j++) _solve(b, j);
for(j = 111730; j < 111740; j++) _solve(b, j);
for(j = 112570; j < 112580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 113410; j < 113420; j++) _solve(b, j);
for(j = 114250; j < 114260; j++) _solve(b, j);
for(j = 115090; j < 115100; j++) _solve(b, j);
for(j = 115930; j < 115940; j++) _solve(b, j);
for(j = 116770; j < 116780; j++) _solve(b, j);
for(j = 117610; j < 117620; j++) _solve(b, j);
for(j = 118450; j < 118460; j++) _solve(b, j);
for(j = 119290; j < 119300; j++) _solve(b, j);
for(j = 120130; j < 120140; j++) _solve(b, j);
for(j = 120970; j < 120980; j++) _solve(b, j);
for(j = 121810; j < 121820; j++) _solve(b, j);
for(j = 122650; j < 122660; j++) _solve(b, j);
for(j = 123490; j < 123500; j++) _solve(b, j);
for(j = 124330; j < 124340; j++) _solve(b, j);
for(j = 125170; j < 125180; j++) _solve(b, j);
for(j = 126010; j < 126020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 126850; j < 126860; j++) _solve(b, j);
for(j = 127690; j < 127700; j++) _solve(b, j);
for(j = 128530; j < 128540; j++) _solve(b, j);
for(j = 129370; j < 129380; j++) _solve(b, j);
for(j = 130210; j < 130220; j++) _solve(b, j);
for(j = 131050; j < 131060; j++) _solve(b, j);
for(j = 131890; j < 131900; j++) _solve(b, j);
for(j = 132730; j < 132740; j++) _solve(b, j);
for(j = 133570; j < 133580; j++) _solve(b, j);
for(j = 134410; j < 134420; j++) _solve(b, j);
for(j = 135250; j < 135260; j++) _solve(b, j);
for(j = 136090; j < 136100; j++) _solve(b, j);
for(j = 136930; j < 136940; j++) _solve(b, j);
for(j = 137770; j < 137780; j++) _solve(b, j);
for(j = 138610; j < 138620; j++) _solve(b, j);
for(j = 139450; j < 139460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 140290; j < 140300; j++) _solve(b, j);
for(j = 141130; j < 141140; j++) _solve(b, j);
for(j = 141970; j < 141980; j++) _solve(b, j);
for(j = 142810; j < 142820; j++) _solve(b, j);
for(j = 143650; j < 143660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 73940; j < 73950; j++) _solve(b, j);
for(j = 74780; j < 74790; j++) _solve(b, j);
for(j = 75620; j < 75630; j++) _solve(b, j);
for(j = 76460; j < 76470; j++) _solve(b, j);
for(j = 77300; j < 77310; j++) _solve(b, j);
for(j = 78140; j < 78150; j++) _solve(b, j);
for(j = 78980; j < 78990; j++) _solve(b, j);
for(j = 79820; j < 79830; j++) _solve(b, j);
for(j = 80660; j < 80670; j++) _solve(b, j);
for(j = 81500; j < 81510; j++) _solve(b, j);
for(j = 82340; j < 82350; j++) _solve(b, j);
for(j = 83180; j < 83190; j++) _solve(b, j);
for(j = 84020; j < 84030; j++) _solve(b, j);
for(j = 84860; j < 84870; j++) _solve(b, j);
for(j = 85700; j < 85710; j++) _solve(b, j);
for(j = 86540; j < 86550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 87380; j < 87390; j++) _solve(b, j);
for(j = 88220; j < 88230; j++) _solve(b, j);
for(j = 89060; j < 89070; j++) _solve(b, j);
for(j = 89900; j < 89910; j++) _solve(b, j);
for(j = 90740; j < 90750; j++) _solve(b, j);
for(j = 91580; j < 91590; j++) _solve(b, j);
for(j = 92420; j < 92430; j++) _solve(b, j);
for(j = 93260; j < 93270; j++) _solve(b, j);
for(j = 94100; j < 94110; j++) _solve(b, j);
for(j = 94940; j < 94950; j++) _solve(b, j);
for(j = 95780; j < 95790; j++) _solve(b, j);
for(j = 96620; j < 96630; j++) _solve(b, j);
for(j = 97460; j < 97470; j++) _solve(b, j);
for(j = 98300; j < 98310; j++) _solve(b, j);
for(j = 99140; j < 99150; j++) _solve(b, j);
for(j = 99980; j < 99990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 100820; j < 100830; j++) _solve(b, j);
for(j = 101660; j < 101670; j++) _solve(b, j);
for(j = 102500; j < 102510; j++) _solve(b, j);
for(j = 103340; j < 103350; j++) _solve(b, j);
for(j = 104180; j < 104190; j++) _solve(b, j);
for(j = 105020; j < 105030; j++) _solve(b, j);
for(j = 105860; j < 105870; j++) _solve(b, j);
for(j = 106700; j < 106710; j++) _solve(b, j);
for(j = 107540; j < 107550; j++) _solve(b, j);
for(j = 108380; j < 108390; j++) _solve(b, j);
for(j = 109220; j < 109230; j++) _solve(b, j);
for(j = 110060; j < 110070; j++) _solve(b, j);
for(j = 110900; j < 110910; j++) _solve(b, j);
for(j = 111740; j < 111750; j++) _solve(b, j);
for(j = 112580; j < 112590; j++) _solve(b, j);
for(j = 113420; j < 113430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 114260; j < 114270; j++) _solve(b, j);
for(j = 115100; j < 115110; j++) _solve(b, j);
for(j = 115940; j < 115950; j++) _solve(b, j);
for(j = 116780; j < 116790; j++) _solve(b, j);
for(j = 117620; j < 117630; j++) _solve(b, j);
for(j = 118460; j < 118470; j++) _solve(b, j);
for(j = 119300; j < 119310; j++) _solve(b, j);
for(j = 120140; j < 120150; j++) _solve(b, j);
for(j = 120980; j < 120990; j++) _solve(b, j);
for(j = 121820; j < 121830; j++) _solve(b, j);
for(j = 122660; j < 122670; j++) _solve(b, j);
for(j = 123500; j < 123510; j++) _solve(b, j);
for(j = 124340; j < 124350; j++) _solve(b, j);
for(j = 125180; j < 125190; j++) _solve(b, j);
for(j = 126020; j < 126030; j++) _solve(b, j);
for(j = 126860; j < 126870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 127700; j < 127710; j++) _solve(b, j);
for(j = 128540; j < 128550; j++) _solve(b, j);
for(j = 129380; j < 129390; j++) _solve(b, j);
for(j = 130220; j < 130230; j++) _solve(b, j);
for(j = 131060; j < 131070; j++) _solve(b, j);
for(j = 131900; j < 131910; j++) _solve(b, j);
for(j = 132740; j < 132750; j++) _solve(b, j);
for(j = 133580; j < 133590; j++) _solve(b, j);
for(j = 134420; j < 134430; j++) _solve(b, j);
for(j = 135260; j < 135270; j++) _solve(b, j);
for(j = 136100; j < 136110; j++) _solve(b, j);
for(j = 136940; j < 136950; j++) _solve(b, j);
for(j = 137780; j < 137790; j++) _solve(b, j);
for(j = 138620; j < 138630; j++) _solve(b, j);
for(j = 139460; j < 139470; j++) _solve(b, j);
for(j = 140300; j < 140310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 141140; j < 141150; j++) _solve(b, j);
for(j = 141980; j < 141990; j++) _solve(b, j);
for(j = 142820; j < 142830; j++) _solve(b, j);
for(j = 143660; j < 143670; j++) _solve(b, j);
for(j = 144500; j < 144510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 74790; j < 74800; j++) _solve(b, j);
for(j = 75630; j < 75640; j++) _solve(b, j);
for(j = 76470; j < 76480; j++) _solve(b, j);
for(j = 77310; j < 77320; j++) _solve(b, j);
for(j = 78150; j < 78160; j++) _solve(b, j);
for(j = 78990; j < 79000; j++) _solve(b, j);
for(j = 79830; j < 79840; j++) _solve(b, j);
for(j = 80670; j < 80680; j++) _solve(b, j);
for(j = 81510; j < 81520; j++) _solve(b, j);
for(j = 82350; j < 82360; j++) _solve(b, j);
for(j = 83190; j < 83200; j++) _solve(b, j);
for(j = 84030; j < 84040; j++) _solve(b, j);
for(j = 84870; j < 84880; j++) _solve(b, j);
for(j = 85710; j < 85720; j++) _solve(b, j);
for(j = 86550; j < 86560; j++) _solve(b, j);
for(j = 87390; j < 87400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 88230; j < 88240; j++) _solve(b, j);
for(j = 89070; j < 89080; j++) _solve(b, j);
for(j = 89910; j < 89920; j++) _solve(b, j);
for(j = 90750; j < 90760; j++) _solve(b, j);
for(j = 91590; j < 91600; j++) _solve(b, j);
for(j = 92430; j < 92440; j++) _solve(b, j);
for(j = 93270; j < 93280; j++) _solve(b, j);
for(j = 94110; j < 94120; j++) _solve(b, j);
for(j = 94950; j < 94960; j++) _solve(b, j);
for(j = 95790; j < 95800; j++) _solve(b, j);
for(j = 96630; j < 96640; j++) _solve(b, j);
for(j = 97470; j < 97480; j++) _solve(b, j);
for(j = 98310; j < 98320; j++) _solve(b, j);
for(j = 99150; j < 99160; j++) _solve(b, j);
for(j = 99990; j < 100000; j++) _solve(b, j);
for(j = 100830; j < 100840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 101670; j < 101680; j++) _solve(b, j);
for(j = 102510; j < 102520; j++) _solve(b, j);
for(j = 103350; j < 103360; j++) _solve(b, j);
for(j = 104190; j < 104200; j++) _solve(b, j);
for(j = 105030; j < 105040; j++) _solve(b, j);
for(j = 105870; j < 105880; j++) _solve(b, j);
for(j = 106710; j < 106720; j++) _solve(b, j);
for(j = 107550; j < 107560; j++) _solve(b, j);
for(j = 108390; j < 108400; j++) _solve(b, j);
for(j = 109230; j < 109240; j++) _solve(b, j);
for(j = 110070; j < 110080; j++) _solve(b, j);
for(j = 110910; j < 110920; j++) _solve(b, j);
for(j = 111750; j < 111760; j++) _solve(b, j);
for(j = 112590; j < 112600; j++) _solve(b, j);
for(j = 113430; j < 113440; j++) _solve(b, j);
for(j = 114270; j < 114280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 115110; j < 115120; j++) _solve(b, j);
for(j = 115950; j < 115960; j++) _solve(b, j);
for(j = 116790; j < 116800; j++) _solve(b, j);
for(j = 117630; j < 117640; j++) _solve(b, j);
for(j = 118470; j < 118480; j++) _solve(b, j);
for(j = 119310; j < 119320; j++) _solve(b, j);
for(j = 120150; j < 120160; j++) _solve(b, j);
for(j = 120990; j < 121000; j++) _solve(b, j);
for(j = 121830; j < 121840; j++) _solve(b, j);
for(j = 122670; j < 122680; j++) _solve(b, j);
for(j = 123510; j < 123520; j++) _solve(b, j);
for(j = 124350; j < 124360; j++) _solve(b, j);
for(j = 125190; j < 125200; j++) _solve(b, j);
for(j = 126030; j < 126040; j++) _solve(b, j);
for(j = 126870; j < 126880; j++) _solve(b, j);
for(j = 127710; j < 127720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 128550; j < 128560; j++) _solve(b, j);
for(j = 129390; j < 129400; j++) _solve(b, j);
for(j = 130230; j < 130240; j++) _solve(b, j);
for(j = 131070; j < 131080; j++) _solve(b, j);
for(j = 131910; j < 131920; j++) _solve(b, j);
for(j = 132750; j < 132760; j++) _solve(b, j);
for(j = 133590; j < 133600; j++) _solve(b, j);
for(j = 134430; j < 134440; j++) _solve(b, j);
for(j = 135270; j < 135280; j++) _solve(b, j);
for(j = 136110; j < 136120; j++) _solve(b, j);
for(j = 136950; j < 136960; j++) _solve(b, j);
for(j = 137790; j < 137800; j++) _solve(b, j);
for(j = 138630; j < 138640; j++) _solve(b, j);
for(j = 139470; j < 139480; j++) _solve(b, j);
for(j = 140310; j < 140320; j++) _solve(b, j);
for(j = 141150; j < 141160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 141990; j < 142000; j++) _solve(b, j);
for(j = 142830; j < 142840; j++) _solve(b, j);
for(j = 143670; j < 143680; j++) _solve(b, j);
for(j = 144510; j < 144520; j++) _solve(b, j);
for(j = 145350; j < 145360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 75640; j < 75650; j++) _solve(b, j);
for(j = 76480; j < 76490; j++) _solve(b, j);
for(j = 77320; j < 77330; j++) _solve(b, j);
for(j = 78160; j < 78170; j++) _solve(b, j);
for(j = 79000; j < 79010; j++) _solve(b, j);
for(j = 79840; j < 79850; j++) _solve(b, j);
for(j = 80680; j < 80690; j++) _solve(b, j);
for(j = 81520; j < 81530; j++) _solve(b, j);
for(j = 82360; j < 82370; j++) _solve(b, j);
for(j = 83200; j < 83210; j++) _solve(b, j);
for(j = 84040; j < 84050; j++) _solve(b, j);
for(j = 84880; j < 84890; j++) _solve(b, j);
for(j = 85720; j < 85730; j++) _solve(b, j);
for(j = 86560; j < 86570; j++) _solve(b, j);
for(j = 87400; j < 87410; j++) _solve(b, j);
for(j = 88240; j < 88250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 89080; j < 89090; j++) _solve(b, j);
for(j = 89920; j < 89930; j++) _solve(b, j);
for(j = 90760; j < 90770; j++) _solve(b, j);
for(j = 91600; j < 91610; j++) _solve(b, j);
for(j = 92440; j < 92450; j++) _solve(b, j);
for(j = 93280; j < 93290; j++) _solve(b, j);
for(j = 94120; j < 94130; j++) _solve(b, j);
for(j = 94960; j < 94970; j++) _solve(b, j);
for(j = 95800; j < 95810; j++) _solve(b, j);
for(j = 96640; j < 96650; j++) _solve(b, j);
for(j = 97480; j < 97490; j++) _solve(b, j);
for(j = 98320; j < 98330; j++) _solve(b, j);
for(j = 99160; j < 99170; j++) _solve(b, j);
for(j = 100000; j < 100010; j++) _solve(b, j);
for(j = 100840; j < 100850; j++) _solve(b, j);
for(j = 101680; j < 101690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 102520; j < 102530; j++) _solve(b, j);
for(j = 103360; j < 103370; j++) _solve(b, j);
for(j = 104200; j < 104210; j++) _solve(b, j);
for(j = 105040; j < 105050; j++) _solve(b, j);
for(j = 105880; j < 105890; j++) _solve(b, j);
for(j = 106720; j < 106730; j++) _solve(b, j);
for(j = 107560; j < 107570; j++) _solve(b, j);
for(j = 108400; j < 108410; j++) _solve(b, j);
for(j = 109240; j < 109250; j++) _solve(b, j);
for(j = 110080; j < 110090; j++) _solve(b, j);
for(j = 110920; j < 110930; j++) _solve(b, j);
for(j = 111760; j < 111770; j++) _solve(b, j);
for(j = 112600; j < 112610; j++) _solve(b, j);
for(j = 113440; j < 113450; j++) _solve(b, j);
for(j = 114280; j < 114290; j++) _solve(b, j);
for(j = 115120; j < 115130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 115960; j < 115970; j++) _solve(b, j);
for(j = 116800; j < 116810; j++) _solve(b, j);
for(j = 117640; j < 117650; j++) _solve(b, j);
for(j = 118480; j < 118490; j++) _solve(b, j);
for(j = 119320; j < 119330; j++) _solve(b, j);
for(j = 120160; j < 120170; j++) _solve(b, j);
for(j = 121000; j < 121010; j++) _solve(b, j);
for(j = 121840; j < 121850; j++) _solve(b, j);
for(j = 122680; j < 122690; j++) _solve(b, j);
for(j = 123520; j < 123530; j++) _solve(b, j);
for(j = 124360; j < 124370; j++) _solve(b, j);
for(j = 125200; j < 125210; j++) _solve(b, j);
for(j = 126040; j < 126050; j++) _solve(b, j);
for(j = 126880; j < 126890; j++) _solve(b, j);
for(j = 127720; j < 127730; j++) _solve(b, j);
for(j = 128560; j < 128570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 129400; j < 129410; j++) _solve(b, j);
for(j = 130240; j < 130250; j++) _solve(b, j);
for(j = 131080; j < 131090; j++) _solve(b, j);
for(j = 131920; j < 131930; j++) _solve(b, j);
for(j = 132760; j < 132770; j++) _solve(b, j);
for(j = 133600; j < 133610; j++) _solve(b, j);
for(j = 134440; j < 134450; j++) _solve(b, j);
for(j = 135280; j < 135290; j++) _solve(b, j);
for(j = 136120; j < 136130; j++) _solve(b, j);
for(j = 136960; j < 136970; j++) _solve(b, j);
for(j = 137800; j < 137810; j++) _solve(b, j);
for(j = 138640; j < 138650; j++) _solve(b, j);
for(j = 139480; j < 139490; j++) _solve(b, j);
for(j = 140320; j < 140330; j++) _solve(b, j);
for(j = 141160; j < 141170; j++) _solve(b, j);
for(j = 142000; j < 142010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 142840; j < 142850; j++) _solve(b, j);
for(j = 143680; j < 143690; j++) _solve(b, j);
for(j = 144520; j < 144530; j++) _solve(b, j);
for(j = 145360; j < 145370; j++) _solve(b, j);
for(j = 146200; j < 146210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 76490; j < 76500; j++) _solve(b, j);
for(j = 77330; j < 77340; j++) _solve(b, j);
for(j = 78170; j < 78180; j++) _solve(b, j);
for(j = 79010; j < 79020; j++) _solve(b, j);
for(j = 79850; j < 79860; j++) _solve(b, j);
for(j = 80690; j < 80700; j++) _solve(b, j);
for(j = 81530; j < 81540; j++) _solve(b, j);
for(j = 82370; j < 82380; j++) _solve(b, j);
for(j = 83210; j < 83220; j++) _solve(b, j);
for(j = 84050; j < 84060; j++) _solve(b, j);
for(j = 84890; j < 84900; j++) _solve(b, j);
for(j = 85730; j < 85740; j++) _solve(b, j);
for(j = 86570; j < 86580; j++) _solve(b, j);
for(j = 87410; j < 87420; j++) _solve(b, j);
for(j = 88250; j < 88260; j++) _solve(b, j);
for(j = 89090; j < 89100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 89930; j < 89940; j++) _solve(b, j);
for(j = 90770; j < 90780; j++) _solve(b, j);
for(j = 91610; j < 91620; j++) _solve(b, j);
for(j = 92450; j < 92460; j++) _solve(b, j);
for(j = 93290; j < 93300; j++) _solve(b, j);
for(j = 94130; j < 94140; j++) _solve(b, j);
for(j = 94970; j < 94980; j++) _solve(b, j);
for(j = 95810; j < 95820; j++) _solve(b, j);
for(j = 96650; j < 96660; j++) _solve(b, j);
for(j = 97490; j < 97500; j++) _solve(b, j);
for(j = 98330; j < 98340; j++) _solve(b, j);
for(j = 99170; j < 99180; j++) _solve(b, j);
for(j = 100010; j < 100020; j++) _solve(b, j);
for(j = 100850; j < 100860; j++) _solve(b, j);
for(j = 101690; j < 101700; j++) _solve(b, j);
for(j = 102530; j < 102540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 103370; j < 103380; j++) _solve(b, j);
for(j = 104210; j < 104220; j++) _solve(b, j);
for(j = 105050; j < 105060; j++) _solve(b, j);
for(j = 105890; j < 105900; j++) _solve(b, j);
for(j = 106730; j < 106740; j++) _solve(b, j);
for(j = 107570; j < 107580; j++) _solve(b, j);
for(j = 108410; j < 108420; j++) _solve(b, j);
for(j = 109250; j < 109260; j++) _solve(b, j);
for(j = 110090; j < 110100; j++) _solve(b, j);
for(j = 110930; j < 110940; j++) _solve(b, j);
for(j = 111770; j < 111780; j++) _solve(b, j);
for(j = 112610; j < 112620; j++) _solve(b, j);
for(j = 113450; j < 113460; j++) _solve(b, j);
for(j = 114290; j < 114300; j++) _solve(b, j);
for(j = 115130; j < 115140; j++) _solve(b, j);
for(j = 115970; j < 115980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 116810; j < 116820; j++) _solve(b, j);
for(j = 117650; j < 117660; j++) _solve(b, j);
for(j = 118490; j < 118500; j++) _solve(b, j);
for(j = 119330; j < 119340; j++) _solve(b, j);
for(j = 120170; j < 120180; j++) _solve(b, j);
for(j = 121010; j < 121020; j++) _solve(b, j);
for(j = 121850; j < 121860; j++) _solve(b, j);
for(j = 122690; j < 122700; j++) _solve(b, j);
for(j = 123530; j < 123540; j++) _solve(b, j);
for(j = 124370; j < 124380; j++) _solve(b, j);
for(j = 125210; j < 125220; j++) _solve(b, j);
for(j = 126050; j < 126060; j++) _solve(b, j);
for(j = 126890; j < 126900; j++) _solve(b, j);
for(j = 127730; j < 127740; j++) _solve(b, j);
for(j = 128570; j < 128580; j++) _solve(b, j);
for(j = 129410; j < 129420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 130250; j < 130260; j++) _solve(b, j);
for(j = 131090; j < 131100; j++) _solve(b, j);
for(j = 131930; j < 131940; j++) _solve(b, j);
for(j = 132770; j < 132780; j++) _solve(b, j);
for(j = 133610; j < 133620; j++) _solve(b, j);
for(j = 134450; j < 134460; j++) _solve(b, j);
for(j = 135290; j < 135300; j++) _solve(b, j);
for(j = 136130; j < 136140; j++) _solve(b, j);
for(j = 136970; j < 136980; j++) _solve(b, j);
for(j = 137810; j < 137820; j++) _solve(b, j);
for(j = 138650; j < 138660; j++) _solve(b, j);
for(j = 139490; j < 139500; j++) _solve(b, j);
for(j = 140330; j < 140340; j++) _solve(b, j);
for(j = 141170; j < 141180; j++) _solve(b, j);
for(j = 142010; j < 142020; j++) _solve(b, j);
for(j = 142850; j < 142860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 143690; j < 143700; j++) _solve(b, j);
for(j = 144530; j < 144540; j++) _solve(b, j);
for(j = 145370; j < 145380; j++) _solve(b, j);
for(j = 146210; j < 146220; j++) _solve(b, j);
for(j = 147050; j < 147060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 77340; j < 77350; j++) _solve(b, j);
for(j = 78180; j < 78190; j++) _solve(b, j);
for(j = 79020; j < 79030; j++) _solve(b, j);
for(j = 79860; j < 79870; j++) _solve(b, j);
for(j = 80700; j < 80710; j++) _solve(b, j);
for(j = 81540; j < 81550; j++) _solve(b, j);
for(j = 82380; j < 82390; j++) _solve(b, j);
for(j = 83220; j < 83230; j++) _solve(b, j);
for(j = 84060; j < 84070; j++) _solve(b, j);
for(j = 84900; j < 84910; j++) _solve(b, j);
for(j = 85740; j < 85750; j++) _solve(b, j);
for(j = 86580; j < 86590; j++) _solve(b, j);
for(j = 87420; j < 87430; j++) _solve(b, j);
for(j = 88260; j < 88270; j++) _solve(b, j);
for(j = 89100; j < 89110; j++) _solve(b, j);
for(j = 89940; j < 89950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 90780; j < 90790; j++) _solve(b, j);
for(j = 91620; j < 91630; j++) _solve(b, j);
for(j = 92460; j < 92470; j++) _solve(b, j);
for(j = 93300; j < 93310; j++) _solve(b, j);
for(j = 94140; j < 94150; j++) _solve(b, j);
for(j = 94980; j < 94990; j++) _solve(b, j);
for(j = 95820; j < 95830; j++) _solve(b, j);
for(j = 96660; j < 96670; j++) _solve(b, j);
for(j = 97500; j < 97510; j++) _solve(b, j);
for(j = 98340; j < 98350; j++) _solve(b, j);
for(j = 99180; j < 99190; j++) _solve(b, j);
for(j = 100020; j < 100030; j++) _solve(b, j);
for(j = 100860; j < 100870; j++) _solve(b, j);
for(j = 101700; j < 101710; j++) _solve(b, j);
for(j = 102540; j < 102550; j++) _solve(b, j);
for(j = 103380; j < 103390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 104220; j < 104230; j++) _solve(b, j);
for(j = 105060; j < 105070; j++) _solve(b, j);
for(j = 105900; j < 105910; j++) _solve(b, j);
for(j = 106740; j < 106750; j++) _solve(b, j);
for(j = 107580; j < 107590; j++) _solve(b, j);
for(j = 108420; j < 108430; j++) _solve(b, j);
for(j = 109260; j < 109270; j++) _solve(b, j);
for(j = 110100; j < 110110; j++) _solve(b, j);
for(j = 110940; j < 110950; j++) _solve(b, j);
for(j = 111780; j < 111790; j++) _solve(b, j);
for(j = 112620; j < 112630; j++) _solve(b, j);
for(j = 113460; j < 113470; j++) _solve(b, j);
for(j = 114300; j < 114310; j++) _solve(b, j);
for(j = 115140; j < 115150; j++) _solve(b, j);
for(j = 115980; j < 115990; j++) _solve(b, j);
for(j = 116820; j < 116830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 117660; j < 117670; j++) _solve(b, j);
for(j = 118500; j < 118510; j++) _solve(b, j);
for(j = 119340; j < 119350; j++) _solve(b, j);
for(j = 120180; j < 120190; j++) _solve(b, j);
for(j = 121020; j < 121030; j++) _solve(b, j);
for(j = 121860; j < 121870; j++) _solve(b, j);
for(j = 122700; j < 122710; j++) _solve(b, j);
for(j = 123540; j < 123550; j++) _solve(b, j);
for(j = 124380; j < 124390; j++) _solve(b, j);
for(j = 125220; j < 125230; j++) _solve(b, j);
for(j = 126060; j < 126070; j++) _solve(b, j);
for(j = 126900; j < 126910; j++) _solve(b, j);
for(j = 127740; j < 127750; j++) _solve(b, j);
for(j = 128580; j < 128590; j++) _solve(b, j);
for(j = 129420; j < 129430; j++) _solve(b, j);
for(j = 130260; j < 130270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 131100; j < 131110; j++) _solve(b, j);
for(j = 131940; j < 131950; j++) _solve(b, j);
for(j = 132780; j < 132790; j++) _solve(b, j);
for(j = 133620; j < 133630; j++) _solve(b, j);
for(j = 134460; j < 134470; j++) _solve(b, j);
for(j = 135300; j < 135310; j++) _solve(b, j);
for(j = 136140; j < 136150; j++) _solve(b, j);
for(j = 136980; j < 136990; j++) _solve(b, j);
for(j = 137820; j < 137830; j++) _solve(b, j);
for(j = 138660; j < 138670; j++) _solve(b, j);
for(j = 139500; j < 139510; j++) _solve(b, j);
for(j = 140340; j < 140350; j++) _solve(b, j);
for(j = 141180; j < 141190; j++) _solve(b, j);
for(j = 142020; j < 142030; j++) _solve(b, j);
for(j = 142860; j < 142870; j++) _solve(b, j);
for(j = 143700; j < 143710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 144540; j < 144550; j++) _solve(b, j);
for(j = 145380; j < 145390; j++) _solve(b, j);
for(j = 146220; j < 146230; j++) _solve(b, j);
for(j = 147060; j < 147070; j++) _solve(b, j);
for(j = 147900; j < 147910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 78190; j < 78200; j++) _solve(b, j);
for(j = 79030; j < 79040; j++) _solve(b, j);
for(j = 79870; j < 79880; j++) _solve(b, j);
for(j = 80710; j < 80720; j++) _solve(b, j);
for(j = 81550; j < 81560; j++) _solve(b, j);
for(j = 82390; j < 82400; j++) _solve(b, j);
for(j = 83230; j < 83240; j++) _solve(b, j);
for(j = 84070; j < 84080; j++) _solve(b, j);
for(j = 84910; j < 84920; j++) _solve(b, j);
for(j = 85750; j < 85760; j++) _solve(b, j);
for(j = 86590; j < 86600; j++) _solve(b, j);
for(j = 87430; j < 87440; j++) _solve(b, j);
for(j = 88270; j < 88280; j++) _solve(b, j);
for(j = 89110; j < 89120; j++) _solve(b, j);
for(j = 89950; j < 89960; j++) _solve(b, j);
for(j = 90790; j < 90800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 91630; j < 91640; j++) _solve(b, j);
for(j = 92470; j < 92480; j++) _solve(b, j);
for(j = 93310; j < 93320; j++) _solve(b, j);
for(j = 94150; j < 94160; j++) _solve(b, j);
for(j = 94990; j < 95000; j++) _solve(b, j);
for(j = 95830; j < 95840; j++) _solve(b, j);
for(j = 96670; j < 96680; j++) _solve(b, j);
for(j = 97510; j < 97520; j++) _solve(b, j);
for(j = 98350; j < 98360; j++) _solve(b, j);
for(j = 99190; j < 99200; j++) _solve(b, j);
for(j = 100030; j < 100040; j++) _solve(b, j);
for(j = 100870; j < 100880; j++) _solve(b, j);
for(j = 101710; j < 101720; j++) _solve(b, j);
for(j = 102550; j < 102560; j++) _solve(b, j);
for(j = 103390; j < 103400; j++) _solve(b, j);
for(j = 104230; j < 104240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 105070; j < 105080; j++) _solve(b, j);
for(j = 105910; j < 105920; j++) _solve(b, j);
for(j = 106750; j < 106760; j++) _solve(b, j);
for(j = 107590; j < 107600; j++) _solve(b, j);
for(j = 108430; j < 108440; j++) _solve(b, j);
for(j = 109270; j < 109280; j++) _solve(b, j);
for(j = 110110; j < 110120; j++) _solve(b, j);
for(j = 110950; j < 110960; j++) _solve(b, j);
for(j = 111790; j < 111800; j++) _solve(b, j);
for(j = 112630; j < 112640; j++) _solve(b, j);
for(j = 113470; j < 113480; j++) _solve(b, j);
for(j = 114310; j < 114320; j++) _solve(b, j);
for(j = 115150; j < 115160; j++) _solve(b, j);
for(j = 115990; j < 116000; j++) _solve(b, j);
for(j = 116830; j < 116840; j++) _solve(b, j);
for(j = 117670; j < 117680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 118510; j < 118520; j++) _solve(b, j);
for(j = 119350; j < 119360; j++) _solve(b, j);
for(j = 120190; j < 120200; j++) _solve(b, j);
for(j = 121030; j < 121040; j++) _solve(b, j);
for(j = 121870; j < 121880; j++) _solve(b, j);
for(j = 122710; j < 122720; j++) _solve(b, j);
for(j = 123550; j < 123560; j++) _solve(b, j);
for(j = 124390; j < 124400; j++) _solve(b, j);
for(j = 125230; j < 125240; j++) _solve(b, j);
for(j = 126070; j < 126080; j++) _solve(b, j);
for(j = 126910; j < 126920; j++) _solve(b, j);
for(j = 127750; j < 127760; j++) _solve(b, j);
for(j = 128590; j < 128600; j++) _solve(b, j);
for(j = 129430; j < 129440; j++) _solve(b, j);
for(j = 130270; j < 130280; j++) _solve(b, j);
for(j = 131110; j < 131120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 131950; j < 131960; j++) _solve(b, j);
for(j = 132790; j < 132800; j++) _solve(b, j);
for(j = 133630; j < 133640; j++) _solve(b, j);
for(j = 134470; j < 134480; j++) _solve(b, j);
for(j = 135310; j < 135320; j++) _solve(b, j);
for(j = 136150; j < 136160; j++) _solve(b, j);
for(j = 136990; j < 137000; j++) _solve(b, j);
for(j = 137830; j < 137840; j++) _solve(b, j);
for(j = 138670; j < 138680; j++) _solve(b, j);
for(j = 139510; j < 139520; j++) _solve(b, j);
for(j = 140350; j < 140360; j++) _solve(b, j);
for(j = 141190; j < 141200; j++) _solve(b, j);
for(j = 142030; j < 142040; j++) _solve(b, j);
for(j = 142870; j < 142880; j++) _solve(b, j);
for(j = 143710; j < 143720; j++) _solve(b, j);
for(j = 144550; j < 144560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 145390; j < 145400; j++) _solve(b, j);
for(j = 146230; j < 146240; j++) _solve(b, j);
for(j = 147070; j < 147080; j++) _solve(b, j);
for(j = 147910; j < 147920; j++) _solve(b, j);
for(j = 148750; j < 148760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 79040; j < 79050; j++) _solve(b, j);
for(j = 79880; j < 79890; j++) _solve(b, j);
for(j = 80720; j < 80730; j++) _solve(b, j);
for(j = 81560; j < 81570; j++) _solve(b, j);
for(j = 82400; j < 82410; j++) _solve(b, j);
for(j = 83240; j < 83250; j++) _solve(b, j);
for(j = 84080; j < 84090; j++) _solve(b, j);
for(j = 84920; j < 84930; j++) _solve(b, j);
for(j = 85760; j < 85770; j++) _solve(b, j);
for(j = 86600; j < 86610; j++) _solve(b, j);
for(j = 87440; j < 87450; j++) _solve(b, j);
for(j = 88280; j < 88290; j++) _solve(b, j);
for(j = 89120; j < 89130; j++) _solve(b, j);
for(j = 89960; j < 89970; j++) _solve(b, j);
for(j = 90800; j < 90810; j++) _solve(b, j);
for(j = 91640; j < 91650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 92480; j < 92490; j++) _solve(b, j);
for(j = 93320; j < 93330; j++) _solve(b, j);
for(j = 94160; j < 94170; j++) _solve(b, j);
for(j = 95000; j < 95010; j++) _solve(b, j);
for(j = 95840; j < 95850; j++) _solve(b, j);
for(j = 96680; j < 96690; j++) _solve(b, j);
for(j = 97520; j < 97530; j++) _solve(b, j);
for(j = 98360; j < 98370; j++) _solve(b, j);
for(j = 99200; j < 99210; j++) _solve(b, j);
for(j = 100040; j < 100050; j++) _solve(b, j);
for(j = 100880; j < 100890; j++) _solve(b, j);
for(j = 101720; j < 101730; j++) _solve(b, j);
for(j = 102560; j < 102570; j++) _solve(b, j);
for(j = 103400; j < 103410; j++) _solve(b, j);
for(j = 104240; j < 104250; j++) _solve(b, j);
for(j = 105080; j < 105090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 105920; j < 105930; j++) _solve(b, j);
for(j = 106760; j < 106770; j++) _solve(b, j);
for(j = 107600; j < 107610; j++) _solve(b, j);
for(j = 108440; j < 108450; j++) _solve(b, j);
for(j = 109280; j < 109290; j++) _solve(b, j);
for(j = 110120; j < 110130; j++) _solve(b, j);
for(j = 110960; j < 110970; j++) _solve(b, j);
for(j = 111800; j < 111810; j++) _solve(b, j);
for(j = 112640; j < 112650; j++) _solve(b, j);
for(j = 113480; j < 113490; j++) _solve(b, j);
for(j = 114320; j < 114330; j++) _solve(b, j);
for(j = 115160; j < 115170; j++) _solve(b, j);
for(j = 116000; j < 116010; j++) _solve(b, j);
for(j = 116840; j < 116850; j++) _solve(b, j);
for(j = 117680; j < 117690; j++) _solve(b, j);
for(j = 118520; j < 118530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 119360; j < 119370; j++) _solve(b, j);
for(j = 120200; j < 120210; j++) _solve(b, j);
for(j = 121040; j < 121050; j++) _solve(b, j);
for(j = 121880; j < 121890; j++) _solve(b, j);
for(j = 122720; j < 122730; j++) _solve(b, j);
for(j = 123560; j < 123570; j++) _solve(b, j);
for(j = 124400; j < 124410; j++) _solve(b, j);
for(j = 125240; j < 125250; j++) _solve(b, j);
for(j = 126080; j < 126090; j++) _solve(b, j);
for(j = 126920; j < 126930; j++) _solve(b, j);
for(j = 127760; j < 127770; j++) _solve(b, j);
for(j = 128600; j < 128610; j++) _solve(b, j);
for(j = 129440; j < 129450; j++) _solve(b, j);
for(j = 130280; j < 130290; j++) _solve(b, j);
for(j = 131120; j < 131130; j++) _solve(b, j);
for(j = 131960; j < 131970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 132800; j < 132810; j++) _solve(b, j);
for(j = 133640; j < 133650; j++) _solve(b, j);
for(j = 134480; j < 134490; j++) _solve(b, j);
for(j = 135320; j < 135330; j++) _solve(b, j);
for(j = 136160; j < 136170; j++) _solve(b, j);
for(j = 137000; j < 137010; j++) _solve(b, j);
for(j = 137840; j < 137850; j++) _solve(b, j);
for(j = 138680; j < 138690; j++) _solve(b, j);
for(j = 139520; j < 139530; j++) _solve(b, j);
for(j = 140360; j < 140370; j++) _solve(b, j);
for(j = 141200; j < 141210; j++) _solve(b, j);
for(j = 142040; j < 142050; j++) _solve(b, j);
for(j = 142880; j < 142890; j++) _solve(b, j);
for(j = 143720; j < 143730; j++) _solve(b, j);
for(j = 144560; j < 144570; j++) _solve(b, j);
for(j = 145400; j < 145410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 146240; j < 146250; j++) _solve(b, j);
for(j = 147080; j < 147090; j++) _solve(b, j);
for(j = 147920; j < 147930; j++) _solve(b, j);
for(j = 148760; j < 148770; j++) _solve(b, j);
for(j = 149600; j < 149610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 79890; j < 79900; j++) _solve(b, j);
for(j = 80730; j < 80740; j++) _solve(b, j);
for(j = 81570; j < 81580; j++) _solve(b, j);
for(j = 82410; j < 82420; j++) _solve(b, j);
for(j = 83250; j < 83260; j++) _solve(b, j);
for(j = 84090; j < 84100; j++) _solve(b, j);
for(j = 84930; j < 84940; j++) _solve(b, j);
for(j = 85770; j < 85780; j++) _solve(b, j);
for(j = 86610; j < 86620; j++) _solve(b, j);
for(j = 87450; j < 87460; j++) _solve(b, j);
for(j = 88290; j < 88300; j++) _solve(b, j);
for(j = 89130; j < 89140; j++) _solve(b, j);
for(j = 89970; j < 89980; j++) _solve(b, j);
for(j = 90810; j < 90820; j++) _solve(b, j);
for(j = 91650; j < 91660; j++) _solve(b, j);
for(j = 92490; j < 92500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 93330; j < 93340; j++) _solve(b, j);
for(j = 94170; j < 94180; j++) _solve(b, j);
for(j = 95010; j < 95020; j++) _solve(b, j);
for(j = 95850; j < 95860; j++) _solve(b, j);
for(j = 96690; j < 96700; j++) _solve(b, j);
for(j = 97530; j < 97540; j++) _solve(b, j);
for(j = 98370; j < 98380; j++) _solve(b, j);
for(j = 99210; j < 99220; j++) _solve(b, j);
for(j = 100050; j < 100060; j++) _solve(b, j);
for(j = 100890; j < 100900; j++) _solve(b, j);
for(j = 101730; j < 101740; j++) _solve(b, j);
for(j = 102570; j < 102580; j++) _solve(b, j);
for(j = 103410; j < 103420; j++) _solve(b, j);
for(j = 104250; j < 104260; j++) _solve(b, j);
for(j = 105090; j < 105100; j++) _solve(b, j);
for(j = 105930; j < 105940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 106770; j < 106780; j++) _solve(b, j);
for(j = 107610; j < 107620; j++) _solve(b, j);
for(j = 108450; j < 108460; j++) _solve(b, j);
for(j = 109290; j < 109300; j++) _solve(b, j);
for(j = 110130; j < 110140; j++) _solve(b, j);
for(j = 110970; j < 110980; j++) _solve(b, j);
for(j = 111810; j < 111820; j++) _solve(b, j);
for(j = 112650; j < 112660; j++) _solve(b, j);
for(j = 113490; j < 113500; j++) _solve(b, j);
for(j = 114330; j < 114340; j++) _solve(b, j);
for(j = 115170; j < 115180; j++) _solve(b, j);
for(j = 116010; j < 116020; j++) _solve(b, j);
for(j = 116850; j < 116860; j++) _solve(b, j);
for(j = 117690; j < 117700; j++) _solve(b, j);
for(j = 118530; j < 118540; j++) _solve(b, j);
for(j = 119370; j < 119380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 120210; j < 120220; j++) _solve(b, j);
for(j = 121050; j < 121060; j++) _solve(b, j);
for(j = 121890; j < 121900; j++) _solve(b, j);
for(j = 122730; j < 122740; j++) _solve(b, j);
for(j = 123570; j < 123580; j++) _solve(b, j);
for(j = 124410; j < 124420; j++) _solve(b, j);
for(j = 125250; j < 125260; j++) _solve(b, j);
for(j = 126090; j < 126100; j++) _solve(b, j);
for(j = 126930; j < 126940; j++) _solve(b, j);
for(j = 127770; j < 127780; j++) _solve(b, j);
for(j = 128610; j < 128620; j++) _solve(b, j);
for(j = 129450; j < 129460; j++) _solve(b, j);
for(j = 130290; j < 130300; j++) _solve(b, j);
for(j = 131130; j < 131140; j++) _solve(b, j);
for(j = 131970; j < 131980; j++) _solve(b, j);
for(j = 132810; j < 132820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 133650; j < 133660; j++) _solve(b, j);
for(j = 134490; j < 134500; j++) _solve(b, j);
for(j = 135330; j < 135340; j++) _solve(b, j);
for(j = 136170; j < 136180; j++) _solve(b, j);
for(j = 137010; j < 137020; j++) _solve(b, j);
for(j = 137850; j < 137860; j++) _solve(b, j);
for(j = 138690; j < 138700; j++) _solve(b, j);
for(j = 139530; j < 139540; j++) _solve(b, j);
for(j = 140370; j < 140380; j++) _solve(b, j);
for(j = 141210; j < 141220; j++) _solve(b, j);
for(j = 142050; j < 142060; j++) _solve(b, j);
for(j = 142890; j < 142900; j++) _solve(b, j);
for(j = 143730; j < 143740; j++) _solve(b, j);
for(j = 144570; j < 144580; j++) _solve(b, j);
for(j = 145410; j < 145420; j++) _solve(b, j);
for(j = 146250; j < 146260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 147090; j < 147100; j++) _solve(b, j);
for(j = 147930; j < 147940; j++) _solve(b, j);
for(j = 148770; j < 148780; j++) _solve(b, j);
for(j = 149610; j < 149620; j++) _solve(b, j);
for(j = 150450; j < 150460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 80740; j < 80750; j++) _solve(b, j);
for(j = 81580; j < 81590; j++) _solve(b, j);
for(j = 82420; j < 82430; j++) _solve(b, j);
for(j = 83260; j < 83270; j++) _solve(b, j);
for(j = 84100; j < 84110; j++) _solve(b, j);
for(j = 84940; j < 84950; j++) _solve(b, j);
for(j = 85780; j < 85790; j++) _solve(b, j);
for(j = 86620; j < 86630; j++) _solve(b, j);
for(j = 87460; j < 87470; j++) _solve(b, j);
for(j = 88300; j < 88310; j++) _solve(b, j);
for(j = 89140; j < 89150; j++) _solve(b, j);
for(j = 89980; j < 89990; j++) _solve(b, j);
for(j = 90820; j < 90830; j++) _solve(b, j);
for(j = 91660; j < 91670; j++) _solve(b, j);
for(j = 92500; j < 92510; j++) _solve(b, j);
for(j = 93340; j < 93350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 94180; j < 94190; j++) _solve(b, j);
for(j = 95020; j < 95030; j++) _solve(b, j);
for(j = 95860; j < 95870; j++) _solve(b, j);
for(j = 96700; j < 96710; j++) _solve(b, j);
for(j = 97540; j < 97550; j++) _solve(b, j);
for(j = 98380; j < 98390; j++) _solve(b, j);
for(j = 99220; j < 99230; j++) _solve(b, j);
for(j = 100060; j < 100070; j++) _solve(b, j);
for(j = 100900; j < 100910; j++) _solve(b, j);
for(j = 101740; j < 101750; j++) _solve(b, j);
for(j = 102580; j < 102590; j++) _solve(b, j);
for(j = 103420; j < 103430; j++) _solve(b, j);
for(j = 104260; j < 104270; j++) _solve(b, j);
for(j = 105100; j < 105110; j++) _solve(b, j);
for(j = 105940; j < 105950; j++) _solve(b, j);
for(j = 106780; j < 106790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 107620; j < 107630; j++) _solve(b, j);
for(j = 108460; j < 108470; j++) _solve(b, j);
for(j = 109300; j < 109310; j++) _solve(b, j);
for(j = 110140; j < 110150; j++) _solve(b, j);
for(j = 110980; j < 110990; j++) _solve(b, j);
for(j = 111820; j < 111830; j++) _solve(b, j);
for(j = 112660; j < 112670; j++) _solve(b, j);
for(j = 113500; j < 113510; j++) _solve(b, j);
for(j = 114340; j < 114350; j++) _solve(b, j);
for(j = 115180; j < 115190; j++) _solve(b, j);
for(j = 116020; j < 116030; j++) _solve(b, j);
for(j = 116860; j < 116870; j++) _solve(b, j);
for(j = 117700; j < 117710; j++) _solve(b, j);
for(j = 118540; j < 118550; j++) _solve(b, j);
for(j = 119380; j < 119390; j++) _solve(b, j);
for(j = 120220; j < 120230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 121060; j < 121070; j++) _solve(b, j);
for(j = 121900; j < 121910; j++) _solve(b, j);
for(j = 122740; j < 122750; j++) _solve(b, j);
for(j = 123580; j < 123590; j++) _solve(b, j);
for(j = 124420; j < 124430; j++) _solve(b, j);
for(j = 125260; j < 125270; j++) _solve(b, j);
for(j = 126100; j < 126110; j++) _solve(b, j);
for(j = 126940; j < 126950; j++) _solve(b, j);
for(j = 127780; j < 127790; j++) _solve(b, j);
for(j = 128620; j < 128630; j++) _solve(b, j);
for(j = 129460; j < 129470; j++) _solve(b, j);
for(j = 130300; j < 130310; j++) _solve(b, j);
for(j = 131140; j < 131150; j++) _solve(b, j);
for(j = 131980; j < 131990; j++) _solve(b, j);
for(j = 132820; j < 132830; j++) _solve(b, j);
for(j = 133660; j < 133670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 134500; j < 134510; j++) _solve(b, j);
for(j = 135340; j < 135350; j++) _solve(b, j);
for(j = 136180; j < 136190; j++) _solve(b, j);
for(j = 137020; j < 137030; j++) _solve(b, j);
for(j = 137860; j < 137870; j++) _solve(b, j);
for(j = 138700; j < 138710; j++) _solve(b, j);
for(j = 139540; j < 139550; j++) _solve(b, j);
for(j = 140380; j < 140390; j++) _solve(b, j);
for(j = 141220; j < 141230; j++) _solve(b, j);
for(j = 142060; j < 142070; j++) _solve(b, j);
for(j = 142900; j < 142910; j++) _solve(b, j);
for(j = 143740; j < 143750; j++) _solve(b, j);
for(j = 144580; j < 144590; j++) _solve(b, j);
for(j = 145420; j < 145430; j++) _solve(b, j);
for(j = 146260; j < 146270; j++) _solve(b, j);
for(j = 147100; j < 147110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 147940; j < 147950; j++) _solve(b, j);
for(j = 148780; j < 148790; j++) _solve(b, j);
for(j = 149620; j < 149630; j++) _solve(b, j);
for(j = 150460; j < 150470; j++) _solve(b, j);
for(j = 151300; j < 151310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 81590; j < 81600; j++) _solve(b, j);
for(j = 82430; j < 82440; j++) _solve(b, j);
for(j = 83270; j < 83280; j++) _solve(b, j);
for(j = 84110; j < 84120; j++) _solve(b, j);
for(j = 84950; j < 84960; j++) _solve(b, j);
for(j = 85790; j < 85800; j++) _solve(b, j);
for(j = 86630; j < 86640; j++) _solve(b, j);
for(j = 87470; j < 87480; j++) _solve(b, j);
for(j = 88310; j < 88320; j++) _solve(b, j);
for(j = 89150; j < 89160; j++) _solve(b, j);
for(j = 89990; j < 90000; j++) _solve(b, j);
for(j = 90830; j < 90840; j++) _solve(b, j);
for(j = 91670; j < 91680; j++) _solve(b, j);
for(j = 92510; j < 92520; j++) _solve(b, j);
for(j = 93350; j < 93360; j++) _solve(b, j);
for(j = 94190; j < 94200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 95030; j < 95040; j++) _solve(b, j);
for(j = 95870; j < 95880; j++) _solve(b, j);
for(j = 96710; j < 96720; j++) _solve(b, j);
for(j = 97550; j < 97560; j++) _solve(b, j);
for(j = 98390; j < 98400; j++) _solve(b, j);
for(j = 99230; j < 99240; j++) _solve(b, j);
for(j = 100070; j < 100080; j++) _solve(b, j);
for(j = 100910; j < 100920; j++) _solve(b, j);
for(j = 101750; j < 101760; j++) _solve(b, j);
for(j = 102590; j < 102600; j++) _solve(b, j);
for(j = 103430; j < 103440; j++) _solve(b, j);
for(j = 104270; j < 104280; j++) _solve(b, j);
for(j = 105110; j < 105120; j++) _solve(b, j);
for(j = 105950; j < 105960; j++) _solve(b, j);
for(j = 106790; j < 106800; j++) _solve(b, j);
for(j = 107630; j < 107640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 108470; j < 108480; j++) _solve(b, j);
for(j = 109310; j < 109320; j++) _solve(b, j);
for(j = 110150; j < 110160; j++) _solve(b, j);
for(j = 110990; j < 111000; j++) _solve(b, j);
for(j = 111830; j < 111840; j++) _solve(b, j);
for(j = 112670; j < 112680; j++) _solve(b, j);
for(j = 113510; j < 113520; j++) _solve(b, j);
for(j = 114350; j < 114360; j++) _solve(b, j);
for(j = 115190; j < 115200; j++) _solve(b, j);
for(j = 116030; j < 116040; j++) _solve(b, j);
for(j = 116870; j < 116880; j++) _solve(b, j);
for(j = 117710; j < 117720; j++) _solve(b, j);
for(j = 118550; j < 118560; j++) _solve(b, j);
for(j = 119390; j < 119400; j++) _solve(b, j);
for(j = 120230; j < 120240; j++) _solve(b, j);
for(j = 121070; j < 121080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 121910; j < 121920; j++) _solve(b, j);
for(j = 122750; j < 122760; j++) _solve(b, j);
for(j = 123590; j < 123600; j++) _solve(b, j);
for(j = 124430; j < 124440; j++) _solve(b, j);
for(j = 125270; j < 125280; j++) _solve(b, j);
for(j = 126110; j < 126120; j++) _solve(b, j);
for(j = 126950; j < 126960; j++) _solve(b, j);
for(j = 127790; j < 127800; j++) _solve(b, j);
for(j = 128630; j < 128640; j++) _solve(b, j);
for(j = 129470; j < 129480; j++) _solve(b, j);
for(j = 130310; j < 130320; j++) _solve(b, j);
for(j = 131150; j < 131160; j++) _solve(b, j);
for(j = 131990; j < 132000; j++) _solve(b, j);
for(j = 132830; j < 132840; j++) _solve(b, j);
for(j = 133670; j < 133680; j++) _solve(b, j);
for(j = 134510; j < 134520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 135350; j < 135360; j++) _solve(b, j);
for(j = 136190; j < 136200; j++) _solve(b, j);
for(j = 137030; j < 137040; j++) _solve(b, j);
for(j = 137870; j < 137880; j++) _solve(b, j);
for(j = 138710; j < 138720; j++) _solve(b, j);
for(j = 139550; j < 139560; j++) _solve(b, j);
for(j = 140390; j < 140400; j++) _solve(b, j);
for(j = 141230; j < 141240; j++) _solve(b, j);
for(j = 142070; j < 142080; j++) _solve(b, j);
for(j = 142910; j < 142920; j++) _solve(b, j);
for(j = 143750; j < 143760; j++) _solve(b, j);
for(j = 144590; j < 144600; j++) _solve(b, j);
for(j = 145430; j < 145440; j++) _solve(b, j);
for(j = 146270; j < 146280; j++) _solve(b, j);
for(j = 147110; j < 147120; j++) _solve(b, j);
for(j = 147950; j < 147960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 148790; j < 148800; j++) _solve(b, j);
for(j = 149630; j < 149640; j++) _solve(b, j);
for(j = 150470; j < 150480; j++) _solve(b, j);
for(j = 151310; j < 151320; j++) _solve(b, j);
for(j = 152150; j < 152160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 82440; j < 82450; j++) _solve(b, j);
for(j = 83280; j < 83290; j++) _solve(b, j);
for(j = 84120; j < 84130; j++) _solve(b, j);
for(j = 84960; j < 84970; j++) _solve(b, j);
for(j = 85800; j < 85810; j++) _solve(b, j);
for(j = 86640; j < 86650; j++) _solve(b, j);
for(j = 87480; j < 87490; j++) _solve(b, j);
for(j = 88320; j < 88330; j++) _solve(b, j);
for(j = 89160; j < 89170; j++) _solve(b, j);
for(j = 90000; j < 90010; j++) _solve(b, j);
for(j = 90840; j < 90850; j++) _solve(b, j);
for(j = 91680; j < 91690; j++) _solve(b, j);
for(j = 92520; j < 92530; j++) _solve(b, j);
for(j = 93360; j < 93370; j++) _solve(b, j);
for(j = 94200; j < 94210; j++) _solve(b, j);
for(j = 95040; j < 95050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 95880; j < 95890; j++) _solve(b, j);
for(j = 96720; j < 96730; j++) _solve(b, j);
for(j = 97560; j < 97570; j++) _solve(b, j);
for(j = 98400; j < 98410; j++) _solve(b, j);
for(j = 99240; j < 99250; j++) _solve(b, j);
for(j = 100080; j < 100090; j++) _solve(b, j);
for(j = 100920; j < 100930; j++) _solve(b, j);
for(j = 101760; j < 101770; j++) _solve(b, j);
for(j = 102600; j < 102610; j++) _solve(b, j);
for(j = 103440; j < 103450; j++) _solve(b, j);
for(j = 104280; j < 104290; j++) _solve(b, j);
for(j = 105120; j < 105130; j++) _solve(b, j);
for(j = 105960; j < 105970; j++) _solve(b, j);
for(j = 106800; j < 106810; j++) _solve(b, j);
for(j = 107640; j < 107650; j++) _solve(b, j);
for(j = 108480; j < 108490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 109320; j < 109330; j++) _solve(b, j);
for(j = 110160; j < 110170; j++) _solve(b, j);
for(j = 111000; j < 111010; j++) _solve(b, j);
for(j = 111840; j < 111850; j++) _solve(b, j);
for(j = 112680; j < 112690; j++) _solve(b, j);
for(j = 113520; j < 113530; j++) _solve(b, j);
for(j = 114360; j < 114370; j++) _solve(b, j);
for(j = 115200; j < 115210; j++) _solve(b, j);
for(j = 116040; j < 116050; j++) _solve(b, j);
for(j = 116880; j < 116890; j++) _solve(b, j);
for(j = 117720; j < 117730; j++) _solve(b, j);
for(j = 118560; j < 118570; j++) _solve(b, j);
for(j = 119400; j < 119410; j++) _solve(b, j);
for(j = 120240; j < 120250; j++) _solve(b, j);
for(j = 121080; j < 121090; j++) _solve(b, j);
for(j = 121920; j < 121930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 122760; j < 122770; j++) _solve(b, j);
for(j = 123600; j < 123610; j++) _solve(b, j);
for(j = 124440; j < 124450; j++) _solve(b, j);
for(j = 125280; j < 125290; j++) _solve(b, j);
for(j = 126120; j < 126130; j++) _solve(b, j);
for(j = 126960; j < 126970; j++) _solve(b, j);
for(j = 127800; j < 127810; j++) _solve(b, j);
for(j = 128640; j < 128650; j++) _solve(b, j);
for(j = 129480; j < 129490; j++) _solve(b, j);
for(j = 130320; j < 130330; j++) _solve(b, j);
for(j = 131160; j < 131170; j++) _solve(b, j);
for(j = 132000; j < 132010; j++) _solve(b, j);
for(j = 132840; j < 132850; j++) _solve(b, j);
for(j = 133680; j < 133690; j++) _solve(b, j);
for(j = 134520; j < 134530; j++) _solve(b, j);
for(j = 135360; j < 135370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 136200; j < 136210; j++) _solve(b, j);
for(j = 137040; j < 137050; j++) _solve(b, j);
for(j = 137880; j < 137890; j++) _solve(b, j);
for(j = 138720; j < 138730; j++) _solve(b, j);
for(j = 139560; j < 139570; j++) _solve(b, j);
for(j = 140400; j < 140410; j++) _solve(b, j);
for(j = 141240; j < 141250; j++) _solve(b, j);
for(j = 142080; j < 142090; j++) _solve(b, j);
for(j = 142920; j < 142930; j++) _solve(b, j);
for(j = 143760; j < 143770; j++) _solve(b, j);
for(j = 144600; j < 144610; j++) _solve(b, j);
for(j = 145440; j < 145450; j++) _solve(b, j);
for(j = 146280; j < 146290; j++) _solve(b, j);
for(j = 147120; j < 147130; j++) _solve(b, j);
for(j = 147960; j < 147970; j++) _solve(b, j);
for(j = 148800; j < 148810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 149640; j < 149650; j++) _solve(b, j);
for(j = 150480; j < 150490; j++) _solve(b, j);
for(j = 151320; j < 151330; j++) _solve(b, j);
for(j = 152160; j < 152170; j++) _solve(b, j);
for(j = 153000; j < 153010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 83290; j < 83300; j++) _solve(b, j);
for(j = 84130; j < 84140; j++) _solve(b, j);
for(j = 84970; j < 84980; j++) _solve(b, j);
for(j = 85810; j < 85820; j++) _solve(b, j);
for(j = 86650; j < 86660; j++) _solve(b, j);
for(j = 87490; j < 87500; j++) _solve(b, j);
for(j = 88330; j < 88340; j++) _solve(b, j);
for(j = 89170; j < 89180; j++) _solve(b, j);
for(j = 90010; j < 90020; j++) _solve(b, j);
for(j = 90850; j < 90860; j++) _solve(b, j);
for(j = 91690; j < 91700; j++) _solve(b, j);
for(j = 92530; j < 92540; j++) _solve(b, j);
for(j = 93370; j < 93380; j++) _solve(b, j);
for(j = 94210; j < 94220; j++) _solve(b, j);
for(j = 95050; j < 95060; j++) _solve(b, j);
for(j = 95890; j < 95900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 96730; j < 96740; j++) _solve(b, j);
for(j = 97570; j < 97580; j++) _solve(b, j);
for(j = 98410; j < 98420; j++) _solve(b, j);
for(j = 99250; j < 99260; j++) _solve(b, j);
for(j = 100090; j < 100100; j++) _solve(b, j);
for(j = 100930; j < 100940; j++) _solve(b, j);
for(j = 101770; j < 101780; j++) _solve(b, j);
for(j = 102610; j < 102620; j++) _solve(b, j);
for(j = 103450; j < 103460; j++) _solve(b, j);
for(j = 104290; j < 104300; j++) _solve(b, j);
for(j = 105130; j < 105140; j++) _solve(b, j);
for(j = 105970; j < 105980; j++) _solve(b, j);
for(j = 106810; j < 106820; j++) _solve(b, j);
for(j = 107650; j < 107660; j++) _solve(b, j);
for(j = 108490; j < 108500; j++) _solve(b, j);
for(j = 109330; j < 109340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 110170; j < 110180; j++) _solve(b, j);
for(j = 111010; j < 111020; j++) _solve(b, j);
for(j = 111850; j < 111860; j++) _solve(b, j);
for(j = 112690; j < 112700; j++) _solve(b, j);
for(j = 113530; j < 113540; j++) _solve(b, j);
for(j = 114370; j < 114380; j++) _solve(b, j);
for(j = 115210; j < 115220; j++) _solve(b, j);
for(j = 116050; j < 116060; j++) _solve(b, j);
for(j = 116890; j < 116900; j++) _solve(b, j);
for(j = 117730; j < 117740; j++) _solve(b, j);
for(j = 118570; j < 118580; j++) _solve(b, j);
for(j = 119410; j < 119420; j++) _solve(b, j);
for(j = 120250; j < 120260; j++) _solve(b, j);
for(j = 121090; j < 121100; j++) _solve(b, j);
for(j = 121930; j < 121940; j++) _solve(b, j);
for(j = 122770; j < 122780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 123610; j < 123620; j++) _solve(b, j);
for(j = 124450; j < 124460; j++) _solve(b, j);
for(j = 125290; j < 125300; j++) _solve(b, j);
for(j = 126130; j < 126140; j++) _solve(b, j);
for(j = 126970; j < 126980; j++) _solve(b, j);
for(j = 127810; j < 127820; j++) _solve(b, j);
for(j = 128650; j < 128660; j++) _solve(b, j);
for(j = 129490; j < 129500; j++) _solve(b, j);
for(j = 130330; j < 130340; j++) _solve(b, j);
for(j = 131170; j < 131180; j++) _solve(b, j);
for(j = 132010; j < 132020; j++) _solve(b, j);
for(j = 132850; j < 132860; j++) _solve(b, j);
for(j = 133690; j < 133700; j++) _solve(b, j);
for(j = 134530; j < 134540; j++) _solve(b, j);
for(j = 135370; j < 135380; j++) _solve(b, j);
for(j = 136210; j < 136220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 137050; j < 137060; j++) _solve(b, j);
for(j = 137890; j < 137900; j++) _solve(b, j);
for(j = 138730; j < 138740; j++) _solve(b, j);
for(j = 139570; j < 139580; j++) _solve(b, j);
for(j = 140410; j < 140420; j++) _solve(b, j);
for(j = 141250; j < 141260; j++) _solve(b, j);
for(j = 142090; j < 142100; j++) _solve(b, j);
for(j = 142930; j < 142940; j++) _solve(b, j);
for(j = 143770; j < 143780; j++) _solve(b, j);
for(j = 144610; j < 144620; j++) _solve(b, j);
for(j = 145450; j < 145460; j++) _solve(b, j);
for(j = 146290; j < 146300; j++) _solve(b, j);
for(j = 147130; j < 147140; j++) _solve(b, j);
for(j = 147970; j < 147980; j++) _solve(b, j);
for(j = 148810; j < 148820; j++) _solve(b, j);
for(j = 149650; j < 149660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 150490; j < 150500; j++) _solve(b, j);
for(j = 151330; j < 151340; j++) _solve(b, j);
for(j = 152170; j < 152180; j++) _solve(b, j);
for(j = 153010; j < 153020; j++) _solve(b, j);
for(j = 153850; j < 153860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 84140; j < 84150; j++) _solve(b, j);
for(j = 84980; j < 84990; j++) _solve(b, j);
for(j = 85820; j < 85830; j++) _solve(b, j);
for(j = 86660; j < 86670; j++) _solve(b, j);
for(j = 87500; j < 87510; j++) _solve(b, j);
for(j = 88340; j < 88350; j++) _solve(b, j);
for(j = 89180; j < 89190; j++) _solve(b, j);
for(j = 90020; j < 90030; j++) _solve(b, j);
for(j = 90860; j < 90870; j++) _solve(b, j);
for(j = 91700; j < 91710; j++) _solve(b, j);
for(j = 92540; j < 92550; j++) _solve(b, j);
for(j = 93380; j < 93390; j++) _solve(b, j);
for(j = 94220; j < 94230; j++) _solve(b, j);
for(j = 95060; j < 95070; j++) _solve(b, j);
for(j = 95900; j < 95910; j++) _solve(b, j);
for(j = 96740; j < 96750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 97580; j < 97590; j++) _solve(b, j);
for(j = 98420; j < 98430; j++) _solve(b, j);
for(j = 99260; j < 99270; j++) _solve(b, j);
for(j = 100100; j < 100110; j++) _solve(b, j);
for(j = 100940; j < 100950; j++) _solve(b, j);
for(j = 101780; j < 101790; j++) _solve(b, j);
for(j = 102620; j < 102630; j++) _solve(b, j);
for(j = 103460; j < 103470; j++) _solve(b, j);
for(j = 104300; j < 104310; j++) _solve(b, j);
for(j = 105140; j < 105150; j++) _solve(b, j);
for(j = 105980; j < 105990; j++) _solve(b, j);
for(j = 106820; j < 106830; j++) _solve(b, j);
for(j = 107660; j < 107670; j++) _solve(b, j);
for(j = 108500; j < 108510; j++) _solve(b, j);
for(j = 109340; j < 109350; j++) _solve(b, j);
for(j = 110180; j < 110190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 111020; j < 111030; j++) _solve(b, j);
for(j = 111860; j < 111870; j++) _solve(b, j);
for(j = 112700; j < 112710; j++) _solve(b, j);
for(j = 113540; j < 113550; j++) _solve(b, j);
for(j = 114380; j < 114390; j++) _solve(b, j);
for(j = 115220; j < 115230; j++) _solve(b, j);
for(j = 116060; j < 116070; j++) _solve(b, j);
for(j = 116900; j < 116910; j++) _solve(b, j);
for(j = 117740; j < 117750; j++) _solve(b, j);
for(j = 118580; j < 118590; j++) _solve(b, j);
for(j = 119420; j < 119430; j++) _solve(b, j);
for(j = 120260; j < 120270; j++) _solve(b, j);
for(j = 121100; j < 121110; j++) _solve(b, j);
for(j = 121940; j < 121950; j++) _solve(b, j);
for(j = 122780; j < 122790; j++) _solve(b, j);
for(j = 123620; j < 123630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 124460; j < 124470; j++) _solve(b, j);
for(j = 125300; j < 125310; j++) _solve(b, j);
for(j = 126140; j < 126150; j++) _solve(b, j);
for(j = 126980; j < 126990; j++) _solve(b, j);
for(j = 127820; j < 127830; j++) _solve(b, j);
for(j = 128660; j < 128670; j++) _solve(b, j);
for(j = 129500; j < 129510; j++) _solve(b, j);
for(j = 130340; j < 130350; j++) _solve(b, j);
for(j = 131180; j < 131190; j++) _solve(b, j);
for(j = 132020; j < 132030; j++) _solve(b, j);
for(j = 132860; j < 132870; j++) _solve(b, j);
for(j = 133700; j < 133710; j++) _solve(b, j);
for(j = 134540; j < 134550; j++) _solve(b, j);
for(j = 135380; j < 135390; j++) _solve(b, j);
for(j = 136220; j < 136230; j++) _solve(b, j);
for(j = 137060; j < 137070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 137900; j < 137910; j++) _solve(b, j);
for(j = 138740; j < 138750; j++) _solve(b, j);
for(j = 139580; j < 139590; j++) _solve(b, j);
for(j = 140420; j < 140430; j++) _solve(b, j);
for(j = 141260; j < 141270; j++) _solve(b, j);
for(j = 142100; j < 142110; j++) _solve(b, j);
for(j = 142940; j < 142950; j++) _solve(b, j);
for(j = 143780; j < 143790; j++) _solve(b, j);
for(j = 144620; j < 144630; j++) _solve(b, j);
for(j = 145460; j < 145470; j++) _solve(b, j);
for(j = 146300; j < 146310; j++) _solve(b, j);
for(j = 147140; j < 147150; j++) _solve(b, j);
for(j = 147980; j < 147990; j++) _solve(b, j);
for(j = 148820; j < 148830; j++) _solve(b, j);
for(j = 149660; j < 149670; j++) _solve(b, j);
for(j = 150500; j < 150510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 151340; j < 151350; j++) _solve(b, j);
for(j = 152180; j < 152190; j++) _solve(b, j);
for(j = 153020; j < 153030; j++) _solve(b, j);
for(j = 153860; j < 153870; j++) _solve(b, j);
for(j = 154700; j < 154710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 84990; j < 85000; j++) _solve(b, j);
for(j = 85830; j < 85840; j++) _solve(b, j);
for(j = 86670; j < 86680; j++) _solve(b, j);
for(j = 87510; j < 87520; j++) _solve(b, j);
for(j = 88350; j < 88360; j++) _solve(b, j);
for(j = 89190; j < 89200; j++) _solve(b, j);
for(j = 90030; j < 90040; j++) _solve(b, j);
for(j = 90870; j < 90880; j++) _solve(b, j);
for(j = 91710; j < 91720; j++) _solve(b, j);
for(j = 92550; j < 92560; j++) _solve(b, j);
for(j = 93390; j < 93400; j++) _solve(b, j);
for(j = 94230; j < 94240; j++) _solve(b, j);
for(j = 95070; j < 95080; j++) _solve(b, j);
for(j = 95910; j < 95920; j++) _solve(b, j);
for(j = 96750; j < 96760; j++) _solve(b, j);
for(j = 97590; j < 97600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 98430; j < 98440; j++) _solve(b, j);
for(j = 99270; j < 99280; j++) _solve(b, j);
for(j = 100110; j < 100120; j++) _solve(b, j);
for(j = 100950; j < 100960; j++) _solve(b, j);
for(j = 101790; j < 101800; j++) _solve(b, j);
for(j = 102630; j < 102640; j++) _solve(b, j);
for(j = 103470; j < 103480; j++) _solve(b, j);
for(j = 104310; j < 104320; j++) _solve(b, j);
for(j = 105150; j < 105160; j++) _solve(b, j);
for(j = 105990; j < 106000; j++) _solve(b, j);
for(j = 106830; j < 106840; j++) _solve(b, j);
for(j = 107670; j < 107680; j++) _solve(b, j);
for(j = 108510; j < 108520; j++) _solve(b, j);
for(j = 109350; j < 109360; j++) _solve(b, j);
for(j = 110190; j < 110200; j++) _solve(b, j);
for(j = 111030; j < 111040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 111870; j < 111880; j++) _solve(b, j);
for(j = 112710; j < 112720; j++) _solve(b, j);
for(j = 113550; j < 113560; j++) _solve(b, j);
for(j = 114390; j < 114400; j++) _solve(b, j);
for(j = 115230; j < 115240; j++) _solve(b, j);
for(j = 116070; j < 116080; j++) _solve(b, j);
for(j = 116910; j < 116920; j++) _solve(b, j);
for(j = 117750; j < 117760; j++) _solve(b, j);
for(j = 118590; j < 118600; j++) _solve(b, j);
for(j = 119430; j < 119440; j++) _solve(b, j);
for(j = 120270; j < 120280; j++) _solve(b, j);
for(j = 121110; j < 121120; j++) _solve(b, j);
for(j = 121950; j < 121960; j++) _solve(b, j);
for(j = 122790; j < 122800; j++) _solve(b, j);
for(j = 123630; j < 123640; j++) _solve(b, j);
for(j = 124470; j < 124480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 125310; j < 125320; j++) _solve(b, j);
for(j = 126150; j < 126160; j++) _solve(b, j);
for(j = 126990; j < 127000; j++) _solve(b, j);
for(j = 127830; j < 127840; j++) _solve(b, j);
for(j = 128670; j < 128680; j++) _solve(b, j);
for(j = 129510; j < 129520; j++) _solve(b, j);
for(j = 130350; j < 130360; j++) _solve(b, j);
for(j = 131190; j < 131200; j++) _solve(b, j);
for(j = 132030; j < 132040; j++) _solve(b, j);
for(j = 132870; j < 132880; j++) _solve(b, j);
for(j = 133710; j < 133720; j++) _solve(b, j);
for(j = 134550; j < 134560; j++) _solve(b, j);
for(j = 135390; j < 135400; j++) _solve(b, j);
for(j = 136230; j < 136240; j++) _solve(b, j);
for(j = 137070; j < 137080; j++) _solve(b, j);
for(j = 137910; j < 137920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 138750; j < 138760; j++) _solve(b, j);
for(j = 139590; j < 139600; j++) _solve(b, j);
for(j = 140430; j < 140440; j++) _solve(b, j);
for(j = 141270; j < 141280; j++) _solve(b, j);
for(j = 142110; j < 142120; j++) _solve(b, j);
for(j = 142950; j < 142960; j++) _solve(b, j);
for(j = 143790; j < 143800; j++) _solve(b, j);
for(j = 144630; j < 144640; j++) _solve(b, j);
for(j = 145470; j < 145480; j++) _solve(b, j);
for(j = 146310; j < 146320; j++) _solve(b, j);
for(j = 147150; j < 147160; j++) _solve(b, j);
for(j = 147990; j < 148000; j++) _solve(b, j);
for(j = 148830; j < 148840; j++) _solve(b, j);
for(j = 149670; j < 149680; j++) _solve(b, j);
for(j = 150510; j < 150520; j++) _solve(b, j);
for(j = 151350; j < 151360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 152190; j < 152200; j++) _solve(b, j);
for(j = 153030; j < 153040; j++) _solve(b, j);
for(j = 153870; j < 153880; j++) _solve(b, j);
for(j = 154710; j < 154720; j++) _solve(b, j);
for(j = 155550; j < 155560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 85840; j < 85850; j++) _solve(b, j);
for(j = 86680; j < 86690; j++) _solve(b, j);
for(j = 87520; j < 87530; j++) _solve(b, j);
for(j = 88360; j < 88370; j++) _solve(b, j);
for(j = 89200; j < 89210; j++) _solve(b, j);
for(j = 90040; j < 90050; j++) _solve(b, j);
for(j = 90880; j < 90890; j++) _solve(b, j);
for(j = 91720; j < 91730; j++) _solve(b, j);
for(j = 92560; j < 92570; j++) _solve(b, j);
for(j = 93400; j < 93410; j++) _solve(b, j);
for(j = 94240; j < 94250; j++) _solve(b, j);
for(j = 95080; j < 95090; j++) _solve(b, j);
for(j = 95920; j < 95930; j++) _solve(b, j);
for(j = 96760; j < 96770; j++) _solve(b, j);
for(j = 97600; j < 97610; j++) _solve(b, j);
for(j = 98440; j < 98450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 99280; j < 99290; j++) _solve(b, j);
for(j = 100120; j < 100130; j++) _solve(b, j);
for(j = 100960; j < 100970; j++) _solve(b, j);
for(j = 101800; j < 101810; j++) _solve(b, j);
for(j = 102640; j < 102650; j++) _solve(b, j);
for(j = 103480; j < 103490; j++) _solve(b, j);
for(j = 104320; j < 104330; j++) _solve(b, j);
for(j = 105160; j < 105170; j++) _solve(b, j);
for(j = 106000; j < 106010; j++) _solve(b, j);
for(j = 106840; j < 106850; j++) _solve(b, j);
for(j = 107680; j < 107690; j++) _solve(b, j);
for(j = 108520; j < 108530; j++) _solve(b, j);
for(j = 109360; j < 109370; j++) _solve(b, j);
for(j = 110200; j < 110210; j++) _solve(b, j);
for(j = 111040; j < 111050; j++) _solve(b, j);
for(j = 111880; j < 111890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 112720; j < 112730; j++) _solve(b, j);
for(j = 113560; j < 113570; j++) _solve(b, j);
for(j = 114400; j < 114410; j++) _solve(b, j);
for(j = 115240; j < 115250; j++) _solve(b, j);
for(j = 116080; j < 116090; j++) _solve(b, j);
for(j = 116920; j < 116930; j++) _solve(b, j);
for(j = 117760; j < 117770; j++) _solve(b, j);
for(j = 118600; j < 118610; j++) _solve(b, j);
for(j = 119440; j < 119450; j++) _solve(b, j);
for(j = 120280; j < 120290; j++) _solve(b, j);
for(j = 121120; j < 121130; j++) _solve(b, j);
for(j = 121960; j < 121970; j++) _solve(b, j);
for(j = 122800; j < 122810; j++) _solve(b, j);
for(j = 123640; j < 123650; j++) _solve(b, j);
for(j = 124480; j < 124490; j++) _solve(b, j);
for(j = 125320; j < 125330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 126160; j < 126170; j++) _solve(b, j);
for(j = 127000; j < 127010; j++) _solve(b, j);
for(j = 127840; j < 127850; j++) _solve(b, j);
for(j = 128680; j < 128690; j++) _solve(b, j);
for(j = 129520; j < 129530; j++) _solve(b, j);
for(j = 130360; j < 130370; j++) _solve(b, j);
for(j = 131200; j < 131210; j++) _solve(b, j);
for(j = 132040; j < 132050; j++) _solve(b, j);
for(j = 132880; j < 132890; j++) _solve(b, j);
for(j = 133720; j < 133730; j++) _solve(b, j);
for(j = 134560; j < 134570; j++) _solve(b, j);
for(j = 135400; j < 135410; j++) _solve(b, j);
for(j = 136240; j < 136250; j++) _solve(b, j);
for(j = 137080; j < 137090; j++) _solve(b, j);
for(j = 137920; j < 137930; j++) _solve(b, j);
for(j = 138760; j < 138770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 139600; j < 139610; j++) _solve(b, j);
for(j = 140440; j < 140450; j++) _solve(b, j);
for(j = 141280; j < 141290; j++) _solve(b, j);
for(j = 142120; j < 142130; j++) _solve(b, j);
for(j = 142960; j < 142970; j++) _solve(b, j);
for(j = 143800; j < 143810; j++) _solve(b, j);
for(j = 144640; j < 144650; j++) _solve(b, j);
for(j = 145480; j < 145490; j++) _solve(b, j);
for(j = 146320; j < 146330; j++) _solve(b, j);
for(j = 147160; j < 147170; j++) _solve(b, j);
for(j = 148000; j < 148010; j++) _solve(b, j);
for(j = 148840; j < 148850; j++) _solve(b, j);
for(j = 149680; j < 149690; j++) _solve(b, j);
for(j = 150520; j < 150530; j++) _solve(b, j);
for(j = 151360; j < 151370; j++) _solve(b, j);
for(j = 152200; j < 152210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 153040; j < 153050; j++) _solve(b, j);
for(j = 153880; j < 153890; j++) _solve(b, j);
for(j = 154720; j < 154730; j++) _solve(b, j);
for(j = 155560; j < 155570; j++) _solve(b, j);
for(j = 156400; j < 156410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 86690; j < 86700; j++) _solve(b, j);
for(j = 87530; j < 87540; j++) _solve(b, j);
for(j = 88370; j < 88380; j++) _solve(b, j);
for(j = 89210; j < 89220; j++) _solve(b, j);
for(j = 90050; j < 90060; j++) _solve(b, j);
for(j = 90890; j < 90900; j++) _solve(b, j);
for(j = 91730; j < 91740; j++) _solve(b, j);
for(j = 92570; j < 92580; j++) _solve(b, j);
for(j = 93410; j < 93420; j++) _solve(b, j);
for(j = 94250; j < 94260; j++) _solve(b, j);
for(j = 95090; j < 95100; j++) _solve(b, j);
for(j = 95930; j < 95940; j++) _solve(b, j);
for(j = 96770; j < 96780; j++) _solve(b, j);
for(j = 97610; j < 97620; j++) _solve(b, j);
for(j = 98450; j < 98460; j++) _solve(b, j);
for(j = 99290; j < 99300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 100130; j < 100140; j++) _solve(b, j);
for(j = 100970; j < 100980; j++) _solve(b, j);
for(j = 101810; j < 101820; j++) _solve(b, j);
for(j = 102650; j < 102660; j++) _solve(b, j);
for(j = 103490; j < 103500; j++) _solve(b, j);
for(j = 104330; j < 104340; j++) _solve(b, j);
for(j = 105170; j < 105180; j++) _solve(b, j);
for(j = 106010; j < 106020; j++) _solve(b, j);
for(j = 106850; j < 106860; j++) _solve(b, j);
for(j = 107690; j < 107700; j++) _solve(b, j);
for(j = 108530; j < 108540; j++) _solve(b, j);
for(j = 109370; j < 109380; j++) _solve(b, j);
for(j = 110210; j < 110220; j++) _solve(b, j);
for(j = 111050; j < 111060; j++) _solve(b, j);
for(j = 111890; j < 111900; j++) _solve(b, j);
for(j = 112730; j < 112740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 113570; j < 113580; j++) _solve(b, j);
for(j = 114410; j < 114420; j++) _solve(b, j);
for(j = 115250; j < 115260; j++) _solve(b, j);
for(j = 116090; j < 116100; j++) _solve(b, j);
for(j = 116930; j < 116940; j++) _solve(b, j);
for(j = 117770; j < 117780; j++) _solve(b, j);
for(j = 118610; j < 118620; j++) _solve(b, j);
for(j = 119450; j < 119460; j++) _solve(b, j);
for(j = 120290; j < 120300; j++) _solve(b, j);
for(j = 121130; j < 121140; j++) _solve(b, j);
for(j = 121970; j < 121980; j++) _solve(b, j);
for(j = 122810; j < 122820; j++) _solve(b, j);
for(j = 123650; j < 123660; j++) _solve(b, j);
for(j = 124490; j < 124500; j++) _solve(b, j);
for(j = 125330; j < 125340; j++) _solve(b, j);
for(j = 126170; j < 126180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 127010; j < 127020; j++) _solve(b, j);
for(j = 127850; j < 127860; j++) _solve(b, j);
for(j = 128690; j < 128700; j++) _solve(b, j);
for(j = 129530; j < 129540; j++) _solve(b, j);
for(j = 130370; j < 130380; j++) _solve(b, j);
for(j = 131210; j < 131220; j++) _solve(b, j);
for(j = 132050; j < 132060; j++) _solve(b, j);
for(j = 132890; j < 132900; j++) _solve(b, j);
for(j = 133730; j < 133740; j++) _solve(b, j);
for(j = 134570; j < 134580; j++) _solve(b, j);
for(j = 135410; j < 135420; j++) _solve(b, j);
for(j = 136250; j < 136260; j++) _solve(b, j);
for(j = 137090; j < 137100; j++) _solve(b, j);
for(j = 137930; j < 137940; j++) _solve(b, j);
for(j = 138770; j < 138780; j++) _solve(b, j);
for(j = 139610; j < 139620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 140450; j < 140460; j++) _solve(b, j);
for(j = 141290; j < 141300; j++) _solve(b, j);
for(j = 142130; j < 142140; j++) _solve(b, j);
for(j = 142970; j < 142980; j++) _solve(b, j);
for(j = 143810; j < 143820; j++) _solve(b, j);
for(j = 144650; j < 144660; j++) _solve(b, j);
for(j = 145490; j < 145500; j++) _solve(b, j);
for(j = 146330; j < 146340; j++) _solve(b, j);
for(j = 147170; j < 147180; j++) _solve(b, j);
for(j = 148010; j < 148020; j++) _solve(b, j);
for(j = 148850; j < 148860; j++) _solve(b, j);
for(j = 149690; j < 149700; j++) _solve(b, j);
for(j = 150530; j < 150540; j++) _solve(b, j);
for(j = 151370; j < 151380; j++) _solve(b, j);
for(j = 152210; j < 152220; j++) _solve(b, j);
for(j = 153050; j < 153060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 153890; j < 153900; j++) _solve(b, j);
for(j = 154730; j < 154740; j++) _solve(b, j);
for(j = 155570; j < 155580; j++) _solve(b, j);
for(j = 156410; j < 156420; j++) _solve(b, j);
for(j = 157250; j < 157260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 87540; j < 87550; j++) _solve(b, j);
for(j = 88380; j < 88390; j++) _solve(b, j);
for(j = 89220; j < 89230; j++) _solve(b, j);
for(j = 90060; j < 90070; j++) _solve(b, j);
for(j = 90900; j < 90910; j++) _solve(b, j);
for(j = 91740; j < 91750; j++) _solve(b, j);
for(j = 92580; j < 92590; j++) _solve(b, j);
for(j = 93420; j < 93430; j++) _solve(b, j);
for(j = 94260; j < 94270; j++) _solve(b, j);
for(j = 95100; j < 95110; j++) _solve(b, j);
for(j = 95940; j < 95950; j++) _solve(b, j);
for(j = 96780; j < 96790; j++) _solve(b, j);
for(j = 97620; j < 97630; j++) _solve(b, j);
for(j = 98460; j < 98470; j++) _solve(b, j);
for(j = 99300; j < 99310; j++) _solve(b, j);
for(j = 100140; j < 100150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 100980; j < 100990; j++) _solve(b, j);
for(j = 101820; j < 101830; j++) _solve(b, j);
for(j = 102660; j < 102670; j++) _solve(b, j);
for(j = 103500; j < 103510; j++) _solve(b, j);
for(j = 104340; j < 104350; j++) _solve(b, j);
for(j = 105180; j < 105190; j++) _solve(b, j);
for(j = 106020; j < 106030; j++) _solve(b, j);
for(j = 106860; j < 106870; j++) _solve(b, j);
for(j = 107700; j < 107710; j++) _solve(b, j);
for(j = 108540; j < 108550; j++) _solve(b, j);
for(j = 109380; j < 109390; j++) _solve(b, j);
for(j = 110220; j < 110230; j++) _solve(b, j);
for(j = 111060; j < 111070; j++) _solve(b, j);
for(j = 111900; j < 111910; j++) _solve(b, j);
for(j = 112740; j < 112750; j++) _solve(b, j);
for(j = 113580; j < 113590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 114420; j < 114430; j++) _solve(b, j);
for(j = 115260; j < 115270; j++) _solve(b, j);
for(j = 116100; j < 116110; j++) _solve(b, j);
for(j = 116940; j < 116950; j++) _solve(b, j);
for(j = 117780; j < 117790; j++) _solve(b, j);
for(j = 118620; j < 118630; j++) _solve(b, j);
for(j = 119460; j < 119470; j++) _solve(b, j);
for(j = 120300; j < 120310; j++) _solve(b, j);
for(j = 121140; j < 121150; j++) _solve(b, j);
for(j = 121980; j < 121990; j++) _solve(b, j);
for(j = 122820; j < 122830; j++) _solve(b, j);
for(j = 123660; j < 123670; j++) _solve(b, j);
for(j = 124500; j < 124510; j++) _solve(b, j);
for(j = 125340; j < 125350; j++) _solve(b, j);
for(j = 126180; j < 126190; j++) _solve(b, j);
for(j = 127020; j < 127030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 127860; j < 127870; j++) _solve(b, j);
for(j = 128700; j < 128710; j++) _solve(b, j);
for(j = 129540; j < 129550; j++) _solve(b, j);
for(j = 130380; j < 130390; j++) _solve(b, j);
for(j = 131220; j < 131230; j++) _solve(b, j);
for(j = 132060; j < 132070; j++) _solve(b, j);
for(j = 132900; j < 132910; j++) _solve(b, j);
for(j = 133740; j < 133750; j++) _solve(b, j);
for(j = 134580; j < 134590; j++) _solve(b, j);
for(j = 135420; j < 135430; j++) _solve(b, j);
for(j = 136260; j < 136270; j++) _solve(b, j);
for(j = 137100; j < 137110; j++) _solve(b, j);
for(j = 137940; j < 137950; j++) _solve(b, j);
for(j = 138780; j < 138790; j++) _solve(b, j);
for(j = 139620; j < 139630; j++) _solve(b, j);
for(j = 140460; j < 140470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 141300; j < 141310; j++) _solve(b, j);
for(j = 142140; j < 142150; j++) _solve(b, j);
for(j = 142980; j < 142990; j++) _solve(b, j);
for(j = 143820; j < 143830; j++) _solve(b, j);
for(j = 144660; j < 144670; j++) _solve(b, j);
for(j = 145500; j < 145510; j++) _solve(b, j);
for(j = 146340; j < 146350; j++) _solve(b, j);
for(j = 147180; j < 147190; j++) _solve(b, j);
for(j = 148020; j < 148030; j++) _solve(b, j);
for(j = 148860; j < 148870; j++) _solve(b, j);
for(j = 149700; j < 149710; j++) _solve(b, j);
for(j = 150540; j < 150550; j++) _solve(b, j);
for(j = 151380; j < 151390; j++) _solve(b, j);
for(j = 152220; j < 152230; j++) _solve(b, j);
for(j = 153060; j < 153070; j++) _solve(b, j);
for(j = 153900; j < 153910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 154740; j < 154750; j++) _solve(b, j);
for(j = 155580; j < 155590; j++) _solve(b, j);
for(j = 156420; j < 156430; j++) _solve(b, j);
for(j = 157260; j < 157270; j++) _solve(b, j);
for(j = 158100; j < 158110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 88390; j < 88400; j++) _solve(b, j);
for(j = 89230; j < 89240; j++) _solve(b, j);
for(j = 90070; j < 90080; j++) _solve(b, j);
for(j = 90910; j < 90920; j++) _solve(b, j);
for(j = 91750; j < 91760; j++) _solve(b, j);
for(j = 92590; j < 92600; j++) _solve(b, j);
for(j = 93430; j < 93440; j++) _solve(b, j);
for(j = 94270; j < 94280; j++) _solve(b, j);
for(j = 95110; j < 95120; j++) _solve(b, j);
for(j = 95950; j < 95960; j++) _solve(b, j);
for(j = 96790; j < 96800; j++) _solve(b, j);
for(j = 97630; j < 97640; j++) _solve(b, j);
for(j = 98470; j < 98480; j++) _solve(b, j);
for(j = 99310; j < 99320; j++) _solve(b, j);
for(j = 100150; j < 100160; j++) _solve(b, j);
for(j = 100990; j < 101000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 101830; j < 101840; j++) _solve(b, j);
for(j = 102670; j < 102680; j++) _solve(b, j);
for(j = 103510; j < 103520; j++) _solve(b, j);
for(j = 104350; j < 104360; j++) _solve(b, j);
for(j = 105190; j < 105200; j++) _solve(b, j);
for(j = 106030; j < 106040; j++) _solve(b, j);
for(j = 106870; j < 106880; j++) _solve(b, j);
for(j = 107710; j < 107720; j++) _solve(b, j);
for(j = 108550; j < 108560; j++) _solve(b, j);
for(j = 109390; j < 109400; j++) _solve(b, j);
for(j = 110230; j < 110240; j++) _solve(b, j);
for(j = 111070; j < 111080; j++) _solve(b, j);
for(j = 111910; j < 111920; j++) _solve(b, j);
for(j = 112750; j < 112760; j++) _solve(b, j);
for(j = 113590; j < 113600; j++) _solve(b, j);
for(j = 114430; j < 114440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 115270; j < 115280; j++) _solve(b, j);
for(j = 116110; j < 116120; j++) _solve(b, j);
for(j = 116950; j < 116960; j++) _solve(b, j);
for(j = 117790; j < 117800; j++) _solve(b, j);
for(j = 118630; j < 118640; j++) _solve(b, j);
for(j = 119470; j < 119480; j++) _solve(b, j);
for(j = 120310; j < 120320; j++) _solve(b, j);
for(j = 121150; j < 121160; j++) _solve(b, j);
for(j = 121990; j < 122000; j++) _solve(b, j);
for(j = 122830; j < 122840; j++) _solve(b, j);
for(j = 123670; j < 123680; j++) _solve(b, j);
for(j = 124510; j < 124520; j++) _solve(b, j);
for(j = 125350; j < 125360; j++) _solve(b, j);
for(j = 126190; j < 126200; j++) _solve(b, j);
for(j = 127030; j < 127040; j++) _solve(b, j);
for(j = 127870; j < 127880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 128710; j < 128720; j++) _solve(b, j);
for(j = 129550; j < 129560; j++) _solve(b, j);
for(j = 130390; j < 130400; j++) _solve(b, j);
for(j = 131230; j < 131240; j++) _solve(b, j);
for(j = 132070; j < 132080; j++) _solve(b, j);
for(j = 132910; j < 132920; j++) _solve(b, j);
for(j = 133750; j < 133760; j++) _solve(b, j);
for(j = 134590; j < 134600; j++) _solve(b, j);
for(j = 135430; j < 135440; j++) _solve(b, j);
for(j = 136270; j < 136280; j++) _solve(b, j);
for(j = 137110; j < 137120; j++) _solve(b, j);
for(j = 137950; j < 137960; j++) _solve(b, j);
for(j = 138790; j < 138800; j++) _solve(b, j);
for(j = 139630; j < 139640; j++) _solve(b, j);
for(j = 140470; j < 140480; j++) _solve(b, j);
for(j = 141310; j < 141320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 142150; j < 142160; j++) _solve(b, j);
for(j = 142990; j < 143000; j++) _solve(b, j);
for(j = 143830; j < 143840; j++) _solve(b, j);
for(j = 144670; j < 144680; j++) _solve(b, j);
for(j = 145510; j < 145520; j++) _solve(b, j);
for(j = 146350; j < 146360; j++) _solve(b, j);
for(j = 147190; j < 147200; j++) _solve(b, j);
for(j = 148030; j < 148040; j++) _solve(b, j);
for(j = 148870; j < 148880; j++) _solve(b, j);
for(j = 149710; j < 149720; j++) _solve(b, j);
for(j = 150550; j < 150560; j++) _solve(b, j);
for(j = 151390; j < 151400; j++) _solve(b, j);
for(j = 152230; j < 152240; j++) _solve(b, j);
for(j = 153070; j < 153080; j++) _solve(b, j);
for(j = 153910; j < 153920; j++) _solve(b, j);
for(j = 154750; j < 154760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 155590; j < 155600; j++) _solve(b, j);
for(j = 156430; j < 156440; j++) _solve(b, j);
for(j = 157270; j < 157280; j++) _solve(b, j);
for(j = 158110; j < 158120; j++) _solve(b, j);
for(j = 158950; j < 158960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 89240; j < 89250; j++) _solve(b, j);
for(j = 90080; j < 90090; j++) _solve(b, j);
for(j = 90920; j < 90930; j++) _solve(b, j);
for(j = 91760; j < 91770; j++) _solve(b, j);
for(j = 92600; j < 92610; j++) _solve(b, j);
for(j = 93440; j < 93450; j++) _solve(b, j);
for(j = 94280; j < 94290; j++) _solve(b, j);
for(j = 95120; j < 95130; j++) _solve(b, j);
for(j = 95960; j < 95970; j++) _solve(b, j);
for(j = 96800; j < 96810; j++) _solve(b, j);
for(j = 97640; j < 97650; j++) _solve(b, j);
for(j = 98480; j < 98490; j++) _solve(b, j);
for(j = 99320; j < 99330; j++) _solve(b, j);
for(j = 100160; j < 100170; j++) _solve(b, j);
for(j = 101000; j < 101010; j++) _solve(b, j);
for(j = 101840; j < 101850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 102680; j < 102690; j++) _solve(b, j);
for(j = 103520; j < 103530; j++) _solve(b, j);
for(j = 104360; j < 104370; j++) _solve(b, j);
for(j = 105200; j < 105210; j++) _solve(b, j);
for(j = 106040; j < 106050; j++) _solve(b, j);
for(j = 106880; j < 106890; j++) _solve(b, j);
for(j = 107720; j < 107730; j++) _solve(b, j);
for(j = 108560; j < 108570; j++) _solve(b, j);
for(j = 109400; j < 109410; j++) _solve(b, j);
for(j = 110240; j < 110250; j++) _solve(b, j);
for(j = 111080; j < 111090; j++) _solve(b, j);
for(j = 111920; j < 111930; j++) _solve(b, j);
for(j = 112760; j < 112770; j++) _solve(b, j);
for(j = 113600; j < 113610; j++) _solve(b, j);
for(j = 114440; j < 114450; j++) _solve(b, j);
for(j = 115280; j < 115290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 116120; j < 116130; j++) _solve(b, j);
for(j = 116960; j < 116970; j++) _solve(b, j);
for(j = 117800; j < 117810; j++) _solve(b, j);
for(j = 118640; j < 118650; j++) _solve(b, j);
for(j = 119480; j < 119490; j++) _solve(b, j);
for(j = 120320; j < 120330; j++) _solve(b, j);
for(j = 121160; j < 121170; j++) _solve(b, j);
for(j = 122000; j < 122010; j++) _solve(b, j);
for(j = 122840; j < 122850; j++) _solve(b, j);
for(j = 123680; j < 123690; j++) _solve(b, j);
for(j = 124520; j < 124530; j++) _solve(b, j);
for(j = 125360; j < 125370; j++) _solve(b, j);
for(j = 126200; j < 126210; j++) _solve(b, j);
for(j = 127040; j < 127050; j++) _solve(b, j);
for(j = 127880; j < 127890; j++) _solve(b, j);
for(j = 128720; j < 128730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 129560; j < 129570; j++) _solve(b, j);
for(j = 130400; j < 130410; j++) _solve(b, j);
for(j = 131240; j < 131250; j++) _solve(b, j);
for(j = 132080; j < 132090; j++) _solve(b, j);
for(j = 132920; j < 132930; j++) _solve(b, j);
for(j = 133760; j < 133770; j++) _solve(b, j);
for(j = 134600; j < 134610; j++) _solve(b, j);
for(j = 135440; j < 135450; j++) _solve(b, j);
for(j = 136280; j < 136290; j++) _solve(b, j);
for(j = 137120; j < 137130; j++) _solve(b, j);
for(j = 137960; j < 137970; j++) _solve(b, j);
for(j = 138800; j < 138810; j++) _solve(b, j);
for(j = 139640; j < 139650; j++) _solve(b, j);
for(j = 140480; j < 140490; j++) _solve(b, j);
for(j = 141320; j < 141330; j++) _solve(b, j);
for(j = 142160; j < 142170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 143000; j < 143010; j++) _solve(b, j);
for(j = 143840; j < 143850; j++) _solve(b, j);
for(j = 144680; j < 144690; j++) _solve(b, j);
for(j = 145520; j < 145530; j++) _solve(b, j);
for(j = 146360; j < 146370; j++) _solve(b, j);
for(j = 147200; j < 147210; j++) _solve(b, j);
for(j = 148040; j < 148050; j++) _solve(b, j);
for(j = 148880; j < 148890; j++) _solve(b, j);
for(j = 149720; j < 149730; j++) _solve(b, j);
for(j = 150560; j < 150570; j++) _solve(b, j);
for(j = 151400; j < 151410; j++) _solve(b, j);
for(j = 152240; j < 152250; j++) _solve(b, j);
for(j = 153080; j < 153090; j++) _solve(b, j);
for(j = 153920; j < 153930; j++) _solve(b, j);
for(j = 154760; j < 154770; j++) _solve(b, j);
for(j = 155600; j < 155610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 156440; j < 156450; j++) _solve(b, j);
for(j = 157280; j < 157290; j++) _solve(b, j);
for(j = 158120; j < 158130; j++) _solve(b, j);
for(j = 158960; j < 158970; j++) _solve(b, j);
for(j = 159800; j < 159810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 90090; j < 90100; j++) _solve(b, j);
for(j = 90930; j < 90940; j++) _solve(b, j);
for(j = 91770; j < 91780; j++) _solve(b, j);
for(j = 92610; j < 92620; j++) _solve(b, j);
for(j = 93450; j < 93460; j++) _solve(b, j);
for(j = 94290; j < 94300; j++) _solve(b, j);
for(j = 95130; j < 95140; j++) _solve(b, j);
for(j = 95970; j < 95980; j++) _solve(b, j);
for(j = 96810; j < 96820; j++) _solve(b, j);
for(j = 97650; j < 97660; j++) _solve(b, j);
for(j = 98490; j < 98500; j++) _solve(b, j);
for(j = 99330; j < 99340; j++) _solve(b, j);
for(j = 100170; j < 100180; j++) _solve(b, j);
for(j = 101010; j < 101020; j++) _solve(b, j);
for(j = 101850; j < 101860; j++) _solve(b, j);
for(j = 102690; j < 102700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 103530; j < 103540; j++) _solve(b, j);
for(j = 104370; j < 104380; j++) _solve(b, j);
for(j = 105210; j < 105220; j++) _solve(b, j);
for(j = 106050; j < 106060; j++) _solve(b, j);
for(j = 106890; j < 106900; j++) _solve(b, j);
for(j = 107730; j < 107740; j++) _solve(b, j);
for(j = 108570; j < 108580; j++) _solve(b, j);
for(j = 109410; j < 109420; j++) _solve(b, j);
for(j = 110250; j < 110260; j++) _solve(b, j);
for(j = 111090; j < 111100; j++) _solve(b, j);
for(j = 111930; j < 111940; j++) _solve(b, j);
for(j = 112770; j < 112780; j++) _solve(b, j);
for(j = 113610; j < 113620; j++) _solve(b, j);
for(j = 114450; j < 114460; j++) _solve(b, j);
for(j = 115290; j < 115300; j++) _solve(b, j);
for(j = 116130; j < 116140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 116970; j < 116980; j++) _solve(b, j);
for(j = 117810; j < 117820; j++) _solve(b, j);
for(j = 118650; j < 118660; j++) _solve(b, j);
for(j = 119490; j < 119500; j++) _solve(b, j);
for(j = 120330; j < 120340; j++) _solve(b, j);
for(j = 121170; j < 121180; j++) _solve(b, j);
for(j = 122010; j < 122020; j++) _solve(b, j);
for(j = 122850; j < 122860; j++) _solve(b, j);
for(j = 123690; j < 123700; j++) _solve(b, j);
for(j = 124530; j < 124540; j++) _solve(b, j);
for(j = 125370; j < 125380; j++) _solve(b, j);
for(j = 126210; j < 126220; j++) _solve(b, j);
for(j = 127050; j < 127060; j++) _solve(b, j);
for(j = 127890; j < 127900; j++) _solve(b, j);
for(j = 128730; j < 128740; j++) _solve(b, j);
for(j = 129570; j < 129580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 130410; j < 130420; j++) _solve(b, j);
for(j = 131250; j < 131260; j++) _solve(b, j);
for(j = 132090; j < 132100; j++) _solve(b, j);
for(j = 132930; j < 132940; j++) _solve(b, j);
for(j = 133770; j < 133780; j++) _solve(b, j);
for(j = 134610; j < 134620; j++) _solve(b, j);
for(j = 135450; j < 135460; j++) _solve(b, j);
for(j = 136290; j < 136300; j++) _solve(b, j);
for(j = 137130; j < 137140; j++) _solve(b, j);
for(j = 137970; j < 137980; j++) _solve(b, j);
for(j = 138810; j < 138820; j++) _solve(b, j);
for(j = 139650; j < 139660; j++) _solve(b, j);
for(j = 140490; j < 140500; j++) _solve(b, j);
for(j = 141330; j < 141340; j++) _solve(b, j);
for(j = 142170; j < 142180; j++) _solve(b, j);
for(j = 143010; j < 143020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 143850; j < 143860; j++) _solve(b, j);
for(j = 144690; j < 144700; j++) _solve(b, j);
for(j = 145530; j < 145540; j++) _solve(b, j);
for(j = 146370; j < 146380; j++) _solve(b, j);
for(j = 147210; j < 147220; j++) _solve(b, j);
for(j = 148050; j < 148060; j++) _solve(b, j);
for(j = 148890; j < 148900; j++) _solve(b, j);
for(j = 149730; j < 149740; j++) _solve(b, j);
for(j = 150570; j < 150580; j++) _solve(b, j);
for(j = 151410; j < 151420; j++) _solve(b, j);
for(j = 152250; j < 152260; j++) _solve(b, j);
for(j = 153090; j < 153100; j++) _solve(b, j);
for(j = 153930; j < 153940; j++) _solve(b, j);
for(j = 154770; j < 154780; j++) _solve(b, j);
for(j = 155610; j < 155620; j++) _solve(b, j);
for(j = 156450; j < 156460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 157290; j < 157300; j++) _solve(b, j);
for(j = 158130; j < 158140; j++) _solve(b, j);
for(j = 158970; j < 158980; j++) _solve(b, j);
for(j = 159810; j < 159820; j++) _solve(b, j);
for(j = 160650; j < 160660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 90940; j < 90950; j++) _solve(b, j);
for(j = 91780; j < 91790; j++) _solve(b, j);
for(j = 92620; j < 92630; j++) _solve(b, j);
for(j = 93460; j < 93470; j++) _solve(b, j);
for(j = 94300; j < 94310; j++) _solve(b, j);
for(j = 95140; j < 95150; j++) _solve(b, j);
for(j = 95980; j < 95990; j++) _solve(b, j);
for(j = 96820; j < 96830; j++) _solve(b, j);
for(j = 97660; j < 97670; j++) _solve(b, j);
for(j = 98500; j < 98510; j++) _solve(b, j);
for(j = 99340; j < 99350; j++) _solve(b, j);
for(j = 100180; j < 100190; j++) _solve(b, j);
for(j = 101020; j < 101030; j++) _solve(b, j);
for(j = 101860; j < 101870; j++) _solve(b, j);
for(j = 102700; j < 102710; j++) _solve(b, j);
for(j = 103540; j < 103550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 104380; j < 104390; j++) _solve(b, j);
for(j = 105220; j < 105230; j++) _solve(b, j);
for(j = 106060; j < 106070; j++) _solve(b, j);
for(j = 106900; j < 106910; j++) _solve(b, j);
for(j = 107740; j < 107750; j++) _solve(b, j);
for(j = 108580; j < 108590; j++) _solve(b, j);
for(j = 109420; j < 109430; j++) _solve(b, j);
for(j = 110260; j < 110270; j++) _solve(b, j);
for(j = 111100; j < 111110; j++) _solve(b, j);
for(j = 111940; j < 111950; j++) _solve(b, j);
for(j = 112780; j < 112790; j++) _solve(b, j);
for(j = 113620; j < 113630; j++) _solve(b, j);
for(j = 114460; j < 114470; j++) _solve(b, j);
for(j = 115300; j < 115310; j++) _solve(b, j);
for(j = 116140; j < 116150; j++) _solve(b, j);
for(j = 116980; j < 116990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 117820; j < 117830; j++) _solve(b, j);
for(j = 118660; j < 118670; j++) _solve(b, j);
for(j = 119500; j < 119510; j++) _solve(b, j);
for(j = 120340; j < 120350; j++) _solve(b, j);
for(j = 121180; j < 121190; j++) _solve(b, j);
for(j = 122020; j < 122030; j++) _solve(b, j);
for(j = 122860; j < 122870; j++) _solve(b, j);
for(j = 123700; j < 123710; j++) _solve(b, j);
for(j = 124540; j < 124550; j++) _solve(b, j);
for(j = 125380; j < 125390; j++) _solve(b, j);
for(j = 126220; j < 126230; j++) _solve(b, j);
for(j = 127060; j < 127070; j++) _solve(b, j);
for(j = 127900; j < 127910; j++) _solve(b, j);
for(j = 128740; j < 128750; j++) _solve(b, j);
for(j = 129580; j < 129590; j++) _solve(b, j);
for(j = 130420; j < 130430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 131260; j < 131270; j++) _solve(b, j);
for(j = 132100; j < 132110; j++) _solve(b, j);
for(j = 132940; j < 132950; j++) _solve(b, j);
for(j = 133780; j < 133790; j++) _solve(b, j);
for(j = 134620; j < 134630; j++) _solve(b, j);
for(j = 135460; j < 135470; j++) _solve(b, j);
for(j = 136300; j < 136310; j++) _solve(b, j);
for(j = 137140; j < 137150; j++) _solve(b, j);
for(j = 137980; j < 137990; j++) _solve(b, j);
for(j = 138820; j < 138830; j++) _solve(b, j);
for(j = 139660; j < 139670; j++) _solve(b, j);
for(j = 140500; j < 140510; j++) _solve(b, j);
for(j = 141340; j < 141350; j++) _solve(b, j);
for(j = 142180; j < 142190; j++) _solve(b, j);
for(j = 143020; j < 143030; j++) _solve(b, j);
for(j = 143860; j < 143870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 144700; j < 144710; j++) _solve(b, j);
for(j = 145540; j < 145550; j++) _solve(b, j);
for(j = 146380; j < 146390; j++) _solve(b, j);
for(j = 147220; j < 147230; j++) _solve(b, j);
for(j = 148060; j < 148070; j++) _solve(b, j);
for(j = 148900; j < 148910; j++) _solve(b, j);
for(j = 149740; j < 149750; j++) _solve(b, j);
for(j = 150580; j < 150590; j++) _solve(b, j);
for(j = 151420; j < 151430; j++) _solve(b, j);
for(j = 152260; j < 152270; j++) _solve(b, j);
for(j = 153100; j < 153110; j++) _solve(b, j);
for(j = 153940; j < 153950; j++) _solve(b, j);
for(j = 154780; j < 154790; j++) _solve(b, j);
for(j = 155620; j < 155630; j++) _solve(b, j);
for(j = 156460; j < 156470; j++) _solve(b, j);
for(j = 157300; j < 157310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 158140; j < 158150; j++) _solve(b, j);
for(j = 158980; j < 158990; j++) _solve(b, j);
for(j = 159820; j < 159830; j++) _solve(b, j);
for(j = 160660; j < 160670; j++) _solve(b, j);
for(j = 161500; j < 161510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 91790; j < 91800; j++) _solve(b, j);
for(j = 92630; j < 92640; j++) _solve(b, j);
for(j = 93470; j < 93480; j++) _solve(b, j);
for(j = 94310; j < 94320; j++) _solve(b, j);
for(j = 95150; j < 95160; j++) _solve(b, j);
for(j = 95990; j < 96000; j++) _solve(b, j);
for(j = 96830; j < 96840; j++) _solve(b, j);
for(j = 97670; j < 97680; j++) _solve(b, j);
for(j = 98510; j < 98520; j++) _solve(b, j);
for(j = 99350; j < 99360; j++) _solve(b, j);
for(j = 100190; j < 100200; j++) _solve(b, j);
for(j = 101030; j < 101040; j++) _solve(b, j);
for(j = 101870; j < 101880; j++) _solve(b, j);
for(j = 102710; j < 102720; j++) _solve(b, j);
for(j = 103550; j < 103560; j++) _solve(b, j);
for(j = 104390; j < 104400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 105230; j < 105240; j++) _solve(b, j);
for(j = 106070; j < 106080; j++) _solve(b, j);
for(j = 106910; j < 106920; j++) _solve(b, j);
for(j = 107750; j < 107760; j++) _solve(b, j);
for(j = 108590; j < 108600; j++) _solve(b, j);
for(j = 109430; j < 109440; j++) _solve(b, j);
for(j = 110270; j < 110280; j++) _solve(b, j);
for(j = 111110; j < 111120; j++) _solve(b, j);
for(j = 111950; j < 111960; j++) _solve(b, j);
for(j = 112790; j < 112800; j++) _solve(b, j);
for(j = 113630; j < 113640; j++) _solve(b, j);
for(j = 114470; j < 114480; j++) _solve(b, j);
for(j = 115310; j < 115320; j++) _solve(b, j);
for(j = 116150; j < 116160; j++) _solve(b, j);
for(j = 116990; j < 117000; j++) _solve(b, j);
for(j = 117830; j < 117840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 118670; j < 118680; j++) _solve(b, j);
for(j = 119510; j < 119520; j++) _solve(b, j);
for(j = 120350; j < 120360; j++) _solve(b, j);
for(j = 121190; j < 121200; j++) _solve(b, j);
for(j = 122030; j < 122040; j++) _solve(b, j);
for(j = 122870; j < 122880; j++) _solve(b, j);
for(j = 123710; j < 123720; j++) _solve(b, j);
for(j = 124550; j < 124560; j++) _solve(b, j);
for(j = 125390; j < 125400; j++) _solve(b, j);
for(j = 126230; j < 126240; j++) _solve(b, j);
for(j = 127070; j < 127080; j++) _solve(b, j);
for(j = 127910; j < 127920; j++) _solve(b, j);
for(j = 128750; j < 128760; j++) _solve(b, j);
for(j = 129590; j < 129600; j++) _solve(b, j);
for(j = 130430; j < 130440; j++) _solve(b, j);
for(j = 131270; j < 131280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 132110; j < 132120; j++) _solve(b, j);
for(j = 132950; j < 132960; j++) _solve(b, j);
for(j = 133790; j < 133800; j++) _solve(b, j);
for(j = 134630; j < 134640; j++) _solve(b, j);
for(j = 135470; j < 135480; j++) _solve(b, j);
for(j = 136310; j < 136320; j++) _solve(b, j);
for(j = 137150; j < 137160; j++) _solve(b, j);
for(j = 137990; j < 138000; j++) _solve(b, j);
for(j = 138830; j < 138840; j++) _solve(b, j);
for(j = 139670; j < 139680; j++) _solve(b, j);
for(j = 140510; j < 140520; j++) _solve(b, j);
for(j = 141350; j < 141360; j++) _solve(b, j);
for(j = 142190; j < 142200; j++) _solve(b, j);
for(j = 143030; j < 143040; j++) _solve(b, j);
for(j = 143870; j < 143880; j++) _solve(b, j);
for(j = 144710; j < 144720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 145550; j < 145560; j++) _solve(b, j);
for(j = 146390; j < 146400; j++) _solve(b, j);
for(j = 147230; j < 147240; j++) _solve(b, j);
for(j = 148070; j < 148080; j++) _solve(b, j);
for(j = 148910; j < 148920; j++) _solve(b, j);
for(j = 149750; j < 149760; j++) _solve(b, j);
for(j = 150590; j < 150600; j++) _solve(b, j);
for(j = 151430; j < 151440; j++) _solve(b, j);
for(j = 152270; j < 152280; j++) _solve(b, j);
for(j = 153110; j < 153120; j++) _solve(b, j);
for(j = 153950; j < 153960; j++) _solve(b, j);
for(j = 154790; j < 154800; j++) _solve(b, j);
for(j = 155630; j < 155640; j++) _solve(b, j);
for(j = 156470; j < 156480; j++) _solve(b, j);
for(j = 157310; j < 157320; j++) _solve(b, j);
for(j = 158150; j < 158160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 158990; j < 159000; j++) _solve(b, j);
for(j = 159830; j < 159840; j++) _solve(b, j);
for(j = 160670; j < 160680; j++) _solve(b, j);
for(j = 161510; j < 161520; j++) _solve(b, j);
for(j = 162350; j < 162360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 92640; j < 92650; j++) _solve(b, j);
for(j = 93480; j < 93490; j++) _solve(b, j);
for(j = 94320; j < 94330; j++) _solve(b, j);
for(j = 95160; j < 95170; j++) _solve(b, j);
for(j = 96000; j < 96010; j++) _solve(b, j);
for(j = 96840; j < 96850; j++) _solve(b, j);
for(j = 97680; j < 97690; j++) _solve(b, j);
for(j = 98520; j < 98530; j++) _solve(b, j);
for(j = 99360; j < 99370; j++) _solve(b, j);
for(j = 100200; j < 100210; j++) _solve(b, j);
for(j = 101040; j < 101050; j++) _solve(b, j);
for(j = 101880; j < 101890; j++) _solve(b, j);
for(j = 102720; j < 102730; j++) _solve(b, j);
for(j = 103560; j < 103570; j++) _solve(b, j);
for(j = 104400; j < 104410; j++) _solve(b, j);
for(j = 105240; j < 105250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 106080; j < 106090; j++) _solve(b, j);
for(j = 106920; j < 106930; j++) _solve(b, j);
for(j = 107760; j < 107770; j++) _solve(b, j);
for(j = 108600; j < 108610; j++) _solve(b, j);
for(j = 109440; j < 109450; j++) _solve(b, j);
for(j = 110280; j < 110290; j++) _solve(b, j);
for(j = 111120; j < 111130; j++) _solve(b, j);
for(j = 111960; j < 111970; j++) _solve(b, j);
for(j = 112800; j < 112810; j++) _solve(b, j);
for(j = 113640; j < 113650; j++) _solve(b, j);
for(j = 114480; j < 114490; j++) _solve(b, j);
for(j = 115320; j < 115330; j++) _solve(b, j);
for(j = 116160; j < 116170; j++) _solve(b, j);
for(j = 117000; j < 117010; j++) _solve(b, j);
for(j = 117840; j < 117850; j++) _solve(b, j);
for(j = 118680; j < 118690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 119520; j < 119530; j++) _solve(b, j);
for(j = 120360; j < 120370; j++) _solve(b, j);
for(j = 121200; j < 121210; j++) _solve(b, j);
for(j = 122040; j < 122050; j++) _solve(b, j);
for(j = 122880; j < 122890; j++) _solve(b, j);
for(j = 123720; j < 123730; j++) _solve(b, j);
for(j = 124560; j < 124570; j++) _solve(b, j);
for(j = 125400; j < 125410; j++) _solve(b, j);
for(j = 126240; j < 126250; j++) _solve(b, j);
for(j = 127080; j < 127090; j++) _solve(b, j);
for(j = 127920; j < 127930; j++) _solve(b, j);
for(j = 128760; j < 128770; j++) _solve(b, j);
for(j = 129600; j < 129610; j++) _solve(b, j);
for(j = 130440; j < 130450; j++) _solve(b, j);
for(j = 131280; j < 131290; j++) _solve(b, j);
for(j = 132120; j < 132130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 132960; j < 132970; j++) _solve(b, j);
for(j = 133800; j < 133810; j++) _solve(b, j);
for(j = 134640; j < 134650; j++) _solve(b, j);
for(j = 135480; j < 135490; j++) _solve(b, j);
for(j = 136320; j < 136330; j++) _solve(b, j);
for(j = 137160; j < 137170; j++) _solve(b, j);
for(j = 138000; j < 138010; j++) _solve(b, j);
for(j = 138840; j < 138850; j++) _solve(b, j);
for(j = 139680; j < 139690; j++) _solve(b, j);
for(j = 140520; j < 140530; j++) _solve(b, j);
for(j = 141360; j < 141370; j++) _solve(b, j);
for(j = 142200; j < 142210; j++) _solve(b, j);
for(j = 143040; j < 143050; j++) _solve(b, j);
for(j = 143880; j < 143890; j++) _solve(b, j);
for(j = 144720; j < 144730; j++) _solve(b, j);
for(j = 145560; j < 145570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 146400; j < 146410; j++) _solve(b, j);
for(j = 147240; j < 147250; j++) _solve(b, j);
for(j = 148080; j < 148090; j++) _solve(b, j);
for(j = 148920; j < 148930; j++) _solve(b, j);
for(j = 149760; j < 149770; j++) _solve(b, j);
for(j = 150600; j < 150610; j++) _solve(b, j);
for(j = 151440; j < 151450; j++) _solve(b, j);
for(j = 152280; j < 152290; j++) _solve(b, j);
for(j = 153120; j < 153130; j++) _solve(b, j);
for(j = 153960; j < 153970; j++) _solve(b, j);
for(j = 154800; j < 154810; j++) _solve(b, j);
for(j = 155640; j < 155650; j++) _solve(b, j);
for(j = 156480; j < 156490; j++) _solve(b, j);
for(j = 157320; j < 157330; j++) _solve(b, j);
for(j = 158160; j < 158170; j++) _solve(b, j);
for(j = 159000; j < 159010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 159840; j < 159850; j++) _solve(b, j);
for(j = 160680; j < 160690; j++) _solve(b, j);
for(j = 161520; j < 161530; j++) _solve(b, j);
for(j = 162360; j < 162370; j++) _solve(b, j);
for(j = 163200; j < 163210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 93490; j < 93500; j++) _solve(b, j);
for(j = 94330; j < 94340; j++) _solve(b, j);
for(j = 95170; j < 95180; j++) _solve(b, j);
for(j = 96010; j < 96020; j++) _solve(b, j);
for(j = 96850; j < 96860; j++) _solve(b, j);
for(j = 97690; j < 97700; j++) _solve(b, j);
for(j = 98530; j < 98540; j++) _solve(b, j);
for(j = 99370; j < 99380; j++) _solve(b, j);
for(j = 100210; j < 100220; j++) _solve(b, j);
for(j = 101050; j < 101060; j++) _solve(b, j);
for(j = 101890; j < 101900; j++) _solve(b, j);
for(j = 102730; j < 102740; j++) _solve(b, j);
for(j = 103570; j < 103580; j++) _solve(b, j);
for(j = 104410; j < 104420; j++) _solve(b, j);
for(j = 105250; j < 105260; j++) _solve(b, j);
for(j = 106090; j < 106100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 106930; j < 106940; j++) _solve(b, j);
for(j = 107770; j < 107780; j++) _solve(b, j);
for(j = 108610; j < 108620; j++) _solve(b, j);
for(j = 109450; j < 109460; j++) _solve(b, j);
for(j = 110290; j < 110300; j++) _solve(b, j);
for(j = 111130; j < 111140; j++) _solve(b, j);
for(j = 111970; j < 111980; j++) _solve(b, j);
for(j = 112810; j < 112820; j++) _solve(b, j);
for(j = 113650; j < 113660; j++) _solve(b, j);
for(j = 114490; j < 114500; j++) _solve(b, j);
for(j = 115330; j < 115340; j++) _solve(b, j);
for(j = 116170; j < 116180; j++) _solve(b, j);
for(j = 117010; j < 117020; j++) _solve(b, j);
for(j = 117850; j < 117860; j++) _solve(b, j);
for(j = 118690; j < 118700; j++) _solve(b, j);
for(j = 119530; j < 119540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 120370; j < 120380; j++) _solve(b, j);
for(j = 121210; j < 121220; j++) _solve(b, j);
for(j = 122050; j < 122060; j++) _solve(b, j);
for(j = 122890; j < 122900; j++) _solve(b, j);
for(j = 123730; j < 123740; j++) _solve(b, j);
for(j = 124570; j < 124580; j++) _solve(b, j);
for(j = 125410; j < 125420; j++) _solve(b, j);
for(j = 126250; j < 126260; j++) _solve(b, j);
for(j = 127090; j < 127100; j++) _solve(b, j);
for(j = 127930; j < 127940; j++) _solve(b, j);
for(j = 128770; j < 128780; j++) _solve(b, j);
for(j = 129610; j < 129620; j++) _solve(b, j);
for(j = 130450; j < 130460; j++) _solve(b, j);
for(j = 131290; j < 131300; j++) _solve(b, j);
for(j = 132130; j < 132140; j++) _solve(b, j);
for(j = 132970; j < 132980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 133810; j < 133820; j++) _solve(b, j);
for(j = 134650; j < 134660; j++) _solve(b, j);
for(j = 135490; j < 135500; j++) _solve(b, j);
for(j = 136330; j < 136340; j++) _solve(b, j);
for(j = 137170; j < 137180; j++) _solve(b, j);
for(j = 138010; j < 138020; j++) _solve(b, j);
for(j = 138850; j < 138860; j++) _solve(b, j);
for(j = 139690; j < 139700; j++) _solve(b, j);
for(j = 140530; j < 140540; j++) _solve(b, j);
for(j = 141370; j < 141380; j++) _solve(b, j);
for(j = 142210; j < 142220; j++) _solve(b, j);
for(j = 143050; j < 143060; j++) _solve(b, j);
for(j = 143890; j < 143900; j++) _solve(b, j);
for(j = 144730; j < 144740; j++) _solve(b, j);
for(j = 145570; j < 145580; j++) _solve(b, j);
for(j = 146410; j < 146420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 147250; j < 147260; j++) _solve(b, j);
for(j = 148090; j < 148100; j++) _solve(b, j);
for(j = 148930; j < 148940; j++) _solve(b, j);
for(j = 149770; j < 149780; j++) _solve(b, j);
for(j = 150610; j < 150620; j++) _solve(b, j);
for(j = 151450; j < 151460; j++) _solve(b, j);
for(j = 152290; j < 152300; j++) _solve(b, j);
for(j = 153130; j < 153140; j++) _solve(b, j);
for(j = 153970; j < 153980; j++) _solve(b, j);
for(j = 154810; j < 154820; j++) _solve(b, j);
for(j = 155650; j < 155660; j++) _solve(b, j);
for(j = 156490; j < 156500; j++) _solve(b, j);
for(j = 157330; j < 157340; j++) _solve(b, j);
for(j = 158170; j < 158180; j++) _solve(b, j);
for(j = 159010; j < 159020; j++) _solve(b, j);
for(j = 159850; j < 159860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 160690; j < 160700; j++) _solve(b, j);
for(j = 161530; j < 161540; j++) _solve(b, j);
for(j = 162370; j < 162380; j++) _solve(b, j);
for(j = 163210; j < 163220; j++) _solve(b, j);
for(j = 164050; j < 164060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 94340; j < 94350; j++) _solve(b, j);
for(j = 95180; j < 95190; j++) _solve(b, j);
for(j = 96020; j < 96030; j++) _solve(b, j);
for(j = 96860; j < 96870; j++) _solve(b, j);
for(j = 97700; j < 97710; j++) _solve(b, j);
for(j = 98540; j < 98550; j++) _solve(b, j);
for(j = 99380; j < 99390; j++) _solve(b, j);
for(j = 100220; j < 100230; j++) _solve(b, j);
for(j = 101060; j < 101070; j++) _solve(b, j);
for(j = 101900; j < 101910; j++) _solve(b, j);
for(j = 102740; j < 102750; j++) _solve(b, j);
for(j = 103580; j < 103590; j++) _solve(b, j);
for(j = 104420; j < 104430; j++) _solve(b, j);
for(j = 105260; j < 105270; j++) _solve(b, j);
for(j = 106100; j < 106110; j++) _solve(b, j);
for(j = 106940; j < 106950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 107780; j < 107790; j++) _solve(b, j);
for(j = 108620; j < 108630; j++) _solve(b, j);
for(j = 109460; j < 109470; j++) _solve(b, j);
for(j = 110300; j < 110310; j++) _solve(b, j);
for(j = 111140; j < 111150; j++) _solve(b, j);
for(j = 111980; j < 111990; j++) _solve(b, j);
for(j = 112820; j < 112830; j++) _solve(b, j);
for(j = 113660; j < 113670; j++) _solve(b, j);
for(j = 114500; j < 114510; j++) _solve(b, j);
for(j = 115340; j < 115350; j++) _solve(b, j);
for(j = 116180; j < 116190; j++) _solve(b, j);
for(j = 117020; j < 117030; j++) _solve(b, j);
for(j = 117860; j < 117870; j++) _solve(b, j);
for(j = 118700; j < 118710; j++) _solve(b, j);
for(j = 119540; j < 119550; j++) _solve(b, j);
for(j = 120380; j < 120390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 121220; j < 121230; j++) _solve(b, j);
for(j = 122060; j < 122070; j++) _solve(b, j);
for(j = 122900; j < 122910; j++) _solve(b, j);
for(j = 123740; j < 123750; j++) _solve(b, j);
for(j = 124580; j < 124590; j++) _solve(b, j);
for(j = 125420; j < 125430; j++) _solve(b, j);
for(j = 126260; j < 126270; j++) _solve(b, j);
for(j = 127100; j < 127110; j++) _solve(b, j);
for(j = 127940; j < 127950; j++) _solve(b, j);
for(j = 128780; j < 128790; j++) _solve(b, j);
for(j = 129620; j < 129630; j++) _solve(b, j);
for(j = 130460; j < 130470; j++) _solve(b, j);
for(j = 131300; j < 131310; j++) _solve(b, j);
for(j = 132140; j < 132150; j++) _solve(b, j);
for(j = 132980; j < 132990; j++) _solve(b, j);
for(j = 133820; j < 133830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 134660; j < 134670; j++) _solve(b, j);
for(j = 135500; j < 135510; j++) _solve(b, j);
for(j = 136340; j < 136350; j++) _solve(b, j);
for(j = 137180; j < 137190; j++) _solve(b, j);
for(j = 138020; j < 138030; j++) _solve(b, j);
for(j = 138860; j < 138870; j++) _solve(b, j);
for(j = 139700; j < 139710; j++) _solve(b, j);
for(j = 140540; j < 140550; j++) _solve(b, j);
for(j = 141380; j < 141390; j++) _solve(b, j);
for(j = 142220; j < 142230; j++) _solve(b, j);
for(j = 143060; j < 143070; j++) _solve(b, j);
for(j = 143900; j < 143910; j++) _solve(b, j);
for(j = 144740; j < 144750; j++) _solve(b, j);
for(j = 145580; j < 145590; j++) _solve(b, j);
for(j = 146420; j < 146430; j++) _solve(b, j);
for(j = 147260; j < 147270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 148100; j < 148110; j++) _solve(b, j);
for(j = 148940; j < 148950; j++) _solve(b, j);
for(j = 149780; j < 149790; j++) _solve(b, j);
for(j = 150620; j < 150630; j++) _solve(b, j);
for(j = 151460; j < 151470; j++) _solve(b, j);
for(j = 152300; j < 152310; j++) _solve(b, j);
for(j = 153140; j < 153150; j++) _solve(b, j);
for(j = 153980; j < 153990; j++) _solve(b, j);
for(j = 154820; j < 154830; j++) _solve(b, j);
for(j = 155660; j < 155670; j++) _solve(b, j);
for(j = 156500; j < 156510; j++) _solve(b, j);
for(j = 157340; j < 157350; j++) _solve(b, j);
for(j = 158180; j < 158190; j++) _solve(b, j);
for(j = 159020; j < 159030; j++) _solve(b, j);
for(j = 159860; j < 159870; j++) _solve(b, j);
for(j = 160700; j < 160710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 161540; j < 161550; j++) _solve(b, j);
for(j = 162380; j < 162390; j++) _solve(b, j);
for(j = 163220; j < 163230; j++) _solve(b, j);
for(j = 164060; j < 164070; j++) _solve(b, j);
for(j = 164900; j < 164910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 95190; j < 95200; j++) _solve(b, j);
for(j = 96030; j < 96040; j++) _solve(b, j);
for(j = 96870; j < 96880; j++) _solve(b, j);
for(j = 97710; j < 97720; j++) _solve(b, j);
for(j = 98550; j < 98560; j++) _solve(b, j);
for(j = 99390; j < 99400; j++) _solve(b, j);
for(j = 100230; j < 100240; j++) _solve(b, j);
for(j = 101070; j < 101080; j++) _solve(b, j);
for(j = 101910; j < 101920; j++) _solve(b, j);
for(j = 102750; j < 102760; j++) _solve(b, j);
for(j = 103590; j < 103600; j++) _solve(b, j);
for(j = 104430; j < 104440; j++) _solve(b, j);
for(j = 105270; j < 105280; j++) _solve(b, j);
for(j = 106110; j < 106120; j++) _solve(b, j);
for(j = 106950; j < 106960; j++) _solve(b, j);
for(j = 107790; j < 107800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 108630; j < 108640; j++) _solve(b, j);
for(j = 109470; j < 109480; j++) _solve(b, j);
for(j = 110310; j < 110320; j++) _solve(b, j);
for(j = 111150; j < 111160; j++) _solve(b, j);
for(j = 111990; j < 112000; j++) _solve(b, j);
for(j = 112830; j < 112840; j++) _solve(b, j);
for(j = 113670; j < 113680; j++) _solve(b, j);
for(j = 114510; j < 114520; j++) _solve(b, j);
for(j = 115350; j < 115360; j++) _solve(b, j);
for(j = 116190; j < 116200; j++) _solve(b, j);
for(j = 117030; j < 117040; j++) _solve(b, j);
for(j = 117870; j < 117880; j++) _solve(b, j);
for(j = 118710; j < 118720; j++) _solve(b, j);
for(j = 119550; j < 119560; j++) _solve(b, j);
for(j = 120390; j < 120400; j++) _solve(b, j);
for(j = 121230; j < 121240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 122070; j < 122080; j++) _solve(b, j);
for(j = 122910; j < 122920; j++) _solve(b, j);
for(j = 123750; j < 123760; j++) _solve(b, j);
for(j = 124590; j < 124600; j++) _solve(b, j);
for(j = 125430; j < 125440; j++) _solve(b, j);
for(j = 126270; j < 126280; j++) _solve(b, j);
for(j = 127110; j < 127120; j++) _solve(b, j);
for(j = 127950; j < 127960; j++) _solve(b, j);
for(j = 128790; j < 128800; j++) _solve(b, j);
for(j = 129630; j < 129640; j++) _solve(b, j);
for(j = 130470; j < 130480; j++) _solve(b, j);
for(j = 131310; j < 131320; j++) _solve(b, j);
for(j = 132150; j < 132160; j++) _solve(b, j);
for(j = 132990; j < 133000; j++) _solve(b, j);
for(j = 133830; j < 133840; j++) _solve(b, j);
for(j = 134670; j < 134680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 135510; j < 135520; j++) _solve(b, j);
for(j = 136350; j < 136360; j++) _solve(b, j);
for(j = 137190; j < 137200; j++) _solve(b, j);
for(j = 138030; j < 138040; j++) _solve(b, j);
for(j = 138870; j < 138880; j++) _solve(b, j);
for(j = 139710; j < 139720; j++) _solve(b, j);
for(j = 140550; j < 140560; j++) _solve(b, j);
for(j = 141390; j < 141400; j++) _solve(b, j);
for(j = 142230; j < 142240; j++) _solve(b, j);
for(j = 143070; j < 143080; j++) _solve(b, j);
for(j = 143910; j < 143920; j++) _solve(b, j);
for(j = 144750; j < 144760; j++) _solve(b, j);
for(j = 145590; j < 145600; j++) _solve(b, j);
for(j = 146430; j < 146440; j++) _solve(b, j);
for(j = 147270; j < 147280; j++) _solve(b, j);
for(j = 148110; j < 148120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 148950; j < 148960; j++) _solve(b, j);
for(j = 149790; j < 149800; j++) _solve(b, j);
for(j = 150630; j < 150640; j++) _solve(b, j);
for(j = 151470; j < 151480; j++) _solve(b, j);
for(j = 152310; j < 152320; j++) _solve(b, j);
for(j = 153150; j < 153160; j++) _solve(b, j);
for(j = 153990; j < 154000; j++) _solve(b, j);
for(j = 154830; j < 154840; j++) _solve(b, j);
for(j = 155670; j < 155680; j++) _solve(b, j);
for(j = 156510; j < 156520; j++) _solve(b, j);
for(j = 157350; j < 157360; j++) _solve(b, j);
for(j = 158190; j < 158200; j++) _solve(b, j);
for(j = 159030; j < 159040; j++) _solve(b, j);
for(j = 159870; j < 159880; j++) _solve(b, j);
for(j = 160710; j < 160720; j++) _solve(b, j);
for(j = 161550; j < 161560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 162390; j < 162400; j++) _solve(b, j);
for(j = 163230; j < 163240; j++) _solve(b, j);
for(j = 164070; j < 164080; j++) _solve(b, j);
for(j = 164910; j < 164920; j++) _solve(b, j);
for(j = 165750; j < 165760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 96040; j < 96050; j++) _solve(b, j);
for(j = 96880; j < 96890; j++) _solve(b, j);
for(j = 97720; j < 97730; j++) _solve(b, j);
for(j = 98560; j < 98570; j++) _solve(b, j);
for(j = 99400; j < 99410; j++) _solve(b, j);
for(j = 100240; j < 100250; j++) _solve(b, j);
for(j = 101080; j < 101090; j++) _solve(b, j);
for(j = 101920; j < 101930; j++) _solve(b, j);
for(j = 102760; j < 102770; j++) _solve(b, j);
for(j = 103600; j < 103610; j++) _solve(b, j);
for(j = 104440; j < 104450; j++) _solve(b, j);
for(j = 105280; j < 105290; j++) _solve(b, j);
for(j = 106120; j < 106130; j++) _solve(b, j);
for(j = 106960; j < 106970; j++) _solve(b, j);
for(j = 107800; j < 107810; j++) _solve(b, j);
for(j = 108640; j < 108650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 109480; j < 109490; j++) _solve(b, j);
for(j = 110320; j < 110330; j++) _solve(b, j);
for(j = 111160; j < 111170; j++) _solve(b, j);
for(j = 112000; j < 112010; j++) _solve(b, j);
for(j = 112840; j < 112850; j++) _solve(b, j);
for(j = 113680; j < 113690; j++) _solve(b, j);
for(j = 114520; j < 114530; j++) _solve(b, j);
for(j = 115360; j < 115370; j++) _solve(b, j);
for(j = 116200; j < 116210; j++) _solve(b, j);
for(j = 117040; j < 117050; j++) _solve(b, j);
for(j = 117880; j < 117890; j++) _solve(b, j);
for(j = 118720; j < 118730; j++) _solve(b, j);
for(j = 119560; j < 119570; j++) _solve(b, j);
for(j = 120400; j < 120410; j++) _solve(b, j);
for(j = 121240; j < 121250; j++) _solve(b, j);
for(j = 122080; j < 122090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 122920; j < 122930; j++) _solve(b, j);
for(j = 123760; j < 123770; j++) _solve(b, j);
for(j = 124600; j < 124610; j++) _solve(b, j);
for(j = 125440; j < 125450; j++) _solve(b, j);
for(j = 126280; j < 126290; j++) _solve(b, j);
for(j = 127120; j < 127130; j++) _solve(b, j);
for(j = 127960; j < 127970; j++) _solve(b, j);
for(j = 128800; j < 128810; j++) _solve(b, j);
for(j = 129640; j < 129650; j++) _solve(b, j);
for(j = 130480; j < 130490; j++) _solve(b, j);
for(j = 131320; j < 131330; j++) _solve(b, j);
for(j = 132160; j < 132170; j++) _solve(b, j);
for(j = 133000; j < 133010; j++) _solve(b, j);
for(j = 133840; j < 133850; j++) _solve(b, j);
for(j = 134680; j < 134690; j++) _solve(b, j);
for(j = 135520; j < 135530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 136360; j < 136370; j++) _solve(b, j);
for(j = 137200; j < 137210; j++) _solve(b, j);
for(j = 138040; j < 138050; j++) _solve(b, j);
for(j = 138880; j < 138890; j++) _solve(b, j);
for(j = 139720; j < 139730; j++) _solve(b, j);
for(j = 140560; j < 140570; j++) _solve(b, j);
for(j = 141400; j < 141410; j++) _solve(b, j);
for(j = 142240; j < 142250; j++) _solve(b, j);
for(j = 143080; j < 143090; j++) _solve(b, j);
for(j = 143920; j < 143930; j++) _solve(b, j);
for(j = 144760; j < 144770; j++) _solve(b, j);
for(j = 145600; j < 145610; j++) _solve(b, j);
for(j = 146440; j < 146450; j++) _solve(b, j);
for(j = 147280; j < 147290; j++) _solve(b, j);
for(j = 148120; j < 148130; j++) _solve(b, j);
for(j = 148960; j < 148970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 149800; j < 149810; j++) _solve(b, j);
for(j = 150640; j < 150650; j++) _solve(b, j);
for(j = 151480; j < 151490; j++) _solve(b, j);
for(j = 152320; j < 152330; j++) _solve(b, j);
for(j = 153160; j < 153170; j++) _solve(b, j);
for(j = 154000; j < 154010; j++) _solve(b, j);
for(j = 154840; j < 154850; j++) _solve(b, j);
for(j = 155680; j < 155690; j++) _solve(b, j);
for(j = 156520; j < 156530; j++) _solve(b, j);
for(j = 157360; j < 157370; j++) _solve(b, j);
for(j = 158200; j < 158210; j++) _solve(b, j);
for(j = 159040; j < 159050; j++) _solve(b, j);
for(j = 159880; j < 159890; j++) _solve(b, j);
for(j = 160720; j < 160730; j++) _solve(b, j);
for(j = 161560; j < 161570; j++) _solve(b, j);
for(j = 162400; j < 162410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 163240; j < 163250; j++) _solve(b, j);
for(j = 164080; j < 164090; j++) _solve(b, j);
for(j = 164920; j < 164930; j++) _solve(b, j);
for(j = 165760; j < 165770; j++) _solve(b, j);
for(j = 166600; j < 166610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 96890; j < 96900; j++) _solve(b, j);
for(j = 97730; j < 97740; j++) _solve(b, j);
for(j = 98570; j < 98580; j++) _solve(b, j);
for(j = 99410; j < 99420; j++) _solve(b, j);
for(j = 100250; j < 100260; j++) _solve(b, j);
for(j = 101090; j < 101100; j++) _solve(b, j);
for(j = 101930; j < 101940; j++) _solve(b, j);
for(j = 102770; j < 102780; j++) _solve(b, j);
for(j = 103610; j < 103620; j++) _solve(b, j);
for(j = 104450; j < 104460; j++) _solve(b, j);
for(j = 105290; j < 105300; j++) _solve(b, j);
for(j = 106130; j < 106140; j++) _solve(b, j);
for(j = 106970; j < 106980; j++) _solve(b, j);
for(j = 107810; j < 107820; j++) _solve(b, j);
for(j = 108650; j < 108660; j++) _solve(b, j);
for(j = 109490; j < 109500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 110330; j < 110340; j++) _solve(b, j);
for(j = 111170; j < 111180; j++) _solve(b, j);
for(j = 112010; j < 112020; j++) _solve(b, j);
for(j = 112850; j < 112860; j++) _solve(b, j);
for(j = 113690; j < 113700; j++) _solve(b, j);
for(j = 114530; j < 114540; j++) _solve(b, j);
for(j = 115370; j < 115380; j++) _solve(b, j);
for(j = 116210; j < 116220; j++) _solve(b, j);
for(j = 117050; j < 117060; j++) _solve(b, j);
for(j = 117890; j < 117900; j++) _solve(b, j);
for(j = 118730; j < 118740; j++) _solve(b, j);
for(j = 119570; j < 119580; j++) _solve(b, j);
for(j = 120410; j < 120420; j++) _solve(b, j);
for(j = 121250; j < 121260; j++) _solve(b, j);
for(j = 122090; j < 122100; j++) _solve(b, j);
for(j = 122930; j < 122940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 123770; j < 123780; j++) _solve(b, j);
for(j = 124610; j < 124620; j++) _solve(b, j);
for(j = 125450; j < 125460; j++) _solve(b, j);
for(j = 126290; j < 126300; j++) _solve(b, j);
for(j = 127130; j < 127140; j++) _solve(b, j);
for(j = 127970; j < 127980; j++) _solve(b, j);
for(j = 128810; j < 128820; j++) _solve(b, j);
for(j = 129650; j < 129660; j++) _solve(b, j);
for(j = 130490; j < 130500; j++) _solve(b, j);
for(j = 131330; j < 131340; j++) _solve(b, j);
for(j = 132170; j < 132180; j++) _solve(b, j);
for(j = 133010; j < 133020; j++) _solve(b, j);
for(j = 133850; j < 133860; j++) _solve(b, j);
for(j = 134690; j < 134700; j++) _solve(b, j);
for(j = 135530; j < 135540; j++) _solve(b, j);
for(j = 136370; j < 136380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 137210; j < 137220; j++) _solve(b, j);
for(j = 138050; j < 138060; j++) _solve(b, j);
for(j = 138890; j < 138900; j++) _solve(b, j);
for(j = 139730; j < 139740; j++) _solve(b, j);
for(j = 140570; j < 140580; j++) _solve(b, j);
for(j = 141410; j < 141420; j++) _solve(b, j);
for(j = 142250; j < 142260; j++) _solve(b, j);
for(j = 143090; j < 143100; j++) _solve(b, j);
for(j = 143930; j < 143940; j++) _solve(b, j);
for(j = 144770; j < 144780; j++) _solve(b, j);
for(j = 145610; j < 145620; j++) _solve(b, j);
for(j = 146450; j < 146460; j++) _solve(b, j);
for(j = 147290; j < 147300; j++) _solve(b, j);
for(j = 148130; j < 148140; j++) _solve(b, j);
for(j = 148970; j < 148980; j++) _solve(b, j);
for(j = 149810; j < 149820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 150650; j < 150660; j++) _solve(b, j);
for(j = 151490; j < 151500; j++) _solve(b, j);
for(j = 152330; j < 152340; j++) _solve(b, j);
for(j = 153170; j < 153180; j++) _solve(b, j);
for(j = 154010; j < 154020; j++) _solve(b, j);
for(j = 154850; j < 154860; j++) _solve(b, j);
for(j = 155690; j < 155700; j++) _solve(b, j);
for(j = 156530; j < 156540; j++) _solve(b, j);
for(j = 157370; j < 157380; j++) _solve(b, j);
for(j = 158210; j < 158220; j++) _solve(b, j);
for(j = 159050; j < 159060; j++) _solve(b, j);
for(j = 159890; j < 159900; j++) _solve(b, j);
for(j = 160730; j < 160740; j++) _solve(b, j);
for(j = 161570; j < 161580; j++) _solve(b, j);
for(j = 162410; j < 162420; j++) _solve(b, j);
for(j = 163250; j < 163260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 164090; j < 164100; j++) _solve(b, j);
for(j = 164930; j < 164940; j++) _solve(b, j);
for(j = 165770; j < 165780; j++) _solve(b, j);
for(j = 166610; j < 166620; j++) _solve(b, j);
for(j = 167450; j < 167460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 97740; j < 97750; j++) _solve(b, j);
for(j = 98580; j < 98590; j++) _solve(b, j);
for(j = 99420; j < 99430; j++) _solve(b, j);
for(j = 100260; j < 100270; j++) _solve(b, j);
for(j = 101100; j < 101110; j++) _solve(b, j);
for(j = 101940; j < 101950; j++) _solve(b, j);
for(j = 102780; j < 102790; j++) _solve(b, j);
for(j = 103620; j < 103630; j++) _solve(b, j);
for(j = 104460; j < 104470; j++) _solve(b, j);
for(j = 105300; j < 105310; j++) _solve(b, j);
for(j = 106140; j < 106150; j++) _solve(b, j);
for(j = 106980; j < 106990; j++) _solve(b, j);
for(j = 107820; j < 107830; j++) _solve(b, j);
for(j = 108660; j < 108670; j++) _solve(b, j);
for(j = 109500; j < 109510; j++) _solve(b, j);
for(j = 110340; j < 110350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 111180; j < 111190; j++) _solve(b, j);
for(j = 112020; j < 112030; j++) _solve(b, j);
for(j = 112860; j < 112870; j++) _solve(b, j);
for(j = 113700; j < 113710; j++) _solve(b, j);
for(j = 114540; j < 114550; j++) _solve(b, j);
for(j = 115380; j < 115390; j++) _solve(b, j);
for(j = 116220; j < 116230; j++) _solve(b, j);
for(j = 117060; j < 117070; j++) _solve(b, j);
for(j = 117900; j < 117910; j++) _solve(b, j);
for(j = 118740; j < 118750; j++) _solve(b, j);
for(j = 119580; j < 119590; j++) _solve(b, j);
for(j = 120420; j < 120430; j++) _solve(b, j);
for(j = 121260; j < 121270; j++) _solve(b, j);
for(j = 122100; j < 122110; j++) _solve(b, j);
for(j = 122940; j < 122950; j++) _solve(b, j);
for(j = 123780; j < 123790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 124620; j < 124630; j++) _solve(b, j);
for(j = 125460; j < 125470; j++) _solve(b, j);
for(j = 126300; j < 126310; j++) _solve(b, j);
for(j = 127140; j < 127150; j++) _solve(b, j);
for(j = 127980; j < 127990; j++) _solve(b, j);
for(j = 128820; j < 128830; j++) _solve(b, j);
for(j = 129660; j < 129670; j++) _solve(b, j);
for(j = 130500; j < 130510; j++) _solve(b, j);
for(j = 131340; j < 131350; j++) _solve(b, j);
for(j = 132180; j < 132190; j++) _solve(b, j);
for(j = 133020; j < 133030; j++) _solve(b, j);
for(j = 133860; j < 133870; j++) _solve(b, j);
for(j = 134700; j < 134710; j++) _solve(b, j);
for(j = 135540; j < 135550; j++) _solve(b, j);
for(j = 136380; j < 136390; j++) _solve(b, j);
for(j = 137220; j < 137230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 138060; j < 138070; j++) _solve(b, j);
for(j = 138900; j < 138910; j++) _solve(b, j);
for(j = 139740; j < 139750; j++) _solve(b, j);
for(j = 140580; j < 140590; j++) _solve(b, j);
for(j = 141420; j < 141430; j++) _solve(b, j);
for(j = 142260; j < 142270; j++) _solve(b, j);
for(j = 143100; j < 143110; j++) _solve(b, j);
for(j = 143940; j < 143950; j++) _solve(b, j);
for(j = 144780; j < 144790; j++) _solve(b, j);
for(j = 145620; j < 145630; j++) _solve(b, j);
for(j = 146460; j < 146470; j++) _solve(b, j);
for(j = 147300; j < 147310; j++) _solve(b, j);
for(j = 148140; j < 148150; j++) _solve(b, j);
for(j = 148980; j < 148990; j++) _solve(b, j);
for(j = 149820; j < 149830; j++) _solve(b, j);
for(j = 150660; j < 150670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 151500; j < 151510; j++) _solve(b, j);
for(j = 152340; j < 152350; j++) _solve(b, j);
for(j = 153180; j < 153190; j++) _solve(b, j);
for(j = 154020; j < 154030; j++) _solve(b, j);
for(j = 154860; j < 154870; j++) _solve(b, j);
for(j = 155700; j < 155710; j++) _solve(b, j);
for(j = 156540; j < 156550; j++) _solve(b, j);
for(j = 157380; j < 157390; j++) _solve(b, j);
for(j = 158220; j < 158230; j++) _solve(b, j);
for(j = 159060; j < 159070; j++) _solve(b, j);
for(j = 159900; j < 159910; j++) _solve(b, j);
for(j = 160740; j < 160750; j++) _solve(b, j);
for(j = 161580; j < 161590; j++) _solve(b, j);
for(j = 162420; j < 162430; j++) _solve(b, j);
for(j = 163260; j < 163270; j++) _solve(b, j);
for(j = 164100; j < 164110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 164940; j < 164950; j++) _solve(b, j);
for(j = 165780; j < 165790; j++) _solve(b, j);
for(j = 166620; j < 166630; j++) _solve(b, j);
for(j = 167460; j < 167470; j++) _solve(b, j);
for(j = 168300; j < 168310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 98590; j < 98600; j++) _solve(b, j);
for(j = 99430; j < 99440; j++) _solve(b, j);
for(j = 100270; j < 100280; j++) _solve(b, j);
for(j = 101110; j < 101120; j++) _solve(b, j);
for(j = 101950; j < 101960; j++) _solve(b, j);
for(j = 102790; j < 102800; j++) _solve(b, j);
for(j = 103630; j < 103640; j++) _solve(b, j);
for(j = 104470; j < 104480; j++) _solve(b, j);
for(j = 105310; j < 105320; j++) _solve(b, j);
for(j = 106150; j < 106160; j++) _solve(b, j);
for(j = 106990; j < 107000; j++) _solve(b, j);
for(j = 107830; j < 107840; j++) _solve(b, j);
for(j = 108670; j < 108680; j++) _solve(b, j);
for(j = 109510; j < 109520; j++) _solve(b, j);
for(j = 110350; j < 110360; j++) _solve(b, j);
for(j = 111190; j < 111200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 112030; j < 112040; j++) _solve(b, j);
for(j = 112870; j < 112880; j++) _solve(b, j);
for(j = 113710; j < 113720; j++) _solve(b, j);
for(j = 114550; j < 114560; j++) _solve(b, j);
for(j = 115390; j < 115400; j++) _solve(b, j);
for(j = 116230; j < 116240; j++) _solve(b, j);
for(j = 117070; j < 117080; j++) _solve(b, j);
for(j = 117910; j < 117920; j++) _solve(b, j);
for(j = 118750; j < 118760; j++) _solve(b, j);
for(j = 119590; j < 119600; j++) _solve(b, j);
for(j = 120430; j < 120440; j++) _solve(b, j);
for(j = 121270; j < 121280; j++) _solve(b, j);
for(j = 122110; j < 122120; j++) _solve(b, j);
for(j = 122950; j < 122960; j++) _solve(b, j);
for(j = 123790; j < 123800; j++) _solve(b, j);
for(j = 124630; j < 124640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 125470; j < 125480; j++) _solve(b, j);
for(j = 126310; j < 126320; j++) _solve(b, j);
for(j = 127150; j < 127160; j++) _solve(b, j);
for(j = 127990; j < 128000; j++) _solve(b, j);
for(j = 128830; j < 128840; j++) _solve(b, j);
for(j = 129670; j < 129680; j++) _solve(b, j);
for(j = 130510; j < 130520; j++) _solve(b, j);
for(j = 131350; j < 131360; j++) _solve(b, j);
for(j = 132190; j < 132200; j++) _solve(b, j);
for(j = 133030; j < 133040; j++) _solve(b, j);
for(j = 133870; j < 133880; j++) _solve(b, j);
for(j = 134710; j < 134720; j++) _solve(b, j);
for(j = 135550; j < 135560; j++) _solve(b, j);
for(j = 136390; j < 136400; j++) _solve(b, j);
for(j = 137230; j < 137240; j++) _solve(b, j);
for(j = 138070; j < 138080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 138910; j < 138920; j++) _solve(b, j);
for(j = 139750; j < 139760; j++) _solve(b, j);
for(j = 140590; j < 140600; j++) _solve(b, j);
for(j = 141430; j < 141440; j++) _solve(b, j);
for(j = 142270; j < 142280; j++) _solve(b, j);
for(j = 143110; j < 143120; j++) _solve(b, j);
for(j = 143950; j < 143960; j++) _solve(b, j);
for(j = 144790; j < 144800; j++) _solve(b, j);
for(j = 145630; j < 145640; j++) _solve(b, j);
for(j = 146470; j < 146480; j++) _solve(b, j);
for(j = 147310; j < 147320; j++) _solve(b, j);
for(j = 148150; j < 148160; j++) _solve(b, j);
for(j = 148990; j < 149000; j++) _solve(b, j);
for(j = 149830; j < 149840; j++) _solve(b, j);
for(j = 150670; j < 150680; j++) _solve(b, j);
for(j = 151510; j < 151520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 152350; j < 152360; j++) _solve(b, j);
for(j = 153190; j < 153200; j++) _solve(b, j);
for(j = 154030; j < 154040; j++) _solve(b, j);
for(j = 154870; j < 154880; j++) _solve(b, j);
for(j = 155710; j < 155720; j++) _solve(b, j);
for(j = 156550; j < 156560; j++) _solve(b, j);
for(j = 157390; j < 157400; j++) _solve(b, j);
for(j = 158230; j < 158240; j++) _solve(b, j);
for(j = 159070; j < 159080; j++) _solve(b, j);
for(j = 159910; j < 159920; j++) _solve(b, j);
for(j = 160750; j < 160760; j++) _solve(b, j);
for(j = 161590; j < 161600; j++) _solve(b, j);
for(j = 162430; j < 162440; j++) _solve(b, j);
for(j = 163270; j < 163280; j++) _solve(b, j);
for(j = 164110; j < 164120; j++) _solve(b, j);
for(j = 164950; j < 164960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 165790; j < 165800; j++) _solve(b, j);
for(j = 166630; j < 166640; j++) _solve(b, j);
for(j = 167470; j < 167480; j++) _solve(b, j);
for(j = 168310; j < 168320; j++) _solve(b, j);
for(j = 169150; j < 169160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 99440; j < 99450; j++) _solve(b, j);
for(j = 100280; j < 100290; j++) _solve(b, j);
for(j = 101120; j < 101130; j++) _solve(b, j);
for(j = 101960; j < 101970; j++) _solve(b, j);
for(j = 102800; j < 102810; j++) _solve(b, j);
for(j = 103640; j < 103650; j++) _solve(b, j);
for(j = 104480; j < 104490; j++) _solve(b, j);
for(j = 105320; j < 105330; j++) _solve(b, j);
for(j = 106160; j < 106170; j++) _solve(b, j);
for(j = 107000; j < 107010; j++) _solve(b, j);
for(j = 107840; j < 107850; j++) _solve(b, j);
for(j = 108680; j < 108690; j++) _solve(b, j);
for(j = 109520; j < 109530; j++) _solve(b, j);
for(j = 110360; j < 110370; j++) _solve(b, j);
for(j = 111200; j < 111210; j++) _solve(b, j);
for(j = 112040; j < 112050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 112880; j < 112890; j++) _solve(b, j);
for(j = 113720; j < 113730; j++) _solve(b, j);
for(j = 114560; j < 114570; j++) _solve(b, j);
for(j = 115400; j < 115410; j++) _solve(b, j);
for(j = 116240; j < 116250; j++) _solve(b, j);
for(j = 117080; j < 117090; j++) _solve(b, j);
for(j = 117920; j < 117930; j++) _solve(b, j);
for(j = 118760; j < 118770; j++) _solve(b, j);
for(j = 119600; j < 119610; j++) _solve(b, j);
for(j = 120440; j < 120450; j++) _solve(b, j);
for(j = 121280; j < 121290; j++) _solve(b, j);
for(j = 122120; j < 122130; j++) _solve(b, j);
for(j = 122960; j < 122970; j++) _solve(b, j);
for(j = 123800; j < 123810; j++) _solve(b, j);
for(j = 124640; j < 124650; j++) _solve(b, j);
for(j = 125480; j < 125490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 126320; j < 126330; j++) _solve(b, j);
for(j = 127160; j < 127170; j++) _solve(b, j);
for(j = 128000; j < 128010; j++) _solve(b, j);
for(j = 128840; j < 128850; j++) _solve(b, j);
for(j = 129680; j < 129690; j++) _solve(b, j);
for(j = 130520; j < 130530; j++) _solve(b, j);
for(j = 131360; j < 131370; j++) _solve(b, j);
for(j = 132200; j < 132210; j++) _solve(b, j);
for(j = 133040; j < 133050; j++) _solve(b, j);
for(j = 133880; j < 133890; j++) _solve(b, j);
for(j = 134720; j < 134730; j++) _solve(b, j);
for(j = 135560; j < 135570; j++) _solve(b, j);
for(j = 136400; j < 136410; j++) _solve(b, j);
for(j = 137240; j < 137250; j++) _solve(b, j);
for(j = 138080; j < 138090; j++) _solve(b, j);
for(j = 138920; j < 138930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 139760; j < 139770; j++) _solve(b, j);
for(j = 140600; j < 140610; j++) _solve(b, j);
for(j = 141440; j < 141450; j++) _solve(b, j);
for(j = 142280; j < 142290; j++) _solve(b, j);
for(j = 143120; j < 143130; j++) _solve(b, j);
for(j = 143960; j < 143970; j++) _solve(b, j);
for(j = 144800; j < 144810; j++) _solve(b, j);
for(j = 145640; j < 145650; j++) _solve(b, j);
for(j = 146480; j < 146490; j++) _solve(b, j);
for(j = 147320; j < 147330; j++) _solve(b, j);
for(j = 148160; j < 148170; j++) _solve(b, j);
for(j = 149000; j < 149010; j++) _solve(b, j);
for(j = 149840; j < 149850; j++) _solve(b, j);
for(j = 150680; j < 150690; j++) _solve(b, j);
for(j = 151520; j < 151530; j++) _solve(b, j);
for(j = 152360; j < 152370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 153200; j < 153210; j++) _solve(b, j);
for(j = 154040; j < 154050; j++) _solve(b, j);
for(j = 154880; j < 154890; j++) _solve(b, j);
for(j = 155720; j < 155730; j++) _solve(b, j);
for(j = 156560; j < 156570; j++) _solve(b, j);
for(j = 157400; j < 157410; j++) _solve(b, j);
for(j = 158240; j < 158250; j++) _solve(b, j);
for(j = 159080; j < 159090; j++) _solve(b, j);
for(j = 159920; j < 159930; j++) _solve(b, j);
for(j = 160760; j < 160770; j++) _solve(b, j);
for(j = 161600; j < 161610; j++) _solve(b, j);
for(j = 162440; j < 162450; j++) _solve(b, j);
for(j = 163280; j < 163290; j++) _solve(b, j);
for(j = 164120; j < 164130; j++) _solve(b, j);
for(j = 164960; j < 164970; j++) _solve(b, j);
for(j = 165800; j < 165810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 166640; j < 166650; j++) _solve(b, j);
for(j = 167480; j < 167490; j++) _solve(b, j);
for(j = 168320; j < 168330; j++) _solve(b, j);
for(j = 169160; j < 169170; j++) _solve(b, j);
for(j = 170000; j < 170010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 100290; j < 100300; j++) _solve(b, j);
for(j = 101130; j < 101140; j++) _solve(b, j);
for(j = 101970; j < 101980; j++) _solve(b, j);
for(j = 102810; j < 102820; j++) _solve(b, j);
for(j = 103650; j < 103660; j++) _solve(b, j);
for(j = 104490; j < 104500; j++) _solve(b, j);
for(j = 105330; j < 105340; j++) _solve(b, j);
for(j = 106170; j < 106180; j++) _solve(b, j);
for(j = 107010; j < 107020; j++) _solve(b, j);
for(j = 107850; j < 107860; j++) _solve(b, j);
for(j = 108690; j < 108700; j++) _solve(b, j);
for(j = 109530; j < 109540; j++) _solve(b, j);
for(j = 110370; j < 110380; j++) _solve(b, j);
for(j = 111210; j < 111220; j++) _solve(b, j);
for(j = 112050; j < 112060; j++) _solve(b, j);
for(j = 112890; j < 112900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 113730; j < 113740; j++) _solve(b, j);
for(j = 114570; j < 114580; j++) _solve(b, j);
for(j = 115410; j < 115420; j++) _solve(b, j);
for(j = 116250; j < 116260; j++) _solve(b, j);
for(j = 117090; j < 117100; j++) _solve(b, j);
for(j = 117930; j < 117940; j++) _solve(b, j);
for(j = 118770; j < 118780; j++) _solve(b, j);
for(j = 119610; j < 119620; j++) _solve(b, j);
for(j = 120450; j < 120460; j++) _solve(b, j);
for(j = 121290; j < 121300; j++) _solve(b, j);
for(j = 122130; j < 122140; j++) _solve(b, j);
for(j = 122970; j < 122980; j++) _solve(b, j);
for(j = 123810; j < 123820; j++) _solve(b, j);
for(j = 124650; j < 124660; j++) _solve(b, j);
for(j = 125490; j < 125500; j++) _solve(b, j);
for(j = 126330; j < 126340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 127170; j < 127180; j++) _solve(b, j);
for(j = 128010; j < 128020; j++) _solve(b, j);
for(j = 128850; j < 128860; j++) _solve(b, j);
for(j = 129690; j < 129700; j++) _solve(b, j);
for(j = 130530; j < 130540; j++) _solve(b, j);
for(j = 131370; j < 131380; j++) _solve(b, j);
for(j = 132210; j < 132220; j++) _solve(b, j);
for(j = 133050; j < 133060; j++) _solve(b, j);
for(j = 133890; j < 133900; j++) _solve(b, j);
for(j = 134730; j < 134740; j++) _solve(b, j);
for(j = 135570; j < 135580; j++) _solve(b, j);
for(j = 136410; j < 136420; j++) _solve(b, j);
for(j = 137250; j < 137260; j++) _solve(b, j);
for(j = 138090; j < 138100; j++) _solve(b, j);
for(j = 138930; j < 138940; j++) _solve(b, j);
for(j = 139770; j < 139780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 140610; j < 140620; j++) _solve(b, j);
for(j = 141450; j < 141460; j++) _solve(b, j);
for(j = 142290; j < 142300; j++) _solve(b, j);
for(j = 143130; j < 143140; j++) _solve(b, j);
for(j = 143970; j < 143980; j++) _solve(b, j);
for(j = 144810; j < 144820; j++) _solve(b, j);
for(j = 145650; j < 145660; j++) _solve(b, j);
for(j = 146490; j < 146500; j++) _solve(b, j);
for(j = 147330; j < 147340; j++) _solve(b, j);
for(j = 148170; j < 148180; j++) _solve(b, j);
for(j = 149010; j < 149020; j++) _solve(b, j);
for(j = 149850; j < 149860; j++) _solve(b, j);
for(j = 150690; j < 150700; j++) _solve(b, j);
for(j = 151530; j < 151540; j++) _solve(b, j);
for(j = 152370; j < 152380; j++) _solve(b, j);
for(j = 153210; j < 153220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 154050; j < 154060; j++) _solve(b, j);
for(j = 154890; j < 154900; j++) _solve(b, j);
for(j = 155730; j < 155740; j++) _solve(b, j);
for(j = 156570; j < 156580; j++) _solve(b, j);
for(j = 157410; j < 157420; j++) _solve(b, j);
for(j = 158250; j < 158260; j++) _solve(b, j);
for(j = 159090; j < 159100; j++) _solve(b, j);
for(j = 159930; j < 159940; j++) _solve(b, j);
for(j = 160770; j < 160780; j++) _solve(b, j);
for(j = 161610; j < 161620; j++) _solve(b, j);
for(j = 162450; j < 162460; j++) _solve(b, j);
for(j = 163290; j < 163300; j++) _solve(b, j);
for(j = 164130; j < 164140; j++) _solve(b, j);
for(j = 164970; j < 164980; j++) _solve(b, j);
for(j = 165810; j < 165820; j++) _solve(b, j);
for(j = 166650; j < 166660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 167490; j < 167500; j++) _solve(b, j);
for(j = 168330; j < 168340; j++) _solve(b, j);
for(j = 169170; j < 169180; j++) _solve(b, j);
for(j = 170010; j < 170020; j++) _solve(b, j);
for(j = 170850; j < 170860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 101140; j < 101150; j++) _solve(b, j);
for(j = 101980; j < 101990; j++) _solve(b, j);
for(j = 102820; j < 102830; j++) _solve(b, j);
for(j = 103660; j < 103670; j++) _solve(b, j);
for(j = 104500; j < 104510; j++) _solve(b, j);
for(j = 105340; j < 105350; j++) _solve(b, j);
for(j = 106180; j < 106190; j++) _solve(b, j);
for(j = 107020; j < 107030; j++) _solve(b, j);
for(j = 107860; j < 107870; j++) _solve(b, j);
for(j = 108700; j < 108710; j++) _solve(b, j);
for(j = 109540; j < 109550; j++) _solve(b, j);
for(j = 110380; j < 110390; j++) _solve(b, j);
for(j = 111220; j < 111230; j++) _solve(b, j);
for(j = 112060; j < 112070; j++) _solve(b, j);
for(j = 112900; j < 112910; j++) _solve(b, j);
for(j = 113740; j < 113750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 114580; j < 114590; j++) _solve(b, j);
for(j = 115420; j < 115430; j++) _solve(b, j);
for(j = 116260; j < 116270; j++) _solve(b, j);
for(j = 117100; j < 117110; j++) _solve(b, j);
for(j = 117940; j < 117950; j++) _solve(b, j);
for(j = 118780; j < 118790; j++) _solve(b, j);
for(j = 119620; j < 119630; j++) _solve(b, j);
for(j = 120460; j < 120470; j++) _solve(b, j);
for(j = 121300; j < 121310; j++) _solve(b, j);
for(j = 122140; j < 122150; j++) _solve(b, j);
for(j = 122980; j < 122990; j++) _solve(b, j);
for(j = 123820; j < 123830; j++) _solve(b, j);
for(j = 124660; j < 124670; j++) _solve(b, j);
for(j = 125500; j < 125510; j++) _solve(b, j);
for(j = 126340; j < 126350; j++) _solve(b, j);
for(j = 127180; j < 127190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 128020; j < 128030; j++) _solve(b, j);
for(j = 128860; j < 128870; j++) _solve(b, j);
for(j = 129700; j < 129710; j++) _solve(b, j);
for(j = 130540; j < 130550; j++) _solve(b, j);
for(j = 131380; j < 131390; j++) _solve(b, j);
for(j = 132220; j < 132230; j++) _solve(b, j);
for(j = 133060; j < 133070; j++) _solve(b, j);
for(j = 133900; j < 133910; j++) _solve(b, j);
for(j = 134740; j < 134750; j++) _solve(b, j);
for(j = 135580; j < 135590; j++) _solve(b, j);
for(j = 136420; j < 136430; j++) _solve(b, j);
for(j = 137260; j < 137270; j++) _solve(b, j);
for(j = 138100; j < 138110; j++) _solve(b, j);
for(j = 138940; j < 138950; j++) _solve(b, j);
for(j = 139780; j < 139790; j++) _solve(b, j);
for(j = 140620; j < 140630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 141460; j < 141470; j++) _solve(b, j);
for(j = 142300; j < 142310; j++) _solve(b, j);
for(j = 143140; j < 143150; j++) _solve(b, j);
for(j = 143980; j < 143990; j++) _solve(b, j);
for(j = 144820; j < 144830; j++) _solve(b, j);
for(j = 145660; j < 145670; j++) _solve(b, j);
for(j = 146500; j < 146510; j++) _solve(b, j);
for(j = 147340; j < 147350; j++) _solve(b, j);
for(j = 148180; j < 148190; j++) _solve(b, j);
for(j = 149020; j < 149030; j++) _solve(b, j);
for(j = 149860; j < 149870; j++) _solve(b, j);
for(j = 150700; j < 150710; j++) _solve(b, j);
for(j = 151540; j < 151550; j++) _solve(b, j);
for(j = 152380; j < 152390; j++) _solve(b, j);
for(j = 153220; j < 153230; j++) _solve(b, j);
for(j = 154060; j < 154070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 154900; j < 154910; j++) _solve(b, j);
for(j = 155740; j < 155750; j++) _solve(b, j);
for(j = 156580; j < 156590; j++) _solve(b, j);
for(j = 157420; j < 157430; j++) _solve(b, j);
for(j = 158260; j < 158270; j++) _solve(b, j);
for(j = 159100; j < 159110; j++) _solve(b, j);
for(j = 159940; j < 159950; j++) _solve(b, j);
for(j = 160780; j < 160790; j++) _solve(b, j);
for(j = 161620; j < 161630; j++) _solve(b, j);
for(j = 162460; j < 162470; j++) _solve(b, j);
for(j = 163300; j < 163310; j++) _solve(b, j);
for(j = 164140; j < 164150; j++) _solve(b, j);
for(j = 164980; j < 164990; j++) _solve(b, j);
for(j = 165820; j < 165830; j++) _solve(b, j);
for(j = 166660; j < 166670; j++) _solve(b, j);
for(j = 167500; j < 167510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 168340; j < 168350; j++) _solve(b, j);
for(j = 169180; j < 169190; j++) _solve(b, j);
for(j = 170020; j < 170030; j++) _solve(b, j);
for(j = 170860; j < 170870; j++) _solve(b, j);
for(j = 171700; j < 171710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 101990; j < 102000; j++) _solve(b, j);
for(j = 102830; j < 102840; j++) _solve(b, j);
for(j = 103670; j < 103680; j++) _solve(b, j);
for(j = 104510; j < 104520; j++) _solve(b, j);
for(j = 105350; j < 105360; j++) _solve(b, j);
for(j = 106190; j < 106200; j++) _solve(b, j);
for(j = 107030; j < 107040; j++) _solve(b, j);
for(j = 107870; j < 107880; j++) _solve(b, j);
for(j = 108710; j < 108720; j++) _solve(b, j);
for(j = 109550; j < 109560; j++) _solve(b, j);
for(j = 110390; j < 110400; j++) _solve(b, j);
for(j = 111230; j < 111240; j++) _solve(b, j);
for(j = 112070; j < 112080; j++) _solve(b, j);
for(j = 112910; j < 112920; j++) _solve(b, j);
for(j = 113750; j < 113760; j++) _solve(b, j);
for(j = 114590; j < 114600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 115430; j < 115440; j++) _solve(b, j);
for(j = 116270; j < 116280; j++) _solve(b, j);
for(j = 117110; j < 117120; j++) _solve(b, j);
for(j = 117950; j < 117960; j++) _solve(b, j);
for(j = 118790; j < 118800; j++) _solve(b, j);
for(j = 119630; j < 119640; j++) _solve(b, j);
for(j = 120470; j < 120480; j++) _solve(b, j);
for(j = 121310; j < 121320; j++) _solve(b, j);
for(j = 122150; j < 122160; j++) _solve(b, j);
for(j = 122990; j < 123000; j++) _solve(b, j);
for(j = 123830; j < 123840; j++) _solve(b, j);
for(j = 124670; j < 124680; j++) _solve(b, j);
for(j = 125510; j < 125520; j++) _solve(b, j);
for(j = 126350; j < 126360; j++) _solve(b, j);
for(j = 127190; j < 127200; j++) _solve(b, j);
for(j = 128030; j < 128040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 128870; j < 128880; j++) _solve(b, j);
for(j = 129710; j < 129720; j++) _solve(b, j);
for(j = 130550; j < 130560; j++) _solve(b, j);
for(j = 131390; j < 131400; j++) _solve(b, j);
for(j = 132230; j < 132240; j++) _solve(b, j);
for(j = 133070; j < 133080; j++) _solve(b, j);
for(j = 133910; j < 133920; j++) _solve(b, j);
for(j = 134750; j < 134760; j++) _solve(b, j);
for(j = 135590; j < 135600; j++) _solve(b, j);
for(j = 136430; j < 136440; j++) _solve(b, j);
for(j = 137270; j < 137280; j++) _solve(b, j);
for(j = 138110; j < 138120; j++) _solve(b, j);
for(j = 138950; j < 138960; j++) _solve(b, j);
for(j = 139790; j < 139800; j++) _solve(b, j);
for(j = 140630; j < 140640; j++) _solve(b, j);
for(j = 141470; j < 141480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 142310; j < 142320; j++) _solve(b, j);
for(j = 143150; j < 143160; j++) _solve(b, j);
for(j = 143990; j < 144000; j++) _solve(b, j);
for(j = 144830; j < 144840; j++) _solve(b, j);
for(j = 145670; j < 145680; j++) _solve(b, j);
for(j = 146510; j < 146520; j++) _solve(b, j);
for(j = 147350; j < 147360; j++) _solve(b, j);
for(j = 148190; j < 148200; j++) _solve(b, j);
for(j = 149030; j < 149040; j++) _solve(b, j);
for(j = 149870; j < 149880; j++) _solve(b, j);
for(j = 150710; j < 150720; j++) _solve(b, j);
for(j = 151550; j < 151560; j++) _solve(b, j);
for(j = 152390; j < 152400; j++) _solve(b, j);
for(j = 153230; j < 153240; j++) _solve(b, j);
for(j = 154070; j < 154080; j++) _solve(b, j);
for(j = 154910; j < 154920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 155750; j < 155760; j++) _solve(b, j);
for(j = 156590; j < 156600; j++) _solve(b, j);
for(j = 157430; j < 157440; j++) _solve(b, j);
for(j = 158270; j < 158280; j++) _solve(b, j);
for(j = 159110; j < 159120; j++) _solve(b, j);
for(j = 159950; j < 159960; j++) _solve(b, j);
for(j = 160790; j < 160800; j++) _solve(b, j);
for(j = 161630; j < 161640; j++) _solve(b, j);
for(j = 162470; j < 162480; j++) _solve(b, j);
for(j = 163310; j < 163320; j++) _solve(b, j);
for(j = 164150; j < 164160; j++) _solve(b, j);
for(j = 164990; j < 165000; j++) _solve(b, j);
for(j = 165830; j < 165840; j++) _solve(b, j);
for(j = 166670; j < 166680; j++) _solve(b, j);
for(j = 167510; j < 167520; j++) _solve(b, j);
for(j = 168350; j < 168360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 169190; j < 169200; j++) _solve(b, j);
for(j = 170030; j < 170040; j++) _solve(b, j);
for(j = 170870; j < 170880; j++) _solve(b, j);
for(j = 171710; j < 171720; j++) _solve(b, j);
for(j = 172550; j < 172560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 102840; j < 102850; j++) _solve(b, j);
for(j = 103680; j < 103690; j++) _solve(b, j);
for(j = 104520; j < 104530; j++) _solve(b, j);
for(j = 105360; j < 105370; j++) _solve(b, j);
for(j = 106200; j < 106210; j++) _solve(b, j);
for(j = 107040; j < 107050; j++) _solve(b, j);
for(j = 107880; j < 107890; j++) _solve(b, j);
for(j = 108720; j < 108730; j++) _solve(b, j);
for(j = 109560; j < 109570; j++) _solve(b, j);
for(j = 110400; j < 110410; j++) _solve(b, j);
for(j = 111240; j < 111250; j++) _solve(b, j);
for(j = 112080; j < 112090; j++) _solve(b, j);
for(j = 112920; j < 112930; j++) _solve(b, j);
for(j = 113760; j < 113770; j++) _solve(b, j);
for(j = 114600; j < 114610; j++) _solve(b, j);
for(j = 115440; j < 115450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 116280; j < 116290; j++) _solve(b, j);
for(j = 117120; j < 117130; j++) _solve(b, j);
for(j = 117960; j < 117970; j++) _solve(b, j);
for(j = 118800; j < 118810; j++) _solve(b, j);
for(j = 119640; j < 119650; j++) _solve(b, j);
for(j = 120480; j < 120490; j++) _solve(b, j);
for(j = 121320; j < 121330; j++) _solve(b, j);
for(j = 122160; j < 122170; j++) _solve(b, j);
for(j = 123000; j < 123010; j++) _solve(b, j);
for(j = 123840; j < 123850; j++) _solve(b, j);
for(j = 124680; j < 124690; j++) _solve(b, j);
for(j = 125520; j < 125530; j++) _solve(b, j);
for(j = 126360; j < 126370; j++) _solve(b, j);
for(j = 127200; j < 127210; j++) _solve(b, j);
for(j = 128040; j < 128050; j++) _solve(b, j);
for(j = 128880; j < 128890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 129720; j < 129730; j++) _solve(b, j);
for(j = 130560; j < 130570; j++) _solve(b, j);
for(j = 131400; j < 131410; j++) _solve(b, j);
for(j = 132240; j < 132250; j++) _solve(b, j);
for(j = 133080; j < 133090; j++) _solve(b, j);
for(j = 133920; j < 133930; j++) _solve(b, j);
for(j = 134760; j < 134770; j++) _solve(b, j);
for(j = 135600; j < 135610; j++) _solve(b, j);
for(j = 136440; j < 136450; j++) _solve(b, j);
for(j = 137280; j < 137290; j++) _solve(b, j);
for(j = 138120; j < 138130; j++) _solve(b, j);
for(j = 138960; j < 138970; j++) _solve(b, j);
for(j = 139800; j < 139810; j++) _solve(b, j);
for(j = 140640; j < 140650; j++) _solve(b, j);
for(j = 141480; j < 141490; j++) _solve(b, j);
for(j = 142320; j < 142330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 143160; j < 143170; j++) _solve(b, j);
for(j = 144000; j < 144010; j++) _solve(b, j);
for(j = 144840; j < 144850; j++) _solve(b, j);
for(j = 145680; j < 145690; j++) _solve(b, j);
for(j = 146520; j < 146530; j++) _solve(b, j);
for(j = 147360; j < 147370; j++) _solve(b, j);
for(j = 148200; j < 148210; j++) _solve(b, j);
for(j = 149040; j < 149050; j++) _solve(b, j);
for(j = 149880; j < 149890; j++) _solve(b, j);
for(j = 150720; j < 150730; j++) _solve(b, j);
for(j = 151560; j < 151570; j++) _solve(b, j);
for(j = 152400; j < 152410; j++) _solve(b, j);
for(j = 153240; j < 153250; j++) _solve(b, j);
for(j = 154080; j < 154090; j++) _solve(b, j);
for(j = 154920; j < 154930; j++) _solve(b, j);
for(j = 155760; j < 155770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 156600; j < 156610; j++) _solve(b, j);
for(j = 157440; j < 157450; j++) _solve(b, j);
for(j = 158280; j < 158290; j++) _solve(b, j);
for(j = 159120; j < 159130; j++) _solve(b, j);
for(j = 159960; j < 159970; j++) _solve(b, j);
for(j = 160800; j < 160810; j++) _solve(b, j);
for(j = 161640; j < 161650; j++) _solve(b, j);
for(j = 162480; j < 162490; j++) _solve(b, j);
for(j = 163320; j < 163330; j++) _solve(b, j);
for(j = 164160; j < 164170; j++) _solve(b, j);
for(j = 165000; j < 165010; j++) _solve(b, j);
for(j = 165840; j < 165850; j++) _solve(b, j);
for(j = 166680; j < 166690; j++) _solve(b, j);
for(j = 167520; j < 167530; j++) _solve(b, j);
for(j = 168360; j < 168370; j++) _solve(b, j);
for(j = 169200; j < 169210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 170040; j < 170050; j++) _solve(b, j);
for(j = 170880; j < 170890; j++) _solve(b, j);
for(j = 171720; j < 171730; j++) _solve(b, j);
for(j = 172560; j < 172570; j++) _solve(b, j);
for(j = 173400; j < 173410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 103690; j < 103700; j++) _solve(b, j);
for(j = 104530; j < 104540; j++) _solve(b, j);
for(j = 105370; j < 105380; j++) _solve(b, j);
for(j = 106210; j < 106220; j++) _solve(b, j);
for(j = 107050; j < 107060; j++) _solve(b, j);
for(j = 107890; j < 107900; j++) _solve(b, j);
for(j = 108730; j < 108740; j++) _solve(b, j);
for(j = 109570; j < 109580; j++) _solve(b, j);
for(j = 110410; j < 110420; j++) _solve(b, j);
for(j = 111250; j < 111260; j++) _solve(b, j);
for(j = 112090; j < 112100; j++) _solve(b, j);
for(j = 112930; j < 112940; j++) _solve(b, j);
for(j = 113770; j < 113780; j++) _solve(b, j);
for(j = 114610; j < 114620; j++) _solve(b, j);
for(j = 115450; j < 115460; j++) _solve(b, j);
for(j = 116290; j < 116300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 117130; j < 117140; j++) _solve(b, j);
for(j = 117970; j < 117980; j++) _solve(b, j);
for(j = 118810; j < 118820; j++) _solve(b, j);
for(j = 119650; j < 119660; j++) _solve(b, j);
for(j = 120490; j < 120500; j++) _solve(b, j);
for(j = 121330; j < 121340; j++) _solve(b, j);
for(j = 122170; j < 122180; j++) _solve(b, j);
for(j = 123010; j < 123020; j++) _solve(b, j);
for(j = 123850; j < 123860; j++) _solve(b, j);
for(j = 124690; j < 124700; j++) _solve(b, j);
for(j = 125530; j < 125540; j++) _solve(b, j);
for(j = 126370; j < 126380; j++) _solve(b, j);
for(j = 127210; j < 127220; j++) _solve(b, j);
for(j = 128050; j < 128060; j++) _solve(b, j);
for(j = 128890; j < 128900; j++) _solve(b, j);
for(j = 129730; j < 129740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 130570; j < 130580; j++) _solve(b, j);
for(j = 131410; j < 131420; j++) _solve(b, j);
for(j = 132250; j < 132260; j++) _solve(b, j);
for(j = 133090; j < 133100; j++) _solve(b, j);
for(j = 133930; j < 133940; j++) _solve(b, j);
for(j = 134770; j < 134780; j++) _solve(b, j);
for(j = 135610; j < 135620; j++) _solve(b, j);
for(j = 136450; j < 136460; j++) _solve(b, j);
for(j = 137290; j < 137300; j++) _solve(b, j);
for(j = 138130; j < 138140; j++) _solve(b, j);
for(j = 138970; j < 138980; j++) _solve(b, j);
for(j = 139810; j < 139820; j++) _solve(b, j);
for(j = 140650; j < 140660; j++) _solve(b, j);
for(j = 141490; j < 141500; j++) _solve(b, j);
for(j = 142330; j < 142340; j++) _solve(b, j);
for(j = 143170; j < 143180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 144010; j < 144020; j++) _solve(b, j);
for(j = 144850; j < 144860; j++) _solve(b, j);
for(j = 145690; j < 145700; j++) _solve(b, j);
for(j = 146530; j < 146540; j++) _solve(b, j);
for(j = 147370; j < 147380; j++) _solve(b, j);
for(j = 148210; j < 148220; j++) _solve(b, j);
for(j = 149050; j < 149060; j++) _solve(b, j);
for(j = 149890; j < 149900; j++) _solve(b, j);
for(j = 150730; j < 150740; j++) _solve(b, j);
for(j = 151570; j < 151580; j++) _solve(b, j);
for(j = 152410; j < 152420; j++) _solve(b, j);
for(j = 153250; j < 153260; j++) _solve(b, j);
for(j = 154090; j < 154100; j++) _solve(b, j);
for(j = 154930; j < 154940; j++) _solve(b, j);
for(j = 155770; j < 155780; j++) _solve(b, j);
for(j = 156610; j < 156620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 157450; j < 157460; j++) _solve(b, j);
for(j = 158290; j < 158300; j++) _solve(b, j);
for(j = 159130; j < 159140; j++) _solve(b, j);
for(j = 159970; j < 159980; j++) _solve(b, j);
for(j = 160810; j < 160820; j++) _solve(b, j);
for(j = 161650; j < 161660; j++) _solve(b, j);
for(j = 162490; j < 162500; j++) _solve(b, j);
for(j = 163330; j < 163340; j++) _solve(b, j);
for(j = 164170; j < 164180; j++) _solve(b, j);
for(j = 165010; j < 165020; j++) _solve(b, j);
for(j = 165850; j < 165860; j++) _solve(b, j);
for(j = 166690; j < 166700; j++) _solve(b, j);
for(j = 167530; j < 167540; j++) _solve(b, j);
for(j = 168370; j < 168380; j++) _solve(b, j);
for(j = 169210; j < 169220; j++) _solve(b, j);
for(j = 170050; j < 170060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 170890; j < 170900; j++) _solve(b, j);
for(j = 171730; j < 171740; j++) _solve(b, j);
for(j = 172570; j < 172580; j++) _solve(b, j);
for(j = 173410; j < 173420; j++) _solve(b, j);
for(j = 174250; j < 174260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 104540; j < 104550; j++) _solve(b, j);
for(j = 105380; j < 105390; j++) _solve(b, j);
for(j = 106220; j < 106230; j++) _solve(b, j);
for(j = 107060; j < 107070; j++) _solve(b, j);
for(j = 107900; j < 107910; j++) _solve(b, j);
for(j = 108740; j < 108750; j++) _solve(b, j);
for(j = 109580; j < 109590; j++) _solve(b, j);
for(j = 110420; j < 110430; j++) _solve(b, j);
for(j = 111260; j < 111270; j++) _solve(b, j);
for(j = 112100; j < 112110; j++) _solve(b, j);
for(j = 112940; j < 112950; j++) _solve(b, j);
for(j = 113780; j < 113790; j++) _solve(b, j);
for(j = 114620; j < 114630; j++) _solve(b, j);
for(j = 115460; j < 115470; j++) _solve(b, j);
for(j = 116300; j < 116310; j++) _solve(b, j);
for(j = 117140; j < 117150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 117980; j < 117990; j++) _solve(b, j);
for(j = 118820; j < 118830; j++) _solve(b, j);
for(j = 119660; j < 119670; j++) _solve(b, j);
for(j = 120500; j < 120510; j++) _solve(b, j);
for(j = 121340; j < 121350; j++) _solve(b, j);
for(j = 122180; j < 122190; j++) _solve(b, j);
for(j = 123020; j < 123030; j++) _solve(b, j);
for(j = 123860; j < 123870; j++) _solve(b, j);
for(j = 124700; j < 124710; j++) _solve(b, j);
for(j = 125540; j < 125550; j++) _solve(b, j);
for(j = 126380; j < 126390; j++) _solve(b, j);
for(j = 127220; j < 127230; j++) _solve(b, j);
for(j = 128060; j < 128070; j++) _solve(b, j);
for(j = 128900; j < 128910; j++) _solve(b, j);
for(j = 129740; j < 129750; j++) _solve(b, j);
for(j = 130580; j < 130590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 131420; j < 131430; j++) _solve(b, j);
for(j = 132260; j < 132270; j++) _solve(b, j);
for(j = 133100; j < 133110; j++) _solve(b, j);
for(j = 133940; j < 133950; j++) _solve(b, j);
for(j = 134780; j < 134790; j++) _solve(b, j);
for(j = 135620; j < 135630; j++) _solve(b, j);
for(j = 136460; j < 136470; j++) _solve(b, j);
for(j = 137300; j < 137310; j++) _solve(b, j);
for(j = 138140; j < 138150; j++) _solve(b, j);
for(j = 138980; j < 138990; j++) _solve(b, j);
for(j = 139820; j < 139830; j++) _solve(b, j);
for(j = 140660; j < 140670; j++) _solve(b, j);
for(j = 141500; j < 141510; j++) _solve(b, j);
for(j = 142340; j < 142350; j++) _solve(b, j);
for(j = 143180; j < 143190; j++) _solve(b, j);
for(j = 144020; j < 144030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 144860; j < 144870; j++) _solve(b, j);
for(j = 145700; j < 145710; j++) _solve(b, j);
for(j = 146540; j < 146550; j++) _solve(b, j);
for(j = 147380; j < 147390; j++) _solve(b, j);
for(j = 148220; j < 148230; j++) _solve(b, j);
for(j = 149060; j < 149070; j++) _solve(b, j);
for(j = 149900; j < 149910; j++) _solve(b, j);
for(j = 150740; j < 150750; j++) _solve(b, j);
for(j = 151580; j < 151590; j++) _solve(b, j);
for(j = 152420; j < 152430; j++) _solve(b, j);
for(j = 153260; j < 153270; j++) _solve(b, j);
for(j = 154100; j < 154110; j++) _solve(b, j);
for(j = 154940; j < 154950; j++) _solve(b, j);
for(j = 155780; j < 155790; j++) _solve(b, j);
for(j = 156620; j < 156630; j++) _solve(b, j);
for(j = 157460; j < 157470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 158300; j < 158310; j++) _solve(b, j);
for(j = 159140; j < 159150; j++) _solve(b, j);
for(j = 159980; j < 159990; j++) _solve(b, j);
for(j = 160820; j < 160830; j++) _solve(b, j);
for(j = 161660; j < 161670; j++) _solve(b, j);
for(j = 162500; j < 162510; j++) _solve(b, j);
for(j = 163340; j < 163350; j++) _solve(b, j);
for(j = 164180; j < 164190; j++) _solve(b, j);
for(j = 165020; j < 165030; j++) _solve(b, j);
for(j = 165860; j < 165870; j++) _solve(b, j);
for(j = 166700; j < 166710; j++) _solve(b, j);
for(j = 167540; j < 167550; j++) _solve(b, j);
for(j = 168380; j < 168390; j++) _solve(b, j);
for(j = 169220; j < 169230; j++) _solve(b, j);
for(j = 170060; j < 170070; j++) _solve(b, j);
for(j = 170900; j < 170910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 171740; j < 171750; j++) _solve(b, j);
for(j = 172580; j < 172590; j++) _solve(b, j);
for(j = 173420; j < 173430; j++) _solve(b, j);
for(j = 174260; j < 174270; j++) _solve(b, j);
for(j = 175100; j < 175110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 105390; j < 105400; j++) _solve(b, j);
for(j = 106230; j < 106240; j++) _solve(b, j);
for(j = 107070; j < 107080; j++) _solve(b, j);
for(j = 107910; j < 107920; j++) _solve(b, j);
for(j = 108750; j < 108760; j++) _solve(b, j);
for(j = 109590; j < 109600; j++) _solve(b, j);
for(j = 110430; j < 110440; j++) _solve(b, j);
for(j = 111270; j < 111280; j++) _solve(b, j);
for(j = 112110; j < 112120; j++) _solve(b, j);
for(j = 112950; j < 112960; j++) _solve(b, j);
for(j = 113790; j < 113800; j++) _solve(b, j);
for(j = 114630; j < 114640; j++) _solve(b, j);
for(j = 115470; j < 115480; j++) _solve(b, j);
for(j = 116310; j < 116320; j++) _solve(b, j);
for(j = 117150; j < 117160; j++) _solve(b, j);
for(j = 117990; j < 118000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 118830; j < 118840; j++) _solve(b, j);
for(j = 119670; j < 119680; j++) _solve(b, j);
for(j = 120510; j < 120520; j++) _solve(b, j);
for(j = 121350; j < 121360; j++) _solve(b, j);
for(j = 122190; j < 122200; j++) _solve(b, j);
for(j = 123030; j < 123040; j++) _solve(b, j);
for(j = 123870; j < 123880; j++) _solve(b, j);
for(j = 124710; j < 124720; j++) _solve(b, j);
for(j = 125550; j < 125560; j++) _solve(b, j);
for(j = 126390; j < 126400; j++) _solve(b, j);
for(j = 127230; j < 127240; j++) _solve(b, j);
for(j = 128070; j < 128080; j++) _solve(b, j);
for(j = 128910; j < 128920; j++) _solve(b, j);
for(j = 129750; j < 129760; j++) _solve(b, j);
for(j = 130590; j < 130600; j++) _solve(b, j);
for(j = 131430; j < 131440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 132270; j < 132280; j++) _solve(b, j);
for(j = 133110; j < 133120; j++) _solve(b, j);
for(j = 133950; j < 133960; j++) _solve(b, j);
for(j = 134790; j < 134800; j++) _solve(b, j);
for(j = 135630; j < 135640; j++) _solve(b, j);
for(j = 136470; j < 136480; j++) _solve(b, j);
for(j = 137310; j < 137320; j++) _solve(b, j);
for(j = 138150; j < 138160; j++) _solve(b, j);
for(j = 138990; j < 139000; j++) _solve(b, j);
for(j = 139830; j < 139840; j++) _solve(b, j);
for(j = 140670; j < 140680; j++) _solve(b, j);
for(j = 141510; j < 141520; j++) _solve(b, j);
for(j = 142350; j < 142360; j++) _solve(b, j);
for(j = 143190; j < 143200; j++) _solve(b, j);
for(j = 144030; j < 144040; j++) _solve(b, j);
for(j = 144870; j < 144880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 145710; j < 145720; j++) _solve(b, j);
for(j = 146550; j < 146560; j++) _solve(b, j);
for(j = 147390; j < 147400; j++) _solve(b, j);
for(j = 148230; j < 148240; j++) _solve(b, j);
for(j = 149070; j < 149080; j++) _solve(b, j);
for(j = 149910; j < 149920; j++) _solve(b, j);
for(j = 150750; j < 150760; j++) _solve(b, j);
for(j = 151590; j < 151600; j++) _solve(b, j);
for(j = 152430; j < 152440; j++) _solve(b, j);
for(j = 153270; j < 153280; j++) _solve(b, j);
for(j = 154110; j < 154120; j++) _solve(b, j);
for(j = 154950; j < 154960; j++) _solve(b, j);
for(j = 155790; j < 155800; j++) _solve(b, j);
for(j = 156630; j < 156640; j++) _solve(b, j);
for(j = 157470; j < 157480; j++) _solve(b, j);
for(j = 158310; j < 158320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 159150; j < 159160; j++) _solve(b, j);
for(j = 159990; j < 160000; j++) _solve(b, j);
for(j = 160830; j < 160840; j++) _solve(b, j);
for(j = 161670; j < 161680; j++) _solve(b, j);
for(j = 162510; j < 162520; j++) _solve(b, j);
for(j = 163350; j < 163360; j++) _solve(b, j);
for(j = 164190; j < 164200; j++) _solve(b, j);
for(j = 165030; j < 165040; j++) _solve(b, j);
for(j = 165870; j < 165880; j++) _solve(b, j);
for(j = 166710; j < 166720; j++) _solve(b, j);
for(j = 167550; j < 167560; j++) _solve(b, j);
for(j = 168390; j < 168400; j++) _solve(b, j);
for(j = 169230; j < 169240; j++) _solve(b, j);
for(j = 170070; j < 170080; j++) _solve(b, j);
for(j = 170910; j < 170920; j++) _solve(b, j);
for(j = 171750; j < 171760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 172590; j < 172600; j++) _solve(b, j);
for(j = 173430; j < 173440; j++) _solve(b, j);
for(j = 174270; j < 174280; j++) _solve(b, j);
for(j = 175110; j < 175120; j++) _solve(b, j);
for(j = 175950; j < 175960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 106240; j < 106250; j++) _solve(b, j);
for(j = 107080; j < 107090; j++) _solve(b, j);
for(j = 107920; j < 107930; j++) _solve(b, j);
for(j = 108760; j < 108770; j++) _solve(b, j);
for(j = 109600; j < 109610; j++) _solve(b, j);
for(j = 110440; j < 110450; j++) _solve(b, j);
for(j = 111280; j < 111290; j++) _solve(b, j);
for(j = 112120; j < 112130; j++) _solve(b, j);
for(j = 112960; j < 112970; j++) _solve(b, j);
for(j = 113800; j < 113810; j++) _solve(b, j);
for(j = 114640; j < 114650; j++) _solve(b, j);
for(j = 115480; j < 115490; j++) _solve(b, j);
for(j = 116320; j < 116330; j++) _solve(b, j);
for(j = 117160; j < 117170; j++) _solve(b, j);
for(j = 118000; j < 118010; j++) _solve(b, j);
for(j = 118840; j < 118850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 119680; j < 119690; j++) _solve(b, j);
for(j = 120520; j < 120530; j++) _solve(b, j);
for(j = 121360; j < 121370; j++) _solve(b, j);
for(j = 122200; j < 122210; j++) _solve(b, j);
for(j = 123040; j < 123050; j++) _solve(b, j);
for(j = 123880; j < 123890; j++) _solve(b, j);
for(j = 124720; j < 124730; j++) _solve(b, j);
for(j = 125560; j < 125570; j++) _solve(b, j);
for(j = 126400; j < 126410; j++) _solve(b, j);
for(j = 127240; j < 127250; j++) _solve(b, j);
for(j = 128080; j < 128090; j++) _solve(b, j);
for(j = 128920; j < 128930; j++) _solve(b, j);
for(j = 129760; j < 129770; j++) _solve(b, j);
for(j = 130600; j < 130610; j++) _solve(b, j);
for(j = 131440; j < 131450; j++) _solve(b, j);
for(j = 132280; j < 132290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 133120; j < 133130; j++) _solve(b, j);
for(j = 133960; j < 133970; j++) _solve(b, j);
for(j = 134800; j < 134810; j++) _solve(b, j);
for(j = 135640; j < 135650; j++) _solve(b, j);
for(j = 136480; j < 136490; j++) _solve(b, j);
for(j = 137320; j < 137330; j++) _solve(b, j);
for(j = 138160; j < 138170; j++) _solve(b, j);
for(j = 139000; j < 139010; j++) _solve(b, j);
for(j = 139840; j < 139850; j++) _solve(b, j);
for(j = 140680; j < 140690; j++) _solve(b, j);
for(j = 141520; j < 141530; j++) _solve(b, j);
for(j = 142360; j < 142370; j++) _solve(b, j);
for(j = 143200; j < 143210; j++) _solve(b, j);
for(j = 144040; j < 144050; j++) _solve(b, j);
for(j = 144880; j < 144890; j++) _solve(b, j);
for(j = 145720; j < 145730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 146560; j < 146570; j++) _solve(b, j);
for(j = 147400; j < 147410; j++) _solve(b, j);
for(j = 148240; j < 148250; j++) _solve(b, j);
for(j = 149080; j < 149090; j++) _solve(b, j);
for(j = 149920; j < 149930; j++) _solve(b, j);
for(j = 150760; j < 150770; j++) _solve(b, j);
for(j = 151600; j < 151610; j++) _solve(b, j);
for(j = 152440; j < 152450; j++) _solve(b, j);
for(j = 153280; j < 153290; j++) _solve(b, j);
for(j = 154120; j < 154130; j++) _solve(b, j);
for(j = 154960; j < 154970; j++) _solve(b, j);
for(j = 155800; j < 155810; j++) _solve(b, j);
for(j = 156640; j < 156650; j++) _solve(b, j);
for(j = 157480; j < 157490; j++) _solve(b, j);
for(j = 158320; j < 158330; j++) _solve(b, j);
for(j = 159160; j < 159170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 160000; j < 160010; j++) _solve(b, j);
for(j = 160840; j < 160850; j++) _solve(b, j);
for(j = 161680; j < 161690; j++) _solve(b, j);
for(j = 162520; j < 162530; j++) _solve(b, j);
for(j = 163360; j < 163370; j++) _solve(b, j);
for(j = 164200; j < 164210; j++) _solve(b, j);
for(j = 165040; j < 165050; j++) _solve(b, j);
for(j = 165880; j < 165890; j++) _solve(b, j);
for(j = 166720; j < 166730; j++) _solve(b, j);
for(j = 167560; j < 167570; j++) _solve(b, j);
for(j = 168400; j < 168410; j++) _solve(b, j);
for(j = 169240; j < 169250; j++) _solve(b, j);
for(j = 170080; j < 170090; j++) _solve(b, j);
for(j = 170920; j < 170930; j++) _solve(b, j);
for(j = 171760; j < 171770; j++) _solve(b, j);
for(j = 172600; j < 172610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 173440; j < 173450; j++) _solve(b, j);
for(j = 174280; j < 174290; j++) _solve(b, j);
for(j = 175120; j < 175130; j++) _solve(b, j);
for(j = 175960; j < 175970; j++) _solve(b, j);
for(j = 176800; j < 176810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 107090; j < 107100; j++) _solve(b, j);
for(j = 107930; j < 107940; j++) _solve(b, j);
for(j = 108770; j < 108780; j++) _solve(b, j);
for(j = 109610; j < 109620; j++) _solve(b, j);
for(j = 110450; j < 110460; j++) _solve(b, j);
for(j = 111290; j < 111300; j++) _solve(b, j);
for(j = 112130; j < 112140; j++) _solve(b, j);
for(j = 112970; j < 112980; j++) _solve(b, j);
for(j = 113810; j < 113820; j++) _solve(b, j);
for(j = 114650; j < 114660; j++) _solve(b, j);
for(j = 115490; j < 115500; j++) _solve(b, j);
for(j = 116330; j < 116340; j++) _solve(b, j);
for(j = 117170; j < 117180; j++) _solve(b, j);
for(j = 118010; j < 118020; j++) _solve(b, j);
for(j = 118850; j < 118860; j++) _solve(b, j);
for(j = 119690; j < 119700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 120530; j < 120540; j++) _solve(b, j);
for(j = 121370; j < 121380; j++) _solve(b, j);
for(j = 122210; j < 122220; j++) _solve(b, j);
for(j = 123050; j < 123060; j++) _solve(b, j);
for(j = 123890; j < 123900; j++) _solve(b, j);
for(j = 124730; j < 124740; j++) _solve(b, j);
for(j = 125570; j < 125580; j++) _solve(b, j);
for(j = 126410; j < 126420; j++) _solve(b, j);
for(j = 127250; j < 127260; j++) _solve(b, j);
for(j = 128090; j < 128100; j++) _solve(b, j);
for(j = 128930; j < 128940; j++) _solve(b, j);
for(j = 129770; j < 129780; j++) _solve(b, j);
for(j = 130610; j < 130620; j++) _solve(b, j);
for(j = 131450; j < 131460; j++) _solve(b, j);
for(j = 132290; j < 132300; j++) _solve(b, j);
for(j = 133130; j < 133140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 133970; j < 133980; j++) _solve(b, j);
for(j = 134810; j < 134820; j++) _solve(b, j);
for(j = 135650; j < 135660; j++) _solve(b, j);
for(j = 136490; j < 136500; j++) _solve(b, j);
for(j = 137330; j < 137340; j++) _solve(b, j);
for(j = 138170; j < 138180; j++) _solve(b, j);
for(j = 139010; j < 139020; j++) _solve(b, j);
for(j = 139850; j < 139860; j++) _solve(b, j);
for(j = 140690; j < 140700; j++) _solve(b, j);
for(j = 141530; j < 141540; j++) _solve(b, j);
for(j = 142370; j < 142380; j++) _solve(b, j);
for(j = 143210; j < 143220; j++) _solve(b, j);
for(j = 144050; j < 144060; j++) _solve(b, j);
for(j = 144890; j < 144900; j++) _solve(b, j);
for(j = 145730; j < 145740; j++) _solve(b, j);
for(j = 146570; j < 146580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 147410; j < 147420; j++) _solve(b, j);
for(j = 148250; j < 148260; j++) _solve(b, j);
for(j = 149090; j < 149100; j++) _solve(b, j);
for(j = 149930; j < 149940; j++) _solve(b, j);
for(j = 150770; j < 150780; j++) _solve(b, j);
for(j = 151610; j < 151620; j++) _solve(b, j);
for(j = 152450; j < 152460; j++) _solve(b, j);
for(j = 153290; j < 153300; j++) _solve(b, j);
for(j = 154130; j < 154140; j++) _solve(b, j);
for(j = 154970; j < 154980; j++) _solve(b, j);
for(j = 155810; j < 155820; j++) _solve(b, j);
for(j = 156650; j < 156660; j++) _solve(b, j);
for(j = 157490; j < 157500; j++) _solve(b, j);
for(j = 158330; j < 158340; j++) _solve(b, j);
for(j = 159170; j < 159180; j++) _solve(b, j);
for(j = 160010; j < 160020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 160850; j < 160860; j++) _solve(b, j);
for(j = 161690; j < 161700; j++) _solve(b, j);
for(j = 162530; j < 162540; j++) _solve(b, j);
for(j = 163370; j < 163380; j++) _solve(b, j);
for(j = 164210; j < 164220; j++) _solve(b, j);
for(j = 165050; j < 165060; j++) _solve(b, j);
for(j = 165890; j < 165900; j++) _solve(b, j);
for(j = 166730; j < 166740; j++) _solve(b, j);
for(j = 167570; j < 167580; j++) _solve(b, j);
for(j = 168410; j < 168420; j++) _solve(b, j);
for(j = 169250; j < 169260; j++) _solve(b, j);
for(j = 170090; j < 170100; j++) _solve(b, j);
for(j = 170930; j < 170940; j++) _solve(b, j);
for(j = 171770; j < 171780; j++) _solve(b, j);
for(j = 172610; j < 172620; j++) _solve(b, j);
for(j = 173450; j < 173460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 174290; j < 174300; j++) _solve(b, j);
for(j = 175130; j < 175140; j++) _solve(b, j);
for(j = 175970; j < 175980; j++) _solve(b, j);
for(j = 176810; j < 176820; j++) _solve(b, j);
for(j = 177650; j < 177660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 107940; j < 107950; j++) _solve(b, j);
for(j = 108780; j < 108790; j++) _solve(b, j);
for(j = 109620; j < 109630; j++) _solve(b, j);
for(j = 110460; j < 110470; j++) _solve(b, j);
for(j = 111300; j < 111310; j++) _solve(b, j);
for(j = 112140; j < 112150; j++) _solve(b, j);
for(j = 112980; j < 112990; j++) _solve(b, j);
for(j = 113820; j < 113830; j++) _solve(b, j);
for(j = 114660; j < 114670; j++) _solve(b, j);
for(j = 115500; j < 115510; j++) _solve(b, j);
for(j = 116340; j < 116350; j++) _solve(b, j);
for(j = 117180; j < 117190; j++) _solve(b, j);
for(j = 118020; j < 118030; j++) _solve(b, j);
for(j = 118860; j < 118870; j++) _solve(b, j);
for(j = 119700; j < 119710; j++) _solve(b, j);
for(j = 120540; j < 120550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 121380; j < 121390; j++) _solve(b, j);
for(j = 122220; j < 122230; j++) _solve(b, j);
for(j = 123060; j < 123070; j++) _solve(b, j);
for(j = 123900; j < 123910; j++) _solve(b, j);
for(j = 124740; j < 124750; j++) _solve(b, j);
for(j = 125580; j < 125590; j++) _solve(b, j);
for(j = 126420; j < 126430; j++) _solve(b, j);
for(j = 127260; j < 127270; j++) _solve(b, j);
for(j = 128100; j < 128110; j++) _solve(b, j);
for(j = 128940; j < 128950; j++) _solve(b, j);
for(j = 129780; j < 129790; j++) _solve(b, j);
for(j = 130620; j < 130630; j++) _solve(b, j);
for(j = 131460; j < 131470; j++) _solve(b, j);
for(j = 132300; j < 132310; j++) _solve(b, j);
for(j = 133140; j < 133150; j++) _solve(b, j);
for(j = 133980; j < 133990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 134820; j < 134830; j++) _solve(b, j);
for(j = 135660; j < 135670; j++) _solve(b, j);
for(j = 136500; j < 136510; j++) _solve(b, j);
for(j = 137340; j < 137350; j++) _solve(b, j);
for(j = 138180; j < 138190; j++) _solve(b, j);
for(j = 139020; j < 139030; j++) _solve(b, j);
for(j = 139860; j < 139870; j++) _solve(b, j);
for(j = 140700; j < 140710; j++) _solve(b, j);
for(j = 141540; j < 141550; j++) _solve(b, j);
for(j = 142380; j < 142390; j++) _solve(b, j);
for(j = 143220; j < 143230; j++) _solve(b, j);
for(j = 144060; j < 144070; j++) _solve(b, j);
for(j = 144900; j < 144910; j++) _solve(b, j);
for(j = 145740; j < 145750; j++) _solve(b, j);
for(j = 146580; j < 146590; j++) _solve(b, j);
for(j = 147420; j < 147430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 148260; j < 148270; j++) _solve(b, j);
for(j = 149100; j < 149110; j++) _solve(b, j);
for(j = 149940; j < 149950; j++) _solve(b, j);
for(j = 150780; j < 150790; j++) _solve(b, j);
for(j = 151620; j < 151630; j++) _solve(b, j);
for(j = 152460; j < 152470; j++) _solve(b, j);
for(j = 153300; j < 153310; j++) _solve(b, j);
for(j = 154140; j < 154150; j++) _solve(b, j);
for(j = 154980; j < 154990; j++) _solve(b, j);
for(j = 155820; j < 155830; j++) _solve(b, j);
for(j = 156660; j < 156670; j++) _solve(b, j);
for(j = 157500; j < 157510; j++) _solve(b, j);
for(j = 158340; j < 158350; j++) _solve(b, j);
for(j = 159180; j < 159190; j++) _solve(b, j);
for(j = 160020; j < 160030; j++) _solve(b, j);
for(j = 160860; j < 160870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 161700; j < 161710; j++) _solve(b, j);
for(j = 162540; j < 162550; j++) _solve(b, j);
for(j = 163380; j < 163390; j++) _solve(b, j);
for(j = 164220; j < 164230; j++) _solve(b, j);
for(j = 165060; j < 165070; j++) _solve(b, j);
for(j = 165900; j < 165910; j++) _solve(b, j);
for(j = 166740; j < 166750; j++) _solve(b, j);
for(j = 167580; j < 167590; j++) _solve(b, j);
for(j = 168420; j < 168430; j++) _solve(b, j);
for(j = 169260; j < 169270; j++) _solve(b, j);
for(j = 170100; j < 170110; j++) _solve(b, j);
for(j = 170940; j < 170950; j++) _solve(b, j);
for(j = 171780; j < 171790; j++) _solve(b, j);
for(j = 172620; j < 172630; j++) _solve(b, j);
for(j = 173460; j < 173470; j++) _solve(b, j);
for(j = 174300; j < 174310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 175140; j < 175150; j++) _solve(b, j);
for(j = 175980; j < 175990; j++) _solve(b, j);
for(j = 176820; j < 176830; j++) _solve(b, j);
for(j = 177660; j < 177670; j++) _solve(b, j);
for(j = 178500; j < 178510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 108790; j < 108800; j++) _solve(b, j);
for(j = 109630; j < 109640; j++) _solve(b, j);
for(j = 110470; j < 110480; j++) _solve(b, j);
for(j = 111310; j < 111320; j++) _solve(b, j);
for(j = 112150; j < 112160; j++) _solve(b, j);
for(j = 112990; j < 113000; j++) _solve(b, j);
for(j = 113830; j < 113840; j++) _solve(b, j);
for(j = 114670; j < 114680; j++) _solve(b, j);
for(j = 115510; j < 115520; j++) _solve(b, j);
for(j = 116350; j < 116360; j++) _solve(b, j);
for(j = 117190; j < 117200; j++) _solve(b, j);
for(j = 118030; j < 118040; j++) _solve(b, j);
for(j = 118870; j < 118880; j++) _solve(b, j);
for(j = 119710; j < 119720; j++) _solve(b, j);
for(j = 120550; j < 120560; j++) _solve(b, j);
for(j = 121390; j < 121400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 122230; j < 122240; j++) _solve(b, j);
for(j = 123070; j < 123080; j++) _solve(b, j);
for(j = 123910; j < 123920; j++) _solve(b, j);
for(j = 124750; j < 124760; j++) _solve(b, j);
for(j = 125590; j < 125600; j++) _solve(b, j);
for(j = 126430; j < 126440; j++) _solve(b, j);
for(j = 127270; j < 127280; j++) _solve(b, j);
for(j = 128110; j < 128120; j++) _solve(b, j);
for(j = 128950; j < 128960; j++) _solve(b, j);
for(j = 129790; j < 129800; j++) _solve(b, j);
for(j = 130630; j < 130640; j++) _solve(b, j);
for(j = 131470; j < 131480; j++) _solve(b, j);
for(j = 132310; j < 132320; j++) _solve(b, j);
for(j = 133150; j < 133160; j++) _solve(b, j);
for(j = 133990; j < 134000; j++) _solve(b, j);
for(j = 134830; j < 134840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 135670; j < 135680; j++) _solve(b, j);
for(j = 136510; j < 136520; j++) _solve(b, j);
for(j = 137350; j < 137360; j++) _solve(b, j);
for(j = 138190; j < 138200; j++) _solve(b, j);
for(j = 139030; j < 139040; j++) _solve(b, j);
for(j = 139870; j < 139880; j++) _solve(b, j);
for(j = 140710; j < 140720; j++) _solve(b, j);
for(j = 141550; j < 141560; j++) _solve(b, j);
for(j = 142390; j < 142400; j++) _solve(b, j);
for(j = 143230; j < 143240; j++) _solve(b, j);
for(j = 144070; j < 144080; j++) _solve(b, j);
for(j = 144910; j < 144920; j++) _solve(b, j);
for(j = 145750; j < 145760; j++) _solve(b, j);
for(j = 146590; j < 146600; j++) _solve(b, j);
for(j = 147430; j < 147440; j++) _solve(b, j);
for(j = 148270; j < 148280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 149110; j < 149120; j++) _solve(b, j);
for(j = 149950; j < 149960; j++) _solve(b, j);
for(j = 150790; j < 150800; j++) _solve(b, j);
for(j = 151630; j < 151640; j++) _solve(b, j);
for(j = 152470; j < 152480; j++) _solve(b, j);
for(j = 153310; j < 153320; j++) _solve(b, j);
for(j = 154150; j < 154160; j++) _solve(b, j);
for(j = 154990; j < 155000; j++) _solve(b, j);
for(j = 155830; j < 155840; j++) _solve(b, j);
for(j = 156670; j < 156680; j++) _solve(b, j);
for(j = 157510; j < 157520; j++) _solve(b, j);
for(j = 158350; j < 158360; j++) _solve(b, j);
for(j = 159190; j < 159200; j++) _solve(b, j);
for(j = 160030; j < 160040; j++) _solve(b, j);
for(j = 160870; j < 160880; j++) _solve(b, j);
for(j = 161710; j < 161720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 162550; j < 162560; j++) _solve(b, j);
for(j = 163390; j < 163400; j++) _solve(b, j);
for(j = 164230; j < 164240; j++) _solve(b, j);
for(j = 165070; j < 165080; j++) _solve(b, j);
for(j = 165910; j < 165920; j++) _solve(b, j);
for(j = 166750; j < 166760; j++) _solve(b, j);
for(j = 167590; j < 167600; j++) _solve(b, j);
for(j = 168430; j < 168440; j++) _solve(b, j);
for(j = 169270; j < 169280; j++) _solve(b, j);
for(j = 170110; j < 170120; j++) _solve(b, j);
for(j = 170950; j < 170960; j++) _solve(b, j);
for(j = 171790; j < 171800; j++) _solve(b, j);
for(j = 172630; j < 172640; j++) _solve(b, j);
for(j = 173470; j < 173480; j++) _solve(b, j);
for(j = 174310; j < 174320; j++) _solve(b, j);
for(j = 175150; j < 175160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 175990; j < 176000; j++) _solve(b, j);
for(j = 176830; j < 176840; j++) _solve(b, j);
for(j = 177670; j < 177680; j++) _solve(b, j);
for(j = 178510; j < 178520; j++) _solve(b, j);
for(j = 179350; j < 179360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 109640; j < 109650; j++) _solve(b, j);
for(j = 110480; j < 110490; j++) _solve(b, j);
for(j = 111320; j < 111330; j++) _solve(b, j);
for(j = 112160; j < 112170; j++) _solve(b, j);
for(j = 113000; j < 113010; j++) _solve(b, j);
for(j = 113840; j < 113850; j++) _solve(b, j);
for(j = 114680; j < 114690; j++) _solve(b, j);
for(j = 115520; j < 115530; j++) _solve(b, j);
for(j = 116360; j < 116370; j++) _solve(b, j);
for(j = 117200; j < 117210; j++) _solve(b, j);
for(j = 118040; j < 118050; j++) _solve(b, j);
for(j = 118880; j < 118890; j++) _solve(b, j);
for(j = 119720; j < 119730; j++) _solve(b, j);
for(j = 120560; j < 120570; j++) _solve(b, j);
for(j = 121400; j < 121410; j++) _solve(b, j);
for(j = 122240; j < 122250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 123080; j < 123090; j++) _solve(b, j);
for(j = 123920; j < 123930; j++) _solve(b, j);
for(j = 124760; j < 124770; j++) _solve(b, j);
for(j = 125600; j < 125610; j++) _solve(b, j);
for(j = 126440; j < 126450; j++) _solve(b, j);
for(j = 127280; j < 127290; j++) _solve(b, j);
for(j = 128120; j < 128130; j++) _solve(b, j);
for(j = 128960; j < 128970; j++) _solve(b, j);
for(j = 129800; j < 129810; j++) _solve(b, j);
for(j = 130640; j < 130650; j++) _solve(b, j);
for(j = 131480; j < 131490; j++) _solve(b, j);
for(j = 132320; j < 132330; j++) _solve(b, j);
for(j = 133160; j < 133170; j++) _solve(b, j);
for(j = 134000; j < 134010; j++) _solve(b, j);
for(j = 134840; j < 134850; j++) _solve(b, j);
for(j = 135680; j < 135690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 136520; j < 136530; j++) _solve(b, j);
for(j = 137360; j < 137370; j++) _solve(b, j);
for(j = 138200; j < 138210; j++) _solve(b, j);
for(j = 139040; j < 139050; j++) _solve(b, j);
for(j = 139880; j < 139890; j++) _solve(b, j);
for(j = 140720; j < 140730; j++) _solve(b, j);
for(j = 141560; j < 141570; j++) _solve(b, j);
for(j = 142400; j < 142410; j++) _solve(b, j);
for(j = 143240; j < 143250; j++) _solve(b, j);
for(j = 144080; j < 144090; j++) _solve(b, j);
for(j = 144920; j < 144930; j++) _solve(b, j);
for(j = 145760; j < 145770; j++) _solve(b, j);
for(j = 146600; j < 146610; j++) _solve(b, j);
for(j = 147440; j < 147450; j++) _solve(b, j);
for(j = 148280; j < 148290; j++) _solve(b, j);
for(j = 149120; j < 149130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 149960; j < 149970; j++) _solve(b, j);
for(j = 150800; j < 150810; j++) _solve(b, j);
for(j = 151640; j < 151650; j++) _solve(b, j);
for(j = 152480; j < 152490; j++) _solve(b, j);
for(j = 153320; j < 153330; j++) _solve(b, j);
for(j = 154160; j < 154170; j++) _solve(b, j);
for(j = 155000; j < 155010; j++) _solve(b, j);
for(j = 155840; j < 155850; j++) _solve(b, j);
for(j = 156680; j < 156690; j++) _solve(b, j);
for(j = 157520; j < 157530; j++) _solve(b, j);
for(j = 158360; j < 158370; j++) _solve(b, j);
for(j = 159200; j < 159210; j++) _solve(b, j);
for(j = 160040; j < 160050; j++) _solve(b, j);
for(j = 160880; j < 160890; j++) _solve(b, j);
for(j = 161720; j < 161730; j++) _solve(b, j);
for(j = 162560; j < 162570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 163400; j < 163410; j++) _solve(b, j);
for(j = 164240; j < 164250; j++) _solve(b, j);
for(j = 165080; j < 165090; j++) _solve(b, j);
for(j = 165920; j < 165930; j++) _solve(b, j);
for(j = 166760; j < 166770; j++) _solve(b, j);
for(j = 167600; j < 167610; j++) _solve(b, j);
for(j = 168440; j < 168450; j++) _solve(b, j);
for(j = 169280; j < 169290; j++) _solve(b, j);
for(j = 170120; j < 170130; j++) _solve(b, j);
for(j = 170960; j < 170970; j++) _solve(b, j);
for(j = 171800; j < 171810; j++) _solve(b, j);
for(j = 172640; j < 172650; j++) _solve(b, j);
for(j = 173480; j < 173490; j++) _solve(b, j);
for(j = 174320; j < 174330; j++) _solve(b, j);
for(j = 175160; j < 175170; j++) _solve(b, j);
for(j = 176000; j < 176010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 176840; j < 176850; j++) _solve(b, j);
for(j = 177680; j < 177690; j++) _solve(b, j);
for(j = 178520; j < 178530; j++) _solve(b, j);
for(j = 179360; j < 179370; j++) _solve(b, j);
for(j = 180200; j < 180210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 110490; j < 110500; j++) _solve(b, j);
for(j = 111330; j < 111340; j++) _solve(b, j);
for(j = 112170; j < 112180; j++) _solve(b, j);
for(j = 113010; j < 113020; j++) _solve(b, j);
for(j = 113850; j < 113860; j++) _solve(b, j);
for(j = 114690; j < 114700; j++) _solve(b, j);
for(j = 115530; j < 115540; j++) _solve(b, j);
for(j = 116370; j < 116380; j++) _solve(b, j);
for(j = 117210; j < 117220; j++) _solve(b, j);
for(j = 118050; j < 118060; j++) _solve(b, j);
for(j = 118890; j < 118900; j++) _solve(b, j);
for(j = 119730; j < 119740; j++) _solve(b, j);
for(j = 120570; j < 120580; j++) _solve(b, j);
for(j = 121410; j < 121420; j++) _solve(b, j);
for(j = 122250; j < 122260; j++) _solve(b, j);
for(j = 123090; j < 123100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 123930; j < 123940; j++) _solve(b, j);
for(j = 124770; j < 124780; j++) _solve(b, j);
for(j = 125610; j < 125620; j++) _solve(b, j);
for(j = 126450; j < 126460; j++) _solve(b, j);
for(j = 127290; j < 127300; j++) _solve(b, j);
for(j = 128130; j < 128140; j++) _solve(b, j);
for(j = 128970; j < 128980; j++) _solve(b, j);
for(j = 129810; j < 129820; j++) _solve(b, j);
for(j = 130650; j < 130660; j++) _solve(b, j);
for(j = 131490; j < 131500; j++) _solve(b, j);
for(j = 132330; j < 132340; j++) _solve(b, j);
for(j = 133170; j < 133180; j++) _solve(b, j);
for(j = 134010; j < 134020; j++) _solve(b, j);
for(j = 134850; j < 134860; j++) _solve(b, j);
for(j = 135690; j < 135700; j++) _solve(b, j);
for(j = 136530; j < 136540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 137370; j < 137380; j++) _solve(b, j);
for(j = 138210; j < 138220; j++) _solve(b, j);
for(j = 139050; j < 139060; j++) _solve(b, j);
for(j = 139890; j < 139900; j++) _solve(b, j);
for(j = 140730; j < 140740; j++) _solve(b, j);
for(j = 141570; j < 141580; j++) _solve(b, j);
for(j = 142410; j < 142420; j++) _solve(b, j);
for(j = 143250; j < 143260; j++) _solve(b, j);
for(j = 144090; j < 144100; j++) _solve(b, j);
for(j = 144930; j < 144940; j++) _solve(b, j);
for(j = 145770; j < 145780; j++) _solve(b, j);
for(j = 146610; j < 146620; j++) _solve(b, j);
for(j = 147450; j < 147460; j++) _solve(b, j);
for(j = 148290; j < 148300; j++) _solve(b, j);
for(j = 149130; j < 149140; j++) _solve(b, j);
for(j = 149970; j < 149980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 150810; j < 150820; j++) _solve(b, j);
for(j = 151650; j < 151660; j++) _solve(b, j);
for(j = 152490; j < 152500; j++) _solve(b, j);
for(j = 153330; j < 153340; j++) _solve(b, j);
for(j = 154170; j < 154180; j++) _solve(b, j);
for(j = 155010; j < 155020; j++) _solve(b, j);
for(j = 155850; j < 155860; j++) _solve(b, j);
for(j = 156690; j < 156700; j++) _solve(b, j);
for(j = 157530; j < 157540; j++) _solve(b, j);
for(j = 158370; j < 158380; j++) _solve(b, j);
for(j = 159210; j < 159220; j++) _solve(b, j);
for(j = 160050; j < 160060; j++) _solve(b, j);
for(j = 160890; j < 160900; j++) _solve(b, j);
for(j = 161730; j < 161740; j++) _solve(b, j);
for(j = 162570; j < 162580; j++) _solve(b, j);
for(j = 163410; j < 163420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 164250; j < 164260; j++) _solve(b, j);
for(j = 165090; j < 165100; j++) _solve(b, j);
for(j = 165930; j < 165940; j++) _solve(b, j);
for(j = 166770; j < 166780; j++) _solve(b, j);
for(j = 167610; j < 167620; j++) _solve(b, j);
for(j = 168450; j < 168460; j++) _solve(b, j);
for(j = 169290; j < 169300; j++) _solve(b, j);
for(j = 170130; j < 170140; j++) _solve(b, j);
for(j = 170970; j < 170980; j++) _solve(b, j);
for(j = 171810; j < 171820; j++) _solve(b, j);
for(j = 172650; j < 172660; j++) _solve(b, j);
for(j = 173490; j < 173500; j++) _solve(b, j);
for(j = 174330; j < 174340; j++) _solve(b, j);
for(j = 175170; j < 175180; j++) _solve(b, j);
for(j = 176010; j < 176020; j++) _solve(b, j);
for(j = 176850; j < 176860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 177690; j < 177700; j++) _solve(b, j);
for(j = 178530; j < 178540; j++) _solve(b, j);
for(j = 179370; j < 179380; j++) _solve(b, j);
for(j = 180210; j < 180220; j++) _solve(b, j);
for(j = 181050; j < 181060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 111340; j < 111350; j++) _solve(b, j);
for(j = 112180; j < 112190; j++) _solve(b, j);
for(j = 113020; j < 113030; j++) _solve(b, j);
for(j = 113860; j < 113870; j++) _solve(b, j);
for(j = 114700; j < 114710; j++) _solve(b, j);
for(j = 115540; j < 115550; j++) _solve(b, j);
for(j = 116380; j < 116390; j++) _solve(b, j);
for(j = 117220; j < 117230; j++) _solve(b, j);
for(j = 118060; j < 118070; j++) _solve(b, j);
for(j = 118900; j < 118910; j++) _solve(b, j);
for(j = 119740; j < 119750; j++) _solve(b, j);
for(j = 120580; j < 120590; j++) _solve(b, j);
for(j = 121420; j < 121430; j++) _solve(b, j);
for(j = 122260; j < 122270; j++) _solve(b, j);
for(j = 123100; j < 123110; j++) _solve(b, j);
for(j = 123940; j < 123950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 124780; j < 124790; j++) _solve(b, j);
for(j = 125620; j < 125630; j++) _solve(b, j);
for(j = 126460; j < 126470; j++) _solve(b, j);
for(j = 127300; j < 127310; j++) _solve(b, j);
for(j = 128140; j < 128150; j++) _solve(b, j);
for(j = 128980; j < 128990; j++) _solve(b, j);
for(j = 129820; j < 129830; j++) _solve(b, j);
for(j = 130660; j < 130670; j++) _solve(b, j);
for(j = 131500; j < 131510; j++) _solve(b, j);
for(j = 132340; j < 132350; j++) _solve(b, j);
for(j = 133180; j < 133190; j++) _solve(b, j);
for(j = 134020; j < 134030; j++) _solve(b, j);
for(j = 134860; j < 134870; j++) _solve(b, j);
for(j = 135700; j < 135710; j++) _solve(b, j);
for(j = 136540; j < 136550; j++) _solve(b, j);
for(j = 137380; j < 137390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 138220; j < 138230; j++) _solve(b, j);
for(j = 139060; j < 139070; j++) _solve(b, j);
for(j = 139900; j < 139910; j++) _solve(b, j);
for(j = 140740; j < 140750; j++) _solve(b, j);
for(j = 141580; j < 141590; j++) _solve(b, j);
for(j = 142420; j < 142430; j++) _solve(b, j);
for(j = 143260; j < 143270; j++) _solve(b, j);
for(j = 144100; j < 144110; j++) _solve(b, j);
for(j = 144940; j < 144950; j++) _solve(b, j);
for(j = 145780; j < 145790; j++) _solve(b, j);
for(j = 146620; j < 146630; j++) _solve(b, j);
for(j = 147460; j < 147470; j++) _solve(b, j);
for(j = 148300; j < 148310; j++) _solve(b, j);
for(j = 149140; j < 149150; j++) _solve(b, j);
for(j = 149980; j < 149990; j++) _solve(b, j);
for(j = 150820; j < 150830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 151660; j < 151670; j++) _solve(b, j);
for(j = 152500; j < 152510; j++) _solve(b, j);
for(j = 153340; j < 153350; j++) _solve(b, j);
for(j = 154180; j < 154190; j++) _solve(b, j);
for(j = 155020; j < 155030; j++) _solve(b, j);
for(j = 155860; j < 155870; j++) _solve(b, j);
for(j = 156700; j < 156710; j++) _solve(b, j);
for(j = 157540; j < 157550; j++) _solve(b, j);
for(j = 158380; j < 158390; j++) _solve(b, j);
for(j = 159220; j < 159230; j++) _solve(b, j);
for(j = 160060; j < 160070; j++) _solve(b, j);
for(j = 160900; j < 160910; j++) _solve(b, j);
for(j = 161740; j < 161750; j++) _solve(b, j);
for(j = 162580; j < 162590; j++) _solve(b, j);
for(j = 163420; j < 163430; j++) _solve(b, j);
for(j = 164260; j < 164270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 165100; j < 165110; j++) _solve(b, j);
for(j = 165940; j < 165950; j++) _solve(b, j);
for(j = 166780; j < 166790; j++) _solve(b, j);
for(j = 167620; j < 167630; j++) _solve(b, j);
for(j = 168460; j < 168470; j++) _solve(b, j);
for(j = 169300; j < 169310; j++) _solve(b, j);
for(j = 170140; j < 170150; j++) _solve(b, j);
for(j = 170980; j < 170990; j++) _solve(b, j);
for(j = 171820; j < 171830; j++) _solve(b, j);
for(j = 172660; j < 172670; j++) _solve(b, j);
for(j = 173500; j < 173510; j++) _solve(b, j);
for(j = 174340; j < 174350; j++) _solve(b, j);
for(j = 175180; j < 175190; j++) _solve(b, j);
for(j = 176020; j < 176030; j++) _solve(b, j);
for(j = 176860; j < 176870; j++) _solve(b, j);
for(j = 177700; j < 177710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 178540; j < 178550; j++) _solve(b, j);
for(j = 179380; j < 179390; j++) _solve(b, j);
for(j = 180220; j < 180230; j++) _solve(b, j);
for(j = 181060; j < 181070; j++) _solve(b, j);
for(j = 181900; j < 181910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 112190; j < 112200; j++) _solve(b, j);
for(j = 113030; j < 113040; j++) _solve(b, j);
for(j = 113870; j < 113880; j++) _solve(b, j);
for(j = 114710; j < 114720; j++) _solve(b, j);
for(j = 115550; j < 115560; j++) _solve(b, j);
for(j = 116390; j < 116400; j++) _solve(b, j);
for(j = 117230; j < 117240; j++) _solve(b, j);
for(j = 118070; j < 118080; j++) _solve(b, j);
for(j = 118910; j < 118920; j++) _solve(b, j);
for(j = 119750; j < 119760; j++) _solve(b, j);
for(j = 120590; j < 120600; j++) _solve(b, j);
for(j = 121430; j < 121440; j++) _solve(b, j);
for(j = 122270; j < 122280; j++) _solve(b, j);
for(j = 123110; j < 123120; j++) _solve(b, j);
for(j = 123950; j < 123960; j++) _solve(b, j);
for(j = 124790; j < 124800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 125630; j < 125640; j++) _solve(b, j);
for(j = 126470; j < 126480; j++) _solve(b, j);
for(j = 127310; j < 127320; j++) _solve(b, j);
for(j = 128150; j < 128160; j++) _solve(b, j);
for(j = 128990; j < 129000; j++) _solve(b, j);
for(j = 129830; j < 129840; j++) _solve(b, j);
for(j = 130670; j < 130680; j++) _solve(b, j);
for(j = 131510; j < 131520; j++) _solve(b, j);
for(j = 132350; j < 132360; j++) _solve(b, j);
for(j = 133190; j < 133200; j++) _solve(b, j);
for(j = 134030; j < 134040; j++) _solve(b, j);
for(j = 134870; j < 134880; j++) _solve(b, j);
for(j = 135710; j < 135720; j++) _solve(b, j);
for(j = 136550; j < 136560; j++) _solve(b, j);
for(j = 137390; j < 137400; j++) _solve(b, j);
for(j = 138230; j < 138240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 139070; j < 139080; j++) _solve(b, j);
for(j = 139910; j < 139920; j++) _solve(b, j);
for(j = 140750; j < 140760; j++) _solve(b, j);
for(j = 141590; j < 141600; j++) _solve(b, j);
for(j = 142430; j < 142440; j++) _solve(b, j);
for(j = 143270; j < 143280; j++) _solve(b, j);
for(j = 144110; j < 144120; j++) _solve(b, j);
for(j = 144950; j < 144960; j++) _solve(b, j);
for(j = 145790; j < 145800; j++) _solve(b, j);
for(j = 146630; j < 146640; j++) _solve(b, j);
for(j = 147470; j < 147480; j++) _solve(b, j);
for(j = 148310; j < 148320; j++) _solve(b, j);
for(j = 149150; j < 149160; j++) _solve(b, j);
for(j = 149990; j < 150000; j++) _solve(b, j);
for(j = 150830; j < 150840; j++) _solve(b, j);
for(j = 151670; j < 151680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 152510; j < 152520; j++) _solve(b, j);
for(j = 153350; j < 153360; j++) _solve(b, j);
for(j = 154190; j < 154200; j++) _solve(b, j);
for(j = 155030; j < 155040; j++) _solve(b, j);
for(j = 155870; j < 155880; j++) _solve(b, j);
for(j = 156710; j < 156720; j++) _solve(b, j);
for(j = 157550; j < 157560; j++) _solve(b, j);
for(j = 158390; j < 158400; j++) _solve(b, j);
for(j = 159230; j < 159240; j++) _solve(b, j);
for(j = 160070; j < 160080; j++) _solve(b, j);
for(j = 160910; j < 160920; j++) _solve(b, j);
for(j = 161750; j < 161760; j++) _solve(b, j);
for(j = 162590; j < 162600; j++) _solve(b, j);
for(j = 163430; j < 163440; j++) _solve(b, j);
for(j = 164270; j < 164280; j++) _solve(b, j);
for(j = 165110; j < 165120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 165950; j < 165960; j++) _solve(b, j);
for(j = 166790; j < 166800; j++) _solve(b, j);
for(j = 167630; j < 167640; j++) _solve(b, j);
for(j = 168470; j < 168480; j++) _solve(b, j);
for(j = 169310; j < 169320; j++) _solve(b, j);
for(j = 170150; j < 170160; j++) _solve(b, j);
for(j = 170990; j < 171000; j++) _solve(b, j);
for(j = 171830; j < 171840; j++) _solve(b, j);
for(j = 172670; j < 172680; j++) _solve(b, j);
for(j = 173510; j < 173520; j++) _solve(b, j);
for(j = 174350; j < 174360; j++) _solve(b, j);
for(j = 175190; j < 175200; j++) _solve(b, j);
for(j = 176030; j < 176040; j++) _solve(b, j);
for(j = 176870; j < 176880; j++) _solve(b, j);
for(j = 177710; j < 177720; j++) _solve(b, j);
for(j = 178550; j < 178560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 179390; j < 179400; j++) _solve(b, j);
for(j = 180230; j < 180240; j++) _solve(b, j);
for(j = 181070; j < 181080; j++) _solve(b, j);
for(j = 181910; j < 181920; j++) _solve(b, j);
for(j = 182750; j < 182760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 113040; j < 113050; j++) _solve(b, j);
for(j = 113880; j < 113890; j++) _solve(b, j);
for(j = 114720; j < 114730; j++) _solve(b, j);
for(j = 115560; j < 115570; j++) _solve(b, j);
for(j = 116400; j < 116410; j++) _solve(b, j);
for(j = 117240; j < 117250; j++) _solve(b, j);
for(j = 118080; j < 118090; j++) _solve(b, j);
for(j = 118920; j < 118930; j++) _solve(b, j);
for(j = 119760; j < 119770; j++) _solve(b, j);
for(j = 120600; j < 120610; j++) _solve(b, j);
for(j = 121440; j < 121450; j++) _solve(b, j);
for(j = 122280; j < 122290; j++) _solve(b, j);
for(j = 123120; j < 123130; j++) _solve(b, j);
for(j = 123960; j < 123970; j++) _solve(b, j);
for(j = 124800; j < 124810; j++) _solve(b, j);
for(j = 125640; j < 125650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 126480; j < 126490; j++) _solve(b, j);
for(j = 127320; j < 127330; j++) _solve(b, j);
for(j = 128160; j < 128170; j++) _solve(b, j);
for(j = 129000; j < 129010; j++) _solve(b, j);
for(j = 129840; j < 129850; j++) _solve(b, j);
for(j = 130680; j < 130690; j++) _solve(b, j);
for(j = 131520; j < 131530; j++) _solve(b, j);
for(j = 132360; j < 132370; j++) _solve(b, j);
for(j = 133200; j < 133210; j++) _solve(b, j);
for(j = 134040; j < 134050; j++) _solve(b, j);
for(j = 134880; j < 134890; j++) _solve(b, j);
for(j = 135720; j < 135730; j++) _solve(b, j);
for(j = 136560; j < 136570; j++) _solve(b, j);
for(j = 137400; j < 137410; j++) _solve(b, j);
for(j = 138240; j < 138250; j++) _solve(b, j);
for(j = 139080; j < 139090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 139920; j < 139930; j++) _solve(b, j);
for(j = 140760; j < 140770; j++) _solve(b, j);
for(j = 141600; j < 141610; j++) _solve(b, j);
for(j = 142440; j < 142450; j++) _solve(b, j);
for(j = 143280; j < 143290; j++) _solve(b, j);
for(j = 144120; j < 144130; j++) _solve(b, j);
for(j = 144960; j < 144970; j++) _solve(b, j);
for(j = 145800; j < 145810; j++) _solve(b, j);
for(j = 146640; j < 146650; j++) _solve(b, j);
for(j = 147480; j < 147490; j++) _solve(b, j);
for(j = 148320; j < 148330; j++) _solve(b, j);
for(j = 149160; j < 149170; j++) _solve(b, j);
for(j = 150000; j < 150010; j++) _solve(b, j);
for(j = 150840; j < 150850; j++) _solve(b, j);
for(j = 151680; j < 151690; j++) _solve(b, j);
for(j = 152520; j < 152530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 153360; j < 153370; j++) _solve(b, j);
for(j = 154200; j < 154210; j++) _solve(b, j);
for(j = 155040; j < 155050; j++) _solve(b, j);
for(j = 155880; j < 155890; j++) _solve(b, j);
for(j = 156720; j < 156730; j++) _solve(b, j);
for(j = 157560; j < 157570; j++) _solve(b, j);
for(j = 158400; j < 158410; j++) _solve(b, j);
for(j = 159240; j < 159250; j++) _solve(b, j);
for(j = 160080; j < 160090; j++) _solve(b, j);
for(j = 160920; j < 160930; j++) _solve(b, j);
for(j = 161760; j < 161770; j++) _solve(b, j);
for(j = 162600; j < 162610; j++) _solve(b, j);
for(j = 163440; j < 163450; j++) _solve(b, j);
for(j = 164280; j < 164290; j++) _solve(b, j);
for(j = 165120; j < 165130; j++) _solve(b, j);
for(j = 165960; j < 165970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 166800; j < 166810; j++) _solve(b, j);
for(j = 167640; j < 167650; j++) _solve(b, j);
for(j = 168480; j < 168490; j++) _solve(b, j);
for(j = 169320; j < 169330; j++) _solve(b, j);
for(j = 170160; j < 170170; j++) _solve(b, j);
for(j = 171000; j < 171010; j++) _solve(b, j);
for(j = 171840; j < 171850; j++) _solve(b, j);
for(j = 172680; j < 172690; j++) _solve(b, j);
for(j = 173520; j < 173530; j++) _solve(b, j);
for(j = 174360; j < 174370; j++) _solve(b, j);
for(j = 175200; j < 175210; j++) _solve(b, j);
for(j = 176040; j < 176050; j++) _solve(b, j);
for(j = 176880; j < 176890; j++) _solve(b, j);
for(j = 177720; j < 177730; j++) _solve(b, j);
for(j = 178560; j < 178570; j++) _solve(b, j);
for(j = 179400; j < 179410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 180240; j < 180250; j++) _solve(b, j);
for(j = 181080; j < 181090; j++) _solve(b, j);
for(j = 181920; j < 181930; j++) _solve(b, j);
for(j = 182760; j < 182770; j++) _solve(b, j);
for(j = 183600; j < 183610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 113890; j < 113900; j++) _solve(b, j);
for(j = 114730; j < 114740; j++) _solve(b, j);
for(j = 115570; j < 115580; j++) _solve(b, j);
for(j = 116410; j < 116420; j++) _solve(b, j);
for(j = 117250; j < 117260; j++) _solve(b, j);
for(j = 118090; j < 118100; j++) _solve(b, j);
for(j = 118930; j < 118940; j++) _solve(b, j);
for(j = 119770; j < 119780; j++) _solve(b, j);
for(j = 120610; j < 120620; j++) _solve(b, j);
for(j = 121450; j < 121460; j++) _solve(b, j);
for(j = 122290; j < 122300; j++) _solve(b, j);
for(j = 123130; j < 123140; j++) _solve(b, j);
for(j = 123970; j < 123980; j++) _solve(b, j);
for(j = 124810; j < 124820; j++) _solve(b, j);
for(j = 125650; j < 125660; j++) _solve(b, j);
for(j = 126490; j < 126500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 127330; j < 127340; j++) _solve(b, j);
for(j = 128170; j < 128180; j++) _solve(b, j);
for(j = 129010; j < 129020; j++) _solve(b, j);
for(j = 129850; j < 129860; j++) _solve(b, j);
for(j = 130690; j < 130700; j++) _solve(b, j);
for(j = 131530; j < 131540; j++) _solve(b, j);
for(j = 132370; j < 132380; j++) _solve(b, j);
for(j = 133210; j < 133220; j++) _solve(b, j);
for(j = 134050; j < 134060; j++) _solve(b, j);
for(j = 134890; j < 134900; j++) _solve(b, j);
for(j = 135730; j < 135740; j++) _solve(b, j);
for(j = 136570; j < 136580; j++) _solve(b, j);
for(j = 137410; j < 137420; j++) _solve(b, j);
for(j = 138250; j < 138260; j++) _solve(b, j);
for(j = 139090; j < 139100; j++) _solve(b, j);
for(j = 139930; j < 139940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 140770; j < 140780; j++) _solve(b, j);
for(j = 141610; j < 141620; j++) _solve(b, j);
for(j = 142450; j < 142460; j++) _solve(b, j);
for(j = 143290; j < 143300; j++) _solve(b, j);
for(j = 144130; j < 144140; j++) _solve(b, j);
for(j = 144970; j < 144980; j++) _solve(b, j);
for(j = 145810; j < 145820; j++) _solve(b, j);
for(j = 146650; j < 146660; j++) _solve(b, j);
for(j = 147490; j < 147500; j++) _solve(b, j);
for(j = 148330; j < 148340; j++) _solve(b, j);
for(j = 149170; j < 149180; j++) _solve(b, j);
for(j = 150010; j < 150020; j++) _solve(b, j);
for(j = 150850; j < 150860; j++) _solve(b, j);
for(j = 151690; j < 151700; j++) _solve(b, j);
for(j = 152530; j < 152540; j++) _solve(b, j);
for(j = 153370; j < 153380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 154210; j < 154220; j++) _solve(b, j);
for(j = 155050; j < 155060; j++) _solve(b, j);
for(j = 155890; j < 155900; j++) _solve(b, j);
for(j = 156730; j < 156740; j++) _solve(b, j);
for(j = 157570; j < 157580; j++) _solve(b, j);
for(j = 158410; j < 158420; j++) _solve(b, j);
for(j = 159250; j < 159260; j++) _solve(b, j);
for(j = 160090; j < 160100; j++) _solve(b, j);
for(j = 160930; j < 160940; j++) _solve(b, j);
for(j = 161770; j < 161780; j++) _solve(b, j);
for(j = 162610; j < 162620; j++) _solve(b, j);
for(j = 163450; j < 163460; j++) _solve(b, j);
for(j = 164290; j < 164300; j++) _solve(b, j);
for(j = 165130; j < 165140; j++) _solve(b, j);
for(j = 165970; j < 165980; j++) _solve(b, j);
for(j = 166810; j < 166820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 167650; j < 167660; j++) _solve(b, j);
for(j = 168490; j < 168500; j++) _solve(b, j);
for(j = 169330; j < 169340; j++) _solve(b, j);
for(j = 170170; j < 170180; j++) _solve(b, j);
for(j = 171010; j < 171020; j++) _solve(b, j);
for(j = 171850; j < 171860; j++) _solve(b, j);
for(j = 172690; j < 172700; j++) _solve(b, j);
for(j = 173530; j < 173540; j++) _solve(b, j);
for(j = 174370; j < 174380; j++) _solve(b, j);
for(j = 175210; j < 175220; j++) _solve(b, j);
for(j = 176050; j < 176060; j++) _solve(b, j);
for(j = 176890; j < 176900; j++) _solve(b, j);
for(j = 177730; j < 177740; j++) _solve(b, j);
for(j = 178570; j < 178580; j++) _solve(b, j);
for(j = 179410; j < 179420; j++) _solve(b, j);
for(j = 180250; j < 180260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 181090; j < 181100; j++) _solve(b, j);
for(j = 181930; j < 181940; j++) _solve(b, j);
for(j = 182770; j < 182780; j++) _solve(b, j);
for(j = 183610; j < 183620; j++) _solve(b, j);
for(j = 184450; j < 184460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 114740; j < 114750; j++) _solve(b, j);
for(j = 115580; j < 115590; j++) _solve(b, j);
for(j = 116420; j < 116430; j++) _solve(b, j);
for(j = 117260; j < 117270; j++) _solve(b, j);
for(j = 118100; j < 118110; j++) _solve(b, j);
for(j = 118940; j < 118950; j++) _solve(b, j);
for(j = 119780; j < 119790; j++) _solve(b, j);
for(j = 120620; j < 120630; j++) _solve(b, j);
for(j = 121460; j < 121470; j++) _solve(b, j);
for(j = 122300; j < 122310; j++) _solve(b, j);
for(j = 123140; j < 123150; j++) _solve(b, j);
for(j = 123980; j < 123990; j++) _solve(b, j);
for(j = 124820; j < 124830; j++) _solve(b, j);
for(j = 125660; j < 125670; j++) _solve(b, j);
for(j = 126500; j < 126510; j++) _solve(b, j);
for(j = 127340; j < 127350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 128180; j < 128190; j++) _solve(b, j);
for(j = 129020; j < 129030; j++) _solve(b, j);
for(j = 129860; j < 129870; j++) _solve(b, j);
for(j = 130700; j < 130710; j++) _solve(b, j);
for(j = 131540; j < 131550; j++) _solve(b, j);
for(j = 132380; j < 132390; j++) _solve(b, j);
for(j = 133220; j < 133230; j++) _solve(b, j);
for(j = 134060; j < 134070; j++) _solve(b, j);
for(j = 134900; j < 134910; j++) _solve(b, j);
for(j = 135740; j < 135750; j++) _solve(b, j);
for(j = 136580; j < 136590; j++) _solve(b, j);
for(j = 137420; j < 137430; j++) _solve(b, j);
for(j = 138260; j < 138270; j++) _solve(b, j);
for(j = 139100; j < 139110; j++) _solve(b, j);
for(j = 139940; j < 139950; j++) _solve(b, j);
for(j = 140780; j < 140790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 141620; j < 141630; j++) _solve(b, j);
for(j = 142460; j < 142470; j++) _solve(b, j);
for(j = 143300; j < 143310; j++) _solve(b, j);
for(j = 144140; j < 144150; j++) _solve(b, j);
for(j = 144980; j < 144990; j++) _solve(b, j);
for(j = 145820; j < 145830; j++) _solve(b, j);
for(j = 146660; j < 146670; j++) _solve(b, j);
for(j = 147500; j < 147510; j++) _solve(b, j);
for(j = 148340; j < 148350; j++) _solve(b, j);
for(j = 149180; j < 149190; j++) _solve(b, j);
for(j = 150020; j < 150030; j++) _solve(b, j);
for(j = 150860; j < 150870; j++) _solve(b, j);
for(j = 151700; j < 151710; j++) _solve(b, j);
for(j = 152540; j < 152550; j++) _solve(b, j);
for(j = 153380; j < 153390; j++) _solve(b, j);
for(j = 154220; j < 154230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 155060; j < 155070; j++) _solve(b, j);
for(j = 155900; j < 155910; j++) _solve(b, j);
for(j = 156740; j < 156750; j++) _solve(b, j);
for(j = 157580; j < 157590; j++) _solve(b, j);
for(j = 158420; j < 158430; j++) _solve(b, j);
for(j = 159260; j < 159270; j++) _solve(b, j);
for(j = 160100; j < 160110; j++) _solve(b, j);
for(j = 160940; j < 160950; j++) _solve(b, j);
for(j = 161780; j < 161790; j++) _solve(b, j);
for(j = 162620; j < 162630; j++) _solve(b, j);
for(j = 163460; j < 163470; j++) _solve(b, j);
for(j = 164300; j < 164310; j++) _solve(b, j);
for(j = 165140; j < 165150; j++) _solve(b, j);
for(j = 165980; j < 165990; j++) _solve(b, j);
for(j = 166820; j < 166830; j++) _solve(b, j);
for(j = 167660; j < 167670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 168500; j < 168510; j++) _solve(b, j);
for(j = 169340; j < 169350; j++) _solve(b, j);
for(j = 170180; j < 170190; j++) _solve(b, j);
for(j = 171020; j < 171030; j++) _solve(b, j);
for(j = 171860; j < 171870; j++) _solve(b, j);
for(j = 172700; j < 172710; j++) _solve(b, j);
for(j = 173540; j < 173550; j++) _solve(b, j);
for(j = 174380; j < 174390; j++) _solve(b, j);
for(j = 175220; j < 175230; j++) _solve(b, j);
for(j = 176060; j < 176070; j++) _solve(b, j);
for(j = 176900; j < 176910; j++) _solve(b, j);
for(j = 177740; j < 177750; j++) _solve(b, j);
for(j = 178580; j < 178590; j++) _solve(b, j);
for(j = 179420; j < 179430; j++) _solve(b, j);
for(j = 180260; j < 180270; j++) _solve(b, j);
for(j = 181100; j < 181110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 181940; j < 181950; j++) _solve(b, j);
for(j = 182780; j < 182790; j++) _solve(b, j);
for(j = 183620; j < 183630; j++) _solve(b, j);
for(j = 184460; j < 184470; j++) _solve(b, j);
for(j = 185300; j < 185310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 115590; j < 115600; j++) _solve(b, j);
for(j = 116430; j < 116440; j++) _solve(b, j);
for(j = 117270; j < 117280; j++) _solve(b, j);
for(j = 118110; j < 118120; j++) _solve(b, j);
for(j = 118950; j < 118960; j++) _solve(b, j);
for(j = 119790; j < 119800; j++) _solve(b, j);
for(j = 120630; j < 120640; j++) _solve(b, j);
for(j = 121470; j < 121480; j++) _solve(b, j);
for(j = 122310; j < 122320; j++) _solve(b, j);
for(j = 123150; j < 123160; j++) _solve(b, j);
for(j = 123990; j < 124000; j++) _solve(b, j);
for(j = 124830; j < 124840; j++) _solve(b, j);
for(j = 125670; j < 125680; j++) _solve(b, j);
for(j = 126510; j < 126520; j++) _solve(b, j);
for(j = 127350; j < 127360; j++) _solve(b, j);
for(j = 128190; j < 128200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 129030; j < 129040; j++) _solve(b, j);
for(j = 129870; j < 129880; j++) _solve(b, j);
for(j = 130710; j < 130720; j++) _solve(b, j);
for(j = 131550; j < 131560; j++) _solve(b, j);
for(j = 132390; j < 132400; j++) _solve(b, j);
for(j = 133230; j < 133240; j++) _solve(b, j);
for(j = 134070; j < 134080; j++) _solve(b, j);
for(j = 134910; j < 134920; j++) _solve(b, j);
for(j = 135750; j < 135760; j++) _solve(b, j);
for(j = 136590; j < 136600; j++) _solve(b, j);
for(j = 137430; j < 137440; j++) _solve(b, j);
for(j = 138270; j < 138280; j++) _solve(b, j);
for(j = 139110; j < 139120; j++) _solve(b, j);
for(j = 139950; j < 139960; j++) _solve(b, j);
for(j = 140790; j < 140800; j++) _solve(b, j);
for(j = 141630; j < 141640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 142470; j < 142480; j++) _solve(b, j);
for(j = 143310; j < 143320; j++) _solve(b, j);
for(j = 144150; j < 144160; j++) _solve(b, j);
for(j = 144990; j < 145000; j++) _solve(b, j);
for(j = 145830; j < 145840; j++) _solve(b, j);
for(j = 146670; j < 146680; j++) _solve(b, j);
for(j = 147510; j < 147520; j++) _solve(b, j);
for(j = 148350; j < 148360; j++) _solve(b, j);
for(j = 149190; j < 149200; j++) _solve(b, j);
for(j = 150030; j < 150040; j++) _solve(b, j);
for(j = 150870; j < 150880; j++) _solve(b, j);
for(j = 151710; j < 151720; j++) _solve(b, j);
for(j = 152550; j < 152560; j++) _solve(b, j);
for(j = 153390; j < 153400; j++) _solve(b, j);
for(j = 154230; j < 154240; j++) _solve(b, j);
for(j = 155070; j < 155080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 155910; j < 155920; j++) _solve(b, j);
for(j = 156750; j < 156760; j++) _solve(b, j);
for(j = 157590; j < 157600; j++) _solve(b, j);
for(j = 158430; j < 158440; j++) _solve(b, j);
for(j = 159270; j < 159280; j++) _solve(b, j);
for(j = 160110; j < 160120; j++) _solve(b, j);
for(j = 160950; j < 160960; j++) _solve(b, j);
for(j = 161790; j < 161800; j++) _solve(b, j);
for(j = 162630; j < 162640; j++) _solve(b, j);
for(j = 163470; j < 163480; j++) _solve(b, j);
for(j = 164310; j < 164320; j++) _solve(b, j);
for(j = 165150; j < 165160; j++) _solve(b, j);
for(j = 165990; j < 166000; j++) _solve(b, j);
for(j = 166830; j < 166840; j++) _solve(b, j);
for(j = 167670; j < 167680; j++) _solve(b, j);
for(j = 168510; j < 168520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 169350; j < 169360; j++) _solve(b, j);
for(j = 170190; j < 170200; j++) _solve(b, j);
for(j = 171030; j < 171040; j++) _solve(b, j);
for(j = 171870; j < 171880; j++) _solve(b, j);
for(j = 172710; j < 172720; j++) _solve(b, j);
for(j = 173550; j < 173560; j++) _solve(b, j);
for(j = 174390; j < 174400; j++) _solve(b, j);
for(j = 175230; j < 175240; j++) _solve(b, j);
for(j = 176070; j < 176080; j++) _solve(b, j);
for(j = 176910; j < 176920; j++) _solve(b, j);
for(j = 177750; j < 177760; j++) _solve(b, j);
for(j = 178590; j < 178600; j++) _solve(b, j);
for(j = 179430; j < 179440; j++) _solve(b, j);
for(j = 180270; j < 180280; j++) _solve(b, j);
for(j = 181110; j < 181120; j++) _solve(b, j);
for(j = 181950; j < 181960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 182790; j < 182800; j++) _solve(b, j);
for(j = 183630; j < 183640; j++) _solve(b, j);
for(j = 184470; j < 184480; j++) _solve(b, j);
for(j = 185310; j < 185320; j++) _solve(b, j);
for(j = 186150; j < 186160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 116440; j < 116450; j++) _solve(b, j);
for(j = 117280; j < 117290; j++) _solve(b, j);
for(j = 118120; j < 118130; j++) _solve(b, j);
for(j = 118960; j < 118970; j++) _solve(b, j);
for(j = 119800; j < 119810; j++) _solve(b, j);
for(j = 120640; j < 120650; j++) _solve(b, j);
for(j = 121480; j < 121490; j++) _solve(b, j);
for(j = 122320; j < 122330; j++) _solve(b, j);
for(j = 123160; j < 123170; j++) _solve(b, j);
for(j = 124000; j < 124010; j++) _solve(b, j);
for(j = 124840; j < 124850; j++) _solve(b, j);
for(j = 125680; j < 125690; j++) _solve(b, j);
for(j = 126520; j < 126530; j++) _solve(b, j);
for(j = 127360; j < 127370; j++) _solve(b, j);
for(j = 128200; j < 128210; j++) _solve(b, j);
for(j = 129040; j < 129050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 129880; j < 129890; j++) _solve(b, j);
for(j = 130720; j < 130730; j++) _solve(b, j);
for(j = 131560; j < 131570; j++) _solve(b, j);
for(j = 132400; j < 132410; j++) _solve(b, j);
for(j = 133240; j < 133250; j++) _solve(b, j);
for(j = 134080; j < 134090; j++) _solve(b, j);
for(j = 134920; j < 134930; j++) _solve(b, j);
for(j = 135760; j < 135770; j++) _solve(b, j);
for(j = 136600; j < 136610; j++) _solve(b, j);
for(j = 137440; j < 137450; j++) _solve(b, j);
for(j = 138280; j < 138290; j++) _solve(b, j);
for(j = 139120; j < 139130; j++) _solve(b, j);
for(j = 139960; j < 139970; j++) _solve(b, j);
for(j = 140800; j < 140810; j++) _solve(b, j);
for(j = 141640; j < 141650; j++) _solve(b, j);
for(j = 142480; j < 142490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 143320; j < 143330; j++) _solve(b, j);
for(j = 144160; j < 144170; j++) _solve(b, j);
for(j = 145000; j < 145010; j++) _solve(b, j);
for(j = 145840; j < 145850; j++) _solve(b, j);
for(j = 146680; j < 146690; j++) _solve(b, j);
for(j = 147520; j < 147530; j++) _solve(b, j);
for(j = 148360; j < 148370; j++) _solve(b, j);
for(j = 149200; j < 149210; j++) _solve(b, j);
for(j = 150040; j < 150050; j++) _solve(b, j);
for(j = 150880; j < 150890; j++) _solve(b, j);
for(j = 151720; j < 151730; j++) _solve(b, j);
for(j = 152560; j < 152570; j++) _solve(b, j);
for(j = 153400; j < 153410; j++) _solve(b, j);
for(j = 154240; j < 154250; j++) _solve(b, j);
for(j = 155080; j < 155090; j++) _solve(b, j);
for(j = 155920; j < 155930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 156760; j < 156770; j++) _solve(b, j);
for(j = 157600; j < 157610; j++) _solve(b, j);
for(j = 158440; j < 158450; j++) _solve(b, j);
for(j = 159280; j < 159290; j++) _solve(b, j);
for(j = 160120; j < 160130; j++) _solve(b, j);
for(j = 160960; j < 160970; j++) _solve(b, j);
for(j = 161800; j < 161810; j++) _solve(b, j);
for(j = 162640; j < 162650; j++) _solve(b, j);
for(j = 163480; j < 163490; j++) _solve(b, j);
for(j = 164320; j < 164330; j++) _solve(b, j);
for(j = 165160; j < 165170; j++) _solve(b, j);
for(j = 166000; j < 166010; j++) _solve(b, j);
for(j = 166840; j < 166850; j++) _solve(b, j);
for(j = 167680; j < 167690; j++) _solve(b, j);
for(j = 168520; j < 168530; j++) _solve(b, j);
for(j = 169360; j < 169370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 170200; j < 170210; j++) _solve(b, j);
for(j = 171040; j < 171050; j++) _solve(b, j);
for(j = 171880; j < 171890; j++) _solve(b, j);
for(j = 172720; j < 172730; j++) _solve(b, j);
for(j = 173560; j < 173570; j++) _solve(b, j);
for(j = 174400; j < 174410; j++) _solve(b, j);
for(j = 175240; j < 175250; j++) _solve(b, j);
for(j = 176080; j < 176090; j++) _solve(b, j);
for(j = 176920; j < 176930; j++) _solve(b, j);
for(j = 177760; j < 177770; j++) _solve(b, j);
for(j = 178600; j < 178610; j++) _solve(b, j);
for(j = 179440; j < 179450; j++) _solve(b, j);
for(j = 180280; j < 180290; j++) _solve(b, j);
for(j = 181120; j < 181130; j++) _solve(b, j);
for(j = 181960; j < 181970; j++) _solve(b, j);
for(j = 182800; j < 182810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 183640; j < 183650; j++) _solve(b, j);
for(j = 184480; j < 184490; j++) _solve(b, j);
for(j = 185320; j < 185330; j++) _solve(b, j);
for(j = 186160; j < 186170; j++) _solve(b, j);
for(j = 187000; j < 187010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 117290; j < 117300; j++) _solve(b, j);
for(j = 118130; j < 118140; j++) _solve(b, j);
for(j = 118970; j < 118980; j++) _solve(b, j);
for(j = 119810; j < 119820; j++) _solve(b, j);
for(j = 120650; j < 120660; j++) _solve(b, j);
for(j = 121490; j < 121500; j++) _solve(b, j);
for(j = 122330; j < 122340; j++) _solve(b, j);
for(j = 123170; j < 123180; j++) _solve(b, j);
for(j = 124010; j < 124020; j++) _solve(b, j);
for(j = 124850; j < 124860; j++) _solve(b, j);
for(j = 125690; j < 125700; j++) _solve(b, j);
for(j = 126530; j < 126540; j++) _solve(b, j);
for(j = 127370; j < 127380; j++) _solve(b, j);
for(j = 128210; j < 128220; j++) _solve(b, j);
for(j = 129050; j < 129060; j++) _solve(b, j);
for(j = 129890; j < 129900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 130730; j < 130740; j++) _solve(b, j);
for(j = 131570; j < 131580; j++) _solve(b, j);
for(j = 132410; j < 132420; j++) _solve(b, j);
for(j = 133250; j < 133260; j++) _solve(b, j);
for(j = 134090; j < 134100; j++) _solve(b, j);
for(j = 134930; j < 134940; j++) _solve(b, j);
for(j = 135770; j < 135780; j++) _solve(b, j);
for(j = 136610; j < 136620; j++) _solve(b, j);
for(j = 137450; j < 137460; j++) _solve(b, j);
for(j = 138290; j < 138300; j++) _solve(b, j);
for(j = 139130; j < 139140; j++) _solve(b, j);
for(j = 139970; j < 139980; j++) _solve(b, j);
for(j = 140810; j < 140820; j++) _solve(b, j);
for(j = 141650; j < 141660; j++) _solve(b, j);
for(j = 142490; j < 142500; j++) _solve(b, j);
for(j = 143330; j < 143340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 144170; j < 144180; j++) _solve(b, j);
for(j = 145010; j < 145020; j++) _solve(b, j);
for(j = 145850; j < 145860; j++) _solve(b, j);
for(j = 146690; j < 146700; j++) _solve(b, j);
for(j = 147530; j < 147540; j++) _solve(b, j);
for(j = 148370; j < 148380; j++) _solve(b, j);
for(j = 149210; j < 149220; j++) _solve(b, j);
for(j = 150050; j < 150060; j++) _solve(b, j);
for(j = 150890; j < 150900; j++) _solve(b, j);
for(j = 151730; j < 151740; j++) _solve(b, j);
for(j = 152570; j < 152580; j++) _solve(b, j);
for(j = 153410; j < 153420; j++) _solve(b, j);
for(j = 154250; j < 154260; j++) _solve(b, j);
for(j = 155090; j < 155100; j++) _solve(b, j);
for(j = 155930; j < 155940; j++) _solve(b, j);
for(j = 156770; j < 156780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 157610; j < 157620; j++) _solve(b, j);
for(j = 158450; j < 158460; j++) _solve(b, j);
for(j = 159290; j < 159300; j++) _solve(b, j);
for(j = 160130; j < 160140; j++) _solve(b, j);
for(j = 160970; j < 160980; j++) _solve(b, j);
for(j = 161810; j < 161820; j++) _solve(b, j);
for(j = 162650; j < 162660; j++) _solve(b, j);
for(j = 163490; j < 163500; j++) _solve(b, j);
for(j = 164330; j < 164340; j++) _solve(b, j);
for(j = 165170; j < 165180; j++) _solve(b, j);
for(j = 166010; j < 166020; j++) _solve(b, j);
for(j = 166850; j < 166860; j++) _solve(b, j);
for(j = 167690; j < 167700; j++) _solve(b, j);
for(j = 168530; j < 168540; j++) _solve(b, j);
for(j = 169370; j < 169380; j++) _solve(b, j);
for(j = 170210; j < 170220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 171050; j < 171060; j++) _solve(b, j);
for(j = 171890; j < 171900; j++) _solve(b, j);
for(j = 172730; j < 172740; j++) _solve(b, j);
for(j = 173570; j < 173580; j++) _solve(b, j);
for(j = 174410; j < 174420; j++) _solve(b, j);
for(j = 175250; j < 175260; j++) _solve(b, j);
for(j = 176090; j < 176100; j++) _solve(b, j);
for(j = 176930; j < 176940; j++) _solve(b, j);
for(j = 177770; j < 177780; j++) _solve(b, j);
for(j = 178610; j < 178620; j++) _solve(b, j);
for(j = 179450; j < 179460; j++) _solve(b, j);
for(j = 180290; j < 180300; j++) _solve(b, j);
for(j = 181130; j < 181140; j++) _solve(b, j);
for(j = 181970; j < 181980; j++) _solve(b, j);
for(j = 182810; j < 182820; j++) _solve(b, j);
for(j = 183650; j < 183660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 184490; j < 184500; j++) _solve(b, j);
for(j = 185330; j < 185340; j++) _solve(b, j);
for(j = 186170; j < 186180; j++) _solve(b, j);
for(j = 187010; j < 187020; j++) _solve(b, j);
for(j = 187850; j < 187860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 118140; j < 118150; j++) _solve(b, j);
for(j = 118980; j < 118990; j++) _solve(b, j);
for(j = 119820; j < 119830; j++) _solve(b, j);
for(j = 120660; j < 120670; j++) _solve(b, j);
for(j = 121500; j < 121510; j++) _solve(b, j);
for(j = 122340; j < 122350; j++) _solve(b, j);
for(j = 123180; j < 123190; j++) _solve(b, j);
for(j = 124020; j < 124030; j++) _solve(b, j);
for(j = 124860; j < 124870; j++) _solve(b, j);
for(j = 125700; j < 125710; j++) _solve(b, j);
for(j = 126540; j < 126550; j++) _solve(b, j);
for(j = 127380; j < 127390; j++) _solve(b, j);
for(j = 128220; j < 128230; j++) _solve(b, j);
for(j = 129060; j < 129070; j++) _solve(b, j);
for(j = 129900; j < 129910; j++) _solve(b, j);
for(j = 130740; j < 130750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 131580; j < 131590; j++) _solve(b, j);
for(j = 132420; j < 132430; j++) _solve(b, j);
for(j = 133260; j < 133270; j++) _solve(b, j);
for(j = 134100; j < 134110; j++) _solve(b, j);
for(j = 134940; j < 134950; j++) _solve(b, j);
for(j = 135780; j < 135790; j++) _solve(b, j);
for(j = 136620; j < 136630; j++) _solve(b, j);
for(j = 137460; j < 137470; j++) _solve(b, j);
for(j = 138300; j < 138310; j++) _solve(b, j);
for(j = 139140; j < 139150; j++) _solve(b, j);
for(j = 139980; j < 139990; j++) _solve(b, j);
for(j = 140820; j < 140830; j++) _solve(b, j);
for(j = 141660; j < 141670; j++) _solve(b, j);
for(j = 142500; j < 142510; j++) _solve(b, j);
for(j = 143340; j < 143350; j++) _solve(b, j);
for(j = 144180; j < 144190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 145020; j < 145030; j++) _solve(b, j);
for(j = 145860; j < 145870; j++) _solve(b, j);
for(j = 146700; j < 146710; j++) _solve(b, j);
for(j = 147540; j < 147550; j++) _solve(b, j);
for(j = 148380; j < 148390; j++) _solve(b, j);
for(j = 149220; j < 149230; j++) _solve(b, j);
for(j = 150060; j < 150070; j++) _solve(b, j);
for(j = 150900; j < 150910; j++) _solve(b, j);
for(j = 151740; j < 151750; j++) _solve(b, j);
for(j = 152580; j < 152590; j++) _solve(b, j);
for(j = 153420; j < 153430; j++) _solve(b, j);
for(j = 154260; j < 154270; j++) _solve(b, j);
for(j = 155100; j < 155110; j++) _solve(b, j);
for(j = 155940; j < 155950; j++) _solve(b, j);
for(j = 156780; j < 156790; j++) _solve(b, j);
for(j = 157620; j < 157630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 158460; j < 158470; j++) _solve(b, j);
for(j = 159300; j < 159310; j++) _solve(b, j);
for(j = 160140; j < 160150; j++) _solve(b, j);
for(j = 160980; j < 160990; j++) _solve(b, j);
for(j = 161820; j < 161830; j++) _solve(b, j);
for(j = 162660; j < 162670; j++) _solve(b, j);
for(j = 163500; j < 163510; j++) _solve(b, j);
for(j = 164340; j < 164350; j++) _solve(b, j);
for(j = 165180; j < 165190; j++) _solve(b, j);
for(j = 166020; j < 166030; j++) _solve(b, j);
for(j = 166860; j < 166870; j++) _solve(b, j);
for(j = 167700; j < 167710; j++) _solve(b, j);
for(j = 168540; j < 168550; j++) _solve(b, j);
for(j = 169380; j < 169390; j++) _solve(b, j);
for(j = 170220; j < 170230; j++) _solve(b, j);
for(j = 171060; j < 171070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 171900; j < 171910; j++) _solve(b, j);
for(j = 172740; j < 172750; j++) _solve(b, j);
for(j = 173580; j < 173590; j++) _solve(b, j);
for(j = 174420; j < 174430; j++) _solve(b, j);
for(j = 175260; j < 175270; j++) _solve(b, j);
for(j = 176100; j < 176110; j++) _solve(b, j);
for(j = 176940; j < 176950; j++) _solve(b, j);
for(j = 177780; j < 177790; j++) _solve(b, j);
for(j = 178620; j < 178630; j++) _solve(b, j);
for(j = 179460; j < 179470; j++) _solve(b, j);
for(j = 180300; j < 180310; j++) _solve(b, j);
for(j = 181140; j < 181150; j++) _solve(b, j);
for(j = 181980; j < 181990; j++) _solve(b, j);
for(j = 182820; j < 182830; j++) _solve(b, j);
for(j = 183660; j < 183670; j++) _solve(b, j);
for(j = 184500; j < 184510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 185340; j < 185350; j++) _solve(b, j);
for(j = 186180; j < 186190; j++) _solve(b, j);
for(j = 187020; j < 187030; j++) _solve(b, j);
for(j = 187860; j < 187870; j++) _solve(b, j);
for(j = 188700; j < 188710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 118990; j < 119000; j++) _solve(b, j);
for(j = 119830; j < 119840; j++) _solve(b, j);
for(j = 120670; j < 120680; j++) _solve(b, j);
for(j = 121510; j < 121520; j++) _solve(b, j);
for(j = 122350; j < 122360; j++) _solve(b, j);
for(j = 123190; j < 123200; j++) _solve(b, j);
for(j = 124030; j < 124040; j++) _solve(b, j);
for(j = 124870; j < 124880; j++) _solve(b, j);
for(j = 125710; j < 125720; j++) _solve(b, j);
for(j = 126550; j < 126560; j++) _solve(b, j);
for(j = 127390; j < 127400; j++) _solve(b, j);
for(j = 128230; j < 128240; j++) _solve(b, j);
for(j = 129070; j < 129080; j++) _solve(b, j);
for(j = 129910; j < 129920; j++) _solve(b, j);
for(j = 130750; j < 130760; j++) _solve(b, j);
for(j = 131590; j < 131600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 132430; j < 132440; j++) _solve(b, j);
for(j = 133270; j < 133280; j++) _solve(b, j);
for(j = 134110; j < 134120; j++) _solve(b, j);
for(j = 134950; j < 134960; j++) _solve(b, j);
for(j = 135790; j < 135800; j++) _solve(b, j);
for(j = 136630; j < 136640; j++) _solve(b, j);
for(j = 137470; j < 137480; j++) _solve(b, j);
for(j = 138310; j < 138320; j++) _solve(b, j);
for(j = 139150; j < 139160; j++) _solve(b, j);
for(j = 139990; j < 140000; j++) _solve(b, j);
for(j = 140830; j < 140840; j++) _solve(b, j);
for(j = 141670; j < 141680; j++) _solve(b, j);
for(j = 142510; j < 142520; j++) _solve(b, j);
for(j = 143350; j < 143360; j++) _solve(b, j);
for(j = 144190; j < 144200; j++) _solve(b, j);
for(j = 145030; j < 145040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 145870; j < 145880; j++) _solve(b, j);
for(j = 146710; j < 146720; j++) _solve(b, j);
for(j = 147550; j < 147560; j++) _solve(b, j);
for(j = 148390; j < 148400; j++) _solve(b, j);
for(j = 149230; j < 149240; j++) _solve(b, j);
for(j = 150070; j < 150080; j++) _solve(b, j);
for(j = 150910; j < 150920; j++) _solve(b, j);
for(j = 151750; j < 151760; j++) _solve(b, j);
for(j = 152590; j < 152600; j++) _solve(b, j);
for(j = 153430; j < 153440; j++) _solve(b, j);
for(j = 154270; j < 154280; j++) _solve(b, j);
for(j = 155110; j < 155120; j++) _solve(b, j);
for(j = 155950; j < 155960; j++) _solve(b, j);
for(j = 156790; j < 156800; j++) _solve(b, j);
for(j = 157630; j < 157640; j++) _solve(b, j);
for(j = 158470; j < 158480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 159310; j < 159320; j++) _solve(b, j);
for(j = 160150; j < 160160; j++) _solve(b, j);
for(j = 160990; j < 161000; j++) _solve(b, j);
for(j = 161830; j < 161840; j++) _solve(b, j);
for(j = 162670; j < 162680; j++) _solve(b, j);
for(j = 163510; j < 163520; j++) _solve(b, j);
for(j = 164350; j < 164360; j++) _solve(b, j);
for(j = 165190; j < 165200; j++) _solve(b, j);
for(j = 166030; j < 166040; j++) _solve(b, j);
for(j = 166870; j < 166880; j++) _solve(b, j);
for(j = 167710; j < 167720; j++) _solve(b, j);
for(j = 168550; j < 168560; j++) _solve(b, j);
for(j = 169390; j < 169400; j++) _solve(b, j);
for(j = 170230; j < 170240; j++) _solve(b, j);
for(j = 171070; j < 171080; j++) _solve(b, j);
for(j = 171910; j < 171920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 172750; j < 172760; j++) _solve(b, j);
for(j = 173590; j < 173600; j++) _solve(b, j);
for(j = 174430; j < 174440; j++) _solve(b, j);
for(j = 175270; j < 175280; j++) _solve(b, j);
for(j = 176110; j < 176120; j++) _solve(b, j);
for(j = 176950; j < 176960; j++) _solve(b, j);
for(j = 177790; j < 177800; j++) _solve(b, j);
for(j = 178630; j < 178640; j++) _solve(b, j);
for(j = 179470; j < 179480; j++) _solve(b, j);
for(j = 180310; j < 180320; j++) _solve(b, j);
for(j = 181150; j < 181160; j++) _solve(b, j);
for(j = 181990; j < 182000; j++) _solve(b, j);
for(j = 182830; j < 182840; j++) _solve(b, j);
for(j = 183670; j < 183680; j++) _solve(b, j);
for(j = 184510; j < 184520; j++) _solve(b, j);
for(j = 185350; j < 185360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 186190; j < 186200; j++) _solve(b, j);
for(j = 187030; j < 187040; j++) _solve(b, j);
for(j = 187870; j < 187880; j++) _solve(b, j);
for(j = 188710; j < 188720; j++) _solve(b, j);
for(j = 189550; j < 189560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 119840; j < 119850; j++) _solve(b, j);
for(j = 120680; j < 120690; j++) _solve(b, j);
for(j = 121520; j < 121530; j++) _solve(b, j);
for(j = 122360; j < 122370; j++) _solve(b, j);
for(j = 123200; j < 123210; j++) _solve(b, j);
for(j = 124040; j < 124050; j++) _solve(b, j);
for(j = 124880; j < 124890; j++) _solve(b, j);
for(j = 125720; j < 125730; j++) _solve(b, j);
for(j = 126560; j < 126570; j++) _solve(b, j);
for(j = 127400; j < 127410; j++) _solve(b, j);
for(j = 128240; j < 128250; j++) _solve(b, j);
for(j = 129080; j < 129090; j++) _solve(b, j);
for(j = 129920; j < 129930; j++) _solve(b, j);
for(j = 130760; j < 130770; j++) _solve(b, j);
for(j = 131600; j < 131610; j++) _solve(b, j);
for(j = 132440; j < 132450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 133280; j < 133290; j++) _solve(b, j);
for(j = 134120; j < 134130; j++) _solve(b, j);
for(j = 134960; j < 134970; j++) _solve(b, j);
for(j = 135800; j < 135810; j++) _solve(b, j);
for(j = 136640; j < 136650; j++) _solve(b, j);
for(j = 137480; j < 137490; j++) _solve(b, j);
for(j = 138320; j < 138330; j++) _solve(b, j);
for(j = 139160; j < 139170; j++) _solve(b, j);
for(j = 140000; j < 140010; j++) _solve(b, j);
for(j = 140840; j < 140850; j++) _solve(b, j);
for(j = 141680; j < 141690; j++) _solve(b, j);
for(j = 142520; j < 142530; j++) _solve(b, j);
for(j = 143360; j < 143370; j++) _solve(b, j);
for(j = 144200; j < 144210; j++) _solve(b, j);
for(j = 145040; j < 145050; j++) _solve(b, j);
for(j = 145880; j < 145890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 146720; j < 146730; j++) _solve(b, j);
for(j = 147560; j < 147570; j++) _solve(b, j);
for(j = 148400; j < 148410; j++) _solve(b, j);
for(j = 149240; j < 149250; j++) _solve(b, j);
for(j = 150080; j < 150090; j++) _solve(b, j);
for(j = 150920; j < 150930; j++) _solve(b, j);
for(j = 151760; j < 151770; j++) _solve(b, j);
for(j = 152600; j < 152610; j++) _solve(b, j);
for(j = 153440; j < 153450; j++) _solve(b, j);
for(j = 154280; j < 154290; j++) _solve(b, j);
for(j = 155120; j < 155130; j++) _solve(b, j);
for(j = 155960; j < 155970; j++) _solve(b, j);
for(j = 156800; j < 156810; j++) _solve(b, j);
for(j = 157640; j < 157650; j++) _solve(b, j);
for(j = 158480; j < 158490; j++) _solve(b, j);
for(j = 159320; j < 159330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 160160; j < 160170; j++) _solve(b, j);
for(j = 161000; j < 161010; j++) _solve(b, j);
for(j = 161840; j < 161850; j++) _solve(b, j);
for(j = 162680; j < 162690; j++) _solve(b, j);
for(j = 163520; j < 163530; j++) _solve(b, j);
for(j = 164360; j < 164370; j++) _solve(b, j);
for(j = 165200; j < 165210; j++) _solve(b, j);
for(j = 166040; j < 166050; j++) _solve(b, j);
for(j = 166880; j < 166890; j++) _solve(b, j);
for(j = 167720; j < 167730; j++) _solve(b, j);
for(j = 168560; j < 168570; j++) _solve(b, j);
for(j = 169400; j < 169410; j++) _solve(b, j);
for(j = 170240; j < 170250; j++) _solve(b, j);
for(j = 171080; j < 171090; j++) _solve(b, j);
for(j = 171920; j < 171930; j++) _solve(b, j);
for(j = 172760; j < 172770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 173600; j < 173610; j++) _solve(b, j);
for(j = 174440; j < 174450; j++) _solve(b, j);
for(j = 175280; j < 175290; j++) _solve(b, j);
for(j = 176120; j < 176130; j++) _solve(b, j);
for(j = 176960; j < 176970; j++) _solve(b, j);
for(j = 177800; j < 177810; j++) _solve(b, j);
for(j = 178640; j < 178650; j++) _solve(b, j);
for(j = 179480; j < 179490; j++) _solve(b, j);
for(j = 180320; j < 180330; j++) _solve(b, j);
for(j = 181160; j < 181170; j++) _solve(b, j);
for(j = 182000; j < 182010; j++) _solve(b, j);
for(j = 182840; j < 182850; j++) _solve(b, j);
for(j = 183680; j < 183690; j++) _solve(b, j);
for(j = 184520; j < 184530; j++) _solve(b, j);
for(j = 185360; j < 185370; j++) _solve(b, j);
for(j = 186200; j < 186210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 187040; j < 187050; j++) _solve(b, j);
for(j = 187880; j < 187890; j++) _solve(b, j);
for(j = 188720; j < 188730; j++) _solve(b, j);
for(j = 189560; j < 189570; j++) _solve(b, j);
for(j = 190400; j < 190410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 120690; j < 120700; j++) _solve(b, j);
for(j = 121530; j < 121540; j++) _solve(b, j);
for(j = 122370; j < 122380; j++) _solve(b, j);
for(j = 123210; j < 123220; j++) _solve(b, j);
for(j = 124050; j < 124060; j++) _solve(b, j);
for(j = 124890; j < 124900; j++) _solve(b, j);
for(j = 125730; j < 125740; j++) _solve(b, j);
for(j = 126570; j < 126580; j++) _solve(b, j);
for(j = 127410; j < 127420; j++) _solve(b, j);
for(j = 128250; j < 128260; j++) _solve(b, j);
for(j = 129090; j < 129100; j++) _solve(b, j);
for(j = 129930; j < 129940; j++) _solve(b, j);
for(j = 130770; j < 130780; j++) _solve(b, j);
for(j = 131610; j < 131620; j++) _solve(b, j);
for(j = 132450; j < 132460; j++) _solve(b, j);
for(j = 133290; j < 133300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 134130; j < 134140; j++) _solve(b, j);
for(j = 134970; j < 134980; j++) _solve(b, j);
for(j = 135810; j < 135820; j++) _solve(b, j);
for(j = 136650; j < 136660; j++) _solve(b, j);
for(j = 137490; j < 137500; j++) _solve(b, j);
for(j = 138330; j < 138340; j++) _solve(b, j);
for(j = 139170; j < 139180; j++) _solve(b, j);
for(j = 140010; j < 140020; j++) _solve(b, j);
for(j = 140850; j < 140860; j++) _solve(b, j);
for(j = 141690; j < 141700; j++) _solve(b, j);
for(j = 142530; j < 142540; j++) _solve(b, j);
for(j = 143370; j < 143380; j++) _solve(b, j);
for(j = 144210; j < 144220; j++) _solve(b, j);
for(j = 145050; j < 145060; j++) _solve(b, j);
for(j = 145890; j < 145900; j++) _solve(b, j);
for(j = 146730; j < 146740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 147570; j < 147580; j++) _solve(b, j);
for(j = 148410; j < 148420; j++) _solve(b, j);
for(j = 149250; j < 149260; j++) _solve(b, j);
for(j = 150090; j < 150100; j++) _solve(b, j);
for(j = 150930; j < 150940; j++) _solve(b, j);
for(j = 151770; j < 151780; j++) _solve(b, j);
for(j = 152610; j < 152620; j++) _solve(b, j);
for(j = 153450; j < 153460; j++) _solve(b, j);
for(j = 154290; j < 154300; j++) _solve(b, j);
for(j = 155130; j < 155140; j++) _solve(b, j);
for(j = 155970; j < 155980; j++) _solve(b, j);
for(j = 156810; j < 156820; j++) _solve(b, j);
for(j = 157650; j < 157660; j++) _solve(b, j);
for(j = 158490; j < 158500; j++) _solve(b, j);
for(j = 159330; j < 159340; j++) _solve(b, j);
for(j = 160170; j < 160180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 161010; j < 161020; j++) _solve(b, j);
for(j = 161850; j < 161860; j++) _solve(b, j);
for(j = 162690; j < 162700; j++) _solve(b, j);
for(j = 163530; j < 163540; j++) _solve(b, j);
for(j = 164370; j < 164380; j++) _solve(b, j);
for(j = 165210; j < 165220; j++) _solve(b, j);
for(j = 166050; j < 166060; j++) _solve(b, j);
for(j = 166890; j < 166900; j++) _solve(b, j);
for(j = 167730; j < 167740; j++) _solve(b, j);
for(j = 168570; j < 168580; j++) _solve(b, j);
for(j = 169410; j < 169420; j++) _solve(b, j);
for(j = 170250; j < 170260; j++) _solve(b, j);
for(j = 171090; j < 171100; j++) _solve(b, j);
for(j = 171930; j < 171940; j++) _solve(b, j);
for(j = 172770; j < 172780; j++) _solve(b, j);
for(j = 173610; j < 173620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 174450; j < 174460; j++) _solve(b, j);
for(j = 175290; j < 175300; j++) _solve(b, j);
for(j = 176130; j < 176140; j++) _solve(b, j);
for(j = 176970; j < 176980; j++) _solve(b, j);
for(j = 177810; j < 177820; j++) _solve(b, j);
for(j = 178650; j < 178660; j++) _solve(b, j);
for(j = 179490; j < 179500; j++) _solve(b, j);
for(j = 180330; j < 180340; j++) _solve(b, j);
for(j = 181170; j < 181180; j++) _solve(b, j);
for(j = 182010; j < 182020; j++) _solve(b, j);
for(j = 182850; j < 182860; j++) _solve(b, j);
for(j = 183690; j < 183700; j++) _solve(b, j);
for(j = 184530; j < 184540; j++) _solve(b, j);
for(j = 185370; j < 185380; j++) _solve(b, j);
for(j = 186210; j < 186220; j++) _solve(b, j);
for(j = 187050; j < 187060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 187890; j < 187900; j++) _solve(b, j);
for(j = 188730; j < 188740; j++) _solve(b, j);
for(j = 189570; j < 189580; j++) _solve(b, j);
for(j = 190410; j < 190420; j++) _solve(b, j);
for(j = 191250; j < 191260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 121540; j < 121550; j++) _solve(b, j);
for(j = 122380; j < 122390; j++) _solve(b, j);
for(j = 123220; j < 123230; j++) _solve(b, j);
for(j = 124060; j < 124070; j++) _solve(b, j);
for(j = 124900; j < 124910; j++) _solve(b, j);
for(j = 125740; j < 125750; j++) _solve(b, j);
for(j = 126580; j < 126590; j++) _solve(b, j);
for(j = 127420; j < 127430; j++) _solve(b, j);
for(j = 128260; j < 128270; j++) _solve(b, j);
for(j = 129100; j < 129110; j++) _solve(b, j);
for(j = 129940; j < 129950; j++) _solve(b, j);
for(j = 130780; j < 130790; j++) _solve(b, j);
for(j = 131620; j < 131630; j++) _solve(b, j);
for(j = 132460; j < 132470; j++) _solve(b, j);
for(j = 133300; j < 133310; j++) _solve(b, j);
for(j = 134140; j < 134150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 134980; j < 134990; j++) _solve(b, j);
for(j = 135820; j < 135830; j++) _solve(b, j);
for(j = 136660; j < 136670; j++) _solve(b, j);
for(j = 137500; j < 137510; j++) _solve(b, j);
for(j = 138340; j < 138350; j++) _solve(b, j);
for(j = 139180; j < 139190; j++) _solve(b, j);
for(j = 140020; j < 140030; j++) _solve(b, j);
for(j = 140860; j < 140870; j++) _solve(b, j);
for(j = 141700; j < 141710; j++) _solve(b, j);
for(j = 142540; j < 142550; j++) _solve(b, j);
for(j = 143380; j < 143390; j++) _solve(b, j);
for(j = 144220; j < 144230; j++) _solve(b, j);
for(j = 145060; j < 145070; j++) _solve(b, j);
for(j = 145900; j < 145910; j++) _solve(b, j);
for(j = 146740; j < 146750; j++) _solve(b, j);
for(j = 147580; j < 147590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 148420; j < 148430; j++) _solve(b, j);
for(j = 149260; j < 149270; j++) _solve(b, j);
for(j = 150100; j < 150110; j++) _solve(b, j);
for(j = 150940; j < 150950; j++) _solve(b, j);
for(j = 151780; j < 151790; j++) _solve(b, j);
for(j = 152620; j < 152630; j++) _solve(b, j);
for(j = 153460; j < 153470; j++) _solve(b, j);
for(j = 154300; j < 154310; j++) _solve(b, j);
for(j = 155140; j < 155150; j++) _solve(b, j);
for(j = 155980; j < 155990; j++) _solve(b, j);
for(j = 156820; j < 156830; j++) _solve(b, j);
for(j = 157660; j < 157670; j++) _solve(b, j);
for(j = 158500; j < 158510; j++) _solve(b, j);
for(j = 159340; j < 159350; j++) _solve(b, j);
for(j = 160180; j < 160190; j++) _solve(b, j);
for(j = 161020; j < 161030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 161860; j < 161870; j++) _solve(b, j);
for(j = 162700; j < 162710; j++) _solve(b, j);
for(j = 163540; j < 163550; j++) _solve(b, j);
for(j = 164380; j < 164390; j++) _solve(b, j);
for(j = 165220; j < 165230; j++) _solve(b, j);
for(j = 166060; j < 166070; j++) _solve(b, j);
for(j = 166900; j < 166910; j++) _solve(b, j);
for(j = 167740; j < 167750; j++) _solve(b, j);
for(j = 168580; j < 168590; j++) _solve(b, j);
for(j = 169420; j < 169430; j++) _solve(b, j);
for(j = 170260; j < 170270; j++) _solve(b, j);
for(j = 171100; j < 171110; j++) _solve(b, j);
for(j = 171940; j < 171950; j++) _solve(b, j);
for(j = 172780; j < 172790; j++) _solve(b, j);
for(j = 173620; j < 173630; j++) _solve(b, j);
for(j = 174460; j < 174470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 175300; j < 175310; j++) _solve(b, j);
for(j = 176140; j < 176150; j++) _solve(b, j);
for(j = 176980; j < 176990; j++) _solve(b, j);
for(j = 177820; j < 177830; j++) _solve(b, j);
for(j = 178660; j < 178670; j++) _solve(b, j);
for(j = 179500; j < 179510; j++) _solve(b, j);
for(j = 180340; j < 180350; j++) _solve(b, j);
for(j = 181180; j < 181190; j++) _solve(b, j);
for(j = 182020; j < 182030; j++) _solve(b, j);
for(j = 182860; j < 182870; j++) _solve(b, j);
for(j = 183700; j < 183710; j++) _solve(b, j);
for(j = 184540; j < 184550; j++) _solve(b, j);
for(j = 185380; j < 185390; j++) _solve(b, j);
for(j = 186220; j < 186230; j++) _solve(b, j);
for(j = 187060; j < 187070; j++) _solve(b, j);
for(j = 187900; j < 187910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 188740; j < 188750; j++) _solve(b, j);
for(j = 189580; j < 189590; j++) _solve(b, j);
for(j = 190420; j < 190430; j++) _solve(b, j);
for(j = 191260; j < 191270; j++) _solve(b, j);
for(j = 192100; j < 192110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 122390; j < 122400; j++) _solve(b, j);
for(j = 123230; j < 123240; j++) _solve(b, j);
for(j = 124070; j < 124080; j++) _solve(b, j);
for(j = 124910; j < 124920; j++) _solve(b, j);
for(j = 125750; j < 125760; j++) _solve(b, j);
for(j = 126590; j < 126600; j++) _solve(b, j);
for(j = 127430; j < 127440; j++) _solve(b, j);
for(j = 128270; j < 128280; j++) _solve(b, j);
for(j = 129110; j < 129120; j++) _solve(b, j);
for(j = 129950; j < 129960; j++) _solve(b, j);
for(j = 130790; j < 130800; j++) _solve(b, j);
for(j = 131630; j < 131640; j++) _solve(b, j);
for(j = 132470; j < 132480; j++) _solve(b, j);
for(j = 133310; j < 133320; j++) _solve(b, j);
for(j = 134150; j < 134160; j++) _solve(b, j);
for(j = 134990; j < 135000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 135830; j < 135840; j++) _solve(b, j);
for(j = 136670; j < 136680; j++) _solve(b, j);
for(j = 137510; j < 137520; j++) _solve(b, j);
for(j = 138350; j < 138360; j++) _solve(b, j);
for(j = 139190; j < 139200; j++) _solve(b, j);
for(j = 140030; j < 140040; j++) _solve(b, j);
for(j = 140870; j < 140880; j++) _solve(b, j);
for(j = 141710; j < 141720; j++) _solve(b, j);
for(j = 142550; j < 142560; j++) _solve(b, j);
for(j = 143390; j < 143400; j++) _solve(b, j);
for(j = 144230; j < 144240; j++) _solve(b, j);
for(j = 145070; j < 145080; j++) _solve(b, j);
for(j = 145910; j < 145920; j++) _solve(b, j);
for(j = 146750; j < 146760; j++) _solve(b, j);
for(j = 147590; j < 147600; j++) _solve(b, j);
for(j = 148430; j < 148440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 149270; j < 149280; j++) _solve(b, j);
for(j = 150110; j < 150120; j++) _solve(b, j);
for(j = 150950; j < 150960; j++) _solve(b, j);
for(j = 151790; j < 151800; j++) _solve(b, j);
for(j = 152630; j < 152640; j++) _solve(b, j);
for(j = 153470; j < 153480; j++) _solve(b, j);
for(j = 154310; j < 154320; j++) _solve(b, j);
for(j = 155150; j < 155160; j++) _solve(b, j);
for(j = 155990; j < 156000; j++) _solve(b, j);
for(j = 156830; j < 156840; j++) _solve(b, j);
for(j = 157670; j < 157680; j++) _solve(b, j);
for(j = 158510; j < 158520; j++) _solve(b, j);
for(j = 159350; j < 159360; j++) _solve(b, j);
for(j = 160190; j < 160200; j++) _solve(b, j);
for(j = 161030; j < 161040; j++) _solve(b, j);
for(j = 161870; j < 161880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 162710; j < 162720; j++) _solve(b, j);
for(j = 163550; j < 163560; j++) _solve(b, j);
for(j = 164390; j < 164400; j++) _solve(b, j);
for(j = 165230; j < 165240; j++) _solve(b, j);
for(j = 166070; j < 166080; j++) _solve(b, j);
for(j = 166910; j < 166920; j++) _solve(b, j);
for(j = 167750; j < 167760; j++) _solve(b, j);
for(j = 168590; j < 168600; j++) _solve(b, j);
for(j = 169430; j < 169440; j++) _solve(b, j);
for(j = 170270; j < 170280; j++) _solve(b, j);
for(j = 171110; j < 171120; j++) _solve(b, j);
for(j = 171950; j < 171960; j++) _solve(b, j);
for(j = 172790; j < 172800; j++) _solve(b, j);
for(j = 173630; j < 173640; j++) _solve(b, j);
for(j = 174470; j < 174480; j++) _solve(b, j);
for(j = 175310; j < 175320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 176150; j < 176160; j++) _solve(b, j);
for(j = 176990; j < 177000; j++) _solve(b, j);
for(j = 177830; j < 177840; j++) _solve(b, j);
for(j = 178670; j < 178680; j++) _solve(b, j);
for(j = 179510; j < 179520; j++) _solve(b, j);
for(j = 180350; j < 180360; j++) _solve(b, j);
for(j = 181190; j < 181200; j++) _solve(b, j);
for(j = 182030; j < 182040; j++) _solve(b, j);
for(j = 182870; j < 182880; j++) _solve(b, j);
for(j = 183710; j < 183720; j++) _solve(b, j);
for(j = 184550; j < 184560; j++) _solve(b, j);
for(j = 185390; j < 185400; j++) _solve(b, j);
for(j = 186230; j < 186240; j++) _solve(b, j);
for(j = 187070; j < 187080; j++) _solve(b, j);
for(j = 187910; j < 187920; j++) _solve(b, j);
for(j = 188750; j < 188760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 189590; j < 189600; j++) _solve(b, j);
for(j = 190430; j < 190440; j++) _solve(b, j);
for(j = 191270; j < 191280; j++) _solve(b, j);
for(j = 192110; j < 192120; j++) _solve(b, j);
for(j = 192950; j < 192960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 123240; j < 123250; j++) _solve(b, j);
for(j = 124080; j < 124090; j++) _solve(b, j);
for(j = 124920; j < 124930; j++) _solve(b, j);
for(j = 125760; j < 125770; j++) _solve(b, j);
for(j = 126600; j < 126610; j++) _solve(b, j);
for(j = 127440; j < 127450; j++) _solve(b, j);
for(j = 128280; j < 128290; j++) _solve(b, j);
for(j = 129120; j < 129130; j++) _solve(b, j);
for(j = 129960; j < 129970; j++) _solve(b, j);
for(j = 130800; j < 130810; j++) _solve(b, j);
for(j = 131640; j < 131650; j++) _solve(b, j);
for(j = 132480; j < 132490; j++) _solve(b, j);
for(j = 133320; j < 133330; j++) _solve(b, j);
for(j = 134160; j < 134170; j++) _solve(b, j);
for(j = 135000; j < 135010; j++) _solve(b, j);
for(j = 135840; j < 135850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 136680; j < 136690; j++) _solve(b, j);
for(j = 137520; j < 137530; j++) _solve(b, j);
for(j = 138360; j < 138370; j++) _solve(b, j);
for(j = 139200; j < 139210; j++) _solve(b, j);
for(j = 140040; j < 140050; j++) _solve(b, j);
for(j = 140880; j < 140890; j++) _solve(b, j);
for(j = 141720; j < 141730; j++) _solve(b, j);
for(j = 142560; j < 142570; j++) _solve(b, j);
for(j = 143400; j < 143410; j++) _solve(b, j);
for(j = 144240; j < 144250; j++) _solve(b, j);
for(j = 145080; j < 145090; j++) _solve(b, j);
for(j = 145920; j < 145930; j++) _solve(b, j);
for(j = 146760; j < 146770; j++) _solve(b, j);
for(j = 147600; j < 147610; j++) _solve(b, j);
for(j = 148440; j < 148450; j++) _solve(b, j);
for(j = 149280; j < 149290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 150120; j < 150130; j++) _solve(b, j);
for(j = 150960; j < 150970; j++) _solve(b, j);
for(j = 151800; j < 151810; j++) _solve(b, j);
for(j = 152640; j < 152650; j++) _solve(b, j);
for(j = 153480; j < 153490; j++) _solve(b, j);
for(j = 154320; j < 154330; j++) _solve(b, j);
for(j = 155160; j < 155170; j++) _solve(b, j);
for(j = 156000; j < 156010; j++) _solve(b, j);
for(j = 156840; j < 156850; j++) _solve(b, j);
for(j = 157680; j < 157690; j++) _solve(b, j);
for(j = 158520; j < 158530; j++) _solve(b, j);
for(j = 159360; j < 159370; j++) _solve(b, j);
for(j = 160200; j < 160210; j++) _solve(b, j);
for(j = 161040; j < 161050; j++) _solve(b, j);
for(j = 161880; j < 161890; j++) _solve(b, j);
for(j = 162720; j < 162730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 163560; j < 163570; j++) _solve(b, j);
for(j = 164400; j < 164410; j++) _solve(b, j);
for(j = 165240; j < 165250; j++) _solve(b, j);
for(j = 166080; j < 166090; j++) _solve(b, j);
for(j = 166920; j < 166930; j++) _solve(b, j);
for(j = 167760; j < 167770; j++) _solve(b, j);
for(j = 168600; j < 168610; j++) _solve(b, j);
for(j = 169440; j < 169450; j++) _solve(b, j);
for(j = 170280; j < 170290; j++) _solve(b, j);
for(j = 171120; j < 171130; j++) _solve(b, j);
for(j = 171960; j < 171970; j++) _solve(b, j);
for(j = 172800; j < 172810; j++) _solve(b, j);
for(j = 173640; j < 173650; j++) _solve(b, j);
for(j = 174480; j < 174490; j++) _solve(b, j);
for(j = 175320; j < 175330; j++) _solve(b, j);
for(j = 176160; j < 176170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 177000; j < 177010; j++) _solve(b, j);
for(j = 177840; j < 177850; j++) _solve(b, j);
for(j = 178680; j < 178690; j++) _solve(b, j);
for(j = 179520; j < 179530; j++) _solve(b, j);
for(j = 180360; j < 180370; j++) _solve(b, j);
for(j = 181200; j < 181210; j++) _solve(b, j);
for(j = 182040; j < 182050; j++) _solve(b, j);
for(j = 182880; j < 182890; j++) _solve(b, j);
for(j = 183720; j < 183730; j++) _solve(b, j);
for(j = 184560; j < 184570; j++) _solve(b, j);
for(j = 185400; j < 185410; j++) _solve(b, j);
for(j = 186240; j < 186250; j++) _solve(b, j);
for(j = 187080; j < 187090; j++) _solve(b, j);
for(j = 187920; j < 187930; j++) _solve(b, j);
for(j = 188760; j < 188770; j++) _solve(b, j);
for(j = 189600; j < 189610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 190440; j < 190450; j++) _solve(b, j);
for(j = 191280; j < 191290; j++) _solve(b, j);
for(j = 192120; j < 192130; j++) _solve(b, j);
for(j = 192960; j < 192970; j++) _solve(b, j);
for(j = 193800; j < 193810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 124090; j < 124100; j++) _solve(b, j);
for(j = 124930; j < 124940; j++) _solve(b, j);
for(j = 125770; j < 125780; j++) _solve(b, j);
for(j = 126610; j < 126620; j++) _solve(b, j);
for(j = 127450; j < 127460; j++) _solve(b, j);
for(j = 128290; j < 128300; j++) _solve(b, j);
for(j = 129130; j < 129140; j++) _solve(b, j);
for(j = 129970; j < 129980; j++) _solve(b, j);
for(j = 130810; j < 130820; j++) _solve(b, j);
for(j = 131650; j < 131660; j++) _solve(b, j);
for(j = 132490; j < 132500; j++) _solve(b, j);
for(j = 133330; j < 133340; j++) _solve(b, j);
for(j = 134170; j < 134180; j++) _solve(b, j);
for(j = 135010; j < 135020; j++) _solve(b, j);
for(j = 135850; j < 135860; j++) _solve(b, j);
for(j = 136690; j < 136700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 137530; j < 137540; j++) _solve(b, j);
for(j = 138370; j < 138380; j++) _solve(b, j);
for(j = 139210; j < 139220; j++) _solve(b, j);
for(j = 140050; j < 140060; j++) _solve(b, j);
for(j = 140890; j < 140900; j++) _solve(b, j);
for(j = 141730; j < 141740; j++) _solve(b, j);
for(j = 142570; j < 142580; j++) _solve(b, j);
for(j = 143410; j < 143420; j++) _solve(b, j);
for(j = 144250; j < 144260; j++) _solve(b, j);
for(j = 145090; j < 145100; j++) _solve(b, j);
for(j = 145930; j < 145940; j++) _solve(b, j);
for(j = 146770; j < 146780; j++) _solve(b, j);
for(j = 147610; j < 147620; j++) _solve(b, j);
for(j = 148450; j < 148460; j++) _solve(b, j);
for(j = 149290; j < 149300; j++) _solve(b, j);
for(j = 150130; j < 150140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 150970; j < 150980; j++) _solve(b, j);
for(j = 151810; j < 151820; j++) _solve(b, j);
for(j = 152650; j < 152660; j++) _solve(b, j);
for(j = 153490; j < 153500; j++) _solve(b, j);
for(j = 154330; j < 154340; j++) _solve(b, j);
for(j = 155170; j < 155180; j++) _solve(b, j);
for(j = 156010; j < 156020; j++) _solve(b, j);
for(j = 156850; j < 156860; j++) _solve(b, j);
for(j = 157690; j < 157700; j++) _solve(b, j);
for(j = 158530; j < 158540; j++) _solve(b, j);
for(j = 159370; j < 159380; j++) _solve(b, j);
for(j = 160210; j < 160220; j++) _solve(b, j);
for(j = 161050; j < 161060; j++) _solve(b, j);
for(j = 161890; j < 161900; j++) _solve(b, j);
for(j = 162730; j < 162740; j++) _solve(b, j);
for(j = 163570; j < 163580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 164410; j < 164420; j++) _solve(b, j);
for(j = 165250; j < 165260; j++) _solve(b, j);
for(j = 166090; j < 166100; j++) _solve(b, j);
for(j = 166930; j < 166940; j++) _solve(b, j);
for(j = 167770; j < 167780; j++) _solve(b, j);
for(j = 168610; j < 168620; j++) _solve(b, j);
for(j = 169450; j < 169460; j++) _solve(b, j);
for(j = 170290; j < 170300; j++) _solve(b, j);
for(j = 171130; j < 171140; j++) _solve(b, j);
for(j = 171970; j < 171980; j++) _solve(b, j);
for(j = 172810; j < 172820; j++) _solve(b, j);
for(j = 173650; j < 173660; j++) _solve(b, j);
for(j = 174490; j < 174500; j++) _solve(b, j);
for(j = 175330; j < 175340; j++) _solve(b, j);
for(j = 176170; j < 176180; j++) _solve(b, j);
for(j = 177010; j < 177020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 177850; j < 177860; j++) _solve(b, j);
for(j = 178690; j < 178700; j++) _solve(b, j);
for(j = 179530; j < 179540; j++) _solve(b, j);
for(j = 180370; j < 180380; j++) _solve(b, j);
for(j = 181210; j < 181220; j++) _solve(b, j);
for(j = 182050; j < 182060; j++) _solve(b, j);
for(j = 182890; j < 182900; j++) _solve(b, j);
for(j = 183730; j < 183740; j++) _solve(b, j);
for(j = 184570; j < 184580; j++) _solve(b, j);
for(j = 185410; j < 185420; j++) _solve(b, j);
for(j = 186250; j < 186260; j++) _solve(b, j);
for(j = 187090; j < 187100; j++) _solve(b, j);
for(j = 187930; j < 187940; j++) _solve(b, j);
for(j = 188770; j < 188780; j++) _solve(b, j);
for(j = 189610; j < 189620; j++) _solve(b, j);
for(j = 190450; j < 190460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 191290; j < 191300; j++) _solve(b, j);
for(j = 192130; j < 192140; j++) _solve(b, j);
for(j = 192970; j < 192980; j++) _solve(b, j);
for(j = 193810; j < 193820; j++) _solve(b, j);
for(j = 194650; j < 194660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 124940; j < 124950; j++) _solve(b, j);
for(j = 125780; j < 125790; j++) _solve(b, j);
for(j = 126620; j < 126630; j++) _solve(b, j);
for(j = 127460; j < 127470; j++) _solve(b, j);
for(j = 128300; j < 128310; j++) _solve(b, j);
for(j = 129140; j < 129150; j++) _solve(b, j);
for(j = 129980; j < 129990; j++) _solve(b, j);
for(j = 130820; j < 130830; j++) _solve(b, j);
for(j = 131660; j < 131670; j++) _solve(b, j);
for(j = 132500; j < 132510; j++) _solve(b, j);
for(j = 133340; j < 133350; j++) _solve(b, j);
for(j = 134180; j < 134190; j++) _solve(b, j);
for(j = 135020; j < 135030; j++) _solve(b, j);
for(j = 135860; j < 135870; j++) _solve(b, j);
for(j = 136700; j < 136710; j++) _solve(b, j);
for(j = 137540; j < 137550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 138380; j < 138390; j++) _solve(b, j);
for(j = 139220; j < 139230; j++) _solve(b, j);
for(j = 140060; j < 140070; j++) _solve(b, j);
for(j = 140900; j < 140910; j++) _solve(b, j);
for(j = 141740; j < 141750; j++) _solve(b, j);
for(j = 142580; j < 142590; j++) _solve(b, j);
for(j = 143420; j < 143430; j++) _solve(b, j);
for(j = 144260; j < 144270; j++) _solve(b, j);
for(j = 145100; j < 145110; j++) _solve(b, j);
for(j = 145940; j < 145950; j++) _solve(b, j);
for(j = 146780; j < 146790; j++) _solve(b, j);
for(j = 147620; j < 147630; j++) _solve(b, j);
for(j = 148460; j < 148470; j++) _solve(b, j);
for(j = 149300; j < 149310; j++) _solve(b, j);
for(j = 150140; j < 150150; j++) _solve(b, j);
for(j = 150980; j < 150990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 151820; j < 151830; j++) _solve(b, j);
for(j = 152660; j < 152670; j++) _solve(b, j);
for(j = 153500; j < 153510; j++) _solve(b, j);
for(j = 154340; j < 154350; j++) _solve(b, j);
for(j = 155180; j < 155190; j++) _solve(b, j);
for(j = 156020; j < 156030; j++) _solve(b, j);
for(j = 156860; j < 156870; j++) _solve(b, j);
for(j = 157700; j < 157710; j++) _solve(b, j);
for(j = 158540; j < 158550; j++) _solve(b, j);
for(j = 159380; j < 159390; j++) _solve(b, j);
for(j = 160220; j < 160230; j++) _solve(b, j);
for(j = 161060; j < 161070; j++) _solve(b, j);
for(j = 161900; j < 161910; j++) _solve(b, j);
for(j = 162740; j < 162750; j++) _solve(b, j);
for(j = 163580; j < 163590; j++) _solve(b, j);
for(j = 164420; j < 164430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 165260; j < 165270; j++) _solve(b, j);
for(j = 166100; j < 166110; j++) _solve(b, j);
for(j = 166940; j < 166950; j++) _solve(b, j);
for(j = 167780; j < 167790; j++) _solve(b, j);
for(j = 168620; j < 168630; j++) _solve(b, j);
for(j = 169460; j < 169470; j++) _solve(b, j);
for(j = 170300; j < 170310; j++) _solve(b, j);
for(j = 171140; j < 171150; j++) _solve(b, j);
for(j = 171980; j < 171990; j++) _solve(b, j);
for(j = 172820; j < 172830; j++) _solve(b, j);
for(j = 173660; j < 173670; j++) _solve(b, j);
for(j = 174500; j < 174510; j++) _solve(b, j);
for(j = 175340; j < 175350; j++) _solve(b, j);
for(j = 176180; j < 176190; j++) _solve(b, j);
for(j = 177020; j < 177030; j++) _solve(b, j);
for(j = 177860; j < 177870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 178700; j < 178710; j++) _solve(b, j);
for(j = 179540; j < 179550; j++) _solve(b, j);
for(j = 180380; j < 180390; j++) _solve(b, j);
for(j = 181220; j < 181230; j++) _solve(b, j);
for(j = 182060; j < 182070; j++) _solve(b, j);
for(j = 182900; j < 182910; j++) _solve(b, j);
for(j = 183740; j < 183750; j++) _solve(b, j);
for(j = 184580; j < 184590; j++) _solve(b, j);
for(j = 185420; j < 185430; j++) _solve(b, j);
for(j = 186260; j < 186270; j++) _solve(b, j);
for(j = 187100; j < 187110; j++) _solve(b, j);
for(j = 187940; j < 187950; j++) _solve(b, j);
for(j = 188780; j < 188790; j++) _solve(b, j);
for(j = 189620; j < 189630; j++) _solve(b, j);
for(j = 190460; j < 190470; j++) _solve(b, j);
for(j = 191300; j < 191310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 192140; j < 192150; j++) _solve(b, j);
for(j = 192980; j < 192990; j++) _solve(b, j);
for(j = 193820; j < 193830; j++) _solve(b, j);
for(j = 194660; j < 194670; j++) _solve(b, j);
for(j = 195500; j < 195510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 125790; j < 125800; j++) _solve(b, j);
for(j = 126630; j < 126640; j++) _solve(b, j);
for(j = 127470; j < 127480; j++) _solve(b, j);
for(j = 128310; j < 128320; j++) _solve(b, j);
for(j = 129150; j < 129160; j++) _solve(b, j);
for(j = 129990; j < 130000; j++) _solve(b, j);
for(j = 130830; j < 130840; j++) _solve(b, j);
for(j = 131670; j < 131680; j++) _solve(b, j);
for(j = 132510; j < 132520; j++) _solve(b, j);
for(j = 133350; j < 133360; j++) _solve(b, j);
for(j = 134190; j < 134200; j++) _solve(b, j);
for(j = 135030; j < 135040; j++) _solve(b, j);
for(j = 135870; j < 135880; j++) _solve(b, j);
for(j = 136710; j < 136720; j++) _solve(b, j);
for(j = 137550; j < 137560; j++) _solve(b, j);
for(j = 138390; j < 138400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 139230; j < 139240; j++) _solve(b, j);
for(j = 140070; j < 140080; j++) _solve(b, j);
for(j = 140910; j < 140920; j++) _solve(b, j);
for(j = 141750; j < 141760; j++) _solve(b, j);
for(j = 142590; j < 142600; j++) _solve(b, j);
for(j = 143430; j < 143440; j++) _solve(b, j);
for(j = 144270; j < 144280; j++) _solve(b, j);
for(j = 145110; j < 145120; j++) _solve(b, j);
for(j = 145950; j < 145960; j++) _solve(b, j);
for(j = 146790; j < 146800; j++) _solve(b, j);
for(j = 147630; j < 147640; j++) _solve(b, j);
for(j = 148470; j < 148480; j++) _solve(b, j);
for(j = 149310; j < 149320; j++) _solve(b, j);
for(j = 150150; j < 150160; j++) _solve(b, j);
for(j = 150990; j < 151000; j++) _solve(b, j);
for(j = 151830; j < 151840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 152670; j < 152680; j++) _solve(b, j);
for(j = 153510; j < 153520; j++) _solve(b, j);
for(j = 154350; j < 154360; j++) _solve(b, j);
for(j = 155190; j < 155200; j++) _solve(b, j);
for(j = 156030; j < 156040; j++) _solve(b, j);
for(j = 156870; j < 156880; j++) _solve(b, j);
for(j = 157710; j < 157720; j++) _solve(b, j);
for(j = 158550; j < 158560; j++) _solve(b, j);
for(j = 159390; j < 159400; j++) _solve(b, j);
for(j = 160230; j < 160240; j++) _solve(b, j);
for(j = 161070; j < 161080; j++) _solve(b, j);
for(j = 161910; j < 161920; j++) _solve(b, j);
for(j = 162750; j < 162760; j++) _solve(b, j);
for(j = 163590; j < 163600; j++) _solve(b, j);
for(j = 164430; j < 164440; j++) _solve(b, j);
for(j = 165270; j < 165280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 166110; j < 166120; j++) _solve(b, j);
for(j = 166950; j < 166960; j++) _solve(b, j);
for(j = 167790; j < 167800; j++) _solve(b, j);
for(j = 168630; j < 168640; j++) _solve(b, j);
for(j = 169470; j < 169480; j++) _solve(b, j);
for(j = 170310; j < 170320; j++) _solve(b, j);
for(j = 171150; j < 171160; j++) _solve(b, j);
for(j = 171990; j < 172000; j++) _solve(b, j);
for(j = 172830; j < 172840; j++) _solve(b, j);
for(j = 173670; j < 173680; j++) _solve(b, j);
for(j = 174510; j < 174520; j++) _solve(b, j);
for(j = 175350; j < 175360; j++) _solve(b, j);
for(j = 176190; j < 176200; j++) _solve(b, j);
for(j = 177030; j < 177040; j++) _solve(b, j);
for(j = 177870; j < 177880; j++) _solve(b, j);
for(j = 178710; j < 178720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 179550; j < 179560; j++) _solve(b, j);
for(j = 180390; j < 180400; j++) _solve(b, j);
for(j = 181230; j < 181240; j++) _solve(b, j);
for(j = 182070; j < 182080; j++) _solve(b, j);
for(j = 182910; j < 182920; j++) _solve(b, j);
for(j = 183750; j < 183760; j++) _solve(b, j);
for(j = 184590; j < 184600; j++) _solve(b, j);
for(j = 185430; j < 185440; j++) _solve(b, j);
for(j = 186270; j < 186280; j++) _solve(b, j);
for(j = 187110; j < 187120; j++) _solve(b, j);
for(j = 187950; j < 187960; j++) _solve(b, j);
for(j = 188790; j < 188800; j++) _solve(b, j);
for(j = 189630; j < 189640; j++) _solve(b, j);
for(j = 190470; j < 190480; j++) _solve(b, j);
for(j = 191310; j < 191320; j++) _solve(b, j);
for(j = 192150; j < 192160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 192990; j < 193000; j++) _solve(b, j);
for(j = 193830; j < 193840; j++) _solve(b, j);
for(j = 194670; j < 194680; j++) _solve(b, j);
for(j = 195510; j < 195520; j++) _solve(b, j);
for(j = 196350; j < 196360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 126640; j < 126650; j++) _solve(b, j);
for(j = 127480; j < 127490; j++) _solve(b, j);
for(j = 128320; j < 128330; j++) _solve(b, j);
for(j = 129160; j < 129170; j++) _solve(b, j);
for(j = 130000; j < 130010; j++) _solve(b, j);
for(j = 130840; j < 130850; j++) _solve(b, j);
for(j = 131680; j < 131690; j++) _solve(b, j);
for(j = 132520; j < 132530; j++) _solve(b, j);
for(j = 133360; j < 133370; j++) _solve(b, j);
for(j = 134200; j < 134210; j++) _solve(b, j);
for(j = 135040; j < 135050; j++) _solve(b, j);
for(j = 135880; j < 135890; j++) _solve(b, j);
for(j = 136720; j < 136730; j++) _solve(b, j);
for(j = 137560; j < 137570; j++) _solve(b, j);
for(j = 138400; j < 138410; j++) _solve(b, j);
for(j = 139240; j < 139250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 140080; j < 140090; j++) _solve(b, j);
for(j = 140920; j < 140930; j++) _solve(b, j);
for(j = 141760; j < 141770; j++) _solve(b, j);
for(j = 142600; j < 142610; j++) _solve(b, j);
for(j = 143440; j < 143450; j++) _solve(b, j);
for(j = 144280; j < 144290; j++) _solve(b, j);
for(j = 145120; j < 145130; j++) _solve(b, j);
for(j = 145960; j < 145970; j++) _solve(b, j);
for(j = 146800; j < 146810; j++) _solve(b, j);
for(j = 147640; j < 147650; j++) _solve(b, j);
for(j = 148480; j < 148490; j++) _solve(b, j);
for(j = 149320; j < 149330; j++) _solve(b, j);
for(j = 150160; j < 150170; j++) _solve(b, j);
for(j = 151000; j < 151010; j++) _solve(b, j);
for(j = 151840; j < 151850; j++) _solve(b, j);
for(j = 152680; j < 152690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 153520; j < 153530; j++) _solve(b, j);
for(j = 154360; j < 154370; j++) _solve(b, j);
for(j = 155200; j < 155210; j++) _solve(b, j);
for(j = 156040; j < 156050; j++) _solve(b, j);
for(j = 156880; j < 156890; j++) _solve(b, j);
for(j = 157720; j < 157730; j++) _solve(b, j);
for(j = 158560; j < 158570; j++) _solve(b, j);
for(j = 159400; j < 159410; j++) _solve(b, j);
for(j = 160240; j < 160250; j++) _solve(b, j);
for(j = 161080; j < 161090; j++) _solve(b, j);
for(j = 161920; j < 161930; j++) _solve(b, j);
for(j = 162760; j < 162770; j++) _solve(b, j);
for(j = 163600; j < 163610; j++) _solve(b, j);
for(j = 164440; j < 164450; j++) _solve(b, j);
for(j = 165280; j < 165290; j++) _solve(b, j);
for(j = 166120; j < 166130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 166960; j < 166970; j++) _solve(b, j);
for(j = 167800; j < 167810; j++) _solve(b, j);
for(j = 168640; j < 168650; j++) _solve(b, j);
for(j = 169480; j < 169490; j++) _solve(b, j);
for(j = 170320; j < 170330; j++) _solve(b, j);
for(j = 171160; j < 171170; j++) _solve(b, j);
for(j = 172000; j < 172010; j++) _solve(b, j);
for(j = 172840; j < 172850; j++) _solve(b, j);
for(j = 173680; j < 173690; j++) _solve(b, j);
for(j = 174520; j < 174530; j++) _solve(b, j);
for(j = 175360; j < 175370; j++) _solve(b, j);
for(j = 176200; j < 176210; j++) _solve(b, j);
for(j = 177040; j < 177050; j++) _solve(b, j);
for(j = 177880; j < 177890; j++) _solve(b, j);
for(j = 178720; j < 178730; j++) _solve(b, j);
for(j = 179560; j < 179570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 180400; j < 180410; j++) _solve(b, j);
for(j = 181240; j < 181250; j++) _solve(b, j);
for(j = 182080; j < 182090; j++) _solve(b, j);
for(j = 182920; j < 182930; j++) _solve(b, j);
for(j = 183760; j < 183770; j++) _solve(b, j);
for(j = 184600; j < 184610; j++) _solve(b, j);
for(j = 185440; j < 185450; j++) _solve(b, j);
for(j = 186280; j < 186290; j++) _solve(b, j);
for(j = 187120; j < 187130; j++) _solve(b, j);
for(j = 187960; j < 187970; j++) _solve(b, j);
for(j = 188800; j < 188810; j++) _solve(b, j);
for(j = 189640; j < 189650; j++) _solve(b, j);
for(j = 190480; j < 190490; j++) _solve(b, j);
for(j = 191320; j < 191330; j++) _solve(b, j);
for(j = 192160; j < 192170; j++) _solve(b, j);
for(j = 193000; j < 193010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 193840; j < 193850; j++) _solve(b, j);
for(j = 194680; j < 194690; j++) _solve(b, j);
for(j = 195520; j < 195530; j++) _solve(b, j);
for(j = 196360; j < 196370; j++) _solve(b, j);
for(j = 197200; j < 197210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 127490; j < 127500; j++) _solve(b, j);
for(j = 128330; j < 128340; j++) _solve(b, j);
for(j = 129170; j < 129180; j++) _solve(b, j);
for(j = 130010; j < 130020; j++) _solve(b, j);
for(j = 130850; j < 130860; j++) _solve(b, j);
for(j = 131690; j < 131700; j++) _solve(b, j);
for(j = 132530; j < 132540; j++) _solve(b, j);
for(j = 133370; j < 133380; j++) _solve(b, j);
for(j = 134210; j < 134220; j++) _solve(b, j);
for(j = 135050; j < 135060; j++) _solve(b, j);
for(j = 135890; j < 135900; j++) _solve(b, j);
for(j = 136730; j < 136740; j++) _solve(b, j);
for(j = 137570; j < 137580; j++) _solve(b, j);
for(j = 138410; j < 138420; j++) _solve(b, j);
for(j = 139250; j < 139260; j++) _solve(b, j);
for(j = 140090; j < 140100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 140930; j < 140940; j++) _solve(b, j);
for(j = 141770; j < 141780; j++) _solve(b, j);
for(j = 142610; j < 142620; j++) _solve(b, j);
for(j = 143450; j < 143460; j++) _solve(b, j);
for(j = 144290; j < 144300; j++) _solve(b, j);
for(j = 145130; j < 145140; j++) _solve(b, j);
for(j = 145970; j < 145980; j++) _solve(b, j);
for(j = 146810; j < 146820; j++) _solve(b, j);
for(j = 147650; j < 147660; j++) _solve(b, j);
for(j = 148490; j < 148500; j++) _solve(b, j);
for(j = 149330; j < 149340; j++) _solve(b, j);
for(j = 150170; j < 150180; j++) _solve(b, j);
for(j = 151010; j < 151020; j++) _solve(b, j);
for(j = 151850; j < 151860; j++) _solve(b, j);
for(j = 152690; j < 152700; j++) _solve(b, j);
for(j = 153530; j < 153540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 154370; j < 154380; j++) _solve(b, j);
for(j = 155210; j < 155220; j++) _solve(b, j);
for(j = 156050; j < 156060; j++) _solve(b, j);
for(j = 156890; j < 156900; j++) _solve(b, j);
for(j = 157730; j < 157740; j++) _solve(b, j);
for(j = 158570; j < 158580; j++) _solve(b, j);
for(j = 159410; j < 159420; j++) _solve(b, j);
for(j = 160250; j < 160260; j++) _solve(b, j);
for(j = 161090; j < 161100; j++) _solve(b, j);
for(j = 161930; j < 161940; j++) _solve(b, j);
for(j = 162770; j < 162780; j++) _solve(b, j);
for(j = 163610; j < 163620; j++) _solve(b, j);
for(j = 164450; j < 164460; j++) _solve(b, j);
for(j = 165290; j < 165300; j++) _solve(b, j);
for(j = 166130; j < 166140; j++) _solve(b, j);
for(j = 166970; j < 166980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 167810; j < 167820; j++) _solve(b, j);
for(j = 168650; j < 168660; j++) _solve(b, j);
for(j = 169490; j < 169500; j++) _solve(b, j);
for(j = 170330; j < 170340; j++) _solve(b, j);
for(j = 171170; j < 171180; j++) _solve(b, j);
for(j = 172010; j < 172020; j++) _solve(b, j);
for(j = 172850; j < 172860; j++) _solve(b, j);
for(j = 173690; j < 173700; j++) _solve(b, j);
for(j = 174530; j < 174540; j++) _solve(b, j);
for(j = 175370; j < 175380; j++) _solve(b, j);
for(j = 176210; j < 176220; j++) _solve(b, j);
for(j = 177050; j < 177060; j++) _solve(b, j);
for(j = 177890; j < 177900; j++) _solve(b, j);
for(j = 178730; j < 178740; j++) _solve(b, j);
for(j = 179570; j < 179580; j++) _solve(b, j);
for(j = 180410; j < 180420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 181250; j < 181260; j++) _solve(b, j);
for(j = 182090; j < 182100; j++) _solve(b, j);
for(j = 182930; j < 182940; j++) _solve(b, j);
for(j = 183770; j < 183780; j++) _solve(b, j);
for(j = 184610; j < 184620; j++) _solve(b, j);
for(j = 185450; j < 185460; j++) _solve(b, j);
for(j = 186290; j < 186300; j++) _solve(b, j);
for(j = 187130; j < 187140; j++) _solve(b, j);
for(j = 187970; j < 187980; j++) _solve(b, j);
for(j = 188810; j < 188820; j++) _solve(b, j);
for(j = 189650; j < 189660; j++) _solve(b, j);
for(j = 190490; j < 190500; j++) _solve(b, j);
for(j = 191330; j < 191340; j++) _solve(b, j);
for(j = 192170; j < 192180; j++) _solve(b, j);
for(j = 193010; j < 193020; j++) _solve(b, j);
for(j = 193850; j < 193860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 194690; j < 194700; j++) _solve(b, j);
for(j = 195530; j < 195540; j++) _solve(b, j);
for(j = 196370; j < 196380; j++) _solve(b, j);
for(j = 197210; j < 197220; j++) _solve(b, j);
for(j = 198050; j < 198060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 128340; j < 128350; j++) _solve(b, j);
for(j = 129180; j < 129190; j++) _solve(b, j);
for(j = 130020; j < 130030; j++) _solve(b, j);
for(j = 130860; j < 130870; j++) _solve(b, j);
for(j = 131700; j < 131710; j++) _solve(b, j);
for(j = 132540; j < 132550; j++) _solve(b, j);
for(j = 133380; j < 133390; j++) _solve(b, j);
for(j = 134220; j < 134230; j++) _solve(b, j);
for(j = 135060; j < 135070; j++) _solve(b, j);
for(j = 135900; j < 135910; j++) _solve(b, j);
for(j = 136740; j < 136750; j++) _solve(b, j);
for(j = 137580; j < 137590; j++) _solve(b, j);
for(j = 138420; j < 138430; j++) _solve(b, j);
for(j = 139260; j < 139270; j++) _solve(b, j);
for(j = 140100; j < 140110; j++) _solve(b, j);
for(j = 140940; j < 140950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 141780; j < 141790; j++) _solve(b, j);
for(j = 142620; j < 142630; j++) _solve(b, j);
for(j = 143460; j < 143470; j++) _solve(b, j);
for(j = 144300; j < 144310; j++) _solve(b, j);
for(j = 145140; j < 145150; j++) _solve(b, j);
for(j = 145980; j < 145990; j++) _solve(b, j);
for(j = 146820; j < 146830; j++) _solve(b, j);
for(j = 147660; j < 147670; j++) _solve(b, j);
for(j = 148500; j < 148510; j++) _solve(b, j);
for(j = 149340; j < 149350; j++) _solve(b, j);
for(j = 150180; j < 150190; j++) _solve(b, j);
for(j = 151020; j < 151030; j++) _solve(b, j);
for(j = 151860; j < 151870; j++) _solve(b, j);
for(j = 152700; j < 152710; j++) _solve(b, j);
for(j = 153540; j < 153550; j++) _solve(b, j);
for(j = 154380; j < 154390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 155220; j < 155230; j++) _solve(b, j);
for(j = 156060; j < 156070; j++) _solve(b, j);
for(j = 156900; j < 156910; j++) _solve(b, j);
for(j = 157740; j < 157750; j++) _solve(b, j);
for(j = 158580; j < 158590; j++) _solve(b, j);
for(j = 159420; j < 159430; j++) _solve(b, j);
for(j = 160260; j < 160270; j++) _solve(b, j);
for(j = 161100; j < 161110; j++) _solve(b, j);
for(j = 161940; j < 161950; j++) _solve(b, j);
for(j = 162780; j < 162790; j++) _solve(b, j);
for(j = 163620; j < 163630; j++) _solve(b, j);
for(j = 164460; j < 164470; j++) _solve(b, j);
for(j = 165300; j < 165310; j++) _solve(b, j);
for(j = 166140; j < 166150; j++) _solve(b, j);
for(j = 166980; j < 166990; j++) _solve(b, j);
for(j = 167820; j < 167830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 168660; j < 168670; j++) _solve(b, j);
for(j = 169500; j < 169510; j++) _solve(b, j);
for(j = 170340; j < 170350; j++) _solve(b, j);
for(j = 171180; j < 171190; j++) _solve(b, j);
for(j = 172020; j < 172030; j++) _solve(b, j);
for(j = 172860; j < 172870; j++) _solve(b, j);
for(j = 173700; j < 173710; j++) _solve(b, j);
for(j = 174540; j < 174550; j++) _solve(b, j);
for(j = 175380; j < 175390; j++) _solve(b, j);
for(j = 176220; j < 176230; j++) _solve(b, j);
for(j = 177060; j < 177070; j++) _solve(b, j);
for(j = 177900; j < 177910; j++) _solve(b, j);
for(j = 178740; j < 178750; j++) _solve(b, j);
for(j = 179580; j < 179590; j++) _solve(b, j);
for(j = 180420; j < 180430; j++) _solve(b, j);
for(j = 181260; j < 181270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 182100; j < 182110; j++) _solve(b, j);
for(j = 182940; j < 182950; j++) _solve(b, j);
for(j = 183780; j < 183790; j++) _solve(b, j);
for(j = 184620; j < 184630; j++) _solve(b, j);
for(j = 185460; j < 185470; j++) _solve(b, j);
for(j = 186300; j < 186310; j++) _solve(b, j);
for(j = 187140; j < 187150; j++) _solve(b, j);
for(j = 187980; j < 187990; j++) _solve(b, j);
for(j = 188820; j < 188830; j++) _solve(b, j);
for(j = 189660; j < 189670; j++) _solve(b, j);
for(j = 190500; j < 190510; j++) _solve(b, j);
for(j = 191340; j < 191350; j++) _solve(b, j);
for(j = 192180; j < 192190; j++) _solve(b, j);
for(j = 193020; j < 193030; j++) _solve(b, j);
for(j = 193860; j < 193870; j++) _solve(b, j);
for(j = 194700; j < 194710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 195540; j < 195550; j++) _solve(b, j);
for(j = 196380; j < 196390; j++) _solve(b, j);
for(j = 197220; j < 197230; j++) _solve(b, j);
for(j = 198060; j < 198070; j++) _solve(b, j);
for(j = 198900; j < 198910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 129190; j < 129200; j++) _solve(b, j);
for(j = 130030; j < 130040; j++) _solve(b, j);
for(j = 130870; j < 130880; j++) _solve(b, j);
for(j = 131710; j < 131720; j++) _solve(b, j);
for(j = 132550; j < 132560; j++) _solve(b, j);
for(j = 133390; j < 133400; j++) _solve(b, j);
for(j = 134230; j < 134240; j++) _solve(b, j);
for(j = 135070; j < 135080; j++) _solve(b, j);
for(j = 135910; j < 135920; j++) _solve(b, j);
for(j = 136750; j < 136760; j++) _solve(b, j);
for(j = 137590; j < 137600; j++) _solve(b, j);
for(j = 138430; j < 138440; j++) _solve(b, j);
for(j = 139270; j < 139280; j++) _solve(b, j);
for(j = 140110; j < 140120; j++) _solve(b, j);
for(j = 140950; j < 140960; j++) _solve(b, j);
for(j = 141790; j < 141800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 142630; j < 142640; j++) _solve(b, j);
for(j = 143470; j < 143480; j++) _solve(b, j);
for(j = 144310; j < 144320; j++) _solve(b, j);
for(j = 145150; j < 145160; j++) _solve(b, j);
for(j = 145990; j < 146000; j++) _solve(b, j);
for(j = 146830; j < 146840; j++) _solve(b, j);
for(j = 147670; j < 147680; j++) _solve(b, j);
for(j = 148510; j < 148520; j++) _solve(b, j);
for(j = 149350; j < 149360; j++) _solve(b, j);
for(j = 150190; j < 150200; j++) _solve(b, j);
for(j = 151030; j < 151040; j++) _solve(b, j);
for(j = 151870; j < 151880; j++) _solve(b, j);
for(j = 152710; j < 152720; j++) _solve(b, j);
for(j = 153550; j < 153560; j++) _solve(b, j);
for(j = 154390; j < 154400; j++) _solve(b, j);
for(j = 155230; j < 155240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 156070; j < 156080; j++) _solve(b, j);
for(j = 156910; j < 156920; j++) _solve(b, j);
for(j = 157750; j < 157760; j++) _solve(b, j);
for(j = 158590; j < 158600; j++) _solve(b, j);
for(j = 159430; j < 159440; j++) _solve(b, j);
for(j = 160270; j < 160280; j++) _solve(b, j);
for(j = 161110; j < 161120; j++) _solve(b, j);
for(j = 161950; j < 161960; j++) _solve(b, j);
for(j = 162790; j < 162800; j++) _solve(b, j);
for(j = 163630; j < 163640; j++) _solve(b, j);
for(j = 164470; j < 164480; j++) _solve(b, j);
for(j = 165310; j < 165320; j++) _solve(b, j);
for(j = 166150; j < 166160; j++) _solve(b, j);
for(j = 166990; j < 167000; j++) _solve(b, j);
for(j = 167830; j < 167840; j++) _solve(b, j);
for(j = 168670; j < 168680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 169510; j < 169520; j++) _solve(b, j);
for(j = 170350; j < 170360; j++) _solve(b, j);
for(j = 171190; j < 171200; j++) _solve(b, j);
for(j = 172030; j < 172040; j++) _solve(b, j);
for(j = 172870; j < 172880; j++) _solve(b, j);
for(j = 173710; j < 173720; j++) _solve(b, j);
for(j = 174550; j < 174560; j++) _solve(b, j);
for(j = 175390; j < 175400; j++) _solve(b, j);
for(j = 176230; j < 176240; j++) _solve(b, j);
for(j = 177070; j < 177080; j++) _solve(b, j);
for(j = 177910; j < 177920; j++) _solve(b, j);
for(j = 178750; j < 178760; j++) _solve(b, j);
for(j = 179590; j < 179600; j++) _solve(b, j);
for(j = 180430; j < 180440; j++) _solve(b, j);
for(j = 181270; j < 181280; j++) _solve(b, j);
for(j = 182110; j < 182120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 182950; j < 182960; j++) _solve(b, j);
for(j = 183790; j < 183800; j++) _solve(b, j);
for(j = 184630; j < 184640; j++) _solve(b, j);
for(j = 185470; j < 185480; j++) _solve(b, j);
for(j = 186310; j < 186320; j++) _solve(b, j);
for(j = 187150; j < 187160; j++) _solve(b, j);
for(j = 187990; j < 188000; j++) _solve(b, j);
for(j = 188830; j < 188840; j++) _solve(b, j);
for(j = 189670; j < 189680; j++) _solve(b, j);
for(j = 190510; j < 190520; j++) _solve(b, j);
for(j = 191350; j < 191360; j++) _solve(b, j);
for(j = 192190; j < 192200; j++) _solve(b, j);
for(j = 193030; j < 193040; j++) _solve(b, j);
for(j = 193870; j < 193880; j++) _solve(b, j);
for(j = 194710; j < 194720; j++) _solve(b, j);
for(j = 195550; j < 195560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 196390; j < 196400; j++) _solve(b, j);
for(j = 197230; j < 197240; j++) _solve(b, j);
for(j = 198070; j < 198080; j++) _solve(b, j);
for(j = 198910; j < 198920; j++) _solve(b, j);
for(j = 199750; j < 199760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 130040; j < 130050; j++) _solve(b, j);
for(j = 130880; j < 130890; j++) _solve(b, j);
for(j = 131720; j < 131730; j++) _solve(b, j);
for(j = 132560; j < 132570; j++) _solve(b, j);
for(j = 133400; j < 133410; j++) _solve(b, j);
for(j = 134240; j < 134250; j++) _solve(b, j);
for(j = 135080; j < 135090; j++) _solve(b, j);
for(j = 135920; j < 135930; j++) _solve(b, j);
for(j = 136760; j < 136770; j++) _solve(b, j);
for(j = 137600; j < 137610; j++) _solve(b, j);
for(j = 138440; j < 138450; j++) _solve(b, j);
for(j = 139280; j < 139290; j++) _solve(b, j);
for(j = 140120; j < 140130; j++) _solve(b, j);
for(j = 140960; j < 140970; j++) _solve(b, j);
for(j = 141800; j < 141810; j++) _solve(b, j);
for(j = 142640; j < 142650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 143480; j < 143490; j++) _solve(b, j);
for(j = 144320; j < 144330; j++) _solve(b, j);
for(j = 145160; j < 145170; j++) _solve(b, j);
for(j = 146000; j < 146010; j++) _solve(b, j);
for(j = 146840; j < 146850; j++) _solve(b, j);
for(j = 147680; j < 147690; j++) _solve(b, j);
for(j = 148520; j < 148530; j++) _solve(b, j);
for(j = 149360; j < 149370; j++) _solve(b, j);
for(j = 150200; j < 150210; j++) _solve(b, j);
for(j = 151040; j < 151050; j++) _solve(b, j);
for(j = 151880; j < 151890; j++) _solve(b, j);
for(j = 152720; j < 152730; j++) _solve(b, j);
for(j = 153560; j < 153570; j++) _solve(b, j);
for(j = 154400; j < 154410; j++) _solve(b, j);
for(j = 155240; j < 155250; j++) _solve(b, j);
for(j = 156080; j < 156090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 156920; j < 156930; j++) _solve(b, j);
for(j = 157760; j < 157770; j++) _solve(b, j);
for(j = 158600; j < 158610; j++) _solve(b, j);
for(j = 159440; j < 159450; j++) _solve(b, j);
for(j = 160280; j < 160290; j++) _solve(b, j);
for(j = 161120; j < 161130; j++) _solve(b, j);
for(j = 161960; j < 161970; j++) _solve(b, j);
for(j = 162800; j < 162810; j++) _solve(b, j);
for(j = 163640; j < 163650; j++) _solve(b, j);
for(j = 164480; j < 164490; j++) _solve(b, j);
for(j = 165320; j < 165330; j++) _solve(b, j);
for(j = 166160; j < 166170; j++) _solve(b, j);
for(j = 167000; j < 167010; j++) _solve(b, j);
for(j = 167840; j < 167850; j++) _solve(b, j);
for(j = 168680; j < 168690; j++) _solve(b, j);
for(j = 169520; j < 169530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 170360; j < 170370; j++) _solve(b, j);
for(j = 171200; j < 171210; j++) _solve(b, j);
for(j = 172040; j < 172050; j++) _solve(b, j);
for(j = 172880; j < 172890; j++) _solve(b, j);
for(j = 173720; j < 173730; j++) _solve(b, j);
for(j = 174560; j < 174570; j++) _solve(b, j);
for(j = 175400; j < 175410; j++) _solve(b, j);
for(j = 176240; j < 176250; j++) _solve(b, j);
for(j = 177080; j < 177090; j++) _solve(b, j);
for(j = 177920; j < 177930; j++) _solve(b, j);
for(j = 178760; j < 178770; j++) _solve(b, j);
for(j = 179600; j < 179610; j++) _solve(b, j);
for(j = 180440; j < 180450; j++) _solve(b, j);
for(j = 181280; j < 181290; j++) _solve(b, j);
for(j = 182120; j < 182130; j++) _solve(b, j);
for(j = 182960; j < 182970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 183800; j < 183810; j++) _solve(b, j);
for(j = 184640; j < 184650; j++) _solve(b, j);
for(j = 185480; j < 185490; j++) _solve(b, j);
for(j = 186320; j < 186330; j++) _solve(b, j);
for(j = 187160; j < 187170; j++) _solve(b, j);
for(j = 188000; j < 188010; j++) _solve(b, j);
for(j = 188840; j < 188850; j++) _solve(b, j);
for(j = 189680; j < 189690; j++) _solve(b, j);
for(j = 190520; j < 190530; j++) _solve(b, j);
for(j = 191360; j < 191370; j++) _solve(b, j);
for(j = 192200; j < 192210; j++) _solve(b, j);
for(j = 193040; j < 193050; j++) _solve(b, j);
for(j = 193880; j < 193890; j++) _solve(b, j);
for(j = 194720; j < 194730; j++) _solve(b, j);
for(j = 195560; j < 195570; j++) _solve(b, j);
for(j = 196400; j < 196410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 197240; j < 197250; j++) _solve(b, j);
for(j = 198080; j < 198090; j++) _solve(b, j);
for(j = 198920; j < 198930; j++) _solve(b, j);
for(j = 199760; j < 199770; j++) _solve(b, j);
for(j = 200600; j < 200610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 130890; j < 130900; j++) _solve(b, j);
for(j = 131730; j < 131740; j++) _solve(b, j);
for(j = 132570; j < 132580; j++) _solve(b, j);
for(j = 133410; j < 133420; j++) _solve(b, j);
for(j = 134250; j < 134260; j++) _solve(b, j);
for(j = 135090; j < 135100; j++) _solve(b, j);
for(j = 135930; j < 135940; j++) _solve(b, j);
for(j = 136770; j < 136780; j++) _solve(b, j);
for(j = 137610; j < 137620; j++) _solve(b, j);
for(j = 138450; j < 138460; j++) _solve(b, j);
for(j = 139290; j < 139300; j++) _solve(b, j);
for(j = 140130; j < 140140; j++) _solve(b, j);
for(j = 140970; j < 140980; j++) _solve(b, j);
for(j = 141810; j < 141820; j++) _solve(b, j);
for(j = 142650; j < 142660; j++) _solve(b, j);
for(j = 143490; j < 143500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 144330; j < 144340; j++) _solve(b, j);
for(j = 145170; j < 145180; j++) _solve(b, j);
for(j = 146010; j < 146020; j++) _solve(b, j);
for(j = 146850; j < 146860; j++) _solve(b, j);
for(j = 147690; j < 147700; j++) _solve(b, j);
for(j = 148530; j < 148540; j++) _solve(b, j);
for(j = 149370; j < 149380; j++) _solve(b, j);
for(j = 150210; j < 150220; j++) _solve(b, j);
for(j = 151050; j < 151060; j++) _solve(b, j);
for(j = 151890; j < 151900; j++) _solve(b, j);
for(j = 152730; j < 152740; j++) _solve(b, j);
for(j = 153570; j < 153580; j++) _solve(b, j);
for(j = 154410; j < 154420; j++) _solve(b, j);
for(j = 155250; j < 155260; j++) _solve(b, j);
for(j = 156090; j < 156100; j++) _solve(b, j);
for(j = 156930; j < 156940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 157770; j < 157780; j++) _solve(b, j);
for(j = 158610; j < 158620; j++) _solve(b, j);
for(j = 159450; j < 159460; j++) _solve(b, j);
for(j = 160290; j < 160300; j++) _solve(b, j);
for(j = 161130; j < 161140; j++) _solve(b, j);
for(j = 161970; j < 161980; j++) _solve(b, j);
for(j = 162810; j < 162820; j++) _solve(b, j);
for(j = 163650; j < 163660; j++) _solve(b, j);
for(j = 164490; j < 164500; j++) _solve(b, j);
for(j = 165330; j < 165340; j++) _solve(b, j);
for(j = 166170; j < 166180; j++) _solve(b, j);
for(j = 167010; j < 167020; j++) _solve(b, j);
for(j = 167850; j < 167860; j++) _solve(b, j);
for(j = 168690; j < 168700; j++) _solve(b, j);
for(j = 169530; j < 169540; j++) _solve(b, j);
for(j = 170370; j < 170380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 171210; j < 171220; j++) _solve(b, j);
for(j = 172050; j < 172060; j++) _solve(b, j);
for(j = 172890; j < 172900; j++) _solve(b, j);
for(j = 173730; j < 173740; j++) _solve(b, j);
for(j = 174570; j < 174580; j++) _solve(b, j);
for(j = 175410; j < 175420; j++) _solve(b, j);
for(j = 176250; j < 176260; j++) _solve(b, j);
for(j = 177090; j < 177100; j++) _solve(b, j);
for(j = 177930; j < 177940; j++) _solve(b, j);
for(j = 178770; j < 178780; j++) _solve(b, j);
for(j = 179610; j < 179620; j++) _solve(b, j);
for(j = 180450; j < 180460; j++) _solve(b, j);
for(j = 181290; j < 181300; j++) _solve(b, j);
for(j = 182130; j < 182140; j++) _solve(b, j);
for(j = 182970; j < 182980; j++) _solve(b, j);
for(j = 183810; j < 183820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 184650; j < 184660; j++) _solve(b, j);
for(j = 185490; j < 185500; j++) _solve(b, j);
for(j = 186330; j < 186340; j++) _solve(b, j);
for(j = 187170; j < 187180; j++) _solve(b, j);
for(j = 188010; j < 188020; j++) _solve(b, j);
for(j = 188850; j < 188860; j++) _solve(b, j);
for(j = 189690; j < 189700; j++) _solve(b, j);
for(j = 190530; j < 190540; j++) _solve(b, j);
for(j = 191370; j < 191380; j++) _solve(b, j);
for(j = 192210; j < 192220; j++) _solve(b, j);
for(j = 193050; j < 193060; j++) _solve(b, j);
for(j = 193890; j < 193900; j++) _solve(b, j);
for(j = 194730; j < 194740; j++) _solve(b, j);
for(j = 195570; j < 195580; j++) _solve(b, j);
for(j = 196410; j < 196420; j++) _solve(b, j);
for(j = 197250; j < 197260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 198090; j < 198100; j++) _solve(b, j);
for(j = 198930; j < 198940; j++) _solve(b, j);
for(j = 199770; j < 199780; j++) _solve(b, j);
for(j = 200610; j < 200620; j++) _solve(b, j);
for(j = 201450; j < 201460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 131740; j < 131750; j++) _solve(b, j);
for(j = 132580; j < 132590; j++) _solve(b, j);
for(j = 133420; j < 133430; j++) _solve(b, j);
for(j = 134260; j < 134270; j++) _solve(b, j);
for(j = 135100; j < 135110; j++) _solve(b, j);
for(j = 135940; j < 135950; j++) _solve(b, j);
for(j = 136780; j < 136790; j++) _solve(b, j);
for(j = 137620; j < 137630; j++) _solve(b, j);
for(j = 138460; j < 138470; j++) _solve(b, j);
for(j = 139300; j < 139310; j++) _solve(b, j);
for(j = 140140; j < 140150; j++) _solve(b, j);
for(j = 140980; j < 140990; j++) _solve(b, j);
for(j = 141820; j < 141830; j++) _solve(b, j);
for(j = 142660; j < 142670; j++) _solve(b, j);
for(j = 143500; j < 143510; j++) _solve(b, j);
for(j = 144340; j < 144350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 145180; j < 145190; j++) _solve(b, j);
for(j = 146020; j < 146030; j++) _solve(b, j);
for(j = 146860; j < 146870; j++) _solve(b, j);
for(j = 147700; j < 147710; j++) _solve(b, j);
for(j = 148540; j < 148550; j++) _solve(b, j);
for(j = 149380; j < 149390; j++) _solve(b, j);
for(j = 150220; j < 150230; j++) _solve(b, j);
for(j = 151060; j < 151070; j++) _solve(b, j);
for(j = 151900; j < 151910; j++) _solve(b, j);
for(j = 152740; j < 152750; j++) _solve(b, j);
for(j = 153580; j < 153590; j++) _solve(b, j);
for(j = 154420; j < 154430; j++) _solve(b, j);
for(j = 155260; j < 155270; j++) _solve(b, j);
for(j = 156100; j < 156110; j++) _solve(b, j);
for(j = 156940; j < 156950; j++) _solve(b, j);
for(j = 157780; j < 157790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 158620; j < 158630; j++) _solve(b, j);
for(j = 159460; j < 159470; j++) _solve(b, j);
for(j = 160300; j < 160310; j++) _solve(b, j);
for(j = 161140; j < 161150; j++) _solve(b, j);
for(j = 161980; j < 161990; j++) _solve(b, j);
for(j = 162820; j < 162830; j++) _solve(b, j);
for(j = 163660; j < 163670; j++) _solve(b, j);
for(j = 164500; j < 164510; j++) _solve(b, j);
for(j = 165340; j < 165350; j++) _solve(b, j);
for(j = 166180; j < 166190; j++) _solve(b, j);
for(j = 167020; j < 167030; j++) _solve(b, j);
for(j = 167860; j < 167870; j++) _solve(b, j);
for(j = 168700; j < 168710; j++) _solve(b, j);
for(j = 169540; j < 169550; j++) _solve(b, j);
for(j = 170380; j < 170390; j++) _solve(b, j);
for(j = 171220; j < 171230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 172060; j < 172070; j++) _solve(b, j);
for(j = 172900; j < 172910; j++) _solve(b, j);
for(j = 173740; j < 173750; j++) _solve(b, j);
for(j = 174580; j < 174590; j++) _solve(b, j);
for(j = 175420; j < 175430; j++) _solve(b, j);
for(j = 176260; j < 176270; j++) _solve(b, j);
for(j = 177100; j < 177110; j++) _solve(b, j);
for(j = 177940; j < 177950; j++) _solve(b, j);
for(j = 178780; j < 178790; j++) _solve(b, j);
for(j = 179620; j < 179630; j++) _solve(b, j);
for(j = 180460; j < 180470; j++) _solve(b, j);
for(j = 181300; j < 181310; j++) _solve(b, j);
for(j = 182140; j < 182150; j++) _solve(b, j);
for(j = 182980; j < 182990; j++) _solve(b, j);
for(j = 183820; j < 183830; j++) _solve(b, j);
for(j = 184660; j < 184670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 185500; j < 185510; j++) _solve(b, j);
for(j = 186340; j < 186350; j++) _solve(b, j);
for(j = 187180; j < 187190; j++) _solve(b, j);
for(j = 188020; j < 188030; j++) _solve(b, j);
for(j = 188860; j < 188870; j++) _solve(b, j);
for(j = 189700; j < 189710; j++) _solve(b, j);
for(j = 190540; j < 190550; j++) _solve(b, j);
for(j = 191380; j < 191390; j++) _solve(b, j);
for(j = 192220; j < 192230; j++) _solve(b, j);
for(j = 193060; j < 193070; j++) _solve(b, j);
for(j = 193900; j < 193910; j++) _solve(b, j);
for(j = 194740; j < 194750; j++) _solve(b, j);
for(j = 195580; j < 195590; j++) _solve(b, j);
for(j = 196420; j < 196430; j++) _solve(b, j);
for(j = 197260; j < 197270; j++) _solve(b, j);
for(j = 198100; j < 198110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 198940; j < 198950; j++) _solve(b, j);
for(j = 199780; j < 199790; j++) _solve(b, j);
for(j = 200620; j < 200630; j++) _solve(b, j);
for(j = 201460; j < 201470; j++) _solve(b, j);
for(j = 202300; j < 202310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 132590; j < 132600; j++) _solve(b, j);
for(j = 133430; j < 133440; j++) _solve(b, j);
for(j = 134270; j < 134280; j++) _solve(b, j);
for(j = 135110; j < 135120; j++) _solve(b, j);
for(j = 135950; j < 135960; j++) _solve(b, j);
for(j = 136790; j < 136800; j++) _solve(b, j);
for(j = 137630; j < 137640; j++) _solve(b, j);
for(j = 138470; j < 138480; j++) _solve(b, j);
for(j = 139310; j < 139320; j++) _solve(b, j);
for(j = 140150; j < 140160; j++) _solve(b, j);
for(j = 140990; j < 141000; j++) _solve(b, j);
for(j = 141830; j < 141840; j++) _solve(b, j);
for(j = 142670; j < 142680; j++) _solve(b, j);
for(j = 143510; j < 143520; j++) _solve(b, j);
for(j = 144350; j < 144360; j++) _solve(b, j);
for(j = 145190; j < 145200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 146030; j < 146040; j++) _solve(b, j);
for(j = 146870; j < 146880; j++) _solve(b, j);
for(j = 147710; j < 147720; j++) _solve(b, j);
for(j = 148550; j < 148560; j++) _solve(b, j);
for(j = 149390; j < 149400; j++) _solve(b, j);
for(j = 150230; j < 150240; j++) _solve(b, j);
for(j = 151070; j < 151080; j++) _solve(b, j);
for(j = 151910; j < 151920; j++) _solve(b, j);
for(j = 152750; j < 152760; j++) _solve(b, j);
for(j = 153590; j < 153600; j++) _solve(b, j);
for(j = 154430; j < 154440; j++) _solve(b, j);
for(j = 155270; j < 155280; j++) _solve(b, j);
for(j = 156110; j < 156120; j++) _solve(b, j);
for(j = 156950; j < 156960; j++) _solve(b, j);
for(j = 157790; j < 157800; j++) _solve(b, j);
for(j = 158630; j < 158640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 159470; j < 159480; j++) _solve(b, j);
for(j = 160310; j < 160320; j++) _solve(b, j);
for(j = 161150; j < 161160; j++) _solve(b, j);
for(j = 161990; j < 162000; j++) _solve(b, j);
for(j = 162830; j < 162840; j++) _solve(b, j);
for(j = 163670; j < 163680; j++) _solve(b, j);
for(j = 164510; j < 164520; j++) _solve(b, j);
for(j = 165350; j < 165360; j++) _solve(b, j);
for(j = 166190; j < 166200; j++) _solve(b, j);
for(j = 167030; j < 167040; j++) _solve(b, j);
for(j = 167870; j < 167880; j++) _solve(b, j);
for(j = 168710; j < 168720; j++) _solve(b, j);
for(j = 169550; j < 169560; j++) _solve(b, j);
for(j = 170390; j < 170400; j++) _solve(b, j);
for(j = 171230; j < 171240; j++) _solve(b, j);
for(j = 172070; j < 172080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 172910; j < 172920; j++) _solve(b, j);
for(j = 173750; j < 173760; j++) _solve(b, j);
for(j = 174590; j < 174600; j++) _solve(b, j);
for(j = 175430; j < 175440; j++) _solve(b, j);
for(j = 176270; j < 176280; j++) _solve(b, j);
for(j = 177110; j < 177120; j++) _solve(b, j);
for(j = 177950; j < 177960; j++) _solve(b, j);
for(j = 178790; j < 178800; j++) _solve(b, j);
for(j = 179630; j < 179640; j++) _solve(b, j);
for(j = 180470; j < 180480; j++) _solve(b, j);
for(j = 181310; j < 181320; j++) _solve(b, j);
for(j = 182150; j < 182160; j++) _solve(b, j);
for(j = 182990; j < 183000; j++) _solve(b, j);
for(j = 183830; j < 183840; j++) _solve(b, j);
for(j = 184670; j < 184680; j++) _solve(b, j);
for(j = 185510; j < 185520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 186350; j < 186360; j++) _solve(b, j);
for(j = 187190; j < 187200; j++) _solve(b, j);
for(j = 188030; j < 188040; j++) _solve(b, j);
for(j = 188870; j < 188880; j++) _solve(b, j);
for(j = 189710; j < 189720; j++) _solve(b, j);
for(j = 190550; j < 190560; j++) _solve(b, j);
for(j = 191390; j < 191400; j++) _solve(b, j);
for(j = 192230; j < 192240; j++) _solve(b, j);
for(j = 193070; j < 193080; j++) _solve(b, j);
for(j = 193910; j < 193920; j++) _solve(b, j);
for(j = 194750; j < 194760; j++) _solve(b, j);
for(j = 195590; j < 195600; j++) _solve(b, j);
for(j = 196430; j < 196440; j++) _solve(b, j);
for(j = 197270; j < 197280; j++) _solve(b, j);
for(j = 198110; j < 198120; j++) _solve(b, j);
for(j = 198950; j < 198960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 199790; j < 199800; j++) _solve(b, j);
for(j = 200630; j < 200640; j++) _solve(b, j);
for(j = 201470; j < 201480; j++) _solve(b, j);
for(j = 202310; j < 202320; j++) _solve(b, j);
for(j = 203150; j < 203160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 133440; j < 133450; j++) _solve(b, j);
for(j = 134280; j < 134290; j++) _solve(b, j);
for(j = 135120; j < 135130; j++) _solve(b, j);
for(j = 135960; j < 135970; j++) _solve(b, j);
for(j = 136800; j < 136810; j++) _solve(b, j);
for(j = 137640; j < 137650; j++) _solve(b, j);
for(j = 138480; j < 138490; j++) _solve(b, j);
for(j = 139320; j < 139330; j++) _solve(b, j);
for(j = 140160; j < 140170; j++) _solve(b, j);
for(j = 141000; j < 141010; j++) _solve(b, j);
for(j = 141840; j < 141850; j++) _solve(b, j);
for(j = 142680; j < 142690; j++) _solve(b, j);
for(j = 143520; j < 143530; j++) _solve(b, j);
for(j = 144360; j < 144370; j++) _solve(b, j);
for(j = 145200; j < 145210; j++) _solve(b, j);
for(j = 146040; j < 146050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 146880; j < 146890; j++) _solve(b, j);
for(j = 147720; j < 147730; j++) _solve(b, j);
for(j = 148560; j < 148570; j++) _solve(b, j);
for(j = 149400; j < 149410; j++) _solve(b, j);
for(j = 150240; j < 150250; j++) _solve(b, j);
for(j = 151080; j < 151090; j++) _solve(b, j);
for(j = 151920; j < 151930; j++) _solve(b, j);
for(j = 152760; j < 152770; j++) _solve(b, j);
for(j = 153600; j < 153610; j++) _solve(b, j);
for(j = 154440; j < 154450; j++) _solve(b, j);
for(j = 155280; j < 155290; j++) _solve(b, j);
for(j = 156120; j < 156130; j++) _solve(b, j);
for(j = 156960; j < 156970; j++) _solve(b, j);
for(j = 157800; j < 157810; j++) _solve(b, j);
for(j = 158640; j < 158650; j++) _solve(b, j);
for(j = 159480; j < 159490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 160320; j < 160330; j++) _solve(b, j);
for(j = 161160; j < 161170; j++) _solve(b, j);
for(j = 162000; j < 162010; j++) _solve(b, j);
for(j = 162840; j < 162850; j++) _solve(b, j);
for(j = 163680; j < 163690; j++) _solve(b, j);
for(j = 164520; j < 164530; j++) _solve(b, j);
for(j = 165360; j < 165370; j++) _solve(b, j);
for(j = 166200; j < 166210; j++) _solve(b, j);
for(j = 167040; j < 167050; j++) _solve(b, j);
for(j = 167880; j < 167890; j++) _solve(b, j);
for(j = 168720; j < 168730; j++) _solve(b, j);
for(j = 169560; j < 169570; j++) _solve(b, j);
for(j = 170400; j < 170410; j++) _solve(b, j);
for(j = 171240; j < 171250; j++) _solve(b, j);
for(j = 172080; j < 172090; j++) _solve(b, j);
for(j = 172920; j < 172930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 173760; j < 173770; j++) _solve(b, j);
for(j = 174600; j < 174610; j++) _solve(b, j);
for(j = 175440; j < 175450; j++) _solve(b, j);
for(j = 176280; j < 176290; j++) _solve(b, j);
for(j = 177120; j < 177130; j++) _solve(b, j);
for(j = 177960; j < 177970; j++) _solve(b, j);
for(j = 178800; j < 178810; j++) _solve(b, j);
for(j = 179640; j < 179650; j++) _solve(b, j);
for(j = 180480; j < 180490; j++) _solve(b, j);
for(j = 181320; j < 181330; j++) _solve(b, j);
for(j = 182160; j < 182170; j++) _solve(b, j);
for(j = 183000; j < 183010; j++) _solve(b, j);
for(j = 183840; j < 183850; j++) _solve(b, j);
for(j = 184680; j < 184690; j++) _solve(b, j);
for(j = 185520; j < 185530; j++) _solve(b, j);
for(j = 186360; j < 186370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 187200; j < 187210; j++) _solve(b, j);
for(j = 188040; j < 188050; j++) _solve(b, j);
for(j = 188880; j < 188890; j++) _solve(b, j);
for(j = 189720; j < 189730; j++) _solve(b, j);
for(j = 190560; j < 190570; j++) _solve(b, j);
for(j = 191400; j < 191410; j++) _solve(b, j);
for(j = 192240; j < 192250; j++) _solve(b, j);
for(j = 193080; j < 193090; j++) _solve(b, j);
for(j = 193920; j < 193930; j++) _solve(b, j);
for(j = 194760; j < 194770; j++) _solve(b, j);
for(j = 195600; j < 195610; j++) _solve(b, j);
for(j = 196440; j < 196450; j++) _solve(b, j);
for(j = 197280; j < 197290; j++) _solve(b, j);
for(j = 198120; j < 198130; j++) _solve(b, j);
for(j = 198960; j < 198970; j++) _solve(b, j);
for(j = 199800; j < 199810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 200640; j < 200650; j++) _solve(b, j);
for(j = 201480; j < 201490; j++) _solve(b, j);
for(j = 202320; j < 202330; j++) _solve(b, j);
for(j = 203160; j < 203170; j++) _solve(b, j);
for(j = 204000; j < 204010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 134290; j < 134300; j++) _solve(b, j);
for(j = 135130; j < 135140; j++) _solve(b, j);
for(j = 135970; j < 135980; j++) _solve(b, j);
for(j = 136810; j < 136820; j++) _solve(b, j);
for(j = 137650; j < 137660; j++) _solve(b, j);
for(j = 138490; j < 138500; j++) _solve(b, j);
for(j = 139330; j < 139340; j++) _solve(b, j);
for(j = 140170; j < 140180; j++) _solve(b, j);
for(j = 141010; j < 141020; j++) _solve(b, j);
for(j = 141850; j < 141860; j++) _solve(b, j);
for(j = 142690; j < 142700; j++) _solve(b, j);
for(j = 143530; j < 143540; j++) _solve(b, j);
for(j = 144370; j < 144380; j++) _solve(b, j);
for(j = 145210; j < 145220; j++) _solve(b, j);
for(j = 146050; j < 146060; j++) _solve(b, j);
for(j = 146890; j < 146900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 147730; j < 147740; j++) _solve(b, j);
for(j = 148570; j < 148580; j++) _solve(b, j);
for(j = 149410; j < 149420; j++) _solve(b, j);
for(j = 150250; j < 150260; j++) _solve(b, j);
for(j = 151090; j < 151100; j++) _solve(b, j);
for(j = 151930; j < 151940; j++) _solve(b, j);
for(j = 152770; j < 152780; j++) _solve(b, j);
for(j = 153610; j < 153620; j++) _solve(b, j);
for(j = 154450; j < 154460; j++) _solve(b, j);
for(j = 155290; j < 155300; j++) _solve(b, j);
for(j = 156130; j < 156140; j++) _solve(b, j);
for(j = 156970; j < 156980; j++) _solve(b, j);
for(j = 157810; j < 157820; j++) _solve(b, j);
for(j = 158650; j < 158660; j++) _solve(b, j);
for(j = 159490; j < 159500; j++) _solve(b, j);
for(j = 160330; j < 160340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 161170; j < 161180; j++) _solve(b, j);
for(j = 162010; j < 162020; j++) _solve(b, j);
for(j = 162850; j < 162860; j++) _solve(b, j);
for(j = 163690; j < 163700; j++) _solve(b, j);
for(j = 164530; j < 164540; j++) _solve(b, j);
for(j = 165370; j < 165380; j++) _solve(b, j);
for(j = 166210; j < 166220; j++) _solve(b, j);
for(j = 167050; j < 167060; j++) _solve(b, j);
for(j = 167890; j < 167900; j++) _solve(b, j);
for(j = 168730; j < 168740; j++) _solve(b, j);
for(j = 169570; j < 169580; j++) _solve(b, j);
for(j = 170410; j < 170420; j++) _solve(b, j);
for(j = 171250; j < 171260; j++) _solve(b, j);
for(j = 172090; j < 172100; j++) _solve(b, j);
for(j = 172930; j < 172940; j++) _solve(b, j);
for(j = 173770; j < 173780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 174610; j < 174620; j++) _solve(b, j);
for(j = 175450; j < 175460; j++) _solve(b, j);
for(j = 176290; j < 176300; j++) _solve(b, j);
for(j = 177130; j < 177140; j++) _solve(b, j);
for(j = 177970; j < 177980; j++) _solve(b, j);
for(j = 178810; j < 178820; j++) _solve(b, j);
for(j = 179650; j < 179660; j++) _solve(b, j);
for(j = 180490; j < 180500; j++) _solve(b, j);
for(j = 181330; j < 181340; j++) _solve(b, j);
for(j = 182170; j < 182180; j++) _solve(b, j);
for(j = 183010; j < 183020; j++) _solve(b, j);
for(j = 183850; j < 183860; j++) _solve(b, j);
for(j = 184690; j < 184700; j++) _solve(b, j);
for(j = 185530; j < 185540; j++) _solve(b, j);
for(j = 186370; j < 186380; j++) _solve(b, j);
for(j = 187210; j < 187220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 188050; j < 188060; j++) _solve(b, j);
for(j = 188890; j < 188900; j++) _solve(b, j);
for(j = 189730; j < 189740; j++) _solve(b, j);
for(j = 190570; j < 190580; j++) _solve(b, j);
for(j = 191410; j < 191420; j++) _solve(b, j);
for(j = 192250; j < 192260; j++) _solve(b, j);
for(j = 193090; j < 193100; j++) _solve(b, j);
for(j = 193930; j < 193940; j++) _solve(b, j);
for(j = 194770; j < 194780; j++) _solve(b, j);
for(j = 195610; j < 195620; j++) _solve(b, j);
for(j = 196450; j < 196460; j++) _solve(b, j);
for(j = 197290; j < 197300; j++) _solve(b, j);
for(j = 198130; j < 198140; j++) _solve(b, j);
for(j = 198970; j < 198980; j++) _solve(b, j);
for(j = 199810; j < 199820; j++) _solve(b, j);
for(j = 200650; j < 200660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 201490; j < 201500; j++) _solve(b, j);
for(j = 202330; j < 202340; j++) _solve(b, j);
for(j = 203170; j < 203180; j++) _solve(b, j);
for(j = 204010; j < 204020; j++) _solve(b, j);
for(j = 204850; j < 204860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 135140; j < 135150; j++) _solve(b, j);
for(j = 135980; j < 135990; j++) _solve(b, j);
for(j = 136820; j < 136830; j++) _solve(b, j);
for(j = 137660; j < 137670; j++) _solve(b, j);
for(j = 138500; j < 138510; j++) _solve(b, j);
for(j = 139340; j < 139350; j++) _solve(b, j);
for(j = 140180; j < 140190; j++) _solve(b, j);
for(j = 141020; j < 141030; j++) _solve(b, j);
for(j = 141860; j < 141870; j++) _solve(b, j);
for(j = 142700; j < 142710; j++) _solve(b, j);
for(j = 143540; j < 143550; j++) _solve(b, j);
for(j = 144380; j < 144390; j++) _solve(b, j);
for(j = 145220; j < 145230; j++) _solve(b, j);
for(j = 146060; j < 146070; j++) _solve(b, j);
for(j = 146900; j < 146910; j++) _solve(b, j);
for(j = 147740; j < 147750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 148580; j < 148590; j++) _solve(b, j);
for(j = 149420; j < 149430; j++) _solve(b, j);
for(j = 150260; j < 150270; j++) _solve(b, j);
for(j = 151100; j < 151110; j++) _solve(b, j);
for(j = 151940; j < 151950; j++) _solve(b, j);
for(j = 152780; j < 152790; j++) _solve(b, j);
for(j = 153620; j < 153630; j++) _solve(b, j);
for(j = 154460; j < 154470; j++) _solve(b, j);
for(j = 155300; j < 155310; j++) _solve(b, j);
for(j = 156140; j < 156150; j++) _solve(b, j);
for(j = 156980; j < 156990; j++) _solve(b, j);
for(j = 157820; j < 157830; j++) _solve(b, j);
for(j = 158660; j < 158670; j++) _solve(b, j);
for(j = 159500; j < 159510; j++) _solve(b, j);
for(j = 160340; j < 160350; j++) _solve(b, j);
for(j = 161180; j < 161190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 162020; j < 162030; j++) _solve(b, j);
for(j = 162860; j < 162870; j++) _solve(b, j);
for(j = 163700; j < 163710; j++) _solve(b, j);
for(j = 164540; j < 164550; j++) _solve(b, j);
for(j = 165380; j < 165390; j++) _solve(b, j);
for(j = 166220; j < 166230; j++) _solve(b, j);
for(j = 167060; j < 167070; j++) _solve(b, j);
for(j = 167900; j < 167910; j++) _solve(b, j);
for(j = 168740; j < 168750; j++) _solve(b, j);
for(j = 169580; j < 169590; j++) _solve(b, j);
for(j = 170420; j < 170430; j++) _solve(b, j);
for(j = 171260; j < 171270; j++) _solve(b, j);
for(j = 172100; j < 172110; j++) _solve(b, j);
for(j = 172940; j < 172950; j++) _solve(b, j);
for(j = 173780; j < 173790; j++) _solve(b, j);
for(j = 174620; j < 174630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 175460; j < 175470; j++) _solve(b, j);
for(j = 176300; j < 176310; j++) _solve(b, j);
for(j = 177140; j < 177150; j++) _solve(b, j);
for(j = 177980; j < 177990; j++) _solve(b, j);
for(j = 178820; j < 178830; j++) _solve(b, j);
for(j = 179660; j < 179670; j++) _solve(b, j);
for(j = 180500; j < 180510; j++) _solve(b, j);
for(j = 181340; j < 181350; j++) _solve(b, j);
for(j = 182180; j < 182190; j++) _solve(b, j);
for(j = 183020; j < 183030; j++) _solve(b, j);
for(j = 183860; j < 183870; j++) _solve(b, j);
for(j = 184700; j < 184710; j++) _solve(b, j);
for(j = 185540; j < 185550; j++) _solve(b, j);
for(j = 186380; j < 186390; j++) _solve(b, j);
for(j = 187220; j < 187230; j++) _solve(b, j);
for(j = 188060; j < 188070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 188900; j < 188910; j++) _solve(b, j);
for(j = 189740; j < 189750; j++) _solve(b, j);
for(j = 190580; j < 190590; j++) _solve(b, j);
for(j = 191420; j < 191430; j++) _solve(b, j);
for(j = 192260; j < 192270; j++) _solve(b, j);
for(j = 193100; j < 193110; j++) _solve(b, j);
for(j = 193940; j < 193950; j++) _solve(b, j);
for(j = 194780; j < 194790; j++) _solve(b, j);
for(j = 195620; j < 195630; j++) _solve(b, j);
for(j = 196460; j < 196470; j++) _solve(b, j);
for(j = 197300; j < 197310; j++) _solve(b, j);
for(j = 198140; j < 198150; j++) _solve(b, j);
for(j = 198980; j < 198990; j++) _solve(b, j);
for(j = 199820; j < 199830; j++) _solve(b, j);
for(j = 200660; j < 200670; j++) _solve(b, j);
for(j = 201500; j < 201510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 202340; j < 202350; j++) _solve(b, j);
for(j = 203180; j < 203190; j++) _solve(b, j);
for(j = 204020; j < 204030; j++) _solve(b, j);
for(j = 204860; j < 204870; j++) _solve(b, j);
for(j = 205700; j < 205710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 135990; j < 136000; j++) _solve(b, j);
for(j = 136830; j < 136840; j++) _solve(b, j);
for(j = 137670; j < 137680; j++) _solve(b, j);
for(j = 138510; j < 138520; j++) _solve(b, j);
for(j = 139350; j < 139360; j++) _solve(b, j);
for(j = 140190; j < 140200; j++) _solve(b, j);
for(j = 141030; j < 141040; j++) _solve(b, j);
for(j = 141870; j < 141880; j++) _solve(b, j);
for(j = 142710; j < 142720; j++) _solve(b, j);
for(j = 143550; j < 143560; j++) _solve(b, j);
for(j = 144390; j < 144400; j++) _solve(b, j);
for(j = 145230; j < 145240; j++) _solve(b, j);
for(j = 146070; j < 146080; j++) _solve(b, j);
for(j = 146910; j < 146920; j++) _solve(b, j);
for(j = 147750; j < 147760; j++) _solve(b, j);
for(j = 148590; j < 148600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 149430; j < 149440; j++) _solve(b, j);
for(j = 150270; j < 150280; j++) _solve(b, j);
for(j = 151110; j < 151120; j++) _solve(b, j);
for(j = 151950; j < 151960; j++) _solve(b, j);
for(j = 152790; j < 152800; j++) _solve(b, j);
for(j = 153630; j < 153640; j++) _solve(b, j);
for(j = 154470; j < 154480; j++) _solve(b, j);
for(j = 155310; j < 155320; j++) _solve(b, j);
for(j = 156150; j < 156160; j++) _solve(b, j);
for(j = 156990; j < 157000; j++) _solve(b, j);
for(j = 157830; j < 157840; j++) _solve(b, j);
for(j = 158670; j < 158680; j++) _solve(b, j);
for(j = 159510; j < 159520; j++) _solve(b, j);
for(j = 160350; j < 160360; j++) _solve(b, j);
for(j = 161190; j < 161200; j++) _solve(b, j);
for(j = 162030; j < 162040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 162870; j < 162880; j++) _solve(b, j);
for(j = 163710; j < 163720; j++) _solve(b, j);
for(j = 164550; j < 164560; j++) _solve(b, j);
for(j = 165390; j < 165400; j++) _solve(b, j);
for(j = 166230; j < 166240; j++) _solve(b, j);
for(j = 167070; j < 167080; j++) _solve(b, j);
for(j = 167910; j < 167920; j++) _solve(b, j);
for(j = 168750; j < 168760; j++) _solve(b, j);
for(j = 169590; j < 169600; j++) _solve(b, j);
for(j = 170430; j < 170440; j++) _solve(b, j);
for(j = 171270; j < 171280; j++) _solve(b, j);
for(j = 172110; j < 172120; j++) _solve(b, j);
for(j = 172950; j < 172960; j++) _solve(b, j);
for(j = 173790; j < 173800; j++) _solve(b, j);
for(j = 174630; j < 174640; j++) _solve(b, j);
for(j = 175470; j < 175480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 176310; j < 176320; j++) _solve(b, j);
for(j = 177150; j < 177160; j++) _solve(b, j);
for(j = 177990; j < 178000; j++) _solve(b, j);
for(j = 178830; j < 178840; j++) _solve(b, j);
for(j = 179670; j < 179680; j++) _solve(b, j);
for(j = 180510; j < 180520; j++) _solve(b, j);
for(j = 181350; j < 181360; j++) _solve(b, j);
for(j = 182190; j < 182200; j++) _solve(b, j);
for(j = 183030; j < 183040; j++) _solve(b, j);
for(j = 183870; j < 183880; j++) _solve(b, j);
for(j = 184710; j < 184720; j++) _solve(b, j);
for(j = 185550; j < 185560; j++) _solve(b, j);
for(j = 186390; j < 186400; j++) _solve(b, j);
for(j = 187230; j < 187240; j++) _solve(b, j);
for(j = 188070; j < 188080; j++) _solve(b, j);
for(j = 188910; j < 188920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 189750; j < 189760; j++) _solve(b, j);
for(j = 190590; j < 190600; j++) _solve(b, j);
for(j = 191430; j < 191440; j++) _solve(b, j);
for(j = 192270; j < 192280; j++) _solve(b, j);
for(j = 193110; j < 193120; j++) _solve(b, j);
for(j = 193950; j < 193960; j++) _solve(b, j);
for(j = 194790; j < 194800; j++) _solve(b, j);
for(j = 195630; j < 195640; j++) _solve(b, j);
for(j = 196470; j < 196480; j++) _solve(b, j);
for(j = 197310; j < 197320; j++) _solve(b, j);
for(j = 198150; j < 198160; j++) _solve(b, j);
for(j = 198990; j < 199000; j++) _solve(b, j);
for(j = 199830; j < 199840; j++) _solve(b, j);
for(j = 200670; j < 200680; j++) _solve(b, j);
for(j = 201510; j < 201520; j++) _solve(b, j);
for(j = 202350; j < 202360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 203190; j < 203200; j++) _solve(b, j);
for(j = 204030; j < 204040; j++) _solve(b, j);
for(j = 204870; j < 204880; j++) _solve(b, j);
for(j = 205710; j < 205720; j++) _solve(b, j);
for(j = 206550; j < 206560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 136840; j < 136850; j++) _solve(b, j);
for(j = 137680; j < 137690; j++) _solve(b, j);
for(j = 138520; j < 138530; j++) _solve(b, j);
for(j = 139360; j < 139370; j++) _solve(b, j);
for(j = 140200; j < 140210; j++) _solve(b, j);
for(j = 141040; j < 141050; j++) _solve(b, j);
for(j = 141880; j < 141890; j++) _solve(b, j);
for(j = 142720; j < 142730; j++) _solve(b, j);
for(j = 143560; j < 143570; j++) _solve(b, j);
for(j = 144400; j < 144410; j++) _solve(b, j);
for(j = 145240; j < 145250; j++) _solve(b, j);
for(j = 146080; j < 146090; j++) _solve(b, j);
for(j = 146920; j < 146930; j++) _solve(b, j);
for(j = 147760; j < 147770; j++) _solve(b, j);
for(j = 148600; j < 148610; j++) _solve(b, j);
for(j = 149440; j < 149450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 150280; j < 150290; j++) _solve(b, j);
for(j = 151120; j < 151130; j++) _solve(b, j);
for(j = 151960; j < 151970; j++) _solve(b, j);
for(j = 152800; j < 152810; j++) _solve(b, j);
for(j = 153640; j < 153650; j++) _solve(b, j);
for(j = 154480; j < 154490; j++) _solve(b, j);
for(j = 155320; j < 155330; j++) _solve(b, j);
for(j = 156160; j < 156170; j++) _solve(b, j);
for(j = 157000; j < 157010; j++) _solve(b, j);
for(j = 157840; j < 157850; j++) _solve(b, j);
for(j = 158680; j < 158690; j++) _solve(b, j);
for(j = 159520; j < 159530; j++) _solve(b, j);
for(j = 160360; j < 160370; j++) _solve(b, j);
for(j = 161200; j < 161210; j++) _solve(b, j);
for(j = 162040; j < 162050; j++) _solve(b, j);
for(j = 162880; j < 162890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 163720; j < 163730; j++) _solve(b, j);
for(j = 164560; j < 164570; j++) _solve(b, j);
for(j = 165400; j < 165410; j++) _solve(b, j);
for(j = 166240; j < 166250; j++) _solve(b, j);
for(j = 167080; j < 167090; j++) _solve(b, j);
for(j = 167920; j < 167930; j++) _solve(b, j);
for(j = 168760; j < 168770; j++) _solve(b, j);
for(j = 169600; j < 169610; j++) _solve(b, j);
for(j = 170440; j < 170450; j++) _solve(b, j);
for(j = 171280; j < 171290; j++) _solve(b, j);
for(j = 172120; j < 172130; j++) _solve(b, j);
for(j = 172960; j < 172970; j++) _solve(b, j);
for(j = 173800; j < 173810; j++) _solve(b, j);
for(j = 174640; j < 174650; j++) _solve(b, j);
for(j = 175480; j < 175490; j++) _solve(b, j);
for(j = 176320; j < 176330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 177160; j < 177170; j++) _solve(b, j);
for(j = 178000; j < 178010; j++) _solve(b, j);
for(j = 178840; j < 178850; j++) _solve(b, j);
for(j = 179680; j < 179690; j++) _solve(b, j);
for(j = 180520; j < 180530; j++) _solve(b, j);
for(j = 181360; j < 181370; j++) _solve(b, j);
for(j = 182200; j < 182210; j++) _solve(b, j);
for(j = 183040; j < 183050; j++) _solve(b, j);
for(j = 183880; j < 183890; j++) _solve(b, j);
for(j = 184720; j < 184730; j++) _solve(b, j);
for(j = 185560; j < 185570; j++) _solve(b, j);
for(j = 186400; j < 186410; j++) _solve(b, j);
for(j = 187240; j < 187250; j++) _solve(b, j);
for(j = 188080; j < 188090; j++) _solve(b, j);
for(j = 188920; j < 188930; j++) _solve(b, j);
for(j = 189760; j < 189770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 190600; j < 190610; j++) _solve(b, j);
for(j = 191440; j < 191450; j++) _solve(b, j);
for(j = 192280; j < 192290; j++) _solve(b, j);
for(j = 193120; j < 193130; j++) _solve(b, j);
for(j = 193960; j < 193970; j++) _solve(b, j);
for(j = 194800; j < 194810; j++) _solve(b, j);
for(j = 195640; j < 195650; j++) _solve(b, j);
for(j = 196480; j < 196490; j++) _solve(b, j);
for(j = 197320; j < 197330; j++) _solve(b, j);
for(j = 198160; j < 198170; j++) _solve(b, j);
for(j = 199000; j < 199010; j++) _solve(b, j);
for(j = 199840; j < 199850; j++) _solve(b, j);
for(j = 200680; j < 200690; j++) _solve(b, j);
for(j = 201520; j < 201530; j++) _solve(b, j);
for(j = 202360; j < 202370; j++) _solve(b, j);
for(j = 203200; j < 203210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 204040; j < 204050; j++) _solve(b, j);
for(j = 204880; j < 204890; j++) _solve(b, j);
for(j = 205720; j < 205730; j++) _solve(b, j);
for(j = 206560; j < 206570; j++) _solve(b, j);
for(j = 207400; j < 207410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 137690; j < 137700; j++) _solve(b, j);
for(j = 138530; j < 138540; j++) _solve(b, j);
for(j = 139370; j < 139380; j++) _solve(b, j);
for(j = 140210; j < 140220; j++) _solve(b, j);
for(j = 141050; j < 141060; j++) _solve(b, j);
for(j = 141890; j < 141900; j++) _solve(b, j);
for(j = 142730; j < 142740; j++) _solve(b, j);
for(j = 143570; j < 143580; j++) _solve(b, j);
for(j = 144410; j < 144420; j++) _solve(b, j);
for(j = 145250; j < 145260; j++) _solve(b, j);
for(j = 146090; j < 146100; j++) _solve(b, j);
for(j = 146930; j < 146940; j++) _solve(b, j);
for(j = 147770; j < 147780; j++) _solve(b, j);
for(j = 148610; j < 148620; j++) _solve(b, j);
for(j = 149450; j < 149460; j++) _solve(b, j);
for(j = 150290; j < 150300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 151130; j < 151140; j++) _solve(b, j);
for(j = 151970; j < 151980; j++) _solve(b, j);
for(j = 152810; j < 152820; j++) _solve(b, j);
for(j = 153650; j < 153660; j++) _solve(b, j);
for(j = 154490; j < 154500; j++) _solve(b, j);
for(j = 155330; j < 155340; j++) _solve(b, j);
for(j = 156170; j < 156180; j++) _solve(b, j);
for(j = 157010; j < 157020; j++) _solve(b, j);
for(j = 157850; j < 157860; j++) _solve(b, j);
for(j = 158690; j < 158700; j++) _solve(b, j);
for(j = 159530; j < 159540; j++) _solve(b, j);
for(j = 160370; j < 160380; j++) _solve(b, j);
for(j = 161210; j < 161220; j++) _solve(b, j);
for(j = 162050; j < 162060; j++) _solve(b, j);
for(j = 162890; j < 162900; j++) _solve(b, j);
for(j = 163730; j < 163740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 164570; j < 164580; j++) _solve(b, j);
for(j = 165410; j < 165420; j++) _solve(b, j);
for(j = 166250; j < 166260; j++) _solve(b, j);
for(j = 167090; j < 167100; j++) _solve(b, j);
for(j = 167930; j < 167940; j++) _solve(b, j);
for(j = 168770; j < 168780; j++) _solve(b, j);
for(j = 169610; j < 169620; j++) _solve(b, j);
for(j = 170450; j < 170460; j++) _solve(b, j);
for(j = 171290; j < 171300; j++) _solve(b, j);
for(j = 172130; j < 172140; j++) _solve(b, j);
for(j = 172970; j < 172980; j++) _solve(b, j);
for(j = 173810; j < 173820; j++) _solve(b, j);
for(j = 174650; j < 174660; j++) _solve(b, j);
for(j = 175490; j < 175500; j++) _solve(b, j);
for(j = 176330; j < 176340; j++) _solve(b, j);
for(j = 177170; j < 177180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 178010; j < 178020; j++) _solve(b, j);
for(j = 178850; j < 178860; j++) _solve(b, j);
for(j = 179690; j < 179700; j++) _solve(b, j);
for(j = 180530; j < 180540; j++) _solve(b, j);
for(j = 181370; j < 181380; j++) _solve(b, j);
for(j = 182210; j < 182220; j++) _solve(b, j);
for(j = 183050; j < 183060; j++) _solve(b, j);
for(j = 183890; j < 183900; j++) _solve(b, j);
for(j = 184730; j < 184740; j++) _solve(b, j);
for(j = 185570; j < 185580; j++) _solve(b, j);
for(j = 186410; j < 186420; j++) _solve(b, j);
for(j = 187250; j < 187260; j++) _solve(b, j);
for(j = 188090; j < 188100; j++) _solve(b, j);
for(j = 188930; j < 188940; j++) _solve(b, j);
for(j = 189770; j < 189780; j++) _solve(b, j);
for(j = 190610; j < 190620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 191450; j < 191460; j++) _solve(b, j);
for(j = 192290; j < 192300; j++) _solve(b, j);
for(j = 193130; j < 193140; j++) _solve(b, j);
for(j = 193970; j < 193980; j++) _solve(b, j);
for(j = 194810; j < 194820; j++) _solve(b, j);
for(j = 195650; j < 195660; j++) _solve(b, j);
for(j = 196490; j < 196500; j++) _solve(b, j);
for(j = 197330; j < 197340; j++) _solve(b, j);
for(j = 198170; j < 198180; j++) _solve(b, j);
for(j = 199010; j < 199020; j++) _solve(b, j);
for(j = 199850; j < 199860; j++) _solve(b, j);
for(j = 200690; j < 200700; j++) _solve(b, j);
for(j = 201530; j < 201540; j++) _solve(b, j);
for(j = 202370; j < 202380; j++) _solve(b, j);
for(j = 203210; j < 203220; j++) _solve(b, j);
for(j = 204050; j < 204060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 204890; j < 204900; j++) _solve(b, j);
for(j = 205730; j < 205740; j++) _solve(b, j);
for(j = 206570; j < 206580; j++) _solve(b, j);
for(j = 207410; j < 207420; j++) _solve(b, j);
for(j = 208250; j < 208260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 138540; j < 138550; j++) _solve(b, j);
for(j = 139380; j < 139390; j++) _solve(b, j);
for(j = 140220; j < 140230; j++) _solve(b, j);
for(j = 141060; j < 141070; j++) _solve(b, j);
for(j = 141900; j < 141910; j++) _solve(b, j);
for(j = 142740; j < 142750; j++) _solve(b, j);
for(j = 143580; j < 143590; j++) _solve(b, j);
for(j = 144420; j < 144430; j++) _solve(b, j);
for(j = 145260; j < 145270; j++) _solve(b, j);
for(j = 146100; j < 146110; j++) _solve(b, j);
for(j = 146940; j < 146950; j++) _solve(b, j);
for(j = 147780; j < 147790; j++) _solve(b, j);
for(j = 148620; j < 148630; j++) _solve(b, j);
for(j = 149460; j < 149470; j++) _solve(b, j);
for(j = 150300; j < 150310; j++) _solve(b, j);
for(j = 151140; j < 151150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 151980; j < 151990; j++) _solve(b, j);
for(j = 152820; j < 152830; j++) _solve(b, j);
for(j = 153660; j < 153670; j++) _solve(b, j);
for(j = 154500; j < 154510; j++) _solve(b, j);
for(j = 155340; j < 155350; j++) _solve(b, j);
for(j = 156180; j < 156190; j++) _solve(b, j);
for(j = 157020; j < 157030; j++) _solve(b, j);
for(j = 157860; j < 157870; j++) _solve(b, j);
for(j = 158700; j < 158710; j++) _solve(b, j);
for(j = 159540; j < 159550; j++) _solve(b, j);
for(j = 160380; j < 160390; j++) _solve(b, j);
for(j = 161220; j < 161230; j++) _solve(b, j);
for(j = 162060; j < 162070; j++) _solve(b, j);
for(j = 162900; j < 162910; j++) _solve(b, j);
for(j = 163740; j < 163750; j++) _solve(b, j);
for(j = 164580; j < 164590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 165420; j < 165430; j++) _solve(b, j);
for(j = 166260; j < 166270; j++) _solve(b, j);
for(j = 167100; j < 167110; j++) _solve(b, j);
for(j = 167940; j < 167950; j++) _solve(b, j);
for(j = 168780; j < 168790; j++) _solve(b, j);
for(j = 169620; j < 169630; j++) _solve(b, j);
for(j = 170460; j < 170470; j++) _solve(b, j);
for(j = 171300; j < 171310; j++) _solve(b, j);
for(j = 172140; j < 172150; j++) _solve(b, j);
for(j = 172980; j < 172990; j++) _solve(b, j);
for(j = 173820; j < 173830; j++) _solve(b, j);
for(j = 174660; j < 174670; j++) _solve(b, j);
for(j = 175500; j < 175510; j++) _solve(b, j);
for(j = 176340; j < 176350; j++) _solve(b, j);
for(j = 177180; j < 177190; j++) _solve(b, j);
for(j = 178020; j < 178030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 178860; j < 178870; j++) _solve(b, j);
for(j = 179700; j < 179710; j++) _solve(b, j);
for(j = 180540; j < 180550; j++) _solve(b, j);
for(j = 181380; j < 181390; j++) _solve(b, j);
for(j = 182220; j < 182230; j++) _solve(b, j);
for(j = 183060; j < 183070; j++) _solve(b, j);
for(j = 183900; j < 183910; j++) _solve(b, j);
for(j = 184740; j < 184750; j++) _solve(b, j);
for(j = 185580; j < 185590; j++) _solve(b, j);
for(j = 186420; j < 186430; j++) _solve(b, j);
for(j = 187260; j < 187270; j++) _solve(b, j);
for(j = 188100; j < 188110; j++) _solve(b, j);
for(j = 188940; j < 188950; j++) _solve(b, j);
for(j = 189780; j < 189790; j++) _solve(b, j);
for(j = 190620; j < 190630; j++) _solve(b, j);
for(j = 191460; j < 191470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 192300; j < 192310; j++) _solve(b, j);
for(j = 193140; j < 193150; j++) _solve(b, j);
for(j = 193980; j < 193990; j++) _solve(b, j);
for(j = 194820; j < 194830; j++) _solve(b, j);
for(j = 195660; j < 195670; j++) _solve(b, j);
for(j = 196500; j < 196510; j++) _solve(b, j);
for(j = 197340; j < 197350; j++) _solve(b, j);
for(j = 198180; j < 198190; j++) _solve(b, j);
for(j = 199020; j < 199030; j++) _solve(b, j);
for(j = 199860; j < 199870; j++) _solve(b, j);
for(j = 200700; j < 200710; j++) _solve(b, j);
for(j = 201540; j < 201550; j++) _solve(b, j);
for(j = 202380; j < 202390; j++) _solve(b, j);
for(j = 203220; j < 203230; j++) _solve(b, j);
for(j = 204060; j < 204070; j++) _solve(b, j);
for(j = 204900; j < 204910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 205740; j < 205750; j++) _solve(b, j);
for(j = 206580; j < 206590; j++) _solve(b, j);
for(j = 207420; j < 207430; j++) _solve(b, j);
for(j = 208260; j < 208270; j++) _solve(b, j);
for(j = 209100; j < 209110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 139390; j < 139400; j++) _solve(b, j);
for(j = 140230; j < 140240; j++) _solve(b, j);
for(j = 141070; j < 141080; j++) _solve(b, j);
for(j = 141910; j < 141920; j++) _solve(b, j);
for(j = 142750; j < 142760; j++) _solve(b, j);
for(j = 143590; j < 143600; j++) _solve(b, j);
for(j = 144430; j < 144440; j++) _solve(b, j);
for(j = 145270; j < 145280; j++) _solve(b, j);
for(j = 146110; j < 146120; j++) _solve(b, j);
for(j = 146950; j < 146960; j++) _solve(b, j);
for(j = 147790; j < 147800; j++) _solve(b, j);
for(j = 148630; j < 148640; j++) _solve(b, j);
for(j = 149470; j < 149480; j++) _solve(b, j);
for(j = 150310; j < 150320; j++) _solve(b, j);
for(j = 151150; j < 151160; j++) _solve(b, j);
for(j = 151990; j < 152000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 152830; j < 152840; j++) _solve(b, j);
for(j = 153670; j < 153680; j++) _solve(b, j);
for(j = 154510; j < 154520; j++) _solve(b, j);
for(j = 155350; j < 155360; j++) _solve(b, j);
for(j = 156190; j < 156200; j++) _solve(b, j);
for(j = 157030; j < 157040; j++) _solve(b, j);
for(j = 157870; j < 157880; j++) _solve(b, j);
for(j = 158710; j < 158720; j++) _solve(b, j);
for(j = 159550; j < 159560; j++) _solve(b, j);
for(j = 160390; j < 160400; j++) _solve(b, j);
for(j = 161230; j < 161240; j++) _solve(b, j);
for(j = 162070; j < 162080; j++) _solve(b, j);
for(j = 162910; j < 162920; j++) _solve(b, j);
for(j = 163750; j < 163760; j++) _solve(b, j);
for(j = 164590; j < 164600; j++) _solve(b, j);
for(j = 165430; j < 165440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 166270; j < 166280; j++) _solve(b, j);
for(j = 167110; j < 167120; j++) _solve(b, j);
for(j = 167950; j < 167960; j++) _solve(b, j);
for(j = 168790; j < 168800; j++) _solve(b, j);
for(j = 169630; j < 169640; j++) _solve(b, j);
for(j = 170470; j < 170480; j++) _solve(b, j);
for(j = 171310; j < 171320; j++) _solve(b, j);
for(j = 172150; j < 172160; j++) _solve(b, j);
for(j = 172990; j < 173000; j++) _solve(b, j);
for(j = 173830; j < 173840; j++) _solve(b, j);
for(j = 174670; j < 174680; j++) _solve(b, j);
for(j = 175510; j < 175520; j++) _solve(b, j);
for(j = 176350; j < 176360; j++) _solve(b, j);
for(j = 177190; j < 177200; j++) _solve(b, j);
for(j = 178030; j < 178040; j++) _solve(b, j);
for(j = 178870; j < 178880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 179710; j < 179720; j++) _solve(b, j);
for(j = 180550; j < 180560; j++) _solve(b, j);
for(j = 181390; j < 181400; j++) _solve(b, j);
for(j = 182230; j < 182240; j++) _solve(b, j);
for(j = 183070; j < 183080; j++) _solve(b, j);
for(j = 183910; j < 183920; j++) _solve(b, j);
for(j = 184750; j < 184760; j++) _solve(b, j);
for(j = 185590; j < 185600; j++) _solve(b, j);
for(j = 186430; j < 186440; j++) _solve(b, j);
for(j = 187270; j < 187280; j++) _solve(b, j);
for(j = 188110; j < 188120; j++) _solve(b, j);
for(j = 188950; j < 188960; j++) _solve(b, j);
for(j = 189790; j < 189800; j++) _solve(b, j);
for(j = 190630; j < 190640; j++) _solve(b, j);
for(j = 191470; j < 191480; j++) _solve(b, j);
for(j = 192310; j < 192320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 193150; j < 193160; j++) _solve(b, j);
for(j = 193990; j < 194000; j++) _solve(b, j);
for(j = 194830; j < 194840; j++) _solve(b, j);
for(j = 195670; j < 195680; j++) _solve(b, j);
for(j = 196510; j < 196520; j++) _solve(b, j);
for(j = 197350; j < 197360; j++) _solve(b, j);
for(j = 198190; j < 198200; j++) _solve(b, j);
for(j = 199030; j < 199040; j++) _solve(b, j);
for(j = 199870; j < 199880; j++) _solve(b, j);
for(j = 200710; j < 200720; j++) _solve(b, j);
for(j = 201550; j < 201560; j++) _solve(b, j);
for(j = 202390; j < 202400; j++) _solve(b, j);
for(j = 203230; j < 203240; j++) _solve(b, j);
for(j = 204070; j < 204080; j++) _solve(b, j);
for(j = 204910; j < 204920; j++) _solve(b, j);
for(j = 205750; j < 205760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 206590; j < 206600; j++) _solve(b, j);
for(j = 207430; j < 207440; j++) _solve(b, j);
for(j = 208270; j < 208280; j++) _solve(b, j);
for(j = 209110; j < 209120; j++) _solve(b, j);
for(j = 209950; j < 209960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 140240; j < 140250; j++) _solve(b, j);
for(j = 141080; j < 141090; j++) _solve(b, j);
for(j = 141920; j < 141930; j++) _solve(b, j);
for(j = 142760; j < 142770; j++) _solve(b, j);
for(j = 143600; j < 143610; j++) _solve(b, j);
for(j = 144440; j < 144450; j++) _solve(b, j);
for(j = 145280; j < 145290; j++) _solve(b, j);
for(j = 146120; j < 146130; j++) _solve(b, j);
for(j = 146960; j < 146970; j++) _solve(b, j);
for(j = 147800; j < 147810; j++) _solve(b, j);
for(j = 148640; j < 148650; j++) _solve(b, j);
for(j = 149480; j < 149490; j++) _solve(b, j);
for(j = 150320; j < 150330; j++) _solve(b, j);
for(j = 151160; j < 151170; j++) _solve(b, j);
for(j = 152000; j < 152010; j++) _solve(b, j);
for(j = 152840; j < 152850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 153680; j < 153690; j++) _solve(b, j);
for(j = 154520; j < 154530; j++) _solve(b, j);
for(j = 155360; j < 155370; j++) _solve(b, j);
for(j = 156200; j < 156210; j++) _solve(b, j);
for(j = 157040; j < 157050; j++) _solve(b, j);
for(j = 157880; j < 157890; j++) _solve(b, j);
for(j = 158720; j < 158730; j++) _solve(b, j);
for(j = 159560; j < 159570; j++) _solve(b, j);
for(j = 160400; j < 160410; j++) _solve(b, j);
for(j = 161240; j < 161250; j++) _solve(b, j);
for(j = 162080; j < 162090; j++) _solve(b, j);
for(j = 162920; j < 162930; j++) _solve(b, j);
for(j = 163760; j < 163770; j++) _solve(b, j);
for(j = 164600; j < 164610; j++) _solve(b, j);
for(j = 165440; j < 165450; j++) _solve(b, j);
for(j = 166280; j < 166290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 167120; j < 167130; j++) _solve(b, j);
for(j = 167960; j < 167970; j++) _solve(b, j);
for(j = 168800; j < 168810; j++) _solve(b, j);
for(j = 169640; j < 169650; j++) _solve(b, j);
for(j = 170480; j < 170490; j++) _solve(b, j);
for(j = 171320; j < 171330; j++) _solve(b, j);
for(j = 172160; j < 172170; j++) _solve(b, j);
for(j = 173000; j < 173010; j++) _solve(b, j);
for(j = 173840; j < 173850; j++) _solve(b, j);
for(j = 174680; j < 174690; j++) _solve(b, j);
for(j = 175520; j < 175530; j++) _solve(b, j);
for(j = 176360; j < 176370; j++) _solve(b, j);
for(j = 177200; j < 177210; j++) _solve(b, j);
for(j = 178040; j < 178050; j++) _solve(b, j);
for(j = 178880; j < 178890; j++) _solve(b, j);
for(j = 179720; j < 179730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 180560; j < 180570; j++) _solve(b, j);
for(j = 181400; j < 181410; j++) _solve(b, j);
for(j = 182240; j < 182250; j++) _solve(b, j);
for(j = 183080; j < 183090; j++) _solve(b, j);
for(j = 183920; j < 183930; j++) _solve(b, j);
for(j = 184760; j < 184770; j++) _solve(b, j);
for(j = 185600; j < 185610; j++) _solve(b, j);
for(j = 186440; j < 186450; j++) _solve(b, j);
for(j = 187280; j < 187290; j++) _solve(b, j);
for(j = 188120; j < 188130; j++) _solve(b, j);
for(j = 188960; j < 188970; j++) _solve(b, j);
for(j = 189800; j < 189810; j++) _solve(b, j);
for(j = 190640; j < 190650; j++) _solve(b, j);
for(j = 191480; j < 191490; j++) _solve(b, j);
for(j = 192320; j < 192330; j++) _solve(b, j);
for(j = 193160; j < 193170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 194000; j < 194010; j++) _solve(b, j);
for(j = 194840; j < 194850; j++) _solve(b, j);
for(j = 195680; j < 195690; j++) _solve(b, j);
for(j = 196520; j < 196530; j++) _solve(b, j);
for(j = 197360; j < 197370; j++) _solve(b, j);
for(j = 198200; j < 198210; j++) _solve(b, j);
for(j = 199040; j < 199050; j++) _solve(b, j);
for(j = 199880; j < 199890; j++) _solve(b, j);
for(j = 200720; j < 200730; j++) _solve(b, j);
for(j = 201560; j < 201570; j++) _solve(b, j);
for(j = 202400; j < 202410; j++) _solve(b, j);
for(j = 203240; j < 203250; j++) _solve(b, j);
for(j = 204080; j < 204090; j++) _solve(b, j);
for(j = 204920; j < 204930; j++) _solve(b, j);
for(j = 205760; j < 205770; j++) _solve(b, j);
for(j = 206600; j < 206610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 207440; j < 207450; j++) _solve(b, j);
for(j = 208280; j < 208290; j++) _solve(b, j);
for(j = 209120; j < 209130; j++) _solve(b, j);
for(j = 209960; j < 209970; j++) _solve(b, j);
for(j = 210800; j < 210810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 141090; j < 141100; j++) _solve(b, j);
for(j = 141930; j < 141940; j++) _solve(b, j);
for(j = 142770; j < 142780; j++) _solve(b, j);
for(j = 143610; j < 143620; j++) _solve(b, j);
for(j = 144450; j < 144460; j++) _solve(b, j);
for(j = 145290; j < 145300; j++) _solve(b, j);
for(j = 146130; j < 146140; j++) _solve(b, j);
for(j = 146970; j < 146980; j++) _solve(b, j);
for(j = 147810; j < 147820; j++) _solve(b, j);
for(j = 148650; j < 148660; j++) _solve(b, j);
for(j = 149490; j < 149500; j++) _solve(b, j);
for(j = 150330; j < 150340; j++) _solve(b, j);
for(j = 151170; j < 151180; j++) _solve(b, j);
for(j = 152010; j < 152020; j++) _solve(b, j);
for(j = 152850; j < 152860; j++) _solve(b, j);
for(j = 153690; j < 153700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 154530; j < 154540; j++) _solve(b, j);
for(j = 155370; j < 155380; j++) _solve(b, j);
for(j = 156210; j < 156220; j++) _solve(b, j);
for(j = 157050; j < 157060; j++) _solve(b, j);
for(j = 157890; j < 157900; j++) _solve(b, j);
for(j = 158730; j < 158740; j++) _solve(b, j);
for(j = 159570; j < 159580; j++) _solve(b, j);
for(j = 160410; j < 160420; j++) _solve(b, j);
for(j = 161250; j < 161260; j++) _solve(b, j);
for(j = 162090; j < 162100; j++) _solve(b, j);
for(j = 162930; j < 162940; j++) _solve(b, j);
for(j = 163770; j < 163780; j++) _solve(b, j);
for(j = 164610; j < 164620; j++) _solve(b, j);
for(j = 165450; j < 165460; j++) _solve(b, j);
for(j = 166290; j < 166300; j++) _solve(b, j);
for(j = 167130; j < 167140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 167970; j < 167980; j++) _solve(b, j);
for(j = 168810; j < 168820; j++) _solve(b, j);
for(j = 169650; j < 169660; j++) _solve(b, j);
for(j = 170490; j < 170500; j++) _solve(b, j);
for(j = 171330; j < 171340; j++) _solve(b, j);
for(j = 172170; j < 172180; j++) _solve(b, j);
for(j = 173010; j < 173020; j++) _solve(b, j);
for(j = 173850; j < 173860; j++) _solve(b, j);
for(j = 174690; j < 174700; j++) _solve(b, j);
for(j = 175530; j < 175540; j++) _solve(b, j);
for(j = 176370; j < 176380; j++) _solve(b, j);
for(j = 177210; j < 177220; j++) _solve(b, j);
for(j = 178050; j < 178060; j++) _solve(b, j);
for(j = 178890; j < 178900; j++) _solve(b, j);
for(j = 179730; j < 179740; j++) _solve(b, j);
for(j = 180570; j < 180580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 181410; j < 181420; j++) _solve(b, j);
for(j = 182250; j < 182260; j++) _solve(b, j);
for(j = 183090; j < 183100; j++) _solve(b, j);
for(j = 183930; j < 183940; j++) _solve(b, j);
for(j = 184770; j < 184780; j++) _solve(b, j);
for(j = 185610; j < 185620; j++) _solve(b, j);
for(j = 186450; j < 186460; j++) _solve(b, j);
for(j = 187290; j < 187300; j++) _solve(b, j);
for(j = 188130; j < 188140; j++) _solve(b, j);
for(j = 188970; j < 188980; j++) _solve(b, j);
for(j = 189810; j < 189820; j++) _solve(b, j);
for(j = 190650; j < 190660; j++) _solve(b, j);
for(j = 191490; j < 191500; j++) _solve(b, j);
for(j = 192330; j < 192340; j++) _solve(b, j);
for(j = 193170; j < 193180; j++) _solve(b, j);
for(j = 194010; j < 194020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 194850; j < 194860; j++) _solve(b, j);
for(j = 195690; j < 195700; j++) _solve(b, j);
for(j = 196530; j < 196540; j++) _solve(b, j);
for(j = 197370; j < 197380; j++) _solve(b, j);
for(j = 198210; j < 198220; j++) _solve(b, j);
for(j = 199050; j < 199060; j++) _solve(b, j);
for(j = 199890; j < 199900; j++) _solve(b, j);
for(j = 200730; j < 200740; j++) _solve(b, j);
for(j = 201570; j < 201580; j++) _solve(b, j);
for(j = 202410; j < 202420; j++) _solve(b, j);
for(j = 203250; j < 203260; j++) _solve(b, j);
for(j = 204090; j < 204100; j++) _solve(b, j);
for(j = 204930; j < 204940; j++) _solve(b, j);
for(j = 205770; j < 205780; j++) _solve(b, j);
for(j = 206610; j < 206620; j++) _solve(b, j);
for(j = 207450; j < 207460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 208290; j < 208300; j++) _solve(b, j);
for(j = 209130; j < 209140; j++) _solve(b, j);
for(j = 209970; j < 209980; j++) _solve(b, j);
for(j = 210810; j < 210820; j++) _solve(b, j);
for(j = 211650; j < 211660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 141940; j < 141950; j++) _solve(b, j);
for(j = 142780; j < 142790; j++) _solve(b, j);
for(j = 143620; j < 143630; j++) _solve(b, j);
for(j = 144460; j < 144470; j++) _solve(b, j);
for(j = 145300; j < 145310; j++) _solve(b, j);
for(j = 146140; j < 146150; j++) _solve(b, j);
for(j = 146980; j < 146990; j++) _solve(b, j);
for(j = 147820; j < 147830; j++) _solve(b, j);
for(j = 148660; j < 148670; j++) _solve(b, j);
for(j = 149500; j < 149510; j++) _solve(b, j);
for(j = 150340; j < 150350; j++) _solve(b, j);
for(j = 151180; j < 151190; j++) _solve(b, j);
for(j = 152020; j < 152030; j++) _solve(b, j);
for(j = 152860; j < 152870; j++) _solve(b, j);
for(j = 153700; j < 153710; j++) _solve(b, j);
for(j = 154540; j < 154550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 155380; j < 155390; j++) _solve(b, j);
for(j = 156220; j < 156230; j++) _solve(b, j);
for(j = 157060; j < 157070; j++) _solve(b, j);
for(j = 157900; j < 157910; j++) _solve(b, j);
for(j = 158740; j < 158750; j++) _solve(b, j);
for(j = 159580; j < 159590; j++) _solve(b, j);
for(j = 160420; j < 160430; j++) _solve(b, j);
for(j = 161260; j < 161270; j++) _solve(b, j);
for(j = 162100; j < 162110; j++) _solve(b, j);
for(j = 162940; j < 162950; j++) _solve(b, j);
for(j = 163780; j < 163790; j++) _solve(b, j);
for(j = 164620; j < 164630; j++) _solve(b, j);
for(j = 165460; j < 165470; j++) _solve(b, j);
for(j = 166300; j < 166310; j++) _solve(b, j);
for(j = 167140; j < 167150; j++) _solve(b, j);
for(j = 167980; j < 167990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 168820; j < 168830; j++) _solve(b, j);
for(j = 169660; j < 169670; j++) _solve(b, j);
for(j = 170500; j < 170510; j++) _solve(b, j);
for(j = 171340; j < 171350; j++) _solve(b, j);
for(j = 172180; j < 172190; j++) _solve(b, j);
for(j = 173020; j < 173030; j++) _solve(b, j);
for(j = 173860; j < 173870; j++) _solve(b, j);
for(j = 174700; j < 174710; j++) _solve(b, j);
for(j = 175540; j < 175550; j++) _solve(b, j);
for(j = 176380; j < 176390; j++) _solve(b, j);
for(j = 177220; j < 177230; j++) _solve(b, j);
for(j = 178060; j < 178070; j++) _solve(b, j);
for(j = 178900; j < 178910; j++) _solve(b, j);
for(j = 179740; j < 179750; j++) _solve(b, j);
for(j = 180580; j < 180590; j++) _solve(b, j);
for(j = 181420; j < 181430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 182260; j < 182270; j++) _solve(b, j);
for(j = 183100; j < 183110; j++) _solve(b, j);
for(j = 183940; j < 183950; j++) _solve(b, j);
for(j = 184780; j < 184790; j++) _solve(b, j);
for(j = 185620; j < 185630; j++) _solve(b, j);
for(j = 186460; j < 186470; j++) _solve(b, j);
for(j = 187300; j < 187310; j++) _solve(b, j);
for(j = 188140; j < 188150; j++) _solve(b, j);
for(j = 188980; j < 188990; j++) _solve(b, j);
for(j = 189820; j < 189830; j++) _solve(b, j);
for(j = 190660; j < 190670; j++) _solve(b, j);
for(j = 191500; j < 191510; j++) _solve(b, j);
for(j = 192340; j < 192350; j++) _solve(b, j);
for(j = 193180; j < 193190; j++) _solve(b, j);
for(j = 194020; j < 194030; j++) _solve(b, j);
for(j = 194860; j < 194870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 195700; j < 195710; j++) _solve(b, j);
for(j = 196540; j < 196550; j++) _solve(b, j);
for(j = 197380; j < 197390; j++) _solve(b, j);
for(j = 198220; j < 198230; j++) _solve(b, j);
for(j = 199060; j < 199070; j++) _solve(b, j);
for(j = 199900; j < 199910; j++) _solve(b, j);
for(j = 200740; j < 200750; j++) _solve(b, j);
for(j = 201580; j < 201590; j++) _solve(b, j);
for(j = 202420; j < 202430; j++) _solve(b, j);
for(j = 203260; j < 203270; j++) _solve(b, j);
for(j = 204100; j < 204110; j++) _solve(b, j);
for(j = 204940; j < 204950; j++) _solve(b, j);
for(j = 205780; j < 205790; j++) _solve(b, j);
for(j = 206620; j < 206630; j++) _solve(b, j);
for(j = 207460; j < 207470; j++) _solve(b, j);
for(j = 208300; j < 208310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 209140; j < 209150; j++) _solve(b, j);
for(j = 209980; j < 209990; j++) _solve(b, j);
for(j = 210820; j < 210830; j++) _solve(b, j);
for(j = 211660; j < 211670; j++) _solve(b, j);
for(j = 212500; j < 212510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 142790; j < 142800; j++) _solve(b, j);
for(j = 143630; j < 143640; j++) _solve(b, j);
for(j = 144470; j < 144480; j++) _solve(b, j);
for(j = 145310; j < 145320; j++) _solve(b, j);
for(j = 146150; j < 146160; j++) _solve(b, j);
for(j = 146990; j < 147000; j++) _solve(b, j);
for(j = 147830; j < 147840; j++) _solve(b, j);
for(j = 148670; j < 148680; j++) _solve(b, j);
for(j = 149510; j < 149520; j++) _solve(b, j);
for(j = 150350; j < 150360; j++) _solve(b, j);
for(j = 151190; j < 151200; j++) _solve(b, j);
for(j = 152030; j < 152040; j++) _solve(b, j);
for(j = 152870; j < 152880; j++) _solve(b, j);
for(j = 153710; j < 153720; j++) _solve(b, j);
for(j = 154550; j < 154560; j++) _solve(b, j);
for(j = 155390; j < 155400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 156230; j < 156240; j++) _solve(b, j);
for(j = 157070; j < 157080; j++) _solve(b, j);
for(j = 157910; j < 157920; j++) _solve(b, j);
for(j = 158750; j < 158760; j++) _solve(b, j);
for(j = 159590; j < 159600; j++) _solve(b, j);
for(j = 160430; j < 160440; j++) _solve(b, j);
for(j = 161270; j < 161280; j++) _solve(b, j);
for(j = 162110; j < 162120; j++) _solve(b, j);
for(j = 162950; j < 162960; j++) _solve(b, j);
for(j = 163790; j < 163800; j++) _solve(b, j);
for(j = 164630; j < 164640; j++) _solve(b, j);
for(j = 165470; j < 165480; j++) _solve(b, j);
for(j = 166310; j < 166320; j++) _solve(b, j);
for(j = 167150; j < 167160; j++) _solve(b, j);
for(j = 167990; j < 168000; j++) _solve(b, j);
for(j = 168830; j < 168840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 169670; j < 169680; j++) _solve(b, j);
for(j = 170510; j < 170520; j++) _solve(b, j);
for(j = 171350; j < 171360; j++) _solve(b, j);
for(j = 172190; j < 172200; j++) _solve(b, j);
for(j = 173030; j < 173040; j++) _solve(b, j);
for(j = 173870; j < 173880; j++) _solve(b, j);
for(j = 174710; j < 174720; j++) _solve(b, j);
for(j = 175550; j < 175560; j++) _solve(b, j);
for(j = 176390; j < 176400; j++) _solve(b, j);
for(j = 177230; j < 177240; j++) _solve(b, j);
for(j = 178070; j < 178080; j++) _solve(b, j);
for(j = 178910; j < 178920; j++) _solve(b, j);
for(j = 179750; j < 179760; j++) _solve(b, j);
for(j = 180590; j < 180600; j++) _solve(b, j);
for(j = 181430; j < 181440; j++) _solve(b, j);
for(j = 182270; j < 182280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 183110; j < 183120; j++) _solve(b, j);
for(j = 183950; j < 183960; j++) _solve(b, j);
for(j = 184790; j < 184800; j++) _solve(b, j);
for(j = 185630; j < 185640; j++) _solve(b, j);
for(j = 186470; j < 186480; j++) _solve(b, j);
for(j = 187310; j < 187320; j++) _solve(b, j);
for(j = 188150; j < 188160; j++) _solve(b, j);
for(j = 188990; j < 189000; j++) _solve(b, j);
for(j = 189830; j < 189840; j++) _solve(b, j);
for(j = 190670; j < 190680; j++) _solve(b, j);
for(j = 191510; j < 191520; j++) _solve(b, j);
for(j = 192350; j < 192360; j++) _solve(b, j);
for(j = 193190; j < 193200; j++) _solve(b, j);
for(j = 194030; j < 194040; j++) _solve(b, j);
for(j = 194870; j < 194880; j++) _solve(b, j);
for(j = 195710; j < 195720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 196550; j < 196560; j++) _solve(b, j);
for(j = 197390; j < 197400; j++) _solve(b, j);
for(j = 198230; j < 198240; j++) _solve(b, j);
for(j = 199070; j < 199080; j++) _solve(b, j);
for(j = 199910; j < 199920; j++) _solve(b, j);
for(j = 200750; j < 200760; j++) _solve(b, j);
for(j = 201590; j < 201600; j++) _solve(b, j);
for(j = 202430; j < 202440; j++) _solve(b, j);
for(j = 203270; j < 203280; j++) _solve(b, j);
for(j = 204110; j < 204120; j++) _solve(b, j);
for(j = 204950; j < 204960; j++) _solve(b, j);
for(j = 205790; j < 205800; j++) _solve(b, j);
for(j = 206630; j < 206640; j++) _solve(b, j);
for(j = 207470; j < 207480; j++) _solve(b, j);
for(j = 208310; j < 208320; j++) _solve(b, j);
for(j = 209150; j < 209160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 209990; j < 210000; j++) _solve(b, j);
for(j = 210830; j < 210840; j++) _solve(b, j);
for(j = 211670; j < 211680; j++) _solve(b, j);
for(j = 212510; j < 212520; j++) _solve(b, j);
for(j = 213350; j < 213360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 143640; j < 143650; j++) _solve(b, j);
for(j = 144480; j < 144490; j++) _solve(b, j);
for(j = 145320; j < 145330; j++) _solve(b, j);
for(j = 146160; j < 146170; j++) _solve(b, j);
for(j = 147000; j < 147010; j++) _solve(b, j);
for(j = 147840; j < 147850; j++) _solve(b, j);
for(j = 148680; j < 148690; j++) _solve(b, j);
for(j = 149520; j < 149530; j++) _solve(b, j);
for(j = 150360; j < 150370; j++) _solve(b, j);
for(j = 151200; j < 151210; j++) _solve(b, j);
for(j = 152040; j < 152050; j++) _solve(b, j);
for(j = 152880; j < 152890; j++) _solve(b, j);
for(j = 153720; j < 153730; j++) _solve(b, j);
for(j = 154560; j < 154570; j++) _solve(b, j);
for(j = 155400; j < 155410; j++) _solve(b, j);
for(j = 156240; j < 156250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 157080; j < 157090; j++) _solve(b, j);
for(j = 157920; j < 157930; j++) _solve(b, j);
for(j = 158760; j < 158770; j++) _solve(b, j);
for(j = 159600; j < 159610; j++) _solve(b, j);
for(j = 160440; j < 160450; j++) _solve(b, j);
for(j = 161280; j < 161290; j++) _solve(b, j);
for(j = 162120; j < 162130; j++) _solve(b, j);
for(j = 162960; j < 162970; j++) _solve(b, j);
for(j = 163800; j < 163810; j++) _solve(b, j);
for(j = 164640; j < 164650; j++) _solve(b, j);
for(j = 165480; j < 165490; j++) _solve(b, j);
for(j = 166320; j < 166330; j++) _solve(b, j);
for(j = 167160; j < 167170; j++) _solve(b, j);
for(j = 168000; j < 168010; j++) _solve(b, j);
for(j = 168840; j < 168850; j++) _solve(b, j);
for(j = 169680; j < 169690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 170520; j < 170530; j++) _solve(b, j);
for(j = 171360; j < 171370; j++) _solve(b, j);
for(j = 172200; j < 172210; j++) _solve(b, j);
for(j = 173040; j < 173050; j++) _solve(b, j);
for(j = 173880; j < 173890; j++) _solve(b, j);
for(j = 174720; j < 174730; j++) _solve(b, j);
for(j = 175560; j < 175570; j++) _solve(b, j);
for(j = 176400; j < 176410; j++) _solve(b, j);
for(j = 177240; j < 177250; j++) _solve(b, j);
for(j = 178080; j < 178090; j++) _solve(b, j);
for(j = 178920; j < 178930; j++) _solve(b, j);
for(j = 179760; j < 179770; j++) _solve(b, j);
for(j = 180600; j < 180610; j++) _solve(b, j);
for(j = 181440; j < 181450; j++) _solve(b, j);
for(j = 182280; j < 182290; j++) _solve(b, j);
for(j = 183120; j < 183130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 183960; j < 183970; j++) _solve(b, j);
for(j = 184800; j < 184810; j++) _solve(b, j);
for(j = 185640; j < 185650; j++) _solve(b, j);
for(j = 186480; j < 186490; j++) _solve(b, j);
for(j = 187320; j < 187330; j++) _solve(b, j);
for(j = 188160; j < 188170; j++) _solve(b, j);
for(j = 189000; j < 189010; j++) _solve(b, j);
for(j = 189840; j < 189850; j++) _solve(b, j);
for(j = 190680; j < 190690; j++) _solve(b, j);
for(j = 191520; j < 191530; j++) _solve(b, j);
for(j = 192360; j < 192370; j++) _solve(b, j);
for(j = 193200; j < 193210; j++) _solve(b, j);
for(j = 194040; j < 194050; j++) _solve(b, j);
for(j = 194880; j < 194890; j++) _solve(b, j);
for(j = 195720; j < 195730; j++) _solve(b, j);
for(j = 196560; j < 196570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 197400; j < 197410; j++) _solve(b, j);
for(j = 198240; j < 198250; j++) _solve(b, j);
for(j = 199080; j < 199090; j++) _solve(b, j);
for(j = 199920; j < 199930; j++) _solve(b, j);
for(j = 200760; j < 200770; j++) _solve(b, j);
for(j = 201600; j < 201610; j++) _solve(b, j);
for(j = 202440; j < 202450; j++) _solve(b, j);
for(j = 203280; j < 203290; j++) _solve(b, j);
for(j = 204120; j < 204130; j++) _solve(b, j);
for(j = 204960; j < 204970; j++) _solve(b, j);
for(j = 205800; j < 205810; j++) _solve(b, j);
for(j = 206640; j < 206650; j++) _solve(b, j);
for(j = 207480; j < 207490; j++) _solve(b, j);
for(j = 208320; j < 208330; j++) _solve(b, j);
for(j = 209160; j < 209170; j++) _solve(b, j);
for(j = 210000; j < 210010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 210840; j < 210850; j++) _solve(b, j);
for(j = 211680; j < 211690; j++) _solve(b, j);
for(j = 212520; j < 212530; j++) _solve(b, j);
for(j = 213360; j < 213370; j++) _solve(b, j);
for(j = 214200; j < 214210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 144490; j < 144500; j++) _solve(b, j);
for(j = 145330; j < 145340; j++) _solve(b, j);
for(j = 146170; j < 146180; j++) _solve(b, j);
for(j = 147010; j < 147020; j++) _solve(b, j);
for(j = 147850; j < 147860; j++) _solve(b, j);
for(j = 148690; j < 148700; j++) _solve(b, j);
for(j = 149530; j < 149540; j++) _solve(b, j);
for(j = 150370; j < 150380; j++) _solve(b, j);
for(j = 151210; j < 151220; j++) _solve(b, j);
for(j = 152050; j < 152060; j++) _solve(b, j);
for(j = 152890; j < 152900; j++) _solve(b, j);
for(j = 153730; j < 153740; j++) _solve(b, j);
for(j = 154570; j < 154580; j++) _solve(b, j);
for(j = 155410; j < 155420; j++) _solve(b, j);
for(j = 156250; j < 156260; j++) _solve(b, j);
for(j = 157090; j < 157100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 157930; j < 157940; j++) _solve(b, j);
for(j = 158770; j < 158780; j++) _solve(b, j);
for(j = 159610; j < 159620; j++) _solve(b, j);
for(j = 160450; j < 160460; j++) _solve(b, j);
for(j = 161290; j < 161300; j++) _solve(b, j);
for(j = 162130; j < 162140; j++) _solve(b, j);
for(j = 162970; j < 162980; j++) _solve(b, j);
for(j = 163810; j < 163820; j++) _solve(b, j);
for(j = 164650; j < 164660; j++) _solve(b, j);
for(j = 165490; j < 165500; j++) _solve(b, j);
for(j = 166330; j < 166340; j++) _solve(b, j);
for(j = 167170; j < 167180; j++) _solve(b, j);
for(j = 168010; j < 168020; j++) _solve(b, j);
for(j = 168850; j < 168860; j++) _solve(b, j);
for(j = 169690; j < 169700; j++) _solve(b, j);
for(j = 170530; j < 170540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 171370; j < 171380; j++) _solve(b, j);
for(j = 172210; j < 172220; j++) _solve(b, j);
for(j = 173050; j < 173060; j++) _solve(b, j);
for(j = 173890; j < 173900; j++) _solve(b, j);
for(j = 174730; j < 174740; j++) _solve(b, j);
for(j = 175570; j < 175580; j++) _solve(b, j);
for(j = 176410; j < 176420; j++) _solve(b, j);
for(j = 177250; j < 177260; j++) _solve(b, j);
for(j = 178090; j < 178100; j++) _solve(b, j);
for(j = 178930; j < 178940; j++) _solve(b, j);
for(j = 179770; j < 179780; j++) _solve(b, j);
for(j = 180610; j < 180620; j++) _solve(b, j);
for(j = 181450; j < 181460; j++) _solve(b, j);
for(j = 182290; j < 182300; j++) _solve(b, j);
for(j = 183130; j < 183140; j++) _solve(b, j);
for(j = 183970; j < 183980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 184810; j < 184820; j++) _solve(b, j);
for(j = 185650; j < 185660; j++) _solve(b, j);
for(j = 186490; j < 186500; j++) _solve(b, j);
for(j = 187330; j < 187340; j++) _solve(b, j);
for(j = 188170; j < 188180; j++) _solve(b, j);
for(j = 189010; j < 189020; j++) _solve(b, j);
for(j = 189850; j < 189860; j++) _solve(b, j);
for(j = 190690; j < 190700; j++) _solve(b, j);
for(j = 191530; j < 191540; j++) _solve(b, j);
for(j = 192370; j < 192380; j++) _solve(b, j);
for(j = 193210; j < 193220; j++) _solve(b, j);
for(j = 194050; j < 194060; j++) _solve(b, j);
for(j = 194890; j < 194900; j++) _solve(b, j);
for(j = 195730; j < 195740; j++) _solve(b, j);
for(j = 196570; j < 196580; j++) _solve(b, j);
for(j = 197410; j < 197420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 198250; j < 198260; j++) _solve(b, j);
for(j = 199090; j < 199100; j++) _solve(b, j);
for(j = 199930; j < 199940; j++) _solve(b, j);
for(j = 200770; j < 200780; j++) _solve(b, j);
for(j = 201610; j < 201620; j++) _solve(b, j);
for(j = 202450; j < 202460; j++) _solve(b, j);
for(j = 203290; j < 203300; j++) _solve(b, j);
for(j = 204130; j < 204140; j++) _solve(b, j);
for(j = 204970; j < 204980; j++) _solve(b, j);
for(j = 205810; j < 205820; j++) _solve(b, j);
for(j = 206650; j < 206660; j++) _solve(b, j);
for(j = 207490; j < 207500; j++) _solve(b, j);
for(j = 208330; j < 208340; j++) _solve(b, j);
for(j = 209170; j < 209180; j++) _solve(b, j);
for(j = 210010; j < 210020; j++) _solve(b, j);
for(j = 210850; j < 210860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 211690; j < 211700; j++) _solve(b, j);
for(j = 212530; j < 212540; j++) _solve(b, j);
for(j = 213370; j < 213380; j++) _solve(b, j);
for(j = 214210; j < 214220; j++) _solve(b, j);
for(j = 215050; j < 215060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 145340; j < 145350; j++) _solve(b, j);
for(j = 146180; j < 146190; j++) _solve(b, j);
for(j = 147020; j < 147030; j++) _solve(b, j);
for(j = 147860; j < 147870; j++) _solve(b, j);
for(j = 148700; j < 148710; j++) _solve(b, j);
for(j = 149540; j < 149550; j++) _solve(b, j);
for(j = 150380; j < 150390; j++) _solve(b, j);
for(j = 151220; j < 151230; j++) _solve(b, j);
for(j = 152060; j < 152070; j++) _solve(b, j);
for(j = 152900; j < 152910; j++) _solve(b, j);
for(j = 153740; j < 153750; j++) _solve(b, j);
for(j = 154580; j < 154590; j++) _solve(b, j);
for(j = 155420; j < 155430; j++) _solve(b, j);
for(j = 156260; j < 156270; j++) _solve(b, j);
for(j = 157100; j < 157110; j++) _solve(b, j);
for(j = 157940; j < 157950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 158780; j < 158790; j++) _solve(b, j);
for(j = 159620; j < 159630; j++) _solve(b, j);
for(j = 160460; j < 160470; j++) _solve(b, j);
for(j = 161300; j < 161310; j++) _solve(b, j);
for(j = 162140; j < 162150; j++) _solve(b, j);
for(j = 162980; j < 162990; j++) _solve(b, j);
for(j = 163820; j < 163830; j++) _solve(b, j);
for(j = 164660; j < 164670; j++) _solve(b, j);
for(j = 165500; j < 165510; j++) _solve(b, j);
for(j = 166340; j < 166350; j++) _solve(b, j);
for(j = 167180; j < 167190; j++) _solve(b, j);
for(j = 168020; j < 168030; j++) _solve(b, j);
for(j = 168860; j < 168870; j++) _solve(b, j);
for(j = 169700; j < 169710; j++) _solve(b, j);
for(j = 170540; j < 170550; j++) _solve(b, j);
for(j = 171380; j < 171390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 172220; j < 172230; j++) _solve(b, j);
for(j = 173060; j < 173070; j++) _solve(b, j);
for(j = 173900; j < 173910; j++) _solve(b, j);
for(j = 174740; j < 174750; j++) _solve(b, j);
for(j = 175580; j < 175590; j++) _solve(b, j);
for(j = 176420; j < 176430; j++) _solve(b, j);
for(j = 177260; j < 177270; j++) _solve(b, j);
for(j = 178100; j < 178110; j++) _solve(b, j);
for(j = 178940; j < 178950; j++) _solve(b, j);
for(j = 179780; j < 179790; j++) _solve(b, j);
for(j = 180620; j < 180630; j++) _solve(b, j);
for(j = 181460; j < 181470; j++) _solve(b, j);
for(j = 182300; j < 182310; j++) _solve(b, j);
for(j = 183140; j < 183150; j++) _solve(b, j);
for(j = 183980; j < 183990; j++) _solve(b, j);
for(j = 184820; j < 184830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 185660; j < 185670; j++) _solve(b, j);
for(j = 186500; j < 186510; j++) _solve(b, j);
for(j = 187340; j < 187350; j++) _solve(b, j);
for(j = 188180; j < 188190; j++) _solve(b, j);
for(j = 189020; j < 189030; j++) _solve(b, j);
for(j = 189860; j < 189870; j++) _solve(b, j);
for(j = 190700; j < 190710; j++) _solve(b, j);
for(j = 191540; j < 191550; j++) _solve(b, j);
for(j = 192380; j < 192390; j++) _solve(b, j);
for(j = 193220; j < 193230; j++) _solve(b, j);
for(j = 194060; j < 194070; j++) _solve(b, j);
for(j = 194900; j < 194910; j++) _solve(b, j);
for(j = 195740; j < 195750; j++) _solve(b, j);
for(j = 196580; j < 196590; j++) _solve(b, j);
for(j = 197420; j < 197430; j++) _solve(b, j);
for(j = 198260; j < 198270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 199100; j < 199110; j++) _solve(b, j);
for(j = 199940; j < 199950; j++) _solve(b, j);
for(j = 200780; j < 200790; j++) _solve(b, j);
for(j = 201620; j < 201630; j++) _solve(b, j);
for(j = 202460; j < 202470; j++) _solve(b, j);
for(j = 203300; j < 203310; j++) _solve(b, j);
for(j = 204140; j < 204150; j++) _solve(b, j);
for(j = 204980; j < 204990; j++) _solve(b, j);
for(j = 205820; j < 205830; j++) _solve(b, j);
for(j = 206660; j < 206670; j++) _solve(b, j);
for(j = 207500; j < 207510; j++) _solve(b, j);
for(j = 208340; j < 208350; j++) _solve(b, j);
for(j = 209180; j < 209190; j++) _solve(b, j);
for(j = 210020; j < 210030; j++) _solve(b, j);
for(j = 210860; j < 210870; j++) _solve(b, j);
for(j = 211700; j < 211710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 212540; j < 212550; j++) _solve(b, j);
for(j = 213380; j < 213390; j++) _solve(b, j);
for(j = 214220; j < 214230; j++) _solve(b, j);
for(j = 215060; j < 215070; j++) _solve(b, j);
for(j = 215900; j < 215910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 146190; j < 146200; j++) _solve(b, j);
for(j = 147030; j < 147040; j++) _solve(b, j);
for(j = 147870; j < 147880; j++) _solve(b, j);
for(j = 148710; j < 148720; j++) _solve(b, j);
for(j = 149550; j < 149560; j++) _solve(b, j);
for(j = 150390; j < 150400; j++) _solve(b, j);
for(j = 151230; j < 151240; j++) _solve(b, j);
for(j = 152070; j < 152080; j++) _solve(b, j);
for(j = 152910; j < 152920; j++) _solve(b, j);
for(j = 153750; j < 153760; j++) _solve(b, j);
for(j = 154590; j < 154600; j++) _solve(b, j);
for(j = 155430; j < 155440; j++) _solve(b, j);
for(j = 156270; j < 156280; j++) _solve(b, j);
for(j = 157110; j < 157120; j++) _solve(b, j);
for(j = 157950; j < 157960; j++) _solve(b, j);
for(j = 158790; j < 158800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 159630; j < 159640; j++) _solve(b, j);
for(j = 160470; j < 160480; j++) _solve(b, j);
for(j = 161310; j < 161320; j++) _solve(b, j);
for(j = 162150; j < 162160; j++) _solve(b, j);
for(j = 162990; j < 163000; j++) _solve(b, j);
for(j = 163830; j < 163840; j++) _solve(b, j);
for(j = 164670; j < 164680; j++) _solve(b, j);
for(j = 165510; j < 165520; j++) _solve(b, j);
for(j = 166350; j < 166360; j++) _solve(b, j);
for(j = 167190; j < 167200; j++) _solve(b, j);
for(j = 168030; j < 168040; j++) _solve(b, j);
for(j = 168870; j < 168880; j++) _solve(b, j);
for(j = 169710; j < 169720; j++) _solve(b, j);
for(j = 170550; j < 170560; j++) _solve(b, j);
for(j = 171390; j < 171400; j++) _solve(b, j);
for(j = 172230; j < 172240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 173070; j < 173080; j++) _solve(b, j);
for(j = 173910; j < 173920; j++) _solve(b, j);
for(j = 174750; j < 174760; j++) _solve(b, j);
for(j = 175590; j < 175600; j++) _solve(b, j);
for(j = 176430; j < 176440; j++) _solve(b, j);
for(j = 177270; j < 177280; j++) _solve(b, j);
for(j = 178110; j < 178120; j++) _solve(b, j);
for(j = 178950; j < 178960; j++) _solve(b, j);
for(j = 179790; j < 179800; j++) _solve(b, j);
for(j = 180630; j < 180640; j++) _solve(b, j);
for(j = 181470; j < 181480; j++) _solve(b, j);
for(j = 182310; j < 182320; j++) _solve(b, j);
for(j = 183150; j < 183160; j++) _solve(b, j);
for(j = 183990; j < 184000; j++) _solve(b, j);
for(j = 184830; j < 184840; j++) _solve(b, j);
for(j = 185670; j < 185680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 186510; j < 186520; j++) _solve(b, j);
for(j = 187350; j < 187360; j++) _solve(b, j);
for(j = 188190; j < 188200; j++) _solve(b, j);
for(j = 189030; j < 189040; j++) _solve(b, j);
for(j = 189870; j < 189880; j++) _solve(b, j);
for(j = 190710; j < 190720; j++) _solve(b, j);
for(j = 191550; j < 191560; j++) _solve(b, j);
for(j = 192390; j < 192400; j++) _solve(b, j);
for(j = 193230; j < 193240; j++) _solve(b, j);
for(j = 194070; j < 194080; j++) _solve(b, j);
for(j = 194910; j < 194920; j++) _solve(b, j);
for(j = 195750; j < 195760; j++) _solve(b, j);
for(j = 196590; j < 196600; j++) _solve(b, j);
for(j = 197430; j < 197440; j++) _solve(b, j);
for(j = 198270; j < 198280; j++) _solve(b, j);
for(j = 199110; j < 199120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 199950; j < 199960; j++) _solve(b, j);
for(j = 200790; j < 200800; j++) _solve(b, j);
for(j = 201630; j < 201640; j++) _solve(b, j);
for(j = 202470; j < 202480; j++) _solve(b, j);
for(j = 203310; j < 203320; j++) _solve(b, j);
for(j = 204150; j < 204160; j++) _solve(b, j);
for(j = 204990; j < 205000; j++) _solve(b, j);
for(j = 205830; j < 205840; j++) _solve(b, j);
for(j = 206670; j < 206680; j++) _solve(b, j);
for(j = 207510; j < 207520; j++) _solve(b, j);
for(j = 208350; j < 208360; j++) _solve(b, j);
for(j = 209190; j < 209200; j++) _solve(b, j);
for(j = 210030; j < 210040; j++) _solve(b, j);
for(j = 210870; j < 210880; j++) _solve(b, j);
for(j = 211710; j < 211720; j++) _solve(b, j);
for(j = 212550; j < 212560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 213390; j < 213400; j++) _solve(b, j);
for(j = 214230; j < 214240; j++) _solve(b, j);
for(j = 215070; j < 215080; j++) _solve(b, j);
for(j = 215910; j < 215920; j++) _solve(b, j);
for(j = 216750; j < 216760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 147040; j < 147050; j++) _solve(b, j);
for(j = 147880; j < 147890; j++) _solve(b, j);
for(j = 148720; j < 148730; j++) _solve(b, j);
for(j = 149560; j < 149570; j++) _solve(b, j);
for(j = 150400; j < 150410; j++) _solve(b, j);
for(j = 151240; j < 151250; j++) _solve(b, j);
for(j = 152080; j < 152090; j++) _solve(b, j);
for(j = 152920; j < 152930; j++) _solve(b, j);
for(j = 153760; j < 153770; j++) _solve(b, j);
for(j = 154600; j < 154610; j++) _solve(b, j);
for(j = 155440; j < 155450; j++) _solve(b, j);
for(j = 156280; j < 156290; j++) _solve(b, j);
for(j = 157120; j < 157130; j++) _solve(b, j);
for(j = 157960; j < 157970; j++) _solve(b, j);
for(j = 158800; j < 158810; j++) _solve(b, j);
for(j = 159640; j < 159650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 160480; j < 160490; j++) _solve(b, j);
for(j = 161320; j < 161330; j++) _solve(b, j);
for(j = 162160; j < 162170; j++) _solve(b, j);
for(j = 163000; j < 163010; j++) _solve(b, j);
for(j = 163840; j < 163850; j++) _solve(b, j);
for(j = 164680; j < 164690; j++) _solve(b, j);
for(j = 165520; j < 165530; j++) _solve(b, j);
for(j = 166360; j < 166370; j++) _solve(b, j);
for(j = 167200; j < 167210; j++) _solve(b, j);
for(j = 168040; j < 168050; j++) _solve(b, j);
for(j = 168880; j < 168890; j++) _solve(b, j);
for(j = 169720; j < 169730; j++) _solve(b, j);
for(j = 170560; j < 170570; j++) _solve(b, j);
for(j = 171400; j < 171410; j++) _solve(b, j);
for(j = 172240; j < 172250; j++) _solve(b, j);
for(j = 173080; j < 173090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 173920; j < 173930; j++) _solve(b, j);
for(j = 174760; j < 174770; j++) _solve(b, j);
for(j = 175600; j < 175610; j++) _solve(b, j);
for(j = 176440; j < 176450; j++) _solve(b, j);
for(j = 177280; j < 177290; j++) _solve(b, j);
for(j = 178120; j < 178130; j++) _solve(b, j);
for(j = 178960; j < 178970; j++) _solve(b, j);
for(j = 179800; j < 179810; j++) _solve(b, j);
for(j = 180640; j < 180650; j++) _solve(b, j);
for(j = 181480; j < 181490; j++) _solve(b, j);
for(j = 182320; j < 182330; j++) _solve(b, j);
for(j = 183160; j < 183170; j++) _solve(b, j);
for(j = 184000; j < 184010; j++) _solve(b, j);
for(j = 184840; j < 184850; j++) _solve(b, j);
for(j = 185680; j < 185690; j++) _solve(b, j);
for(j = 186520; j < 186530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 187360; j < 187370; j++) _solve(b, j);
for(j = 188200; j < 188210; j++) _solve(b, j);
for(j = 189040; j < 189050; j++) _solve(b, j);
for(j = 189880; j < 189890; j++) _solve(b, j);
for(j = 190720; j < 190730; j++) _solve(b, j);
for(j = 191560; j < 191570; j++) _solve(b, j);
for(j = 192400; j < 192410; j++) _solve(b, j);
for(j = 193240; j < 193250; j++) _solve(b, j);
for(j = 194080; j < 194090; j++) _solve(b, j);
for(j = 194920; j < 194930; j++) _solve(b, j);
for(j = 195760; j < 195770; j++) _solve(b, j);
for(j = 196600; j < 196610; j++) _solve(b, j);
for(j = 197440; j < 197450; j++) _solve(b, j);
for(j = 198280; j < 198290; j++) _solve(b, j);
for(j = 199120; j < 199130; j++) _solve(b, j);
for(j = 199960; j < 199970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 200800; j < 200810; j++) _solve(b, j);
for(j = 201640; j < 201650; j++) _solve(b, j);
for(j = 202480; j < 202490; j++) _solve(b, j);
for(j = 203320; j < 203330; j++) _solve(b, j);
for(j = 204160; j < 204170; j++) _solve(b, j);
for(j = 205000; j < 205010; j++) _solve(b, j);
for(j = 205840; j < 205850; j++) _solve(b, j);
for(j = 206680; j < 206690; j++) _solve(b, j);
for(j = 207520; j < 207530; j++) _solve(b, j);
for(j = 208360; j < 208370; j++) _solve(b, j);
for(j = 209200; j < 209210; j++) _solve(b, j);
for(j = 210040; j < 210050; j++) _solve(b, j);
for(j = 210880; j < 210890; j++) _solve(b, j);
for(j = 211720; j < 211730; j++) _solve(b, j);
for(j = 212560; j < 212570; j++) _solve(b, j);
for(j = 213400; j < 213410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 214240; j < 214250; j++) _solve(b, j);
for(j = 215080; j < 215090; j++) _solve(b, j);
for(j = 215920; j < 215930; j++) _solve(b, j);
for(j = 216760; j < 216770; j++) _solve(b, j);
for(j = 217600; j < 217610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 147890; j < 147900; j++) _solve(b, j);
for(j = 148730; j < 148740; j++) _solve(b, j);
for(j = 149570; j < 149580; j++) _solve(b, j);
for(j = 150410; j < 150420; j++) _solve(b, j);
for(j = 151250; j < 151260; j++) _solve(b, j);
for(j = 152090; j < 152100; j++) _solve(b, j);
for(j = 152930; j < 152940; j++) _solve(b, j);
for(j = 153770; j < 153780; j++) _solve(b, j);
for(j = 154610; j < 154620; j++) _solve(b, j);
for(j = 155450; j < 155460; j++) _solve(b, j);
for(j = 156290; j < 156300; j++) _solve(b, j);
for(j = 157130; j < 157140; j++) _solve(b, j);
for(j = 157970; j < 157980; j++) _solve(b, j);
for(j = 158810; j < 158820; j++) _solve(b, j);
for(j = 159650; j < 159660; j++) _solve(b, j);
for(j = 160490; j < 160500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 161330; j < 161340; j++) _solve(b, j);
for(j = 162170; j < 162180; j++) _solve(b, j);
for(j = 163010; j < 163020; j++) _solve(b, j);
for(j = 163850; j < 163860; j++) _solve(b, j);
for(j = 164690; j < 164700; j++) _solve(b, j);
for(j = 165530; j < 165540; j++) _solve(b, j);
for(j = 166370; j < 166380; j++) _solve(b, j);
for(j = 167210; j < 167220; j++) _solve(b, j);
for(j = 168050; j < 168060; j++) _solve(b, j);
for(j = 168890; j < 168900; j++) _solve(b, j);
for(j = 169730; j < 169740; j++) _solve(b, j);
for(j = 170570; j < 170580; j++) _solve(b, j);
for(j = 171410; j < 171420; j++) _solve(b, j);
for(j = 172250; j < 172260; j++) _solve(b, j);
for(j = 173090; j < 173100; j++) _solve(b, j);
for(j = 173930; j < 173940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 174770; j < 174780; j++) _solve(b, j);
for(j = 175610; j < 175620; j++) _solve(b, j);
for(j = 176450; j < 176460; j++) _solve(b, j);
for(j = 177290; j < 177300; j++) _solve(b, j);
for(j = 178130; j < 178140; j++) _solve(b, j);
for(j = 178970; j < 178980; j++) _solve(b, j);
for(j = 179810; j < 179820; j++) _solve(b, j);
for(j = 180650; j < 180660; j++) _solve(b, j);
for(j = 181490; j < 181500; j++) _solve(b, j);
for(j = 182330; j < 182340; j++) _solve(b, j);
for(j = 183170; j < 183180; j++) _solve(b, j);
for(j = 184010; j < 184020; j++) _solve(b, j);
for(j = 184850; j < 184860; j++) _solve(b, j);
for(j = 185690; j < 185700; j++) _solve(b, j);
for(j = 186530; j < 186540; j++) _solve(b, j);
for(j = 187370; j < 187380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 188210; j < 188220; j++) _solve(b, j);
for(j = 189050; j < 189060; j++) _solve(b, j);
for(j = 189890; j < 189900; j++) _solve(b, j);
for(j = 190730; j < 190740; j++) _solve(b, j);
for(j = 191570; j < 191580; j++) _solve(b, j);
for(j = 192410; j < 192420; j++) _solve(b, j);
for(j = 193250; j < 193260; j++) _solve(b, j);
for(j = 194090; j < 194100; j++) _solve(b, j);
for(j = 194930; j < 194940; j++) _solve(b, j);
for(j = 195770; j < 195780; j++) _solve(b, j);
for(j = 196610; j < 196620; j++) _solve(b, j);
for(j = 197450; j < 197460; j++) _solve(b, j);
for(j = 198290; j < 198300; j++) _solve(b, j);
for(j = 199130; j < 199140; j++) _solve(b, j);
for(j = 199970; j < 199980; j++) _solve(b, j);
for(j = 200810; j < 200820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 201650; j < 201660; j++) _solve(b, j);
for(j = 202490; j < 202500; j++) _solve(b, j);
for(j = 203330; j < 203340; j++) _solve(b, j);
for(j = 204170; j < 204180; j++) _solve(b, j);
for(j = 205010; j < 205020; j++) _solve(b, j);
for(j = 205850; j < 205860; j++) _solve(b, j);
for(j = 206690; j < 206700; j++) _solve(b, j);
for(j = 207530; j < 207540; j++) _solve(b, j);
for(j = 208370; j < 208380; j++) _solve(b, j);
for(j = 209210; j < 209220; j++) _solve(b, j);
for(j = 210050; j < 210060; j++) _solve(b, j);
for(j = 210890; j < 210900; j++) _solve(b, j);
for(j = 211730; j < 211740; j++) _solve(b, j);
for(j = 212570; j < 212580; j++) _solve(b, j);
for(j = 213410; j < 213420; j++) _solve(b, j);
for(j = 214250; j < 214260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 215090; j < 215100; j++) _solve(b, j);
for(j = 215930; j < 215940; j++) _solve(b, j);
for(j = 216770; j < 216780; j++) _solve(b, j);
for(j = 217610; j < 217620; j++) _solve(b, j);
for(j = 218450; j < 218460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 148740; j < 148750; j++) _solve(b, j);
for(j = 149580; j < 149590; j++) _solve(b, j);
for(j = 150420; j < 150430; j++) _solve(b, j);
for(j = 151260; j < 151270; j++) _solve(b, j);
for(j = 152100; j < 152110; j++) _solve(b, j);
for(j = 152940; j < 152950; j++) _solve(b, j);
for(j = 153780; j < 153790; j++) _solve(b, j);
for(j = 154620; j < 154630; j++) _solve(b, j);
for(j = 155460; j < 155470; j++) _solve(b, j);
for(j = 156300; j < 156310; j++) _solve(b, j);
for(j = 157140; j < 157150; j++) _solve(b, j);
for(j = 157980; j < 157990; j++) _solve(b, j);
for(j = 158820; j < 158830; j++) _solve(b, j);
for(j = 159660; j < 159670; j++) _solve(b, j);
for(j = 160500; j < 160510; j++) _solve(b, j);
for(j = 161340; j < 161350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 162180; j < 162190; j++) _solve(b, j);
for(j = 163020; j < 163030; j++) _solve(b, j);
for(j = 163860; j < 163870; j++) _solve(b, j);
for(j = 164700; j < 164710; j++) _solve(b, j);
for(j = 165540; j < 165550; j++) _solve(b, j);
for(j = 166380; j < 166390; j++) _solve(b, j);
for(j = 167220; j < 167230; j++) _solve(b, j);
for(j = 168060; j < 168070; j++) _solve(b, j);
for(j = 168900; j < 168910; j++) _solve(b, j);
for(j = 169740; j < 169750; j++) _solve(b, j);
for(j = 170580; j < 170590; j++) _solve(b, j);
for(j = 171420; j < 171430; j++) _solve(b, j);
for(j = 172260; j < 172270; j++) _solve(b, j);
for(j = 173100; j < 173110; j++) _solve(b, j);
for(j = 173940; j < 173950; j++) _solve(b, j);
for(j = 174780; j < 174790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 175620; j < 175630; j++) _solve(b, j);
for(j = 176460; j < 176470; j++) _solve(b, j);
for(j = 177300; j < 177310; j++) _solve(b, j);
for(j = 178140; j < 178150; j++) _solve(b, j);
for(j = 178980; j < 178990; j++) _solve(b, j);
for(j = 179820; j < 179830; j++) _solve(b, j);
for(j = 180660; j < 180670; j++) _solve(b, j);
for(j = 181500; j < 181510; j++) _solve(b, j);
for(j = 182340; j < 182350; j++) _solve(b, j);
for(j = 183180; j < 183190; j++) _solve(b, j);
for(j = 184020; j < 184030; j++) _solve(b, j);
for(j = 184860; j < 184870; j++) _solve(b, j);
for(j = 185700; j < 185710; j++) _solve(b, j);
for(j = 186540; j < 186550; j++) _solve(b, j);
for(j = 187380; j < 187390; j++) _solve(b, j);
for(j = 188220; j < 188230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 189060; j < 189070; j++) _solve(b, j);
for(j = 189900; j < 189910; j++) _solve(b, j);
for(j = 190740; j < 190750; j++) _solve(b, j);
for(j = 191580; j < 191590; j++) _solve(b, j);
for(j = 192420; j < 192430; j++) _solve(b, j);
for(j = 193260; j < 193270; j++) _solve(b, j);
for(j = 194100; j < 194110; j++) _solve(b, j);
for(j = 194940; j < 194950; j++) _solve(b, j);
for(j = 195780; j < 195790; j++) _solve(b, j);
for(j = 196620; j < 196630; j++) _solve(b, j);
for(j = 197460; j < 197470; j++) _solve(b, j);
for(j = 198300; j < 198310; j++) _solve(b, j);
for(j = 199140; j < 199150; j++) _solve(b, j);
for(j = 199980; j < 199990; j++) _solve(b, j);
for(j = 200820; j < 200830; j++) _solve(b, j);
for(j = 201660; j < 201670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 202500; j < 202510; j++) _solve(b, j);
for(j = 203340; j < 203350; j++) _solve(b, j);
for(j = 204180; j < 204190; j++) _solve(b, j);
for(j = 205020; j < 205030; j++) _solve(b, j);
for(j = 205860; j < 205870; j++) _solve(b, j);
for(j = 206700; j < 206710; j++) _solve(b, j);
for(j = 207540; j < 207550; j++) _solve(b, j);
for(j = 208380; j < 208390; j++) _solve(b, j);
for(j = 209220; j < 209230; j++) _solve(b, j);
for(j = 210060; j < 210070; j++) _solve(b, j);
for(j = 210900; j < 210910; j++) _solve(b, j);
for(j = 211740; j < 211750; j++) _solve(b, j);
for(j = 212580; j < 212590; j++) _solve(b, j);
for(j = 213420; j < 213430; j++) _solve(b, j);
for(j = 214260; j < 214270; j++) _solve(b, j);
for(j = 215100; j < 215110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 215940; j < 215950; j++) _solve(b, j);
for(j = 216780; j < 216790; j++) _solve(b, j);
for(j = 217620; j < 217630; j++) _solve(b, j);
for(j = 218460; j < 218470; j++) _solve(b, j);
for(j = 219300; j < 219310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 149590; j < 149600; j++) _solve(b, j);
for(j = 150430; j < 150440; j++) _solve(b, j);
for(j = 151270; j < 151280; j++) _solve(b, j);
for(j = 152110; j < 152120; j++) _solve(b, j);
for(j = 152950; j < 152960; j++) _solve(b, j);
for(j = 153790; j < 153800; j++) _solve(b, j);
for(j = 154630; j < 154640; j++) _solve(b, j);
for(j = 155470; j < 155480; j++) _solve(b, j);
for(j = 156310; j < 156320; j++) _solve(b, j);
for(j = 157150; j < 157160; j++) _solve(b, j);
for(j = 157990; j < 158000; j++) _solve(b, j);
for(j = 158830; j < 158840; j++) _solve(b, j);
for(j = 159670; j < 159680; j++) _solve(b, j);
for(j = 160510; j < 160520; j++) _solve(b, j);
for(j = 161350; j < 161360; j++) _solve(b, j);
for(j = 162190; j < 162200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 163030; j < 163040; j++) _solve(b, j);
for(j = 163870; j < 163880; j++) _solve(b, j);
for(j = 164710; j < 164720; j++) _solve(b, j);
for(j = 165550; j < 165560; j++) _solve(b, j);
for(j = 166390; j < 166400; j++) _solve(b, j);
for(j = 167230; j < 167240; j++) _solve(b, j);
for(j = 168070; j < 168080; j++) _solve(b, j);
for(j = 168910; j < 168920; j++) _solve(b, j);
for(j = 169750; j < 169760; j++) _solve(b, j);
for(j = 170590; j < 170600; j++) _solve(b, j);
for(j = 171430; j < 171440; j++) _solve(b, j);
for(j = 172270; j < 172280; j++) _solve(b, j);
for(j = 173110; j < 173120; j++) _solve(b, j);
for(j = 173950; j < 173960; j++) _solve(b, j);
for(j = 174790; j < 174800; j++) _solve(b, j);
for(j = 175630; j < 175640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 176470; j < 176480; j++) _solve(b, j);
for(j = 177310; j < 177320; j++) _solve(b, j);
for(j = 178150; j < 178160; j++) _solve(b, j);
for(j = 178990; j < 179000; j++) _solve(b, j);
for(j = 179830; j < 179840; j++) _solve(b, j);
for(j = 180670; j < 180680; j++) _solve(b, j);
for(j = 181510; j < 181520; j++) _solve(b, j);
for(j = 182350; j < 182360; j++) _solve(b, j);
for(j = 183190; j < 183200; j++) _solve(b, j);
for(j = 184030; j < 184040; j++) _solve(b, j);
for(j = 184870; j < 184880; j++) _solve(b, j);
for(j = 185710; j < 185720; j++) _solve(b, j);
for(j = 186550; j < 186560; j++) _solve(b, j);
for(j = 187390; j < 187400; j++) _solve(b, j);
for(j = 188230; j < 188240; j++) _solve(b, j);
for(j = 189070; j < 189080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 189910; j < 189920; j++) _solve(b, j);
for(j = 190750; j < 190760; j++) _solve(b, j);
for(j = 191590; j < 191600; j++) _solve(b, j);
for(j = 192430; j < 192440; j++) _solve(b, j);
for(j = 193270; j < 193280; j++) _solve(b, j);
for(j = 194110; j < 194120; j++) _solve(b, j);
for(j = 194950; j < 194960; j++) _solve(b, j);
for(j = 195790; j < 195800; j++) _solve(b, j);
for(j = 196630; j < 196640; j++) _solve(b, j);
for(j = 197470; j < 197480; j++) _solve(b, j);
for(j = 198310; j < 198320; j++) _solve(b, j);
for(j = 199150; j < 199160; j++) _solve(b, j);
for(j = 199990; j < 200000; j++) _solve(b, j);
for(j = 200830; j < 200840; j++) _solve(b, j);
for(j = 201670; j < 201680; j++) _solve(b, j);
for(j = 202510; j < 202520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 203350; j < 203360; j++) _solve(b, j);
for(j = 204190; j < 204200; j++) _solve(b, j);
for(j = 205030; j < 205040; j++) _solve(b, j);
for(j = 205870; j < 205880; j++) _solve(b, j);
for(j = 206710; j < 206720; j++) _solve(b, j);
for(j = 207550; j < 207560; j++) _solve(b, j);
for(j = 208390; j < 208400; j++) _solve(b, j);
for(j = 209230; j < 209240; j++) _solve(b, j);
for(j = 210070; j < 210080; j++) _solve(b, j);
for(j = 210910; j < 210920; j++) _solve(b, j);
for(j = 211750; j < 211760; j++) _solve(b, j);
for(j = 212590; j < 212600; j++) _solve(b, j);
for(j = 213430; j < 213440; j++) _solve(b, j);
for(j = 214270; j < 214280; j++) _solve(b, j);
for(j = 215110; j < 215120; j++) _solve(b, j);
for(j = 215950; j < 215960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 216790; j < 216800; j++) _solve(b, j);
for(j = 217630; j < 217640; j++) _solve(b, j);
for(j = 218470; j < 218480; j++) _solve(b, j);
for(j = 219310; j < 219320; j++) _solve(b, j);
for(j = 220150; j < 220160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 150440; j < 150450; j++) _solve(b, j);
for(j = 151280; j < 151290; j++) _solve(b, j);
for(j = 152120; j < 152130; j++) _solve(b, j);
for(j = 152960; j < 152970; j++) _solve(b, j);
for(j = 153800; j < 153810; j++) _solve(b, j);
for(j = 154640; j < 154650; j++) _solve(b, j);
for(j = 155480; j < 155490; j++) _solve(b, j);
for(j = 156320; j < 156330; j++) _solve(b, j);
for(j = 157160; j < 157170; j++) _solve(b, j);
for(j = 158000; j < 158010; j++) _solve(b, j);
for(j = 158840; j < 158850; j++) _solve(b, j);
for(j = 159680; j < 159690; j++) _solve(b, j);
for(j = 160520; j < 160530; j++) _solve(b, j);
for(j = 161360; j < 161370; j++) _solve(b, j);
for(j = 162200; j < 162210; j++) _solve(b, j);
for(j = 163040; j < 163050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 163880; j < 163890; j++) _solve(b, j);
for(j = 164720; j < 164730; j++) _solve(b, j);
for(j = 165560; j < 165570; j++) _solve(b, j);
for(j = 166400; j < 166410; j++) _solve(b, j);
for(j = 167240; j < 167250; j++) _solve(b, j);
for(j = 168080; j < 168090; j++) _solve(b, j);
for(j = 168920; j < 168930; j++) _solve(b, j);
for(j = 169760; j < 169770; j++) _solve(b, j);
for(j = 170600; j < 170610; j++) _solve(b, j);
for(j = 171440; j < 171450; j++) _solve(b, j);
for(j = 172280; j < 172290; j++) _solve(b, j);
for(j = 173120; j < 173130; j++) _solve(b, j);
for(j = 173960; j < 173970; j++) _solve(b, j);
for(j = 174800; j < 174810; j++) _solve(b, j);
for(j = 175640; j < 175650; j++) _solve(b, j);
for(j = 176480; j < 176490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 177320; j < 177330; j++) _solve(b, j);
for(j = 178160; j < 178170; j++) _solve(b, j);
for(j = 179000; j < 179010; j++) _solve(b, j);
for(j = 179840; j < 179850; j++) _solve(b, j);
for(j = 180680; j < 180690; j++) _solve(b, j);
for(j = 181520; j < 181530; j++) _solve(b, j);
for(j = 182360; j < 182370; j++) _solve(b, j);
for(j = 183200; j < 183210; j++) _solve(b, j);
for(j = 184040; j < 184050; j++) _solve(b, j);
for(j = 184880; j < 184890; j++) _solve(b, j);
for(j = 185720; j < 185730; j++) _solve(b, j);
for(j = 186560; j < 186570; j++) _solve(b, j);
for(j = 187400; j < 187410; j++) _solve(b, j);
for(j = 188240; j < 188250; j++) _solve(b, j);
for(j = 189080; j < 189090; j++) _solve(b, j);
for(j = 189920; j < 189930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 190760; j < 190770; j++) _solve(b, j);
for(j = 191600; j < 191610; j++) _solve(b, j);
for(j = 192440; j < 192450; j++) _solve(b, j);
for(j = 193280; j < 193290; j++) _solve(b, j);
for(j = 194120; j < 194130; j++) _solve(b, j);
for(j = 194960; j < 194970; j++) _solve(b, j);
for(j = 195800; j < 195810; j++) _solve(b, j);
for(j = 196640; j < 196650; j++) _solve(b, j);
for(j = 197480; j < 197490; j++) _solve(b, j);
for(j = 198320; j < 198330; j++) _solve(b, j);
for(j = 199160; j < 199170; j++) _solve(b, j);
for(j = 200000; j < 200010; j++) _solve(b, j);
for(j = 200840; j < 200850; j++) _solve(b, j);
for(j = 201680; j < 201690; j++) _solve(b, j);
for(j = 202520; j < 202530; j++) _solve(b, j);
for(j = 203360; j < 203370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 204200; j < 204210; j++) _solve(b, j);
for(j = 205040; j < 205050; j++) _solve(b, j);
for(j = 205880; j < 205890; j++) _solve(b, j);
for(j = 206720; j < 206730; j++) _solve(b, j);
for(j = 207560; j < 207570; j++) _solve(b, j);
for(j = 208400; j < 208410; j++) _solve(b, j);
for(j = 209240; j < 209250; j++) _solve(b, j);
for(j = 210080; j < 210090; j++) _solve(b, j);
for(j = 210920; j < 210930; j++) _solve(b, j);
for(j = 211760; j < 211770; j++) _solve(b, j);
for(j = 212600; j < 212610; j++) _solve(b, j);
for(j = 213440; j < 213450; j++) _solve(b, j);
for(j = 214280; j < 214290; j++) _solve(b, j);
for(j = 215120; j < 215130; j++) _solve(b, j);
for(j = 215960; j < 215970; j++) _solve(b, j);
for(j = 216800; j < 216810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 217640; j < 217650; j++) _solve(b, j);
for(j = 218480; j < 218490; j++) _solve(b, j);
for(j = 219320; j < 219330; j++) _solve(b, j);
for(j = 220160; j < 220170; j++) _solve(b, j);
for(j = 221000; j < 221010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 151290; j < 151300; j++) _solve(b, j);
for(j = 152130; j < 152140; j++) _solve(b, j);
for(j = 152970; j < 152980; j++) _solve(b, j);
for(j = 153810; j < 153820; j++) _solve(b, j);
for(j = 154650; j < 154660; j++) _solve(b, j);
for(j = 155490; j < 155500; j++) _solve(b, j);
for(j = 156330; j < 156340; j++) _solve(b, j);
for(j = 157170; j < 157180; j++) _solve(b, j);
for(j = 158010; j < 158020; j++) _solve(b, j);
for(j = 158850; j < 158860; j++) _solve(b, j);
for(j = 159690; j < 159700; j++) _solve(b, j);
for(j = 160530; j < 160540; j++) _solve(b, j);
for(j = 161370; j < 161380; j++) _solve(b, j);
for(j = 162210; j < 162220; j++) _solve(b, j);
for(j = 163050; j < 163060; j++) _solve(b, j);
for(j = 163890; j < 163900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 164730; j < 164740; j++) _solve(b, j);
for(j = 165570; j < 165580; j++) _solve(b, j);
for(j = 166410; j < 166420; j++) _solve(b, j);
for(j = 167250; j < 167260; j++) _solve(b, j);
for(j = 168090; j < 168100; j++) _solve(b, j);
for(j = 168930; j < 168940; j++) _solve(b, j);
for(j = 169770; j < 169780; j++) _solve(b, j);
for(j = 170610; j < 170620; j++) _solve(b, j);
for(j = 171450; j < 171460; j++) _solve(b, j);
for(j = 172290; j < 172300; j++) _solve(b, j);
for(j = 173130; j < 173140; j++) _solve(b, j);
for(j = 173970; j < 173980; j++) _solve(b, j);
for(j = 174810; j < 174820; j++) _solve(b, j);
for(j = 175650; j < 175660; j++) _solve(b, j);
for(j = 176490; j < 176500; j++) _solve(b, j);
for(j = 177330; j < 177340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 178170; j < 178180; j++) _solve(b, j);
for(j = 179010; j < 179020; j++) _solve(b, j);
for(j = 179850; j < 179860; j++) _solve(b, j);
for(j = 180690; j < 180700; j++) _solve(b, j);
for(j = 181530; j < 181540; j++) _solve(b, j);
for(j = 182370; j < 182380; j++) _solve(b, j);
for(j = 183210; j < 183220; j++) _solve(b, j);
for(j = 184050; j < 184060; j++) _solve(b, j);
for(j = 184890; j < 184900; j++) _solve(b, j);
for(j = 185730; j < 185740; j++) _solve(b, j);
for(j = 186570; j < 186580; j++) _solve(b, j);
for(j = 187410; j < 187420; j++) _solve(b, j);
for(j = 188250; j < 188260; j++) _solve(b, j);
for(j = 189090; j < 189100; j++) _solve(b, j);
for(j = 189930; j < 189940; j++) _solve(b, j);
for(j = 190770; j < 190780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 191610; j < 191620; j++) _solve(b, j);
for(j = 192450; j < 192460; j++) _solve(b, j);
for(j = 193290; j < 193300; j++) _solve(b, j);
for(j = 194130; j < 194140; j++) _solve(b, j);
for(j = 194970; j < 194980; j++) _solve(b, j);
for(j = 195810; j < 195820; j++) _solve(b, j);
for(j = 196650; j < 196660; j++) _solve(b, j);
for(j = 197490; j < 197500; j++) _solve(b, j);
for(j = 198330; j < 198340; j++) _solve(b, j);
for(j = 199170; j < 199180; j++) _solve(b, j);
for(j = 200010; j < 200020; j++) _solve(b, j);
for(j = 200850; j < 200860; j++) _solve(b, j);
for(j = 201690; j < 201700; j++) _solve(b, j);
for(j = 202530; j < 202540; j++) _solve(b, j);
for(j = 203370; j < 203380; j++) _solve(b, j);
for(j = 204210; j < 204220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 205050; j < 205060; j++) _solve(b, j);
for(j = 205890; j < 205900; j++) _solve(b, j);
for(j = 206730; j < 206740; j++) _solve(b, j);
for(j = 207570; j < 207580; j++) _solve(b, j);
for(j = 208410; j < 208420; j++) _solve(b, j);
for(j = 209250; j < 209260; j++) _solve(b, j);
for(j = 210090; j < 210100; j++) _solve(b, j);
for(j = 210930; j < 210940; j++) _solve(b, j);
for(j = 211770; j < 211780; j++) _solve(b, j);
for(j = 212610; j < 212620; j++) _solve(b, j);
for(j = 213450; j < 213460; j++) _solve(b, j);
for(j = 214290; j < 214300; j++) _solve(b, j);
for(j = 215130; j < 215140; j++) _solve(b, j);
for(j = 215970; j < 215980; j++) _solve(b, j);
for(j = 216810; j < 216820; j++) _solve(b, j);
for(j = 217650; j < 217660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 218490; j < 218500; j++) _solve(b, j);
for(j = 219330; j < 219340; j++) _solve(b, j);
for(j = 220170; j < 220180; j++) _solve(b, j);
for(j = 221010; j < 221020; j++) _solve(b, j);
for(j = 221850; j < 221860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 152140; j < 152150; j++) _solve(b, j);
for(j = 152980; j < 152990; j++) _solve(b, j);
for(j = 153820; j < 153830; j++) _solve(b, j);
for(j = 154660; j < 154670; j++) _solve(b, j);
for(j = 155500; j < 155510; j++) _solve(b, j);
for(j = 156340; j < 156350; j++) _solve(b, j);
for(j = 157180; j < 157190; j++) _solve(b, j);
for(j = 158020; j < 158030; j++) _solve(b, j);
for(j = 158860; j < 158870; j++) _solve(b, j);
for(j = 159700; j < 159710; j++) _solve(b, j);
for(j = 160540; j < 160550; j++) _solve(b, j);
for(j = 161380; j < 161390; j++) _solve(b, j);
for(j = 162220; j < 162230; j++) _solve(b, j);
for(j = 163060; j < 163070; j++) _solve(b, j);
for(j = 163900; j < 163910; j++) _solve(b, j);
for(j = 164740; j < 164750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 165580; j < 165590; j++) _solve(b, j);
for(j = 166420; j < 166430; j++) _solve(b, j);
for(j = 167260; j < 167270; j++) _solve(b, j);
for(j = 168100; j < 168110; j++) _solve(b, j);
for(j = 168940; j < 168950; j++) _solve(b, j);
for(j = 169780; j < 169790; j++) _solve(b, j);
for(j = 170620; j < 170630; j++) _solve(b, j);
for(j = 171460; j < 171470; j++) _solve(b, j);
for(j = 172300; j < 172310; j++) _solve(b, j);
for(j = 173140; j < 173150; j++) _solve(b, j);
for(j = 173980; j < 173990; j++) _solve(b, j);
for(j = 174820; j < 174830; j++) _solve(b, j);
for(j = 175660; j < 175670; j++) _solve(b, j);
for(j = 176500; j < 176510; j++) _solve(b, j);
for(j = 177340; j < 177350; j++) _solve(b, j);
for(j = 178180; j < 178190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 179020; j < 179030; j++) _solve(b, j);
for(j = 179860; j < 179870; j++) _solve(b, j);
for(j = 180700; j < 180710; j++) _solve(b, j);
for(j = 181540; j < 181550; j++) _solve(b, j);
for(j = 182380; j < 182390; j++) _solve(b, j);
for(j = 183220; j < 183230; j++) _solve(b, j);
for(j = 184060; j < 184070; j++) _solve(b, j);
for(j = 184900; j < 184910; j++) _solve(b, j);
for(j = 185740; j < 185750; j++) _solve(b, j);
for(j = 186580; j < 186590; j++) _solve(b, j);
for(j = 187420; j < 187430; j++) _solve(b, j);
for(j = 188260; j < 188270; j++) _solve(b, j);
for(j = 189100; j < 189110; j++) _solve(b, j);
for(j = 189940; j < 189950; j++) _solve(b, j);
for(j = 190780; j < 190790; j++) _solve(b, j);
for(j = 191620; j < 191630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 192460; j < 192470; j++) _solve(b, j);
for(j = 193300; j < 193310; j++) _solve(b, j);
for(j = 194140; j < 194150; j++) _solve(b, j);
for(j = 194980; j < 194990; j++) _solve(b, j);
for(j = 195820; j < 195830; j++) _solve(b, j);
for(j = 196660; j < 196670; j++) _solve(b, j);
for(j = 197500; j < 197510; j++) _solve(b, j);
for(j = 198340; j < 198350; j++) _solve(b, j);
for(j = 199180; j < 199190; j++) _solve(b, j);
for(j = 200020; j < 200030; j++) _solve(b, j);
for(j = 200860; j < 200870; j++) _solve(b, j);
for(j = 201700; j < 201710; j++) _solve(b, j);
for(j = 202540; j < 202550; j++) _solve(b, j);
for(j = 203380; j < 203390; j++) _solve(b, j);
for(j = 204220; j < 204230; j++) _solve(b, j);
for(j = 205060; j < 205070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 205900; j < 205910; j++) _solve(b, j);
for(j = 206740; j < 206750; j++) _solve(b, j);
for(j = 207580; j < 207590; j++) _solve(b, j);
for(j = 208420; j < 208430; j++) _solve(b, j);
for(j = 209260; j < 209270; j++) _solve(b, j);
for(j = 210100; j < 210110; j++) _solve(b, j);
for(j = 210940; j < 210950; j++) _solve(b, j);
for(j = 211780; j < 211790; j++) _solve(b, j);
for(j = 212620; j < 212630; j++) _solve(b, j);
for(j = 213460; j < 213470; j++) _solve(b, j);
for(j = 214300; j < 214310; j++) _solve(b, j);
for(j = 215140; j < 215150; j++) _solve(b, j);
for(j = 215980; j < 215990; j++) _solve(b, j);
for(j = 216820; j < 216830; j++) _solve(b, j);
for(j = 217660; j < 217670; j++) _solve(b, j);
for(j = 218500; j < 218510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 219340; j < 219350; j++) _solve(b, j);
for(j = 220180; j < 220190; j++) _solve(b, j);
for(j = 221020; j < 221030; j++) _solve(b, j);
for(j = 221860; j < 221870; j++) _solve(b, j);
for(j = 222700; j < 222710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 152990; j < 153000; j++) _solve(b, j);
for(j = 153830; j < 153840; j++) _solve(b, j);
for(j = 154670; j < 154680; j++) _solve(b, j);
for(j = 155510; j < 155520; j++) _solve(b, j);
for(j = 156350; j < 156360; j++) _solve(b, j);
for(j = 157190; j < 157200; j++) _solve(b, j);
for(j = 158030; j < 158040; j++) _solve(b, j);
for(j = 158870; j < 158880; j++) _solve(b, j);
for(j = 159710; j < 159720; j++) _solve(b, j);
for(j = 160550; j < 160560; j++) _solve(b, j);
for(j = 161390; j < 161400; j++) _solve(b, j);
for(j = 162230; j < 162240; j++) _solve(b, j);
for(j = 163070; j < 163080; j++) _solve(b, j);
for(j = 163910; j < 163920; j++) _solve(b, j);
for(j = 164750; j < 164760; j++) _solve(b, j);
for(j = 165590; j < 165600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 166430; j < 166440; j++) _solve(b, j);
for(j = 167270; j < 167280; j++) _solve(b, j);
for(j = 168110; j < 168120; j++) _solve(b, j);
for(j = 168950; j < 168960; j++) _solve(b, j);
for(j = 169790; j < 169800; j++) _solve(b, j);
for(j = 170630; j < 170640; j++) _solve(b, j);
for(j = 171470; j < 171480; j++) _solve(b, j);
for(j = 172310; j < 172320; j++) _solve(b, j);
for(j = 173150; j < 173160; j++) _solve(b, j);
for(j = 173990; j < 174000; j++) _solve(b, j);
for(j = 174830; j < 174840; j++) _solve(b, j);
for(j = 175670; j < 175680; j++) _solve(b, j);
for(j = 176510; j < 176520; j++) _solve(b, j);
for(j = 177350; j < 177360; j++) _solve(b, j);
for(j = 178190; j < 178200; j++) _solve(b, j);
for(j = 179030; j < 179040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 179870; j < 179880; j++) _solve(b, j);
for(j = 180710; j < 180720; j++) _solve(b, j);
for(j = 181550; j < 181560; j++) _solve(b, j);
for(j = 182390; j < 182400; j++) _solve(b, j);
for(j = 183230; j < 183240; j++) _solve(b, j);
for(j = 184070; j < 184080; j++) _solve(b, j);
for(j = 184910; j < 184920; j++) _solve(b, j);
for(j = 185750; j < 185760; j++) _solve(b, j);
for(j = 186590; j < 186600; j++) _solve(b, j);
for(j = 187430; j < 187440; j++) _solve(b, j);
for(j = 188270; j < 188280; j++) _solve(b, j);
for(j = 189110; j < 189120; j++) _solve(b, j);
for(j = 189950; j < 189960; j++) _solve(b, j);
for(j = 190790; j < 190800; j++) _solve(b, j);
for(j = 191630; j < 191640; j++) _solve(b, j);
for(j = 192470; j < 192480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 193310; j < 193320; j++) _solve(b, j);
for(j = 194150; j < 194160; j++) _solve(b, j);
for(j = 194990; j < 195000; j++) _solve(b, j);
for(j = 195830; j < 195840; j++) _solve(b, j);
for(j = 196670; j < 196680; j++) _solve(b, j);
for(j = 197510; j < 197520; j++) _solve(b, j);
for(j = 198350; j < 198360; j++) _solve(b, j);
for(j = 199190; j < 199200; j++) _solve(b, j);
for(j = 200030; j < 200040; j++) _solve(b, j);
for(j = 200870; j < 200880; j++) _solve(b, j);
for(j = 201710; j < 201720; j++) _solve(b, j);
for(j = 202550; j < 202560; j++) _solve(b, j);
for(j = 203390; j < 203400; j++) _solve(b, j);
for(j = 204230; j < 204240; j++) _solve(b, j);
for(j = 205070; j < 205080; j++) _solve(b, j);
for(j = 205910; j < 205920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 206750; j < 206760; j++) _solve(b, j);
for(j = 207590; j < 207600; j++) _solve(b, j);
for(j = 208430; j < 208440; j++) _solve(b, j);
for(j = 209270; j < 209280; j++) _solve(b, j);
for(j = 210110; j < 210120; j++) _solve(b, j);
for(j = 210950; j < 210960; j++) _solve(b, j);
for(j = 211790; j < 211800; j++) _solve(b, j);
for(j = 212630; j < 212640; j++) _solve(b, j);
for(j = 213470; j < 213480; j++) _solve(b, j);
for(j = 214310; j < 214320; j++) _solve(b, j);
for(j = 215150; j < 215160; j++) _solve(b, j);
for(j = 215990; j < 216000; j++) _solve(b, j);
for(j = 216830; j < 216840; j++) _solve(b, j);
for(j = 217670; j < 217680; j++) _solve(b, j);
for(j = 218510; j < 218520; j++) _solve(b, j);
for(j = 219350; j < 219360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 220190; j < 220200; j++) _solve(b, j);
for(j = 221030; j < 221040; j++) _solve(b, j);
for(j = 221870; j < 221880; j++) _solve(b, j);
for(j = 222710; j < 222720; j++) _solve(b, j);
for(j = 223550; j < 223560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 153840; j < 153850; j++) _solve(b, j);
for(j = 154680; j < 154690; j++) _solve(b, j);
for(j = 155520; j < 155530; j++) _solve(b, j);
for(j = 156360; j < 156370; j++) _solve(b, j);
for(j = 157200; j < 157210; j++) _solve(b, j);
for(j = 158040; j < 158050; j++) _solve(b, j);
for(j = 158880; j < 158890; j++) _solve(b, j);
for(j = 159720; j < 159730; j++) _solve(b, j);
for(j = 160560; j < 160570; j++) _solve(b, j);
for(j = 161400; j < 161410; j++) _solve(b, j);
for(j = 162240; j < 162250; j++) _solve(b, j);
for(j = 163080; j < 163090; j++) _solve(b, j);
for(j = 163920; j < 163930; j++) _solve(b, j);
for(j = 164760; j < 164770; j++) _solve(b, j);
for(j = 165600; j < 165610; j++) _solve(b, j);
for(j = 166440; j < 166450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 167280; j < 167290; j++) _solve(b, j);
for(j = 168120; j < 168130; j++) _solve(b, j);
for(j = 168960; j < 168970; j++) _solve(b, j);
for(j = 169800; j < 169810; j++) _solve(b, j);
for(j = 170640; j < 170650; j++) _solve(b, j);
for(j = 171480; j < 171490; j++) _solve(b, j);
for(j = 172320; j < 172330; j++) _solve(b, j);
for(j = 173160; j < 173170; j++) _solve(b, j);
for(j = 174000; j < 174010; j++) _solve(b, j);
for(j = 174840; j < 174850; j++) _solve(b, j);
for(j = 175680; j < 175690; j++) _solve(b, j);
for(j = 176520; j < 176530; j++) _solve(b, j);
for(j = 177360; j < 177370; j++) _solve(b, j);
for(j = 178200; j < 178210; j++) _solve(b, j);
for(j = 179040; j < 179050; j++) _solve(b, j);
for(j = 179880; j < 179890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 180720; j < 180730; j++) _solve(b, j);
for(j = 181560; j < 181570; j++) _solve(b, j);
for(j = 182400; j < 182410; j++) _solve(b, j);
for(j = 183240; j < 183250; j++) _solve(b, j);
for(j = 184080; j < 184090; j++) _solve(b, j);
for(j = 184920; j < 184930; j++) _solve(b, j);
for(j = 185760; j < 185770; j++) _solve(b, j);
for(j = 186600; j < 186610; j++) _solve(b, j);
for(j = 187440; j < 187450; j++) _solve(b, j);
for(j = 188280; j < 188290; j++) _solve(b, j);
for(j = 189120; j < 189130; j++) _solve(b, j);
for(j = 189960; j < 189970; j++) _solve(b, j);
for(j = 190800; j < 190810; j++) _solve(b, j);
for(j = 191640; j < 191650; j++) _solve(b, j);
for(j = 192480; j < 192490; j++) _solve(b, j);
for(j = 193320; j < 193330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 194160; j < 194170; j++) _solve(b, j);
for(j = 195000; j < 195010; j++) _solve(b, j);
for(j = 195840; j < 195850; j++) _solve(b, j);
for(j = 196680; j < 196690; j++) _solve(b, j);
for(j = 197520; j < 197530; j++) _solve(b, j);
for(j = 198360; j < 198370; j++) _solve(b, j);
for(j = 199200; j < 199210; j++) _solve(b, j);
for(j = 200040; j < 200050; j++) _solve(b, j);
for(j = 200880; j < 200890; j++) _solve(b, j);
for(j = 201720; j < 201730; j++) _solve(b, j);
for(j = 202560; j < 202570; j++) _solve(b, j);
for(j = 203400; j < 203410; j++) _solve(b, j);
for(j = 204240; j < 204250; j++) _solve(b, j);
for(j = 205080; j < 205090; j++) _solve(b, j);
for(j = 205920; j < 205930; j++) _solve(b, j);
for(j = 206760; j < 206770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 207600; j < 207610; j++) _solve(b, j);
for(j = 208440; j < 208450; j++) _solve(b, j);
for(j = 209280; j < 209290; j++) _solve(b, j);
for(j = 210120; j < 210130; j++) _solve(b, j);
for(j = 210960; j < 210970; j++) _solve(b, j);
for(j = 211800; j < 211810; j++) _solve(b, j);
for(j = 212640; j < 212650; j++) _solve(b, j);
for(j = 213480; j < 213490; j++) _solve(b, j);
for(j = 214320; j < 214330; j++) _solve(b, j);
for(j = 215160; j < 215170; j++) _solve(b, j);
for(j = 216000; j < 216010; j++) _solve(b, j);
for(j = 216840; j < 216850; j++) _solve(b, j);
for(j = 217680; j < 217690; j++) _solve(b, j);
for(j = 218520; j < 218530; j++) _solve(b, j);
for(j = 219360; j < 219370; j++) _solve(b, j);
for(j = 220200; j < 220210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 221040; j < 221050; j++) _solve(b, j);
for(j = 221880; j < 221890; j++) _solve(b, j);
for(j = 222720; j < 222730; j++) _solve(b, j);
for(j = 223560; j < 223570; j++) _solve(b, j);
for(j = 224400; j < 224410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 154690; j < 154700; j++) _solve(b, j);
for(j = 155530; j < 155540; j++) _solve(b, j);
for(j = 156370; j < 156380; j++) _solve(b, j);
for(j = 157210; j < 157220; j++) _solve(b, j);
for(j = 158050; j < 158060; j++) _solve(b, j);
for(j = 158890; j < 158900; j++) _solve(b, j);
for(j = 159730; j < 159740; j++) _solve(b, j);
for(j = 160570; j < 160580; j++) _solve(b, j);
for(j = 161410; j < 161420; j++) _solve(b, j);
for(j = 162250; j < 162260; j++) _solve(b, j);
for(j = 163090; j < 163100; j++) _solve(b, j);
for(j = 163930; j < 163940; j++) _solve(b, j);
for(j = 164770; j < 164780; j++) _solve(b, j);
for(j = 165610; j < 165620; j++) _solve(b, j);
for(j = 166450; j < 166460; j++) _solve(b, j);
for(j = 167290; j < 167300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 168130; j < 168140; j++) _solve(b, j);
for(j = 168970; j < 168980; j++) _solve(b, j);
for(j = 169810; j < 169820; j++) _solve(b, j);
for(j = 170650; j < 170660; j++) _solve(b, j);
for(j = 171490; j < 171500; j++) _solve(b, j);
for(j = 172330; j < 172340; j++) _solve(b, j);
for(j = 173170; j < 173180; j++) _solve(b, j);
for(j = 174010; j < 174020; j++) _solve(b, j);
for(j = 174850; j < 174860; j++) _solve(b, j);
for(j = 175690; j < 175700; j++) _solve(b, j);
for(j = 176530; j < 176540; j++) _solve(b, j);
for(j = 177370; j < 177380; j++) _solve(b, j);
for(j = 178210; j < 178220; j++) _solve(b, j);
for(j = 179050; j < 179060; j++) _solve(b, j);
for(j = 179890; j < 179900; j++) _solve(b, j);
for(j = 180730; j < 180740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 181570; j < 181580; j++) _solve(b, j);
for(j = 182410; j < 182420; j++) _solve(b, j);
for(j = 183250; j < 183260; j++) _solve(b, j);
for(j = 184090; j < 184100; j++) _solve(b, j);
for(j = 184930; j < 184940; j++) _solve(b, j);
for(j = 185770; j < 185780; j++) _solve(b, j);
for(j = 186610; j < 186620; j++) _solve(b, j);
for(j = 187450; j < 187460; j++) _solve(b, j);
for(j = 188290; j < 188300; j++) _solve(b, j);
for(j = 189130; j < 189140; j++) _solve(b, j);
for(j = 189970; j < 189980; j++) _solve(b, j);
for(j = 190810; j < 190820; j++) _solve(b, j);
for(j = 191650; j < 191660; j++) _solve(b, j);
for(j = 192490; j < 192500; j++) _solve(b, j);
for(j = 193330; j < 193340; j++) _solve(b, j);
for(j = 194170; j < 194180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 195010; j < 195020; j++) _solve(b, j);
for(j = 195850; j < 195860; j++) _solve(b, j);
for(j = 196690; j < 196700; j++) _solve(b, j);
for(j = 197530; j < 197540; j++) _solve(b, j);
for(j = 198370; j < 198380; j++) _solve(b, j);
for(j = 199210; j < 199220; j++) _solve(b, j);
for(j = 200050; j < 200060; j++) _solve(b, j);
for(j = 200890; j < 200900; j++) _solve(b, j);
for(j = 201730; j < 201740; j++) _solve(b, j);
for(j = 202570; j < 202580; j++) _solve(b, j);
for(j = 203410; j < 203420; j++) _solve(b, j);
for(j = 204250; j < 204260; j++) _solve(b, j);
for(j = 205090; j < 205100; j++) _solve(b, j);
for(j = 205930; j < 205940; j++) _solve(b, j);
for(j = 206770; j < 206780; j++) _solve(b, j);
for(j = 207610; j < 207620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 208450; j < 208460; j++) _solve(b, j);
for(j = 209290; j < 209300; j++) _solve(b, j);
for(j = 210130; j < 210140; j++) _solve(b, j);
for(j = 210970; j < 210980; j++) _solve(b, j);
for(j = 211810; j < 211820; j++) _solve(b, j);
for(j = 212650; j < 212660; j++) _solve(b, j);
for(j = 213490; j < 213500; j++) _solve(b, j);
for(j = 214330; j < 214340; j++) _solve(b, j);
for(j = 215170; j < 215180; j++) _solve(b, j);
for(j = 216010; j < 216020; j++) _solve(b, j);
for(j = 216850; j < 216860; j++) _solve(b, j);
for(j = 217690; j < 217700; j++) _solve(b, j);
for(j = 218530; j < 218540; j++) _solve(b, j);
for(j = 219370; j < 219380; j++) _solve(b, j);
for(j = 220210; j < 220220; j++) _solve(b, j);
for(j = 221050; j < 221060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 221890; j < 221900; j++) _solve(b, j);
for(j = 222730; j < 222740; j++) _solve(b, j);
for(j = 223570; j < 223580; j++) _solve(b, j);
for(j = 224410; j < 224420; j++) _solve(b, j);
for(j = 225250; j < 225260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 155540; j < 155550; j++) _solve(b, j);
for(j = 156380; j < 156390; j++) _solve(b, j);
for(j = 157220; j < 157230; j++) _solve(b, j);
for(j = 158060; j < 158070; j++) _solve(b, j);
for(j = 158900; j < 158910; j++) _solve(b, j);
for(j = 159740; j < 159750; j++) _solve(b, j);
for(j = 160580; j < 160590; j++) _solve(b, j);
for(j = 161420; j < 161430; j++) _solve(b, j);
for(j = 162260; j < 162270; j++) _solve(b, j);
for(j = 163100; j < 163110; j++) _solve(b, j);
for(j = 163940; j < 163950; j++) _solve(b, j);
for(j = 164780; j < 164790; j++) _solve(b, j);
for(j = 165620; j < 165630; j++) _solve(b, j);
for(j = 166460; j < 166470; j++) _solve(b, j);
for(j = 167300; j < 167310; j++) _solve(b, j);
for(j = 168140; j < 168150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 168980; j < 168990; j++) _solve(b, j);
for(j = 169820; j < 169830; j++) _solve(b, j);
for(j = 170660; j < 170670; j++) _solve(b, j);
for(j = 171500; j < 171510; j++) _solve(b, j);
for(j = 172340; j < 172350; j++) _solve(b, j);
for(j = 173180; j < 173190; j++) _solve(b, j);
for(j = 174020; j < 174030; j++) _solve(b, j);
for(j = 174860; j < 174870; j++) _solve(b, j);
for(j = 175700; j < 175710; j++) _solve(b, j);
for(j = 176540; j < 176550; j++) _solve(b, j);
for(j = 177380; j < 177390; j++) _solve(b, j);
for(j = 178220; j < 178230; j++) _solve(b, j);
for(j = 179060; j < 179070; j++) _solve(b, j);
for(j = 179900; j < 179910; j++) _solve(b, j);
for(j = 180740; j < 180750; j++) _solve(b, j);
for(j = 181580; j < 181590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 182420; j < 182430; j++) _solve(b, j);
for(j = 183260; j < 183270; j++) _solve(b, j);
for(j = 184100; j < 184110; j++) _solve(b, j);
for(j = 184940; j < 184950; j++) _solve(b, j);
for(j = 185780; j < 185790; j++) _solve(b, j);
for(j = 186620; j < 186630; j++) _solve(b, j);
for(j = 187460; j < 187470; j++) _solve(b, j);
for(j = 188300; j < 188310; j++) _solve(b, j);
for(j = 189140; j < 189150; j++) _solve(b, j);
for(j = 189980; j < 189990; j++) _solve(b, j);
for(j = 190820; j < 190830; j++) _solve(b, j);
for(j = 191660; j < 191670; j++) _solve(b, j);
for(j = 192500; j < 192510; j++) _solve(b, j);
for(j = 193340; j < 193350; j++) _solve(b, j);
for(j = 194180; j < 194190; j++) _solve(b, j);
for(j = 195020; j < 195030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 195860; j < 195870; j++) _solve(b, j);
for(j = 196700; j < 196710; j++) _solve(b, j);
for(j = 197540; j < 197550; j++) _solve(b, j);
for(j = 198380; j < 198390; j++) _solve(b, j);
for(j = 199220; j < 199230; j++) _solve(b, j);
for(j = 200060; j < 200070; j++) _solve(b, j);
for(j = 200900; j < 200910; j++) _solve(b, j);
for(j = 201740; j < 201750; j++) _solve(b, j);
for(j = 202580; j < 202590; j++) _solve(b, j);
for(j = 203420; j < 203430; j++) _solve(b, j);
for(j = 204260; j < 204270; j++) _solve(b, j);
for(j = 205100; j < 205110; j++) _solve(b, j);
for(j = 205940; j < 205950; j++) _solve(b, j);
for(j = 206780; j < 206790; j++) _solve(b, j);
for(j = 207620; j < 207630; j++) _solve(b, j);
for(j = 208460; j < 208470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 209300; j < 209310; j++) _solve(b, j);
for(j = 210140; j < 210150; j++) _solve(b, j);
for(j = 210980; j < 210990; j++) _solve(b, j);
for(j = 211820; j < 211830; j++) _solve(b, j);
for(j = 212660; j < 212670; j++) _solve(b, j);
for(j = 213500; j < 213510; j++) _solve(b, j);
for(j = 214340; j < 214350; j++) _solve(b, j);
for(j = 215180; j < 215190; j++) _solve(b, j);
for(j = 216020; j < 216030; j++) _solve(b, j);
for(j = 216860; j < 216870; j++) _solve(b, j);
for(j = 217700; j < 217710; j++) _solve(b, j);
for(j = 218540; j < 218550; j++) _solve(b, j);
for(j = 219380; j < 219390; j++) _solve(b, j);
for(j = 220220; j < 220230; j++) _solve(b, j);
for(j = 221060; j < 221070; j++) _solve(b, j);
for(j = 221900; j < 221910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 222740; j < 222750; j++) _solve(b, j);
for(j = 223580; j < 223590; j++) _solve(b, j);
for(j = 224420; j < 224430; j++) _solve(b, j);
for(j = 225260; j < 225270; j++) _solve(b, j);
for(j = 226100; j < 226110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 156390; j < 156400; j++) _solve(b, j);
for(j = 157230; j < 157240; j++) _solve(b, j);
for(j = 158070; j < 158080; j++) _solve(b, j);
for(j = 158910; j < 158920; j++) _solve(b, j);
for(j = 159750; j < 159760; j++) _solve(b, j);
for(j = 160590; j < 160600; j++) _solve(b, j);
for(j = 161430; j < 161440; j++) _solve(b, j);
for(j = 162270; j < 162280; j++) _solve(b, j);
for(j = 163110; j < 163120; j++) _solve(b, j);
for(j = 163950; j < 163960; j++) _solve(b, j);
for(j = 164790; j < 164800; j++) _solve(b, j);
for(j = 165630; j < 165640; j++) _solve(b, j);
for(j = 166470; j < 166480; j++) _solve(b, j);
for(j = 167310; j < 167320; j++) _solve(b, j);
for(j = 168150; j < 168160; j++) _solve(b, j);
for(j = 168990; j < 169000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 169830; j < 169840; j++) _solve(b, j);
for(j = 170670; j < 170680; j++) _solve(b, j);
for(j = 171510; j < 171520; j++) _solve(b, j);
for(j = 172350; j < 172360; j++) _solve(b, j);
for(j = 173190; j < 173200; j++) _solve(b, j);
for(j = 174030; j < 174040; j++) _solve(b, j);
for(j = 174870; j < 174880; j++) _solve(b, j);
for(j = 175710; j < 175720; j++) _solve(b, j);
for(j = 176550; j < 176560; j++) _solve(b, j);
for(j = 177390; j < 177400; j++) _solve(b, j);
for(j = 178230; j < 178240; j++) _solve(b, j);
for(j = 179070; j < 179080; j++) _solve(b, j);
for(j = 179910; j < 179920; j++) _solve(b, j);
for(j = 180750; j < 180760; j++) _solve(b, j);
for(j = 181590; j < 181600; j++) _solve(b, j);
for(j = 182430; j < 182440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 183270; j < 183280; j++) _solve(b, j);
for(j = 184110; j < 184120; j++) _solve(b, j);
for(j = 184950; j < 184960; j++) _solve(b, j);
for(j = 185790; j < 185800; j++) _solve(b, j);
for(j = 186630; j < 186640; j++) _solve(b, j);
for(j = 187470; j < 187480; j++) _solve(b, j);
for(j = 188310; j < 188320; j++) _solve(b, j);
for(j = 189150; j < 189160; j++) _solve(b, j);
for(j = 189990; j < 190000; j++) _solve(b, j);
for(j = 190830; j < 190840; j++) _solve(b, j);
for(j = 191670; j < 191680; j++) _solve(b, j);
for(j = 192510; j < 192520; j++) _solve(b, j);
for(j = 193350; j < 193360; j++) _solve(b, j);
for(j = 194190; j < 194200; j++) _solve(b, j);
for(j = 195030; j < 195040; j++) _solve(b, j);
for(j = 195870; j < 195880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 196710; j < 196720; j++) _solve(b, j);
for(j = 197550; j < 197560; j++) _solve(b, j);
for(j = 198390; j < 198400; j++) _solve(b, j);
for(j = 199230; j < 199240; j++) _solve(b, j);
for(j = 200070; j < 200080; j++) _solve(b, j);
for(j = 200910; j < 200920; j++) _solve(b, j);
for(j = 201750; j < 201760; j++) _solve(b, j);
for(j = 202590; j < 202600; j++) _solve(b, j);
for(j = 203430; j < 203440; j++) _solve(b, j);
for(j = 204270; j < 204280; j++) _solve(b, j);
for(j = 205110; j < 205120; j++) _solve(b, j);
for(j = 205950; j < 205960; j++) _solve(b, j);
for(j = 206790; j < 206800; j++) _solve(b, j);
for(j = 207630; j < 207640; j++) _solve(b, j);
for(j = 208470; j < 208480; j++) _solve(b, j);
for(j = 209310; j < 209320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 210150; j < 210160; j++) _solve(b, j);
for(j = 210990; j < 211000; j++) _solve(b, j);
for(j = 211830; j < 211840; j++) _solve(b, j);
for(j = 212670; j < 212680; j++) _solve(b, j);
for(j = 213510; j < 213520; j++) _solve(b, j);
for(j = 214350; j < 214360; j++) _solve(b, j);
for(j = 215190; j < 215200; j++) _solve(b, j);
for(j = 216030; j < 216040; j++) _solve(b, j);
for(j = 216870; j < 216880; j++) _solve(b, j);
for(j = 217710; j < 217720; j++) _solve(b, j);
for(j = 218550; j < 218560; j++) _solve(b, j);
for(j = 219390; j < 219400; j++) _solve(b, j);
for(j = 220230; j < 220240; j++) _solve(b, j);
for(j = 221070; j < 221080; j++) _solve(b, j);
for(j = 221910; j < 221920; j++) _solve(b, j);
for(j = 222750; j < 222760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 223590; j < 223600; j++) _solve(b, j);
for(j = 224430; j < 224440; j++) _solve(b, j);
for(j = 225270; j < 225280; j++) _solve(b, j);
for(j = 226110; j < 226120; j++) _solve(b, j);
for(j = 226950; j < 226960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 157240; j < 157250; j++) _solve(b, j);
for(j = 158080; j < 158090; j++) _solve(b, j);
for(j = 158920; j < 158930; j++) _solve(b, j);
for(j = 159760; j < 159770; j++) _solve(b, j);
for(j = 160600; j < 160610; j++) _solve(b, j);
for(j = 161440; j < 161450; j++) _solve(b, j);
for(j = 162280; j < 162290; j++) _solve(b, j);
for(j = 163120; j < 163130; j++) _solve(b, j);
for(j = 163960; j < 163970; j++) _solve(b, j);
for(j = 164800; j < 164810; j++) _solve(b, j);
for(j = 165640; j < 165650; j++) _solve(b, j);
for(j = 166480; j < 166490; j++) _solve(b, j);
for(j = 167320; j < 167330; j++) _solve(b, j);
for(j = 168160; j < 168170; j++) _solve(b, j);
for(j = 169000; j < 169010; j++) _solve(b, j);
for(j = 169840; j < 169850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 170680; j < 170690; j++) _solve(b, j);
for(j = 171520; j < 171530; j++) _solve(b, j);
for(j = 172360; j < 172370; j++) _solve(b, j);
for(j = 173200; j < 173210; j++) _solve(b, j);
for(j = 174040; j < 174050; j++) _solve(b, j);
for(j = 174880; j < 174890; j++) _solve(b, j);
for(j = 175720; j < 175730; j++) _solve(b, j);
for(j = 176560; j < 176570; j++) _solve(b, j);
for(j = 177400; j < 177410; j++) _solve(b, j);
for(j = 178240; j < 178250; j++) _solve(b, j);
for(j = 179080; j < 179090; j++) _solve(b, j);
for(j = 179920; j < 179930; j++) _solve(b, j);
for(j = 180760; j < 180770; j++) _solve(b, j);
for(j = 181600; j < 181610; j++) _solve(b, j);
for(j = 182440; j < 182450; j++) _solve(b, j);
for(j = 183280; j < 183290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 184120; j < 184130; j++) _solve(b, j);
for(j = 184960; j < 184970; j++) _solve(b, j);
for(j = 185800; j < 185810; j++) _solve(b, j);
for(j = 186640; j < 186650; j++) _solve(b, j);
for(j = 187480; j < 187490; j++) _solve(b, j);
for(j = 188320; j < 188330; j++) _solve(b, j);
for(j = 189160; j < 189170; j++) _solve(b, j);
for(j = 190000; j < 190010; j++) _solve(b, j);
for(j = 190840; j < 190850; j++) _solve(b, j);
for(j = 191680; j < 191690; j++) _solve(b, j);
for(j = 192520; j < 192530; j++) _solve(b, j);
for(j = 193360; j < 193370; j++) _solve(b, j);
for(j = 194200; j < 194210; j++) _solve(b, j);
for(j = 195040; j < 195050; j++) _solve(b, j);
for(j = 195880; j < 195890; j++) _solve(b, j);
for(j = 196720; j < 196730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 197560; j < 197570; j++) _solve(b, j);
for(j = 198400; j < 198410; j++) _solve(b, j);
for(j = 199240; j < 199250; j++) _solve(b, j);
for(j = 200080; j < 200090; j++) _solve(b, j);
for(j = 200920; j < 200930; j++) _solve(b, j);
for(j = 201760; j < 201770; j++) _solve(b, j);
for(j = 202600; j < 202610; j++) _solve(b, j);
for(j = 203440; j < 203450; j++) _solve(b, j);
for(j = 204280; j < 204290; j++) _solve(b, j);
for(j = 205120; j < 205130; j++) _solve(b, j);
for(j = 205960; j < 205970; j++) _solve(b, j);
for(j = 206800; j < 206810; j++) _solve(b, j);
for(j = 207640; j < 207650; j++) _solve(b, j);
for(j = 208480; j < 208490; j++) _solve(b, j);
for(j = 209320; j < 209330; j++) _solve(b, j);
for(j = 210160; j < 210170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 211000; j < 211010; j++) _solve(b, j);
for(j = 211840; j < 211850; j++) _solve(b, j);
for(j = 212680; j < 212690; j++) _solve(b, j);
for(j = 213520; j < 213530; j++) _solve(b, j);
for(j = 214360; j < 214370; j++) _solve(b, j);
for(j = 215200; j < 215210; j++) _solve(b, j);
for(j = 216040; j < 216050; j++) _solve(b, j);
for(j = 216880; j < 216890; j++) _solve(b, j);
for(j = 217720; j < 217730; j++) _solve(b, j);
for(j = 218560; j < 218570; j++) _solve(b, j);
for(j = 219400; j < 219410; j++) _solve(b, j);
for(j = 220240; j < 220250; j++) _solve(b, j);
for(j = 221080; j < 221090; j++) _solve(b, j);
for(j = 221920; j < 221930; j++) _solve(b, j);
for(j = 222760; j < 222770; j++) _solve(b, j);
for(j = 223600; j < 223610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 224440; j < 224450; j++) _solve(b, j);
for(j = 225280; j < 225290; j++) _solve(b, j);
for(j = 226120; j < 226130; j++) _solve(b, j);
for(j = 226960; j < 226970; j++) _solve(b, j);
for(j = 227800; j < 227810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 158090; j < 158100; j++) _solve(b, j);
for(j = 158930; j < 158940; j++) _solve(b, j);
for(j = 159770; j < 159780; j++) _solve(b, j);
for(j = 160610; j < 160620; j++) _solve(b, j);
for(j = 161450; j < 161460; j++) _solve(b, j);
for(j = 162290; j < 162300; j++) _solve(b, j);
for(j = 163130; j < 163140; j++) _solve(b, j);
for(j = 163970; j < 163980; j++) _solve(b, j);
for(j = 164810; j < 164820; j++) _solve(b, j);
for(j = 165650; j < 165660; j++) _solve(b, j);
for(j = 166490; j < 166500; j++) _solve(b, j);
for(j = 167330; j < 167340; j++) _solve(b, j);
for(j = 168170; j < 168180; j++) _solve(b, j);
for(j = 169010; j < 169020; j++) _solve(b, j);
for(j = 169850; j < 169860; j++) _solve(b, j);
for(j = 170690; j < 170700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 171530; j < 171540; j++) _solve(b, j);
for(j = 172370; j < 172380; j++) _solve(b, j);
for(j = 173210; j < 173220; j++) _solve(b, j);
for(j = 174050; j < 174060; j++) _solve(b, j);
for(j = 174890; j < 174900; j++) _solve(b, j);
for(j = 175730; j < 175740; j++) _solve(b, j);
for(j = 176570; j < 176580; j++) _solve(b, j);
for(j = 177410; j < 177420; j++) _solve(b, j);
for(j = 178250; j < 178260; j++) _solve(b, j);
for(j = 179090; j < 179100; j++) _solve(b, j);
for(j = 179930; j < 179940; j++) _solve(b, j);
for(j = 180770; j < 180780; j++) _solve(b, j);
for(j = 181610; j < 181620; j++) _solve(b, j);
for(j = 182450; j < 182460; j++) _solve(b, j);
for(j = 183290; j < 183300; j++) _solve(b, j);
for(j = 184130; j < 184140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 184970; j < 184980; j++) _solve(b, j);
for(j = 185810; j < 185820; j++) _solve(b, j);
for(j = 186650; j < 186660; j++) _solve(b, j);
for(j = 187490; j < 187500; j++) _solve(b, j);
for(j = 188330; j < 188340; j++) _solve(b, j);
for(j = 189170; j < 189180; j++) _solve(b, j);
for(j = 190010; j < 190020; j++) _solve(b, j);
for(j = 190850; j < 190860; j++) _solve(b, j);
for(j = 191690; j < 191700; j++) _solve(b, j);
for(j = 192530; j < 192540; j++) _solve(b, j);
for(j = 193370; j < 193380; j++) _solve(b, j);
for(j = 194210; j < 194220; j++) _solve(b, j);
for(j = 195050; j < 195060; j++) _solve(b, j);
for(j = 195890; j < 195900; j++) _solve(b, j);
for(j = 196730; j < 196740; j++) _solve(b, j);
for(j = 197570; j < 197580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 198410; j < 198420; j++) _solve(b, j);
for(j = 199250; j < 199260; j++) _solve(b, j);
for(j = 200090; j < 200100; j++) _solve(b, j);
for(j = 200930; j < 200940; j++) _solve(b, j);
for(j = 201770; j < 201780; j++) _solve(b, j);
for(j = 202610; j < 202620; j++) _solve(b, j);
for(j = 203450; j < 203460; j++) _solve(b, j);
for(j = 204290; j < 204300; j++) _solve(b, j);
for(j = 205130; j < 205140; j++) _solve(b, j);
for(j = 205970; j < 205980; j++) _solve(b, j);
for(j = 206810; j < 206820; j++) _solve(b, j);
for(j = 207650; j < 207660; j++) _solve(b, j);
for(j = 208490; j < 208500; j++) _solve(b, j);
for(j = 209330; j < 209340; j++) _solve(b, j);
for(j = 210170; j < 210180; j++) _solve(b, j);
for(j = 211010; j < 211020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 211850; j < 211860; j++) _solve(b, j);
for(j = 212690; j < 212700; j++) _solve(b, j);
for(j = 213530; j < 213540; j++) _solve(b, j);
for(j = 214370; j < 214380; j++) _solve(b, j);
for(j = 215210; j < 215220; j++) _solve(b, j);
for(j = 216050; j < 216060; j++) _solve(b, j);
for(j = 216890; j < 216900; j++) _solve(b, j);
for(j = 217730; j < 217740; j++) _solve(b, j);
for(j = 218570; j < 218580; j++) _solve(b, j);
for(j = 219410; j < 219420; j++) _solve(b, j);
for(j = 220250; j < 220260; j++) _solve(b, j);
for(j = 221090; j < 221100; j++) _solve(b, j);
for(j = 221930; j < 221940; j++) _solve(b, j);
for(j = 222770; j < 222780; j++) _solve(b, j);
for(j = 223610; j < 223620; j++) _solve(b, j);
for(j = 224450; j < 224460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 225290; j < 225300; j++) _solve(b, j);
for(j = 226130; j < 226140; j++) _solve(b, j);
for(j = 226970; j < 226980; j++) _solve(b, j);
for(j = 227810; j < 227820; j++) _solve(b, j);
for(j = 228650; j < 228660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 158940; j < 158950; j++) _solve(b, j);
for(j = 159780; j < 159790; j++) _solve(b, j);
for(j = 160620; j < 160630; j++) _solve(b, j);
for(j = 161460; j < 161470; j++) _solve(b, j);
for(j = 162300; j < 162310; j++) _solve(b, j);
for(j = 163140; j < 163150; j++) _solve(b, j);
for(j = 163980; j < 163990; j++) _solve(b, j);
for(j = 164820; j < 164830; j++) _solve(b, j);
for(j = 165660; j < 165670; j++) _solve(b, j);
for(j = 166500; j < 166510; j++) _solve(b, j);
for(j = 167340; j < 167350; j++) _solve(b, j);
for(j = 168180; j < 168190; j++) _solve(b, j);
for(j = 169020; j < 169030; j++) _solve(b, j);
for(j = 169860; j < 169870; j++) _solve(b, j);
for(j = 170700; j < 170710; j++) _solve(b, j);
for(j = 171540; j < 171550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 172380; j < 172390; j++) _solve(b, j);
for(j = 173220; j < 173230; j++) _solve(b, j);
for(j = 174060; j < 174070; j++) _solve(b, j);
for(j = 174900; j < 174910; j++) _solve(b, j);
for(j = 175740; j < 175750; j++) _solve(b, j);
for(j = 176580; j < 176590; j++) _solve(b, j);
for(j = 177420; j < 177430; j++) _solve(b, j);
for(j = 178260; j < 178270; j++) _solve(b, j);
for(j = 179100; j < 179110; j++) _solve(b, j);
for(j = 179940; j < 179950; j++) _solve(b, j);
for(j = 180780; j < 180790; j++) _solve(b, j);
for(j = 181620; j < 181630; j++) _solve(b, j);
for(j = 182460; j < 182470; j++) _solve(b, j);
for(j = 183300; j < 183310; j++) _solve(b, j);
for(j = 184140; j < 184150; j++) _solve(b, j);
for(j = 184980; j < 184990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 185820; j < 185830; j++) _solve(b, j);
for(j = 186660; j < 186670; j++) _solve(b, j);
for(j = 187500; j < 187510; j++) _solve(b, j);
for(j = 188340; j < 188350; j++) _solve(b, j);
for(j = 189180; j < 189190; j++) _solve(b, j);
for(j = 190020; j < 190030; j++) _solve(b, j);
for(j = 190860; j < 190870; j++) _solve(b, j);
for(j = 191700; j < 191710; j++) _solve(b, j);
for(j = 192540; j < 192550; j++) _solve(b, j);
for(j = 193380; j < 193390; j++) _solve(b, j);
for(j = 194220; j < 194230; j++) _solve(b, j);
for(j = 195060; j < 195070; j++) _solve(b, j);
for(j = 195900; j < 195910; j++) _solve(b, j);
for(j = 196740; j < 196750; j++) _solve(b, j);
for(j = 197580; j < 197590; j++) _solve(b, j);
for(j = 198420; j < 198430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 199260; j < 199270; j++) _solve(b, j);
for(j = 200100; j < 200110; j++) _solve(b, j);
for(j = 200940; j < 200950; j++) _solve(b, j);
for(j = 201780; j < 201790; j++) _solve(b, j);
for(j = 202620; j < 202630; j++) _solve(b, j);
for(j = 203460; j < 203470; j++) _solve(b, j);
for(j = 204300; j < 204310; j++) _solve(b, j);
for(j = 205140; j < 205150; j++) _solve(b, j);
for(j = 205980; j < 205990; j++) _solve(b, j);
for(j = 206820; j < 206830; j++) _solve(b, j);
for(j = 207660; j < 207670; j++) _solve(b, j);
for(j = 208500; j < 208510; j++) _solve(b, j);
for(j = 209340; j < 209350; j++) _solve(b, j);
for(j = 210180; j < 210190; j++) _solve(b, j);
for(j = 211020; j < 211030; j++) _solve(b, j);
for(j = 211860; j < 211870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 212700; j < 212710; j++) _solve(b, j);
for(j = 213540; j < 213550; j++) _solve(b, j);
for(j = 214380; j < 214390; j++) _solve(b, j);
for(j = 215220; j < 215230; j++) _solve(b, j);
for(j = 216060; j < 216070; j++) _solve(b, j);
for(j = 216900; j < 216910; j++) _solve(b, j);
for(j = 217740; j < 217750; j++) _solve(b, j);
for(j = 218580; j < 218590; j++) _solve(b, j);
for(j = 219420; j < 219430; j++) _solve(b, j);
for(j = 220260; j < 220270; j++) _solve(b, j);
for(j = 221100; j < 221110; j++) _solve(b, j);
for(j = 221940; j < 221950; j++) _solve(b, j);
for(j = 222780; j < 222790; j++) _solve(b, j);
for(j = 223620; j < 223630; j++) _solve(b, j);
for(j = 224460; j < 224470; j++) _solve(b, j);
for(j = 225300; j < 225310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 226140; j < 226150; j++) _solve(b, j);
for(j = 226980; j < 226990; j++) _solve(b, j);
for(j = 227820; j < 227830; j++) _solve(b, j);
for(j = 228660; j < 228670; j++) _solve(b, j);
for(j = 229500; j < 229510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 159790; j < 159800; j++) _solve(b, j);
for(j = 160630; j < 160640; j++) _solve(b, j);
for(j = 161470; j < 161480; j++) _solve(b, j);
for(j = 162310; j < 162320; j++) _solve(b, j);
for(j = 163150; j < 163160; j++) _solve(b, j);
for(j = 163990; j < 164000; j++) _solve(b, j);
for(j = 164830; j < 164840; j++) _solve(b, j);
for(j = 165670; j < 165680; j++) _solve(b, j);
for(j = 166510; j < 166520; j++) _solve(b, j);
for(j = 167350; j < 167360; j++) _solve(b, j);
for(j = 168190; j < 168200; j++) _solve(b, j);
for(j = 169030; j < 169040; j++) _solve(b, j);
for(j = 169870; j < 169880; j++) _solve(b, j);
for(j = 170710; j < 170720; j++) _solve(b, j);
for(j = 171550; j < 171560; j++) _solve(b, j);
for(j = 172390; j < 172400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 173230; j < 173240; j++) _solve(b, j);
for(j = 174070; j < 174080; j++) _solve(b, j);
for(j = 174910; j < 174920; j++) _solve(b, j);
for(j = 175750; j < 175760; j++) _solve(b, j);
for(j = 176590; j < 176600; j++) _solve(b, j);
for(j = 177430; j < 177440; j++) _solve(b, j);
for(j = 178270; j < 178280; j++) _solve(b, j);
for(j = 179110; j < 179120; j++) _solve(b, j);
for(j = 179950; j < 179960; j++) _solve(b, j);
for(j = 180790; j < 180800; j++) _solve(b, j);
for(j = 181630; j < 181640; j++) _solve(b, j);
for(j = 182470; j < 182480; j++) _solve(b, j);
for(j = 183310; j < 183320; j++) _solve(b, j);
for(j = 184150; j < 184160; j++) _solve(b, j);
for(j = 184990; j < 185000; j++) _solve(b, j);
for(j = 185830; j < 185840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 186670; j < 186680; j++) _solve(b, j);
for(j = 187510; j < 187520; j++) _solve(b, j);
for(j = 188350; j < 188360; j++) _solve(b, j);
for(j = 189190; j < 189200; j++) _solve(b, j);
for(j = 190030; j < 190040; j++) _solve(b, j);
for(j = 190870; j < 190880; j++) _solve(b, j);
for(j = 191710; j < 191720; j++) _solve(b, j);
for(j = 192550; j < 192560; j++) _solve(b, j);
for(j = 193390; j < 193400; j++) _solve(b, j);
for(j = 194230; j < 194240; j++) _solve(b, j);
for(j = 195070; j < 195080; j++) _solve(b, j);
for(j = 195910; j < 195920; j++) _solve(b, j);
for(j = 196750; j < 196760; j++) _solve(b, j);
for(j = 197590; j < 197600; j++) _solve(b, j);
for(j = 198430; j < 198440; j++) _solve(b, j);
for(j = 199270; j < 199280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 200110; j < 200120; j++) _solve(b, j);
for(j = 200950; j < 200960; j++) _solve(b, j);
for(j = 201790; j < 201800; j++) _solve(b, j);
for(j = 202630; j < 202640; j++) _solve(b, j);
for(j = 203470; j < 203480; j++) _solve(b, j);
for(j = 204310; j < 204320; j++) _solve(b, j);
for(j = 205150; j < 205160; j++) _solve(b, j);
for(j = 205990; j < 206000; j++) _solve(b, j);
for(j = 206830; j < 206840; j++) _solve(b, j);
for(j = 207670; j < 207680; j++) _solve(b, j);
for(j = 208510; j < 208520; j++) _solve(b, j);
for(j = 209350; j < 209360; j++) _solve(b, j);
for(j = 210190; j < 210200; j++) _solve(b, j);
for(j = 211030; j < 211040; j++) _solve(b, j);
for(j = 211870; j < 211880; j++) _solve(b, j);
for(j = 212710; j < 212720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 213550; j < 213560; j++) _solve(b, j);
for(j = 214390; j < 214400; j++) _solve(b, j);
for(j = 215230; j < 215240; j++) _solve(b, j);
for(j = 216070; j < 216080; j++) _solve(b, j);
for(j = 216910; j < 216920; j++) _solve(b, j);
for(j = 217750; j < 217760; j++) _solve(b, j);
for(j = 218590; j < 218600; j++) _solve(b, j);
for(j = 219430; j < 219440; j++) _solve(b, j);
for(j = 220270; j < 220280; j++) _solve(b, j);
for(j = 221110; j < 221120; j++) _solve(b, j);
for(j = 221950; j < 221960; j++) _solve(b, j);
for(j = 222790; j < 222800; j++) _solve(b, j);
for(j = 223630; j < 223640; j++) _solve(b, j);
for(j = 224470; j < 224480; j++) _solve(b, j);
for(j = 225310; j < 225320; j++) _solve(b, j);
for(j = 226150; j < 226160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 226990; j < 227000; j++) _solve(b, j);
for(j = 227830; j < 227840; j++) _solve(b, j);
for(j = 228670; j < 228680; j++) _solve(b, j);
for(j = 229510; j < 229520; j++) _solve(b, j);
for(j = 230350; j < 230360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 160640; j < 160650; j++) _solve(b, j);
for(j = 161480; j < 161490; j++) _solve(b, j);
for(j = 162320; j < 162330; j++) _solve(b, j);
for(j = 163160; j < 163170; j++) _solve(b, j);
for(j = 164000; j < 164010; j++) _solve(b, j);
for(j = 164840; j < 164850; j++) _solve(b, j);
for(j = 165680; j < 165690; j++) _solve(b, j);
for(j = 166520; j < 166530; j++) _solve(b, j);
for(j = 167360; j < 167370; j++) _solve(b, j);
for(j = 168200; j < 168210; j++) _solve(b, j);
for(j = 169040; j < 169050; j++) _solve(b, j);
for(j = 169880; j < 169890; j++) _solve(b, j);
for(j = 170720; j < 170730; j++) _solve(b, j);
for(j = 171560; j < 171570; j++) _solve(b, j);
for(j = 172400; j < 172410; j++) _solve(b, j);
for(j = 173240; j < 173250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 174080; j < 174090; j++) _solve(b, j);
for(j = 174920; j < 174930; j++) _solve(b, j);
for(j = 175760; j < 175770; j++) _solve(b, j);
for(j = 176600; j < 176610; j++) _solve(b, j);
for(j = 177440; j < 177450; j++) _solve(b, j);
for(j = 178280; j < 178290; j++) _solve(b, j);
for(j = 179120; j < 179130; j++) _solve(b, j);
for(j = 179960; j < 179970; j++) _solve(b, j);
for(j = 180800; j < 180810; j++) _solve(b, j);
for(j = 181640; j < 181650; j++) _solve(b, j);
for(j = 182480; j < 182490; j++) _solve(b, j);
for(j = 183320; j < 183330; j++) _solve(b, j);
for(j = 184160; j < 184170; j++) _solve(b, j);
for(j = 185000; j < 185010; j++) _solve(b, j);
for(j = 185840; j < 185850; j++) _solve(b, j);
for(j = 186680; j < 186690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 187520; j < 187530; j++) _solve(b, j);
for(j = 188360; j < 188370; j++) _solve(b, j);
for(j = 189200; j < 189210; j++) _solve(b, j);
for(j = 190040; j < 190050; j++) _solve(b, j);
for(j = 190880; j < 190890; j++) _solve(b, j);
for(j = 191720; j < 191730; j++) _solve(b, j);
for(j = 192560; j < 192570; j++) _solve(b, j);
for(j = 193400; j < 193410; j++) _solve(b, j);
for(j = 194240; j < 194250; j++) _solve(b, j);
for(j = 195080; j < 195090; j++) _solve(b, j);
for(j = 195920; j < 195930; j++) _solve(b, j);
for(j = 196760; j < 196770; j++) _solve(b, j);
for(j = 197600; j < 197610; j++) _solve(b, j);
for(j = 198440; j < 198450; j++) _solve(b, j);
for(j = 199280; j < 199290; j++) _solve(b, j);
for(j = 200120; j < 200130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 200960; j < 200970; j++) _solve(b, j);
for(j = 201800; j < 201810; j++) _solve(b, j);
for(j = 202640; j < 202650; j++) _solve(b, j);
for(j = 203480; j < 203490; j++) _solve(b, j);
for(j = 204320; j < 204330; j++) _solve(b, j);
for(j = 205160; j < 205170; j++) _solve(b, j);
for(j = 206000; j < 206010; j++) _solve(b, j);
for(j = 206840; j < 206850; j++) _solve(b, j);
for(j = 207680; j < 207690; j++) _solve(b, j);
for(j = 208520; j < 208530; j++) _solve(b, j);
for(j = 209360; j < 209370; j++) _solve(b, j);
for(j = 210200; j < 210210; j++) _solve(b, j);
for(j = 211040; j < 211050; j++) _solve(b, j);
for(j = 211880; j < 211890; j++) _solve(b, j);
for(j = 212720; j < 212730; j++) _solve(b, j);
for(j = 213560; j < 213570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 214400; j < 214410; j++) _solve(b, j);
for(j = 215240; j < 215250; j++) _solve(b, j);
for(j = 216080; j < 216090; j++) _solve(b, j);
for(j = 216920; j < 216930; j++) _solve(b, j);
for(j = 217760; j < 217770; j++) _solve(b, j);
for(j = 218600; j < 218610; j++) _solve(b, j);
for(j = 219440; j < 219450; j++) _solve(b, j);
for(j = 220280; j < 220290; j++) _solve(b, j);
for(j = 221120; j < 221130; j++) _solve(b, j);
for(j = 221960; j < 221970; j++) _solve(b, j);
for(j = 222800; j < 222810; j++) _solve(b, j);
for(j = 223640; j < 223650; j++) _solve(b, j);
for(j = 224480; j < 224490; j++) _solve(b, j);
for(j = 225320; j < 225330; j++) _solve(b, j);
for(j = 226160; j < 226170; j++) _solve(b, j);
for(j = 227000; j < 227010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 227840; j < 227850; j++) _solve(b, j);
for(j = 228680; j < 228690; j++) _solve(b, j);
for(j = 229520; j < 229530; j++) _solve(b, j);
for(j = 230360; j < 230370; j++) _solve(b, j);
for(j = 231200; j < 231210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 161490; j < 161500; j++) _solve(b, j);
for(j = 162330; j < 162340; j++) _solve(b, j);
for(j = 163170; j < 163180; j++) _solve(b, j);
for(j = 164010; j < 164020; j++) _solve(b, j);
for(j = 164850; j < 164860; j++) _solve(b, j);
for(j = 165690; j < 165700; j++) _solve(b, j);
for(j = 166530; j < 166540; j++) _solve(b, j);
for(j = 167370; j < 167380; j++) _solve(b, j);
for(j = 168210; j < 168220; j++) _solve(b, j);
for(j = 169050; j < 169060; j++) _solve(b, j);
for(j = 169890; j < 169900; j++) _solve(b, j);
for(j = 170730; j < 170740; j++) _solve(b, j);
for(j = 171570; j < 171580; j++) _solve(b, j);
for(j = 172410; j < 172420; j++) _solve(b, j);
for(j = 173250; j < 173260; j++) _solve(b, j);
for(j = 174090; j < 174100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 174930; j < 174940; j++) _solve(b, j);
for(j = 175770; j < 175780; j++) _solve(b, j);
for(j = 176610; j < 176620; j++) _solve(b, j);
for(j = 177450; j < 177460; j++) _solve(b, j);
for(j = 178290; j < 178300; j++) _solve(b, j);
for(j = 179130; j < 179140; j++) _solve(b, j);
for(j = 179970; j < 179980; j++) _solve(b, j);
for(j = 180810; j < 180820; j++) _solve(b, j);
for(j = 181650; j < 181660; j++) _solve(b, j);
for(j = 182490; j < 182500; j++) _solve(b, j);
for(j = 183330; j < 183340; j++) _solve(b, j);
for(j = 184170; j < 184180; j++) _solve(b, j);
for(j = 185010; j < 185020; j++) _solve(b, j);
for(j = 185850; j < 185860; j++) _solve(b, j);
for(j = 186690; j < 186700; j++) _solve(b, j);
for(j = 187530; j < 187540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 188370; j < 188380; j++) _solve(b, j);
for(j = 189210; j < 189220; j++) _solve(b, j);
for(j = 190050; j < 190060; j++) _solve(b, j);
for(j = 190890; j < 190900; j++) _solve(b, j);
for(j = 191730; j < 191740; j++) _solve(b, j);
for(j = 192570; j < 192580; j++) _solve(b, j);
for(j = 193410; j < 193420; j++) _solve(b, j);
for(j = 194250; j < 194260; j++) _solve(b, j);
for(j = 195090; j < 195100; j++) _solve(b, j);
for(j = 195930; j < 195940; j++) _solve(b, j);
for(j = 196770; j < 196780; j++) _solve(b, j);
for(j = 197610; j < 197620; j++) _solve(b, j);
for(j = 198450; j < 198460; j++) _solve(b, j);
for(j = 199290; j < 199300; j++) _solve(b, j);
for(j = 200130; j < 200140; j++) _solve(b, j);
for(j = 200970; j < 200980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 201810; j < 201820; j++) _solve(b, j);
for(j = 202650; j < 202660; j++) _solve(b, j);
for(j = 203490; j < 203500; j++) _solve(b, j);
for(j = 204330; j < 204340; j++) _solve(b, j);
for(j = 205170; j < 205180; j++) _solve(b, j);
for(j = 206010; j < 206020; j++) _solve(b, j);
for(j = 206850; j < 206860; j++) _solve(b, j);
for(j = 207690; j < 207700; j++) _solve(b, j);
for(j = 208530; j < 208540; j++) _solve(b, j);
for(j = 209370; j < 209380; j++) _solve(b, j);
for(j = 210210; j < 210220; j++) _solve(b, j);
for(j = 211050; j < 211060; j++) _solve(b, j);
for(j = 211890; j < 211900; j++) _solve(b, j);
for(j = 212730; j < 212740; j++) _solve(b, j);
for(j = 213570; j < 213580; j++) _solve(b, j);
for(j = 214410; j < 214420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 215250; j < 215260; j++) _solve(b, j);
for(j = 216090; j < 216100; j++) _solve(b, j);
for(j = 216930; j < 216940; j++) _solve(b, j);
for(j = 217770; j < 217780; j++) _solve(b, j);
for(j = 218610; j < 218620; j++) _solve(b, j);
for(j = 219450; j < 219460; j++) _solve(b, j);
for(j = 220290; j < 220300; j++) _solve(b, j);
for(j = 221130; j < 221140; j++) _solve(b, j);
for(j = 221970; j < 221980; j++) _solve(b, j);
for(j = 222810; j < 222820; j++) _solve(b, j);
for(j = 223650; j < 223660; j++) _solve(b, j);
for(j = 224490; j < 224500; j++) _solve(b, j);
for(j = 225330; j < 225340; j++) _solve(b, j);
for(j = 226170; j < 226180; j++) _solve(b, j);
for(j = 227010; j < 227020; j++) _solve(b, j);
for(j = 227850; j < 227860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 228690; j < 228700; j++) _solve(b, j);
for(j = 229530; j < 229540; j++) _solve(b, j);
for(j = 230370; j < 230380; j++) _solve(b, j);
for(j = 231210; j < 231220; j++) _solve(b, j);
for(j = 232050; j < 232060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 162340; j < 162350; j++) _solve(b, j);
for(j = 163180; j < 163190; j++) _solve(b, j);
for(j = 164020; j < 164030; j++) _solve(b, j);
for(j = 164860; j < 164870; j++) _solve(b, j);
for(j = 165700; j < 165710; j++) _solve(b, j);
for(j = 166540; j < 166550; j++) _solve(b, j);
for(j = 167380; j < 167390; j++) _solve(b, j);
for(j = 168220; j < 168230; j++) _solve(b, j);
for(j = 169060; j < 169070; j++) _solve(b, j);
for(j = 169900; j < 169910; j++) _solve(b, j);
for(j = 170740; j < 170750; j++) _solve(b, j);
for(j = 171580; j < 171590; j++) _solve(b, j);
for(j = 172420; j < 172430; j++) _solve(b, j);
for(j = 173260; j < 173270; j++) _solve(b, j);
for(j = 174100; j < 174110; j++) _solve(b, j);
for(j = 174940; j < 174950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 175780; j < 175790; j++) _solve(b, j);
for(j = 176620; j < 176630; j++) _solve(b, j);
for(j = 177460; j < 177470; j++) _solve(b, j);
for(j = 178300; j < 178310; j++) _solve(b, j);
for(j = 179140; j < 179150; j++) _solve(b, j);
for(j = 179980; j < 179990; j++) _solve(b, j);
for(j = 180820; j < 180830; j++) _solve(b, j);
for(j = 181660; j < 181670; j++) _solve(b, j);
for(j = 182500; j < 182510; j++) _solve(b, j);
for(j = 183340; j < 183350; j++) _solve(b, j);
for(j = 184180; j < 184190; j++) _solve(b, j);
for(j = 185020; j < 185030; j++) _solve(b, j);
for(j = 185860; j < 185870; j++) _solve(b, j);
for(j = 186700; j < 186710; j++) _solve(b, j);
for(j = 187540; j < 187550; j++) _solve(b, j);
for(j = 188380; j < 188390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 189220; j < 189230; j++) _solve(b, j);
for(j = 190060; j < 190070; j++) _solve(b, j);
for(j = 190900; j < 190910; j++) _solve(b, j);
for(j = 191740; j < 191750; j++) _solve(b, j);
for(j = 192580; j < 192590; j++) _solve(b, j);
for(j = 193420; j < 193430; j++) _solve(b, j);
for(j = 194260; j < 194270; j++) _solve(b, j);
for(j = 195100; j < 195110; j++) _solve(b, j);
for(j = 195940; j < 195950; j++) _solve(b, j);
for(j = 196780; j < 196790; j++) _solve(b, j);
for(j = 197620; j < 197630; j++) _solve(b, j);
for(j = 198460; j < 198470; j++) _solve(b, j);
for(j = 199300; j < 199310; j++) _solve(b, j);
for(j = 200140; j < 200150; j++) _solve(b, j);
for(j = 200980; j < 200990; j++) _solve(b, j);
for(j = 201820; j < 201830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 202660; j < 202670; j++) _solve(b, j);
for(j = 203500; j < 203510; j++) _solve(b, j);
for(j = 204340; j < 204350; j++) _solve(b, j);
for(j = 205180; j < 205190; j++) _solve(b, j);
for(j = 206020; j < 206030; j++) _solve(b, j);
for(j = 206860; j < 206870; j++) _solve(b, j);
for(j = 207700; j < 207710; j++) _solve(b, j);
for(j = 208540; j < 208550; j++) _solve(b, j);
for(j = 209380; j < 209390; j++) _solve(b, j);
for(j = 210220; j < 210230; j++) _solve(b, j);
for(j = 211060; j < 211070; j++) _solve(b, j);
for(j = 211900; j < 211910; j++) _solve(b, j);
for(j = 212740; j < 212750; j++) _solve(b, j);
for(j = 213580; j < 213590; j++) _solve(b, j);
for(j = 214420; j < 214430; j++) _solve(b, j);
for(j = 215260; j < 215270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 216100; j < 216110; j++) _solve(b, j);
for(j = 216940; j < 216950; j++) _solve(b, j);
for(j = 217780; j < 217790; j++) _solve(b, j);
for(j = 218620; j < 218630; j++) _solve(b, j);
for(j = 219460; j < 219470; j++) _solve(b, j);
for(j = 220300; j < 220310; j++) _solve(b, j);
for(j = 221140; j < 221150; j++) _solve(b, j);
for(j = 221980; j < 221990; j++) _solve(b, j);
for(j = 222820; j < 222830; j++) _solve(b, j);
for(j = 223660; j < 223670; j++) _solve(b, j);
for(j = 224500; j < 224510; j++) _solve(b, j);
for(j = 225340; j < 225350; j++) _solve(b, j);
for(j = 226180; j < 226190; j++) _solve(b, j);
for(j = 227020; j < 227030; j++) _solve(b, j);
for(j = 227860; j < 227870; j++) _solve(b, j);
for(j = 228700; j < 228710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 229540; j < 229550; j++) _solve(b, j);
for(j = 230380; j < 230390; j++) _solve(b, j);
for(j = 231220; j < 231230; j++) _solve(b, j);
for(j = 232060; j < 232070; j++) _solve(b, j);
for(j = 232900; j < 232910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 163190; j < 163200; j++) _solve(b, j);
for(j = 164030; j < 164040; j++) _solve(b, j);
for(j = 164870; j < 164880; j++) _solve(b, j);
for(j = 165710; j < 165720; j++) _solve(b, j);
for(j = 166550; j < 166560; j++) _solve(b, j);
for(j = 167390; j < 167400; j++) _solve(b, j);
for(j = 168230; j < 168240; j++) _solve(b, j);
for(j = 169070; j < 169080; j++) _solve(b, j);
for(j = 169910; j < 169920; j++) _solve(b, j);
for(j = 170750; j < 170760; j++) _solve(b, j);
for(j = 171590; j < 171600; j++) _solve(b, j);
for(j = 172430; j < 172440; j++) _solve(b, j);
for(j = 173270; j < 173280; j++) _solve(b, j);
for(j = 174110; j < 174120; j++) _solve(b, j);
for(j = 174950; j < 174960; j++) _solve(b, j);
for(j = 175790; j < 175800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 176630; j < 176640; j++) _solve(b, j);
for(j = 177470; j < 177480; j++) _solve(b, j);
for(j = 178310; j < 178320; j++) _solve(b, j);
for(j = 179150; j < 179160; j++) _solve(b, j);
for(j = 179990; j < 180000; j++) _solve(b, j);
for(j = 180830; j < 180840; j++) _solve(b, j);
for(j = 181670; j < 181680; j++) _solve(b, j);
for(j = 182510; j < 182520; j++) _solve(b, j);
for(j = 183350; j < 183360; j++) _solve(b, j);
for(j = 184190; j < 184200; j++) _solve(b, j);
for(j = 185030; j < 185040; j++) _solve(b, j);
for(j = 185870; j < 185880; j++) _solve(b, j);
for(j = 186710; j < 186720; j++) _solve(b, j);
for(j = 187550; j < 187560; j++) _solve(b, j);
for(j = 188390; j < 188400; j++) _solve(b, j);
for(j = 189230; j < 189240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 190070; j < 190080; j++) _solve(b, j);
for(j = 190910; j < 190920; j++) _solve(b, j);
for(j = 191750; j < 191760; j++) _solve(b, j);
for(j = 192590; j < 192600; j++) _solve(b, j);
for(j = 193430; j < 193440; j++) _solve(b, j);
for(j = 194270; j < 194280; j++) _solve(b, j);
for(j = 195110; j < 195120; j++) _solve(b, j);
for(j = 195950; j < 195960; j++) _solve(b, j);
for(j = 196790; j < 196800; j++) _solve(b, j);
for(j = 197630; j < 197640; j++) _solve(b, j);
for(j = 198470; j < 198480; j++) _solve(b, j);
for(j = 199310; j < 199320; j++) _solve(b, j);
for(j = 200150; j < 200160; j++) _solve(b, j);
for(j = 200990; j < 201000; j++) _solve(b, j);
for(j = 201830; j < 201840; j++) _solve(b, j);
for(j = 202670; j < 202680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 203510; j < 203520; j++) _solve(b, j);
for(j = 204350; j < 204360; j++) _solve(b, j);
for(j = 205190; j < 205200; j++) _solve(b, j);
for(j = 206030; j < 206040; j++) _solve(b, j);
for(j = 206870; j < 206880; j++) _solve(b, j);
for(j = 207710; j < 207720; j++) _solve(b, j);
for(j = 208550; j < 208560; j++) _solve(b, j);
for(j = 209390; j < 209400; j++) _solve(b, j);
for(j = 210230; j < 210240; j++) _solve(b, j);
for(j = 211070; j < 211080; j++) _solve(b, j);
for(j = 211910; j < 211920; j++) _solve(b, j);
for(j = 212750; j < 212760; j++) _solve(b, j);
for(j = 213590; j < 213600; j++) _solve(b, j);
for(j = 214430; j < 214440; j++) _solve(b, j);
for(j = 215270; j < 215280; j++) _solve(b, j);
for(j = 216110; j < 216120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 216950; j < 216960; j++) _solve(b, j);
for(j = 217790; j < 217800; j++) _solve(b, j);
for(j = 218630; j < 218640; j++) _solve(b, j);
for(j = 219470; j < 219480; j++) _solve(b, j);
for(j = 220310; j < 220320; j++) _solve(b, j);
for(j = 221150; j < 221160; j++) _solve(b, j);
for(j = 221990; j < 222000; j++) _solve(b, j);
for(j = 222830; j < 222840; j++) _solve(b, j);
for(j = 223670; j < 223680; j++) _solve(b, j);
for(j = 224510; j < 224520; j++) _solve(b, j);
for(j = 225350; j < 225360; j++) _solve(b, j);
for(j = 226190; j < 226200; j++) _solve(b, j);
for(j = 227030; j < 227040; j++) _solve(b, j);
for(j = 227870; j < 227880; j++) _solve(b, j);
for(j = 228710; j < 228720; j++) _solve(b, j);
for(j = 229550; j < 229560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 230390; j < 230400; j++) _solve(b, j);
for(j = 231230; j < 231240; j++) _solve(b, j);
for(j = 232070; j < 232080; j++) _solve(b, j);
for(j = 232910; j < 232920; j++) _solve(b, j);
for(j = 233750; j < 233760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 164040; j < 164050; j++) _solve(b, j);
for(j = 164880; j < 164890; j++) _solve(b, j);
for(j = 165720; j < 165730; j++) _solve(b, j);
for(j = 166560; j < 166570; j++) _solve(b, j);
for(j = 167400; j < 167410; j++) _solve(b, j);
for(j = 168240; j < 168250; j++) _solve(b, j);
for(j = 169080; j < 169090; j++) _solve(b, j);
for(j = 169920; j < 169930; j++) _solve(b, j);
for(j = 170760; j < 170770; j++) _solve(b, j);
for(j = 171600; j < 171610; j++) _solve(b, j);
for(j = 172440; j < 172450; j++) _solve(b, j);
for(j = 173280; j < 173290; j++) _solve(b, j);
for(j = 174120; j < 174130; j++) _solve(b, j);
for(j = 174960; j < 174970; j++) _solve(b, j);
for(j = 175800; j < 175810; j++) _solve(b, j);
for(j = 176640; j < 176650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 177480; j < 177490; j++) _solve(b, j);
for(j = 178320; j < 178330; j++) _solve(b, j);
for(j = 179160; j < 179170; j++) _solve(b, j);
for(j = 180000; j < 180010; j++) _solve(b, j);
for(j = 180840; j < 180850; j++) _solve(b, j);
for(j = 181680; j < 181690; j++) _solve(b, j);
for(j = 182520; j < 182530; j++) _solve(b, j);
for(j = 183360; j < 183370; j++) _solve(b, j);
for(j = 184200; j < 184210; j++) _solve(b, j);
for(j = 185040; j < 185050; j++) _solve(b, j);
for(j = 185880; j < 185890; j++) _solve(b, j);
for(j = 186720; j < 186730; j++) _solve(b, j);
for(j = 187560; j < 187570; j++) _solve(b, j);
for(j = 188400; j < 188410; j++) _solve(b, j);
for(j = 189240; j < 189250; j++) _solve(b, j);
for(j = 190080; j < 190090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 190920; j < 190930; j++) _solve(b, j);
for(j = 191760; j < 191770; j++) _solve(b, j);
for(j = 192600; j < 192610; j++) _solve(b, j);
for(j = 193440; j < 193450; j++) _solve(b, j);
for(j = 194280; j < 194290; j++) _solve(b, j);
for(j = 195120; j < 195130; j++) _solve(b, j);
for(j = 195960; j < 195970; j++) _solve(b, j);
for(j = 196800; j < 196810; j++) _solve(b, j);
for(j = 197640; j < 197650; j++) _solve(b, j);
for(j = 198480; j < 198490; j++) _solve(b, j);
for(j = 199320; j < 199330; j++) _solve(b, j);
for(j = 200160; j < 200170; j++) _solve(b, j);
for(j = 201000; j < 201010; j++) _solve(b, j);
for(j = 201840; j < 201850; j++) _solve(b, j);
for(j = 202680; j < 202690; j++) _solve(b, j);
for(j = 203520; j < 203530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 204360; j < 204370; j++) _solve(b, j);
for(j = 205200; j < 205210; j++) _solve(b, j);
for(j = 206040; j < 206050; j++) _solve(b, j);
for(j = 206880; j < 206890; j++) _solve(b, j);
for(j = 207720; j < 207730; j++) _solve(b, j);
for(j = 208560; j < 208570; j++) _solve(b, j);
for(j = 209400; j < 209410; j++) _solve(b, j);
for(j = 210240; j < 210250; j++) _solve(b, j);
for(j = 211080; j < 211090; j++) _solve(b, j);
for(j = 211920; j < 211930; j++) _solve(b, j);
for(j = 212760; j < 212770; j++) _solve(b, j);
for(j = 213600; j < 213610; j++) _solve(b, j);
for(j = 214440; j < 214450; j++) _solve(b, j);
for(j = 215280; j < 215290; j++) _solve(b, j);
for(j = 216120; j < 216130; j++) _solve(b, j);
for(j = 216960; j < 216970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 217800; j < 217810; j++) _solve(b, j);
for(j = 218640; j < 218650; j++) _solve(b, j);
for(j = 219480; j < 219490; j++) _solve(b, j);
for(j = 220320; j < 220330; j++) _solve(b, j);
for(j = 221160; j < 221170; j++) _solve(b, j);
for(j = 222000; j < 222010; j++) _solve(b, j);
for(j = 222840; j < 222850; j++) _solve(b, j);
for(j = 223680; j < 223690; j++) _solve(b, j);
for(j = 224520; j < 224530; j++) _solve(b, j);
for(j = 225360; j < 225370; j++) _solve(b, j);
for(j = 226200; j < 226210; j++) _solve(b, j);
for(j = 227040; j < 227050; j++) _solve(b, j);
for(j = 227880; j < 227890; j++) _solve(b, j);
for(j = 228720; j < 228730; j++) _solve(b, j);
for(j = 229560; j < 229570; j++) _solve(b, j);
for(j = 230400; j < 230410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 231240; j < 231250; j++) _solve(b, j);
for(j = 232080; j < 232090; j++) _solve(b, j);
for(j = 232920; j < 232930; j++) _solve(b, j);
for(j = 233760; j < 233770; j++) _solve(b, j);
for(j = 234600; j < 234610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 164890; j < 164900; j++) _solve(b, j);
for(j = 165730; j < 165740; j++) _solve(b, j);
for(j = 166570; j < 166580; j++) _solve(b, j);
for(j = 167410; j < 167420; j++) _solve(b, j);
for(j = 168250; j < 168260; j++) _solve(b, j);
for(j = 169090; j < 169100; j++) _solve(b, j);
for(j = 169930; j < 169940; j++) _solve(b, j);
for(j = 170770; j < 170780; j++) _solve(b, j);
for(j = 171610; j < 171620; j++) _solve(b, j);
for(j = 172450; j < 172460; j++) _solve(b, j);
for(j = 173290; j < 173300; j++) _solve(b, j);
for(j = 174130; j < 174140; j++) _solve(b, j);
for(j = 174970; j < 174980; j++) _solve(b, j);
for(j = 175810; j < 175820; j++) _solve(b, j);
for(j = 176650; j < 176660; j++) _solve(b, j);
for(j = 177490; j < 177500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 178330; j < 178340; j++) _solve(b, j);
for(j = 179170; j < 179180; j++) _solve(b, j);
for(j = 180010; j < 180020; j++) _solve(b, j);
for(j = 180850; j < 180860; j++) _solve(b, j);
for(j = 181690; j < 181700; j++) _solve(b, j);
for(j = 182530; j < 182540; j++) _solve(b, j);
for(j = 183370; j < 183380; j++) _solve(b, j);
for(j = 184210; j < 184220; j++) _solve(b, j);
for(j = 185050; j < 185060; j++) _solve(b, j);
for(j = 185890; j < 185900; j++) _solve(b, j);
for(j = 186730; j < 186740; j++) _solve(b, j);
for(j = 187570; j < 187580; j++) _solve(b, j);
for(j = 188410; j < 188420; j++) _solve(b, j);
for(j = 189250; j < 189260; j++) _solve(b, j);
for(j = 190090; j < 190100; j++) _solve(b, j);
for(j = 190930; j < 190940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 191770; j < 191780; j++) _solve(b, j);
for(j = 192610; j < 192620; j++) _solve(b, j);
for(j = 193450; j < 193460; j++) _solve(b, j);
for(j = 194290; j < 194300; j++) _solve(b, j);
for(j = 195130; j < 195140; j++) _solve(b, j);
for(j = 195970; j < 195980; j++) _solve(b, j);
for(j = 196810; j < 196820; j++) _solve(b, j);
for(j = 197650; j < 197660; j++) _solve(b, j);
for(j = 198490; j < 198500; j++) _solve(b, j);
for(j = 199330; j < 199340; j++) _solve(b, j);
for(j = 200170; j < 200180; j++) _solve(b, j);
for(j = 201010; j < 201020; j++) _solve(b, j);
for(j = 201850; j < 201860; j++) _solve(b, j);
for(j = 202690; j < 202700; j++) _solve(b, j);
for(j = 203530; j < 203540; j++) _solve(b, j);
for(j = 204370; j < 204380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 205210; j < 205220; j++) _solve(b, j);
for(j = 206050; j < 206060; j++) _solve(b, j);
for(j = 206890; j < 206900; j++) _solve(b, j);
for(j = 207730; j < 207740; j++) _solve(b, j);
for(j = 208570; j < 208580; j++) _solve(b, j);
for(j = 209410; j < 209420; j++) _solve(b, j);
for(j = 210250; j < 210260; j++) _solve(b, j);
for(j = 211090; j < 211100; j++) _solve(b, j);
for(j = 211930; j < 211940; j++) _solve(b, j);
for(j = 212770; j < 212780; j++) _solve(b, j);
for(j = 213610; j < 213620; j++) _solve(b, j);
for(j = 214450; j < 214460; j++) _solve(b, j);
for(j = 215290; j < 215300; j++) _solve(b, j);
for(j = 216130; j < 216140; j++) _solve(b, j);
for(j = 216970; j < 216980; j++) _solve(b, j);
for(j = 217810; j < 217820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 218650; j < 218660; j++) _solve(b, j);
for(j = 219490; j < 219500; j++) _solve(b, j);
for(j = 220330; j < 220340; j++) _solve(b, j);
for(j = 221170; j < 221180; j++) _solve(b, j);
for(j = 222010; j < 222020; j++) _solve(b, j);
for(j = 222850; j < 222860; j++) _solve(b, j);
for(j = 223690; j < 223700; j++) _solve(b, j);
for(j = 224530; j < 224540; j++) _solve(b, j);
for(j = 225370; j < 225380; j++) _solve(b, j);
for(j = 226210; j < 226220; j++) _solve(b, j);
for(j = 227050; j < 227060; j++) _solve(b, j);
for(j = 227890; j < 227900; j++) _solve(b, j);
for(j = 228730; j < 228740; j++) _solve(b, j);
for(j = 229570; j < 229580; j++) _solve(b, j);
for(j = 230410; j < 230420; j++) _solve(b, j);
for(j = 231250; j < 231260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 232090; j < 232100; j++) _solve(b, j);
for(j = 232930; j < 232940; j++) _solve(b, j);
for(j = 233770; j < 233780; j++) _solve(b, j);
for(j = 234610; j < 234620; j++) _solve(b, j);
for(j = 235450; j < 235460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 165740; j < 165750; j++) _solve(b, j);
for(j = 166580; j < 166590; j++) _solve(b, j);
for(j = 167420; j < 167430; j++) _solve(b, j);
for(j = 168260; j < 168270; j++) _solve(b, j);
for(j = 169100; j < 169110; j++) _solve(b, j);
for(j = 169940; j < 169950; j++) _solve(b, j);
for(j = 170780; j < 170790; j++) _solve(b, j);
for(j = 171620; j < 171630; j++) _solve(b, j);
for(j = 172460; j < 172470; j++) _solve(b, j);
for(j = 173300; j < 173310; j++) _solve(b, j);
for(j = 174140; j < 174150; j++) _solve(b, j);
for(j = 174980; j < 174990; j++) _solve(b, j);
for(j = 175820; j < 175830; j++) _solve(b, j);
for(j = 176660; j < 176670; j++) _solve(b, j);
for(j = 177500; j < 177510; j++) _solve(b, j);
for(j = 178340; j < 178350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 179180; j < 179190; j++) _solve(b, j);
for(j = 180020; j < 180030; j++) _solve(b, j);
for(j = 180860; j < 180870; j++) _solve(b, j);
for(j = 181700; j < 181710; j++) _solve(b, j);
for(j = 182540; j < 182550; j++) _solve(b, j);
for(j = 183380; j < 183390; j++) _solve(b, j);
for(j = 184220; j < 184230; j++) _solve(b, j);
for(j = 185060; j < 185070; j++) _solve(b, j);
for(j = 185900; j < 185910; j++) _solve(b, j);
for(j = 186740; j < 186750; j++) _solve(b, j);
for(j = 187580; j < 187590; j++) _solve(b, j);
for(j = 188420; j < 188430; j++) _solve(b, j);
for(j = 189260; j < 189270; j++) _solve(b, j);
for(j = 190100; j < 190110; j++) _solve(b, j);
for(j = 190940; j < 190950; j++) _solve(b, j);
for(j = 191780; j < 191790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 192620; j < 192630; j++) _solve(b, j);
for(j = 193460; j < 193470; j++) _solve(b, j);
for(j = 194300; j < 194310; j++) _solve(b, j);
for(j = 195140; j < 195150; j++) _solve(b, j);
for(j = 195980; j < 195990; j++) _solve(b, j);
for(j = 196820; j < 196830; j++) _solve(b, j);
for(j = 197660; j < 197670; j++) _solve(b, j);
for(j = 198500; j < 198510; j++) _solve(b, j);
for(j = 199340; j < 199350; j++) _solve(b, j);
for(j = 200180; j < 200190; j++) _solve(b, j);
for(j = 201020; j < 201030; j++) _solve(b, j);
for(j = 201860; j < 201870; j++) _solve(b, j);
for(j = 202700; j < 202710; j++) _solve(b, j);
for(j = 203540; j < 203550; j++) _solve(b, j);
for(j = 204380; j < 204390; j++) _solve(b, j);
for(j = 205220; j < 205230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 206060; j < 206070; j++) _solve(b, j);
for(j = 206900; j < 206910; j++) _solve(b, j);
for(j = 207740; j < 207750; j++) _solve(b, j);
for(j = 208580; j < 208590; j++) _solve(b, j);
for(j = 209420; j < 209430; j++) _solve(b, j);
for(j = 210260; j < 210270; j++) _solve(b, j);
for(j = 211100; j < 211110; j++) _solve(b, j);
for(j = 211940; j < 211950; j++) _solve(b, j);
for(j = 212780; j < 212790; j++) _solve(b, j);
for(j = 213620; j < 213630; j++) _solve(b, j);
for(j = 214460; j < 214470; j++) _solve(b, j);
for(j = 215300; j < 215310; j++) _solve(b, j);
for(j = 216140; j < 216150; j++) _solve(b, j);
for(j = 216980; j < 216990; j++) _solve(b, j);
for(j = 217820; j < 217830; j++) _solve(b, j);
for(j = 218660; j < 218670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 219500; j < 219510; j++) _solve(b, j);
for(j = 220340; j < 220350; j++) _solve(b, j);
for(j = 221180; j < 221190; j++) _solve(b, j);
for(j = 222020; j < 222030; j++) _solve(b, j);
for(j = 222860; j < 222870; j++) _solve(b, j);
for(j = 223700; j < 223710; j++) _solve(b, j);
for(j = 224540; j < 224550; j++) _solve(b, j);
for(j = 225380; j < 225390; j++) _solve(b, j);
for(j = 226220; j < 226230; j++) _solve(b, j);
for(j = 227060; j < 227070; j++) _solve(b, j);
for(j = 227900; j < 227910; j++) _solve(b, j);
for(j = 228740; j < 228750; j++) _solve(b, j);
for(j = 229580; j < 229590; j++) _solve(b, j);
for(j = 230420; j < 230430; j++) _solve(b, j);
for(j = 231260; j < 231270; j++) _solve(b, j);
for(j = 232100; j < 232110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 232940; j < 232950; j++) _solve(b, j);
for(j = 233780; j < 233790; j++) _solve(b, j);
for(j = 234620; j < 234630; j++) _solve(b, j);
for(j = 235460; j < 235470; j++) _solve(b, j);
for(j = 236300; j < 236310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 166590; j < 166600; j++) _solve(b, j);
for(j = 167430; j < 167440; j++) _solve(b, j);
for(j = 168270; j < 168280; j++) _solve(b, j);
for(j = 169110; j < 169120; j++) _solve(b, j);
for(j = 169950; j < 169960; j++) _solve(b, j);
for(j = 170790; j < 170800; j++) _solve(b, j);
for(j = 171630; j < 171640; j++) _solve(b, j);
for(j = 172470; j < 172480; j++) _solve(b, j);
for(j = 173310; j < 173320; j++) _solve(b, j);
for(j = 174150; j < 174160; j++) _solve(b, j);
for(j = 174990; j < 175000; j++) _solve(b, j);
for(j = 175830; j < 175840; j++) _solve(b, j);
for(j = 176670; j < 176680; j++) _solve(b, j);
for(j = 177510; j < 177520; j++) _solve(b, j);
for(j = 178350; j < 178360; j++) _solve(b, j);
for(j = 179190; j < 179200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 180030; j < 180040; j++) _solve(b, j);
for(j = 180870; j < 180880; j++) _solve(b, j);
for(j = 181710; j < 181720; j++) _solve(b, j);
for(j = 182550; j < 182560; j++) _solve(b, j);
for(j = 183390; j < 183400; j++) _solve(b, j);
for(j = 184230; j < 184240; j++) _solve(b, j);
for(j = 185070; j < 185080; j++) _solve(b, j);
for(j = 185910; j < 185920; j++) _solve(b, j);
for(j = 186750; j < 186760; j++) _solve(b, j);
for(j = 187590; j < 187600; j++) _solve(b, j);
for(j = 188430; j < 188440; j++) _solve(b, j);
for(j = 189270; j < 189280; j++) _solve(b, j);
for(j = 190110; j < 190120; j++) _solve(b, j);
for(j = 190950; j < 190960; j++) _solve(b, j);
for(j = 191790; j < 191800; j++) _solve(b, j);
for(j = 192630; j < 192640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 193470; j < 193480; j++) _solve(b, j);
for(j = 194310; j < 194320; j++) _solve(b, j);
for(j = 195150; j < 195160; j++) _solve(b, j);
for(j = 195990; j < 196000; j++) _solve(b, j);
for(j = 196830; j < 196840; j++) _solve(b, j);
for(j = 197670; j < 197680; j++) _solve(b, j);
for(j = 198510; j < 198520; j++) _solve(b, j);
for(j = 199350; j < 199360; j++) _solve(b, j);
for(j = 200190; j < 200200; j++) _solve(b, j);
for(j = 201030; j < 201040; j++) _solve(b, j);
for(j = 201870; j < 201880; j++) _solve(b, j);
for(j = 202710; j < 202720; j++) _solve(b, j);
for(j = 203550; j < 203560; j++) _solve(b, j);
for(j = 204390; j < 204400; j++) _solve(b, j);
for(j = 205230; j < 205240; j++) _solve(b, j);
for(j = 206070; j < 206080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 206910; j < 206920; j++) _solve(b, j);
for(j = 207750; j < 207760; j++) _solve(b, j);
for(j = 208590; j < 208600; j++) _solve(b, j);
for(j = 209430; j < 209440; j++) _solve(b, j);
for(j = 210270; j < 210280; j++) _solve(b, j);
for(j = 211110; j < 211120; j++) _solve(b, j);
for(j = 211950; j < 211960; j++) _solve(b, j);
for(j = 212790; j < 212800; j++) _solve(b, j);
for(j = 213630; j < 213640; j++) _solve(b, j);
for(j = 214470; j < 214480; j++) _solve(b, j);
for(j = 215310; j < 215320; j++) _solve(b, j);
for(j = 216150; j < 216160; j++) _solve(b, j);
for(j = 216990; j < 217000; j++) _solve(b, j);
for(j = 217830; j < 217840; j++) _solve(b, j);
for(j = 218670; j < 218680; j++) _solve(b, j);
for(j = 219510; j < 219520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 220350; j < 220360; j++) _solve(b, j);
for(j = 221190; j < 221200; j++) _solve(b, j);
for(j = 222030; j < 222040; j++) _solve(b, j);
for(j = 222870; j < 222880; j++) _solve(b, j);
for(j = 223710; j < 223720; j++) _solve(b, j);
for(j = 224550; j < 224560; j++) _solve(b, j);
for(j = 225390; j < 225400; j++) _solve(b, j);
for(j = 226230; j < 226240; j++) _solve(b, j);
for(j = 227070; j < 227080; j++) _solve(b, j);
for(j = 227910; j < 227920; j++) _solve(b, j);
for(j = 228750; j < 228760; j++) _solve(b, j);
for(j = 229590; j < 229600; j++) _solve(b, j);
for(j = 230430; j < 230440; j++) _solve(b, j);
for(j = 231270; j < 231280; j++) _solve(b, j);
for(j = 232110; j < 232120; j++) _solve(b, j);
for(j = 232950; j < 232960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 233790; j < 233800; j++) _solve(b, j);
for(j = 234630; j < 234640; j++) _solve(b, j);
for(j = 235470; j < 235480; j++) _solve(b, j);
for(j = 236310; j < 236320; j++) _solve(b, j);
for(j = 237150; j < 237160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 167440; j < 167450; j++) _solve(b, j);
for(j = 168280; j < 168290; j++) _solve(b, j);
for(j = 169120; j < 169130; j++) _solve(b, j);
for(j = 169960; j < 169970; j++) _solve(b, j);
for(j = 170800; j < 170810; j++) _solve(b, j);
for(j = 171640; j < 171650; j++) _solve(b, j);
for(j = 172480; j < 172490; j++) _solve(b, j);
for(j = 173320; j < 173330; j++) _solve(b, j);
for(j = 174160; j < 174170; j++) _solve(b, j);
for(j = 175000; j < 175010; j++) _solve(b, j);
for(j = 175840; j < 175850; j++) _solve(b, j);
for(j = 176680; j < 176690; j++) _solve(b, j);
for(j = 177520; j < 177530; j++) _solve(b, j);
for(j = 178360; j < 178370; j++) _solve(b, j);
for(j = 179200; j < 179210; j++) _solve(b, j);
for(j = 180040; j < 180050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 180880; j < 180890; j++) _solve(b, j);
for(j = 181720; j < 181730; j++) _solve(b, j);
for(j = 182560; j < 182570; j++) _solve(b, j);
for(j = 183400; j < 183410; j++) _solve(b, j);
for(j = 184240; j < 184250; j++) _solve(b, j);
for(j = 185080; j < 185090; j++) _solve(b, j);
for(j = 185920; j < 185930; j++) _solve(b, j);
for(j = 186760; j < 186770; j++) _solve(b, j);
for(j = 187600; j < 187610; j++) _solve(b, j);
for(j = 188440; j < 188450; j++) _solve(b, j);
for(j = 189280; j < 189290; j++) _solve(b, j);
for(j = 190120; j < 190130; j++) _solve(b, j);
for(j = 190960; j < 190970; j++) _solve(b, j);
for(j = 191800; j < 191810; j++) _solve(b, j);
for(j = 192640; j < 192650; j++) _solve(b, j);
for(j = 193480; j < 193490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 194320; j < 194330; j++) _solve(b, j);
for(j = 195160; j < 195170; j++) _solve(b, j);
for(j = 196000; j < 196010; j++) _solve(b, j);
for(j = 196840; j < 196850; j++) _solve(b, j);
for(j = 197680; j < 197690; j++) _solve(b, j);
for(j = 198520; j < 198530; j++) _solve(b, j);
for(j = 199360; j < 199370; j++) _solve(b, j);
for(j = 200200; j < 200210; j++) _solve(b, j);
for(j = 201040; j < 201050; j++) _solve(b, j);
for(j = 201880; j < 201890; j++) _solve(b, j);
for(j = 202720; j < 202730; j++) _solve(b, j);
for(j = 203560; j < 203570; j++) _solve(b, j);
for(j = 204400; j < 204410; j++) _solve(b, j);
for(j = 205240; j < 205250; j++) _solve(b, j);
for(j = 206080; j < 206090; j++) _solve(b, j);
for(j = 206920; j < 206930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 207760; j < 207770; j++) _solve(b, j);
for(j = 208600; j < 208610; j++) _solve(b, j);
for(j = 209440; j < 209450; j++) _solve(b, j);
for(j = 210280; j < 210290; j++) _solve(b, j);
for(j = 211120; j < 211130; j++) _solve(b, j);
for(j = 211960; j < 211970; j++) _solve(b, j);
for(j = 212800; j < 212810; j++) _solve(b, j);
for(j = 213640; j < 213650; j++) _solve(b, j);
for(j = 214480; j < 214490; j++) _solve(b, j);
for(j = 215320; j < 215330; j++) _solve(b, j);
for(j = 216160; j < 216170; j++) _solve(b, j);
for(j = 217000; j < 217010; j++) _solve(b, j);
for(j = 217840; j < 217850; j++) _solve(b, j);
for(j = 218680; j < 218690; j++) _solve(b, j);
for(j = 219520; j < 219530; j++) _solve(b, j);
for(j = 220360; j < 220370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 221200; j < 221210; j++) _solve(b, j);
for(j = 222040; j < 222050; j++) _solve(b, j);
for(j = 222880; j < 222890; j++) _solve(b, j);
for(j = 223720; j < 223730; j++) _solve(b, j);
for(j = 224560; j < 224570; j++) _solve(b, j);
for(j = 225400; j < 225410; j++) _solve(b, j);
for(j = 226240; j < 226250; j++) _solve(b, j);
for(j = 227080; j < 227090; j++) _solve(b, j);
for(j = 227920; j < 227930; j++) _solve(b, j);
for(j = 228760; j < 228770; j++) _solve(b, j);
for(j = 229600; j < 229610; j++) _solve(b, j);
for(j = 230440; j < 230450; j++) _solve(b, j);
for(j = 231280; j < 231290; j++) _solve(b, j);
for(j = 232120; j < 232130; j++) _solve(b, j);
for(j = 232960; j < 232970; j++) _solve(b, j);
for(j = 233800; j < 233810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 234640; j < 234650; j++) _solve(b, j);
for(j = 235480; j < 235490; j++) _solve(b, j);
for(j = 236320; j < 236330; j++) _solve(b, j);
for(j = 237160; j < 237170; j++) _solve(b, j);
for(j = 238000; j < 238010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 168290; j < 168300; j++) _solve(b, j);
for(j = 169130; j < 169140; j++) _solve(b, j);
for(j = 169970; j < 169980; j++) _solve(b, j);
for(j = 170810; j < 170820; j++) _solve(b, j);
for(j = 171650; j < 171660; j++) _solve(b, j);
for(j = 172490; j < 172500; j++) _solve(b, j);
for(j = 173330; j < 173340; j++) _solve(b, j);
for(j = 174170; j < 174180; j++) _solve(b, j);
for(j = 175010; j < 175020; j++) _solve(b, j);
for(j = 175850; j < 175860; j++) _solve(b, j);
for(j = 176690; j < 176700; j++) _solve(b, j);
for(j = 177530; j < 177540; j++) _solve(b, j);
for(j = 178370; j < 178380; j++) _solve(b, j);
for(j = 179210; j < 179220; j++) _solve(b, j);
for(j = 180050; j < 180060; j++) _solve(b, j);
for(j = 180890; j < 180900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 181730; j < 181740; j++) _solve(b, j);
for(j = 182570; j < 182580; j++) _solve(b, j);
for(j = 183410; j < 183420; j++) _solve(b, j);
for(j = 184250; j < 184260; j++) _solve(b, j);
for(j = 185090; j < 185100; j++) _solve(b, j);
for(j = 185930; j < 185940; j++) _solve(b, j);
for(j = 186770; j < 186780; j++) _solve(b, j);
for(j = 187610; j < 187620; j++) _solve(b, j);
for(j = 188450; j < 188460; j++) _solve(b, j);
for(j = 189290; j < 189300; j++) _solve(b, j);
for(j = 190130; j < 190140; j++) _solve(b, j);
for(j = 190970; j < 190980; j++) _solve(b, j);
for(j = 191810; j < 191820; j++) _solve(b, j);
for(j = 192650; j < 192660; j++) _solve(b, j);
for(j = 193490; j < 193500; j++) _solve(b, j);
for(j = 194330; j < 194340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 195170; j < 195180; j++) _solve(b, j);
for(j = 196010; j < 196020; j++) _solve(b, j);
for(j = 196850; j < 196860; j++) _solve(b, j);
for(j = 197690; j < 197700; j++) _solve(b, j);
for(j = 198530; j < 198540; j++) _solve(b, j);
for(j = 199370; j < 199380; j++) _solve(b, j);
for(j = 200210; j < 200220; j++) _solve(b, j);
for(j = 201050; j < 201060; j++) _solve(b, j);
for(j = 201890; j < 201900; j++) _solve(b, j);
for(j = 202730; j < 202740; j++) _solve(b, j);
for(j = 203570; j < 203580; j++) _solve(b, j);
for(j = 204410; j < 204420; j++) _solve(b, j);
for(j = 205250; j < 205260; j++) _solve(b, j);
for(j = 206090; j < 206100; j++) _solve(b, j);
for(j = 206930; j < 206940; j++) _solve(b, j);
for(j = 207770; j < 207780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 208610; j < 208620; j++) _solve(b, j);
for(j = 209450; j < 209460; j++) _solve(b, j);
for(j = 210290; j < 210300; j++) _solve(b, j);
for(j = 211130; j < 211140; j++) _solve(b, j);
for(j = 211970; j < 211980; j++) _solve(b, j);
for(j = 212810; j < 212820; j++) _solve(b, j);
for(j = 213650; j < 213660; j++) _solve(b, j);
for(j = 214490; j < 214500; j++) _solve(b, j);
for(j = 215330; j < 215340; j++) _solve(b, j);
for(j = 216170; j < 216180; j++) _solve(b, j);
for(j = 217010; j < 217020; j++) _solve(b, j);
for(j = 217850; j < 217860; j++) _solve(b, j);
for(j = 218690; j < 218700; j++) _solve(b, j);
for(j = 219530; j < 219540; j++) _solve(b, j);
for(j = 220370; j < 220380; j++) _solve(b, j);
for(j = 221210; j < 221220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 222050; j < 222060; j++) _solve(b, j);
for(j = 222890; j < 222900; j++) _solve(b, j);
for(j = 223730; j < 223740; j++) _solve(b, j);
for(j = 224570; j < 224580; j++) _solve(b, j);
for(j = 225410; j < 225420; j++) _solve(b, j);
for(j = 226250; j < 226260; j++) _solve(b, j);
for(j = 227090; j < 227100; j++) _solve(b, j);
for(j = 227930; j < 227940; j++) _solve(b, j);
for(j = 228770; j < 228780; j++) _solve(b, j);
for(j = 229610; j < 229620; j++) _solve(b, j);
for(j = 230450; j < 230460; j++) _solve(b, j);
for(j = 231290; j < 231300; j++) _solve(b, j);
for(j = 232130; j < 232140; j++) _solve(b, j);
for(j = 232970; j < 232980; j++) _solve(b, j);
for(j = 233810; j < 233820; j++) _solve(b, j);
for(j = 234650; j < 234660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 235490; j < 235500; j++) _solve(b, j);
for(j = 236330; j < 236340; j++) _solve(b, j);
for(j = 237170; j < 237180; j++) _solve(b, j);
for(j = 238010; j < 238020; j++) _solve(b, j);
for(j = 238850; j < 238860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 169140; j < 169150; j++) _solve(b, j);
for(j = 169980; j < 169990; j++) _solve(b, j);
for(j = 170820; j < 170830; j++) _solve(b, j);
for(j = 171660; j < 171670; j++) _solve(b, j);
for(j = 172500; j < 172510; j++) _solve(b, j);
for(j = 173340; j < 173350; j++) _solve(b, j);
for(j = 174180; j < 174190; j++) _solve(b, j);
for(j = 175020; j < 175030; j++) _solve(b, j);
for(j = 175860; j < 175870; j++) _solve(b, j);
for(j = 176700; j < 176710; j++) _solve(b, j);
for(j = 177540; j < 177550; j++) _solve(b, j);
for(j = 178380; j < 178390; j++) _solve(b, j);
for(j = 179220; j < 179230; j++) _solve(b, j);
for(j = 180060; j < 180070; j++) _solve(b, j);
for(j = 180900; j < 180910; j++) _solve(b, j);
for(j = 181740; j < 181750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 182580; j < 182590; j++) _solve(b, j);
for(j = 183420; j < 183430; j++) _solve(b, j);
for(j = 184260; j < 184270; j++) _solve(b, j);
for(j = 185100; j < 185110; j++) _solve(b, j);
for(j = 185940; j < 185950; j++) _solve(b, j);
for(j = 186780; j < 186790; j++) _solve(b, j);
for(j = 187620; j < 187630; j++) _solve(b, j);
for(j = 188460; j < 188470; j++) _solve(b, j);
for(j = 189300; j < 189310; j++) _solve(b, j);
for(j = 190140; j < 190150; j++) _solve(b, j);
for(j = 190980; j < 190990; j++) _solve(b, j);
for(j = 191820; j < 191830; j++) _solve(b, j);
for(j = 192660; j < 192670; j++) _solve(b, j);
for(j = 193500; j < 193510; j++) _solve(b, j);
for(j = 194340; j < 194350; j++) _solve(b, j);
for(j = 195180; j < 195190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 196020; j < 196030; j++) _solve(b, j);
for(j = 196860; j < 196870; j++) _solve(b, j);
for(j = 197700; j < 197710; j++) _solve(b, j);
for(j = 198540; j < 198550; j++) _solve(b, j);
for(j = 199380; j < 199390; j++) _solve(b, j);
for(j = 200220; j < 200230; j++) _solve(b, j);
for(j = 201060; j < 201070; j++) _solve(b, j);
for(j = 201900; j < 201910; j++) _solve(b, j);
for(j = 202740; j < 202750; j++) _solve(b, j);
for(j = 203580; j < 203590; j++) _solve(b, j);
for(j = 204420; j < 204430; j++) _solve(b, j);
for(j = 205260; j < 205270; j++) _solve(b, j);
for(j = 206100; j < 206110; j++) _solve(b, j);
for(j = 206940; j < 206950; j++) _solve(b, j);
for(j = 207780; j < 207790; j++) _solve(b, j);
for(j = 208620; j < 208630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 209460; j < 209470; j++) _solve(b, j);
for(j = 210300; j < 210310; j++) _solve(b, j);
for(j = 211140; j < 211150; j++) _solve(b, j);
for(j = 211980; j < 211990; j++) _solve(b, j);
for(j = 212820; j < 212830; j++) _solve(b, j);
for(j = 213660; j < 213670; j++) _solve(b, j);
for(j = 214500; j < 214510; j++) _solve(b, j);
for(j = 215340; j < 215350; j++) _solve(b, j);
for(j = 216180; j < 216190; j++) _solve(b, j);
for(j = 217020; j < 217030; j++) _solve(b, j);
for(j = 217860; j < 217870; j++) _solve(b, j);
for(j = 218700; j < 218710; j++) _solve(b, j);
for(j = 219540; j < 219550; j++) _solve(b, j);
for(j = 220380; j < 220390; j++) _solve(b, j);
for(j = 221220; j < 221230; j++) _solve(b, j);
for(j = 222060; j < 222070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 222900; j < 222910; j++) _solve(b, j);
for(j = 223740; j < 223750; j++) _solve(b, j);
for(j = 224580; j < 224590; j++) _solve(b, j);
for(j = 225420; j < 225430; j++) _solve(b, j);
for(j = 226260; j < 226270; j++) _solve(b, j);
for(j = 227100; j < 227110; j++) _solve(b, j);
for(j = 227940; j < 227950; j++) _solve(b, j);
for(j = 228780; j < 228790; j++) _solve(b, j);
for(j = 229620; j < 229630; j++) _solve(b, j);
for(j = 230460; j < 230470; j++) _solve(b, j);
for(j = 231300; j < 231310; j++) _solve(b, j);
for(j = 232140; j < 232150; j++) _solve(b, j);
for(j = 232980; j < 232990; j++) _solve(b, j);
for(j = 233820; j < 233830; j++) _solve(b, j);
for(j = 234660; j < 234670; j++) _solve(b, j);
for(j = 235500; j < 235510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 236340; j < 236350; j++) _solve(b, j);
for(j = 237180; j < 237190; j++) _solve(b, j);
for(j = 238020; j < 238030; j++) _solve(b, j);
for(j = 238860; j < 238870; j++) _solve(b, j);
for(j = 239700; j < 239710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 169990; j < 170000; j++) _solve(b, j);
for(j = 170830; j < 170840; j++) _solve(b, j);
for(j = 171670; j < 171680; j++) _solve(b, j);
for(j = 172510; j < 172520; j++) _solve(b, j);
for(j = 173350; j < 173360; j++) _solve(b, j);
for(j = 174190; j < 174200; j++) _solve(b, j);
for(j = 175030; j < 175040; j++) _solve(b, j);
for(j = 175870; j < 175880; j++) _solve(b, j);
for(j = 176710; j < 176720; j++) _solve(b, j);
for(j = 177550; j < 177560; j++) _solve(b, j);
for(j = 178390; j < 178400; j++) _solve(b, j);
for(j = 179230; j < 179240; j++) _solve(b, j);
for(j = 180070; j < 180080; j++) _solve(b, j);
for(j = 180910; j < 180920; j++) _solve(b, j);
for(j = 181750; j < 181760; j++) _solve(b, j);
for(j = 182590; j < 182600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 183430; j < 183440; j++) _solve(b, j);
for(j = 184270; j < 184280; j++) _solve(b, j);
for(j = 185110; j < 185120; j++) _solve(b, j);
for(j = 185950; j < 185960; j++) _solve(b, j);
for(j = 186790; j < 186800; j++) _solve(b, j);
for(j = 187630; j < 187640; j++) _solve(b, j);
for(j = 188470; j < 188480; j++) _solve(b, j);
for(j = 189310; j < 189320; j++) _solve(b, j);
for(j = 190150; j < 190160; j++) _solve(b, j);
for(j = 190990; j < 191000; j++) _solve(b, j);
for(j = 191830; j < 191840; j++) _solve(b, j);
for(j = 192670; j < 192680; j++) _solve(b, j);
for(j = 193510; j < 193520; j++) _solve(b, j);
for(j = 194350; j < 194360; j++) _solve(b, j);
for(j = 195190; j < 195200; j++) _solve(b, j);
for(j = 196030; j < 196040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 196870; j < 196880; j++) _solve(b, j);
for(j = 197710; j < 197720; j++) _solve(b, j);
for(j = 198550; j < 198560; j++) _solve(b, j);
for(j = 199390; j < 199400; j++) _solve(b, j);
for(j = 200230; j < 200240; j++) _solve(b, j);
for(j = 201070; j < 201080; j++) _solve(b, j);
for(j = 201910; j < 201920; j++) _solve(b, j);
for(j = 202750; j < 202760; j++) _solve(b, j);
for(j = 203590; j < 203600; j++) _solve(b, j);
for(j = 204430; j < 204440; j++) _solve(b, j);
for(j = 205270; j < 205280; j++) _solve(b, j);
for(j = 206110; j < 206120; j++) _solve(b, j);
for(j = 206950; j < 206960; j++) _solve(b, j);
for(j = 207790; j < 207800; j++) _solve(b, j);
for(j = 208630; j < 208640; j++) _solve(b, j);
for(j = 209470; j < 209480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 210310; j < 210320; j++) _solve(b, j);
for(j = 211150; j < 211160; j++) _solve(b, j);
for(j = 211990; j < 212000; j++) _solve(b, j);
for(j = 212830; j < 212840; j++) _solve(b, j);
for(j = 213670; j < 213680; j++) _solve(b, j);
for(j = 214510; j < 214520; j++) _solve(b, j);
for(j = 215350; j < 215360; j++) _solve(b, j);
for(j = 216190; j < 216200; j++) _solve(b, j);
for(j = 217030; j < 217040; j++) _solve(b, j);
for(j = 217870; j < 217880; j++) _solve(b, j);
for(j = 218710; j < 218720; j++) _solve(b, j);
for(j = 219550; j < 219560; j++) _solve(b, j);
for(j = 220390; j < 220400; j++) _solve(b, j);
for(j = 221230; j < 221240; j++) _solve(b, j);
for(j = 222070; j < 222080; j++) _solve(b, j);
for(j = 222910; j < 222920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 223750; j < 223760; j++) _solve(b, j);
for(j = 224590; j < 224600; j++) _solve(b, j);
for(j = 225430; j < 225440; j++) _solve(b, j);
for(j = 226270; j < 226280; j++) _solve(b, j);
for(j = 227110; j < 227120; j++) _solve(b, j);
for(j = 227950; j < 227960; j++) _solve(b, j);
for(j = 228790; j < 228800; j++) _solve(b, j);
for(j = 229630; j < 229640; j++) _solve(b, j);
for(j = 230470; j < 230480; j++) _solve(b, j);
for(j = 231310; j < 231320; j++) _solve(b, j);
for(j = 232150; j < 232160; j++) _solve(b, j);
for(j = 232990; j < 233000; j++) _solve(b, j);
for(j = 233830; j < 233840; j++) _solve(b, j);
for(j = 234670; j < 234680; j++) _solve(b, j);
for(j = 235510; j < 235520; j++) _solve(b, j);
for(j = 236350; j < 236360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 237190; j < 237200; j++) _solve(b, j);
for(j = 238030; j < 238040; j++) _solve(b, j);
for(j = 238870; j < 238880; j++) _solve(b, j);
for(j = 239710; j < 239720; j++) _solve(b, j);
for(j = 240550; j < 240560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 170840; j < 170850; j++) _solve(b, j);
for(j = 171680; j < 171690; j++) _solve(b, j);
for(j = 172520; j < 172530; j++) _solve(b, j);
for(j = 173360; j < 173370; j++) _solve(b, j);
for(j = 174200; j < 174210; j++) _solve(b, j);
for(j = 175040; j < 175050; j++) _solve(b, j);
for(j = 175880; j < 175890; j++) _solve(b, j);
for(j = 176720; j < 176730; j++) _solve(b, j);
for(j = 177560; j < 177570; j++) _solve(b, j);
for(j = 178400; j < 178410; j++) _solve(b, j);
for(j = 179240; j < 179250; j++) _solve(b, j);
for(j = 180080; j < 180090; j++) _solve(b, j);
for(j = 180920; j < 180930; j++) _solve(b, j);
for(j = 181760; j < 181770; j++) _solve(b, j);
for(j = 182600; j < 182610; j++) _solve(b, j);
for(j = 183440; j < 183450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 184280; j < 184290; j++) _solve(b, j);
for(j = 185120; j < 185130; j++) _solve(b, j);
for(j = 185960; j < 185970; j++) _solve(b, j);
for(j = 186800; j < 186810; j++) _solve(b, j);
for(j = 187640; j < 187650; j++) _solve(b, j);
for(j = 188480; j < 188490; j++) _solve(b, j);
for(j = 189320; j < 189330; j++) _solve(b, j);
for(j = 190160; j < 190170; j++) _solve(b, j);
for(j = 191000; j < 191010; j++) _solve(b, j);
for(j = 191840; j < 191850; j++) _solve(b, j);
for(j = 192680; j < 192690; j++) _solve(b, j);
for(j = 193520; j < 193530; j++) _solve(b, j);
for(j = 194360; j < 194370; j++) _solve(b, j);
for(j = 195200; j < 195210; j++) _solve(b, j);
for(j = 196040; j < 196050; j++) _solve(b, j);
for(j = 196880; j < 196890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 197720; j < 197730; j++) _solve(b, j);
for(j = 198560; j < 198570; j++) _solve(b, j);
for(j = 199400; j < 199410; j++) _solve(b, j);
for(j = 200240; j < 200250; j++) _solve(b, j);
for(j = 201080; j < 201090; j++) _solve(b, j);
for(j = 201920; j < 201930; j++) _solve(b, j);
for(j = 202760; j < 202770; j++) _solve(b, j);
for(j = 203600; j < 203610; j++) _solve(b, j);
for(j = 204440; j < 204450; j++) _solve(b, j);
for(j = 205280; j < 205290; j++) _solve(b, j);
for(j = 206120; j < 206130; j++) _solve(b, j);
for(j = 206960; j < 206970; j++) _solve(b, j);
for(j = 207800; j < 207810; j++) _solve(b, j);
for(j = 208640; j < 208650; j++) _solve(b, j);
for(j = 209480; j < 209490; j++) _solve(b, j);
for(j = 210320; j < 210330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 211160; j < 211170; j++) _solve(b, j);
for(j = 212000; j < 212010; j++) _solve(b, j);
for(j = 212840; j < 212850; j++) _solve(b, j);
for(j = 213680; j < 213690; j++) _solve(b, j);
for(j = 214520; j < 214530; j++) _solve(b, j);
for(j = 215360; j < 215370; j++) _solve(b, j);
for(j = 216200; j < 216210; j++) _solve(b, j);
for(j = 217040; j < 217050; j++) _solve(b, j);
for(j = 217880; j < 217890; j++) _solve(b, j);
for(j = 218720; j < 218730; j++) _solve(b, j);
for(j = 219560; j < 219570; j++) _solve(b, j);
for(j = 220400; j < 220410; j++) _solve(b, j);
for(j = 221240; j < 221250; j++) _solve(b, j);
for(j = 222080; j < 222090; j++) _solve(b, j);
for(j = 222920; j < 222930; j++) _solve(b, j);
for(j = 223760; j < 223770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 224600; j < 224610; j++) _solve(b, j);
for(j = 225440; j < 225450; j++) _solve(b, j);
for(j = 226280; j < 226290; j++) _solve(b, j);
for(j = 227120; j < 227130; j++) _solve(b, j);
for(j = 227960; j < 227970; j++) _solve(b, j);
for(j = 228800; j < 228810; j++) _solve(b, j);
for(j = 229640; j < 229650; j++) _solve(b, j);
for(j = 230480; j < 230490; j++) _solve(b, j);
for(j = 231320; j < 231330; j++) _solve(b, j);
for(j = 232160; j < 232170; j++) _solve(b, j);
for(j = 233000; j < 233010; j++) _solve(b, j);
for(j = 233840; j < 233850; j++) _solve(b, j);
for(j = 234680; j < 234690; j++) _solve(b, j);
for(j = 235520; j < 235530; j++) _solve(b, j);
for(j = 236360; j < 236370; j++) _solve(b, j);
for(j = 237200; j < 237210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 238040; j < 238050; j++) _solve(b, j);
for(j = 238880; j < 238890; j++) _solve(b, j);
for(j = 239720; j < 239730; j++) _solve(b, j);
for(j = 240560; j < 240570; j++) _solve(b, j);
for(j = 241400; j < 241410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 171690; j < 171700; j++) _solve(b, j);
for(j = 172530; j < 172540; j++) _solve(b, j);
for(j = 173370; j < 173380; j++) _solve(b, j);
for(j = 174210; j < 174220; j++) _solve(b, j);
for(j = 175050; j < 175060; j++) _solve(b, j);
for(j = 175890; j < 175900; j++) _solve(b, j);
for(j = 176730; j < 176740; j++) _solve(b, j);
for(j = 177570; j < 177580; j++) _solve(b, j);
for(j = 178410; j < 178420; j++) _solve(b, j);
for(j = 179250; j < 179260; j++) _solve(b, j);
for(j = 180090; j < 180100; j++) _solve(b, j);
for(j = 180930; j < 180940; j++) _solve(b, j);
for(j = 181770; j < 181780; j++) _solve(b, j);
for(j = 182610; j < 182620; j++) _solve(b, j);
for(j = 183450; j < 183460; j++) _solve(b, j);
for(j = 184290; j < 184300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 185130; j < 185140; j++) _solve(b, j);
for(j = 185970; j < 185980; j++) _solve(b, j);
for(j = 186810; j < 186820; j++) _solve(b, j);
for(j = 187650; j < 187660; j++) _solve(b, j);
for(j = 188490; j < 188500; j++) _solve(b, j);
for(j = 189330; j < 189340; j++) _solve(b, j);
for(j = 190170; j < 190180; j++) _solve(b, j);
for(j = 191010; j < 191020; j++) _solve(b, j);
for(j = 191850; j < 191860; j++) _solve(b, j);
for(j = 192690; j < 192700; j++) _solve(b, j);
for(j = 193530; j < 193540; j++) _solve(b, j);
for(j = 194370; j < 194380; j++) _solve(b, j);
for(j = 195210; j < 195220; j++) _solve(b, j);
for(j = 196050; j < 196060; j++) _solve(b, j);
for(j = 196890; j < 196900; j++) _solve(b, j);
for(j = 197730; j < 197740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 198570; j < 198580; j++) _solve(b, j);
for(j = 199410; j < 199420; j++) _solve(b, j);
for(j = 200250; j < 200260; j++) _solve(b, j);
for(j = 201090; j < 201100; j++) _solve(b, j);
for(j = 201930; j < 201940; j++) _solve(b, j);
for(j = 202770; j < 202780; j++) _solve(b, j);
for(j = 203610; j < 203620; j++) _solve(b, j);
for(j = 204450; j < 204460; j++) _solve(b, j);
for(j = 205290; j < 205300; j++) _solve(b, j);
for(j = 206130; j < 206140; j++) _solve(b, j);
for(j = 206970; j < 206980; j++) _solve(b, j);
for(j = 207810; j < 207820; j++) _solve(b, j);
for(j = 208650; j < 208660; j++) _solve(b, j);
for(j = 209490; j < 209500; j++) _solve(b, j);
for(j = 210330; j < 210340; j++) _solve(b, j);
for(j = 211170; j < 211180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 212010; j < 212020; j++) _solve(b, j);
for(j = 212850; j < 212860; j++) _solve(b, j);
for(j = 213690; j < 213700; j++) _solve(b, j);
for(j = 214530; j < 214540; j++) _solve(b, j);
for(j = 215370; j < 215380; j++) _solve(b, j);
for(j = 216210; j < 216220; j++) _solve(b, j);
for(j = 217050; j < 217060; j++) _solve(b, j);
for(j = 217890; j < 217900; j++) _solve(b, j);
for(j = 218730; j < 218740; j++) _solve(b, j);
for(j = 219570; j < 219580; j++) _solve(b, j);
for(j = 220410; j < 220420; j++) _solve(b, j);
for(j = 221250; j < 221260; j++) _solve(b, j);
for(j = 222090; j < 222100; j++) _solve(b, j);
for(j = 222930; j < 222940; j++) _solve(b, j);
for(j = 223770; j < 223780; j++) _solve(b, j);
for(j = 224610; j < 224620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 225450; j < 225460; j++) _solve(b, j);
for(j = 226290; j < 226300; j++) _solve(b, j);
for(j = 227130; j < 227140; j++) _solve(b, j);
for(j = 227970; j < 227980; j++) _solve(b, j);
for(j = 228810; j < 228820; j++) _solve(b, j);
for(j = 229650; j < 229660; j++) _solve(b, j);
for(j = 230490; j < 230500; j++) _solve(b, j);
for(j = 231330; j < 231340; j++) _solve(b, j);
for(j = 232170; j < 232180; j++) _solve(b, j);
for(j = 233010; j < 233020; j++) _solve(b, j);
for(j = 233850; j < 233860; j++) _solve(b, j);
for(j = 234690; j < 234700; j++) _solve(b, j);
for(j = 235530; j < 235540; j++) _solve(b, j);
for(j = 236370; j < 236380; j++) _solve(b, j);
for(j = 237210; j < 237220; j++) _solve(b, j);
for(j = 238050; j < 238060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 238890; j < 238900; j++) _solve(b, j);
for(j = 239730; j < 239740; j++) _solve(b, j);
for(j = 240570; j < 240580; j++) _solve(b, j);
for(j = 241410; j < 241420; j++) _solve(b, j);
for(j = 242250; j < 242260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 172540; j < 172550; j++) _solve(b, j);
for(j = 173380; j < 173390; j++) _solve(b, j);
for(j = 174220; j < 174230; j++) _solve(b, j);
for(j = 175060; j < 175070; j++) _solve(b, j);
for(j = 175900; j < 175910; j++) _solve(b, j);
for(j = 176740; j < 176750; j++) _solve(b, j);
for(j = 177580; j < 177590; j++) _solve(b, j);
for(j = 178420; j < 178430; j++) _solve(b, j);
for(j = 179260; j < 179270; j++) _solve(b, j);
for(j = 180100; j < 180110; j++) _solve(b, j);
for(j = 180940; j < 180950; j++) _solve(b, j);
for(j = 181780; j < 181790; j++) _solve(b, j);
for(j = 182620; j < 182630; j++) _solve(b, j);
for(j = 183460; j < 183470; j++) _solve(b, j);
for(j = 184300; j < 184310; j++) _solve(b, j);
for(j = 185140; j < 185150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 185980; j < 185990; j++) _solve(b, j);
for(j = 186820; j < 186830; j++) _solve(b, j);
for(j = 187660; j < 187670; j++) _solve(b, j);
for(j = 188500; j < 188510; j++) _solve(b, j);
for(j = 189340; j < 189350; j++) _solve(b, j);
for(j = 190180; j < 190190; j++) _solve(b, j);
for(j = 191020; j < 191030; j++) _solve(b, j);
for(j = 191860; j < 191870; j++) _solve(b, j);
for(j = 192700; j < 192710; j++) _solve(b, j);
for(j = 193540; j < 193550; j++) _solve(b, j);
for(j = 194380; j < 194390; j++) _solve(b, j);
for(j = 195220; j < 195230; j++) _solve(b, j);
for(j = 196060; j < 196070; j++) _solve(b, j);
for(j = 196900; j < 196910; j++) _solve(b, j);
for(j = 197740; j < 197750; j++) _solve(b, j);
for(j = 198580; j < 198590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 199420; j < 199430; j++) _solve(b, j);
for(j = 200260; j < 200270; j++) _solve(b, j);
for(j = 201100; j < 201110; j++) _solve(b, j);
for(j = 201940; j < 201950; j++) _solve(b, j);
for(j = 202780; j < 202790; j++) _solve(b, j);
for(j = 203620; j < 203630; j++) _solve(b, j);
for(j = 204460; j < 204470; j++) _solve(b, j);
for(j = 205300; j < 205310; j++) _solve(b, j);
for(j = 206140; j < 206150; j++) _solve(b, j);
for(j = 206980; j < 206990; j++) _solve(b, j);
for(j = 207820; j < 207830; j++) _solve(b, j);
for(j = 208660; j < 208670; j++) _solve(b, j);
for(j = 209500; j < 209510; j++) _solve(b, j);
for(j = 210340; j < 210350; j++) _solve(b, j);
for(j = 211180; j < 211190; j++) _solve(b, j);
for(j = 212020; j < 212030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 212860; j < 212870; j++) _solve(b, j);
for(j = 213700; j < 213710; j++) _solve(b, j);
for(j = 214540; j < 214550; j++) _solve(b, j);
for(j = 215380; j < 215390; j++) _solve(b, j);
for(j = 216220; j < 216230; j++) _solve(b, j);
for(j = 217060; j < 217070; j++) _solve(b, j);
for(j = 217900; j < 217910; j++) _solve(b, j);
for(j = 218740; j < 218750; j++) _solve(b, j);
for(j = 219580; j < 219590; j++) _solve(b, j);
for(j = 220420; j < 220430; j++) _solve(b, j);
for(j = 221260; j < 221270; j++) _solve(b, j);
for(j = 222100; j < 222110; j++) _solve(b, j);
for(j = 222940; j < 222950; j++) _solve(b, j);
for(j = 223780; j < 223790; j++) _solve(b, j);
for(j = 224620; j < 224630; j++) _solve(b, j);
for(j = 225460; j < 225470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 226300; j < 226310; j++) _solve(b, j);
for(j = 227140; j < 227150; j++) _solve(b, j);
for(j = 227980; j < 227990; j++) _solve(b, j);
for(j = 228820; j < 228830; j++) _solve(b, j);
for(j = 229660; j < 229670; j++) _solve(b, j);
for(j = 230500; j < 230510; j++) _solve(b, j);
for(j = 231340; j < 231350; j++) _solve(b, j);
for(j = 232180; j < 232190; j++) _solve(b, j);
for(j = 233020; j < 233030; j++) _solve(b, j);
for(j = 233860; j < 233870; j++) _solve(b, j);
for(j = 234700; j < 234710; j++) _solve(b, j);
for(j = 235540; j < 235550; j++) _solve(b, j);
for(j = 236380; j < 236390; j++) _solve(b, j);
for(j = 237220; j < 237230; j++) _solve(b, j);
for(j = 238060; j < 238070; j++) _solve(b, j);
for(j = 238900; j < 238910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 239740; j < 239750; j++) _solve(b, j);
for(j = 240580; j < 240590; j++) _solve(b, j);
for(j = 241420; j < 241430; j++) _solve(b, j);
for(j = 242260; j < 242270; j++) _solve(b, j);
for(j = 243100; j < 243110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 173390; j < 173400; j++) _solve(b, j);
for(j = 174230; j < 174240; j++) _solve(b, j);
for(j = 175070; j < 175080; j++) _solve(b, j);
for(j = 175910; j < 175920; j++) _solve(b, j);
for(j = 176750; j < 176760; j++) _solve(b, j);
for(j = 177590; j < 177600; j++) _solve(b, j);
for(j = 178430; j < 178440; j++) _solve(b, j);
for(j = 179270; j < 179280; j++) _solve(b, j);
for(j = 180110; j < 180120; j++) _solve(b, j);
for(j = 180950; j < 180960; j++) _solve(b, j);
for(j = 181790; j < 181800; j++) _solve(b, j);
for(j = 182630; j < 182640; j++) _solve(b, j);
for(j = 183470; j < 183480; j++) _solve(b, j);
for(j = 184310; j < 184320; j++) _solve(b, j);
for(j = 185150; j < 185160; j++) _solve(b, j);
for(j = 185990; j < 186000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 186830; j < 186840; j++) _solve(b, j);
for(j = 187670; j < 187680; j++) _solve(b, j);
for(j = 188510; j < 188520; j++) _solve(b, j);
for(j = 189350; j < 189360; j++) _solve(b, j);
for(j = 190190; j < 190200; j++) _solve(b, j);
for(j = 191030; j < 191040; j++) _solve(b, j);
for(j = 191870; j < 191880; j++) _solve(b, j);
for(j = 192710; j < 192720; j++) _solve(b, j);
for(j = 193550; j < 193560; j++) _solve(b, j);
for(j = 194390; j < 194400; j++) _solve(b, j);
for(j = 195230; j < 195240; j++) _solve(b, j);
for(j = 196070; j < 196080; j++) _solve(b, j);
for(j = 196910; j < 196920; j++) _solve(b, j);
for(j = 197750; j < 197760; j++) _solve(b, j);
for(j = 198590; j < 198600; j++) _solve(b, j);
for(j = 199430; j < 199440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 200270; j < 200280; j++) _solve(b, j);
for(j = 201110; j < 201120; j++) _solve(b, j);
for(j = 201950; j < 201960; j++) _solve(b, j);
for(j = 202790; j < 202800; j++) _solve(b, j);
for(j = 203630; j < 203640; j++) _solve(b, j);
for(j = 204470; j < 204480; j++) _solve(b, j);
for(j = 205310; j < 205320; j++) _solve(b, j);
for(j = 206150; j < 206160; j++) _solve(b, j);
for(j = 206990; j < 207000; j++) _solve(b, j);
for(j = 207830; j < 207840; j++) _solve(b, j);
for(j = 208670; j < 208680; j++) _solve(b, j);
for(j = 209510; j < 209520; j++) _solve(b, j);
for(j = 210350; j < 210360; j++) _solve(b, j);
for(j = 211190; j < 211200; j++) _solve(b, j);
for(j = 212030; j < 212040; j++) _solve(b, j);
for(j = 212870; j < 212880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 213710; j < 213720; j++) _solve(b, j);
for(j = 214550; j < 214560; j++) _solve(b, j);
for(j = 215390; j < 215400; j++) _solve(b, j);
for(j = 216230; j < 216240; j++) _solve(b, j);
for(j = 217070; j < 217080; j++) _solve(b, j);
for(j = 217910; j < 217920; j++) _solve(b, j);
for(j = 218750; j < 218760; j++) _solve(b, j);
for(j = 219590; j < 219600; j++) _solve(b, j);
for(j = 220430; j < 220440; j++) _solve(b, j);
for(j = 221270; j < 221280; j++) _solve(b, j);
for(j = 222110; j < 222120; j++) _solve(b, j);
for(j = 222950; j < 222960; j++) _solve(b, j);
for(j = 223790; j < 223800; j++) _solve(b, j);
for(j = 224630; j < 224640; j++) _solve(b, j);
for(j = 225470; j < 225480; j++) _solve(b, j);
for(j = 226310; j < 226320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 227150; j < 227160; j++) _solve(b, j);
for(j = 227990; j < 228000; j++) _solve(b, j);
for(j = 228830; j < 228840; j++) _solve(b, j);
for(j = 229670; j < 229680; j++) _solve(b, j);
for(j = 230510; j < 230520; j++) _solve(b, j);
for(j = 231350; j < 231360; j++) _solve(b, j);
for(j = 232190; j < 232200; j++) _solve(b, j);
for(j = 233030; j < 233040; j++) _solve(b, j);
for(j = 233870; j < 233880; j++) _solve(b, j);
for(j = 234710; j < 234720; j++) _solve(b, j);
for(j = 235550; j < 235560; j++) _solve(b, j);
for(j = 236390; j < 236400; j++) _solve(b, j);
for(j = 237230; j < 237240; j++) _solve(b, j);
for(j = 238070; j < 238080; j++) _solve(b, j);
for(j = 238910; j < 238920; j++) _solve(b, j);
for(j = 239750; j < 239760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 240590; j < 240600; j++) _solve(b, j);
for(j = 241430; j < 241440; j++) _solve(b, j);
for(j = 242270; j < 242280; j++) _solve(b, j);
for(j = 243110; j < 243120; j++) _solve(b, j);
for(j = 243950; j < 243960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 174240; j < 174250; j++) _solve(b, j);
for(j = 175080; j < 175090; j++) _solve(b, j);
for(j = 175920; j < 175930; j++) _solve(b, j);
for(j = 176760; j < 176770; j++) _solve(b, j);
for(j = 177600; j < 177610; j++) _solve(b, j);
for(j = 178440; j < 178450; j++) _solve(b, j);
for(j = 179280; j < 179290; j++) _solve(b, j);
for(j = 180120; j < 180130; j++) _solve(b, j);
for(j = 180960; j < 180970; j++) _solve(b, j);
for(j = 181800; j < 181810; j++) _solve(b, j);
for(j = 182640; j < 182650; j++) _solve(b, j);
for(j = 183480; j < 183490; j++) _solve(b, j);
for(j = 184320; j < 184330; j++) _solve(b, j);
for(j = 185160; j < 185170; j++) _solve(b, j);
for(j = 186000; j < 186010; j++) _solve(b, j);
for(j = 186840; j < 186850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 187680; j < 187690; j++) _solve(b, j);
for(j = 188520; j < 188530; j++) _solve(b, j);
for(j = 189360; j < 189370; j++) _solve(b, j);
for(j = 190200; j < 190210; j++) _solve(b, j);
for(j = 191040; j < 191050; j++) _solve(b, j);
for(j = 191880; j < 191890; j++) _solve(b, j);
for(j = 192720; j < 192730; j++) _solve(b, j);
for(j = 193560; j < 193570; j++) _solve(b, j);
for(j = 194400; j < 194410; j++) _solve(b, j);
for(j = 195240; j < 195250; j++) _solve(b, j);
for(j = 196080; j < 196090; j++) _solve(b, j);
for(j = 196920; j < 196930; j++) _solve(b, j);
for(j = 197760; j < 197770; j++) _solve(b, j);
for(j = 198600; j < 198610; j++) _solve(b, j);
for(j = 199440; j < 199450; j++) _solve(b, j);
for(j = 200280; j < 200290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 201120; j < 201130; j++) _solve(b, j);
for(j = 201960; j < 201970; j++) _solve(b, j);
for(j = 202800; j < 202810; j++) _solve(b, j);
for(j = 203640; j < 203650; j++) _solve(b, j);
for(j = 204480; j < 204490; j++) _solve(b, j);
for(j = 205320; j < 205330; j++) _solve(b, j);
for(j = 206160; j < 206170; j++) _solve(b, j);
for(j = 207000; j < 207010; j++) _solve(b, j);
for(j = 207840; j < 207850; j++) _solve(b, j);
for(j = 208680; j < 208690; j++) _solve(b, j);
for(j = 209520; j < 209530; j++) _solve(b, j);
for(j = 210360; j < 210370; j++) _solve(b, j);
for(j = 211200; j < 211210; j++) _solve(b, j);
for(j = 212040; j < 212050; j++) _solve(b, j);
for(j = 212880; j < 212890; j++) _solve(b, j);
for(j = 213720; j < 213730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 214560; j < 214570; j++) _solve(b, j);
for(j = 215400; j < 215410; j++) _solve(b, j);
for(j = 216240; j < 216250; j++) _solve(b, j);
for(j = 217080; j < 217090; j++) _solve(b, j);
for(j = 217920; j < 217930; j++) _solve(b, j);
for(j = 218760; j < 218770; j++) _solve(b, j);
for(j = 219600; j < 219610; j++) _solve(b, j);
for(j = 220440; j < 220450; j++) _solve(b, j);
for(j = 221280; j < 221290; j++) _solve(b, j);
for(j = 222120; j < 222130; j++) _solve(b, j);
for(j = 222960; j < 222970; j++) _solve(b, j);
for(j = 223800; j < 223810; j++) _solve(b, j);
for(j = 224640; j < 224650; j++) _solve(b, j);
for(j = 225480; j < 225490; j++) _solve(b, j);
for(j = 226320; j < 226330; j++) _solve(b, j);
for(j = 227160; j < 227170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 228000; j < 228010; j++) _solve(b, j);
for(j = 228840; j < 228850; j++) _solve(b, j);
for(j = 229680; j < 229690; j++) _solve(b, j);
for(j = 230520; j < 230530; j++) _solve(b, j);
for(j = 231360; j < 231370; j++) _solve(b, j);
for(j = 232200; j < 232210; j++) _solve(b, j);
for(j = 233040; j < 233050; j++) _solve(b, j);
for(j = 233880; j < 233890; j++) _solve(b, j);
for(j = 234720; j < 234730; j++) _solve(b, j);
for(j = 235560; j < 235570; j++) _solve(b, j);
for(j = 236400; j < 236410; j++) _solve(b, j);
for(j = 237240; j < 237250; j++) _solve(b, j);
for(j = 238080; j < 238090; j++) _solve(b, j);
for(j = 238920; j < 238930; j++) _solve(b, j);
for(j = 239760; j < 239770; j++) _solve(b, j);
for(j = 240600; j < 240610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 241440; j < 241450; j++) _solve(b, j);
for(j = 242280; j < 242290; j++) _solve(b, j);
for(j = 243120; j < 243130; j++) _solve(b, j);
for(j = 243960; j < 243970; j++) _solve(b, j);
for(j = 244800; j < 244810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 175090; j < 175100; j++) _solve(b, j);
for(j = 175930; j < 175940; j++) _solve(b, j);
for(j = 176770; j < 176780; j++) _solve(b, j);
for(j = 177610; j < 177620; j++) _solve(b, j);
for(j = 178450; j < 178460; j++) _solve(b, j);
for(j = 179290; j < 179300; j++) _solve(b, j);
for(j = 180130; j < 180140; j++) _solve(b, j);
for(j = 180970; j < 180980; j++) _solve(b, j);
for(j = 181810; j < 181820; j++) _solve(b, j);
for(j = 182650; j < 182660; j++) _solve(b, j);
for(j = 183490; j < 183500; j++) _solve(b, j);
for(j = 184330; j < 184340; j++) _solve(b, j);
for(j = 185170; j < 185180; j++) _solve(b, j);
for(j = 186010; j < 186020; j++) _solve(b, j);
for(j = 186850; j < 186860; j++) _solve(b, j);
for(j = 187690; j < 187700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 188530; j < 188540; j++) _solve(b, j);
for(j = 189370; j < 189380; j++) _solve(b, j);
for(j = 190210; j < 190220; j++) _solve(b, j);
for(j = 191050; j < 191060; j++) _solve(b, j);
for(j = 191890; j < 191900; j++) _solve(b, j);
for(j = 192730; j < 192740; j++) _solve(b, j);
for(j = 193570; j < 193580; j++) _solve(b, j);
for(j = 194410; j < 194420; j++) _solve(b, j);
for(j = 195250; j < 195260; j++) _solve(b, j);
for(j = 196090; j < 196100; j++) _solve(b, j);
for(j = 196930; j < 196940; j++) _solve(b, j);
for(j = 197770; j < 197780; j++) _solve(b, j);
for(j = 198610; j < 198620; j++) _solve(b, j);
for(j = 199450; j < 199460; j++) _solve(b, j);
for(j = 200290; j < 200300; j++) _solve(b, j);
for(j = 201130; j < 201140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 201970; j < 201980; j++) _solve(b, j);
for(j = 202810; j < 202820; j++) _solve(b, j);
for(j = 203650; j < 203660; j++) _solve(b, j);
for(j = 204490; j < 204500; j++) _solve(b, j);
for(j = 205330; j < 205340; j++) _solve(b, j);
for(j = 206170; j < 206180; j++) _solve(b, j);
for(j = 207010; j < 207020; j++) _solve(b, j);
for(j = 207850; j < 207860; j++) _solve(b, j);
for(j = 208690; j < 208700; j++) _solve(b, j);
for(j = 209530; j < 209540; j++) _solve(b, j);
for(j = 210370; j < 210380; j++) _solve(b, j);
for(j = 211210; j < 211220; j++) _solve(b, j);
for(j = 212050; j < 212060; j++) _solve(b, j);
for(j = 212890; j < 212900; j++) _solve(b, j);
for(j = 213730; j < 213740; j++) _solve(b, j);
for(j = 214570; j < 214580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 215410; j < 215420; j++) _solve(b, j);
for(j = 216250; j < 216260; j++) _solve(b, j);
for(j = 217090; j < 217100; j++) _solve(b, j);
for(j = 217930; j < 217940; j++) _solve(b, j);
for(j = 218770; j < 218780; j++) _solve(b, j);
for(j = 219610; j < 219620; j++) _solve(b, j);
for(j = 220450; j < 220460; j++) _solve(b, j);
for(j = 221290; j < 221300; j++) _solve(b, j);
for(j = 222130; j < 222140; j++) _solve(b, j);
for(j = 222970; j < 222980; j++) _solve(b, j);
for(j = 223810; j < 223820; j++) _solve(b, j);
for(j = 224650; j < 224660; j++) _solve(b, j);
for(j = 225490; j < 225500; j++) _solve(b, j);
for(j = 226330; j < 226340; j++) _solve(b, j);
for(j = 227170; j < 227180; j++) _solve(b, j);
for(j = 228010; j < 228020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 228850; j < 228860; j++) _solve(b, j);
for(j = 229690; j < 229700; j++) _solve(b, j);
for(j = 230530; j < 230540; j++) _solve(b, j);
for(j = 231370; j < 231380; j++) _solve(b, j);
for(j = 232210; j < 232220; j++) _solve(b, j);
for(j = 233050; j < 233060; j++) _solve(b, j);
for(j = 233890; j < 233900; j++) _solve(b, j);
for(j = 234730; j < 234740; j++) _solve(b, j);
for(j = 235570; j < 235580; j++) _solve(b, j);
for(j = 236410; j < 236420; j++) _solve(b, j);
for(j = 237250; j < 237260; j++) _solve(b, j);
for(j = 238090; j < 238100; j++) _solve(b, j);
for(j = 238930; j < 238940; j++) _solve(b, j);
for(j = 239770; j < 239780; j++) _solve(b, j);
for(j = 240610; j < 240620; j++) _solve(b, j);
for(j = 241450; j < 241460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 242290; j < 242300; j++) _solve(b, j);
for(j = 243130; j < 243140; j++) _solve(b, j);
for(j = 243970; j < 243980; j++) _solve(b, j);
for(j = 244810; j < 244820; j++) _solve(b, j);
for(j = 245650; j < 245660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 175940; j < 175950; j++) _solve(b, j);
for(j = 176780; j < 176790; j++) _solve(b, j);
for(j = 177620; j < 177630; j++) _solve(b, j);
for(j = 178460; j < 178470; j++) _solve(b, j);
for(j = 179300; j < 179310; j++) _solve(b, j);
for(j = 180140; j < 180150; j++) _solve(b, j);
for(j = 180980; j < 180990; j++) _solve(b, j);
for(j = 181820; j < 181830; j++) _solve(b, j);
for(j = 182660; j < 182670; j++) _solve(b, j);
for(j = 183500; j < 183510; j++) _solve(b, j);
for(j = 184340; j < 184350; j++) _solve(b, j);
for(j = 185180; j < 185190; j++) _solve(b, j);
for(j = 186020; j < 186030; j++) _solve(b, j);
for(j = 186860; j < 186870; j++) _solve(b, j);
for(j = 187700; j < 187710; j++) _solve(b, j);
for(j = 188540; j < 188550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 189380; j < 189390; j++) _solve(b, j);
for(j = 190220; j < 190230; j++) _solve(b, j);
for(j = 191060; j < 191070; j++) _solve(b, j);
for(j = 191900; j < 191910; j++) _solve(b, j);
for(j = 192740; j < 192750; j++) _solve(b, j);
for(j = 193580; j < 193590; j++) _solve(b, j);
for(j = 194420; j < 194430; j++) _solve(b, j);
for(j = 195260; j < 195270; j++) _solve(b, j);
for(j = 196100; j < 196110; j++) _solve(b, j);
for(j = 196940; j < 196950; j++) _solve(b, j);
for(j = 197780; j < 197790; j++) _solve(b, j);
for(j = 198620; j < 198630; j++) _solve(b, j);
for(j = 199460; j < 199470; j++) _solve(b, j);
for(j = 200300; j < 200310; j++) _solve(b, j);
for(j = 201140; j < 201150; j++) _solve(b, j);
for(j = 201980; j < 201990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 202820; j < 202830; j++) _solve(b, j);
for(j = 203660; j < 203670; j++) _solve(b, j);
for(j = 204500; j < 204510; j++) _solve(b, j);
for(j = 205340; j < 205350; j++) _solve(b, j);
for(j = 206180; j < 206190; j++) _solve(b, j);
for(j = 207020; j < 207030; j++) _solve(b, j);
for(j = 207860; j < 207870; j++) _solve(b, j);
for(j = 208700; j < 208710; j++) _solve(b, j);
for(j = 209540; j < 209550; j++) _solve(b, j);
for(j = 210380; j < 210390; j++) _solve(b, j);
for(j = 211220; j < 211230; j++) _solve(b, j);
for(j = 212060; j < 212070; j++) _solve(b, j);
for(j = 212900; j < 212910; j++) _solve(b, j);
for(j = 213740; j < 213750; j++) _solve(b, j);
for(j = 214580; j < 214590; j++) _solve(b, j);
for(j = 215420; j < 215430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 216260; j < 216270; j++) _solve(b, j);
for(j = 217100; j < 217110; j++) _solve(b, j);
for(j = 217940; j < 217950; j++) _solve(b, j);
for(j = 218780; j < 218790; j++) _solve(b, j);
for(j = 219620; j < 219630; j++) _solve(b, j);
for(j = 220460; j < 220470; j++) _solve(b, j);
for(j = 221300; j < 221310; j++) _solve(b, j);
for(j = 222140; j < 222150; j++) _solve(b, j);
for(j = 222980; j < 222990; j++) _solve(b, j);
for(j = 223820; j < 223830; j++) _solve(b, j);
for(j = 224660; j < 224670; j++) _solve(b, j);
for(j = 225500; j < 225510; j++) _solve(b, j);
for(j = 226340; j < 226350; j++) _solve(b, j);
for(j = 227180; j < 227190; j++) _solve(b, j);
for(j = 228020; j < 228030; j++) _solve(b, j);
for(j = 228860; j < 228870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 229700; j < 229710; j++) _solve(b, j);
for(j = 230540; j < 230550; j++) _solve(b, j);
for(j = 231380; j < 231390; j++) _solve(b, j);
for(j = 232220; j < 232230; j++) _solve(b, j);
for(j = 233060; j < 233070; j++) _solve(b, j);
for(j = 233900; j < 233910; j++) _solve(b, j);
for(j = 234740; j < 234750; j++) _solve(b, j);
for(j = 235580; j < 235590; j++) _solve(b, j);
for(j = 236420; j < 236430; j++) _solve(b, j);
for(j = 237260; j < 237270; j++) _solve(b, j);
for(j = 238100; j < 238110; j++) _solve(b, j);
for(j = 238940; j < 238950; j++) _solve(b, j);
for(j = 239780; j < 239790; j++) _solve(b, j);
for(j = 240620; j < 240630; j++) _solve(b, j);
for(j = 241460; j < 241470; j++) _solve(b, j);
for(j = 242300; j < 242310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 243140; j < 243150; j++) _solve(b, j);
for(j = 243980; j < 243990; j++) _solve(b, j);
for(j = 244820; j < 244830; j++) _solve(b, j);
for(j = 245660; j < 245670; j++) _solve(b, j);
for(j = 246500; j < 246510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 176790; j < 176800; j++) _solve(b, j);
for(j = 177630; j < 177640; j++) _solve(b, j);
for(j = 178470; j < 178480; j++) _solve(b, j);
for(j = 179310; j < 179320; j++) _solve(b, j);
for(j = 180150; j < 180160; j++) _solve(b, j);
for(j = 180990; j < 181000; j++) _solve(b, j);
for(j = 181830; j < 181840; j++) _solve(b, j);
for(j = 182670; j < 182680; j++) _solve(b, j);
for(j = 183510; j < 183520; j++) _solve(b, j);
for(j = 184350; j < 184360; j++) _solve(b, j);
for(j = 185190; j < 185200; j++) _solve(b, j);
for(j = 186030; j < 186040; j++) _solve(b, j);
for(j = 186870; j < 186880; j++) _solve(b, j);
for(j = 187710; j < 187720; j++) _solve(b, j);
for(j = 188550; j < 188560; j++) _solve(b, j);
for(j = 189390; j < 189400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 190230; j < 190240; j++) _solve(b, j);
for(j = 191070; j < 191080; j++) _solve(b, j);
for(j = 191910; j < 191920; j++) _solve(b, j);
for(j = 192750; j < 192760; j++) _solve(b, j);
for(j = 193590; j < 193600; j++) _solve(b, j);
for(j = 194430; j < 194440; j++) _solve(b, j);
for(j = 195270; j < 195280; j++) _solve(b, j);
for(j = 196110; j < 196120; j++) _solve(b, j);
for(j = 196950; j < 196960; j++) _solve(b, j);
for(j = 197790; j < 197800; j++) _solve(b, j);
for(j = 198630; j < 198640; j++) _solve(b, j);
for(j = 199470; j < 199480; j++) _solve(b, j);
for(j = 200310; j < 200320; j++) _solve(b, j);
for(j = 201150; j < 201160; j++) _solve(b, j);
for(j = 201990; j < 202000; j++) _solve(b, j);
for(j = 202830; j < 202840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 203670; j < 203680; j++) _solve(b, j);
for(j = 204510; j < 204520; j++) _solve(b, j);
for(j = 205350; j < 205360; j++) _solve(b, j);
for(j = 206190; j < 206200; j++) _solve(b, j);
for(j = 207030; j < 207040; j++) _solve(b, j);
for(j = 207870; j < 207880; j++) _solve(b, j);
for(j = 208710; j < 208720; j++) _solve(b, j);
for(j = 209550; j < 209560; j++) _solve(b, j);
for(j = 210390; j < 210400; j++) _solve(b, j);
for(j = 211230; j < 211240; j++) _solve(b, j);
for(j = 212070; j < 212080; j++) _solve(b, j);
for(j = 212910; j < 212920; j++) _solve(b, j);
for(j = 213750; j < 213760; j++) _solve(b, j);
for(j = 214590; j < 214600; j++) _solve(b, j);
for(j = 215430; j < 215440; j++) _solve(b, j);
for(j = 216270; j < 216280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 217110; j < 217120; j++) _solve(b, j);
for(j = 217950; j < 217960; j++) _solve(b, j);
for(j = 218790; j < 218800; j++) _solve(b, j);
for(j = 219630; j < 219640; j++) _solve(b, j);
for(j = 220470; j < 220480; j++) _solve(b, j);
for(j = 221310; j < 221320; j++) _solve(b, j);
for(j = 222150; j < 222160; j++) _solve(b, j);
for(j = 222990; j < 223000; j++) _solve(b, j);
for(j = 223830; j < 223840; j++) _solve(b, j);
for(j = 224670; j < 224680; j++) _solve(b, j);
for(j = 225510; j < 225520; j++) _solve(b, j);
for(j = 226350; j < 226360; j++) _solve(b, j);
for(j = 227190; j < 227200; j++) _solve(b, j);
for(j = 228030; j < 228040; j++) _solve(b, j);
for(j = 228870; j < 228880; j++) _solve(b, j);
for(j = 229710; j < 229720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 230550; j < 230560; j++) _solve(b, j);
for(j = 231390; j < 231400; j++) _solve(b, j);
for(j = 232230; j < 232240; j++) _solve(b, j);
for(j = 233070; j < 233080; j++) _solve(b, j);
for(j = 233910; j < 233920; j++) _solve(b, j);
for(j = 234750; j < 234760; j++) _solve(b, j);
for(j = 235590; j < 235600; j++) _solve(b, j);
for(j = 236430; j < 236440; j++) _solve(b, j);
for(j = 237270; j < 237280; j++) _solve(b, j);
for(j = 238110; j < 238120; j++) _solve(b, j);
for(j = 238950; j < 238960; j++) _solve(b, j);
for(j = 239790; j < 239800; j++) _solve(b, j);
for(j = 240630; j < 240640; j++) _solve(b, j);
for(j = 241470; j < 241480; j++) _solve(b, j);
for(j = 242310; j < 242320; j++) _solve(b, j);
for(j = 243150; j < 243160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 243990; j < 244000; j++) _solve(b, j);
for(j = 244830; j < 244840; j++) _solve(b, j);
for(j = 245670; j < 245680; j++) _solve(b, j);
for(j = 246510; j < 246520; j++) _solve(b, j);
for(j = 247350; j < 247360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 177640; j < 177650; j++) _solve(b, j);
for(j = 178480; j < 178490; j++) _solve(b, j);
for(j = 179320; j < 179330; j++) _solve(b, j);
for(j = 180160; j < 180170; j++) _solve(b, j);
for(j = 181000; j < 181010; j++) _solve(b, j);
for(j = 181840; j < 181850; j++) _solve(b, j);
for(j = 182680; j < 182690; j++) _solve(b, j);
for(j = 183520; j < 183530; j++) _solve(b, j);
for(j = 184360; j < 184370; j++) _solve(b, j);
for(j = 185200; j < 185210; j++) _solve(b, j);
for(j = 186040; j < 186050; j++) _solve(b, j);
for(j = 186880; j < 186890; j++) _solve(b, j);
for(j = 187720; j < 187730; j++) _solve(b, j);
for(j = 188560; j < 188570; j++) _solve(b, j);
for(j = 189400; j < 189410; j++) _solve(b, j);
for(j = 190240; j < 190250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 191080; j < 191090; j++) _solve(b, j);
for(j = 191920; j < 191930; j++) _solve(b, j);
for(j = 192760; j < 192770; j++) _solve(b, j);
for(j = 193600; j < 193610; j++) _solve(b, j);
for(j = 194440; j < 194450; j++) _solve(b, j);
for(j = 195280; j < 195290; j++) _solve(b, j);
for(j = 196120; j < 196130; j++) _solve(b, j);
for(j = 196960; j < 196970; j++) _solve(b, j);
for(j = 197800; j < 197810; j++) _solve(b, j);
for(j = 198640; j < 198650; j++) _solve(b, j);
for(j = 199480; j < 199490; j++) _solve(b, j);
for(j = 200320; j < 200330; j++) _solve(b, j);
for(j = 201160; j < 201170; j++) _solve(b, j);
for(j = 202000; j < 202010; j++) _solve(b, j);
for(j = 202840; j < 202850; j++) _solve(b, j);
for(j = 203680; j < 203690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 204520; j < 204530; j++) _solve(b, j);
for(j = 205360; j < 205370; j++) _solve(b, j);
for(j = 206200; j < 206210; j++) _solve(b, j);
for(j = 207040; j < 207050; j++) _solve(b, j);
for(j = 207880; j < 207890; j++) _solve(b, j);
for(j = 208720; j < 208730; j++) _solve(b, j);
for(j = 209560; j < 209570; j++) _solve(b, j);
for(j = 210400; j < 210410; j++) _solve(b, j);
for(j = 211240; j < 211250; j++) _solve(b, j);
for(j = 212080; j < 212090; j++) _solve(b, j);
for(j = 212920; j < 212930; j++) _solve(b, j);
for(j = 213760; j < 213770; j++) _solve(b, j);
for(j = 214600; j < 214610; j++) _solve(b, j);
for(j = 215440; j < 215450; j++) _solve(b, j);
for(j = 216280; j < 216290; j++) _solve(b, j);
for(j = 217120; j < 217130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 217960; j < 217970; j++) _solve(b, j);
for(j = 218800; j < 218810; j++) _solve(b, j);
for(j = 219640; j < 219650; j++) _solve(b, j);
for(j = 220480; j < 220490; j++) _solve(b, j);
for(j = 221320; j < 221330; j++) _solve(b, j);
for(j = 222160; j < 222170; j++) _solve(b, j);
for(j = 223000; j < 223010; j++) _solve(b, j);
for(j = 223840; j < 223850; j++) _solve(b, j);
for(j = 224680; j < 224690; j++) _solve(b, j);
for(j = 225520; j < 225530; j++) _solve(b, j);
for(j = 226360; j < 226370; j++) _solve(b, j);
for(j = 227200; j < 227210; j++) _solve(b, j);
for(j = 228040; j < 228050; j++) _solve(b, j);
for(j = 228880; j < 228890; j++) _solve(b, j);
for(j = 229720; j < 229730; j++) _solve(b, j);
for(j = 230560; j < 230570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 231400; j < 231410; j++) _solve(b, j);
for(j = 232240; j < 232250; j++) _solve(b, j);
for(j = 233080; j < 233090; j++) _solve(b, j);
for(j = 233920; j < 233930; j++) _solve(b, j);
for(j = 234760; j < 234770; j++) _solve(b, j);
for(j = 235600; j < 235610; j++) _solve(b, j);
for(j = 236440; j < 236450; j++) _solve(b, j);
for(j = 237280; j < 237290; j++) _solve(b, j);
for(j = 238120; j < 238130; j++) _solve(b, j);
for(j = 238960; j < 238970; j++) _solve(b, j);
for(j = 239800; j < 239810; j++) _solve(b, j);
for(j = 240640; j < 240650; j++) _solve(b, j);
for(j = 241480; j < 241490; j++) _solve(b, j);
for(j = 242320; j < 242330; j++) _solve(b, j);
for(j = 243160; j < 243170; j++) _solve(b, j);
for(j = 244000; j < 244010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 244840; j < 244850; j++) _solve(b, j);
for(j = 245680; j < 245690; j++) _solve(b, j);
for(j = 246520; j < 246530; j++) _solve(b, j);
for(j = 247360; j < 247370; j++) _solve(b, j);
for(j = 248200; j < 248210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 178490; j < 178500; j++) _solve(b, j);
for(j = 179330; j < 179340; j++) _solve(b, j);
for(j = 180170; j < 180180; j++) _solve(b, j);
for(j = 181010; j < 181020; j++) _solve(b, j);
for(j = 181850; j < 181860; j++) _solve(b, j);
for(j = 182690; j < 182700; j++) _solve(b, j);
for(j = 183530; j < 183540; j++) _solve(b, j);
for(j = 184370; j < 184380; j++) _solve(b, j);
for(j = 185210; j < 185220; j++) _solve(b, j);
for(j = 186050; j < 186060; j++) _solve(b, j);
for(j = 186890; j < 186900; j++) _solve(b, j);
for(j = 187730; j < 187740; j++) _solve(b, j);
for(j = 188570; j < 188580; j++) _solve(b, j);
for(j = 189410; j < 189420; j++) _solve(b, j);
for(j = 190250; j < 190260; j++) _solve(b, j);
for(j = 191090; j < 191100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 191930; j < 191940; j++) _solve(b, j);
for(j = 192770; j < 192780; j++) _solve(b, j);
for(j = 193610; j < 193620; j++) _solve(b, j);
for(j = 194450; j < 194460; j++) _solve(b, j);
for(j = 195290; j < 195300; j++) _solve(b, j);
for(j = 196130; j < 196140; j++) _solve(b, j);
for(j = 196970; j < 196980; j++) _solve(b, j);
for(j = 197810; j < 197820; j++) _solve(b, j);
for(j = 198650; j < 198660; j++) _solve(b, j);
for(j = 199490; j < 199500; j++) _solve(b, j);
for(j = 200330; j < 200340; j++) _solve(b, j);
for(j = 201170; j < 201180; j++) _solve(b, j);
for(j = 202010; j < 202020; j++) _solve(b, j);
for(j = 202850; j < 202860; j++) _solve(b, j);
for(j = 203690; j < 203700; j++) _solve(b, j);
for(j = 204530; j < 204540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 205370; j < 205380; j++) _solve(b, j);
for(j = 206210; j < 206220; j++) _solve(b, j);
for(j = 207050; j < 207060; j++) _solve(b, j);
for(j = 207890; j < 207900; j++) _solve(b, j);
for(j = 208730; j < 208740; j++) _solve(b, j);
for(j = 209570; j < 209580; j++) _solve(b, j);
for(j = 210410; j < 210420; j++) _solve(b, j);
for(j = 211250; j < 211260; j++) _solve(b, j);
for(j = 212090; j < 212100; j++) _solve(b, j);
for(j = 212930; j < 212940; j++) _solve(b, j);
for(j = 213770; j < 213780; j++) _solve(b, j);
for(j = 214610; j < 214620; j++) _solve(b, j);
for(j = 215450; j < 215460; j++) _solve(b, j);
for(j = 216290; j < 216300; j++) _solve(b, j);
for(j = 217130; j < 217140; j++) _solve(b, j);
for(j = 217970; j < 217980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 218810; j < 218820; j++) _solve(b, j);
for(j = 219650; j < 219660; j++) _solve(b, j);
for(j = 220490; j < 220500; j++) _solve(b, j);
for(j = 221330; j < 221340; j++) _solve(b, j);
for(j = 222170; j < 222180; j++) _solve(b, j);
for(j = 223010; j < 223020; j++) _solve(b, j);
for(j = 223850; j < 223860; j++) _solve(b, j);
for(j = 224690; j < 224700; j++) _solve(b, j);
for(j = 225530; j < 225540; j++) _solve(b, j);
for(j = 226370; j < 226380; j++) _solve(b, j);
for(j = 227210; j < 227220; j++) _solve(b, j);
for(j = 228050; j < 228060; j++) _solve(b, j);
for(j = 228890; j < 228900; j++) _solve(b, j);
for(j = 229730; j < 229740; j++) _solve(b, j);
for(j = 230570; j < 230580; j++) _solve(b, j);
for(j = 231410; j < 231420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 232250; j < 232260; j++) _solve(b, j);
for(j = 233090; j < 233100; j++) _solve(b, j);
for(j = 233930; j < 233940; j++) _solve(b, j);
for(j = 234770; j < 234780; j++) _solve(b, j);
for(j = 235610; j < 235620; j++) _solve(b, j);
for(j = 236450; j < 236460; j++) _solve(b, j);
for(j = 237290; j < 237300; j++) _solve(b, j);
for(j = 238130; j < 238140; j++) _solve(b, j);
for(j = 238970; j < 238980; j++) _solve(b, j);
for(j = 239810; j < 239820; j++) _solve(b, j);
for(j = 240650; j < 240660; j++) _solve(b, j);
for(j = 241490; j < 241500; j++) _solve(b, j);
for(j = 242330; j < 242340; j++) _solve(b, j);
for(j = 243170; j < 243180; j++) _solve(b, j);
for(j = 244010; j < 244020; j++) _solve(b, j);
for(j = 244850; j < 244860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 245690; j < 245700; j++) _solve(b, j);
for(j = 246530; j < 246540; j++) _solve(b, j);
for(j = 247370; j < 247380; j++) _solve(b, j);
for(j = 248210; j < 248220; j++) _solve(b, j);
for(j = 249050; j < 249060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 179340; j < 179350; j++) _solve(b, j);
for(j = 180180; j < 180190; j++) _solve(b, j);
for(j = 181020; j < 181030; j++) _solve(b, j);
for(j = 181860; j < 181870; j++) _solve(b, j);
for(j = 182700; j < 182710; j++) _solve(b, j);
for(j = 183540; j < 183550; j++) _solve(b, j);
for(j = 184380; j < 184390; j++) _solve(b, j);
for(j = 185220; j < 185230; j++) _solve(b, j);
for(j = 186060; j < 186070; j++) _solve(b, j);
for(j = 186900; j < 186910; j++) _solve(b, j);
for(j = 187740; j < 187750; j++) _solve(b, j);
for(j = 188580; j < 188590; j++) _solve(b, j);
for(j = 189420; j < 189430; j++) _solve(b, j);
for(j = 190260; j < 190270; j++) _solve(b, j);
for(j = 191100; j < 191110; j++) _solve(b, j);
for(j = 191940; j < 191950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 192780; j < 192790; j++) _solve(b, j);
for(j = 193620; j < 193630; j++) _solve(b, j);
for(j = 194460; j < 194470; j++) _solve(b, j);
for(j = 195300; j < 195310; j++) _solve(b, j);
for(j = 196140; j < 196150; j++) _solve(b, j);
for(j = 196980; j < 196990; j++) _solve(b, j);
for(j = 197820; j < 197830; j++) _solve(b, j);
for(j = 198660; j < 198670; j++) _solve(b, j);
for(j = 199500; j < 199510; j++) _solve(b, j);
for(j = 200340; j < 200350; j++) _solve(b, j);
for(j = 201180; j < 201190; j++) _solve(b, j);
for(j = 202020; j < 202030; j++) _solve(b, j);
for(j = 202860; j < 202870; j++) _solve(b, j);
for(j = 203700; j < 203710; j++) _solve(b, j);
for(j = 204540; j < 204550; j++) _solve(b, j);
for(j = 205380; j < 205390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 206220; j < 206230; j++) _solve(b, j);
for(j = 207060; j < 207070; j++) _solve(b, j);
for(j = 207900; j < 207910; j++) _solve(b, j);
for(j = 208740; j < 208750; j++) _solve(b, j);
for(j = 209580; j < 209590; j++) _solve(b, j);
for(j = 210420; j < 210430; j++) _solve(b, j);
for(j = 211260; j < 211270; j++) _solve(b, j);
for(j = 212100; j < 212110; j++) _solve(b, j);
for(j = 212940; j < 212950; j++) _solve(b, j);
for(j = 213780; j < 213790; j++) _solve(b, j);
for(j = 214620; j < 214630; j++) _solve(b, j);
for(j = 215460; j < 215470; j++) _solve(b, j);
for(j = 216300; j < 216310; j++) _solve(b, j);
for(j = 217140; j < 217150; j++) _solve(b, j);
for(j = 217980; j < 217990; j++) _solve(b, j);
for(j = 218820; j < 218830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 219660; j < 219670; j++) _solve(b, j);
for(j = 220500; j < 220510; j++) _solve(b, j);
for(j = 221340; j < 221350; j++) _solve(b, j);
for(j = 222180; j < 222190; j++) _solve(b, j);
for(j = 223020; j < 223030; j++) _solve(b, j);
for(j = 223860; j < 223870; j++) _solve(b, j);
for(j = 224700; j < 224710; j++) _solve(b, j);
for(j = 225540; j < 225550; j++) _solve(b, j);
for(j = 226380; j < 226390; j++) _solve(b, j);
for(j = 227220; j < 227230; j++) _solve(b, j);
for(j = 228060; j < 228070; j++) _solve(b, j);
for(j = 228900; j < 228910; j++) _solve(b, j);
for(j = 229740; j < 229750; j++) _solve(b, j);
for(j = 230580; j < 230590; j++) _solve(b, j);
for(j = 231420; j < 231430; j++) _solve(b, j);
for(j = 232260; j < 232270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 233100; j < 233110; j++) _solve(b, j);
for(j = 233940; j < 233950; j++) _solve(b, j);
for(j = 234780; j < 234790; j++) _solve(b, j);
for(j = 235620; j < 235630; j++) _solve(b, j);
for(j = 236460; j < 236470; j++) _solve(b, j);
for(j = 237300; j < 237310; j++) _solve(b, j);
for(j = 238140; j < 238150; j++) _solve(b, j);
for(j = 238980; j < 238990; j++) _solve(b, j);
for(j = 239820; j < 239830; j++) _solve(b, j);
for(j = 240660; j < 240670; j++) _solve(b, j);
for(j = 241500; j < 241510; j++) _solve(b, j);
for(j = 242340; j < 242350; j++) _solve(b, j);
for(j = 243180; j < 243190; j++) _solve(b, j);
for(j = 244020; j < 244030; j++) _solve(b, j);
for(j = 244860; j < 244870; j++) _solve(b, j);
for(j = 245700; j < 245710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 246540; j < 246550; j++) _solve(b, j);
for(j = 247380; j < 247390; j++) _solve(b, j);
for(j = 248220; j < 248230; j++) _solve(b, j);
for(j = 249060; j < 249070; j++) _solve(b, j);
for(j = 249900; j < 249910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 180190; j < 180200; j++) _solve(b, j);
for(j = 181030; j < 181040; j++) _solve(b, j);
for(j = 181870; j < 181880; j++) _solve(b, j);
for(j = 182710; j < 182720; j++) _solve(b, j);
for(j = 183550; j < 183560; j++) _solve(b, j);
for(j = 184390; j < 184400; j++) _solve(b, j);
for(j = 185230; j < 185240; j++) _solve(b, j);
for(j = 186070; j < 186080; j++) _solve(b, j);
for(j = 186910; j < 186920; j++) _solve(b, j);
for(j = 187750; j < 187760; j++) _solve(b, j);
for(j = 188590; j < 188600; j++) _solve(b, j);
for(j = 189430; j < 189440; j++) _solve(b, j);
for(j = 190270; j < 190280; j++) _solve(b, j);
for(j = 191110; j < 191120; j++) _solve(b, j);
for(j = 191950; j < 191960; j++) _solve(b, j);
for(j = 192790; j < 192800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 193630; j < 193640; j++) _solve(b, j);
for(j = 194470; j < 194480; j++) _solve(b, j);
for(j = 195310; j < 195320; j++) _solve(b, j);
for(j = 196150; j < 196160; j++) _solve(b, j);
for(j = 196990; j < 197000; j++) _solve(b, j);
for(j = 197830; j < 197840; j++) _solve(b, j);
for(j = 198670; j < 198680; j++) _solve(b, j);
for(j = 199510; j < 199520; j++) _solve(b, j);
for(j = 200350; j < 200360; j++) _solve(b, j);
for(j = 201190; j < 201200; j++) _solve(b, j);
for(j = 202030; j < 202040; j++) _solve(b, j);
for(j = 202870; j < 202880; j++) _solve(b, j);
for(j = 203710; j < 203720; j++) _solve(b, j);
for(j = 204550; j < 204560; j++) _solve(b, j);
for(j = 205390; j < 205400; j++) _solve(b, j);
for(j = 206230; j < 206240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 207070; j < 207080; j++) _solve(b, j);
for(j = 207910; j < 207920; j++) _solve(b, j);
for(j = 208750; j < 208760; j++) _solve(b, j);
for(j = 209590; j < 209600; j++) _solve(b, j);
for(j = 210430; j < 210440; j++) _solve(b, j);
for(j = 211270; j < 211280; j++) _solve(b, j);
for(j = 212110; j < 212120; j++) _solve(b, j);
for(j = 212950; j < 212960; j++) _solve(b, j);
for(j = 213790; j < 213800; j++) _solve(b, j);
for(j = 214630; j < 214640; j++) _solve(b, j);
for(j = 215470; j < 215480; j++) _solve(b, j);
for(j = 216310; j < 216320; j++) _solve(b, j);
for(j = 217150; j < 217160; j++) _solve(b, j);
for(j = 217990; j < 218000; j++) _solve(b, j);
for(j = 218830; j < 218840; j++) _solve(b, j);
for(j = 219670; j < 219680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 220510; j < 220520; j++) _solve(b, j);
for(j = 221350; j < 221360; j++) _solve(b, j);
for(j = 222190; j < 222200; j++) _solve(b, j);
for(j = 223030; j < 223040; j++) _solve(b, j);
for(j = 223870; j < 223880; j++) _solve(b, j);
for(j = 224710; j < 224720; j++) _solve(b, j);
for(j = 225550; j < 225560; j++) _solve(b, j);
for(j = 226390; j < 226400; j++) _solve(b, j);
for(j = 227230; j < 227240; j++) _solve(b, j);
for(j = 228070; j < 228080; j++) _solve(b, j);
for(j = 228910; j < 228920; j++) _solve(b, j);
for(j = 229750; j < 229760; j++) _solve(b, j);
for(j = 230590; j < 230600; j++) _solve(b, j);
for(j = 231430; j < 231440; j++) _solve(b, j);
for(j = 232270; j < 232280; j++) _solve(b, j);
for(j = 233110; j < 233120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 233950; j < 233960; j++) _solve(b, j);
for(j = 234790; j < 234800; j++) _solve(b, j);
for(j = 235630; j < 235640; j++) _solve(b, j);
for(j = 236470; j < 236480; j++) _solve(b, j);
for(j = 237310; j < 237320; j++) _solve(b, j);
for(j = 238150; j < 238160; j++) _solve(b, j);
for(j = 238990; j < 239000; j++) _solve(b, j);
for(j = 239830; j < 239840; j++) _solve(b, j);
for(j = 240670; j < 240680; j++) _solve(b, j);
for(j = 241510; j < 241520; j++) _solve(b, j);
for(j = 242350; j < 242360; j++) _solve(b, j);
for(j = 243190; j < 243200; j++) _solve(b, j);
for(j = 244030; j < 244040; j++) _solve(b, j);
for(j = 244870; j < 244880; j++) _solve(b, j);
for(j = 245710; j < 245720; j++) _solve(b, j);
for(j = 246550; j < 246560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 247390; j < 247400; j++) _solve(b, j);
for(j = 248230; j < 248240; j++) _solve(b, j);
for(j = 249070; j < 249080; j++) _solve(b, j);
for(j = 249910; j < 249920; j++) _solve(b, j);
for(j = 250750; j < 250760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 181040; j < 181050; j++) _solve(b, j);
for(j = 181880; j < 181890; j++) _solve(b, j);
for(j = 182720; j < 182730; j++) _solve(b, j);
for(j = 183560; j < 183570; j++) _solve(b, j);
for(j = 184400; j < 184410; j++) _solve(b, j);
for(j = 185240; j < 185250; j++) _solve(b, j);
for(j = 186080; j < 186090; j++) _solve(b, j);
for(j = 186920; j < 186930; j++) _solve(b, j);
for(j = 187760; j < 187770; j++) _solve(b, j);
for(j = 188600; j < 188610; j++) _solve(b, j);
for(j = 189440; j < 189450; j++) _solve(b, j);
for(j = 190280; j < 190290; j++) _solve(b, j);
for(j = 191120; j < 191130; j++) _solve(b, j);
for(j = 191960; j < 191970; j++) _solve(b, j);
for(j = 192800; j < 192810; j++) _solve(b, j);
for(j = 193640; j < 193650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 194480; j < 194490; j++) _solve(b, j);
for(j = 195320; j < 195330; j++) _solve(b, j);
for(j = 196160; j < 196170; j++) _solve(b, j);
for(j = 197000; j < 197010; j++) _solve(b, j);
for(j = 197840; j < 197850; j++) _solve(b, j);
for(j = 198680; j < 198690; j++) _solve(b, j);
for(j = 199520; j < 199530; j++) _solve(b, j);
for(j = 200360; j < 200370; j++) _solve(b, j);
for(j = 201200; j < 201210; j++) _solve(b, j);
for(j = 202040; j < 202050; j++) _solve(b, j);
for(j = 202880; j < 202890; j++) _solve(b, j);
for(j = 203720; j < 203730; j++) _solve(b, j);
for(j = 204560; j < 204570; j++) _solve(b, j);
for(j = 205400; j < 205410; j++) _solve(b, j);
for(j = 206240; j < 206250; j++) _solve(b, j);
for(j = 207080; j < 207090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 207920; j < 207930; j++) _solve(b, j);
for(j = 208760; j < 208770; j++) _solve(b, j);
for(j = 209600; j < 209610; j++) _solve(b, j);
for(j = 210440; j < 210450; j++) _solve(b, j);
for(j = 211280; j < 211290; j++) _solve(b, j);
for(j = 212120; j < 212130; j++) _solve(b, j);
for(j = 212960; j < 212970; j++) _solve(b, j);
for(j = 213800; j < 213810; j++) _solve(b, j);
for(j = 214640; j < 214650; j++) _solve(b, j);
for(j = 215480; j < 215490; j++) _solve(b, j);
for(j = 216320; j < 216330; j++) _solve(b, j);
for(j = 217160; j < 217170; j++) _solve(b, j);
for(j = 218000; j < 218010; j++) _solve(b, j);
for(j = 218840; j < 218850; j++) _solve(b, j);
for(j = 219680; j < 219690; j++) _solve(b, j);
for(j = 220520; j < 220530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 221360; j < 221370; j++) _solve(b, j);
for(j = 222200; j < 222210; j++) _solve(b, j);
for(j = 223040; j < 223050; j++) _solve(b, j);
for(j = 223880; j < 223890; j++) _solve(b, j);
for(j = 224720; j < 224730; j++) _solve(b, j);
for(j = 225560; j < 225570; j++) _solve(b, j);
for(j = 226400; j < 226410; j++) _solve(b, j);
for(j = 227240; j < 227250; j++) _solve(b, j);
for(j = 228080; j < 228090; j++) _solve(b, j);
for(j = 228920; j < 228930; j++) _solve(b, j);
for(j = 229760; j < 229770; j++) _solve(b, j);
for(j = 230600; j < 230610; j++) _solve(b, j);
for(j = 231440; j < 231450; j++) _solve(b, j);
for(j = 232280; j < 232290; j++) _solve(b, j);
for(j = 233120; j < 233130; j++) _solve(b, j);
for(j = 233960; j < 233970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 234800; j < 234810; j++) _solve(b, j);
for(j = 235640; j < 235650; j++) _solve(b, j);
for(j = 236480; j < 236490; j++) _solve(b, j);
for(j = 237320; j < 237330; j++) _solve(b, j);
for(j = 238160; j < 238170; j++) _solve(b, j);
for(j = 239000; j < 239010; j++) _solve(b, j);
for(j = 239840; j < 239850; j++) _solve(b, j);
for(j = 240680; j < 240690; j++) _solve(b, j);
for(j = 241520; j < 241530; j++) _solve(b, j);
for(j = 242360; j < 242370; j++) _solve(b, j);
for(j = 243200; j < 243210; j++) _solve(b, j);
for(j = 244040; j < 244050; j++) _solve(b, j);
for(j = 244880; j < 244890; j++) _solve(b, j);
for(j = 245720; j < 245730; j++) _solve(b, j);
for(j = 246560; j < 246570; j++) _solve(b, j);
for(j = 247400; j < 247410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 248240; j < 248250; j++) _solve(b, j);
for(j = 249080; j < 249090; j++) _solve(b, j);
for(j = 249920; j < 249930; j++) _solve(b, j);
for(j = 250760; j < 250770; j++) _solve(b, j);
for(j = 251600; j < 251610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 181890; j < 181900; j++) _solve(b, j);
for(j = 182730; j < 182740; j++) _solve(b, j);
for(j = 183570; j < 183580; j++) _solve(b, j);
for(j = 184410; j < 184420; j++) _solve(b, j);
for(j = 185250; j < 185260; j++) _solve(b, j);
for(j = 186090; j < 186100; j++) _solve(b, j);
for(j = 186930; j < 186940; j++) _solve(b, j);
for(j = 187770; j < 187780; j++) _solve(b, j);
for(j = 188610; j < 188620; j++) _solve(b, j);
for(j = 189450; j < 189460; j++) _solve(b, j);
for(j = 190290; j < 190300; j++) _solve(b, j);
for(j = 191130; j < 191140; j++) _solve(b, j);
for(j = 191970; j < 191980; j++) _solve(b, j);
for(j = 192810; j < 192820; j++) _solve(b, j);
for(j = 193650; j < 193660; j++) _solve(b, j);
for(j = 194490; j < 194500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 195330; j < 195340; j++) _solve(b, j);
for(j = 196170; j < 196180; j++) _solve(b, j);
for(j = 197010; j < 197020; j++) _solve(b, j);
for(j = 197850; j < 197860; j++) _solve(b, j);
for(j = 198690; j < 198700; j++) _solve(b, j);
for(j = 199530; j < 199540; j++) _solve(b, j);
for(j = 200370; j < 200380; j++) _solve(b, j);
for(j = 201210; j < 201220; j++) _solve(b, j);
for(j = 202050; j < 202060; j++) _solve(b, j);
for(j = 202890; j < 202900; j++) _solve(b, j);
for(j = 203730; j < 203740; j++) _solve(b, j);
for(j = 204570; j < 204580; j++) _solve(b, j);
for(j = 205410; j < 205420; j++) _solve(b, j);
for(j = 206250; j < 206260; j++) _solve(b, j);
for(j = 207090; j < 207100; j++) _solve(b, j);
for(j = 207930; j < 207940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 208770; j < 208780; j++) _solve(b, j);
for(j = 209610; j < 209620; j++) _solve(b, j);
for(j = 210450; j < 210460; j++) _solve(b, j);
for(j = 211290; j < 211300; j++) _solve(b, j);
for(j = 212130; j < 212140; j++) _solve(b, j);
for(j = 212970; j < 212980; j++) _solve(b, j);
for(j = 213810; j < 213820; j++) _solve(b, j);
for(j = 214650; j < 214660; j++) _solve(b, j);
for(j = 215490; j < 215500; j++) _solve(b, j);
for(j = 216330; j < 216340; j++) _solve(b, j);
for(j = 217170; j < 217180; j++) _solve(b, j);
for(j = 218010; j < 218020; j++) _solve(b, j);
for(j = 218850; j < 218860; j++) _solve(b, j);
for(j = 219690; j < 219700; j++) _solve(b, j);
for(j = 220530; j < 220540; j++) _solve(b, j);
for(j = 221370; j < 221380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 222210; j < 222220; j++) _solve(b, j);
for(j = 223050; j < 223060; j++) _solve(b, j);
for(j = 223890; j < 223900; j++) _solve(b, j);
for(j = 224730; j < 224740; j++) _solve(b, j);
for(j = 225570; j < 225580; j++) _solve(b, j);
for(j = 226410; j < 226420; j++) _solve(b, j);
for(j = 227250; j < 227260; j++) _solve(b, j);
for(j = 228090; j < 228100; j++) _solve(b, j);
for(j = 228930; j < 228940; j++) _solve(b, j);
for(j = 229770; j < 229780; j++) _solve(b, j);
for(j = 230610; j < 230620; j++) _solve(b, j);
for(j = 231450; j < 231460; j++) _solve(b, j);
for(j = 232290; j < 232300; j++) _solve(b, j);
for(j = 233130; j < 233140; j++) _solve(b, j);
for(j = 233970; j < 233980; j++) _solve(b, j);
for(j = 234810; j < 234820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 235650; j < 235660; j++) _solve(b, j);
for(j = 236490; j < 236500; j++) _solve(b, j);
for(j = 237330; j < 237340; j++) _solve(b, j);
for(j = 238170; j < 238180; j++) _solve(b, j);
for(j = 239010; j < 239020; j++) _solve(b, j);
for(j = 239850; j < 239860; j++) _solve(b, j);
for(j = 240690; j < 240700; j++) _solve(b, j);
for(j = 241530; j < 241540; j++) _solve(b, j);
for(j = 242370; j < 242380; j++) _solve(b, j);
for(j = 243210; j < 243220; j++) _solve(b, j);
for(j = 244050; j < 244060; j++) _solve(b, j);
for(j = 244890; j < 244900; j++) _solve(b, j);
for(j = 245730; j < 245740; j++) _solve(b, j);
for(j = 246570; j < 246580; j++) _solve(b, j);
for(j = 247410; j < 247420; j++) _solve(b, j);
for(j = 248250; j < 248260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 249090; j < 249100; j++) _solve(b, j);
for(j = 249930; j < 249940; j++) _solve(b, j);
for(j = 250770; j < 250780; j++) _solve(b, j);
for(j = 251610; j < 251620; j++) _solve(b, j);
for(j = 252450; j < 252460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 182740; j < 182750; j++) _solve(b, j);
for(j = 183580; j < 183590; j++) _solve(b, j);
for(j = 184420; j < 184430; j++) _solve(b, j);
for(j = 185260; j < 185270; j++) _solve(b, j);
for(j = 186100; j < 186110; j++) _solve(b, j);
for(j = 186940; j < 186950; j++) _solve(b, j);
for(j = 187780; j < 187790; j++) _solve(b, j);
for(j = 188620; j < 188630; j++) _solve(b, j);
for(j = 189460; j < 189470; j++) _solve(b, j);
for(j = 190300; j < 190310; j++) _solve(b, j);
for(j = 191140; j < 191150; j++) _solve(b, j);
for(j = 191980; j < 191990; j++) _solve(b, j);
for(j = 192820; j < 192830; j++) _solve(b, j);
for(j = 193660; j < 193670; j++) _solve(b, j);
for(j = 194500; j < 194510; j++) _solve(b, j);
for(j = 195340; j < 195350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 196180; j < 196190; j++) _solve(b, j);
for(j = 197020; j < 197030; j++) _solve(b, j);
for(j = 197860; j < 197870; j++) _solve(b, j);
for(j = 198700; j < 198710; j++) _solve(b, j);
for(j = 199540; j < 199550; j++) _solve(b, j);
for(j = 200380; j < 200390; j++) _solve(b, j);
for(j = 201220; j < 201230; j++) _solve(b, j);
for(j = 202060; j < 202070; j++) _solve(b, j);
for(j = 202900; j < 202910; j++) _solve(b, j);
for(j = 203740; j < 203750; j++) _solve(b, j);
for(j = 204580; j < 204590; j++) _solve(b, j);
for(j = 205420; j < 205430; j++) _solve(b, j);
for(j = 206260; j < 206270; j++) _solve(b, j);
for(j = 207100; j < 207110; j++) _solve(b, j);
for(j = 207940; j < 207950; j++) _solve(b, j);
for(j = 208780; j < 208790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 209620; j < 209630; j++) _solve(b, j);
for(j = 210460; j < 210470; j++) _solve(b, j);
for(j = 211300; j < 211310; j++) _solve(b, j);
for(j = 212140; j < 212150; j++) _solve(b, j);
for(j = 212980; j < 212990; j++) _solve(b, j);
for(j = 213820; j < 213830; j++) _solve(b, j);
for(j = 214660; j < 214670; j++) _solve(b, j);
for(j = 215500; j < 215510; j++) _solve(b, j);
for(j = 216340; j < 216350; j++) _solve(b, j);
for(j = 217180; j < 217190; j++) _solve(b, j);
for(j = 218020; j < 218030; j++) _solve(b, j);
for(j = 218860; j < 218870; j++) _solve(b, j);
for(j = 219700; j < 219710; j++) _solve(b, j);
for(j = 220540; j < 220550; j++) _solve(b, j);
for(j = 221380; j < 221390; j++) _solve(b, j);
for(j = 222220; j < 222230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 223060; j < 223070; j++) _solve(b, j);
for(j = 223900; j < 223910; j++) _solve(b, j);
for(j = 224740; j < 224750; j++) _solve(b, j);
for(j = 225580; j < 225590; j++) _solve(b, j);
for(j = 226420; j < 226430; j++) _solve(b, j);
for(j = 227260; j < 227270; j++) _solve(b, j);
for(j = 228100; j < 228110; j++) _solve(b, j);
for(j = 228940; j < 228950; j++) _solve(b, j);
for(j = 229780; j < 229790; j++) _solve(b, j);
for(j = 230620; j < 230630; j++) _solve(b, j);
for(j = 231460; j < 231470; j++) _solve(b, j);
for(j = 232300; j < 232310; j++) _solve(b, j);
for(j = 233140; j < 233150; j++) _solve(b, j);
for(j = 233980; j < 233990; j++) _solve(b, j);
for(j = 234820; j < 234830; j++) _solve(b, j);
for(j = 235660; j < 235670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 236500; j < 236510; j++) _solve(b, j);
for(j = 237340; j < 237350; j++) _solve(b, j);
for(j = 238180; j < 238190; j++) _solve(b, j);
for(j = 239020; j < 239030; j++) _solve(b, j);
for(j = 239860; j < 239870; j++) _solve(b, j);
for(j = 240700; j < 240710; j++) _solve(b, j);
for(j = 241540; j < 241550; j++) _solve(b, j);
for(j = 242380; j < 242390; j++) _solve(b, j);
for(j = 243220; j < 243230; j++) _solve(b, j);
for(j = 244060; j < 244070; j++) _solve(b, j);
for(j = 244900; j < 244910; j++) _solve(b, j);
for(j = 245740; j < 245750; j++) _solve(b, j);
for(j = 246580; j < 246590; j++) _solve(b, j);
for(j = 247420; j < 247430; j++) _solve(b, j);
for(j = 248260; j < 248270; j++) _solve(b, j);
for(j = 249100; j < 249110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 249940; j < 249950; j++) _solve(b, j);
for(j = 250780; j < 250790; j++) _solve(b, j);
for(j = 251620; j < 251630; j++) _solve(b, j);
for(j = 252460; j < 252470; j++) _solve(b, j);
for(j = 253300; j < 253310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 183590; j < 183600; j++) _solve(b, j);
for(j = 184430; j < 184440; j++) _solve(b, j);
for(j = 185270; j < 185280; j++) _solve(b, j);
for(j = 186110; j < 186120; j++) _solve(b, j);
for(j = 186950; j < 186960; j++) _solve(b, j);
for(j = 187790; j < 187800; j++) _solve(b, j);
for(j = 188630; j < 188640; j++) _solve(b, j);
for(j = 189470; j < 189480; j++) _solve(b, j);
for(j = 190310; j < 190320; j++) _solve(b, j);
for(j = 191150; j < 191160; j++) _solve(b, j);
for(j = 191990; j < 192000; j++) _solve(b, j);
for(j = 192830; j < 192840; j++) _solve(b, j);
for(j = 193670; j < 193680; j++) _solve(b, j);
for(j = 194510; j < 194520; j++) _solve(b, j);
for(j = 195350; j < 195360; j++) _solve(b, j);
for(j = 196190; j < 196200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 197030; j < 197040; j++) _solve(b, j);
for(j = 197870; j < 197880; j++) _solve(b, j);
for(j = 198710; j < 198720; j++) _solve(b, j);
for(j = 199550; j < 199560; j++) _solve(b, j);
for(j = 200390; j < 200400; j++) _solve(b, j);
for(j = 201230; j < 201240; j++) _solve(b, j);
for(j = 202070; j < 202080; j++) _solve(b, j);
for(j = 202910; j < 202920; j++) _solve(b, j);
for(j = 203750; j < 203760; j++) _solve(b, j);
for(j = 204590; j < 204600; j++) _solve(b, j);
for(j = 205430; j < 205440; j++) _solve(b, j);
for(j = 206270; j < 206280; j++) _solve(b, j);
for(j = 207110; j < 207120; j++) _solve(b, j);
for(j = 207950; j < 207960; j++) _solve(b, j);
for(j = 208790; j < 208800; j++) _solve(b, j);
for(j = 209630; j < 209640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 210470; j < 210480; j++) _solve(b, j);
for(j = 211310; j < 211320; j++) _solve(b, j);
for(j = 212150; j < 212160; j++) _solve(b, j);
for(j = 212990; j < 213000; j++) _solve(b, j);
for(j = 213830; j < 213840; j++) _solve(b, j);
for(j = 214670; j < 214680; j++) _solve(b, j);
for(j = 215510; j < 215520; j++) _solve(b, j);
for(j = 216350; j < 216360; j++) _solve(b, j);
for(j = 217190; j < 217200; j++) _solve(b, j);
for(j = 218030; j < 218040; j++) _solve(b, j);
for(j = 218870; j < 218880; j++) _solve(b, j);
for(j = 219710; j < 219720; j++) _solve(b, j);
for(j = 220550; j < 220560; j++) _solve(b, j);
for(j = 221390; j < 221400; j++) _solve(b, j);
for(j = 222230; j < 222240; j++) _solve(b, j);
for(j = 223070; j < 223080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 223910; j < 223920; j++) _solve(b, j);
for(j = 224750; j < 224760; j++) _solve(b, j);
for(j = 225590; j < 225600; j++) _solve(b, j);
for(j = 226430; j < 226440; j++) _solve(b, j);
for(j = 227270; j < 227280; j++) _solve(b, j);
for(j = 228110; j < 228120; j++) _solve(b, j);
for(j = 228950; j < 228960; j++) _solve(b, j);
for(j = 229790; j < 229800; j++) _solve(b, j);
for(j = 230630; j < 230640; j++) _solve(b, j);
for(j = 231470; j < 231480; j++) _solve(b, j);
for(j = 232310; j < 232320; j++) _solve(b, j);
for(j = 233150; j < 233160; j++) _solve(b, j);
for(j = 233990; j < 234000; j++) _solve(b, j);
for(j = 234830; j < 234840; j++) _solve(b, j);
for(j = 235670; j < 235680; j++) _solve(b, j);
for(j = 236510; j < 236520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 237350; j < 237360; j++) _solve(b, j);
for(j = 238190; j < 238200; j++) _solve(b, j);
for(j = 239030; j < 239040; j++) _solve(b, j);
for(j = 239870; j < 239880; j++) _solve(b, j);
for(j = 240710; j < 240720; j++) _solve(b, j);
for(j = 241550; j < 241560; j++) _solve(b, j);
for(j = 242390; j < 242400; j++) _solve(b, j);
for(j = 243230; j < 243240; j++) _solve(b, j);
for(j = 244070; j < 244080; j++) _solve(b, j);
for(j = 244910; j < 244920; j++) _solve(b, j);
for(j = 245750; j < 245760; j++) _solve(b, j);
for(j = 246590; j < 246600; j++) _solve(b, j);
for(j = 247430; j < 247440; j++) _solve(b, j);
for(j = 248270; j < 248280; j++) _solve(b, j);
for(j = 249110; j < 249120; j++) _solve(b, j);
for(j = 249950; j < 249960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 250790; j < 250800; j++) _solve(b, j);
for(j = 251630; j < 251640; j++) _solve(b, j);
for(j = 252470; j < 252480; j++) _solve(b, j);
for(j = 253310; j < 253320; j++) _solve(b, j);
for(j = 254150; j < 254160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 184440; j < 184450; j++) _solve(b, j);
for(j = 185280; j < 185290; j++) _solve(b, j);
for(j = 186120; j < 186130; j++) _solve(b, j);
for(j = 186960; j < 186970; j++) _solve(b, j);
for(j = 187800; j < 187810; j++) _solve(b, j);
for(j = 188640; j < 188650; j++) _solve(b, j);
for(j = 189480; j < 189490; j++) _solve(b, j);
for(j = 190320; j < 190330; j++) _solve(b, j);
for(j = 191160; j < 191170; j++) _solve(b, j);
for(j = 192000; j < 192010; j++) _solve(b, j);
for(j = 192840; j < 192850; j++) _solve(b, j);
for(j = 193680; j < 193690; j++) _solve(b, j);
for(j = 194520; j < 194530; j++) _solve(b, j);
for(j = 195360; j < 195370; j++) _solve(b, j);
for(j = 196200; j < 196210; j++) _solve(b, j);
for(j = 197040; j < 197050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 197880; j < 197890; j++) _solve(b, j);
for(j = 198720; j < 198730; j++) _solve(b, j);
for(j = 199560; j < 199570; j++) _solve(b, j);
for(j = 200400; j < 200410; j++) _solve(b, j);
for(j = 201240; j < 201250; j++) _solve(b, j);
for(j = 202080; j < 202090; j++) _solve(b, j);
for(j = 202920; j < 202930; j++) _solve(b, j);
for(j = 203760; j < 203770; j++) _solve(b, j);
for(j = 204600; j < 204610; j++) _solve(b, j);
for(j = 205440; j < 205450; j++) _solve(b, j);
for(j = 206280; j < 206290; j++) _solve(b, j);
for(j = 207120; j < 207130; j++) _solve(b, j);
for(j = 207960; j < 207970; j++) _solve(b, j);
for(j = 208800; j < 208810; j++) _solve(b, j);
for(j = 209640; j < 209650; j++) _solve(b, j);
for(j = 210480; j < 210490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 211320; j < 211330; j++) _solve(b, j);
for(j = 212160; j < 212170; j++) _solve(b, j);
for(j = 213000; j < 213010; j++) _solve(b, j);
for(j = 213840; j < 213850; j++) _solve(b, j);
for(j = 214680; j < 214690; j++) _solve(b, j);
for(j = 215520; j < 215530; j++) _solve(b, j);
for(j = 216360; j < 216370; j++) _solve(b, j);
for(j = 217200; j < 217210; j++) _solve(b, j);
for(j = 218040; j < 218050; j++) _solve(b, j);
for(j = 218880; j < 218890; j++) _solve(b, j);
for(j = 219720; j < 219730; j++) _solve(b, j);
for(j = 220560; j < 220570; j++) _solve(b, j);
for(j = 221400; j < 221410; j++) _solve(b, j);
for(j = 222240; j < 222250; j++) _solve(b, j);
for(j = 223080; j < 223090; j++) _solve(b, j);
for(j = 223920; j < 223930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 224760; j < 224770; j++) _solve(b, j);
for(j = 225600; j < 225610; j++) _solve(b, j);
for(j = 226440; j < 226450; j++) _solve(b, j);
for(j = 227280; j < 227290; j++) _solve(b, j);
for(j = 228120; j < 228130; j++) _solve(b, j);
for(j = 228960; j < 228970; j++) _solve(b, j);
for(j = 229800; j < 229810; j++) _solve(b, j);
for(j = 230640; j < 230650; j++) _solve(b, j);
for(j = 231480; j < 231490; j++) _solve(b, j);
for(j = 232320; j < 232330; j++) _solve(b, j);
for(j = 233160; j < 233170; j++) _solve(b, j);
for(j = 234000; j < 234010; j++) _solve(b, j);
for(j = 234840; j < 234850; j++) _solve(b, j);
for(j = 235680; j < 235690; j++) _solve(b, j);
for(j = 236520; j < 236530; j++) _solve(b, j);
for(j = 237360; j < 237370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 238200; j < 238210; j++) _solve(b, j);
for(j = 239040; j < 239050; j++) _solve(b, j);
for(j = 239880; j < 239890; j++) _solve(b, j);
for(j = 240720; j < 240730; j++) _solve(b, j);
for(j = 241560; j < 241570; j++) _solve(b, j);
for(j = 242400; j < 242410; j++) _solve(b, j);
for(j = 243240; j < 243250; j++) _solve(b, j);
for(j = 244080; j < 244090; j++) _solve(b, j);
for(j = 244920; j < 244930; j++) _solve(b, j);
for(j = 245760; j < 245770; j++) _solve(b, j);
for(j = 246600; j < 246610; j++) _solve(b, j);
for(j = 247440; j < 247450; j++) _solve(b, j);
for(j = 248280; j < 248290; j++) _solve(b, j);
for(j = 249120; j < 249130; j++) _solve(b, j);
for(j = 249960; j < 249970; j++) _solve(b, j);
for(j = 250800; j < 250810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 251640; j < 251650; j++) _solve(b, j);
for(j = 252480; j < 252490; j++) _solve(b, j);
for(j = 253320; j < 253330; j++) _solve(b, j);
for(j = 254160; j < 254170; j++) _solve(b, j);
for(j = 255000; j < 255010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 185290; j < 185300; j++) _solve(b, j);
for(j = 186130; j < 186140; j++) _solve(b, j);
for(j = 186970; j < 186980; j++) _solve(b, j);
for(j = 187810; j < 187820; j++) _solve(b, j);
for(j = 188650; j < 188660; j++) _solve(b, j);
for(j = 189490; j < 189500; j++) _solve(b, j);
for(j = 190330; j < 190340; j++) _solve(b, j);
for(j = 191170; j < 191180; j++) _solve(b, j);
for(j = 192010; j < 192020; j++) _solve(b, j);
for(j = 192850; j < 192860; j++) _solve(b, j);
for(j = 193690; j < 193700; j++) _solve(b, j);
for(j = 194530; j < 194540; j++) _solve(b, j);
for(j = 195370; j < 195380; j++) _solve(b, j);
for(j = 196210; j < 196220; j++) _solve(b, j);
for(j = 197050; j < 197060; j++) _solve(b, j);
for(j = 197890; j < 197900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 198730; j < 198740; j++) _solve(b, j);
for(j = 199570; j < 199580; j++) _solve(b, j);
for(j = 200410; j < 200420; j++) _solve(b, j);
for(j = 201250; j < 201260; j++) _solve(b, j);
for(j = 202090; j < 202100; j++) _solve(b, j);
for(j = 202930; j < 202940; j++) _solve(b, j);
for(j = 203770; j < 203780; j++) _solve(b, j);
for(j = 204610; j < 204620; j++) _solve(b, j);
for(j = 205450; j < 205460; j++) _solve(b, j);
for(j = 206290; j < 206300; j++) _solve(b, j);
for(j = 207130; j < 207140; j++) _solve(b, j);
for(j = 207970; j < 207980; j++) _solve(b, j);
for(j = 208810; j < 208820; j++) _solve(b, j);
for(j = 209650; j < 209660; j++) _solve(b, j);
for(j = 210490; j < 210500; j++) _solve(b, j);
for(j = 211330; j < 211340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 212170; j < 212180; j++) _solve(b, j);
for(j = 213010; j < 213020; j++) _solve(b, j);
for(j = 213850; j < 213860; j++) _solve(b, j);
for(j = 214690; j < 214700; j++) _solve(b, j);
for(j = 215530; j < 215540; j++) _solve(b, j);
for(j = 216370; j < 216380; j++) _solve(b, j);
for(j = 217210; j < 217220; j++) _solve(b, j);
for(j = 218050; j < 218060; j++) _solve(b, j);
for(j = 218890; j < 218900; j++) _solve(b, j);
for(j = 219730; j < 219740; j++) _solve(b, j);
for(j = 220570; j < 220580; j++) _solve(b, j);
for(j = 221410; j < 221420; j++) _solve(b, j);
for(j = 222250; j < 222260; j++) _solve(b, j);
for(j = 223090; j < 223100; j++) _solve(b, j);
for(j = 223930; j < 223940; j++) _solve(b, j);
for(j = 224770; j < 224780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 225610; j < 225620; j++) _solve(b, j);
for(j = 226450; j < 226460; j++) _solve(b, j);
for(j = 227290; j < 227300; j++) _solve(b, j);
for(j = 228130; j < 228140; j++) _solve(b, j);
for(j = 228970; j < 228980; j++) _solve(b, j);
for(j = 229810; j < 229820; j++) _solve(b, j);
for(j = 230650; j < 230660; j++) _solve(b, j);
for(j = 231490; j < 231500; j++) _solve(b, j);
for(j = 232330; j < 232340; j++) _solve(b, j);
for(j = 233170; j < 233180; j++) _solve(b, j);
for(j = 234010; j < 234020; j++) _solve(b, j);
for(j = 234850; j < 234860; j++) _solve(b, j);
for(j = 235690; j < 235700; j++) _solve(b, j);
for(j = 236530; j < 236540; j++) _solve(b, j);
for(j = 237370; j < 237380; j++) _solve(b, j);
for(j = 238210; j < 238220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 239050; j < 239060; j++) _solve(b, j);
for(j = 239890; j < 239900; j++) _solve(b, j);
for(j = 240730; j < 240740; j++) _solve(b, j);
for(j = 241570; j < 241580; j++) _solve(b, j);
for(j = 242410; j < 242420; j++) _solve(b, j);
for(j = 243250; j < 243260; j++) _solve(b, j);
for(j = 244090; j < 244100; j++) _solve(b, j);
for(j = 244930; j < 244940; j++) _solve(b, j);
for(j = 245770; j < 245780; j++) _solve(b, j);
for(j = 246610; j < 246620; j++) _solve(b, j);
for(j = 247450; j < 247460; j++) _solve(b, j);
for(j = 248290; j < 248300; j++) _solve(b, j);
for(j = 249130; j < 249140; j++) _solve(b, j);
for(j = 249970; j < 249980; j++) _solve(b, j);
for(j = 250810; j < 250820; j++) _solve(b, j);
for(j = 251650; j < 251660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 252490; j < 252500; j++) _solve(b, j);
for(j = 253330; j < 253340; j++) _solve(b, j);
for(j = 254170; j < 254180; j++) _solve(b, j);
for(j = 255010; j < 255020; j++) _solve(b, j);
for(j = 255850; j < 255860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 186140; j < 186150; j++) _solve(b, j);
for(j = 186980; j < 186990; j++) _solve(b, j);
for(j = 187820; j < 187830; j++) _solve(b, j);
for(j = 188660; j < 188670; j++) _solve(b, j);
for(j = 189500; j < 189510; j++) _solve(b, j);
for(j = 190340; j < 190350; j++) _solve(b, j);
for(j = 191180; j < 191190; j++) _solve(b, j);
for(j = 192020; j < 192030; j++) _solve(b, j);
for(j = 192860; j < 192870; j++) _solve(b, j);
for(j = 193700; j < 193710; j++) _solve(b, j);
for(j = 194540; j < 194550; j++) _solve(b, j);
for(j = 195380; j < 195390; j++) _solve(b, j);
for(j = 196220; j < 196230; j++) _solve(b, j);
for(j = 197060; j < 197070; j++) _solve(b, j);
for(j = 197900; j < 197910; j++) _solve(b, j);
for(j = 198740; j < 198750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 199580; j < 199590; j++) _solve(b, j);
for(j = 200420; j < 200430; j++) _solve(b, j);
for(j = 201260; j < 201270; j++) _solve(b, j);
for(j = 202100; j < 202110; j++) _solve(b, j);
for(j = 202940; j < 202950; j++) _solve(b, j);
for(j = 203780; j < 203790; j++) _solve(b, j);
for(j = 204620; j < 204630; j++) _solve(b, j);
for(j = 205460; j < 205470; j++) _solve(b, j);
for(j = 206300; j < 206310; j++) _solve(b, j);
for(j = 207140; j < 207150; j++) _solve(b, j);
for(j = 207980; j < 207990; j++) _solve(b, j);
for(j = 208820; j < 208830; j++) _solve(b, j);
for(j = 209660; j < 209670; j++) _solve(b, j);
for(j = 210500; j < 210510; j++) _solve(b, j);
for(j = 211340; j < 211350; j++) _solve(b, j);
for(j = 212180; j < 212190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 213020; j < 213030; j++) _solve(b, j);
for(j = 213860; j < 213870; j++) _solve(b, j);
for(j = 214700; j < 214710; j++) _solve(b, j);
for(j = 215540; j < 215550; j++) _solve(b, j);
for(j = 216380; j < 216390; j++) _solve(b, j);
for(j = 217220; j < 217230; j++) _solve(b, j);
for(j = 218060; j < 218070; j++) _solve(b, j);
for(j = 218900; j < 218910; j++) _solve(b, j);
for(j = 219740; j < 219750; j++) _solve(b, j);
for(j = 220580; j < 220590; j++) _solve(b, j);
for(j = 221420; j < 221430; j++) _solve(b, j);
for(j = 222260; j < 222270; j++) _solve(b, j);
for(j = 223100; j < 223110; j++) _solve(b, j);
for(j = 223940; j < 223950; j++) _solve(b, j);
for(j = 224780; j < 224790; j++) _solve(b, j);
for(j = 225620; j < 225630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 226460; j < 226470; j++) _solve(b, j);
for(j = 227300; j < 227310; j++) _solve(b, j);
for(j = 228140; j < 228150; j++) _solve(b, j);
for(j = 228980; j < 228990; j++) _solve(b, j);
for(j = 229820; j < 229830; j++) _solve(b, j);
for(j = 230660; j < 230670; j++) _solve(b, j);
for(j = 231500; j < 231510; j++) _solve(b, j);
for(j = 232340; j < 232350; j++) _solve(b, j);
for(j = 233180; j < 233190; j++) _solve(b, j);
for(j = 234020; j < 234030; j++) _solve(b, j);
for(j = 234860; j < 234870; j++) _solve(b, j);
for(j = 235700; j < 235710; j++) _solve(b, j);
for(j = 236540; j < 236550; j++) _solve(b, j);
for(j = 237380; j < 237390; j++) _solve(b, j);
for(j = 238220; j < 238230; j++) _solve(b, j);
for(j = 239060; j < 239070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 239900; j < 239910; j++) _solve(b, j);
for(j = 240740; j < 240750; j++) _solve(b, j);
for(j = 241580; j < 241590; j++) _solve(b, j);
for(j = 242420; j < 242430; j++) _solve(b, j);
for(j = 243260; j < 243270; j++) _solve(b, j);
for(j = 244100; j < 244110; j++) _solve(b, j);
for(j = 244940; j < 244950; j++) _solve(b, j);
for(j = 245780; j < 245790; j++) _solve(b, j);
for(j = 246620; j < 246630; j++) _solve(b, j);
for(j = 247460; j < 247470; j++) _solve(b, j);
for(j = 248300; j < 248310; j++) _solve(b, j);
for(j = 249140; j < 249150; j++) _solve(b, j);
for(j = 249980; j < 249990; j++) _solve(b, j);
for(j = 250820; j < 250830; j++) _solve(b, j);
for(j = 251660; j < 251670; j++) _solve(b, j);
for(j = 252500; j < 252510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 253340; j < 253350; j++) _solve(b, j);
for(j = 254180; j < 254190; j++) _solve(b, j);
for(j = 255020; j < 255030; j++) _solve(b, j);
for(j = 255860; j < 255870; j++) _solve(b, j);
for(j = 256700; j < 256710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 186990; j < 187000; j++) _solve(b, j);
for(j = 187830; j < 187840; j++) _solve(b, j);
for(j = 188670; j < 188680; j++) _solve(b, j);
for(j = 189510; j < 189520; j++) _solve(b, j);
for(j = 190350; j < 190360; j++) _solve(b, j);
for(j = 191190; j < 191200; j++) _solve(b, j);
for(j = 192030; j < 192040; j++) _solve(b, j);
for(j = 192870; j < 192880; j++) _solve(b, j);
for(j = 193710; j < 193720; j++) _solve(b, j);
for(j = 194550; j < 194560; j++) _solve(b, j);
for(j = 195390; j < 195400; j++) _solve(b, j);
for(j = 196230; j < 196240; j++) _solve(b, j);
for(j = 197070; j < 197080; j++) _solve(b, j);
for(j = 197910; j < 197920; j++) _solve(b, j);
for(j = 198750; j < 198760; j++) _solve(b, j);
for(j = 199590; j < 199600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 200430; j < 200440; j++) _solve(b, j);
for(j = 201270; j < 201280; j++) _solve(b, j);
for(j = 202110; j < 202120; j++) _solve(b, j);
for(j = 202950; j < 202960; j++) _solve(b, j);
for(j = 203790; j < 203800; j++) _solve(b, j);
for(j = 204630; j < 204640; j++) _solve(b, j);
for(j = 205470; j < 205480; j++) _solve(b, j);
for(j = 206310; j < 206320; j++) _solve(b, j);
for(j = 207150; j < 207160; j++) _solve(b, j);
for(j = 207990; j < 208000; j++) _solve(b, j);
for(j = 208830; j < 208840; j++) _solve(b, j);
for(j = 209670; j < 209680; j++) _solve(b, j);
for(j = 210510; j < 210520; j++) _solve(b, j);
for(j = 211350; j < 211360; j++) _solve(b, j);
for(j = 212190; j < 212200; j++) _solve(b, j);
for(j = 213030; j < 213040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 213870; j < 213880; j++) _solve(b, j);
for(j = 214710; j < 214720; j++) _solve(b, j);
for(j = 215550; j < 215560; j++) _solve(b, j);
for(j = 216390; j < 216400; j++) _solve(b, j);
for(j = 217230; j < 217240; j++) _solve(b, j);
for(j = 218070; j < 218080; j++) _solve(b, j);
for(j = 218910; j < 218920; j++) _solve(b, j);
for(j = 219750; j < 219760; j++) _solve(b, j);
for(j = 220590; j < 220600; j++) _solve(b, j);
for(j = 221430; j < 221440; j++) _solve(b, j);
for(j = 222270; j < 222280; j++) _solve(b, j);
for(j = 223110; j < 223120; j++) _solve(b, j);
for(j = 223950; j < 223960; j++) _solve(b, j);
for(j = 224790; j < 224800; j++) _solve(b, j);
for(j = 225630; j < 225640; j++) _solve(b, j);
for(j = 226470; j < 226480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 227310; j < 227320; j++) _solve(b, j);
for(j = 228150; j < 228160; j++) _solve(b, j);
for(j = 228990; j < 229000; j++) _solve(b, j);
for(j = 229830; j < 229840; j++) _solve(b, j);
for(j = 230670; j < 230680; j++) _solve(b, j);
for(j = 231510; j < 231520; j++) _solve(b, j);
for(j = 232350; j < 232360; j++) _solve(b, j);
for(j = 233190; j < 233200; j++) _solve(b, j);
for(j = 234030; j < 234040; j++) _solve(b, j);
for(j = 234870; j < 234880; j++) _solve(b, j);
for(j = 235710; j < 235720; j++) _solve(b, j);
for(j = 236550; j < 236560; j++) _solve(b, j);
for(j = 237390; j < 237400; j++) _solve(b, j);
for(j = 238230; j < 238240; j++) _solve(b, j);
for(j = 239070; j < 239080; j++) _solve(b, j);
for(j = 239910; j < 239920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 240750; j < 240760; j++) _solve(b, j);
for(j = 241590; j < 241600; j++) _solve(b, j);
for(j = 242430; j < 242440; j++) _solve(b, j);
for(j = 243270; j < 243280; j++) _solve(b, j);
for(j = 244110; j < 244120; j++) _solve(b, j);
for(j = 244950; j < 244960; j++) _solve(b, j);
for(j = 245790; j < 245800; j++) _solve(b, j);
for(j = 246630; j < 246640; j++) _solve(b, j);
for(j = 247470; j < 247480; j++) _solve(b, j);
for(j = 248310; j < 248320; j++) _solve(b, j);
for(j = 249150; j < 249160; j++) _solve(b, j);
for(j = 249990; j < 250000; j++) _solve(b, j);
for(j = 250830; j < 250840; j++) _solve(b, j);
for(j = 251670; j < 251680; j++) _solve(b, j);
for(j = 252510; j < 252520; j++) _solve(b, j);
for(j = 253350; j < 253360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 254190; j < 254200; j++) _solve(b, j);
for(j = 255030; j < 255040; j++) _solve(b, j);
for(j = 255870; j < 255880; j++) _solve(b, j);
for(j = 256710; j < 256720; j++) _solve(b, j);
for(j = 257550; j < 257560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 187840; j < 187850; j++) _solve(b, j);
for(j = 188680; j < 188690; j++) _solve(b, j);
for(j = 189520; j < 189530; j++) _solve(b, j);
for(j = 190360; j < 190370; j++) _solve(b, j);
for(j = 191200; j < 191210; j++) _solve(b, j);
for(j = 192040; j < 192050; j++) _solve(b, j);
for(j = 192880; j < 192890; j++) _solve(b, j);
for(j = 193720; j < 193730; j++) _solve(b, j);
for(j = 194560; j < 194570; j++) _solve(b, j);
for(j = 195400; j < 195410; j++) _solve(b, j);
for(j = 196240; j < 196250; j++) _solve(b, j);
for(j = 197080; j < 197090; j++) _solve(b, j);
for(j = 197920; j < 197930; j++) _solve(b, j);
for(j = 198760; j < 198770; j++) _solve(b, j);
for(j = 199600; j < 199610; j++) _solve(b, j);
for(j = 200440; j < 200450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 201280; j < 201290; j++) _solve(b, j);
for(j = 202120; j < 202130; j++) _solve(b, j);
for(j = 202960; j < 202970; j++) _solve(b, j);
for(j = 203800; j < 203810; j++) _solve(b, j);
for(j = 204640; j < 204650; j++) _solve(b, j);
for(j = 205480; j < 205490; j++) _solve(b, j);
for(j = 206320; j < 206330; j++) _solve(b, j);
for(j = 207160; j < 207170; j++) _solve(b, j);
for(j = 208000; j < 208010; j++) _solve(b, j);
for(j = 208840; j < 208850; j++) _solve(b, j);
for(j = 209680; j < 209690; j++) _solve(b, j);
for(j = 210520; j < 210530; j++) _solve(b, j);
for(j = 211360; j < 211370; j++) _solve(b, j);
for(j = 212200; j < 212210; j++) _solve(b, j);
for(j = 213040; j < 213050; j++) _solve(b, j);
for(j = 213880; j < 213890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 214720; j < 214730; j++) _solve(b, j);
for(j = 215560; j < 215570; j++) _solve(b, j);
for(j = 216400; j < 216410; j++) _solve(b, j);
for(j = 217240; j < 217250; j++) _solve(b, j);
for(j = 218080; j < 218090; j++) _solve(b, j);
for(j = 218920; j < 218930; j++) _solve(b, j);
for(j = 219760; j < 219770; j++) _solve(b, j);
for(j = 220600; j < 220610; j++) _solve(b, j);
for(j = 221440; j < 221450; j++) _solve(b, j);
for(j = 222280; j < 222290; j++) _solve(b, j);
for(j = 223120; j < 223130; j++) _solve(b, j);
for(j = 223960; j < 223970; j++) _solve(b, j);
for(j = 224800; j < 224810; j++) _solve(b, j);
for(j = 225640; j < 225650; j++) _solve(b, j);
for(j = 226480; j < 226490; j++) _solve(b, j);
for(j = 227320; j < 227330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 228160; j < 228170; j++) _solve(b, j);
for(j = 229000; j < 229010; j++) _solve(b, j);
for(j = 229840; j < 229850; j++) _solve(b, j);
for(j = 230680; j < 230690; j++) _solve(b, j);
for(j = 231520; j < 231530; j++) _solve(b, j);
for(j = 232360; j < 232370; j++) _solve(b, j);
for(j = 233200; j < 233210; j++) _solve(b, j);
for(j = 234040; j < 234050; j++) _solve(b, j);
for(j = 234880; j < 234890; j++) _solve(b, j);
for(j = 235720; j < 235730; j++) _solve(b, j);
for(j = 236560; j < 236570; j++) _solve(b, j);
for(j = 237400; j < 237410; j++) _solve(b, j);
for(j = 238240; j < 238250; j++) _solve(b, j);
for(j = 239080; j < 239090; j++) _solve(b, j);
for(j = 239920; j < 239930; j++) _solve(b, j);
for(j = 240760; j < 240770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 241600; j < 241610; j++) _solve(b, j);
for(j = 242440; j < 242450; j++) _solve(b, j);
for(j = 243280; j < 243290; j++) _solve(b, j);
for(j = 244120; j < 244130; j++) _solve(b, j);
for(j = 244960; j < 244970; j++) _solve(b, j);
for(j = 245800; j < 245810; j++) _solve(b, j);
for(j = 246640; j < 246650; j++) _solve(b, j);
for(j = 247480; j < 247490; j++) _solve(b, j);
for(j = 248320; j < 248330; j++) _solve(b, j);
for(j = 249160; j < 249170; j++) _solve(b, j);
for(j = 250000; j < 250010; j++) _solve(b, j);
for(j = 250840; j < 250850; j++) _solve(b, j);
for(j = 251680; j < 251690; j++) _solve(b, j);
for(j = 252520; j < 252530; j++) _solve(b, j);
for(j = 253360; j < 253370; j++) _solve(b, j);
for(j = 254200; j < 254210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 255040; j < 255050; j++) _solve(b, j);
for(j = 255880; j < 255890; j++) _solve(b, j);
for(j = 256720; j < 256730; j++) _solve(b, j);
for(j = 257560; j < 257570; j++) _solve(b, j);
for(j = 258400; j < 258410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 188690; j < 188700; j++) _solve(b, j);
for(j = 189530; j < 189540; j++) _solve(b, j);
for(j = 190370; j < 190380; j++) _solve(b, j);
for(j = 191210; j < 191220; j++) _solve(b, j);
for(j = 192050; j < 192060; j++) _solve(b, j);
for(j = 192890; j < 192900; j++) _solve(b, j);
for(j = 193730; j < 193740; j++) _solve(b, j);
for(j = 194570; j < 194580; j++) _solve(b, j);
for(j = 195410; j < 195420; j++) _solve(b, j);
for(j = 196250; j < 196260; j++) _solve(b, j);
for(j = 197090; j < 197100; j++) _solve(b, j);
for(j = 197930; j < 197940; j++) _solve(b, j);
for(j = 198770; j < 198780; j++) _solve(b, j);
for(j = 199610; j < 199620; j++) _solve(b, j);
for(j = 200450; j < 200460; j++) _solve(b, j);
for(j = 201290; j < 201300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 202130; j < 202140; j++) _solve(b, j);
for(j = 202970; j < 202980; j++) _solve(b, j);
for(j = 203810; j < 203820; j++) _solve(b, j);
for(j = 204650; j < 204660; j++) _solve(b, j);
for(j = 205490; j < 205500; j++) _solve(b, j);
for(j = 206330; j < 206340; j++) _solve(b, j);
for(j = 207170; j < 207180; j++) _solve(b, j);
for(j = 208010; j < 208020; j++) _solve(b, j);
for(j = 208850; j < 208860; j++) _solve(b, j);
for(j = 209690; j < 209700; j++) _solve(b, j);
for(j = 210530; j < 210540; j++) _solve(b, j);
for(j = 211370; j < 211380; j++) _solve(b, j);
for(j = 212210; j < 212220; j++) _solve(b, j);
for(j = 213050; j < 213060; j++) _solve(b, j);
for(j = 213890; j < 213900; j++) _solve(b, j);
for(j = 214730; j < 214740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 215570; j < 215580; j++) _solve(b, j);
for(j = 216410; j < 216420; j++) _solve(b, j);
for(j = 217250; j < 217260; j++) _solve(b, j);
for(j = 218090; j < 218100; j++) _solve(b, j);
for(j = 218930; j < 218940; j++) _solve(b, j);
for(j = 219770; j < 219780; j++) _solve(b, j);
for(j = 220610; j < 220620; j++) _solve(b, j);
for(j = 221450; j < 221460; j++) _solve(b, j);
for(j = 222290; j < 222300; j++) _solve(b, j);
for(j = 223130; j < 223140; j++) _solve(b, j);
for(j = 223970; j < 223980; j++) _solve(b, j);
for(j = 224810; j < 224820; j++) _solve(b, j);
for(j = 225650; j < 225660; j++) _solve(b, j);
for(j = 226490; j < 226500; j++) _solve(b, j);
for(j = 227330; j < 227340; j++) _solve(b, j);
for(j = 228170; j < 228180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 229010; j < 229020; j++) _solve(b, j);
for(j = 229850; j < 229860; j++) _solve(b, j);
for(j = 230690; j < 230700; j++) _solve(b, j);
for(j = 231530; j < 231540; j++) _solve(b, j);
for(j = 232370; j < 232380; j++) _solve(b, j);
for(j = 233210; j < 233220; j++) _solve(b, j);
for(j = 234050; j < 234060; j++) _solve(b, j);
for(j = 234890; j < 234900; j++) _solve(b, j);
for(j = 235730; j < 235740; j++) _solve(b, j);
for(j = 236570; j < 236580; j++) _solve(b, j);
for(j = 237410; j < 237420; j++) _solve(b, j);
for(j = 238250; j < 238260; j++) _solve(b, j);
for(j = 239090; j < 239100; j++) _solve(b, j);
for(j = 239930; j < 239940; j++) _solve(b, j);
for(j = 240770; j < 240780; j++) _solve(b, j);
for(j = 241610; j < 241620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 242450; j < 242460; j++) _solve(b, j);
for(j = 243290; j < 243300; j++) _solve(b, j);
for(j = 244130; j < 244140; j++) _solve(b, j);
for(j = 244970; j < 244980; j++) _solve(b, j);
for(j = 245810; j < 245820; j++) _solve(b, j);
for(j = 246650; j < 246660; j++) _solve(b, j);
for(j = 247490; j < 247500; j++) _solve(b, j);
for(j = 248330; j < 248340; j++) _solve(b, j);
for(j = 249170; j < 249180; j++) _solve(b, j);
for(j = 250010; j < 250020; j++) _solve(b, j);
for(j = 250850; j < 250860; j++) _solve(b, j);
for(j = 251690; j < 251700; j++) _solve(b, j);
for(j = 252530; j < 252540; j++) _solve(b, j);
for(j = 253370; j < 253380; j++) _solve(b, j);
for(j = 254210; j < 254220; j++) _solve(b, j);
for(j = 255050; j < 255060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 255890; j < 255900; j++) _solve(b, j);
for(j = 256730; j < 256740; j++) _solve(b, j);
for(j = 257570; j < 257580; j++) _solve(b, j);
for(j = 258410; j < 258420; j++) _solve(b, j);
for(j = 259250; j < 259260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 189540; j < 189550; j++) _solve(b, j);
for(j = 190380; j < 190390; j++) _solve(b, j);
for(j = 191220; j < 191230; j++) _solve(b, j);
for(j = 192060; j < 192070; j++) _solve(b, j);
for(j = 192900; j < 192910; j++) _solve(b, j);
for(j = 193740; j < 193750; j++) _solve(b, j);
for(j = 194580; j < 194590; j++) _solve(b, j);
for(j = 195420; j < 195430; j++) _solve(b, j);
for(j = 196260; j < 196270; j++) _solve(b, j);
for(j = 197100; j < 197110; j++) _solve(b, j);
for(j = 197940; j < 197950; j++) _solve(b, j);
for(j = 198780; j < 198790; j++) _solve(b, j);
for(j = 199620; j < 199630; j++) _solve(b, j);
for(j = 200460; j < 200470; j++) _solve(b, j);
for(j = 201300; j < 201310; j++) _solve(b, j);
for(j = 202140; j < 202150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 202980; j < 202990; j++) _solve(b, j);
for(j = 203820; j < 203830; j++) _solve(b, j);
for(j = 204660; j < 204670; j++) _solve(b, j);
for(j = 205500; j < 205510; j++) _solve(b, j);
for(j = 206340; j < 206350; j++) _solve(b, j);
for(j = 207180; j < 207190; j++) _solve(b, j);
for(j = 208020; j < 208030; j++) _solve(b, j);
for(j = 208860; j < 208870; j++) _solve(b, j);
for(j = 209700; j < 209710; j++) _solve(b, j);
for(j = 210540; j < 210550; j++) _solve(b, j);
for(j = 211380; j < 211390; j++) _solve(b, j);
for(j = 212220; j < 212230; j++) _solve(b, j);
for(j = 213060; j < 213070; j++) _solve(b, j);
for(j = 213900; j < 213910; j++) _solve(b, j);
for(j = 214740; j < 214750; j++) _solve(b, j);
for(j = 215580; j < 215590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 216420; j < 216430; j++) _solve(b, j);
for(j = 217260; j < 217270; j++) _solve(b, j);
for(j = 218100; j < 218110; j++) _solve(b, j);
for(j = 218940; j < 218950; j++) _solve(b, j);
for(j = 219780; j < 219790; j++) _solve(b, j);
for(j = 220620; j < 220630; j++) _solve(b, j);
for(j = 221460; j < 221470; j++) _solve(b, j);
for(j = 222300; j < 222310; j++) _solve(b, j);
for(j = 223140; j < 223150; j++) _solve(b, j);
for(j = 223980; j < 223990; j++) _solve(b, j);
for(j = 224820; j < 224830; j++) _solve(b, j);
for(j = 225660; j < 225670; j++) _solve(b, j);
for(j = 226500; j < 226510; j++) _solve(b, j);
for(j = 227340; j < 227350; j++) _solve(b, j);
for(j = 228180; j < 228190; j++) _solve(b, j);
for(j = 229020; j < 229030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 229860; j < 229870; j++) _solve(b, j);
for(j = 230700; j < 230710; j++) _solve(b, j);
for(j = 231540; j < 231550; j++) _solve(b, j);
for(j = 232380; j < 232390; j++) _solve(b, j);
for(j = 233220; j < 233230; j++) _solve(b, j);
for(j = 234060; j < 234070; j++) _solve(b, j);
for(j = 234900; j < 234910; j++) _solve(b, j);
for(j = 235740; j < 235750; j++) _solve(b, j);
for(j = 236580; j < 236590; j++) _solve(b, j);
for(j = 237420; j < 237430; j++) _solve(b, j);
for(j = 238260; j < 238270; j++) _solve(b, j);
for(j = 239100; j < 239110; j++) _solve(b, j);
for(j = 239940; j < 239950; j++) _solve(b, j);
for(j = 240780; j < 240790; j++) _solve(b, j);
for(j = 241620; j < 241630; j++) _solve(b, j);
for(j = 242460; j < 242470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 243300; j < 243310; j++) _solve(b, j);
for(j = 244140; j < 244150; j++) _solve(b, j);
for(j = 244980; j < 244990; j++) _solve(b, j);
for(j = 245820; j < 245830; j++) _solve(b, j);
for(j = 246660; j < 246670; j++) _solve(b, j);
for(j = 247500; j < 247510; j++) _solve(b, j);
for(j = 248340; j < 248350; j++) _solve(b, j);
for(j = 249180; j < 249190; j++) _solve(b, j);
for(j = 250020; j < 250030; j++) _solve(b, j);
for(j = 250860; j < 250870; j++) _solve(b, j);
for(j = 251700; j < 251710; j++) _solve(b, j);
for(j = 252540; j < 252550; j++) _solve(b, j);
for(j = 253380; j < 253390; j++) _solve(b, j);
for(j = 254220; j < 254230; j++) _solve(b, j);
for(j = 255060; j < 255070; j++) _solve(b, j);
for(j = 255900; j < 255910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 256740; j < 256750; j++) _solve(b, j);
for(j = 257580; j < 257590; j++) _solve(b, j);
for(j = 258420; j < 258430; j++) _solve(b, j);
for(j = 259260; j < 259270; j++) _solve(b, j);
for(j = 260100; j < 260110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 190390; j < 190400; j++) _solve(b, j);
for(j = 191230; j < 191240; j++) _solve(b, j);
for(j = 192070; j < 192080; j++) _solve(b, j);
for(j = 192910; j < 192920; j++) _solve(b, j);
for(j = 193750; j < 193760; j++) _solve(b, j);
for(j = 194590; j < 194600; j++) _solve(b, j);
for(j = 195430; j < 195440; j++) _solve(b, j);
for(j = 196270; j < 196280; j++) _solve(b, j);
for(j = 197110; j < 197120; j++) _solve(b, j);
for(j = 197950; j < 197960; j++) _solve(b, j);
for(j = 198790; j < 198800; j++) _solve(b, j);
for(j = 199630; j < 199640; j++) _solve(b, j);
for(j = 200470; j < 200480; j++) _solve(b, j);
for(j = 201310; j < 201320; j++) _solve(b, j);
for(j = 202150; j < 202160; j++) _solve(b, j);
for(j = 202990; j < 203000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 203830; j < 203840; j++) _solve(b, j);
for(j = 204670; j < 204680; j++) _solve(b, j);
for(j = 205510; j < 205520; j++) _solve(b, j);
for(j = 206350; j < 206360; j++) _solve(b, j);
for(j = 207190; j < 207200; j++) _solve(b, j);
for(j = 208030; j < 208040; j++) _solve(b, j);
for(j = 208870; j < 208880; j++) _solve(b, j);
for(j = 209710; j < 209720; j++) _solve(b, j);
for(j = 210550; j < 210560; j++) _solve(b, j);
for(j = 211390; j < 211400; j++) _solve(b, j);
for(j = 212230; j < 212240; j++) _solve(b, j);
for(j = 213070; j < 213080; j++) _solve(b, j);
for(j = 213910; j < 213920; j++) _solve(b, j);
for(j = 214750; j < 214760; j++) _solve(b, j);
for(j = 215590; j < 215600; j++) _solve(b, j);
for(j = 216430; j < 216440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 217270; j < 217280; j++) _solve(b, j);
for(j = 218110; j < 218120; j++) _solve(b, j);
for(j = 218950; j < 218960; j++) _solve(b, j);
for(j = 219790; j < 219800; j++) _solve(b, j);
for(j = 220630; j < 220640; j++) _solve(b, j);
for(j = 221470; j < 221480; j++) _solve(b, j);
for(j = 222310; j < 222320; j++) _solve(b, j);
for(j = 223150; j < 223160; j++) _solve(b, j);
for(j = 223990; j < 224000; j++) _solve(b, j);
for(j = 224830; j < 224840; j++) _solve(b, j);
for(j = 225670; j < 225680; j++) _solve(b, j);
for(j = 226510; j < 226520; j++) _solve(b, j);
for(j = 227350; j < 227360; j++) _solve(b, j);
for(j = 228190; j < 228200; j++) _solve(b, j);
for(j = 229030; j < 229040; j++) _solve(b, j);
for(j = 229870; j < 229880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 230710; j < 230720; j++) _solve(b, j);
for(j = 231550; j < 231560; j++) _solve(b, j);
for(j = 232390; j < 232400; j++) _solve(b, j);
for(j = 233230; j < 233240; j++) _solve(b, j);
for(j = 234070; j < 234080; j++) _solve(b, j);
for(j = 234910; j < 234920; j++) _solve(b, j);
for(j = 235750; j < 235760; j++) _solve(b, j);
for(j = 236590; j < 236600; j++) _solve(b, j);
for(j = 237430; j < 237440; j++) _solve(b, j);
for(j = 238270; j < 238280; j++) _solve(b, j);
for(j = 239110; j < 239120; j++) _solve(b, j);
for(j = 239950; j < 239960; j++) _solve(b, j);
for(j = 240790; j < 240800; j++) _solve(b, j);
for(j = 241630; j < 241640; j++) _solve(b, j);
for(j = 242470; j < 242480; j++) _solve(b, j);
for(j = 243310; j < 243320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 244150; j < 244160; j++) _solve(b, j);
for(j = 244990; j < 245000; j++) _solve(b, j);
for(j = 245830; j < 245840; j++) _solve(b, j);
for(j = 246670; j < 246680; j++) _solve(b, j);
for(j = 247510; j < 247520; j++) _solve(b, j);
for(j = 248350; j < 248360; j++) _solve(b, j);
for(j = 249190; j < 249200; j++) _solve(b, j);
for(j = 250030; j < 250040; j++) _solve(b, j);
for(j = 250870; j < 250880; j++) _solve(b, j);
for(j = 251710; j < 251720; j++) _solve(b, j);
for(j = 252550; j < 252560; j++) _solve(b, j);
for(j = 253390; j < 253400; j++) _solve(b, j);
for(j = 254230; j < 254240; j++) _solve(b, j);
for(j = 255070; j < 255080; j++) _solve(b, j);
for(j = 255910; j < 255920; j++) _solve(b, j);
for(j = 256750; j < 256760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 257590; j < 257600; j++) _solve(b, j);
for(j = 258430; j < 258440; j++) _solve(b, j);
for(j = 259270; j < 259280; j++) _solve(b, j);
for(j = 260110; j < 260120; j++) _solve(b, j);
for(j = 260950; j < 260960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 191240; j < 191250; j++) _solve(b, j);
for(j = 192080; j < 192090; j++) _solve(b, j);
for(j = 192920; j < 192930; j++) _solve(b, j);
for(j = 193760; j < 193770; j++) _solve(b, j);
for(j = 194600; j < 194610; j++) _solve(b, j);
for(j = 195440; j < 195450; j++) _solve(b, j);
for(j = 196280; j < 196290; j++) _solve(b, j);
for(j = 197120; j < 197130; j++) _solve(b, j);
for(j = 197960; j < 197970; j++) _solve(b, j);
for(j = 198800; j < 198810; j++) _solve(b, j);
for(j = 199640; j < 199650; j++) _solve(b, j);
for(j = 200480; j < 200490; j++) _solve(b, j);
for(j = 201320; j < 201330; j++) _solve(b, j);
for(j = 202160; j < 202170; j++) _solve(b, j);
for(j = 203000; j < 203010; j++) _solve(b, j);
for(j = 203840; j < 203850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 204680; j < 204690; j++) _solve(b, j);
for(j = 205520; j < 205530; j++) _solve(b, j);
for(j = 206360; j < 206370; j++) _solve(b, j);
for(j = 207200; j < 207210; j++) _solve(b, j);
for(j = 208040; j < 208050; j++) _solve(b, j);
for(j = 208880; j < 208890; j++) _solve(b, j);
for(j = 209720; j < 209730; j++) _solve(b, j);
for(j = 210560; j < 210570; j++) _solve(b, j);
for(j = 211400; j < 211410; j++) _solve(b, j);
for(j = 212240; j < 212250; j++) _solve(b, j);
for(j = 213080; j < 213090; j++) _solve(b, j);
for(j = 213920; j < 213930; j++) _solve(b, j);
for(j = 214760; j < 214770; j++) _solve(b, j);
for(j = 215600; j < 215610; j++) _solve(b, j);
for(j = 216440; j < 216450; j++) _solve(b, j);
for(j = 217280; j < 217290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 218120; j < 218130; j++) _solve(b, j);
for(j = 218960; j < 218970; j++) _solve(b, j);
for(j = 219800; j < 219810; j++) _solve(b, j);
for(j = 220640; j < 220650; j++) _solve(b, j);
for(j = 221480; j < 221490; j++) _solve(b, j);
for(j = 222320; j < 222330; j++) _solve(b, j);
for(j = 223160; j < 223170; j++) _solve(b, j);
for(j = 224000; j < 224010; j++) _solve(b, j);
for(j = 224840; j < 224850; j++) _solve(b, j);
for(j = 225680; j < 225690; j++) _solve(b, j);
for(j = 226520; j < 226530; j++) _solve(b, j);
for(j = 227360; j < 227370; j++) _solve(b, j);
for(j = 228200; j < 228210; j++) _solve(b, j);
for(j = 229040; j < 229050; j++) _solve(b, j);
for(j = 229880; j < 229890; j++) _solve(b, j);
for(j = 230720; j < 230730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 231560; j < 231570; j++) _solve(b, j);
for(j = 232400; j < 232410; j++) _solve(b, j);
for(j = 233240; j < 233250; j++) _solve(b, j);
for(j = 234080; j < 234090; j++) _solve(b, j);
for(j = 234920; j < 234930; j++) _solve(b, j);
for(j = 235760; j < 235770; j++) _solve(b, j);
for(j = 236600; j < 236610; j++) _solve(b, j);
for(j = 237440; j < 237450; j++) _solve(b, j);
for(j = 238280; j < 238290; j++) _solve(b, j);
for(j = 239120; j < 239130; j++) _solve(b, j);
for(j = 239960; j < 239970; j++) _solve(b, j);
for(j = 240800; j < 240810; j++) _solve(b, j);
for(j = 241640; j < 241650; j++) _solve(b, j);
for(j = 242480; j < 242490; j++) _solve(b, j);
for(j = 243320; j < 243330; j++) _solve(b, j);
for(j = 244160; j < 244170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 245000; j < 245010; j++) _solve(b, j);
for(j = 245840; j < 245850; j++) _solve(b, j);
for(j = 246680; j < 246690; j++) _solve(b, j);
for(j = 247520; j < 247530; j++) _solve(b, j);
for(j = 248360; j < 248370; j++) _solve(b, j);
for(j = 249200; j < 249210; j++) _solve(b, j);
for(j = 250040; j < 250050; j++) _solve(b, j);
for(j = 250880; j < 250890; j++) _solve(b, j);
for(j = 251720; j < 251730; j++) _solve(b, j);
for(j = 252560; j < 252570; j++) _solve(b, j);
for(j = 253400; j < 253410; j++) _solve(b, j);
for(j = 254240; j < 254250; j++) _solve(b, j);
for(j = 255080; j < 255090; j++) _solve(b, j);
for(j = 255920; j < 255930; j++) _solve(b, j);
for(j = 256760; j < 256770; j++) _solve(b, j);
for(j = 257600; j < 257610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 258440; j < 258450; j++) _solve(b, j);
for(j = 259280; j < 259290; j++) _solve(b, j);
for(j = 260120; j < 260130; j++) _solve(b, j);
for(j = 260960; j < 260970; j++) _solve(b, j);
for(j = 261800; j < 261810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 192090; j < 192100; j++) _solve(b, j);
for(j = 192930; j < 192940; j++) _solve(b, j);
for(j = 193770; j < 193780; j++) _solve(b, j);
for(j = 194610; j < 194620; j++) _solve(b, j);
for(j = 195450; j < 195460; j++) _solve(b, j);
for(j = 196290; j < 196300; j++) _solve(b, j);
for(j = 197130; j < 197140; j++) _solve(b, j);
for(j = 197970; j < 197980; j++) _solve(b, j);
for(j = 198810; j < 198820; j++) _solve(b, j);
for(j = 199650; j < 199660; j++) _solve(b, j);
for(j = 200490; j < 200500; j++) _solve(b, j);
for(j = 201330; j < 201340; j++) _solve(b, j);
for(j = 202170; j < 202180; j++) _solve(b, j);
for(j = 203010; j < 203020; j++) _solve(b, j);
for(j = 203850; j < 203860; j++) _solve(b, j);
for(j = 204690; j < 204700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 205530; j < 205540; j++) _solve(b, j);
for(j = 206370; j < 206380; j++) _solve(b, j);
for(j = 207210; j < 207220; j++) _solve(b, j);
for(j = 208050; j < 208060; j++) _solve(b, j);
for(j = 208890; j < 208900; j++) _solve(b, j);
for(j = 209730; j < 209740; j++) _solve(b, j);
for(j = 210570; j < 210580; j++) _solve(b, j);
for(j = 211410; j < 211420; j++) _solve(b, j);
for(j = 212250; j < 212260; j++) _solve(b, j);
for(j = 213090; j < 213100; j++) _solve(b, j);
for(j = 213930; j < 213940; j++) _solve(b, j);
for(j = 214770; j < 214780; j++) _solve(b, j);
for(j = 215610; j < 215620; j++) _solve(b, j);
for(j = 216450; j < 216460; j++) _solve(b, j);
for(j = 217290; j < 217300; j++) _solve(b, j);
for(j = 218130; j < 218140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 218970; j < 218980; j++) _solve(b, j);
for(j = 219810; j < 219820; j++) _solve(b, j);
for(j = 220650; j < 220660; j++) _solve(b, j);
for(j = 221490; j < 221500; j++) _solve(b, j);
for(j = 222330; j < 222340; j++) _solve(b, j);
for(j = 223170; j < 223180; j++) _solve(b, j);
for(j = 224010; j < 224020; j++) _solve(b, j);
for(j = 224850; j < 224860; j++) _solve(b, j);
for(j = 225690; j < 225700; j++) _solve(b, j);
for(j = 226530; j < 226540; j++) _solve(b, j);
for(j = 227370; j < 227380; j++) _solve(b, j);
for(j = 228210; j < 228220; j++) _solve(b, j);
for(j = 229050; j < 229060; j++) _solve(b, j);
for(j = 229890; j < 229900; j++) _solve(b, j);
for(j = 230730; j < 230740; j++) _solve(b, j);
for(j = 231570; j < 231580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 232410; j < 232420; j++) _solve(b, j);
for(j = 233250; j < 233260; j++) _solve(b, j);
for(j = 234090; j < 234100; j++) _solve(b, j);
for(j = 234930; j < 234940; j++) _solve(b, j);
for(j = 235770; j < 235780; j++) _solve(b, j);
for(j = 236610; j < 236620; j++) _solve(b, j);
for(j = 237450; j < 237460; j++) _solve(b, j);
for(j = 238290; j < 238300; j++) _solve(b, j);
for(j = 239130; j < 239140; j++) _solve(b, j);
for(j = 239970; j < 239980; j++) _solve(b, j);
for(j = 240810; j < 240820; j++) _solve(b, j);
for(j = 241650; j < 241660; j++) _solve(b, j);
for(j = 242490; j < 242500; j++) _solve(b, j);
for(j = 243330; j < 243340; j++) _solve(b, j);
for(j = 244170; j < 244180; j++) _solve(b, j);
for(j = 245010; j < 245020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 245850; j < 245860; j++) _solve(b, j);
for(j = 246690; j < 246700; j++) _solve(b, j);
for(j = 247530; j < 247540; j++) _solve(b, j);
for(j = 248370; j < 248380; j++) _solve(b, j);
for(j = 249210; j < 249220; j++) _solve(b, j);
for(j = 250050; j < 250060; j++) _solve(b, j);
for(j = 250890; j < 250900; j++) _solve(b, j);
for(j = 251730; j < 251740; j++) _solve(b, j);
for(j = 252570; j < 252580; j++) _solve(b, j);
for(j = 253410; j < 253420; j++) _solve(b, j);
for(j = 254250; j < 254260; j++) _solve(b, j);
for(j = 255090; j < 255100; j++) _solve(b, j);
for(j = 255930; j < 255940; j++) _solve(b, j);
for(j = 256770; j < 256780; j++) _solve(b, j);
for(j = 257610; j < 257620; j++) _solve(b, j);
for(j = 258450; j < 258460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 259290; j < 259300; j++) _solve(b, j);
for(j = 260130; j < 260140; j++) _solve(b, j);
for(j = 260970; j < 260980; j++) _solve(b, j);
for(j = 261810; j < 261820; j++) _solve(b, j);
for(j = 262650; j < 262660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 192940; j < 192950; j++) _solve(b, j);
for(j = 193780; j < 193790; j++) _solve(b, j);
for(j = 194620; j < 194630; j++) _solve(b, j);
for(j = 195460; j < 195470; j++) _solve(b, j);
for(j = 196300; j < 196310; j++) _solve(b, j);
for(j = 197140; j < 197150; j++) _solve(b, j);
for(j = 197980; j < 197990; j++) _solve(b, j);
for(j = 198820; j < 198830; j++) _solve(b, j);
for(j = 199660; j < 199670; j++) _solve(b, j);
for(j = 200500; j < 200510; j++) _solve(b, j);
for(j = 201340; j < 201350; j++) _solve(b, j);
for(j = 202180; j < 202190; j++) _solve(b, j);
for(j = 203020; j < 203030; j++) _solve(b, j);
for(j = 203860; j < 203870; j++) _solve(b, j);
for(j = 204700; j < 204710; j++) _solve(b, j);
for(j = 205540; j < 205550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 206380; j < 206390; j++) _solve(b, j);
for(j = 207220; j < 207230; j++) _solve(b, j);
for(j = 208060; j < 208070; j++) _solve(b, j);
for(j = 208900; j < 208910; j++) _solve(b, j);
for(j = 209740; j < 209750; j++) _solve(b, j);
for(j = 210580; j < 210590; j++) _solve(b, j);
for(j = 211420; j < 211430; j++) _solve(b, j);
for(j = 212260; j < 212270; j++) _solve(b, j);
for(j = 213100; j < 213110; j++) _solve(b, j);
for(j = 213940; j < 213950; j++) _solve(b, j);
for(j = 214780; j < 214790; j++) _solve(b, j);
for(j = 215620; j < 215630; j++) _solve(b, j);
for(j = 216460; j < 216470; j++) _solve(b, j);
for(j = 217300; j < 217310; j++) _solve(b, j);
for(j = 218140; j < 218150; j++) _solve(b, j);
for(j = 218980; j < 218990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 219820; j < 219830; j++) _solve(b, j);
for(j = 220660; j < 220670; j++) _solve(b, j);
for(j = 221500; j < 221510; j++) _solve(b, j);
for(j = 222340; j < 222350; j++) _solve(b, j);
for(j = 223180; j < 223190; j++) _solve(b, j);
for(j = 224020; j < 224030; j++) _solve(b, j);
for(j = 224860; j < 224870; j++) _solve(b, j);
for(j = 225700; j < 225710; j++) _solve(b, j);
for(j = 226540; j < 226550; j++) _solve(b, j);
for(j = 227380; j < 227390; j++) _solve(b, j);
for(j = 228220; j < 228230; j++) _solve(b, j);
for(j = 229060; j < 229070; j++) _solve(b, j);
for(j = 229900; j < 229910; j++) _solve(b, j);
for(j = 230740; j < 230750; j++) _solve(b, j);
for(j = 231580; j < 231590; j++) _solve(b, j);
for(j = 232420; j < 232430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 233260; j < 233270; j++) _solve(b, j);
for(j = 234100; j < 234110; j++) _solve(b, j);
for(j = 234940; j < 234950; j++) _solve(b, j);
for(j = 235780; j < 235790; j++) _solve(b, j);
for(j = 236620; j < 236630; j++) _solve(b, j);
for(j = 237460; j < 237470; j++) _solve(b, j);
for(j = 238300; j < 238310; j++) _solve(b, j);
for(j = 239140; j < 239150; j++) _solve(b, j);
for(j = 239980; j < 239990; j++) _solve(b, j);
for(j = 240820; j < 240830; j++) _solve(b, j);
for(j = 241660; j < 241670; j++) _solve(b, j);
for(j = 242500; j < 242510; j++) _solve(b, j);
for(j = 243340; j < 243350; j++) _solve(b, j);
for(j = 244180; j < 244190; j++) _solve(b, j);
for(j = 245020; j < 245030; j++) _solve(b, j);
for(j = 245860; j < 245870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 246700; j < 246710; j++) _solve(b, j);
for(j = 247540; j < 247550; j++) _solve(b, j);
for(j = 248380; j < 248390; j++) _solve(b, j);
for(j = 249220; j < 249230; j++) _solve(b, j);
for(j = 250060; j < 250070; j++) _solve(b, j);
for(j = 250900; j < 250910; j++) _solve(b, j);
for(j = 251740; j < 251750; j++) _solve(b, j);
for(j = 252580; j < 252590; j++) _solve(b, j);
for(j = 253420; j < 253430; j++) _solve(b, j);
for(j = 254260; j < 254270; j++) _solve(b, j);
for(j = 255100; j < 255110; j++) _solve(b, j);
for(j = 255940; j < 255950; j++) _solve(b, j);
for(j = 256780; j < 256790; j++) _solve(b, j);
for(j = 257620; j < 257630; j++) _solve(b, j);
for(j = 258460; j < 258470; j++) _solve(b, j);
for(j = 259300; j < 259310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 260140; j < 260150; j++) _solve(b, j);
for(j = 260980; j < 260990; j++) _solve(b, j);
for(j = 261820; j < 261830; j++) _solve(b, j);
for(j = 262660; j < 262670; j++) _solve(b, j);
for(j = 263500; j < 263510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 193790; j < 193800; j++) _solve(b, j);
for(j = 194630; j < 194640; j++) _solve(b, j);
for(j = 195470; j < 195480; j++) _solve(b, j);
for(j = 196310; j < 196320; j++) _solve(b, j);
for(j = 197150; j < 197160; j++) _solve(b, j);
for(j = 197990; j < 198000; j++) _solve(b, j);
for(j = 198830; j < 198840; j++) _solve(b, j);
for(j = 199670; j < 199680; j++) _solve(b, j);
for(j = 200510; j < 200520; j++) _solve(b, j);
for(j = 201350; j < 201360; j++) _solve(b, j);
for(j = 202190; j < 202200; j++) _solve(b, j);
for(j = 203030; j < 203040; j++) _solve(b, j);
for(j = 203870; j < 203880; j++) _solve(b, j);
for(j = 204710; j < 204720; j++) _solve(b, j);
for(j = 205550; j < 205560; j++) _solve(b, j);
for(j = 206390; j < 206400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 207230; j < 207240; j++) _solve(b, j);
for(j = 208070; j < 208080; j++) _solve(b, j);
for(j = 208910; j < 208920; j++) _solve(b, j);
for(j = 209750; j < 209760; j++) _solve(b, j);
for(j = 210590; j < 210600; j++) _solve(b, j);
for(j = 211430; j < 211440; j++) _solve(b, j);
for(j = 212270; j < 212280; j++) _solve(b, j);
for(j = 213110; j < 213120; j++) _solve(b, j);
for(j = 213950; j < 213960; j++) _solve(b, j);
for(j = 214790; j < 214800; j++) _solve(b, j);
for(j = 215630; j < 215640; j++) _solve(b, j);
for(j = 216470; j < 216480; j++) _solve(b, j);
for(j = 217310; j < 217320; j++) _solve(b, j);
for(j = 218150; j < 218160; j++) _solve(b, j);
for(j = 218990; j < 219000; j++) _solve(b, j);
for(j = 219830; j < 219840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 220670; j < 220680; j++) _solve(b, j);
for(j = 221510; j < 221520; j++) _solve(b, j);
for(j = 222350; j < 222360; j++) _solve(b, j);
for(j = 223190; j < 223200; j++) _solve(b, j);
for(j = 224030; j < 224040; j++) _solve(b, j);
for(j = 224870; j < 224880; j++) _solve(b, j);
for(j = 225710; j < 225720; j++) _solve(b, j);
for(j = 226550; j < 226560; j++) _solve(b, j);
for(j = 227390; j < 227400; j++) _solve(b, j);
for(j = 228230; j < 228240; j++) _solve(b, j);
for(j = 229070; j < 229080; j++) _solve(b, j);
for(j = 229910; j < 229920; j++) _solve(b, j);
for(j = 230750; j < 230760; j++) _solve(b, j);
for(j = 231590; j < 231600; j++) _solve(b, j);
for(j = 232430; j < 232440; j++) _solve(b, j);
for(j = 233270; j < 233280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 234110; j < 234120; j++) _solve(b, j);
for(j = 234950; j < 234960; j++) _solve(b, j);
for(j = 235790; j < 235800; j++) _solve(b, j);
for(j = 236630; j < 236640; j++) _solve(b, j);
for(j = 237470; j < 237480; j++) _solve(b, j);
for(j = 238310; j < 238320; j++) _solve(b, j);
for(j = 239150; j < 239160; j++) _solve(b, j);
for(j = 239990; j < 240000; j++) _solve(b, j);
for(j = 240830; j < 240840; j++) _solve(b, j);
for(j = 241670; j < 241680; j++) _solve(b, j);
for(j = 242510; j < 242520; j++) _solve(b, j);
for(j = 243350; j < 243360; j++) _solve(b, j);
for(j = 244190; j < 244200; j++) _solve(b, j);
for(j = 245030; j < 245040; j++) _solve(b, j);
for(j = 245870; j < 245880; j++) _solve(b, j);
for(j = 246710; j < 246720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 247550; j < 247560; j++) _solve(b, j);
for(j = 248390; j < 248400; j++) _solve(b, j);
for(j = 249230; j < 249240; j++) _solve(b, j);
for(j = 250070; j < 250080; j++) _solve(b, j);
for(j = 250910; j < 250920; j++) _solve(b, j);
for(j = 251750; j < 251760; j++) _solve(b, j);
for(j = 252590; j < 252600; j++) _solve(b, j);
for(j = 253430; j < 253440; j++) _solve(b, j);
for(j = 254270; j < 254280; j++) _solve(b, j);
for(j = 255110; j < 255120; j++) _solve(b, j);
for(j = 255950; j < 255960; j++) _solve(b, j);
for(j = 256790; j < 256800; j++) _solve(b, j);
for(j = 257630; j < 257640; j++) _solve(b, j);
for(j = 258470; j < 258480; j++) _solve(b, j);
for(j = 259310; j < 259320; j++) _solve(b, j);
for(j = 260150; j < 260160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 260990; j < 261000; j++) _solve(b, j);
for(j = 261830; j < 261840; j++) _solve(b, j);
for(j = 262670; j < 262680; j++) _solve(b, j);
for(j = 263510; j < 263520; j++) _solve(b, j);
for(j = 264350; j < 264360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 194640; j < 194650; j++) _solve(b, j);
for(j = 195480; j < 195490; j++) _solve(b, j);
for(j = 196320; j < 196330; j++) _solve(b, j);
for(j = 197160; j < 197170; j++) _solve(b, j);
for(j = 198000; j < 198010; j++) _solve(b, j);
for(j = 198840; j < 198850; j++) _solve(b, j);
for(j = 199680; j < 199690; j++) _solve(b, j);
for(j = 200520; j < 200530; j++) _solve(b, j);
for(j = 201360; j < 201370; j++) _solve(b, j);
for(j = 202200; j < 202210; j++) _solve(b, j);
for(j = 203040; j < 203050; j++) _solve(b, j);
for(j = 203880; j < 203890; j++) _solve(b, j);
for(j = 204720; j < 204730; j++) _solve(b, j);
for(j = 205560; j < 205570; j++) _solve(b, j);
for(j = 206400; j < 206410; j++) _solve(b, j);
for(j = 207240; j < 207250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 208080; j < 208090; j++) _solve(b, j);
for(j = 208920; j < 208930; j++) _solve(b, j);
for(j = 209760; j < 209770; j++) _solve(b, j);
for(j = 210600; j < 210610; j++) _solve(b, j);
for(j = 211440; j < 211450; j++) _solve(b, j);
for(j = 212280; j < 212290; j++) _solve(b, j);
for(j = 213120; j < 213130; j++) _solve(b, j);
for(j = 213960; j < 213970; j++) _solve(b, j);
for(j = 214800; j < 214810; j++) _solve(b, j);
for(j = 215640; j < 215650; j++) _solve(b, j);
for(j = 216480; j < 216490; j++) _solve(b, j);
for(j = 217320; j < 217330; j++) _solve(b, j);
for(j = 218160; j < 218170; j++) _solve(b, j);
for(j = 219000; j < 219010; j++) _solve(b, j);
for(j = 219840; j < 219850; j++) _solve(b, j);
for(j = 220680; j < 220690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 221520; j < 221530; j++) _solve(b, j);
for(j = 222360; j < 222370; j++) _solve(b, j);
for(j = 223200; j < 223210; j++) _solve(b, j);
for(j = 224040; j < 224050; j++) _solve(b, j);
for(j = 224880; j < 224890; j++) _solve(b, j);
for(j = 225720; j < 225730; j++) _solve(b, j);
for(j = 226560; j < 226570; j++) _solve(b, j);
for(j = 227400; j < 227410; j++) _solve(b, j);
for(j = 228240; j < 228250; j++) _solve(b, j);
for(j = 229080; j < 229090; j++) _solve(b, j);
for(j = 229920; j < 229930; j++) _solve(b, j);
for(j = 230760; j < 230770; j++) _solve(b, j);
for(j = 231600; j < 231610; j++) _solve(b, j);
for(j = 232440; j < 232450; j++) _solve(b, j);
for(j = 233280; j < 233290; j++) _solve(b, j);
for(j = 234120; j < 234130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 234960; j < 234970; j++) _solve(b, j);
for(j = 235800; j < 235810; j++) _solve(b, j);
for(j = 236640; j < 236650; j++) _solve(b, j);
for(j = 237480; j < 237490; j++) _solve(b, j);
for(j = 238320; j < 238330; j++) _solve(b, j);
for(j = 239160; j < 239170; j++) _solve(b, j);
for(j = 240000; j < 240010; j++) _solve(b, j);
for(j = 240840; j < 240850; j++) _solve(b, j);
for(j = 241680; j < 241690; j++) _solve(b, j);
for(j = 242520; j < 242530; j++) _solve(b, j);
for(j = 243360; j < 243370; j++) _solve(b, j);
for(j = 244200; j < 244210; j++) _solve(b, j);
for(j = 245040; j < 245050; j++) _solve(b, j);
for(j = 245880; j < 245890; j++) _solve(b, j);
for(j = 246720; j < 246730; j++) _solve(b, j);
for(j = 247560; j < 247570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 248400; j < 248410; j++) _solve(b, j);
for(j = 249240; j < 249250; j++) _solve(b, j);
for(j = 250080; j < 250090; j++) _solve(b, j);
for(j = 250920; j < 250930; j++) _solve(b, j);
for(j = 251760; j < 251770; j++) _solve(b, j);
for(j = 252600; j < 252610; j++) _solve(b, j);
for(j = 253440; j < 253450; j++) _solve(b, j);
for(j = 254280; j < 254290; j++) _solve(b, j);
for(j = 255120; j < 255130; j++) _solve(b, j);
for(j = 255960; j < 255970; j++) _solve(b, j);
for(j = 256800; j < 256810; j++) _solve(b, j);
for(j = 257640; j < 257650; j++) _solve(b, j);
for(j = 258480; j < 258490; j++) _solve(b, j);
for(j = 259320; j < 259330; j++) _solve(b, j);
for(j = 260160; j < 260170; j++) _solve(b, j);
for(j = 261000; j < 261010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 261840; j < 261850; j++) _solve(b, j);
for(j = 262680; j < 262690; j++) _solve(b, j);
for(j = 263520; j < 263530; j++) _solve(b, j);
for(j = 264360; j < 264370; j++) _solve(b, j);
for(j = 265200; j < 265210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 195490; j < 195500; j++) _solve(b, j);
for(j = 196330; j < 196340; j++) _solve(b, j);
for(j = 197170; j < 197180; j++) _solve(b, j);
for(j = 198010; j < 198020; j++) _solve(b, j);
for(j = 198850; j < 198860; j++) _solve(b, j);
for(j = 199690; j < 199700; j++) _solve(b, j);
for(j = 200530; j < 200540; j++) _solve(b, j);
for(j = 201370; j < 201380; j++) _solve(b, j);
for(j = 202210; j < 202220; j++) _solve(b, j);
for(j = 203050; j < 203060; j++) _solve(b, j);
for(j = 203890; j < 203900; j++) _solve(b, j);
for(j = 204730; j < 204740; j++) _solve(b, j);
for(j = 205570; j < 205580; j++) _solve(b, j);
for(j = 206410; j < 206420; j++) _solve(b, j);
for(j = 207250; j < 207260; j++) _solve(b, j);
for(j = 208090; j < 208100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 208930; j < 208940; j++) _solve(b, j);
for(j = 209770; j < 209780; j++) _solve(b, j);
for(j = 210610; j < 210620; j++) _solve(b, j);
for(j = 211450; j < 211460; j++) _solve(b, j);
for(j = 212290; j < 212300; j++) _solve(b, j);
for(j = 213130; j < 213140; j++) _solve(b, j);
for(j = 213970; j < 213980; j++) _solve(b, j);
for(j = 214810; j < 214820; j++) _solve(b, j);
for(j = 215650; j < 215660; j++) _solve(b, j);
for(j = 216490; j < 216500; j++) _solve(b, j);
for(j = 217330; j < 217340; j++) _solve(b, j);
for(j = 218170; j < 218180; j++) _solve(b, j);
for(j = 219010; j < 219020; j++) _solve(b, j);
for(j = 219850; j < 219860; j++) _solve(b, j);
for(j = 220690; j < 220700; j++) _solve(b, j);
for(j = 221530; j < 221540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 222370; j < 222380; j++) _solve(b, j);
for(j = 223210; j < 223220; j++) _solve(b, j);
for(j = 224050; j < 224060; j++) _solve(b, j);
for(j = 224890; j < 224900; j++) _solve(b, j);
for(j = 225730; j < 225740; j++) _solve(b, j);
for(j = 226570; j < 226580; j++) _solve(b, j);
for(j = 227410; j < 227420; j++) _solve(b, j);
for(j = 228250; j < 228260; j++) _solve(b, j);
for(j = 229090; j < 229100; j++) _solve(b, j);
for(j = 229930; j < 229940; j++) _solve(b, j);
for(j = 230770; j < 230780; j++) _solve(b, j);
for(j = 231610; j < 231620; j++) _solve(b, j);
for(j = 232450; j < 232460; j++) _solve(b, j);
for(j = 233290; j < 233300; j++) _solve(b, j);
for(j = 234130; j < 234140; j++) _solve(b, j);
for(j = 234970; j < 234980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 235810; j < 235820; j++) _solve(b, j);
for(j = 236650; j < 236660; j++) _solve(b, j);
for(j = 237490; j < 237500; j++) _solve(b, j);
for(j = 238330; j < 238340; j++) _solve(b, j);
for(j = 239170; j < 239180; j++) _solve(b, j);
for(j = 240010; j < 240020; j++) _solve(b, j);
for(j = 240850; j < 240860; j++) _solve(b, j);
for(j = 241690; j < 241700; j++) _solve(b, j);
for(j = 242530; j < 242540; j++) _solve(b, j);
for(j = 243370; j < 243380; j++) _solve(b, j);
for(j = 244210; j < 244220; j++) _solve(b, j);
for(j = 245050; j < 245060; j++) _solve(b, j);
for(j = 245890; j < 245900; j++) _solve(b, j);
for(j = 246730; j < 246740; j++) _solve(b, j);
for(j = 247570; j < 247580; j++) _solve(b, j);
for(j = 248410; j < 248420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 249250; j < 249260; j++) _solve(b, j);
for(j = 250090; j < 250100; j++) _solve(b, j);
for(j = 250930; j < 250940; j++) _solve(b, j);
for(j = 251770; j < 251780; j++) _solve(b, j);
for(j = 252610; j < 252620; j++) _solve(b, j);
for(j = 253450; j < 253460; j++) _solve(b, j);
for(j = 254290; j < 254300; j++) _solve(b, j);
for(j = 255130; j < 255140; j++) _solve(b, j);
for(j = 255970; j < 255980; j++) _solve(b, j);
for(j = 256810; j < 256820; j++) _solve(b, j);
for(j = 257650; j < 257660; j++) _solve(b, j);
for(j = 258490; j < 258500; j++) _solve(b, j);
for(j = 259330; j < 259340; j++) _solve(b, j);
for(j = 260170; j < 260180; j++) _solve(b, j);
for(j = 261010; j < 261020; j++) _solve(b, j);
for(j = 261850; j < 261860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 262690; j < 262700; j++) _solve(b, j);
for(j = 263530; j < 263540; j++) _solve(b, j);
for(j = 264370; j < 264380; j++) _solve(b, j);
for(j = 265210; j < 265220; j++) _solve(b, j);
for(j = 266050; j < 266060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 196340; j < 196350; j++) _solve(b, j);
for(j = 197180; j < 197190; j++) _solve(b, j);
for(j = 198020; j < 198030; j++) _solve(b, j);
for(j = 198860; j < 198870; j++) _solve(b, j);
for(j = 199700; j < 199710; j++) _solve(b, j);
for(j = 200540; j < 200550; j++) _solve(b, j);
for(j = 201380; j < 201390; j++) _solve(b, j);
for(j = 202220; j < 202230; j++) _solve(b, j);
for(j = 203060; j < 203070; j++) _solve(b, j);
for(j = 203900; j < 203910; j++) _solve(b, j);
for(j = 204740; j < 204750; j++) _solve(b, j);
for(j = 205580; j < 205590; j++) _solve(b, j);
for(j = 206420; j < 206430; j++) _solve(b, j);
for(j = 207260; j < 207270; j++) _solve(b, j);
for(j = 208100; j < 208110; j++) _solve(b, j);
for(j = 208940; j < 208950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 209780; j < 209790; j++) _solve(b, j);
for(j = 210620; j < 210630; j++) _solve(b, j);
for(j = 211460; j < 211470; j++) _solve(b, j);
for(j = 212300; j < 212310; j++) _solve(b, j);
for(j = 213140; j < 213150; j++) _solve(b, j);
for(j = 213980; j < 213990; j++) _solve(b, j);
for(j = 214820; j < 214830; j++) _solve(b, j);
for(j = 215660; j < 215670; j++) _solve(b, j);
for(j = 216500; j < 216510; j++) _solve(b, j);
for(j = 217340; j < 217350; j++) _solve(b, j);
for(j = 218180; j < 218190; j++) _solve(b, j);
for(j = 219020; j < 219030; j++) _solve(b, j);
for(j = 219860; j < 219870; j++) _solve(b, j);
for(j = 220700; j < 220710; j++) _solve(b, j);
for(j = 221540; j < 221550; j++) _solve(b, j);
for(j = 222380; j < 222390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 223220; j < 223230; j++) _solve(b, j);
for(j = 224060; j < 224070; j++) _solve(b, j);
for(j = 224900; j < 224910; j++) _solve(b, j);
for(j = 225740; j < 225750; j++) _solve(b, j);
for(j = 226580; j < 226590; j++) _solve(b, j);
for(j = 227420; j < 227430; j++) _solve(b, j);
for(j = 228260; j < 228270; j++) _solve(b, j);
for(j = 229100; j < 229110; j++) _solve(b, j);
for(j = 229940; j < 229950; j++) _solve(b, j);
for(j = 230780; j < 230790; j++) _solve(b, j);
for(j = 231620; j < 231630; j++) _solve(b, j);
for(j = 232460; j < 232470; j++) _solve(b, j);
for(j = 233300; j < 233310; j++) _solve(b, j);
for(j = 234140; j < 234150; j++) _solve(b, j);
for(j = 234980; j < 234990; j++) _solve(b, j);
for(j = 235820; j < 235830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 236660; j < 236670; j++) _solve(b, j);
for(j = 237500; j < 237510; j++) _solve(b, j);
for(j = 238340; j < 238350; j++) _solve(b, j);
for(j = 239180; j < 239190; j++) _solve(b, j);
for(j = 240020; j < 240030; j++) _solve(b, j);
for(j = 240860; j < 240870; j++) _solve(b, j);
for(j = 241700; j < 241710; j++) _solve(b, j);
for(j = 242540; j < 242550; j++) _solve(b, j);
for(j = 243380; j < 243390; j++) _solve(b, j);
for(j = 244220; j < 244230; j++) _solve(b, j);
for(j = 245060; j < 245070; j++) _solve(b, j);
for(j = 245900; j < 245910; j++) _solve(b, j);
for(j = 246740; j < 246750; j++) _solve(b, j);
for(j = 247580; j < 247590; j++) _solve(b, j);
for(j = 248420; j < 248430; j++) _solve(b, j);
for(j = 249260; j < 249270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 250100; j < 250110; j++) _solve(b, j);
for(j = 250940; j < 250950; j++) _solve(b, j);
for(j = 251780; j < 251790; j++) _solve(b, j);
for(j = 252620; j < 252630; j++) _solve(b, j);
for(j = 253460; j < 253470; j++) _solve(b, j);
for(j = 254300; j < 254310; j++) _solve(b, j);
for(j = 255140; j < 255150; j++) _solve(b, j);
for(j = 255980; j < 255990; j++) _solve(b, j);
for(j = 256820; j < 256830; j++) _solve(b, j);
for(j = 257660; j < 257670; j++) _solve(b, j);
for(j = 258500; j < 258510; j++) _solve(b, j);
for(j = 259340; j < 259350; j++) _solve(b, j);
for(j = 260180; j < 260190; j++) _solve(b, j);
for(j = 261020; j < 261030; j++) _solve(b, j);
for(j = 261860; j < 261870; j++) _solve(b, j);
for(j = 262700; j < 262710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 263540; j < 263550; j++) _solve(b, j);
for(j = 264380; j < 264390; j++) _solve(b, j);
for(j = 265220; j < 265230; j++) _solve(b, j);
for(j = 266060; j < 266070; j++) _solve(b, j);
for(j = 266900; j < 266910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 197190; j < 197200; j++) _solve(b, j);
for(j = 198030; j < 198040; j++) _solve(b, j);
for(j = 198870; j < 198880; j++) _solve(b, j);
for(j = 199710; j < 199720; j++) _solve(b, j);
for(j = 200550; j < 200560; j++) _solve(b, j);
for(j = 201390; j < 201400; j++) _solve(b, j);
for(j = 202230; j < 202240; j++) _solve(b, j);
for(j = 203070; j < 203080; j++) _solve(b, j);
for(j = 203910; j < 203920; j++) _solve(b, j);
for(j = 204750; j < 204760; j++) _solve(b, j);
for(j = 205590; j < 205600; j++) _solve(b, j);
for(j = 206430; j < 206440; j++) _solve(b, j);
for(j = 207270; j < 207280; j++) _solve(b, j);
for(j = 208110; j < 208120; j++) _solve(b, j);
for(j = 208950; j < 208960; j++) _solve(b, j);
for(j = 209790; j < 209800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 210630; j < 210640; j++) _solve(b, j);
for(j = 211470; j < 211480; j++) _solve(b, j);
for(j = 212310; j < 212320; j++) _solve(b, j);
for(j = 213150; j < 213160; j++) _solve(b, j);
for(j = 213990; j < 214000; j++) _solve(b, j);
for(j = 214830; j < 214840; j++) _solve(b, j);
for(j = 215670; j < 215680; j++) _solve(b, j);
for(j = 216510; j < 216520; j++) _solve(b, j);
for(j = 217350; j < 217360; j++) _solve(b, j);
for(j = 218190; j < 218200; j++) _solve(b, j);
for(j = 219030; j < 219040; j++) _solve(b, j);
for(j = 219870; j < 219880; j++) _solve(b, j);
for(j = 220710; j < 220720; j++) _solve(b, j);
for(j = 221550; j < 221560; j++) _solve(b, j);
for(j = 222390; j < 222400; j++) _solve(b, j);
for(j = 223230; j < 223240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 224070; j < 224080; j++) _solve(b, j);
for(j = 224910; j < 224920; j++) _solve(b, j);
for(j = 225750; j < 225760; j++) _solve(b, j);
for(j = 226590; j < 226600; j++) _solve(b, j);
for(j = 227430; j < 227440; j++) _solve(b, j);
for(j = 228270; j < 228280; j++) _solve(b, j);
for(j = 229110; j < 229120; j++) _solve(b, j);
for(j = 229950; j < 229960; j++) _solve(b, j);
for(j = 230790; j < 230800; j++) _solve(b, j);
for(j = 231630; j < 231640; j++) _solve(b, j);
for(j = 232470; j < 232480; j++) _solve(b, j);
for(j = 233310; j < 233320; j++) _solve(b, j);
for(j = 234150; j < 234160; j++) _solve(b, j);
for(j = 234990; j < 235000; j++) _solve(b, j);
for(j = 235830; j < 235840; j++) _solve(b, j);
for(j = 236670; j < 236680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 237510; j < 237520; j++) _solve(b, j);
for(j = 238350; j < 238360; j++) _solve(b, j);
for(j = 239190; j < 239200; j++) _solve(b, j);
for(j = 240030; j < 240040; j++) _solve(b, j);
for(j = 240870; j < 240880; j++) _solve(b, j);
for(j = 241710; j < 241720; j++) _solve(b, j);
for(j = 242550; j < 242560; j++) _solve(b, j);
for(j = 243390; j < 243400; j++) _solve(b, j);
for(j = 244230; j < 244240; j++) _solve(b, j);
for(j = 245070; j < 245080; j++) _solve(b, j);
for(j = 245910; j < 245920; j++) _solve(b, j);
for(j = 246750; j < 246760; j++) _solve(b, j);
for(j = 247590; j < 247600; j++) _solve(b, j);
for(j = 248430; j < 248440; j++) _solve(b, j);
for(j = 249270; j < 249280; j++) _solve(b, j);
for(j = 250110; j < 250120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 250950; j < 250960; j++) _solve(b, j);
for(j = 251790; j < 251800; j++) _solve(b, j);
for(j = 252630; j < 252640; j++) _solve(b, j);
for(j = 253470; j < 253480; j++) _solve(b, j);
for(j = 254310; j < 254320; j++) _solve(b, j);
for(j = 255150; j < 255160; j++) _solve(b, j);
for(j = 255990; j < 256000; j++) _solve(b, j);
for(j = 256830; j < 256840; j++) _solve(b, j);
for(j = 257670; j < 257680; j++) _solve(b, j);
for(j = 258510; j < 258520; j++) _solve(b, j);
for(j = 259350; j < 259360; j++) _solve(b, j);
for(j = 260190; j < 260200; j++) _solve(b, j);
for(j = 261030; j < 261040; j++) _solve(b, j);
for(j = 261870; j < 261880; j++) _solve(b, j);
for(j = 262710; j < 262720; j++) _solve(b, j);
for(j = 263550; j < 263560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 264390; j < 264400; j++) _solve(b, j);
for(j = 265230; j < 265240; j++) _solve(b, j);
for(j = 266070; j < 266080; j++) _solve(b, j);
for(j = 266910; j < 266920; j++) _solve(b, j);
for(j = 267750; j < 267760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 198040; j < 198050; j++) _solve(b, j);
for(j = 198880; j < 198890; j++) _solve(b, j);
for(j = 199720; j < 199730; j++) _solve(b, j);
for(j = 200560; j < 200570; j++) _solve(b, j);
for(j = 201400; j < 201410; j++) _solve(b, j);
for(j = 202240; j < 202250; j++) _solve(b, j);
for(j = 203080; j < 203090; j++) _solve(b, j);
for(j = 203920; j < 203930; j++) _solve(b, j);
for(j = 204760; j < 204770; j++) _solve(b, j);
for(j = 205600; j < 205610; j++) _solve(b, j);
for(j = 206440; j < 206450; j++) _solve(b, j);
for(j = 207280; j < 207290; j++) _solve(b, j);
for(j = 208120; j < 208130; j++) _solve(b, j);
for(j = 208960; j < 208970; j++) _solve(b, j);
for(j = 209800; j < 209810; j++) _solve(b, j);
for(j = 210640; j < 210650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 211480; j < 211490; j++) _solve(b, j);
for(j = 212320; j < 212330; j++) _solve(b, j);
for(j = 213160; j < 213170; j++) _solve(b, j);
for(j = 214000; j < 214010; j++) _solve(b, j);
for(j = 214840; j < 214850; j++) _solve(b, j);
for(j = 215680; j < 215690; j++) _solve(b, j);
for(j = 216520; j < 216530; j++) _solve(b, j);
for(j = 217360; j < 217370; j++) _solve(b, j);
for(j = 218200; j < 218210; j++) _solve(b, j);
for(j = 219040; j < 219050; j++) _solve(b, j);
for(j = 219880; j < 219890; j++) _solve(b, j);
for(j = 220720; j < 220730; j++) _solve(b, j);
for(j = 221560; j < 221570; j++) _solve(b, j);
for(j = 222400; j < 222410; j++) _solve(b, j);
for(j = 223240; j < 223250; j++) _solve(b, j);
for(j = 224080; j < 224090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 224920; j < 224930; j++) _solve(b, j);
for(j = 225760; j < 225770; j++) _solve(b, j);
for(j = 226600; j < 226610; j++) _solve(b, j);
for(j = 227440; j < 227450; j++) _solve(b, j);
for(j = 228280; j < 228290; j++) _solve(b, j);
for(j = 229120; j < 229130; j++) _solve(b, j);
for(j = 229960; j < 229970; j++) _solve(b, j);
for(j = 230800; j < 230810; j++) _solve(b, j);
for(j = 231640; j < 231650; j++) _solve(b, j);
for(j = 232480; j < 232490; j++) _solve(b, j);
for(j = 233320; j < 233330; j++) _solve(b, j);
for(j = 234160; j < 234170; j++) _solve(b, j);
for(j = 235000; j < 235010; j++) _solve(b, j);
for(j = 235840; j < 235850; j++) _solve(b, j);
for(j = 236680; j < 236690; j++) _solve(b, j);
for(j = 237520; j < 237530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 238360; j < 238370; j++) _solve(b, j);
for(j = 239200; j < 239210; j++) _solve(b, j);
for(j = 240040; j < 240050; j++) _solve(b, j);
for(j = 240880; j < 240890; j++) _solve(b, j);
for(j = 241720; j < 241730; j++) _solve(b, j);
for(j = 242560; j < 242570; j++) _solve(b, j);
for(j = 243400; j < 243410; j++) _solve(b, j);
for(j = 244240; j < 244250; j++) _solve(b, j);
for(j = 245080; j < 245090; j++) _solve(b, j);
for(j = 245920; j < 245930; j++) _solve(b, j);
for(j = 246760; j < 246770; j++) _solve(b, j);
for(j = 247600; j < 247610; j++) _solve(b, j);
for(j = 248440; j < 248450; j++) _solve(b, j);
for(j = 249280; j < 249290; j++) _solve(b, j);
for(j = 250120; j < 250130; j++) _solve(b, j);
for(j = 250960; j < 250970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 251800; j < 251810; j++) _solve(b, j);
for(j = 252640; j < 252650; j++) _solve(b, j);
for(j = 253480; j < 253490; j++) _solve(b, j);
for(j = 254320; j < 254330; j++) _solve(b, j);
for(j = 255160; j < 255170; j++) _solve(b, j);
for(j = 256000; j < 256010; j++) _solve(b, j);
for(j = 256840; j < 256850; j++) _solve(b, j);
for(j = 257680; j < 257690; j++) _solve(b, j);
for(j = 258520; j < 258530; j++) _solve(b, j);
for(j = 259360; j < 259370; j++) _solve(b, j);
for(j = 260200; j < 260210; j++) _solve(b, j);
for(j = 261040; j < 261050; j++) _solve(b, j);
for(j = 261880; j < 261890; j++) _solve(b, j);
for(j = 262720; j < 262730; j++) _solve(b, j);
for(j = 263560; j < 263570; j++) _solve(b, j);
for(j = 264400; j < 264410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 265240; j < 265250; j++) _solve(b, j);
for(j = 266080; j < 266090; j++) _solve(b, j);
for(j = 266920; j < 266930; j++) _solve(b, j);
for(j = 267760; j < 267770; j++) _solve(b, j);
for(j = 268600; j < 268610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 198890; j < 198900; j++) _solve(b, j);
for(j = 199730; j < 199740; j++) _solve(b, j);
for(j = 200570; j < 200580; j++) _solve(b, j);
for(j = 201410; j < 201420; j++) _solve(b, j);
for(j = 202250; j < 202260; j++) _solve(b, j);
for(j = 203090; j < 203100; j++) _solve(b, j);
for(j = 203930; j < 203940; j++) _solve(b, j);
for(j = 204770; j < 204780; j++) _solve(b, j);
for(j = 205610; j < 205620; j++) _solve(b, j);
for(j = 206450; j < 206460; j++) _solve(b, j);
for(j = 207290; j < 207300; j++) _solve(b, j);
for(j = 208130; j < 208140; j++) _solve(b, j);
for(j = 208970; j < 208980; j++) _solve(b, j);
for(j = 209810; j < 209820; j++) _solve(b, j);
for(j = 210650; j < 210660; j++) _solve(b, j);
for(j = 211490; j < 211500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 212330; j < 212340; j++) _solve(b, j);
for(j = 213170; j < 213180; j++) _solve(b, j);
for(j = 214010; j < 214020; j++) _solve(b, j);
for(j = 214850; j < 214860; j++) _solve(b, j);
for(j = 215690; j < 215700; j++) _solve(b, j);
for(j = 216530; j < 216540; j++) _solve(b, j);
for(j = 217370; j < 217380; j++) _solve(b, j);
for(j = 218210; j < 218220; j++) _solve(b, j);
for(j = 219050; j < 219060; j++) _solve(b, j);
for(j = 219890; j < 219900; j++) _solve(b, j);
for(j = 220730; j < 220740; j++) _solve(b, j);
for(j = 221570; j < 221580; j++) _solve(b, j);
for(j = 222410; j < 222420; j++) _solve(b, j);
for(j = 223250; j < 223260; j++) _solve(b, j);
for(j = 224090; j < 224100; j++) _solve(b, j);
for(j = 224930; j < 224940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 225770; j < 225780; j++) _solve(b, j);
for(j = 226610; j < 226620; j++) _solve(b, j);
for(j = 227450; j < 227460; j++) _solve(b, j);
for(j = 228290; j < 228300; j++) _solve(b, j);
for(j = 229130; j < 229140; j++) _solve(b, j);
for(j = 229970; j < 229980; j++) _solve(b, j);
for(j = 230810; j < 230820; j++) _solve(b, j);
for(j = 231650; j < 231660; j++) _solve(b, j);
for(j = 232490; j < 232500; j++) _solve(b, j);
for(j = 233330; j < 233340; j++) _solve(b, j);
for(j = 234170; j < 234180; j++) _solve(b, j);
for(j = 235010; j < 235020; j++) _solve(b, j);
for(j = 235850; j < 235860; j++) _solve(b, j);
for(j = 236690; j < 236700; j++) _solve(b, j);
for(j = 237530; j < 237540; j++) _solve(b, j);
for(j = 238370; j < 238380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 239210; j < 239220; j++) _solve(b, j);
for(j = 240050; j < 240060; j++) _solve(b, j);
for(j = 240890; j < 240900; j++) _solve(b, j);
for(j = 241730; j < 241740; j++) _solve(b, j);
for(j = 242570; j < 242580; j++) _solve(b, j);
for(j = 243410; j < 243420; j++) _solve(b, j);
for(j = 244250; j < 244260; j++) _solve(b, j);
for(j = 245090; j < 245100; j++) _solve(b, j);
for(j = 245930; j < 245940; j++) _solve(b, j);
for(j = 246770; j < 246780; j++) _solve(b, j);
for(j = 247610; j < 247620; j++) _solve(b, j);
for(j = 248450; j < 248460; j++) _solve(b, j);
for(j = 249290; j < 249300; j++) _solve(b, j);
for(j = 250130; j < 250140; j++) _solve(b, j);
for(j = 250970; j < 250980; j++) _solve(b, j);
for(j = 251810; j < 251820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 252650; j < 252660; j++) _solve(b, j);
for(j = 253490; j < 253500; j++) _solve(b, j);
for(j = 254330; j < 254340; j++) _solve(b, j);
for(j = 255170; j < 255180; j++) _solve(b, j);
for(j = 256010; j < 256020; j++) _solve(b, j);
for(j = 256850; j < 256860; j++) _solve(b, j);
for(j = 257690; j < 257700; j++) _solve(b, j);
for(j = 258530; j < 258540; j++) _solve(b, j);
for(j = 259370; j < 259380; j++) _solve(b, j);
for(j = 260210; j < 260220; j++) _solve(b, j);
for(j = 261050; j < 261060; j++) _solve(b, j);
for(j = 261890; j < 261900; j++) _solve(b, j);
for(j = 262730; j < 262740; j++) _solve(b, j);
for(j = 263570; j < 263580; j++) _solve(b, j);
for(j = 264410; j < 264420; j++) _solve(b, j);
for(j = 265250; j < 265260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 266090; j < 266100; j++) _solve(b, j);
for(j = 266930; j < 266940; j++) _solve(b, j);
for(j = 267770; j < 267780; j++) _solve(b, j);
for(j = 268610; j < 268620; j++) _solve(b, j);
for(j = 269450; j < 269460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 199740; j < 199750; j++) _solve(b, j);
for(j = 200580; j < 200590; j++) _solve(b, j);
for(j = 201420; j < 201430; j++) _solve(b, j);
for(j = 202260; j < 202270; j++) _solve(b, j);
for(j = 203100; j < 203110; j++) _solve(b, j);
for(j = 203940; j < 203950; j++) _solve(b, j);
for(j = 204780; j < 204790; j++) _solve(b, j);
for(j = 205620; j < 205630; j++) _solve(b, j);
for(j = 206460; j < 206470; j++) _solve(b, j);
for(j = 207300; j < 207310; j++) _solve(b, j);
for(j = 208140; j < 208150; j++) _solve(b, j);
for(j = 208980; j < 208990; j++) _solve(b, j);
for(j = 209820; j < 209830; j++) _solve(b, j);
for(j = 210660; j < 210670; j++) _solve(b, j);
for(j = 211500; j < 211510; j++) _solve(b, j);
for(j = 212340; j < 212350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 213180; j < 213190; j++) _solve(b, j);
for(j = 214020; j < 214030; j++) _solve(b, j);
for(j = 214860; j < 214870; j++) _solve(b, j);
for(j = 215700; j < 215710; j++) _solve(b, j);
for(j = 216540; j < 216550; j++) _solve(b, j);
for(j = 217380; j < 217390; j++) _solve(b, j);
for(j = 218220; j < 218230; j++) _solve(b, j);
for(j = 219060; j < 219070; j++) _solve(b, j);
for(j = 219900; j < 219910; j++) _solve(b, j);
for(j = 220740; j < 220750; j++) _solve(b, j);
for(j = 221580; j < 221590; j++) _solve(b, j);
for(j = 222420; j < 222430; j++) _solve(b, j);
for(j = 223260; j < 223270; j++) _solve(b, j);
for(j = 224100; j < 224110; j++) _solve(b, j);
for(j = 224940; j < 224950; j++) _solve(b, j);
for(j = 225780; j < 225790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 226620; j < 226630; j++) _solve(b, j);
for(j = 227460; j < 227470; j++) _solve(b, j);
for(j = 228300; j < 228310; j++) _solve(b, j);
for(j = 229140; j < 229150; j++) _solve(b, j);
for(j = 229980; j < 229990; j++) _solve(b, j);
for(j = 230820; j < 230830; j++) _solve(b, j);
for(j = 231660; j < 231670; j++) _solve(b, j);
for(j = 232500; j < 232510; j++) _solve(b, j);
for(j = 233340; j < 233350; j++) _solve(b, j);
for(j = 234180; j < 234190; j++) _solve(b, j);
for(j = 235020; j < 235030; j++) _solve(b, j);
for(j = 235860; j < 235870; j++) _solve(b, j);
for(j = 236700; j < 236710; j++) _solve(b, j);
for(j = 237540; j < 237550; j++) _solve(b, j);
for(j = 238380; j < 238390; j++) _solve(b, j);
for(j = 239220; j < 239230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 240060; j < 240070; j++) _solve(b, j);
for(j = 240900; j < 240910; j++) _solve(b, j);
for(j = 241740; j < 241750; j++) _solve(b, j);
for(j = 242580; j < 242590; j++) _solve(b, j);
for(j = 243420; j < 243430; j++) _solve(b, j);
for(j = 244260; j < 244270; j++) _solve(b, j);
for(j = 245100; j < 245110; j++) _solve(b, j);
for(j = 245940; j < 245950; j++) _solve(b, j);
for(j = 246780; j < 246790; j++) _solve(b, j);
for(j = 247620; j < 247630; j++) _solve(b, j);
for(j = 248460; j < 248470; j++) _solve(b, j);
for(j = 249300; j < 249310; j++) _solve(b, j);
for(j = 250140; j < 250150; j++) _solve(b, j);
for(j = 250980; j < 250990; j++) _solve(b, j);
for(j = 251820; j < 251830; j++) _solve(b, j);
for(j = 252660; j < 252670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 253500; j < 253510; j++) _solve(b, j);
for(j = 254340; j < 254350; j++) _solve(b, j);
for(j = 255180; j < 255190; j++) _solve(b, j);
for(j = 256020; j < 256030; j++) _solve(b, j);
for(j = 256860; j < 256870; j++) _solve(b, j);
for(j = 257700; j < 257710; j++) _solve(b, j);
for(j = 258540; j < 258550; j++) _solve(b, j);
for(j = 259380; j < 259390; j++) _solve(b, j);
for(j = 260220; j < 260230; j++) _solve(b, j);
for(j = 261060; j < 261070; j++) _solve(b, j);
for(j = 261900; j < 261910; j++) _solve(b, j);
for(j = 262740; j < 262750; j++) _solve(b, j);
for(j = 263580; j < 263590; j++) _solve(b, j);
for(j = 264420; j < 264430; j++) _solve(b, j);
for(j = 265260; j < 265270; j++) _solve(b, j);
for(j = 266100; j < 266110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 266940; j < 266950; j++) _solve(b, j);
for(j = 267780; j < 267790; j++) _solve(b, j);
for(j = 268620; j < 268630; j++) _solve(b, j);
for(j = 269460; j < 269470; j++) _solve(b, j);
for(j = 270300; j < 270310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 200590; j < 200600; j++) _solve(b, j);
for(j = 201430; j < 201440; j++) _solve(b, j);
for(j = 202270; j < 202280; j++) _solve(b, j);
for(j = 203110; j < 203120; j++) _solve(b, j);
for(j = 203950; j < 203960; j++) _solve(b, j);
for(j = 204790; j < 204800; j++) _solve(b, j);
for(j = 205630; j < 205640; j++) _solve(b, j);
for(j = 206470; j < 206480; j++) _solve(b, j);
for(j = 207310; j < 207320; j++) _solve(b, j);
for(j = 208150; j < 208160; j++) _solve(b, j);
for(j = 208990; j < 209000; j++) _solve(b, j);
for(j = 209830; j < 209840; j++) _solve(b, j);
for(j = 210670; j < 210680; j++) _solve(b, j);
for(j = 211510; j < 211520; j++) _solve(b, j);
for(j = 212350; j < 212360; j++) _solve(b, j);
for(j = 213190; j < 213200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 214030; j < 214040; j++) _solve(b, j);
for(j = 214870; j < 214880; j++) _solve(b, j);
for(j = 215710; j < 215720; j++) _solve(b, j);
for(j = 216550; j < 216560; j++) _solve(b, j);
for(j = 217390; j < 217400; j++) _solve(b, j);
for(j = 218230; j < 218240; j++) _solve(b, j);
for(j = 219070; j < 219080; j++) _solve(b, j);
for(j = 219910; j < 219920; j++) _solve(b, j);
for(j = 220750; j < 220760; j++) _solve(b, j);
for(j = 221590; j < 221600; j++) _solve(b, j);
for(j = 222430; j < 222440; j++) _solve(b, j);
for(j = 223270; j < 223280; j++) _solve(b, j);
for(j = 224110; j < 224120; j++) _solve(b, j);
for(j = 224950; j < 224960; j++) _solve(b, j);
for(j = 225790; j < 225800; j++) _solve(b, j);
for(j = 226630; j < 226640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 227470; j < 227480; j++) _solve(b, j);
for(j = 228310; j < 228320; j++) _solve(b, j);
for(j = 229150; j < 229160; j++) _solve(b, j);
for(j = 229990; j < 230000; j++) _solve(b, j);
for(j = 230830; j < 230840; j++) _solve(b, j);
for(j = 231670; j < 231680; j++) _solve(b, j);
for(j = 232510; j < 232520; j++) _solve(b, j);
for(j = 233350; j < 233360; j++) _solve(b, j);
for(j = 234190; j < 234200; j++) _solve(b, j);
for(j = 235030; j < 235040; j++) _solve(b, j);
for(j = 235870; j < 235880; j++) _solve(b, j);
for(j = 236710; j < 236720; j++) _solve(b, j);
for(j = 237550; j < 237560; j++) _solve(b, j);
for(j = 238390; j < 238400; j++) _solve(b, j);
for(j = 239230; j < 239240; j++) _solve(b, j);
for(j = 240070; j < 240080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 240910; j < 240920; j++) _solve(b, j);
for(j = 241750; j < 241760; j++) _solve(b, j);
for(j = 242590; j < 242600; j++) _solve(b, j);
for(j = 243430; j < 243440; j++) _solve(b, j);
for(j = 244270; j < 244280; j++) _solve(b, j);
for(j = 245110; j < 245120; j++) _solve(b, j);
for(j = 245950; j < 245960; j++) _solve(b, j);
for(j = 246790; j < 246800; j++) _solve(b, j);
for(j = 247630; j < 247640; j++) _solve(b, j);
for(j = 248470; j < 248480; j++) _solve(b, j);
for(j = 249310; j < 249320; j++) _solve(b, j);
for(j = 250150; j < 250160; j++) _solve(b, j);
for(j = 250990; j < 251000; j++) _solve(b, j);
for(j = 251830; j < 251840; j++) _solve(b, j);
for(j = 252670; j < 252680; j++) _solve(b, j);
for(j = 253510; j < 253520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 254350; j < 254360; j++) _solve(b, j);
for(j = 255190; j < 255200; j++) _solve(b, j);
for(j = 256030; j < 256040; j++) _solve(b, j);
for(j = 256870; j < 256880; j++) _solve(b, j);
for(j = 257710; j < 257720; j++) _solve(b, j);
for(j = 258550; j < 258560; j++) _solve(b, j);
for(j = 259390; j < 259400; j++) _solve(b, j);
for(j = 260230; j < 260240; j++) _solve(b, j);
for(j = 261070; j < 261080; j++) _solve(b, j);
for(j = 261910; j < 261920; j++) _solve(b, j);
for(j = 262750; j < 262760; j++) _solve(b, j);
for(j = 263590; j < 263600; j++) _solve(b, j);
for(j = 264430; j < 264440; j++) _solve(b, j);
for(j = 265270; j < 265280; j++) _solve(b, j);
for(j = 266110; j < 266120; j++) _solve(b, j);
for(j = 266950; j < 266960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 267790; j < 267800; j++) _solve(b, j);
for(j = 268630; j < 268640; j++) _solve(b, j);
for(j = 269470; j < 269480; j++) _solve(b, j);
for(j = 270310; j < 270320; j++) _solve(b, j);
for(j = 271150; j < 271160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 201440; j < 201450; j++) _solve(b, j);
for(j = 202280; j < 202290; j++) _solve(b, j);
for(j = 203120; j < 203130; j++) _solve(b, j);
for(j = 203960; j < 203970; j++) _solve(b, j);
for(j = 204800; j < 204810; j++) _solve(b, j);
for(j = 205640; j < 205650; j++) _solve(b, j);
for(j = 206480; j < 206490; j++) _solve(b, j);
for(j = 207320; j < 207330; j++) _solve(b, j);
for(j = 208160; j < 208170; j++) _solve(b, j);
for(j = 209000; j < 209010; j++) _solve(b, j);
for(j = 209840; j < 209850; j++) _solve(b, j);
for(j = 210680; j < 210690; j++) _solve(b, j);
for(j = 211520; j < 211530; j++) _solve(b, j);
for(j = 212360; j < 212370; j++) _solve(b, j);
for(j = 213200; j < 213210; j++) _solve(b, j);
for(j = 214040; j < 214050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 214880; j < 214890; j++) _solve(b, j);
for(j = 215720; j < 215730; j++) _solve(b, j);
for(j = 216560; j < 216570; j++) _solve(b, j);
for(j = 217400; j < 217410; j++) _solve(b, j);
for(j = 218240; j < 218250; j++) _solve(b, j);
for(j = 219080; j < 219090; j++) _solve(b, j);
for(j = 219920; j < 219930; j++) _solve(b, j);
for(j = 220760; j < 220770; j++) _solve(b, j);
for(j = 221600; j < 221610; j++) _solve(b, j);
for(j = 222440; j < 222450; j++) _solve(b, j);
for(j = 223280; j < 223290; j++) _solve(b, j);
for(j = 224120; j < 224130; j++) _solve(b, j);
for(j = 224960; j < 224970; j++) _solve(b, j);
for(j = 225800; j < 225810; j++) _solve(b, j);
for(j = 226640; j < 226650; j++) _solve(b, j);
for(j = 227480; j < 227490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 228320; j < 228330; j++) _solve(b, j);
for(j = 229160; j < 229170; j++) _solve(b, j);
for(j = 230000; j < 230010; j++) _solve(b, j);
for(j = 230840; j < 230850; j++) _solve(b, j);
for(j = 231680; j < 231690; j++) _solve(b, j);
for(j = 232520; j < 232530; j++) _solve(b, j);
for(j = 233360; j < 233370; j++) _solve(b, j);
for(j = 234200; j < 234210; j++) _solve(b, j);
for(j = 235040; j < 235050; j++) _solve(b, j);
for(j = 235880; j < 235890; j++) _solve(b, j);
for(j = 236720; j < 236730; j++) _solve(b, j);
for(j = 237560; j < 237570; j++) _solve(b, j);
for(j = 238400; j < 238410; j++) _solve(b, j);
for(j = 239240; j < 239250; j++) _solve(b, j);
for(j = 240080; j < 240090; j++) _solve(b, j);
for(j = 240920; j < 240930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 241760; j < 241770; j++) _solve(b, j);
for(j = 242600; j < 242610; j++) _solve(b, j);
for(j = 243440; j < 243450; j++) _solve(b, j);
for(j = 244280; j < 244290; j++) _solve(b, j);
for(j = 245120; j < 245130; j++) _solve(b, j);
for(j = 245960; j < 245970; j++) _solve(b, j);
for(j = 246800; j < 246810; j++) _solve(b, j);
for(j = 247640; j < 247650; j++) _solve(b, j);
for(j = 248480; j < 248490; j++) _solve(b, j);
for(j = 249320; j < 249330; j++) _solve(b, j);
for(j = 250160; j < 250170; j++) _solve(b, j);
for(j = 251000; j < 251010; j++) _solve(b, j);
for(j = 251840; j < 251850; j++) _solve(b, j);
for(j = 252680; j < 252690; j++) _solve(b, j);
for(j = 253520; j < 253530; j++) _solve(b, j);
for(j = 254360; j < 254370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 255200; j < 255210; j++) _solve(b, j);
for(j = 256040; j < 256050; j++) _solve(b, j);
for(j = 256880; j < 256890; j++) _solve(b, j);
for(j = 257720; j < 257730; j++) _solve(b, j);
for(j = 258560; j < 258570; j++) _solve(b, j);
for(j = 259400; j < 259410; j++) _solve(b, j);
for(j = 260240; j < 260250; j++) _solve(b, j);
for(j = 261080; j < 261090; j++) _solve(b, j);
for(j = 261920; j < 261930; j++) _solve(b, j);
for(j = 262760; j < 262770; j++) _solve(b, j);
for(j = 263600; j < 263610; j++) _solve(b, j);
for(j = 264440; j < 264450; j++) _solve(b, j);
for(j = 265280; j < 265290; j++) _solve(b, j);
for(j = 266120; j < 266130; j++) _solve(b, j);
for(j = 266960; j < 266970; j++) _solve(b, j);
for(j = 267800; j < 267810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 268640; j < 268650; j++) _solve(b, j);
for(j = 269480; j < 269490; j++) _solve(b, j);
for(j = 270320; j < 270330; j++) _solve(b, j);
for(j = 271160; j < 271170; j++) _solve(b, j);
for(j = 272000; j < 272010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 202290; j < 202300; j++) _solve(b, j);
for(j = 203130; j < 203140; j++) _solve(b, j);
for(j = 203970; j < 203980; j++) _solve(b, j);
for(j = 204810; j < 204820; j++) _solve(b, j);
for(j = 205650; j < 205660; j++) _solve(b, j);
for(j = 206490; j < 206500; j++) _solve(b, j);
for(j = 207330; j < 207340; j++) _solve(b, j);
for(j = 208170; j < 208180; j++) _solve(b, j);
for(j = 209010; j < 209020; j++) _solve(b, j);
for(j = 209850; j < 209860; j++) _solve(b, j);
for(j = 210690; j < 210700; j++) _solve(b, j);
for(j = 211530; j < 211540; j++) _solve(b, j);
for(j = 212370; j < 212380; j++) _solve(b, j);
for(j = 213210; j < 213220; j++) _solve(b, j);
for(j = 214050; j < 214060; j++) _solve(b, j);
for(j = 214890; j < 214900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 215730; j < 215740; j++) _solve(b, j);
for(j = 216570; j < 216580; j++) _solve(b, j);
for(j = 217410; j < 217420; j++) _solve(b, j);
for(j = 218250; j < 218260; j++) _solve(b, j);
for(j = 219090; j < 219100; j++) _solve(b, j);
for(j = 219930; j < 219940; j++) _solve(b, j);
for(j = 220770; j < 220780; j++) _solve(b, j);
for(j = 221610; j < 221620; j++) _solve(b, j);
for(j = 222450; j < 222460; j++) _solve(b, j);
for(j = 223290; j < 223300; j++) _solve(b, j);
for(j = 224130; j < 224140; j++) _solve(b, j);
for(j = 224970; j < 224980; j++) _solve(b, j);
for(j = 225810; j < 225820; j++) _solve(b, j);
for(j = 226650; j < 226660; j++) _solve(b, j);
for(j = 227490; j < 227500; j++) _solve(b, j);
for(j = 228330; j < 228340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 229170; j < 229180; j++) _solve(b, j);
for(j = 230010; j < 230020; j++) _solve(b, j);
for(j = 230850; j < 230860; j++) _solve(b, j);
for(j = 231690; j < 231700; j++) _solve(b, j);
for(j = 232530; j < 232540; j++) _solve(b, j);
for(j = 233370; j < 233380; j++) _solve(b, j);
for(j = 234210; j < 234220; j++) _solve(b, j);
for(j = 235050; j < 235060; j++) _solve(b, j);
for(j = 235890; j < 235900; j++) _solve(b, j);
for(j = 236730; j < 236740; j++) _solve(b, j);
for(j = 237570; j < 237580; j++) _solve(b, j);
for(j = 238410; j < 238420; j++) _solve(b, j);
for(j = 239250; j < 239260; j++) _solve(b, j);
for(j = 240090; j < 240100; j++) _solve(b, j);
for(j = 240930; j < 240940; j++) _solve(b, j);
for(j = 241770; j < 241780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 242610; j < 242620; j++) _solve(b, j);
for(j = 243450; j < 243460; j++) _solve(b, j);
for(j = 244290; j < 244300; j++) _solve(b, j);
for(j = 245130; j < 245140; j++) _solve(b, j);
for(j = 245970; j < 245980; j++) _solve(b, j);
for(j = 246810; j < 246820; j++) _solve(b, j);
for(j = 247650; j < 247660; j++) _solve(b, j);
for(j = 248490; j < 248500; j++) _solve(b, j);
for(j = 249330; j < 249340; j++) _solve(b, j);
for(j = 250170; j < 250180; j++) _solve(b, j);
for(j = 251010; j < 251020; j++) _solve(b, j);
for(j = 251850; j < 251860; j++) _solve(b, j);
for(j = 252690; j < 252700; j++) _solve(b, j);
for(j = 253530; j < 253540; j++) _solve(b, j);
for(j = 254370; j < 254380; j++) _solve(b, j);
for(j = 255210; j < 255220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 256050; j < 256060; j++) _solve(b, j);
for(j = 256890; j < 256900; j++) _solve(b, j);
for(j = 257730; j < 257740; j++) _solve(b, j);
for(j = 258570; j < 258580; j++) _solve(b, j);
for(j = 259410; j < 259420; j++) _solve(b, j);
for(j = 260250; j < 260260; j++) _solve(b, j);
for(j = 261090; j < 261100; j++) _solve(b, j);
for(j = 261930; j < 261940; j++) _solve(b, j);
for(j = 262770; j < 262780; j++) _solve(b, j);
for(j = 263610; j < 263620; j++) _solve(b, j);
for(j = 264450; j < 264460; j++) _solve(b, j);
for(j = 265290; j < 265300; j++) _solve(b, j);
for(j = 266130; j < 266140; j++) _solve(b, j);
for(j = 266970; j < 266980; j++) _solve(b, j);
for(j = 267810; j < 267820; j++) _solve(b, j);
for(j = 268650; j < 268660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 269490; j < 269500; j++) _solve(b, j);
for(j = 270330; j < 270340; j++) _solve(b, j);
for(j = 271170; j < 271180; j++) _solve(b, j);
for(j = 272010; j < 272020; j++) _solve(b, j);
for(j = 272850; j < 272860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 203140; j < 203150; j++) _solve(b, j);
for(j = 203980; j < 203990; j++) _solve(b, j);
for(j = 204820; j < 204830; j++) _solve(b, j);
for(j = 205660; j < 205670; j++) _solve(b, j);
for(j = 206500; j < 206510; j++) _solve(b, j);
for(j = 207340; j < 207350; j++) _solve(b, j);
for(j = 208180; j < 208190; j++) _solve(b, j);
for(j = 209020; j < 209030; j++) _solve(b, j);
for(j = 209860; j < 209870; j++) _solve(b, j);
for(j = 210700; j < 210710; j++) _solve(b, j);
for(j = 211540; j < 211550; j++) _solve(b, j);
for(j = 212380; j < 212390; j++) _solve(b, j);
for(j = 213220; j < 213230; j++) _solve(b, j);
for(j = 214060; j < 214070; j++) _solve(b, j);
for(j = 214900; j < 214910; j++) _solve(b, j);
for(j = 215740; j < 215750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 216580; j < 216590; j++) _solve(b, j);
for(j = 217420; j < 217430; j++) _solve(b, j);
for(j = 218260; j < 218270; j++) _solve(b, j);
for(j = 219100; j < 219110; j++) _solve(b, j);
for(j = 219940; j < 219950; j++) _solve(b, j);
for(j = 220780; j < 220790; j++) _solve(b, j);
for(j = 221620; j < 221630; j++) _solve(b, j);
for(j = 222460; j < 222470; j++) _solve(b, j);
for(j = 223300; j < 223310; j++) _solve(b, j);
for(j = 224140; j < 224150; j++) _solve(b, j);
for(j = 224980; j < 224990; j++) _solve(b, j);
for(j = 225820; j < 225830; j++) _solve(b, j);
for(j = 226660; j < 226670; j++) _solve(b, j);
for(j = 227500; j < 227510; j++) _solve(b, j);
for(j = 228340; j < 228350; j++) _solve(b, j);
for(j = 229180; j < 229190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 230020; j < 230030; j++) _solve(b, j);
for(j = 230860; j < 230870; j++) _solve(b, j);
for(j = 231700; j < 231710; j++) _solve(b, j);
for(j = 232540; j < 232550; j++) _solve(b, j);
for(j = 233380; j < 233390; j++) _solve(b, j);
for(j = 234220; j < 234230; j++) _solve(b, j);
for(j = 235060; j < 235070; j++) _solve(b, j);
for(j = 235900; j < 235910; j++) _solve(b, j);
for(j = 236740; j < 236750; j++) _solve(b, j);
for(j = 237580; j < 237590; j++) _solve(b, j);
for(j = 238420; j < 238430; j++) _solve(b, j);
for(j = 239260; j < 239270; j++) _solve(b, j);
for(j = 240100; j < 240110; j++) _solve(b, j);
for(j = 240940; j < 240950; j++) _solve(b, j);
for(j = 241780; j < 241790; j++) _solve(b, j);
for(j = 242620; j < 242630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 243460; j < 243470; j++) _solve(b, j);
for(j = 244300; j < 244310; j++) _solve(b, j);
for(j = 245140; j < 245150; j++) _solve(b, j);
for(j = 245980; j < 245990; j++) _solve(b, j);
for(j = 246820; j < 246830; j++) _solve(b, j);
for(j = 247660; j < 247670; j++) _solve(b, j);
for(j = 248500; j < 248510; j++) _solve(b, j);
for(j = 249340; j < 249350; j++) _solve(b, j);
for(j = 250180; j < 250190; j++) _solve(b, j);
for(j = 251020; j < 251030; j++) _solve(b, j);
for(j = 251860; j < 251870; j++) _solve(b, j);
for(j = 252700; j < 252710; j++) _solve(b, j);
for(j = 253540; j < 253550; j++) _solve(b, j);
for(j = 254380; j < 254390; j++) _solve(b, j);
for(j = 255220; j < 255230; j++) _solve(b, j);
for(j = 256060; j < 256070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 256900; j < 256910; j++) _solve(b, j);
for(j = 257740; j < 257750; j++) _solve(b, j);
for(j = 258580; j < 258590; j++) _solve(b, j);
for(j = 259420; j < 259430; j++) _solve(b, j);
for(j = 260260; j < 260270; j++) _solve(b, j);
for(j = 261100; j < 261110; j++) _solve(b, j);
for(j = 261940; j < 261950; j++) _solve(b, j);
for(j = 262780; j < 262790; j++) _solve(b, j);
for(j = 263620; j < 263630; j++) _solve(b, j);
for(j = 264460; j < 264470; j++) _solve(b, j);
for(j = 265300; j < 265310; j++) _solve(b, j);
for(j = 266140; j < 266150; j++) _solve(b, j);
for(j = 266980; j < 266990; j++) _solve(b, j);
for(j = 267820; j < 267830; j++) _solve(b, j);
for(j = 268660; j < 268670; j++) _solve(b, j);
for(j = 269500; j < 269510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 270340; j < 270350; j++) _solve(b, j);
for(j = 271180; j < 271190; j++) _solve(b, j);
for(j = 272020; j < 272030; j++) _solve(b, j);
for(j = 272860; j < 272870; j++) _solve(b, j);
for(j = 273700; j < 273710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 203990; j < 204000; j++) _solve(b, j);
for(j = 204830; j < 204840; j++) _solve(b, j);
for(j = 205670; j < 205680; j++) _solve(b, j);
for(j = 206510; j < 206520; j++) _solve(b, j);
for(j = 207350; j < 207360; j++) _solve(b, j);
for(j = 208190; j < 208200; j++) _solve(b, j);
for(j = 209030; j < 209040; j++) _solve(b, j);
for(j = 209870; j < 209880; j++) _solve(b, j);
for(j = 210710; j < 210720; j++) _solve(b, j);
for(j = 211550; j < 211560; j++) _solve(b, j);
for(j = 212390; j < 212400; j++) _solve(b, j);
for(j = 213230; j < 213240; j++) _solve(b, j);
for(j = 214070; j < 214080; j++) _solve(b, j);
for(j = 214910; j < 214920; j++) _solve(b, j);
for(j = 215750; j < 215760; j++) _solve(b, j);
for(j = 216590; j < 216600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 217430; j < 217440; j++) _solve(b, j);
for(j = 218270; j < 218280; j++) _solve(b, j);
for(j = 219110; j < 219120; j++) _solve(b, j);
for(j = 219950; j < 219960; j++) _solve(b, j);
for(j = 220790; j < 220800; j++) _solve(b, j);
for(j = 221630; j < 221640; j++) _solve(b, j);
for(j = 222470; j < 222480; j++) _solve(b, j);
for(j = 223310; j < 223320; j++) _solve(b, j);
for(j = 224150; j < 224160; j++) _solve(b, j);
for(j = 224990; j < 225000; j++) _solve(b, j);
for(j = 225830; j < 225840; j++) _solve(b, j);
for(j = 226670; j < 226680; j++) _solve(b, j);
for(j = 227510; j < 227520; j++) _solve(b, j);
for(j = 228350; j < 228360; j++) _solve(b, j);
for(j = 229190; j < 229200; j++) _solve(b, j);
for(j = 230030; j < 230040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 230870; j < 230880; j++) _solve(b, j);
for(j = 231710; j < 231720; j++) _solve(b, j);
for(j = 232550; j < 232560; j++) _solve(b, j);
for(j = 233390; j < 233400; j++) _solve(b, j);
for(j = 234230; j < 234240; j++) _solve(b, j);
for(j = 235070; j < 235080; j++) _solve(b, j);
for(j = 235910; j < 235920; j++) _solve(b, j);
for(j = 236750; j < 236760; j++) _solve(b, j);
for(j = 237590; j < 237600; j++) _solve(b, j);
for(j = 238430; j < 238440; j++) _solve(b, j);
for(j = 239270; j < 239280; j++) _solve(b, j);
for(j = 240110; j < 240120; j++) _solve(b, j);
for(j = 240950; j < 240960; j++) _solve(b, j);
for(j = 241790; j < 241800; j++) _solve(b, j);
for(j = 242630; j < 242640; j++) _solve(b, j);
for(j = 243470; j < 243480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 244310; j < 244320; j++) _solve(b, j);
for(j = 245150; j < 245160; j++) _solve(b, j);
for(j = 245990; j < 246000; j++) _solve(b, j);
for(j = 246830; j < 246840; j++) _solve(b, j);
for(j = 247670; j < 247680; j++) _solve(b, j);
for(j = 248510; j < 248520; j++) _solve(b, j);
for(j = 249350; j < 249360; j++) _solve(b, j);
for(j = 250190; j < 250200; j++) _solve(b, j);
for(j = 251030; j < 251040; j++) _solve(b, j);
for(j = 251870; j < 251880; j++) _solve(b, j);
for(j = 252710; j < 252720; j++) _solve(b, j);
for(j = 253550; j < 253560; j++) _solve(b, j);
for(j = 254390; j < 254400; j++) _solve(b, j);
for(j = 255230; j < 255240; j++) _solve(b, j);
for(j = 256070; j < 256080; j++) _solve(b, j);
for(j = 256910; j < 256920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 257750; j < 257760; j++) _solve(b, j);
for(j = 258590; j < 258600; j++) _solve(b, j);
for(j = 259430; j < 259440; j++) _solve(b, j);
for(j = 260270; j < 260280; j++) _solve(b, j);
for(j = 261110; j < 261120; j++) _solve(b, j);
for(j = 261950; j < 261960; j++) _solve(b, j);
for(j = 262790; j < 262800; j++) _solve(b, j);
for(j = 263630; j < 263640; j++) _solve(b, j);
for(j = 264470; j < 264480; j++) _solve(b, j);
for(j = 265310; j < 265320; j++) _solve(b, j);
for(j = 266150; j < 266160; j++) _solve(b, j);
for(j = 266990; j < 267000; j++) _solve(b, j);
for(j = 267830; j < 267840; j++) _solve(b, j);
for(j = 268670; j < 268680; j++) _solve(b, j);
for(j = 269510; j < 269520; j++) _solve(b, j);
for(j = 270350; j < 270360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 271190; j < 271200; j++) _solve(b, j);
for(j = 272030; j < 272040; j++) _solve(b, j);
for(j = 272870; j < 272880; j++) _solve(b, j);
for(j = 273710; j < 273720; j++) _solve(b, j);
for(j = 274550; j < 274560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 204840; j < 204850; j++) _solve(b, j);
for(j = 205680; j < 205690; j++) _solve(b, j);
for(j = 206520; j < 206530; j++) _solve(b, j);
for(j = 207360; j < 207370; j++) _solve(b, j);
for(j = 208200; j < 208210; j++) _solve(b, j);
for(j = 209040; j < 209050; j++) _solve(b, j);
for(j = 209880; j < 209890; j++) _solve(b, j);
for(j = 210720; j < 210730; j++) _solve(b, j);
for(j = 211560; j < 211570; j++) _solve(b, j);
for(j = 212400; j < 212410; j++) _solve(b, j);
for(j = 213240; j < 213250; j++) _solve(b, j);
for(j = 214080; j < 214090; j++) _solve(b, j);
for(j = 214920; j < 214930; j++) _solve(b, j);
for(j = 215760; j < 215770; j++) _solve(b, j);
for(j = 216600; j < 216610; j++) _solve(b, j);
for(j = 217440; j < 217450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 218280; j < 218290; j++) _solve(b, j);
for(j = 219120; j < 219130; j++) _solve(b, j);
for(j = 219960; j < 219970; j++) _solve(b, j);
for(j = 220800; j < 220810; j++) _solve(b, j);
for(j = 221640; j < 221650; j++) _solve(b, j);
for(j = 222480; j < 222490; j++) _solve(b, j);
for(j = 223320; j < 223330; j++) _solve(b, j);
for(j = 224160; j < 224170; j++) _solve(b, j);
for(j = 225000; j < 225010; j++) _solve(b, j);
for(j = 225840; j < 225850; j++) _solve(b, j);
for(j = 226680; j < 226690; j++) _solve(b, j);
for(j = 227520; j < 227530; j++) _solve(b, j);
for(j = 228360; j < 228370; j++) _solve(b, j);
for(j = 229200; j < 229210; j++) _solve(b, j);
for(j = 230040; j < 230050; j++) _solve(b, j);
for(j = 230880; j < 230890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 231720; j < 231730; j++) _solve(b, j);
for(j = 232560; j < 232570; j++) _solve(b, j);
for(j = 233400; j < 233410; j++) _solve(b, j);
for(j = 234240; j < 234250; j++) _solve(b, j);
for(j = 235080; j < 235090; j++) _solve(b, j);
for(j = 235920; j < 235930; j++) _solve(b, j);
for(j = 236760; j < 236770; j++) _solve(b, j);
for(j = 237600; j < 237610; j++) _solve(b, j);
for(j = 238440; j < 238450; j++) _solve(b, j);
for(j = 239280; j < 239290; j++) _solve(b, j);
for(j = 240120; j < 240130; j++) _solve(b, j);
for(j = 240960; j < 240970; j++) _solve(b, j);
for(j = 241800; j < 241810; j++) _solve(b, j);
for(j = 242640; j < 242650; j++) _solve(b, j);
for(j = 243480; j < 243490; j++) _solve(b, j);
for(j = 244320; j < 244330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 245160; j < 245170; j++) _solve(b, j);
for(j = 246000; j < 246010; j++) _solve(b, j);
for(j = 246840; j < 246850; j++) _solve(b, j);
for(j = 247680; j < 247690; j++) _solve(b, j);
for(j = 248520; j < 248530; j++) _solve(b, j);
for(j = 249360; j < 249370; j++) _solve(b, j);
for(j = 250200; j < 250210; j++) _solve(b, j);
for(j = 251040; j < 251050; j++) _solve(b, j);
for(j = 251880; j < 251890; j++) _solve(b, j);
for(j = 252720; j < 252730; j++) _solve(b, j);
for(j = 253560; j < 253570; j++) _solve(b, j);
for(j = 254400; j < 254410; j++) _solve(b, j);
for(j = 255240; j < 255250; j++) _solve(b, j);
for(j = 256080; j < 256090; j++) _solve(b, j);
for(j = 256920; j < 256930; j++) _solve(b, j);
for(j = 257760; j < 257770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 258600; j < 258610; j++) _solve(b, j);
for(j = 259440; j < 259450; j++) _solve(b, j);
for(j = 260280; j < 260290; j++) _solve(b, j);
for(j = 261120; j < 261130; j++) _solve(b, j);
for(j = 261960; j < 261970; j++) _solve(b, j);
for(j = 262800; j < 262810; j++) _solve(b, j);
for(j = 263640; j < 263650; j++) _solve(b, j);
for(j = 264480; j < 264490; j++) _solve(b, j);
for(j = 265320; j < 265330; j++) _solve(b, j);
for(j = 266160; j < 266170; j++) _solve(b, j);
for(j = 267000; j < 267010; j++) _solve(b, j);
for(j = 267840; j < 267850; j++) _solve(b, j);
for(j = 268680; j < 268690; j++) _solve(b, j);
for(j = 269520; j < 269530; j++) _solve(b, j);
for(j = 270360; j < 270370; j++) _solve(b, j);
for(j = 271200; j < 271210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 272040; j < 272050; j++) _solve(b, j);
for(j = 272880; j < 272890; j++) _solve(b, j);
for(j = 273720; j < 273730; j++) _solve(b, j);
for(j = 274560; j < 274570; j++) _solve(b, j);
for(j = 275400; j < 275410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 205690; j < 205700; j++) _solve(b, j);
for(j = 206530; j < 206540; j++) _solve(b, j);
for(j = 207370; j < 207380; j++) _solve(b, j);
for(j = 208210; j < 208220; j++) _solve(b, j);
for(j = 209050; j < 209060; j++) _solve(b, j);
for(j = 209890; j < 209900; j++) _solve(b, j);
for(j = 210730; j < 210740; j++) _solve(b, j);
for(j = 211570; j < 211580; j++) _solve(b, j);
for(j = 212410; j < 212420; j++) _solve(b, j);
for(j = 213250; j < 213260; j++) _solve(b, j);
for(j = 214090; j < 214100; j++) _solve(b, j);
for(j = 214930; j < 214940; j++) _solve(b, j);
for(j = 215770; j < 215780; j++) _solve(b, j);
for(j = 216610; j < 216620; j++) _solve(b, j);
for(j = 217450; j < 217460; j++) _solve(b, j);
for(j = 218290; j < 218300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 219130; j < 219140; j++) _solve(b, j);
for(j = 219970; j < 219980; j++) _solve(b, j);
for(j = 220810; j < 220820; j++) _solve(b, j);
for(j = 221650; j < 221660; j++) _solve(b, j);
for(j = 222490; j < 222500; j++) _solve(b, j);
for(j = 223330; j < 223340; j++) _solve(b, j);
for(j = 224170; j < 224180; j++) _solve(b, j);
for(j = 225010; j < 225020; j++) _solve(b, j);
for(j = 225850; j < 225860; j++) _solve(b, j);
for(j = 226690; j < 226700; j++) _solve(b, j);
for(j = 227530; j < 227540; j++) _solve(b, j);
for(j = 228370; j < 228380; j++) _solve(b, j);
for(j = 229210; j < 229220; j++) _solve(b, j);
for(j = 230050; j < 230060; j++) _solve(b, j);
for(j = 230890; j < 230900; j++) _solve(b, j);
for(j = 231730; j < 231740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 232570; j < 232580; j++) _solve(b, j);
for(j = 233410; j < 233420; j++) _solve(b, j);
for(j = 234250; j < 234260; j++) _solve(b, j);
for(j = 235090; j < 235100; j++) _solve(b, j);
for(j = 235930; j < 235940; j++) _solve(b, j);
for(j = 236770; j < 236780; j++) _solve(b, j);
for(j = 237610; j < 237620; j++) _solve(b, j);
for(j = 238450; j < 238460; j++) _solve(b, j);
for(j = 239290; j < 239300; j++) _solve(b, j);
for(j = 240130; j < 240140; j++) _solve(b, j);
for(j = 240970; j < 240980; j++) _solve(b, j);
for(j = 241810; j < 241820; j++) _solve(b, j);
for(j = 242650; j < 242660; j++) _solve(b, j);
for(j = 243490; j < 243500; j++) _solve(b, j);
for(j = 244330; j < 244340; j++) _solve(b, j);
for(j = 245170; j < 245180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 246010; j < 246020; j++) _solve(b, j);
for(j = 246850; j < 246860; j++) _solve(b, j);
for(j = 247690; j < 247700; j++) _solve(b, j);
for(j = 248530; j < 248540; j++) _solve(b, j);
for(j = 249370; j < 249380; j++) _solve(b, j);
for(j = 250210; j < 250220; j++) _solve(b, j);
for(j = 251050; j < 251060; j++) _solve(b, j);
for(j = 251890; j < 251900; j++) _solve(b, j);
for(j = 252730; j < 252740; j++) _solve(b, j);
for(j = 253570; j < 253580; j++) _solve(b, j);
for(j = 254410; j < 254420; j++) _solve(b, j);
for(j = 255250; j < 255260; j++) _solve(b, j);
for(j = 256090; j < 256100; j++) _solve(b, j);
for(j = 256930; j < 256940; j++) _solve(b, j);
for(j = 257770; j < 257780; j++) _solve(b, j);
for(j = 258610; j < 258620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 259450; j < 259460; j++) _solve(b, j);
for(j = 260290; j < 260300; j++) _solve(b, j);
for(j = 261130; j < 261140; j++) _solve(b, j);
for(j = 261970; j < 261980; j++) _solve(b, j);
for(j = 262810; j < 262820; j++) _solve(b, j);
for(j = 263650; j < 263660; j++) _solve(b, j);
for(j = 264490; j < 264500; j++) _solve(b, j);
for(j = 265330; j < 265340; j++) _solve(b, j);
for(j = 266170; j < 266180; j++) _solve(b, j);
for(j = 267010; j < 267020; j++) _solve(b, j);
for(j = 267850; j < 267860; j++) _solve(b, j);
for(j = 268690; j < 268700; j++) _solve(b, j);
for(j = 269530; j < 269540; j++) _solve(b, j);
for(j = 270370; j < 270380; j++) _solve(b, j);
for(j = 271210; j < 271220; j++) _solve(b, j);
for(j = 272050; j < 272060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 272890; j < 272900; j++) _solve(b, j);
for(j = 273730; j < 273740; j++) _solve(b, j);
for(j = 274570; j < 274580; j++) _solve(b, j);
for(j = 275410; j < 275420; j++) _solve(b, j);
for(j = 276250; j < 276260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 206540; j < 206550; j++) _solve(b, j);
for(j = 207380; j < 207390; j++) _solve(b, j);
for(j = 208220; j < 208230; j++) _solve(b, j);
for(j = 209060; j < 209070; j++) _solve(b, j);
for(j = 209900; j < 209910; j++) _solve(b, j);
for(j = 210740; j < 210750; j++) _solve(b, j);
for(j = 211580; j < 211590; j++) _solve(b, j);
for(j = 212420; j < 212430; j++) _solve(b, j);
for(j = 213260; j < 213270; j++) _solve(b, j);
for(j = 214100; j < 214110; j++) _solve(b, j);
for(j = 214940; j < 214950; j++) _solve(b, j);
for(j = 215780; j < 215790; j++) _solve(b, j);
for(j = 216620; j < 216630; j++) _solve(b, j);
for(j = 217460; j < 217470; j++) _solve(b, j);
for(j = 218300; j < 218310; j++) _solve(b, j);
for(j = 219140; j < 219150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 219980; j < 219990; j++) _solve(b, j);
for(j = 220820; j < 220830; j++) _solve(b, j);
for(j = 221660; j < 221670; j++) _solve(b, j);
for(j = 222500; j < 222510; j++) _solve(b, j);
for(j = 223340; j < 223350; j++) _solve(b, j);
for(j = 224180; j < 224190; j++) _solve(b, j);
for(j = 225020; j < 225030; j++) _solve(b, j);
for(j = 225860; j < 225870; j++) _solve(b, j);
for(j = 226700; j < 226710; j++) _solve(b, j);
for(j = 227540; j < 227550; j++) _solve(b, j);
for(j = 228380; j < 228390; j++) _solve(b, j);
for(j = 229220; j < 229230; j++) _solve(b, j);
for(j = 230060; j < 230070; j++) _solve(b, j);
for(j = 230900; j < 230910; j++) _solve(b, j);
for(j = 231740; j < 231750; j++) _solve(b, j);
for(j = 232580; j < 232590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 233420; j < 233430; j++) _solve(b, j);
for(j = 234260; j < 234270; j++) _solve(b, j);
for(j = 235100; j < 235110; j++) _solve(b, j);
for(j = 235940; j < 235950; j++) _solve(b, j);
for(j = 236780; j < 236790; j++) _solve(b, j);
for(j = 237620; j < 237630; j++) _solve(b, j);
for(j = 238460; j < 238470; j++) _solve(b, j);
for(j = 239300; j < 239310; j++) _solve(b, j);
for(j = 240140; j < 240150; j++) _solve(b, j);
for(j = 240980; j < 240990; j++) _solve(b, j);
for(j = 241820; j < 241830; j++) _solve(b, j);
for(j = 242660; j < 242670; j++) _solve(b, j);
for(j = 243500; j < 243510; j++) _solve(b, j);
for(j = 244340; j < 244350; j++) _solve(b, j);
for(j = 245180; j < 245190; j++) _solve(b, j);
for(j = 246020; j < 246030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 246860; j < 246870; j++) _solve(b, j);
for(j = 247700; j < 247710; j++) _solve(b, j);
for(j = 248540; j < 248550; j++) _solve(b, j);
for(j = 249380; j < 249390; j++) _solve(b, j);
for(j = 250220; j < 250230; j++) _solve(b, j);
for(j = 251060; j < 251070; j++) _solve(b, j);
for(j = 251900; j < 251910; j++) _solve(b, j);
for(j = 252740; j < 252750; j++) _solve(b, j);
for(j = 253580; j < 253590; j++) _solve(b, j);
for(j = 254420; j < 254430; j++) _solve(b, j);
for(j = 255260; j < 255270; j++) _solve(b, j);
for(j = 256100; j < 256110; j++) _solve(b, j);
for(j = 256940; j < 256950; j++) _solve(b, j);
for(j = 257780; j < 257790; j++) _solve(b, j);
for(j = 258620; j < 258630; j++) _solve(b, j);
for(j = 259460; j < 259470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 260300; j < 260310; j++) _solve(b, j);
for(j = 261140; j < 261150; j++) _solve(b, j);
for(j = 261980; j < 261990; j++) _solve(b, j);
for(j = 262820; j < 262830; j++) _solve(b, j);
for(j = 263660; j < 263670; j++) _solve(b, j);
for(j = 264500; j < 264510; j++) _solve(b, j);
for(j = 265340; j < 265350; j++) _solve(b, j);
for(j = 266180; j < 266190; j++) _solve(b, j);
for(j = 267020; j < 267030; j++) _solve(b, j);
for(j = 267860; j < 267870; j++) _solve(b, j);
for(j = 268700; j < 268710; j++) _solve(b, j);
for(j = 269540; j < 269550; j++) _solve(b, j);
for(j = 270380; j < 270390; j++) _solve(b, j);
for(j = 271220; j < 271230; j++) _solve(b, j);
for(j = 272060; j < 272070; j++) _solve(b, j);
for(j = 272900; j < 272910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 273740; j < 273750; j++) _solve(b, j);
for(j = 274580; j < 274590; j++) _solve(b, j);
for(j = 275420; j < 275430; j++) _solve(b, j);
for(j = 276260; j < 276270; j++) _solve(b, j);
for(j = 277100; j < 277110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 207390; j < 207400; j++) _solve(b, j);
for(j = 208230; j < 208240; j++) _solve(b, j);
for(j = 209070; j < 209080; j++) _solve(b, j);
for(j = 209910; j < 209920; j++) _solve(b, j);
for(j = 210750; j < 210760; j++) _solve(b, j);
for(j = 211590; j < 211600; j++) _solve(b, j);
for(j = 212430; j < 212440; j++) _solve(b, j);
for(j = 213270; j < 213280; j++) _solve(b, j);
for(j = 214110; j < 214120; j++) _solve(b, j);
for(j = 214950; j < 214960; j++) _solve(b, j);
for(j = 215790; j < 215800; j++) _solve(b, j);
for(j = 216630; j < 216640; j++) _solve(b, j);
for(j = 217470; j < 217480; j++) _solve(b, j);
for(j = 218310; j < 218320; j++) _solve(b, j);
for(j = 219150; j < 219160; j++) _solve(b, j);
for(j = 219990; j < 220000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 220830; j < 220840; j++) _solve(b, j);
for(j = 221670; j < 221680; j++) _solve(b, j);
for(j = 222510; j < 222520; j++) _solve(b, j);
for(j = 223350; j < 223360; j++) _solve(b, j);
for(j = 224190; j < 224200; j++) _solve(b, j);
for(j = 225030; j < 225040; j++) _solve(b, j);
for(j = 225870; j < 225880; j++) _solve(b, j);
for(j = 226710; j < 226720; j++) _solve(b, j);
for(j = 227550; j < 227560; j++) _solve(b, j);
for(j = 228390; j < 228400; j++) _solve(b, j);
for(j = 229230; j < 229240; j++) _solve(b, j);
for(j = 230070; j < 230080; j++) _solve(b, j);
for(j = 230910; j < 230920; j++) _solve(b, j);
for(j = 231750; j < 231760; j++) _solve(b, j);
for(j = 232590; j < 232600; j++) _solve(b, j);
for(j = 233430; j < 233440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 234270; j < 234280; j++) _solve(b, j);
for(j = 235110; j < 235120; j++) _solve(b, j);
for(j = 235950; j < 235960; j++) _solve(b, j);
for(j = 236790; j < 236800; j++) _solve(b, j);
for(j = 237630; j < 237640; j++) _solve(b, j);
for(j = 238470; j < 238480; j++) _solve(b, j);
for(j = 239310; j < 239320; j++) _solve(b, j);
for(j = 240150; j < 240160; j++) _solve(b, j);
for(j = 240990; j < 241000; j++) _solve(b, j);
for(j = 241830; j < 241840; j++) _solve(b, j);
for(j = 242670; j < 242680; j++) _solve(b, j);
for(j = 243510; j < 243520; j++) _solve(b, j);
for(j = 244350; j < 244360; j++) _solve(b, j);
for(j = 245190; j < 245200; j++) _solve(b, j);
for(j = 246030; j < 246040; j++) _solve(b, j);
for(j = 246870; j < 246880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 247710; j < 247720; j++) _solve(b, j);
for(j = 248550; j < 248560; j++) _solve(b, j);
for(j = 249390; j < 249400; j++) _solve(b, j);
for(j = 250230; j < 250240; j++) _solve(b, j);
for(j = 251070; j < 251080; j++) _solve(b, j);
for(j = 251910; j < 251920; j++) _solve(b, j);
for(j = 252750; j < 252760; j++) _solve(b, j);
for(j = 253590; j < 253600; j++) _solve(b, j);
for(j = 254430; j < 254440; j++) _solve(b, j);
for(j = 255270; j < 255280; j++) _solve(b, j);
for(j = 256110; j < 256120; j++) _solve(b, j);
for(j = 256950; j < 256960; j++) _solve(b, j);
for(j = 257790; j < 257800; j++) _solve(b, j);
for(j = 258630; j < 258640; j++) _solve(b, j);
for(j = 259470; j < 259480; j++) _solve(b, j);
for(j = 260310; j < 260320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 261150; j < 261160; j++) _solve(b, j);
for(j = 261990; j < 262000; j++) _solve(b, j);
for(j = 262830; j < 262840; j++) _solve(b, j);
for(j = 263670; j < 263680; j++) _solve(b, j);
for(j = 264510; j < 264520; j++) _solve(b, j);
for(j = 265350; j < 265360; j++) _solve(b, j);
for(j = 266190; j < 266200; j++) _solve(b, j);
for(j = 267030; j < 267040; j++) _solve(b, j);
for(j = 267870; j < 267880; j++) _solve(b, j);
for(j = 268710; j < 268720; j++) _solve(b, j);
for(j = 269550; j < 269560; j++) _solve(b, j);
for(j = 270390; j < 270400; j++) _solve(b, j);
for(j = 271230; j < 271240; j++) _solve(b, j);
for(j = 272070; j < 272080; j++) _solve(b, j);
for(j = 272910; j < 272920; j++) _solve(b, j);
for(j = 273750; j < 273760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 274590; j < 274600; j++) _solve(b, j);
for(j = 275430; j < 275440; j++) _solve(b, j);
for(j = 276270; j < 276280; j++) _solve(b, j);
for(j = 277110; j < 277120; j++) _solve(b, j);
for(j = 277950; j < 277960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 208240; j < 208250; j++) _solve(b, j);
for(j = 209080; j < 209090; j++) _solve(b, j);
for(j = 209920; j < 209930; j++) _solve(b, j);
for(j = 210760; j < 210770; j++) _solve(b, j);
for(j = 211600; j < 211610; j++) _solve(b, j);
for(j = 212440; j < 212450; j++) _solve(b, j);
for(j = 213280; j < 213290; j++) _solve(b, j);
for(j = 214120; j < 214130; j++) _solve(b, j);
for(j = 214960; j < 214970; j++) _solve(b, j);
for(j = 215800; j < 215810; j++) _solve(b, j);
for(j = 216640; j < 216650; j++) _solve(b, j);
for(j = 217480; j < 217490; j++) _solve(b, j);
for(j = 218320; j < 218330; j++) _solve(b, j);
for(j = 219160; j < 219170; j++) _solve(b, j);
for(j = 220000; j < 220010; j++) _solve(b, j);
for(j = 220840; j < 220850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 221680; j < 221690; j++) _solve(b, j);
for(j = 222520; j < 222530; j++) _solve(b, j);
for(j = 223360; j < 223370; j++) _solve(b, j);
for(j = 224200; j < 224210; j++) _solve(b, j);
for(j = 225040; j < 225050; j++) _solve(b, j);
for(j = 225880; j < 225890; j++) _solve(b, j);
for(j = 226720; j < 226730; j++) _solve(b, j);
for(j = 227560; j < 227570; j++) _solve(b, j);
for(j = 228400; j < 228410; j++) _solve(b, j);
for(j = 229240; j < 229250; j++) _solve(b, j);
for(j = 230080; j < 230090; j++) _solve(b, j);
for(j = 230920; j < 230930; j++) _solve(b, j);
for(j = 231760; j < 231770; j++) _solve(b, j);
for(j = 232600; j < 232610; j++) _solve(b, j);
for(j = 233440; j < 233450; j++) _solve(b, j);
for(j = 234280; j < 234290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 235120; j < 235130; j++) _solve(b, j);
for(j = 235960; j < 235970; j++) _solve(b, j);
for(j = 236800; j < 236810; j++) _solve(b, j);
for(j = 237640; j < 237650; j++) _solve(b, j);
for(j = 238480; j < 238490; j++) _solve(b, j);
for(j = 239320; j < 239330; j++) _solve(b, j);
for(j = 240160; j < 240170; j++) _solve(b, j);
for(j = 241000; j < 241010; j++) _solve(b, j);
for(j = 241840; j < 241850; j++) _solve(b, j);
for(j = 242680; j < 242690; j++) _solve(b, j);
for(j = 243520; j < 243530; j++) _solve(b, j);
for(j = 244360; j < 244370; j++) _solve(b, j);
for(j = 245200; j < 245210; j++) _solve(b, j);
for(j = 246040; j < 246050; j++) _solve(b, j);
for(j = 246880; j < 246890; j++) _solve(b, j);
for(j = 247720; j < 247730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 248560; j < 248570; j++) _solve(b, j);
for(j = 249400; j < 249410; j++) _solve(b, j);
for(j = 250240; j < 250250; j++) _solve(b, j);
for(j = 251080; j < 251090; j++) _solve(b, j);
for(j = 251920; j < 251930; j++) _solve(b, j);
for(j = 252760; j < 252770; j++) _solve(b, j);
for(j = 253600; j < 253610; j++) _solve(b, j);
for(j = 254440; j < 254450; j++) _solve(b, j);
for(j = 255280; j < 255290; j++) _solve(b, j);
for(j = 256120; j < 256130; j++) _solve(b, j);
for(j = 256960; j < 256970; j++) _solve(b, j);
for(j = 257800; j < 257810; j++) _solve(b, j);
for(j = 258640; j < 258650; j++) _solve(b, j);
for(j = 259480; j < 259490; j++) _solve(b, j);
for(j = 260320; j < 260330; j++) _solve(b, j);
for(j = 261160; j < 261170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 262000; j < 262010; j++) _solve(b, j);
for(j = 262840; j < 262850; j++) _solve(b, j);
for(j = 263680; j < 263690; j++) _solve(b, j);
for(j = 264520; j < 264530; j++) _solve(b, j);
for(j = 265360; j < 265370; j++) _solve(b, j);
for(j = 266200; j < 266210; j++) _solve(b, j);
for(j = 267040; j < 267050; j++) _solve(b, j);
for(j = 267880; j < 267890; j++) _solve(b, j);
for(j = 268720; j < 268730; j++) _solve(b, j);
for(j = 269560; j < 269570; j++) _solve(b, j);
for(j = 270400; j < 270410; j++) _solve(b, j);
for(j = 271240; j < 271250; j++) _solve(b, j);
for(j = 272080; j < 272090; j++) _solve(b, j);
for(j = 272920; j < 272930; j++) _solve(b, j);
for(j = 273760; j < 273770; j++) _solve(b, j);
for(j = 274600; j < 274610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 275440; j < 275450; j++) _solve(b, j);
for(j = 276280; j < 276290; j++) _solve(b, j);
for(j = 277120; j < 277130; j++) _solve(b, j);
for(j = 277960; j < 277970; j++) _solve(b, j);
for(j = 278800; j < 278810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 209090; j < 209100; j++) _solve(b, j);
for(j = 209930; j < 209940; j++) _solve(b, j);
for(j = 210770; j < 210780; j++) _solve(b, j);
for(j = 211610; j < 211620; j++) _solve(b, j);
for(j = 212450; j < 212460; j++) _solve(b, j);
for(j = 213290; j < 213300; j++) _solve(b, j);
for(j = 214130; j < 214140; j++) _solve(b, j);
for(j = 214970; j < 214980; j++) _solve(b, j);
for(j = 215810; j < 215820; j++) _solve(b, j);
for(j = 216650; j < 216660; j++) _solve(b, j);
for(j = 217490; j < 217500; j++) _solve(b, j);
for(j = 218330; j < 218340; j++) _solve(b, j);
for(j = 219170; j < 219180; j++) _solve(b, j);
for(j = 220010; j < 220020; j++) _solve(b, j);
for(j = 220850; j < 220860; j++) _solve(b, j);
for(j = 221690; j < 221700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 222530; j < 222540; j++) _solve(b, j);
for(j = 223370; j < 223380; j++) _solve(b, j);
for(j = 224210; j < 224220; j++) _solve(b, j);
for(j = 225050; j < 225060; j++) _solve(b, j);
for(j = 225890; j < 225900; j++) _solve(b, j);
for(j = 226730; j < 226740; j++) _solve(b, j);
for(j = 227570; j < 227580; j++) _solve(b, j);
for(j = 228410; j < 228420; j++) _solve(b, j);
for(j = 229250; j < 229260; j++) _solve(b, j);
for(j = 230090; j < 230100; j++) _solve(b, j);
for(j = 230930; j < 230940; j++) _solve(b, j);
for(j = 231770; j < 231780; j++) _solve(b, j);
for(j = 232610; j < 232620; j++) _solve(b, j);
for(j = 233450; j < 233460; j++) _solve(b, j);
for(j = 234290; j < 234300; j++) _solve(b, j);
for(j = 235130; j < 235140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 235970; j < 235980; j++) _solve(b, j);
for(j = 236810; j < 236820; j++) _solve(b, j);
for(j = 237650; j < 237660; j++) _solve(b, j);
for(j = 238490; j < 238500; j++) _solve(b, j);
for(j = 239330; j < 239340; j++) _solve(b, j);
for(j = 240170; j < 240180; j++) _solve(b, j);
for(j = 241010; j < 241020; j++) _solve(b, j);
for(j = 241850; j < 241860; j++) _solve(b, j);
for(j = 242690; j < 242700; j++) _solve(b, j);
for(j = 243530; j < 243540; j++) _solve(b, j);
for(j = 244370; j < 244380; j++) _solve(b, j);
for(j = 245210; j < 245220; j++) _solve(b, j);
for(j = 246050; j < 246060; j++) _solve(b, j);
for(j = 246890; j < 246900; j++) _solve(b, j);
for(j = 247730; j < 247740; j++) _solve(b, j);
for(j = 248570; j < 248580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 249410; j < 249420; j++) _solve(b, j);
for(j = 250250; j < 250260; j++) _solve(b, j);
for(j = 251090; j < 251100; j++) _solve(b, j);
for(j = 251930; j < 251940; j++) _solve(b, j);
for(j = 252770; j < 252780; j++) _solve(b, j);
for(j = 253610; j < 253620; j++) _solve(b, j);
for(j = 254450; j < 254460; j++) _solve(b, j);
for(j = 255290; j < 255300; j++) _solve(b, j);
for(j = 256130; j < 256140; j++) _solve(b, j);
for(j = 256970; j < 256980; j++) _solve(b, j);
for(j = 257810; j < 257820; j++) _solve(b, j);
for(j = 258650; j < 258660; j++) _solve(b, j);
for(j = 259490; j < 259500; j++) _solve(b, j);
for(j = 260330; j < 260340; j++) _solve(b, j);
for(j = 261170; j < 261180; j++) _solve(b, j);
for(j = 262010; j < 262020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 262850; j < 262860; j++) _solve(b, j);
for(j = 263690; j < 263700; j++) _solve(b, j);
for(j = 264530; j < 264540; j++) _solve(b, j);
for(j = 265370; j < 265380; j++) _solve(b, j);
for(j = 266210; j < 266220; j++) _solve(b, j);
for(j = 267050; j < 267060; j++) _solve(b, j);
for(j = 267890; j < 267900; j++) _solve(b, j);
for(j = 268730; j < 268740; j++) _solve(b, j);
for(j = 269570; j < 269580; j++) _solve(b, j);
for(j = 270410; j < 270420; j++) _solve(b, j);
for(j = 271250; j < 271260; j++) _solve(b, j);
for(j = 272090; j < 272100; j++) _solve(b, j);
for(j = 272930; j < 272940; j++) _solve(b, j);
for(j = 273770; j < 273780; j++) _solve(b, j);
for(j = 274610; j < 274620; j++) _solve(b, j);
for(j = 275450; j < 275460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 276290; j < 276300; j++) _solve(b, j);
for(j = 277130; j < 277140; j++) _solve(b, j);
for(j = 277970; j < 277980; j++) _solve(b, j);
for(j = 278810; j < 278820; j++) _solve(b, j);
for(j = 279650; j < 279660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 209940; j < 209950; j++) _solve(b, j);
for(j = 210780; j < 210790; j++) _solve(b, j);
for(j = 211620; j < 211630; j++) _solve(b, j);
for(j = 212460; j < 212470; j++) _solve(b, j);
for(j = 213300; j < 213310; j++) _solve(b, j);
for(j = 214140; j < 214150; j++) _solve(b, j);
for(j = 214980; j < 214990; j++) _solve(b, j);
for(j = 215820; j < 215830; j++) _solve(b, j);
for(j = 216660; j < 216670; j++) _solve(b, j);
for(j = 217500; j < 217510; j++) _solve(b, j);
for(j = 218340; j < 218350; j++) _solve(b, j);
for(j = 219180; j < 219190; j++) _solve(b, j);
for(j = 220020; j < 220030; j++) _solve(b, j);
for(j = 220860; j < 220870; j++) _solve(b, j);
for(j = 221700; j < 221710; j++) _solve(b, j);
for(j = 222540; j < 222550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 223380; j < 223390; j++) _solve(b, j);
for(j = 224220; j < 224230; j++) _solve(b, j);
for(j = 225060; j < 225070; j++) _solve(b, j);
for(j = 225900; j < 225910; j++) _solve(b, j);
for(j = 226740; j < 226750; j++) _solve(b, j);
for(j = 227580; j < 227590; j++) _solve(b, j);
for(j = 228420; j < 228430; j++) _solve(b, j);
for(j = 229260; j < 229270; j++) _solve(b, j);
for(j = 230100; j < 230110; j++) _solve(b, j);
for(j = 230940; j < 230950; j++) _solve(b, j);
for(j = 231780; j < 231790; j++) _solve(b, j);
for(j = 232620; j < 232630; j++) _solve(b, j);
for(j = 233460; j < 233470; j++) _solve(b, j);
for(j = 234300; j < 234310; j++) _solve(b, j);
for(j = 235140; j < 235150; j++) _solve(b, j);
for(j = 235980; j < 235990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 236820; j < 236830; j++) _solve(b, j);
for(j = 237660; j < 237670; j++) _solve(b, j);
for(j = 238500; j < 238510; j++) _solve(b, j);
for(j = 239340; j < 239350; j++) _solve(b, j);
for(j = 240180; j < 240190; j++) _solve(b, j);
for(j = 241020; j < 241030; j++) _solve(b, j);
for(j = 241860; j < 241870; j++) _solve(b, j);
for(j = 242700; j < 242710; j++) _solve(b, j);
for(j = 243540; j < 243550; j++) _solve(b, j);
for(j = 244380; j < 244390; j++) _solve(b, j);
for(j = 245220; j < 245230; j++) _solve(b, j);
for(j = 246060; j < 246070; j++) _solve(b, j);
for(j = 246900; j < 246910; j++) _solve(b, j);
for(j = 247740; j < 247750; j++) _solve(b, j);
for(j = 248580; j < 248590; j++) _solve(b, j);
for(j = 249420; j < 249430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 250260; j < 250270; j++) _solve(b, j);
for(j = 251100; j < 251110; j++) _solve(b, j);
for(j = 251940; j < 251950; j++) _solve(b, j);
for(j = 252780; j < 252790; j++) _solve(b, j);
for(j = 253620; j < 253630; j++) _solve(b, j);
for(j = 254460; j < 254470; j++) _solve(b, j);
for(j = 255300; j < 255310; j++) _solve(b, j);
for(j = 256140; j < 256150; j++) _solve(b, j);
for(j = 256980; j < 256990; j++) _solve(b, j);
for(j = 257820; j < 257830; j++) _solve(b, j);
for(j = 258660; j < 258670; j++) _solve(b, j);
for(j = 259500; j < 259510; j++) _solve(b, j);
for(j = 260340; j < 260350; j++) _solve(b, j);
for(j = 261180; j < 261190; j++) _solve(b, j);
for(j = 262020; j < 262030; j++) _solve(b, j);
for(j = 262860; j < 262870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 263700; j < 263710; j++) _solve(b, j);
for(j = 264540; j < 264550; j++) _solve(b, j);
for(j = 265380; j < 265390; j++) _solve(b, j);
for(j = 266220; j < 266230; j++) _solve(b, j);
for(j = 267060; j < 267070; j++) _solve(b, j);
for(j = 267900; j < 267910; j++) _solve(b, j);
for(j = 268740; j < 268750; j++) _solve(b, j);
for(j = 269580; j < 269590; j++) _solve(b, j);
for(j = 270420; j < 270430; j++) _solve(b, j);
for(j = 271260; j < 271270; j++) _solve(b, j);
for(j = 272100; j < 272110; j++) _solve(b, j);
for(j = 272940; j < 272950; j++) _solve(b, j);
for(j = 273780; j < 273790; j++) _solve(b, j);
for(j = 274620; j < 274630; j++) _solve(b, j);
for(j = 275460; j < 275470; j++) _solve(b, j);
for(j = 276300; j < 276310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 277140; j < 277150; j++) _solve(b, j);
for(j = 277980; j < 277990; j++) _solve(b, j);
for(j = 278820; j < 278830; j++) _solve(b, j);
for(j = 279660; j < 279670; j++) _solve(b, j);
for(j = 280500; j < 280510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 210790; j < 210800; j++) _solve(b, j);
for(j = 211630; j < 211640; j++) _solve(b, j);
for(j = 212470; j < 212480; j++) _solve(b, j);
for(j = 213310; j < 213320; j++) _solve(b, j);
for(j = 214150; j < 214160; j++) _solve(b, j);
for(j = 214990; j < 215000; j++) _solve(b, j);
for(j = 215830; j < 215840; j++) _solve(b, j);
for(j = 216670; j < 216680; j++) _solve(b, j);
for(j = 217510; j < 217520; j++) _solve(b, j);
for(j = 218350; j < 218360; j++) _solve(b, j);
for(j = 219190; j < 219200; j++) _solve(b, j);
for(j = 220030; j < 220040; j++) _solve(b, j);
for(j = 220870; j < 220880; j++) _solve(b, j);
for(j = 221710; j < 221720; j++) _solve(b, j);
for(j = 222550; j < 222560; j++) _solve(b, j);
for(j = 223390; j < 223400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 224230; j < 224240; j++) _solve(b, j);
for(j = 225070; j < 225080; j++) _solve(b, j);
for(j = 225910; j < 225920; j++) _solve(b, j);
for(j = 226750; j < 226760; j++) _solve(b, j);
for(j = 227590; j < 227600; j++) _solve(b, j);
for(j = 228430; j < 228440; j++) _solve(b, j);
for(j = 229270; j < 229280; j++) _solve(b, j);
for(j = 230110; j < 230120; j++) _solve(b, j);
for(j = 230950; j < 230960; j++) _solve(b, j);
for(j = 231790; j < 231800; j++) _solve(b, j);
for(j = 232630; j < 232640; j++) _solve(b, j);
for(j = 233470; j < 233480; j++) _solve(b, j);
for(j = 234310; j < 234320; j++) _solve(b, j);
for(j = 235150; j < 235160; j++) _solve(b, j);
for(j = 235990; j < 236000; j++) _solve(b, j);
for(j = 236830; j < 236840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 237670; j < 237680; j++) _solve(b, j);
for(j = 238510; j < 238520; j++) _solve(b, j);
for(j = 239350; j < 239360; j++) _solve(b, j);
for(j = 240190; j < 240200; j++) _solve(b, j);
for(j = 241030; j < 241040; j++) _solve(b, j);
for(j = 241870; j < 241880; j++) _solve(b, j);
for(j = 242710; j < 242720; j++) _solve(b, j);
for(j = 243550; j < 243560; j++) _solve(b, j);
for(j = 244390; j < 244400; j++) _solve(b, j);
for(j = 245230; j < 245240; j++) _solve(b, j);
for(j = 246070; j < 246080; j++) _solve(b, j);
for(j = 246910; j < 246920; j++) _solve(b, j);
for(j = 247750; j < 247760; j++) _solve(b, j);
for(j = 248590; j < 248600; j++) _solve(b, j);
for(j = 249430; j < 249440; j++) _solve(b, j);
for(j = 250270; j < 250280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 251110; j < 251120; j++) _solve(b, j);
for(j = 251950; j < 251960; j++) _solve(b, j);
for(j = 252790; j < 252800; j++) _solve(b, j);
for(j = 253630; j < 253640; j++) _solve(b, j);
for(j = 254470; j < 254480; j++) _solve(b, j);
for(j = 255310; j < 255320; j++) _solve(b, j);
for(j = 256150; j < 256160; j++) _solve(b, j);
for(j = 256990; j < 257000; j++) _solve(b, j);
for(j = 257830; j < 257840; j++) _solve(b, j);
for(j = 258670; j < 258680; j++) _solve(b, j);
for(j = 259510; j < 259520; j++) _solve(b, j);
for(j = 260350; j < 260360; j++) _solve(b, j);
for(j = 261190; j < 261200; j++) _solve(b, j);
for(j = 262030; j < 262040; j++) _solve(b, j);
for(j = 262870; j < 262880; j++) _solve(b, j);
for(j = 263710; j < 263720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 264550; j < 264560; j++) _solve(b, j);
for(j = 265390; j < 265400; j++) _solve(b, j);
for(j = 266230; j < 266240; j++) _solve(b, j);
for(j = 267070; j < 267080; j++) _solve(b, j);
for(j = 267910; j < 267920; j++) _solve(b, j);
for(j = 268750; j < 268760; j++) _solve(b, j);
for(j = 269590; j < 269600; j++) _solve(b, j);
for(j = 270430; j < 270440; j++) _solve(b, j);
for(j = 271270; j < 271280; j++) _solve(b, j);
for(j = 272110; j < 272120; j++) _solve(b, j);
for(j = 272950; j < 272960; j++) _solve(b, j);
for(j = 273790; j < 273800; j++) _solve(b, j);
for(j = 274630; j < 274640; j++) _solve(b, j);
for(j = 275470; j < 275480; j++) _solve(b, j);
for(j = 276310; j < 276320; j++) _solve(b, j);
for(j = 277150; j < 277160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 277990; j < 278000; j++) _solve(b, j);
for(j = 278830; j < 278840; j++) _solve(b, j);
for(j = 279670; j < 279680; j++) _solve(b, j);
for(j = 280510; j < 280520; j++) _solve(b, j);
for(j = 281350; j < 281360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 211640; j < 211650; j++) _solve(b, j);
for(j = 212480; j < 212490; j++) _solve(b, j);
for(j = 213320; j < 213330; j++) _solve(b, j);
for(j = 214160; j < 214170; j++) _solve(b, j);
for(j = 215000; j < 215010; j++) _solve(b, j);
for(j = 215840; j < 215850; j++) _solve(b, j);
for(j = 216680; j < 216690; j++) _solve(b, j);
for(j = 217520; j < 217530; j++) _solve(b, j);
for(j = 218360; j < 218370; j++) _solve(b, j);
for(j = 219200; j < 219210; j++) _solve(b, j);
for(j = 220040; j < 220050; j++) _solve(b, j);
for(j = 220880; j < 220890; j++) _solve(b, j);
for(j = 221720; j < 221730; j++) _solve(b, j);
for(j = 222560; j < 222570; j++) _solve(b, j);
for(j = 223400; j < 223410; j++) _solve(b, j);
for(j = 224240; j < 224250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 225080; j < 225090; j++) _solve(b, j);
for(j = 225920; j < 225930; j++) _solve(b, j);
for(j = 226760; j < 226770; j++) _solve(b, j);
for(j = 227600; j < 227610; j++) _solve(b, j);
for(j = 228440; j < 228450; j++) _solve(b, j);
for(j = 229280; j < 229290; j++) _solve(b, j);
for(j = 230120; j < 230130; j++) _solve(b, j);
for(j = 230960; j < 230970; j++) _solve(b, j);
for(j = 231800; j < 231810; j++) _solve(b, j);
for(j = 232640; j < 232650; j++) _solve(b, j);
for(j = 233480; j < 233490; j++) _solve(b, j);
for(j = 234320; j < 234330; j++) _solve(b, j);
for(j = 235160; j < 235170; j++) _solve(b, j);
for(j = 236000; j < 236010; j++) _solve(b, j);
for(j = 236840; j < 236850; j++) _solve(b, j);
for(j = 237680; j < 237690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 238520; j < 238530; j++) _solve(b, j);
for(j = 239360; j < 239370; j++) _solve(b, j);
for(j = 240200; j < 240210; j++) _solve(b, j);
for(j = 241040; j < 241050; j++) _solve(b, j);
for(j = 241880; j < 241890; j++) _solve(b, j);
for(j = 242720; j < 242730; j++) _solve(b, j);
for(j = 243560; j < 243570; j++) _solve(b, j);
for(j = 244400; j < 244410; j++) _solve(b, j);
for(j = 245240; j < 245250; j++) _solve(b, j);
for(j = 246080; j < 246090; j++) _solve(b, j);
for(j = 246920; j < 246930; j++) _solve(b, j);
for(j = 247760; j < 247770; j++) _solve(b, j);
for(j = 248600; j < 248610; j++) _solve(b, j);
for(j = 249440; j < 249450; j++) _solve(b, j);
for(j = 250280; j < 250290; j++) _solve(b, j);
for(j = 251120; j < 251130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 251960; j < 251970; j++) _solve(b, j);
for(j = 252800; j < 252810; j++) _solve(b, j);
for(j = 253640; j < 253650; j++) _solve(b, j);
for(j = 254480; j < 254490; j++) _solve(b, j);
for(j = 255320; j < 255330; j++) _solve(b, j);
for(j = 256160; j < 256170; j++) _solve(b, j);
for(j = 257000; j < 257010; j++) _solve(b, j);
for(j = 257840; j < 257850; j++) _solve(b, j);
for(j = 258680; j < 258690; j++) _solve(b, j);
for(j = 259520; j < 259530; j++) _solve(b, j);
for(j = 260360; j < 260370; j++) _solve(b, j);
for(j = 261200; j < 261210; j++) _solve(b, j);
for(j = 262040; j < 262050; j++) _solve(b, j);
for(j = 262880; j < 262890; j++) _solve(b, j);
for(j = 263720; j < 263730; j++) _solve(b, j);
for(j = 264560; j < 264570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 265400; j < 265410; j++) _solve(b, j);
for(j = 266240; j < 266250; j++) _solve(b, j);
for(j = 267080; j < 267090; j++) _solve(b, j);
for(j = 267920; j < 267930; j++) _solve(b, j);
for(j = 268760; j < 268770; j++) _solve(b, j);
for(j = 269600; j < 269610; j++) _solve(b, j);
for(j = 270440; j < 270450; j++) _solve(b, j);
for(j = 271280; j < 271290; j++) _solve(b, j);
for(j = 272120; j < 272130; j++) _solve(b, j);
for(j = 272960; j < 272970; j++) _solve(b, j);
for(j = 273800; j < 273810; j++) _solve(b, j);
for(j = 274640; j < 274650; j++) _solve(b, j);
for(j = 275480; j < 275490; j++) _solve(b, j);
for(j = 276320; j < 276330; j++) _solve(b, j);
for(j = 277160; j < 277170; j++) _solve(b, j);
for(j = 278000; j < 278010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 278840; j < 278850; j++) _solve(b, j);
for(j = 279680; j < 279690; j++) _solve(b, j);
for(j = 280520; j < 280530; j++) _solve(b, j);
for(j = 281360; j < 281370; j++) _solve(b, j);
for(j = 282200; j < 282210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 212490; j < 212500; j++) _solve(b, j);
for(j = 213330; j < 213340; j++) _solve(b, j);
for(j = 214170; j < 214180; j++) _solve(b, j);
for(j = 215010; j < 215020; j++) _solve(b, j);
for(j = 215850; j < 215860; j++) _solve(b, j);
for(j = 216690; j < 216700; j++) _solve(b, j);
for(j = 217530; j < 217540; j++) _solve(b, j);
for(j = 218370; j < 218380; j++) _solve(b, j);
for(j = 219210; j < 219220; j++) _solve(b, j);
for(j = 220050; j < 220060; j++) _solve(b, j);
for(j = 220890; j < 220900; j++) _solve(b, j);
for(j = 221730; j < 221740; j++) _solve(b, j);
for(j = 222570; j < 222580; j++) _solve(b, j);
for(j = 223410; j < 223420; j++) _solve(b, j);
for(j = 224250; j < 224260; j++) _solve(b, j);
for(j = 225090; j < 225100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 225930; j < 225940; j++) _solve(b, j);
for(j = 226770; j < 226780; j++) _solve(b, j);
for(j = 227610; j < 227620; j++) _solve(b, j);
for(j = 228450; j < 228460; j++) _solve(b, j);
for(j = 229290; j < 229300; j++) _solve(b, j);
for(j = 230130; j < 230140; j++) _solve(b, j);
for(j = 230970; j < 230980; j++) _solve(b, j);
for(j = 231810; j < 231820; j++) _solve(b, j);
for(j = 232650; j < 232660; j++) _solve(b, j);
for(j = 233490; j < 233500; j++) _solve(b, j);
for(j = 234330; j < 234340; j++) _solve(b, j);
for(j = 235170; j < 235180; j++) _solve(b, j);
for(j = 236010; j < 236020; j++) _solve(b, j);
for(j = 236850; j < 236860; j++) _solve(b, j);
for(j = 237690; j < 237700; j++) _solve(b, j);
for(j = 238530; j < 238540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 239370; j < 239380; j++) _solve(b, j);
for(j = 240210; j < 240220; j++) _solve(b, j);
for(j = 241050; j < 241060; j++) _solve(b, j);
for(j = 241890; j < 241900; j++) _solve(b, j);
for(j = 242730; j < 242740; j++) _solve(b, j);
for(j = 243570; j < 243580; j++) _solve(b, j);
for(j = 244410; j < 244420; j++) _solve(b, j);
for(j = 245250; j < 245260; j++) _solve(b, j);
for(j = 246090; j < 246100; j++) _solve(b, j);
for(j = 246930; j < 246940; j++) _solve(b, j);
for(j = 247770; j < 247780; j++) _solve(b, j);
for(j = 248610; j < 248620; j++) _solve(b, j);
for(j = 249450; j < 249460; j++) _solve(b, j);
for(j = 250290; j < 250300; j++) _solve(b, j);
for(j = 251130; j < 251140; j++) _solve(b, j);
for(j = 251970; j < 251980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 252810; j < 252820; j++) _solve(b, j);
for(j = 253650; j < 253660; j++) _solve(b, j);
for(j = 254490; j < 254500; j++) _solve(b, j);
for(j = 255330; j < 255340; j++) _solve(b, j);
for(j = 256170; j < 256180; j++) _solve(b, j);
for(j = 257010; j < 257020; j++) _solve(b, j);
for(j = 257850; j < 257860; j++) _solve(b, j);
for(j = 258690; j < 258700; j++) _solve(b, j);
for(j = 259530; j < 259540; j++) _solve(b, j);
for(j = 260370; j < 260380; j++) _solve(b, j);
for(j = 261210; j < 261220; j++) _solve(b, j);
for(j = 262050; j < 262060; j++) _solve(b, j);
for(j = 262890; j < 262900; j++) _solve(b, j);
for(j = 263730; j < 263740; j++) _solve(b, j);
for(j = 264570; j < 264580; j++) _solve(b, j);
for(j = 265410; j < 265420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 266250; j < 266260; j++) _solve(b, j);
for(j = 267090; j < 267100; j++) _solve(b, j);
for(j = 267930; j < 267940; j++) _solve(b, j);
for(j = 268770; j < 268780; j++) _solve(b, j);
for(j = 269610; j < 269620; j++) _solve(b, j);
for(j = 270450; j < 270460; j++) _solve(b, j);
for(j = 271290; j < 271300; j++) _solve(b, j);
for(j = 272130; j < 272140; j++) _solve(b, j);
for(j = 272970; j < 272980; j++) _solve(b, j);
for(j = 273810; j < 273820; j++) _solve(b, j);
for(j = 274650; j < 274660; j++) _solve(b, j);
for(j = 275490; j < 275500; j++) _solve(b, j);
for(j = 276330; j < 276340; j++) _solve(b, j);
for(j = 277170; j < 277180; j++) _solve(b, j);
for(j = 278010; j < 278020; j++) _solve(b, j);
for(j = 278850; j < 278860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 279690; j < 279700; j++) _solve(b, j);
for(j = 280530; j < 280540; j++) _solve(b, j);
for(j = 281370; j < 281380; j++) _solve(b, j);
for(j = 282210; j < 282220; j++) _solve(b, j);
for(j = 283050; j < 283060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 213340; j < 213350; j++) _solve(b, j);
for(j = 214180; j < 214190; j++) _solve(b, j);
for(j = 215020; j < 215030; j++) _solve(b, j);
for(j = 215860; j < 215870; j++) _solve(b, j);
for(j = 216700; j < 216710; j++) _solve(b, j);
for(j = 217540; j < 217550; j++) _solve(b, j);
for(j = 218380; j < 218390; j++) _solve(b, j);
for(j = 219220; j < 219230; j++) _solve(b, j);
for(j = 220060; j < 220070; j++) _solve(b, j);
for(j = 220900; j < 220910; j++) _solve(b, j);
for(j = 221740; j < 221750; j++) _solve(b, j);
for(j = 222580; j < 222590; j++) _solve(b, j);
for(j = 223420; j < 223430; j++) _solve(b, j);
for(j = 224260; j < 224270; j++) _solve(b, j);
for(j = 225100; j < 225110; j++) _solve(b, j);
for(j = 225940; j < 225950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 226780; j < 226790; j++) _solve(b, j);
for(j = 227620; j < 227630; j++) _solve(b, j);
for(j = 228460; j < 228470; j++) _solve(b, j);
for(j = 229300; j < 229310; j++) _solve(b, j);
for(j = 230140; j < 230150; j++) _solve(b, j);
for(j = 230980; j < 230990; j++) _solve(b, j);
for(j = 231820; j < 231830; j++) _solve(b, j);
for(j = 232660; j < 232670; j++) _solve(b, j);
for(j = 233500; j < 233510; j++) _solve(b, j);
for(j = 234340; j < 234350; j++) _solve(b, j);
for(j = 235180; j < 235190; j++) _solve(b, j);
for(j = 236020; j < 236030; j++) _solve(b, j);
for(j = 236860; j < 236870; j++) _solve(b, j);
for(j = 237700; j < 237710; j++) _solve(b, j);
for(j = 238540; j < 238550; j++) _solve(b, j);
for(j = 239380; j < 239390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 240220; j < 240230; j++) _solve(b, j);
for(j = 241060; j < 241070; j++) _solve(b, j);
for(j = 241900; j < 241910; j++) _solve(b, j);
for(j = 242740; j < 242750; j++) _solve(b, j);
for(j = 243580; j < 243590; j++) _solve(b, j);
for(j = 244420; j < 244430; j++) _solve(b, j);
for(j = 245260; j < 245270; j++) _solve(b, j);
for(j = 246100; j < 246110; j++) _solve(b, j);
for(j = 246940; j < 246950; j++) _solve(b, j);
for(j = 247780; j < 247790; j++) _solve(b, j);
for(j = 248620; j < 248630; j++) _solve(b, j);
for(j = 249460; j < 249470; j++) _solve(b, j);
for(j = 250300; j < 250310; j++) _solve(b, j);
for(j = 251140; j < 251150; j++) _solve(b, j);
for(j = 251980; j < 251990; j++) _solve(b, j);
for(j = 252820; j < 252830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 253660; j < 253670; j++) _solve(b, j);
for(j = 254500; j < 254510; j++) _solve(b, j);
for(j = 255340; j < 255350; j++) _solve(b, j);
for(j = 256180; j < 256190; j++) _solve(b, j);
for(j = 257020; j < 257030; j++) _solve(b, j);
for(j = 257860; j < 257870; j++) _solve(b, j);
for(j = 258700; j < 258710; j++) _solve(b, j);
for(j = 259540; j < 259550; j++) _solve(b, j);
for(j = 260380; j < 260390; j++) _solve(b, j);
for(j = 261220; j < 261230; j++) _solve(b, j);
for(j = 262060; j < 262070; j++) _solve(b, j);
for(j = 262900; j < 262910; j++) _solve(b, j);
for(j = 263740; j < 263750; j++) _solve(b, j);
for(j = 264580; j < 264590; j++) _solve(b, j);
for(j = 265420; j < 265430; j++) _solve(b, j);
for(j = 266260; j < 266270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 267100; j < 267110; j++) _solve(b, j);
for(j = 267940; j < 267950; j++) _solve(b, j);
for(j = 268780; j < 268790; j++) _solve(b, j);
for(j = 269620; j < 269630; j++) _solve(b, j);
for(j = 270460; j < 270470; j++) _solve(b, j);
for(j = 271300; j < 271310; j++) _solve(b, j);
for(j = 272140; j < 272150; j++) _solve(b, j);
for(j = 272980; j < 272990; j++) _solve(b, j);
for(j = 273820; j < 273830; j++) _solve(b, j);
for(j = 274660; j < 274670; j++) _solve(b, j);
for(j = 275500; j < 275510; j++) _solve(b, j);
for(j = 276340; j < 276350; j++) _solve(b, j);
for(j = 277180; j < 277190; j++) _solve(b, j);
for(j = 278020; j < 278030; j++) _solve(b, j);
for(j = 278860; j < 278870; j++) _solve(b, j);
for(j = 279700; j < 279710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 280540; j < 280550; j++) _solve(b, j);
for(j = 281380; j < 281390; j++) _solve(b, j);
for(j = 282220; j < 282230; j++) _solve(b, j);
for(j = 283060; j < 283070; j++) _solve(b, j);
for(j = 283900; j < 283910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 214190; j < 214200; j++) _solve(b, j);
for(j = 215030; j < 215040; j++) _solve(b, j);
for(j = 215870; j < 215880; j++) _solve(b, j);
for(j = 216710; j < 216720; j++) _solve(b, j);
for(j = 217550; j < 217560; j++) _solve(b, j);
for(j = 218390; j < 218400; j++) _solve(b, j);
for(j = 219230; j < 219240; j++) _solve(b, j);
for(j = 220070; j < 220080; j++) _solve(b, j);
for(j = 220910; j < 220920; j++) _solve(b, j);
for(j = 221750; j < 221760; j++) _solve(b, j);
for(j = 222590; j < 222600; j++) _solve(b, j);
for(j = 223430; j < 223440; j++) _solve(b, j);
for(j = 224270; j < 224280; j++) _solve(b, j);
for(j = 225110; j < 225120; j++) _solve(b, j);
for(j = 225950; j < 225960; j++) _solve(b, j);
for(j = 226790; j < 226800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 227630; j < 227640; j++) _solve(b, j);
for(j = 228470; j < 228480; j++) _solve(b, j);
for(j = 229310; j < 229320; j++) _solve(b, j);
for(j = 230150; j < 230160; j++) _solve(b, j);
for(j = 230990; j < 231000; j++) _solve(b, j);
for(j = 231830; j < 231840; j++) _solve(b, j);
for(j = 232670; j < 232680; j++) _solve(b, j);
for(j = 233510; j < 233520; j++) _solve(b, j);
for(j = 234350; j < 234360; j++) _solve(b, j);
for(j = 235190; j < 235200; j++) _solve(b, j);
for(j = 236030; j < 236040; j++) _solve(b, j);
for(j = 236870; j < 236880; j++) _solve(b, j);
for(j = 237710; j < 237720; j++) _solve(b, j);
for(j = 238550; j < 238560; j++) _solve(b, j);
for(j = 239390; j < 239400; j++) _solve(b, j);
for(j = 240230; j < 240240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 241070; j < 241080; j++) _solve(b, j);
for(j = 241910; j < 241920; j++) _solve(b, j);
for(j = 242750; j < 242760; j++) _solve(b, j);
for(j = 243590; j < 243600; j++) _solve(b, j);
for(j = 244430; j < 244440; j++) _solve(b, j);
for(j = 245270; j < 245280; j++) _solve(b, j);
for(j = 246110; j < 246120; j++) _solve(b, j);
for(j = 246950; j < 246960; j++) _solve(b, j);
for(j = 247790; j < 247800; j++) _solve(b, j);
for(j = 248630; j < 248640; j++) _solve(b, j);
for(j = 249470; j < 249480; j++) _solve(b, j);
for(j = 250310; j < 250320; j++) _solve(b, j);
for(j = 251150; j < 251160; j++) _solve(b, j);
for(j = 251990; j < 252000; j++) _solve(b, j);
for(j = 252830; j < 252840; j++) _solve(b, j);
for(j = 253670; j < 253680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 254510; j < 254520; j++) _solve(b, j);
for(j = 255350; j < 255360; j++) _solve(b, j);
for(j = 256190; j < 256200; j++) _solve(b, j);
for(j = 257030; j < 257040; j++) _solve(b, j);
for(j = 257870; j < 257880; j++) _solve(b, j);
for(j = 258710; j < 258720; j++) _solve(b, j);
for(j = 259550; j < 259560; j++) _solve(b, j);
for(j = 260390; j < 260400; j++) _solve(b, j);
for(j = 261230; j < 261240; j++) _solve(b, j);
for(j = 262070; j < 262080; j++) _solve(b, j);
for(j = 262910; j < 262920; j++) _solve(b, j);
for(j = 263750; j < 263760; j++) _solve(b, j);
for(j = 264590; j < 264600; j++) _solve(b, j);
for(j = 265430; j < 265440; j++) _solve(b, j);
for(j = 266270; j < 266280; j++) _solve(b, j);
for(j = 267110; j < 267120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 267950; j < 267960; j++) _solve(b, j);
for(j = 268790; j < 268800; j++) _solve(b, j);
for(j = 269630; j < 269640; j++) _solve(b, j);
for(j = 270470; j < 270480; j++) _solve(b, j);
for(j = 271310; j < 271320; j++) _solve(b, j);
for(j = 272150; j < 272160; j++) _solve(b, j);
for(j = 272990; j < 273000; j++) _solve(b, j);
for(j = 273830; j < 273840; j++) _solve(b, j);
for(j = 274670; j < 274680; j++) _solve(b, j);
for(j = 275510; j < 275520; j++) _solve(b, j);
for(j = 276350; j < 276360; j++) _solve(b, j);
for(j = 277190; j < 277200; j++) _solve(b, j);
for(j = 278030; j < 278040; j++) _solve(b, j);
for(j = 278870; j < 278880; j++) _solve(b, j);
for(j = 279710; j < 279720; j++) _solve(b, j);
for(j = 280550; j < 280560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 281390; j < 281400; j++) _solve(b, j);
for(j = 282230; j < 282240; j++) _solve(b, j);
for(j = 283070; j < 283080; j++) _solve(b, j);
for(j = 283910; j < 283920; j++) _solve(b, j);
for(j = 284750; j < 284760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 215040; j < 215050; j++) _solve(b, j);
for(j = 215880; j < 215890; j++) _solve(b, j);
for(j = 216720; j < 216730; j++) _solve(b, j);
for(j = 217560; j < 217570; j++) _solve(b, j);
for(j = 218400; j < 218410; j++) _solve(b, j);
for(j = 219240; j < 219250; j++) _solve(b, j);
for(j = 220080; j < 220090; j++) _solve(b, j);
for(j = 220920; j < 220930; j++) _solve(b, j);
for(j = 221760; j < 221770; j++) _solve(b, j);
for(j = 222600; j < 222610; j++) _solve(b, j);
for(j = 223440; j < 223450; j++) _solve(b, j);
for(j = 224280; j < 224290; j++) _solve(b, j);
for(j = 225120; j < 225130; j++) _solve(b, j);
for(j = 225960; j < 225970; j++) _solve(b, j);
for(j = 226800; j < 226810; j++) _solve(b, j);
for(j = 227640; j < 227650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 228480; j < 228490; j++) _solve(b, j);
for(j = 229320; j < 229330; j++) _solve(b, j);
for(j = 230160; j < 230170; j++) _solve(b, j);
for(j = 231000; j < 231010; j++) _solve(b, j);
for(j = 231840; j < 231850; j++) _solve(b, j);
for(j = 232680; j < 232690; j++) _solve(b, j);
for(j = 233520; j < 233530; j++) _solve(b, j);
for(j = 234360; j < 234370; j++) _solve(b, j);
for(j = 235200; j < 235210; j++) _solve(b, j);
for(j = 236040; j < 236050; j++) _solve(b, j);
for(j = 236880; j < 236890; j++) _solve(b, j);
for(j = 237720; j < 237730; j++) _solve(b, j);
for(j = 238560; j < 238570; j++) _solve(b, j);
for(j = 239400; j < 239410; j++) _solve(b, j);
for(j = 240240; j < 240250; j++) _solve(b, j);
for(j = 241080; j < 241090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 241920; j < 241930; j++) _solve(b, j);
for(j = 242760; j < 242770; j++) _solve(b, j);
for(j = 243600; j < 243610; j++) _solve(b, j);
for(j = 244440; j < 244450; j++) _solve(b, j);
for(j = 245280; j < 245290; j++) _solve(b, j);
for(j = 246120; j < 246130; j++) _solve(b, j);
for(j = 246960; j < 246970; j++) _solve(b, j);
for(j = 247800; j < 247810; j++) _solve(b, j);
for(j = 248640; j < 248650; j++) _solve(b, j);
for(j = 249480; j < 249490; j++) _solve(b, j);
for(j = 250320; j < 250330; j++) _solve(b, j);
for(j = 251160; j < 251170; j++) _solve(b, j);
for(j = 252000; j < 252010; j++) _solve(b, j);
for(j = 252840; j < 252850; j++) _solve(b, j);
for(j = 253680; j < 253690; j++) _solve(b, j);
for(j = 254520; j < 254530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 255360; j < 255370; j++) _solve(b, j);
for(j = 256200; j < 256210; j++) _solve(b, j);
for(j = 257040; j < 257050; j++) _solve(b, j);
for(j = 257880; j < 257890; j++) _solve(b, j);
for(j = 258720; j < 258730; j++) _solve(b, j);
for(j = 259560; j < 259570; j++) _solve(b, j);
for(j = 260400; j < 260410; j++) _solve(b, j);
for(j = 261240; j < 261250; j++) _solve(b, j);
for(j = 262080; j < 262090; j++) _solve(b, j);
for(j = 262920; j < 262930; j++) _solve(b, j);
for(j = 263760; j < 263770; j++) _solve(b, j);
for(j = 264600; j < 264610; j++) _solve(b, j);
for(j = 265440; j < 265450; j++) _solve(b, j);
for(j = 266280; j < 266290; j++) _solve(b, j);
for(j = 267120; j < 267130; j++) _solve(b, j);
for(j = 267960; j < 267970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 268800; j < 268810; j++) _solve(b, j);
for(j = 269640; j < 269650; j++) _solve(b, j);
for(j = 270480; j < 270490; j++) _solve(b, j);
for(j = 271320; j < 271330; j++) _solve(b, j);
for(j = 272160; j < 272170; j++) _solve(b, j);
for(j = 273000; j < 273010; j++) _solve(b, j);
for(j = 273840; j < 273850; j++) _solve(b, j);
for(j = 274680; j < 274690; j++) _solve(b, j);
for(j = 275520; j < 275530; j++) _solve(b, j);
for(j = 276360; j < 276370; j++) _solve(b, j);
for(j = 277200; j < 277210; j++) _solve(b, j);
for(j = 278040; j < 278050; j++) _solve(b, j);
for(j = 278880; j < 278890; j++) _solve(b, j);
for(j = 279720; j < 279730; j++) _solve(b, j);
for(j = 280560; j < 280570; j++) _solve(b, j);
for(j = 281400; j < 281410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 282240; j < 282250; j++) _solve(b, j);
for(j = 283080; j < 283090; j++) _solve(b, j);
for(j = 283920; j < 283930; j++) _solve(b, j);
for(j = 284760; j < 284770; j++) _solve(b, j);
for(j = 285600; j < 285610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 215890; j < 215900; j++) _solve(b, j);
for(j = 216730; j < 216740; j++) _solve(b, j);
for(j = 217570; j < 217580; j++) _solve(b, j);
for(j = 218410; j < 218420; j++) _solve(b, j);
for(j = 219250; j < 219260; j++) _solve(b, j);
for(j = 220090; j < 220100; j++) _solve(b, j);
for(j = 220930; j < 220940; j++) _solve(b, j);
for(j = 221770; j < 221780; j++) _solve(b, j);
for(j = 222610; j < 222620; j++) _solve(b, j);
for(j = 223450; j < 223460; j++) _solve(b, j);
for(j = 224290; j < 224300; j++) _solve(b, j);
for(j = 225130; j < 225140; j++) _solve(b, j);
for(j = 225970; j < 225980; j++) _solve(b, j);
for(j = 226810; j < 226820; j++) _solve(b, j);
for(j = 227650; j < 227660; j++) _solve(b, j);
for(j = 228490; j < 228500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 229330; j < 229340; j++) _solve(b, j);
for(j = 230170; j < 230180; j++) _solve(b, j);
for(j = 231010; j < 231020; j++) _solve(b, j);
for(j = 231850; j < 231860; j++) _solve(b, j);
for(j = 232690; j < 232700; j++) _solve(b, j);
for(j = 233530; j < 233540; j++) _solve(b, j);
for(j = 234370; j < 234380; j++) _solve(b, j);
for(j = 235210; j < 235220; j++) _solve(b, j);
for(j = 236050; j < 236060; j++) _solve(b, j);
for(j = 236890; j < 236900; j++) _solve(b, j);
for(j = 237730; j < 237740; j++) _solve(b, j);
for(j = 238570; j < 238580; j++) _solve(b, j);
for(j = 239410; j < 239420; j++) _solve(b, j);
for(j = 240250; j < 240260; j++) _solve(b, j);
for(j = 241090; j < 241100; j++) _solve(b, j);
for(j = 241930; j < 241940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 242770; j < 242780; j++) _solve(b, j);
for(j = 243610; j < 243620; j++) _solve(b, j);
for(j = 244450; j < 244460; j++) _solve(b, j);
for(j = 245290; j < 245300; j++) _solve(b, j);
for(j = 246130; j < 246140; j++) _solve(b, j);
for(j = 246970; j < 246980; j++) _solve(b, j);
for(j = 247810; j < 247820; j++) _solve(b, j);
for(j = 248650; j < 248660; j++) _solve(b, j);
for(j = 249490; j < 249500; j++) _solve(b, j);
for(j = 250330; j < 250340; j++) _solve(b, j);
for(j = 251170; j < 251180; j++) _solve(b, j);
for(j = 252010; j < 252020; j++) _solve(b, j);
for(j = 252850; j < 252860; j++) _solve(b, j);
for(j = 253690; j < 253700; j++) _solve(b, j);
for(j = 254530; j < 254540; j++) _solve(b, j);
for(j = 255370; j < 255380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 256210; j < 256220; j++) _solve(b, j);
for(j = 257050; j < 257060; j++) _solve(b, j);
for(j = 257890; j < 257900; j++) _solve(b, j);
for(j = 258730; j < 258740; j++) _solve(b, j);
for(j = 259570; j < 259580; j++) _solve(b, j);
for(j = 260410; j < 260420; j++) _solve(b, j);
for(j = 261250; j < 261260; j++) _solve(b, j);
for(j = 262090; j < 262100; j++) _solve(b, j);
for(j = 262930; j < 262940; j++) _solve(b, j);
for(j = 263770; j < 263780; j++) _solve(b, j);
for(j = 264610; j < 264620; j++) _solve(b, j);
for(j = 265450; j < 265460; j++) _solve(b, j);
for(j = 266290; j < 266300; j++) _solve(b, j);
for(j = 267130; j < 267140; j++) _solve(b, j);
for(j = 267970; j < 267980; j++) _solve(b, j);
for(j = 268810; j < 268820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 269650; j < 269660; j++) _solve(b, j);
for(j = 270490; j < 270500; j++) _solve(b, j);
for(j = 271330; j < 271340; j++) _solve(b, j);
for(j = 272170; j < 272180; j++) _solve(b, j);
for(j = 273010; j < 273020; j++) _solve(b, j);
for(j = 273850; j < 273860; j++) _solve(b, j);
for(j = 274690; j < 274700; j++) _solve(b, j);
for(j = 275530; j < 275540; j++) _solve(b, j);
for(j = 276370; j < 276380; j++) _solve(b, j);
for(j = 277210; j < 277220; j++) _solve(b, j);
for(j = 278050; j < 278060; j++) _solve(b, j);
for(j = 278890; j < 278900; j++) _solve(b, j);
for(j = 279730; j < 279740; j++) _solve(b, j);
for(j = 280570; j < 280580; j++) _solve(b, j);
for(j = 281410; j < 281420; j++) _solve(b, j);
for(j = 282250; j < 282260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 283090; j < 283100; j++) _solve(b, j);
for(j = 283930; j < 283940; j++) _solve(b, j);
for(j = 284770; j < 284780; j++) _solve(b, j);
for(j = 285610; j < 285620; j++) _solve(b, j);
for(j = 286450; j < 286460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 216740; j < 216750; j++) _solve(b, j);
for(j = 217580; j < 217590; j++) _solve(b, j);
for(j = 218420; j < 218430; j++) _solve(b, j);
for(j = 219260; j < 219270; j++) _solve(b, j);
for(j = 220100; j < 220110; j++) _solve(b, j);
for(j = 220940; j < 220950; j++) _solve(b, j);
for(j = 221780; j < 221790; j++) _solve(b, j);
for(j = 222620; j < 222630; j++) _solve(b, j);
for(j = 223460; j < 223470; j++) _solve(b, j);
for(j = 224300; j < 224310; j++) _solve(b, j);
for(j = 225140; j < 225150; j++) _solve(b, j);
for(j = 225980; j < 225990; j++) _solve(b, j);
for(j = 226820; j < 226830; j++) _solve(b, j);
for(j = 227660; j < 227670; j++) _solve(b, j);
for(j = 228500; j < 228510; j++) _solve(b, j);
for(j = 229340; j < 229350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 230180; j < 230190; j++) _solve(b, j);
for(j = 231020; j < 231030; j++) _solve(b, j);
for(j = 231860; j < 231870; j++) _solve(b, j);
for(j = 232700; j < 232710; j++) _solve(b, j);
for(j = 233540; j < 233550; j++) _solve(b, j);
for(j = 234380; j < 234390; j++) _solve(b, j);
for(j = 235220; j < 235230; j++) _solve(b, j);
for(j = 236060; j < 236070; j++) _solve(b, j);
for(j = 236900; j < 236910; j++) _solve(b, j);
for(j = 237740; j < 237750; j++) _solve(b, j);
for(j = 238580; j < 238590; j++) _solve(b, j);
for(j = 239420; j < 239430; j++) _solve(b, j);
for(j = 240260; j < 240270; j++) _solve(b, j);
for(j = 241100; j < 241110; j++) _solve(b, j);
for(j = 241940; j < 241950; j++) _solve(b, j);
for(j = 242780; j < 242790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 243620; j < 243630; j++) _solve(b, j);
for(j = 244460; j < 244470; j++) _solve(b, j);
for(j = 245300; j < 245310; j++) _solve(b, j);
for(j = 246140; j < 246150; j++) _solve(b, j);
for(j = 246980; j < 246990; j++) _solve(b, j);
for(j = 247820; j < 247830; j++) _solve(b, j);
for(j = 248660; j < 248670; j++) _solve(b, j);
for(j = 249500; j < 249510; j++) _solve(b, j);
for(j = 250340; j < 250350; j++) _solve(b, j);
for(j = 251180; j < 251190; j++) _solve(b, j);
for(j = 252020; j < 252030; j++) _solve(b, j);
for(j = 252860; j < 252870; j++) _solve(b, j);
for(j = 253700; j < 253710; j++) _solve(b, j);
for(j = 254540; j < 254550; j++) _solve(b, j);
for(j = 255380; j < 255390; j++) _solve(b, j);
for(j = 256220; j < 256230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 257060; j < 257070; j++) _solve(b, j);
for(j = 257900; j < 257910; j++) _solve(b, j);
for(j = 258740; j < 258750; j++) _solve(b, j);
for(j = 259580; j < 259590; j++) _solve(b, j);
for(j = 260420; j < 260430; j++) _solve(b, j);
for(j = 261260; j < 261270; j++) _solve(b, j);
for(j = 262100; j < 262110; j++) _solve(b, j);
for(j = 262940; j < 262950; j++) _solve(b, j);
for(j = 263780; j < 263790; j++) _solve(b, j);
for(j = 264620; j < 264630; j++) _solve(b, j);
for(j = 265460; j < 265470; j++) _solve(b, j);
for(j = 266300; j < 266310; j++) _solve(b, j);
for(j = 267140; j < 267150; j++) _solve(b, j);
for(j = 267980; j < 267990; j++) _solve(b, j);
for(j = 268820; j < 268830; j++) _solve(b, j);
for(j = 269660; j < 269670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 270500; j < 270510; j++) _solve(b, j);
for(j = 271340; j < 271350; j++) _solve(b, j);
for(j = 272180; j < 272190; j++) _solve(b, j);
for(j = 273020; j < 273030; j++) _solve(b, j);
for(j = 273860; j < 273870; j++) _solve(b, j);
for(j = 274700; j < 274710; j++) _solve(b, j);
for(j = 275540; j < 275550; j++) _solve(b, j);
for(j = 276380; j < 276390; j++) _solve(b, j);
for(j = 277220; j < 277230; j++) _solve(b, j);
for(j = 278060; j < 278070; j++) _solve(b, j);
for(j = 278900; j < 278910; j++) _solve(b, j);
for(j = 279740; j < 279750; j++) _solve(b, j);
for(j = 280580; j < 280590; j++) _solve(b, j);
for(j = 281420; j < 281430; j++) _solve(b, j);
for(j = 282260; j < 282270; j++) _solve(b, j);
for(j = 283100; j < 283110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 283940; j < 283950; j++) _solve(b, j);
for(j = 284780; j < 284790; j++) _solve(b, j);
for(j = 285620; j < 285630; j++) _solve(b, j);
for(j = 286460; j < 286470; j++) _solve(b, j);
for(j = 287300; j < 287310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 217590; j < 217600; j++) _solve(b, j);
for(j = 218430; j < 218440; j++) _solve(b, j);
for(j = 219270; j < 219280; j++) _solve(b, j);
for(j = 220110; j < 220120; j++) _solve(b, j);
for(j = 220950; j < 220960; j++) _solve(b, j);
for(j = 221790; j < 221800; j++) _solve(b, j);
for(j = 222630; j < 222640; j++) _solve(b, j);
for(j = 223470; j < 223480; j++) _solve(b, j);
for(j = 224310; j < 224320; j++) _solve(b, j);
for(j = 225150; j < 225160; j++) _solve(b, j);
for(j = 225990; j < 226000; j++) _solve(b, j);
for(j = 226830; j < 226840; j++) _solve(b, j);
for(j = 227670; j < 227680; j++) _solve(b, j);
for(j = 228510; j < 228520; j++) _solve(b, j);
for(j = 229350; j < 229360; j++) _solve(b, j);
for(j = 230190; j < 230200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 231030; j < 231040; j++) _solve(b, j);
for(j = 231870; j < 231880; j++) _solve(b, j);
for(j = 232710; j < 232720; j++) _solve(b, j);
for(j = 233550; j < 233560; j++) _solve(b, j);
for(j = 234390; j < 234400; j++) _solve(b, j);
for(j = 235230; j < 235240; j++) _solve(b, j);
for(j = 236070; j < 236080; j++) _solve(b, j);
for(j = 236910; j < 236920; j++) _solve(b, j);
for(j = 237750; j < 237760; j++) _solve(b, j);
for(j = 238590; j < 238600; j++) _solve(b, j);
for(j = 239430; j < 239440; j++) _solve(b, j);
for(j = 240270; j < 240280; j++) _solve(b, j);
for(j = 241110; j < 241120; j++) _solve(b, j);
for(j = 241950; j < 241960; j++) _solve(b, j);
for(j = 242790; j < 242800; j++) _solve(b, j);
for(j = 243630; j < 243640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 244470; j < 244480; j++) _solve(b, j);
for(j = 245310; j < 245320; j++) _solve(b, j);
for(j = 246150; j < 246160; j++) _solve(b, j);
for(j = 246990; j < 247000; j++) _solve(b, j);
for(j = 247830; j < 247840; j++) _solve(b, j);
for(j = 248670; j < 248680; j++) _solve(b, j);
for(j = 249510; j < 249520; j++) _solve(b, j);
for(j = 250350; j < 250360; j++) _solve(b, j);
for(j = 251190; j < 251200; j++) _solve(b, j);
for(j = 252030; j < 252040; j++) _solve(b, j);
for(j = 252870; j < 252880; j++) _solve(b, j);
for(j = 253710; j < 253720; j++) _solve(b, j);
for(j = 254550; j < 254560; j++) _solve(b, j);
for(j = 255390; j < 255400; j++) _solve(b, j);
for(j = 256230; j < 256240; j++) _solve(b, j);
for(j = 257070; j < 257080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 257910; j < 257920; j++) _solve(b, j);
for(j = 258750; j < 258760; j++) _solve(b, j);
for(j = 259590; j < 259600; j++) _solve(b, j);
for(j = 260430; j < 260440; j++) _solve(b, j);
for(j = 261270; j < 261280; j++) _solve(b, j);
for(j = 262110; j < 262120; j++) _solve(b, j);
for(j = 262950; j < 262960; j++) _solve(b, j);
for(j = 263790; j < 263800; j++) _solve(b, j);
for(j = 264630; j < 264640; j++) _solve(b, j);
for(j = 265470; j < 265480; j++) _solve(b, j);
for(j = 266310; j < 266320; j++) _solve(b, j);
for(j = 267150; j < 267160; j++) _solve(b, j);
for(j = 267990; j < 268000; j++) _solve(b, j);
for(j = 268830; j < 268840; j++) _solve(b, j);
for(j = 269670; j < 269680; j++) _solve(b, j);
for(j = 270510; j < 270520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 271350; j < 271360; j++) _solve(b, j);
for(j = 272190; j < 272200; j++) _solve(b, j);
for(j = 273030; j < 273040; j++) _solve(b, j);
for(j = 273870; j < 273880; j++) _solve(b, j);
for(j = 274710; j < 274720; j++) _solve(b, j);
for(j = 275550; j < 275560; j++) _solve(b, j);
for(j = 276390; j < 276400; j++) _solve(b, j);
for(j = 277230; j < 277240; j++) _solve(b, j);
for(j = 278070; j < 278080; j++) _solve(b, j);
for(j = 278910; j < 278920; j++) _solve(b, j);
for(j = 279750; j < 279760; j++) _solve(b, j);
for(j = 280590; j < 280600; j++) _solve(b, j);
for(j = 281430; j < 281440; j++) _solve(b, j);
for(j = 282270; j < 282280; j++) _solve(b, j);
for(j = 283110; j < 283120; j++) _solve(b, j);
for(j = 283950; j < 283960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 284790; j < 284800; j++) _solve(b, j);
for(j = 285630; j < 285640; j++) _solve(b, j);
for(j = 286470; j < 286480; j++) _solve(b, j);
for(j = 287310; j < 287320; j++) _solve(b, j);
for(j = 288150; j < 288160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 218440; j < 218450; j++) _solve(b, j);
for(j = 219280; j < 219290; j++) _solve(b, j);
for(j = 220120; j < 220130; j++) _solve(b, j);
for(j = 220960; j < 220970; j++) _solve(b, j);
for(j = 221800; j < 221810; j++) _solve(b, j);
for(j = 222640; j < 222650; j++) _solve(b, j);
for(j = 223480; j < 223490; j++) _solve(b, j);
for(j = 224320; j < 224330; j++) _solve(b, j);
for(j = 225160; j < 225170; j++) _solve(b, j);
for(j = 226000; j < 226010; j++) _solve(b, j);
for(j = 226840; j < 226850; j++) _solve(b, j);
for(j = 227680; j < 227690; j++) _solve(b, j);
for(j = 228520; j < 228530; j++) _solve(b, j);
for(j = 229360; j < 229370; j++) _solve(b, j);
for(j = 230200; j < 230210; j++) _solve(b, j);
for(j = 231040; j < 231050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 231880; j < 231890; j++) _solve(b, j);
for(j = 232720; j < 232730; j++) _solve(b, j);
for(j = 233560; j < 233570; j++) _solve(b, j);
for(j = 234400; j < 234410; j++) _solve(b, j);
for(j = 235240; j < 235250; j++) _solve(b, j);
for(j = 236080; j < 236090; j++) _solve(b, j);
for(j = 236920; j < 236930; j++) _solve(b, j);
for(j = 237760; j < 237770; j++) _solve(b, j);
for(j = 238600; j < 238610; j++) _solve(b, j);
for(j = 239440; j < 239450; j++) _solve(b, j);
for(j = 240280; j < 240290; j++) _solve(b, j);
for(j = 241120; j < 241130; j++) _solve(b, j);
for(j = 241960; j < 241970; j++) _solve(b, j);
for(j = 242800; j < 242810; j++) _solve(b, j);
for(j = 243640; j < 243650; j++) _solve(b, j);
for(j = 244480; j < 244490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 245320; j < 245330; j++) _solve(b, j);
for(j = 246160; j < 246170; j++) _solve(b, j);
for(j = 247000; j < 247010; j++) _solve(b, j);
for(j = 247840; j < 247850; j++) _solve(b, j);
for(j = 248680; j < 248690; j++) _solve(b, j);
for(j = 249520; j < 249530; j++) _solve(b, j);
for(j = 250360; j < 250370; j++) _solve(b, j);
for(j = 251200; j < 251210; j++) _solve(b, j);
for(j = 252040; j < 252050; j++) _solve(b, j);
for(j = 252880; j < 252890; j++) _solve(b, j);
for(j = 253720; j < 253730; j++) _solve(b, j);
for(j = 254560; j < 254570; j++) _solve(b, j);
for(j = 255400; j < 255410; j++) _solve(b, j);
for(j = 256240; j < 256250; j++) _solve(b, j);
for(j = 257080; j < 257090; j++) _solve(b, j);
for(j = 257920; j < 257930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 258760; j < 258770; j++) _solve(b, j);
for(j = 259600; j < 259610; j++) _solve(b, j);
for(j = 260440; j < 260450; j++) _solve(b, j);
for(j = 261280; j < 261290; j++) _solve(b, j);
for(j = 262120; j < 262130; j++) _solve(b, j);
for(j = 262960; j < 262970; j++) _solve(b, j);
for(j = 263800; j < 263810; j++) _solve(b, j);
for(j = 264640; j < 264650; j++) _solve(b, j);
for(j = 265480; j < 265490; j++) _solve(b, j);
for(j = 266320; j < 266330; j++) _solve(b, j);
for(j = 267160; j < 267170; j++) _solve(b, j);
for(j = 268000; j < 268010; j++) _solve(b, j);
for(j = 268840; j < 268850; j++) _solve(b, j);
for(j = 269680; j < 269690; j++) _solve(b, j);
for(j = 270520; j < 270530; j++) _solve(b, j);
for(j = 271360; j < 271370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 272200; j < 272210; j++) _solve(b, j);
for(j = 273040; j < 273050; j++) _solve(b, j);
for(j = 273880; j < 273890; j++) _solve(b, j);
for(j = 274720; j < 274730; j++) _solve(b, j);
for(j = 275560; j < 275570; j++) _solve(b, j);
for(j = 276400; j < 276410; j++) _solve(b, j);
for(j = 277240; j < 277250; j++) _solve(b, j);
for(j = 278080; j < 278090; j++) _solve(b, j);
for(j = 278920; j < 278930; j++) _solve(b, j);
for(j = 279760; j < 279770; j++) _solve(b, j);
for(j = 280600; j < 280610; j++) _solve(b, j);
for(j = 281440; j < 281450; j++) _solve(b, j);
for(j = 282280; j < 282290; j++) _solve(b, j);
for(j = 283120; j < 283130; j++) _solve(b, j);
for(j = 283960; j < 283970; j++) _solve(b, j);
for(j = 284800; j < 284810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 285640; j < 285650; j++) _solve(b, j);
for(j = 286480; j < 286490; j++) _solve(b, j);
for(j = 287320; j < 287330; j++) _solve(b, j);
for(j = 288160; j < 288170; j++) _solve(b, j);
for(j = 289000; j < 289010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 219290; j < 219300; j++) _solve(b, j);
for(j = 220130; j < 220140; j++) _solve(b, j);
for(j = 220970; j < 220980; j++) _solve(b, j);
for(j = 221810; j < 221820; j++) _solve(b, j);
for(j = 222650; j < 222660; j++) _solve(b, j);
for(j = 223490; j < 223500; j++) _solve(b, j);
for(j = 224330; j < 224340; j++) _solve(b, j);
for(j = 225170; j < 225180; j++) _solve(b, j);
for(j = 226010; j < 226020; j++) _solve(b, j);
for(j = 226850; j < 226860; j++) _solve(b, j);
for(j = 227690; j < 227700; j++) _solve(b, j);
for(j = 228530; j < 228540; j++) _solve(b, j);
for(j = 229370; j < 229380; j++) _solve(b, j);
for(j = 230210; j < 230220; j++) _solve(b, j);
for(j = 231050; j < 231060; j++) _solve(b, j);
for(j = 231890; j < 231900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 232730; j < 232740; j++) _solve(b, j);
for(j = 233570; j < 233580; j++) _solve(b, j);
for(j = 234410; j < 234420; j++) _solve(b, j);
for(j = 235250; j < 235260; j++) _solve(b, j);
for(j = 236090; j < 236100; j++) _solve(b, j);
for(j = 236930; j < 236940; j++) _solve(b, j);
for(j = 237770; j < 237780; j++) _solve(b, j);
for(j = 238610; j < 238620; j++) _solve(b, j);
for(j = 239450; j < 239460; j++) _solve(b, j);
for(j = 240290; j < 240300; j++) _solve(b, j);
for(j = 241130; j < 241140; j++) _solve(b, j);
for(j = 241970; j < 241980; j++) _solve(b, j);
for(j = 242810; j < 242820; j++) _solve(b, j);
for(j = 243650; j < 243660; j++) _solve(b, j);
for(j = 244490; j < 244500; j++) _solve(b, j);
for(j = 245330; j < 245340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 246170; j < 246180; j++) _solve(b, j);
for(j = 247010; j < 247020; j++) _solve(b, j);
for(j = 247850; j < 247860; j++) _solve(b, j);
for(j = 248690; j < 248700; j++) _solve(b, j);
for(j = 249530; j < 249540; j++) _solve(b, j);
for(j = 250370; j < 250380; j++) _solve(b, j);
for(j = 251210; j < 251220; j++) _solve(b, j);
for(j = 252050; j < 252060; j++) _solve(b, j);
for(j = 252890; j < 252900; j++) _solve(b, j);
for(j = 253730; j < 253740; j++) _solve(b, j);
for(j = 254570; j < 254580; j++) _solve(b, j);
for(j = 255410; j < 255420; j++) _solve(b, j);
for(j = 256250; j < 256260; j++) _solve(b, j);
for(j = 257090; j < 257100; j++) _solve(b, j);
for(j = 257930; j < 257940; j++) _solve(b, j);
for(j = 258770; j < 258780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 259610; j < 259620; j++) _solve(b, j);
for(j = 260450; j < 260460; j++) _solve(b, j);
for(j = 261290; j < 261300; j++) _solve(b, j);
for(j = 262130; j < 262140; j++) _solve(b, j);
for(j = 262970; j < 262980; j++) _solve(b, j);
for(j = 263810; j < 263820; j++) _solve(b, j);
for(j = 264650; j < 264660; j++) _solve(b, j);
for(j = 265490; j < 265500; j++) _solve(b, j);
for(j = 266330; j < 266340; j++) _solve(b, j);
for(j = 267170; j < 267180; j++) _solve(b, j);
for(j = 268010; j < 268020; j++) _solve(b, j);
for(j = 268850; j < 268860; j++) _solve(b, j);
for(j = 269690; j < 269700; j++) _solve(b, j);
for(j = 270530; j < 270540; j++) _solve(b, j);
for(j = 271370; j < 271380; j++) _solve(b, j);
for(j = 272210; j < 272220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 273050; j < 273060; j++) _solve(b, j);
for(j = 273890; j < 273900; j++) _solve(b, j);
for(j = 274730; j < 274740; j++) _solve(b, j);
for(j = 275570; j < 275580; j++) _solve(b, j);
for(j = 276410; j < 276420; j++) _solve(b, j);
for(j = 277250; j < 277260; j++) _solve(b, j);
for(j = 278090; j < 278100; j++) _solve(b, j);
for(j = 278930; j < 278940; j++) _solve(b, j);
for(j = 279770; j < 279780; j++) _solve(b, j);
for(j = 280610; j < 280620; j++) _solve(b, j);
for(j = 281450; j < 281460; j++) _solve(b, j);
for(j = 282290; j < 282300; j++) _solve(b, j);
for(j = 283130; j < 283140; j++) _solve(b, j);
for(j = 283970; j < 283980; j++) _solve(b, j);
for(j = 284810; j < 284820; j++) _solve(b, j);
for(j = 285650; j < 285660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 286490; j < 286500; j++) _solve(b, j);
for(j = 287330; j < 287340; j++) _solve(b, j);
for(j = 288170; j < 288180; j++) _solve(b, j);
for(j = 289010; j < 289020; j++) _solve(b, j);
for(j = 289850; j < 289860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 220140; j < 220150; j++) _solve(b, j);
for(j = 220980; j < 220990; j++) _solve(b, j);
for(j = 221820; j < 221830; j++) _solve(b, j);
for(j = 222660; j < 222670; j++) _solve(b, j);
for(j = 223500; j < 223510; j++) _solve(b, j);
for(j = 224340; j < 224350; j++) _solve(b, j);
for(j = 225180; j < 225190; j++) _solve(b, j);
for(j = 226020; j < 226030; j++) _solve(b, j);
for(j = 226860; j < 226870; j++) _solve(b, j);
for(j = 227700; j < 227710; j++) _solve(b, j);
for(j = 228540; j < 228550; j++) _solve(b, j);
for(j = 229380; j < 229390; j++) _solve(b, j);
for(j = 230220; j < 230230; j++) _solve(b, j);
for(j = 231060; j < 231070; j++) _solve(b, j);
for(j = 231900; j < 231910; j++) _solve(b, j);
for(j = 232740; j < 232750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 233580; j < 233590; j++) _solve(b, j);
for(j = 234420; j < 234430; j++) _solve(b, j);
for(j = 235260; j < 235270; j++) _solve(b, j);
for(j = 236100; j < 236110; j++) _solve(b, j);
for(j = 236940; j < 236950; j++) _solve(b, j);
for(j = 237780; j < 237790; j++) _solve(b, j);
for(j = 238620; j < 238630; j++) _solve(b, j);
for(j = 239460; j < 239470; j++) _solve(b, j);
for(j = 240300; j < 240310; j++) _solve(b, j);
for(j = 241140; j < 241150; j++) _solve(b, j);
for(j = 241980; j < 241990; j++) _solve(b, j);
for(j = 242820; j < 242830; j++) _solve(b, j);
for(j = 243660; j < 243670; j++) _solve(b, j);
for(j = 244500; j < 244510; j++) _solve(b, j);
for(j = 245340; j < 245350; j++) _solve(b, j);
for(j = 246180; j < 246190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 247020; j < 247030; j++) _solve(b, j);
for(j = 247860; j < 247870; j++) _solve(b, j);
for(j = 248700; j < 248710; j++) _solve(b, j);
for(j = 249540; j < 249550; j++) _solve(b, j);
for(j = 250380; j < 250390; j++) _solve(b, j);
for(j = 251220; j < 251230; j++) _solve(b, j);
for(j = 252060; j < 252070; j++) _solve(b, j);
for(j = 252900; j < 252910; j++) _solve(b, j);
for(j = 253740; j < 253750; j++) _solve(b, j);
for(j = 254580; j < 254590; j++) _solve(b, j);
for(j = 255420; j < 255430; j++) _solve(b, j);
for(j = 256260; j < 256270; j++) _solve(b, j);
for(j = 257100; j < 257110; j++) _solve(b, j);
for(j = 257940; j < 257950; j++) _solve(b, j);
for(j = 258780; j < 258790; j++) _solve(b, j);
for(j = 259620; j < 259630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 260460; j < 260470; j++) _solve(b, j);
for(j = 261300; j < 261310; j++) _solve(b, j);
for(j = 262140; j < 262150; j++) _solve(b, j);
for(j = 262980; j < 262990; j++) _solve(b, j);
for(j = 263820; j < 263830; j++) _solve(b, j);
for(j = 264660; j < 264670; j++) _solve(b, j);
for(j = 265500; j < 265510; j++) _solve(b, j);
for(j = 266340; j < 266350; j++) _solve(b, j);
for(j = 267180; j < 267190; j++) _solve(b, j);
for(j = 268020; j < 268030; j++) _solve(b, j);
for(j = 268860; j < 268870; j++) _solve(b, j);
for(j = 269700; j < 269710; j++) _solve(b, j);
for(j = 270540; j < 270550; j++) _solve(b, j);
for(j = 271380; j < 271390; j++) _solve(b, j);
for(j = 272220; j < 272230; j++) _solve(b, j);
for(j = 273060; j < 273070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 273900; j < 273910; j++) _solve(b, j);
for(j = 274740; j < 274750; j++) _solve(b, j);
for(j = 275580; j < 275590; j++) _solve(b, j);
for(j = 276420; j < 276430; j++) _solve(b, j);
for(j = 277260; j < 277270; j++) _solve(b, j);
for(j = 278100; j < 278110; j++) _solve(b, j);
for(j = 278940; j < 278950; j++) _solve(b, j);
for(j = 279780; j < 279790; j++) _solve(b, j);
for(j = 280620; j < 280630; j++) _solve(b, j);
for(j = 281460; j < 281470; j++) _solve(b, j);
for(j = 282300; j < 282310; j++) _solve(b, j);
for(j = 283140; j < 283150; j++) _solve(b, j);
for(j = 283980; j < 283990; j++) _solve(b, j);
for(j = 284820; j < 284830; j++) _solve(b, j);
for(j = 285660; j < 285670; j++) _solve(b, j);
for(j = 286500; j < 286510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 287340; j < 287350; j++) _solve(b, j);
for(j = 288180; j < 288190; j++) _solve(b, j);
for(j = 289020; j < 289030; j++) _solve(b, j);
for(j = 289860; j < 289870; j++) _solve(b, j);
for(j = 290700; j < 290710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 220990; j < 221000; j++) _solve(b, j);
for(j = 221830; j < 221840; j++) _solve(b, j);
for(j = 222670; j < 222680; j++) _solve(b, j);
for(j = 223510; j < 223520; j++) _solve(b, j);
for(j = 224350; j < 224360; j++) _solve(b, j);
for(j = 225190; j < 225200; j++) _solve(b, j);
for(j = 226030; j < 226040; j++) _solve(b, j);
for(j = 226870; j < 226880; j++) _solve(b, j);
for(j = 227710; j < 227720; j++) _solve(b, j);
for(j = 228550; j < 228560; j++) _solve(b, j);
for(j = 229390; j < 229400; j++) _solve(b, j);
for(j = 230230; j < 230240; j++) _solve(b, j);
for(j = 231070; j < 231080; j++) _solve(b, j);
for(j = 231910; j < 231920; j++) _solve(b, j);
for(j = 232750; j < 232760; j++) _solve(b, j);
for(j = 233590; j < 233600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 234430; j < 234440; j++) _solve(b, j);
for(j = 235270; j < 235280; j++) _solve(b, j);
for(j = 236110; j < 236120; j++) _solve(b, j);
for(j = 236950; j < 236960; j++) _solve(b, j);
for(j = 237790; j < 237800; j++) _solve(b, j);
for(j = 238630; j < 238640; j++) _solve(b, j);
for(j = 239470; j < 239480; j++) _solve(b, j);
for(j = 240310; j < 240320; j++) _solve(b, j);
for(j = 241150; j < 241160; j++) _solve(b, j);
for(j = 241990; j < 242000; j++) _solve(b, j);
for(j = 242830; j < 242840; j++) _solve(b, j);
for(j = 243670; j < 243680; j++) _solve(b, j);
for(j = 244510; j < 244520; j++) _solve(b, j);
for(j = 245350; j < 245360; j++) _solve(b, j);
for(j = 246190; j < 246200; j++) _solve(b, j);
for(j = 247030; j < 247040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 247870; j < 247880; j++) _solve(b, j);
for(j = 248710; j < 248720; j++) _solve(b, j);
for(j = 249550; j < 249560; j++) _solve(b, j);
for(j = 250390; j < 250400; j++) _solve(b, j);
for(j = 251230; j < 251240; j++) _solve(b, j);
for(j = 252070; j < 252080; j++) _solve(b, j);
for(j = 252910; j < 252920; j++) _solve(b, j);
for(j = 253750; j < 253760; j++) _solve(b, j);
for(j = 254590; j < 254600; j++) _solve(b, j);
for(j = 255430; j < 255440; j++) _solve(b, j);
for(j = 256270; j < 256280; j++) _solve(b, j);
for(j = 257110; j < 257120; j++) _solve(b, j);
for(j = 257950; j < 257960; j++) _solve(b, j);
for(j = 258790; j < 258800; j++) _solve(b, j);
for(j = 259630; j < 259640; j++) _solve(b, j);
for(j = 260470; j < 260480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 261310; j < 261320; j++) _solve(b, j);
for(j = 262150; j < 262160; j++) _solve(b, j);
for(j = 262990; j < 263000; j++) _solve(b, j);
for(j = 263830; j < 263840; j++) _solve(b, j);
for(j = 264670; j < 264680; j++) _solve(b, j);
for(j = 265510; j < 265520; j++) _solve(b, j);
for(j = 266350; j < 266360; j++) _solve(b, j);
for(j = 267190; j < 267200; j++) _solve(b, j);
for(j = 268030; j < 268040; j++) _solve(b, j);
for(j = 268870; j < 268880; j++) _solve(b, j);
for(j = 269710; j < 269720; j++) _solve(b, j);
for(j = 270550; j < 270560; j++) _solve(b, j);
for(j = 271390; j < 271400; j++) _solve(b, j);
for(j = 272230; j < 272240; j++) _solve(b, j);
for(j = 273070; j < 273080; j++) _solve(b, j);
for(j = 273910; j < 273920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 274750; j < 274760; j++) _solve(b, j);
for(j = 275590; j < 275600; j++) _solve(b, j);
for(j = 276430; j < 276440; j++) _solve(b, j);
for(j = 277270; j < 277280; j++) _solve(b, j);
for(j = 278110; j < 278120; j++) _solve(b, j);
for(j = 278950; j < 278960; j++) _solve(b, j);
for(j = 279790; j < 279800; j++) _solve(b, j);
for(j = 280630; j < 280640; j++) _solve(b, j);
for(j = 281470; j < 281480; j++) _solve(b, j);
for(j = 282310; j < 282320; j++) _solve(b, j);
for(j = 283150; j < 283160; j++) _solve(b, j);
for(j = 283990; j < 284000; j++) _solve(b, j);
for(j = 284830; j < 284840; j++) _solve(b, j);
for(j = 285670; j < 285680; j++) _solve(b, j);
for(j = 286510; j < 286520; j++) _solve(b, j);
for(j = 287350; j < 287360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 288190; j < 288200; j++) _solve(b, j);
for(j = 289030; j < 289040; j++) _solve(b, j);
for(j = 289870; j < 289880; j++) _solve(b, j);
for(j = 290710; j < 290720; j++) _solve(b, j);
for(j = 291550; j < 291560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 221840; j < 221850; j++) _solve(b, j);
for(j = 222680; j < 222690; j++) _solve(b, j);
for(j = 223520; j < 223530; j++) _solve(b, j);
for(j = 224360; j < 224370; j++) _solve(b, j);
for(j = 225200; j < 225210; j++) _solve(b, j);
for(j = 226040; j < 226050; j++) _solve(b, j);
for(j = 226880; j < 226890; j++) _solve(b, j);
for(j = 227720; j < 227730; j++) _solve(b, j);
for(j = 228560; j < 228570; j++) _solve(b, j);
for(j = 229400; j < 229410; j++) _solve(b, j);
for(j = 230240; j < 230250; j++) _solve(b, j);
for(j = 231080; j < 231090; j++) _solve(b, j);
for(j = 231920; j < 231930; j++) _solve(b, j);
for(j = 232760; j < 232770; j++) _solve(b, j);
for(j = 233600; j < 233610; j++) _solve(b, j);
for(j = 234440; j < 234450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 235280; j < 235290; j++) _solve(b, j);
for(j = 236120; j < 236130; j++) _solve(b, j);
for(j = 236960; j < 236970; j++) _solve(b, j);
for(j = 237800; j < 237810; j++) _solve(b, j);
for(j = 238640; j < 238650; j++) _solve(b, j);
for(j = 239480; j < 239490; j++) _solve(b, j);
for(j = 240320; j < 240330; j++) _solve(b, j);
for(j = 241160; j < 241170; j++) _solve(b, j);
for(j = 242000; j < 242010; j++) _solve(b, j);
for(j = 242840; j < 242850; j++) _solve(b, j);
for(j = 243680; j < 243690; j++) _solve(b, j);
for(j = 244520; j < 244530; j++) _solve(b, j);
for(j = 245360; j < 245370; j++) _solve(b, j);
for(j = 246200; j < 246210; j++) _solve(b, j);
for(j = 247040; j < 247050; j++) _solve(b, j);
for(j = 247880; j < 247890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 248720; j < 248730; j++) _solve(b, j);
for(j = 249560; j < 249570; j++) _solve(b, j);
for(j = 250400; j < 250410; j++) _solve(b, j);
for(j = 251240; j < 251250; j++) _solve(b, j);
for(j = 252080; j < 252090; j++) _solve(b, j);
for(j = 252920; j < 252930; j++) _solve(b, j);
for(j = 253760; j < 253770; j++) _solve(b, j);
for(j = 254600; j < 254610; j++) _solve(b, j);
for(j = 255440; j < 255450; j++) _solve(b, j);
for(j = 256280; j < 256290; j++) _solve(b, j);
for(j = 257120; j < 257130; j++) _solve(b, j);
for(j = 257960; j < 257970; j++) _solve(b, j);
for(j = 258800; j < 258810; j++) _solve(b, j);
for(j = 259640; j < 259650; j++) _solve(b, j);
for(j = 260480; j < 260490; j++) _solve(b, j);
for(j = 261320; j < 261330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 262160; j < 262170; j++) _solve(b, j);
for(j = 263000; j < 263010; j++) _solve(b, j);
for(j = 263840; j < 263850; j++) _solve(b, j);
for(j = 264680; j < 264690; j++) _solve(b, j);
for(j = 265520; j < 265530; j++) _solve(b, j);
for(j = 266360; j < 266370; j++) _solve(b, j);
for(j = 267200; j < 267210; j++) _solve(b, j);
for(j = 268040; j < 268050; j++) _solve(b, j);
for(j = 268880; j < 268890; j++) _solve(b, j);
for(j = 269720; j < 269730; j++) _solve(b, j);
for(j = 270560; j < 270570; j++) _solve(b, j);
for(j = 271400; j < 271410; j++) _solve(b, j);
for(j = 272240; j < 272250; j++) _solve(b, j);
for(j = 273080; j < 273090; j++) _solve(b, j);
for(j = 273920; j < 273930; j++) _solve(b, j);
for(j = 274760; j < 274770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 275600; j < 275610; j++) _solve(b, j);
for(j = 276440; j < 276450; j++) _solve(b, j);
for(j = 277280; j < 277290; j++) _solve(b, j);
for(j = 278120; j < 278130; j++) _solve(b, j);
for(j = 278960; j < 278970; j++) _solve(b, j);
for(j = 279800; j < 279810; j++) _solve(b, j);
for(j = 280640; j < 280650; j++) _solve(b, j);
for(j = 281480; j < 281490; j++) _solve(b, j);
for(j = 282320; j < 282330; j++) _solve(b, j);
for(j = 283160; j < 283170; j++) _solve(b, j);
for(j = 284000; j < 284010; j++) _solve(b, j);
for(j = 284840; j < 284850; j++) _solve(b, j);
for(j = 285680; j < 285690; j++) _solve(b, j);
for(j = 286520; j < 286530; j++) _solve(b, j);
for(j = 287360; j < 287370; j++) _solve(b, j);
for(j = 288200; j < 288210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 289040; j < 289050; j++) _solve(b, j);
for(j = 289880; j < 289890; j++) _solve(b, j);
for(j = 290720; j < 290730; j++) _solve(b, j);
for(j = 291560; j < 291570; j++) _solve(b, j);
for(j = 292400; j < 292410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 222690; j < 222700; j++) _solve(b, j);
for(j = 223530; j < 223540; j++) _solve(b, j);
for(j = 224370; j < 224380; j++) _solve(b, j);
for(j = 225210; j < 225220; j++) _solve(b, j);
for(j = 226050; j < 226060; j++) _solve(b, j);
for(j = 226890; j < 226900; j++) _solve(b, j);
for(j = 227730; j < 227740; j++) _solve(b, j);
for(j = 228570; j < 228580; j++) _solve(b, j);
for(j = 229410; j < 229420; j++) _solve(b, j);
for(j = 230250; j < 230260; j++) _solve(b, j);
for(j = 231090; j < 231100; j++) _solve(b, j);
for(j = 231930; j < 231940; j++) _solve(b, j);
for(j = 232770; j < 232780; j++) _solve(b, j);
for(j = 233610; j < 233620; j++) _solve(b, j);
for(j = 234450; j < 234460; j++) _solve(b, j);
for(j = 235290; j < 235300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 236130; j < 236140; j++) _solve(b, j);
for(j = 236970; j < 236980; j++) _solve(b, j);
for(j = 237810; j < 237820; j++) _solve(b, j);
for(j = 238650; j < 238660; j++) _solve(b, j);
for(j = 239490; j < 239500; j++) _solve(b, j);
for(j = 240330; j < 240340; j++) _solve(b, j);
for(j = 241170; j < 241180; j++) _solve(b, j);
for(j = 242010; j < 242020; j++) _solve(b, j);
for(j = 242850; j < 242860; j++) _solve(b, j);
for(j = 243690; j < 243700; j++) _solve(b, j);
for(j = 244530; j < 244540; j++) _solve(b, j);
for(j = 245370; j < 245380; j++) _solve(b, j);
for(j = 246210; j < 246220; j++) _solve(b, j);
for(j = 247050; j < 247060; j++) _solve(b, j);
for(j = 247890; j < 247900; j++) _solve(b, j);
for(j = 248730; j < 248740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 249570; j < 249580; j++) _solve(b, j);
for(j = 250410; j < 250420; j++) _solve(b, j);
for(j = 251250; j < 251260; j++) _solve(b, j);
for(j = 252090; j < 252100; j++) _solve(b, j);
for(j = 252930; j < 252940; j++) _solve(b, j);
for(j = 253770; j < 253780; j++) _solve(b, j);
for(j = 254610; j < 254620; j++) _solve(b, j);
for(j = 255450; j < 255460; j++) _solve(b, j);
for(j = 256290; j < 256300; j++) _solve(b, j);
for(j = 257130; j < 257140; j++) _solve(b, j);
for(j = 257970; j < 257980; j++) _solve(b, j);
for(j = 258810; j < 258820; j++) _solve(b, j);
for(j = 259650; j < 259660; j++) _solve(b, j);
for(j = 260490; j < 260500; j++) _solve(b, j);
for(j = 261330; j < 261340; j++) _solve(b, j);
for(j = 262170; j < 262180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 263010; j < 263020; j++) _solve(b, j);
for(j = 263850; j < 263860; j++) _solve(b, j);
for(j = 264690; j < 264700; j++) _solve(b, j);
for(j = 265530; j < 265540; j++) _solve(b, j);
for(j = 266370; j < 266380; j++) _solve(b, j);
for(j = 267210; j < 267220; j++) _solve(b, j);
for(j = 268050; j < 268060; j++) _solve(b, j);
for(j = 268890; j < 268900; j++) _solve(b, j);
for(j = 269730; j < 269740; j++) _solve(b, j);
for(j = 270570; j < 270580; j++) _solve(b, j);
for(j = 271410; j < 271420; j++) _solve(b, j);
for(j = 272250; j < 272260; j++) _solve(b, j);
for(j = 273090; j < 273100; j++) _solve(b, j);
for(j = 273930; j < 273940; j++) _solve(b, j);
for(j = 274770; j < 274780; j++) _solve(b, j);
for(j = 275610; j < 275620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 276450; j < 276460; j++) _solve(b, j);
for(j = 277290; j < 277300; j++) _solve(b, j);
for(j = 278130; j < 278140; j++) _solve(b, j);
for(j = 278970; j < 278980; j++) _solve(b, j);
for(j = 279810; j < 279820; j++) _solve(b, j);
for(j = 280650; j < 280660; j++) _solve(b, j);
for(j = 281490; j < 281500; j++) _solve(b, j);
for(j = 282330; j < 282340; j++) _solve(b, j);
for(j = 283170; j < 283180; j++) _solve(b, j);
for(j = 284010; j < 284020; j++) _solve(b, j);
for(j = 284850; j < 284860; j++) _solve(b, j);
for(j = 285690; j < 285700; j++) _solve(b, j);
for(j = 286530; j < 286540; j++) _solve(b, j);
for(j = 287370; j < 287380; j++) _solve(b, j);
for(j = 288210; j < 288220; j++) _solve(b, j);
for(j = 289050; j < 289060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 289890; j < 289900; j++) _solve(b, j);
for(j = 290730; j < 290740; j++) _solve(b, j);
for(j = 291570; j < 291580; j++) _solve(b, j);
for(j = 292410; j < 292420; j++) _solve(b, j);
for(j = 293250; j < 293260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 223540; j < 223550; j++) _solve(b, j);
for(j = 224380; j < 224390; j++) _solve(b, j);
for(j = 225220; j < 225230; j++) _solve(b, j);
for(j = 226060; j < 226070; j++) _solve(b, j);
for(j = 226900; j < 226910; j++) _solve(b, j);
for(j = 227740; j < 227750; j++) _solve(b, j);
for(j = 228580; j < 228590; j++) _solve(b, j);
for(j = 229420; j < 229430; j++) _solve(b, j);
for(j = 230260; j < 230270; j++) _solve(b, j);
for(j = 231100; j < 231110; j++) _solve(b, j);
for(j = 231940; j < 231950; j++) _solve(b, j);
for(j = 232780; j < 232790; j++) _solve(b, j);
for(j = 233620; j < 233630; j++) _solve(b, j);
for(j = 234460; j < 234470; j++) _solve(b, j);
for(j = 235300; j < 235310; j++) _solve(b, j);
for(j = 236140; j < 236150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 236980; j < 236990; j++) _solve(b, j);
for(j = 237820; j < 237830; j++) _solve(b, j);
for(j = 238660; j < 238670; j++) _solve(b, j);
for(j = 239500; j < 239510; j++) _solve(b, j);
for(j = 240340; j < 240350; j++) _solve(b, j);
for(j = 241180; j < 241190; j++) _solve(b, j);
for(j = 242020; j < 242030; j++) _solve(b, j);
for(j = 242860; j < 242870; j++) _solve(b, j);
for(j = 243700; j < 243710; j++) _solve(b, j);
for(j = 244540; j < 244550; j++) _solve(b, j);
for(j = 245380; j < 245390; j++) _solve(b, j);
for(j = 246220; j < 246230; j++) _solve(b, j);
for(j = 247060; j < 247070; j++) _solve(b, j);
for(j = 247900; j < 247910; j++) _solve(b, j);
for(j = 248740; j < 248750; j++) _solve(b, j);
for(j = 249580; j < 249590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 250420; j < 250430; j++) _solve(b, j);
for(j = 251260; j < 251270; j++) _solve(b, j);
for(j = 252100; j < 252110; j++) _solve(b, j);
for(j = 252940; j < 252950; j++) _solve(b, j);
for(j = 253780; j < 253790; j++) _solve(b, j);
for(j = 254620; j < 254630; j++) _solve(b, j);
for(j = 255460; j < 255470; j++) _solve(b, j);
for(j = 256300; j < 256310; j++) _solve(b, j);
for(j = 257140; j < 257150; j++) _solve(b, j);
for(j = 257980; j < 257990; j++) _solve(b, j);
for(j = 258820; j < 258830; j++) _solve(b, j);
for(j = 259660; j < 259670; j++) _solve(b, j);
for(j = 260500; j < 260510; j++) _solve(b, j);
for(j = 261340; j < 261350; j++) _solve(b, j);
for(j = 262180; j < 262190; j++) _solve(b, j);
for(j = 263020; j < 263030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 263860; j < 263870; j++) _solve(b, j);
for(j = 264700; j < 264710; j++) _solve(b, j);
for(j = 265540; j < 265550; j++) _solve(b, j);
for(j = 266380; j < 266390; j++) _solve(b, j);
for(j = 267220; j < 267230; j++) _solve(b, j);
for(j = 268060; j < 268070; j++) _solve(b, j);
for(j = 268900; j < 268910; j++) _solve(b, j);
for(j = 269740; j < 269750; j++) _solve(b, j);
for(j = 270580; j < 270590; j++) _solve(b, j);
for(j = 271420; j < 271430; j++) _solve(b, j);
for(j = 272260; j < 272270; j++) _solve(b, j);
for(j = 273100; j < 273110; j++) _solve(b, j);
for(j = 273940; j < 273950; j++) _solve(b, j);
for(j = 274780; j < 274790; j++) _solve(b, j);
for(j = 275620; j < 275630; j++) _solve(b, j);
for(j = 276460; j < 276470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 277300; j < 277310; j++) _solve(b, j);
for(j = 278140; j < 278150; j++) _solve(b, j);
for(j = 278980; j < 278990; j++) _solve(b, j);
for(j = 279820; j < 279830; j++) _solve(b, j);
for(j = 280660; j < 280670; j++) _solve(b, j);
for(j = 281500; j < 281510; j++) _solve(b, j);
for(j = 282340; j < 282350; j++) _solve(b, j);
for(j = 283180; j < 283190; j++) _solve(b, j);
for(j = 284020; j < 284030; j++) _solve(b, j);
for(j = 284860; j < 284870; j++) _solve(b, j);
for(j = 285700; j < 285710; j++) _solve(b, j);
for(j = 286540; j < 286550; j++) _solve(b, j);
for(j = 287380; j < 287390; j++) _solve(b, j);
for(j = 288220; j < 288230; j++) _solve(b, j);
for(j = 289060; j < 289070; j++) _solve(b, j);
for(j = 289900; j < 289910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 290740; j < 290750; j++) _solve(b, j);
for(j = 291580; j < 291590; j++) _solve(b, j);
for(j = 292420; j < 292430; j++) _solve(b, j);
for(j = 293260; j < 293270; j++) _solve(b, j);
for(j = 294100; j < 294110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 224390; j < 224400; j++) _solve(b, j);
for(j = 225230; j < 225240; j++) _solve(b, j);
for(j = 226070; j < 226080; j++) _solve(b, j);
for(j = 226910; j < 226920; j++) _solve(b, j);
for(j = 227750; j < 227760; j++) _solve(b, j);
for(j = 228590; j < 228600; j++) _solve(b, j);
for(j = 229430; j < 229440; j++) _solve(b, j);
for(j = 230270; j < 230280; j++) _solve(b, j);
for(j = 231110; j < 231120; j++) _solve(b, j);
for(j = 231950; j < 231960; j++) _solve(b, j);
for(j = 232790; j < 232800; j++) _solve(b, j);
for(j = 233630; j < 233640; j++) _solve(b, j);
for(j = 234470; j < 234480; j++) _solve(b, j);
for(j = 235310; j < 235320; j++) _solve(b, j);
for(j = 236150; j < 236160; j++) _solve(b, j);
for(j = 236990; j < 237000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 237830; j < 237840; j++) _solve(b, j);
for(j = 238670; j < 238680; j++) _solve(b, j);
for(j = 239510; j < 239520; j++) _solve(b, j);
for(j = 240350; j < 240360; j++) _solve(b, j);
for(j = 241190; j < 241200; j++) _solve(b, j);
for(j = 242030; j < 242040; j++) _solve(b, j);
for(j = 242870; j < 242880; j++) _solve(b, j);
for(j = 243710; j < 243720; j++) _solve(b, j);
for(j = 244550; j < 244560; j++) _solve(b, j);
for(j = 245390; j < 245400; j++) _solve(b, j);
for(j = 246230; j < 246240; j++) _solve(b, j);
for(j = 247070; j < 247080; j++) _solve(b, j);
for(j = 247910; j < 247920; j++) _solve(b, j);
for(j = 248750; j < 248760; j++) _solve(b, j);
for(j = 249590; j < 249600; j++) _solve(b, j);
for(j = 250430; j < 250440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 251270; j < 251280; j++) _solve(b, j);
for(j = 252110; j < 252120; j++) _solve(b, j);
for(j = 252950; j < 252960; j++) _solve(b, j);
for(j = 253790; j < 253800; j++) _solve(b, j);
for(j = 254630; j < 254640; j++) _solve(b, j);
for(j = 255470; j < 255480; j++) _solve(b, j);
for(j = 256310; j < 256320; j++) _solve(b, j);
for(j = 257150; j < 257160; j++) _solve(b, j);
for(j = 257990; j < 258000; j++) _solve(b, j);
for(j = 258830; j < 258840; j++) _solve(b, j);
for(j = 259670; j < 259680; j++) _solve(b, j);
for(j = 260510; j < 260520; j++) _solve(b, j);
for(j = 261350; j < 261360; j++) _solve(b, j);
for(j = 262190; j < 262200; j++) _solve(b, j);
for(j = 263030; j < 263040; j++) _solve(b, j);
for(j = 263870; j < 263880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 264710; j < 264720; j++) _solve(b, j);
for(j = 265550; j < 265560; j++) _solve(b, j);
for(j = 266390; j < 266400; j++) _solve(b, j);
for(j = 267230; j < 267240; j++) _solve(b, j);
for(j = 268070; j < 268080; j++) _solve(b, j);
for(j = 268910; j < 268920; j++) _solve(b, j);
for(j = 269750; j < 269760; j++) _solve(b, j);
for(j = 270590; j < 270600; j++) _solve(b, j);
for(j = 271430; j < 271440; j++) _solve(b, j);
for(j = 272270; j < 272280; j++) _solve(b, j);
for(j = 273110; j < 273120; j++) _solve(b, j);
for(j = 273950; j < 273960; j++) _solve(b, j);
for(j = 274790; j < 274800; j++) _solve(b, j);
for(j = 275630; j < 275640; j++) _solve(b, j);
for(j = 276470; j < 276480; j++) _solve(b, j);
for(j = 277310; j < 277320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 278150; j < 278160; j++) _solve(b, j);
for(j = 278990; j < 279000; j++) _solve(b, j);
for(j = 279830; j < 279840; j++) _solve(b, j);
for(j = 280670; j < 280680; j++) _solve(b, j);
for(j = 281510; j < 281520; j++) _solve(b, j);
for(j = 282350; j < 282360; j++) _solve(b, j);
for(j = 283190; j < 283200; j++) _solve(b, j);
for(j = 284030; j < 284040; j++) _solve(b, j);
for(j = 284870; j < 284880; j++) _solve(b, j);
for(j = 285710; j < 285720; j++) _solve(b, j);
for(j = 286550; j < 286560; j++) _solve(b, j);
for(j = 287390; j < 287400; j++) _solve(b, j);
for(j = 288230; j < 288240; j++) _solve(b, j);
for(j = 289070; j < 289080; j++) _solve(b, j);
for(j = 289910; j < 289920; j++) _solve(b, j);
for(j = 290750; j < 290760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 291590; j < 291600; j++) _solve(b, j);
for(j = 292430; j < 292440; j++) _solve(b, j);
for(j = 293270; j < 293280; j++) _solve(b, j);
for(j = 294110; j < 294120; j++) _solve(b, j);
for(j = 294950; j < 294960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 225240; j < 225250; j++) _solve(b, j);
for(j = 226080; j < 226090; j++) _solve(b, j);
for(j = 226920; j < 226930; j++) _solve(b, j);
for(j = 227760; j < 227770; j++) _solve(b, j);
for(j = 228600; j < 228610; j++) _solve(b, j);
for(j = 229440; j < 229450; j++) _solve(b, j);
for(j = 230280; j < 230290; j++) _solve(b, j);
for(j = 231120; j < 231130; j++) _solve(b, j);
for(j = 231960; j < 231970; j++) _solve(b, j);
for(j = 232800; j < 232810; j++) _solve(b, j);
for(j = 233640; j < 233650; j++) _solve(b, j);
for(j = 234480; j < 234490; j++) _solve(b, j);
for(j = 235320; j < 235330; j++) _solve(b, j);
for(j = 236160; j < 236170; j++) _solve(b, j);
for(j = 237000; j < 237010; j++) _solve(b, j);
for(j = 237840; j < 237850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 238680; j < 238690; j++) _solve(b, j);
for(j = 239520; j < 239530; j++) _solve(b, j);
for(j = 240360; j < 240370; j++) _solve(b, j);
for(j = 241200; j < 241210; j++) _solve(b, j);
for(j = 242040; j < 242050; j++) _solve(b, j);
for(j = 242880; j < 242890; j++) _solve(b, j);
for(j = 243720; j < 243730; j++) _solve(b, j);
for(j = 244560; j < 244570; j++) _solve(b, j);
for(j = 245400; j < 245410; j++) _solve(b, j);
for(j = 246240; j < 246250; j++) _solve(b, j);
for(j = 247080; j < 247090; j++) _solve(b, j);
for(j = 247920; j < 247930; j++) _solve(b, j);
for(j = 248760; j < 248770; j++) _solve(b, j);
for(j = 249600; j < 249610; j++) _solve(b, j);
for(j = 250440; j < 250450; j++) _solve(b, j);
for(j = 251280; j < 251290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 252120; j < 252130; j++) _solve(b, j);
for(j = 252960; j < 252970; j++) _solve(b, j);
for(j = 253800; j < 253810; j++) _solve(b, j);
for(j = 254640; j < 254650; j++) _solve(b, j);
for(j = 255480; j < 255490; j++) _solve(b, j);
for(j = 256320; j < 256330; j++) _solve(b, j);
for(j = 257160; j < 257170; j++) _solve(b, j);
for(j = 258000; j < 258010; j++) _solve(b, j);
for(j = 258840; j < 258850; j++) _solve(b, j);
for(j = 259680; j < 259690; j++) _solve(b, j);
for(j = 260520; j < 260530; j++) _solve(b, j);
for(j = 261360; j < 261370; j++) _solve(b, j);
for(j = 262200; j < 262210; j++) _solve(b, j);
for(j = 263040; j < 263050; j++) _solve(b, j);
for(j = 263880; j < 263890; j++) _solve(b, j);
for(j = 264720; j < 264730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 265560; j < 265570; j++) _solve(b, j);
for(j = 266400; j < 266410; j++) _solve(b, j);
for(j = 267240; j < 267250; j++) _solve(b, j);
for(j = 268080; j < 268090; j++) _solve(b, j);
for(j = 268920; j < 268930; j++) _solve(b, j);
for(j = 269760; j < 269770; j++) _solve(b, j);
for(j = 270600; j < 270610; j++) _solve(b, j);
for(j = 271440; j < 271450; j++) _solve(b, j);
for(j = 272280; j < 272290; j++) _solve(b, j);
for(j = 273120; j < 273130; j++) _solve(b, j);
for(j = 273960; j < 273970; j++) _solve(b, j);
for(j = 274800; j < 274810; j++) _solve(b, j);
for(j = 275640; j < 275650; j++) _solve(b, j);
for(j = 276480; j < 276490; j++) _solve(b, j);
for(j = 277320; j < 277330; j++) _solve(b, j);
for(j = 278160; j < 278170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 279000; j < 279010; j++) _solve(b, j);
for(j = 279840; j < 279850; j++) _solve(b, j);
for(j = 280680; j < 280690; j++) _solve(b, j);
for(j = 281520; j < 281530; j++) _solve(b, j);
for(j = 282360; j < 282370; j++) _solve(b, j);
for(j = 283200; j < 283210; j++) _solve(b, j);
for(j = 284040; j < 284050; j++) _solve(b, j);
for(j = 284880; j < 284890; j++) _solve(b, j);
for(j = 285720; j < 285730; j++) _solve(b, j);
for(j = 286560; j < 286570; j++) _solve(b, j);
for(j = 287400; j < 287410; j++) _solve(b, j);
for(j = 288240; j < 288250; j++) _solve(b, j);
for(j = 289080; j < 289090; j++) _solve(b, j);
for(j = 289920; j < 289930; j++) _solve(b, j);
for(j = 290760; j < 290770; j++) _solve(b, j);
for(j = 291600; j < 291610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 292440; j < 292450; j++) _solve(b, j);
for(j = 293280; j < 293290; j++) _solve(b, j);
for(j = 294120; j < 294130; j++) _solve(b, j);
for(j = 294960; j < 294970; j++) _solve(b, j);
for(j = 295800; j < 295810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 226090; j < 226100; j++) _solve(b, j);
for(j = 226930; j < 226940; j++) _solve(b, j);
for(j = 227770; j < 227780; j++) _solve(b, j);
for(j = 228610; j < 228620; j++) _solve(b, j);
for(j = 229450; j < 229460; j++) _solve(b, j);
for(j = 230290; j < 230300; j++) _solve(b, j);
for(j = 231130; j < 231140; j++) _solve(b, j);
for(j = 231970; j < 231980; j++) _solve(b, j);
for(j = 232810; j < 232820; j++) _solve(b, j);
for(j = 233650; j < 233660; j++) _solve(b, j);
for(j = 234490; j < 234500; j++) _solve(b, j);
for(j = 235330; j < 235340; j++) _solve(b, j);
for(j = 236170; j < 236180; j++) _solve(b, j);
for(j = 237010; j < 237020; j++) _solve(b, j);
for(j = 237850; j < 237860; j++) _solve(b, j);
for(j = 238690; j < 238700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 239530; j < 239540; j++) _solve(b, j);
for(j = 240370; j < 240380; j++) _solve(b, j);
for(j = 241210; j < 241220; j++) _solve(b, j);
for(j = 242050; j < 242060; j++) _solve(b, j);
for(j = 242890; j < 242900; j++) _solve(b, j);
for(j = 243730; j < 243740; j++) _solve(b, j);
for(j = 244570; j < 244580; j++) _solve(b, j);
for(j = 245410; j < 245420; j++) _solve(b, j);
for(j = 246250; j < 246260; j++) _solve(b, j);
for(j = 247090; j < 247100; j++) _solve(b, j);
for(j = 247930; j < 247940; j++) _solve(b, j);
for(j = 248770; j < 248780; j++) _solve(b, j);
for(j = 249610; j < 249620; j++) _solve(b, j);
for(j = 250450; j < 250460; j++) _solve(b, j);
for(j = 251290; j < 251300; j++) _solve(b, j);
for(j = 252130; j < 252140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 252970; j < 252980; j++) _solve(b, j);
for(j = 253810; j < 253820; j++) _solve(b, j);
for(j = 254650; j < 254660; j++) _solve(b, j);
for(j = 255490; j < 255500; j++) _solve(b, j);
for(j = 256330; j < 256340; j++) _solve(b, j);
for(j = 257170; j < 257180; j++) _solve(b, j);
for(j = 258010; j < 258020; j++) _solve(b, j);
for(j = 258850; j < 258860; j++) _solve(b, j);
for(j = 259690; j < 259700; j++) _solve(b, j);
for(j = 260530; j < 260540; j++) _solve(b, j);
for(j = 261370; j < 261380; j++) _solve(b, j);
for(j = 262210; j < 262220; j++) _solve(b, j);
for(j = 263050; j < 263060; j++) _solve(b, j);
for(j = 263890; j < 263900; j++) _solve(b, j);
for(j = 264730; j < 264740; j++) _solve(b, j);
for(j = 265570; j < 265580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 266410; j < 266420; j++) _solve(b, j);
for(j = 267250; j < 267260; j++) _solve(b, j);
for(j = 268090; j < 268100; j++) _solve(b, j);
for(j = 268930; j < 268940; j++) _solve(b, j);
for(j = 269770; j < 269780; j++) _solve(b, j);
for(j = 270610; j < 270620; j++) _solve(b, j);
for(j = 271450; j < 271460; j++) _solve(b, j);
for(j = 272290; j < 272300; j++) _solve(b, j);
for(j = 273130; j < 273140; j++) _solve(b, j);
for(j = 273970; j < 273980; j++) _solve(b, j);
for(j = 274810; j < 274820; j++) _solve(b, j);
for(j = 275650; j < 275660; j++) _solve(b, j);
for(j = 276490; j < 276500; j++) _solve(b, j);
for(j = 277330; j < 277340; j++) _solve(b, j);
for(j = 278170; j < 278180; j++) _solve(b, j);
for(j = 279010; j < 279020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 279850; j < 279860; j++) _solve(b, j);
for(j = 280690; j < 280700; j++) _solve(b, j);
for(j = 281530; j < 281540; j++) _solve(b, j);
for(j = 282370; j < 282380; j++) _solve(b, j);
for(j = 283210; j < 283220; j++) _solve(b, j);
for(j = 284050; j < 284060; j++) _solve(b, j);
for(j = 284890; j < 284900; j++) _solve(b, j);
for(j = 285730; j < 285740; j++) _solve(b, j);
for(j = 286570; j < 286580; j++) _solve(b, j);
for(j = 287410; j < 287420; j++) _solve(b, j);
for(j = 288250; j < 288260; j++) _solve(b, j);
for(j = 289090; j < 289100; j++) _solve(b, j);
for(j = 289930; j < 289940; j++) _solve(b, j);
for(j = 290770; j < 290780; j++) _solve(b, j);
for(j = 291610; j < 291620; j++) _solve(b, j);
for(j = 292450; j < 292460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 293290; j < 293300; j++) _solve(b, j);
for(j = 294130; j < 294140; j++) _solve(b, j);
for(j = 294970; j < 294980; j++) _solve(b, j);
for(j = 295810; j < 295820; j++) _solve(b, j);
for(j = 296650; j < 296660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 226940; j < 226950; j++) _solve(b, j);
for(j = 227780; j < 227790; j++) _solve(b, j);
for(j = 228620; j < 228630; j++) _solve(b, j);
for(j = 229460; j < 229470; j++) _solve(b, j);
for(j = 230300; j < 230310; j++) _solve(b, j);
for(j = 231140; j < 231150; j++) _solve(b, j);
for(j = 231980; j < 231990; j++) _solve(b, j);
for(j = 232820; j < 232830; j++) _solve(b, j);
for(j = 233660; j < 233670; j++) _solve(b, j);
for(j = 234500; j < 234510; j++) _solve(b, j);
for(j = 235340; j < 235350; j++) _solve(b, j);
for(j = 236180; j < 236190; j++) _solve(b, j);
for(j = 237020; j < 237030; j++) _solve(b, j);
for(j = 237860; j < 237870; j++) _solve(b, j);
for(j = 238700; j < 238710; j++) _solve(b, j);
for(j = 239540; j < 239550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 240380; j < 240390; j++) _solve(b, j);
for(j = 241220; j < 241230; j++) _solve(b, j);
for(j = 242060; j < 242070; j++) _solve(b, j);
for(j = 242900; j < 242910; j++) _solve(b, j);
for(j = 243740; j < 243750; j++) _solve(b, j);
for(j = 244580; j < 244590; j++) _solve(b, j);
for(j = 245420; j < 245430; j++) _solve(b, j);
for(j = 246260; j < 246270; j++) _solve(b, j);
for(j = 247100; j < 247110; j++) _solve(b, j);
for(j = 247940; j < 247950; j++) _solve(b, j);
for(j = 248780; j < 248790; j++) _solve(b, j);
for(j = 249620; j < 249630; j++) _solve(b, j);
for(j = 250460; j < 250470; j++) _solve(b, j);
for(j = 251300; j < 251310; j++) _solve(b, j);
for(j = 252140; j < 252150; j++) _solve(b, j);
for(j = 252980; j < 252990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 253820; j < 253830; j++) _solve(b, j);
for(j = 254660; j < 254670; j++) _solve(b, j);
for(j = 255500; j < 255510; j++) _solve(b, j);
for(j = 256340; j < 256350; j++) _solve(b, j);
for(j = 257180; j < 257190; j++) _solve(b, j);
for(j = 258020; j < 258030; j++) _solve(b, j);
for(j = 258860; j < 258870; j++) _solve(b, j);
for(j = 259700; j < 259710; j++) _solve(b, j);
for(j = 260540; j < 260550; j++) _solve(b, j);
for(j = 261380; j < 261390; j++) _solve(b, j);
for(j = 262220; j < 262230; j++) _solve(b, j);
for(j = 263060; j < 263070; j++) _solve(b, j);
for(j = 263900; j < 263910; j++) _solve(b, j);
for(j = 264740; j < 264750; j++) _solve(b, j);
for(j = 265580; j < 265590; j++) _solve(b, j);
for(j = 266420; j < 266430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 267260; j < 267270; j++) _solve(b, j);
for(j = 268100; j < 268110; j++) _solve(b, j);
for(j = 268940; j < 268950; j++) _solve(b, j);
for(j = 269780; j < 269790; j++) _solve(b, j);
for(j = 270620; j < 270630; j++) _solve(b, j);
for(j = 271460; j < 271470; j++) _solve(b, j);
for(j = 272300; j < 272310; j++) _solve(b, j);
for(j = 273140; j < 273150; j++) _solve(b, j);
for(j = 273980; j < 273990; j++) _solve(b, j);
for(j = 274820; j < 274830; j++) _solve(b, j);
for(j = 275660; j < 275670; j++) _solve(b, j);
for(j = 276500; j < 276510; j++) _solve(b, j);
for(j = 277340; j < 277350; j++) _solve(b, j);
for(j = 278180; j < 278190; j++) _solve(b, j);
for(j = 279020; j < 279030; j++) _solve(b, j);
for(j = 279860; j < 279870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 280700; j < 280710; j++) _solve(b, j);
for(j = 281540; j < 281550; j++) _solve(b, j);
for(j = 282380; j < 282390; j++) _solve(b, j);
for(j = 283220; j < 283230; j++) _solve(b, j);
for(j = 284060; j < 284070; j++) _solve(b, j);
for(j = 284900; j < 284910; j++) _solve(b, j);
for(j = 285740; j < 285750; j++) _solve(b, j);
for(j = 286580; j < 286590; j++) _solve(b, j);
for(j = 287420; j < 287430; j++) _solve(b, j);
for(j = 288260; j < 288270; j++) _solve(b, j);
for(j = 289100; j < 289110; j++) _solve(b, j);
for(j = 289940; j < 289950; j++) _solve(b, j);
for(j = 290780; j < 290790; j++) _solve(b, j);
for(j = 291620; j < 291630; j++) _solve(b, j);
for(j = 292460; j < 292470; j++) _solve(b, j);
for(j = 293300; j < 293310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 294140; j < 294150; j++) _solve(b, j);
for(j = 294980; j < 294990; j++) _solve(b, j);
for(j = 295820; j < 295830; j++) _solve(b, j);
for(j = 296660; j < 296670; j++) _solve(b, j);
for(j = 297500; j < 297510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 227790; j < 227800; j++) _solve(b, j);
for(j = 228630; j < 228640; j++) _solve(b, j);
for(j = 229470; j < 229480; j++) _solve(b, j);
for(j = 230310; j < 230320; j++) _solve(b, j);
for(j = 231150; j < 231160; j++) _solve(b, j);
for(j = 231990; j < 232000; j++) _solve(b, j);
for(j = 232830; j < 232840; j++) _solve(b, j);
for(j = 233670; j < 233680; j++) _solve(b, j);
for(j = 234510; j < 234520; j++) _solve(b, j);
for(j = 235350; j < 235360; j++) _solve(b, j);
for(j = 236190; j < 236200; j++) _solve(b, j);
for(j = 237030; j < 237040; j++) _solve(b, j);
for(j = 237870; j < 237880; j++) _solve(b, j);
for(j = 238710; j < 238720; j++) _solve(b, j);
for(j = 239550; j < 239560; j++) _solve(b, j);
for(j = 240390; j < 240400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 241230; j < 241240; j++) _solve(b, j);
for(j = 242070; j < 242080; j++) _solve(b, j);
for(j = 242910; j < 242920; j++) _solve(b, j);
for(j = 243750; j < 243760; j++) _solve(b, j);
for(j = 244590; j < 244600; j++) _solve(b, j);
for(j = 245430; j < 245440; j++) _solve(b, j);
for(j = 246270; j < 246280; j++) _solve(b, j);
for(j = 247110; j < 247120; j++) _solve(b, j);
for(j = 247950; j < 247960; j++) _solve(b, j);
for(j = 248790; j < 248800; j++) _solve(b, j);
for(j = 249630; j < 249640; j++) _solve(b, j);
for(j = 250470; j < 250480; j++) _solve(b, j);
for(j = 251310; j < 251320; j++) _solve(b, j);
for(j = 252150; j < 252160; j++) _solve(b, j);
for(j = 252990; j < 253000; j++) _solve(b, j);
for(j = 253830; j < 253840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 254670; j < 254680; j++) _solve(b, j);
for(j = 255510; j < 255520; j++) _solve(b, j);
for(j = 256350; j < 256360; j++) _solve(b, j);
for(j = 257190; j < 257200; j++) _solve(b, j);
for(j = 258030; j < 258040; j++) _solve(b, j);
for(j = 258870; j < 258880; j++) _solve(b, j);
for(j = 259710; j < 259720; j++) _solve(b, j);
for(j = 260550; j < 260560; j++) _solve(b, j);
for(j = 261390; j < 261400; j++) _solve(b, j);
for(j = 262230; j < 262240; j++) _solve(b, j);
for(j = 263070; j < 263080; j++) _solve(b, j);
for(j = 263910; j < 263920; j++) _solve(b, j);
for(j = 264750; j < 264760; j++) _solve(b, j);
for(j = 265590; j < 265600; j++) _solve(b, j);
for(j = 266430; j < 266440; j++) _solve(b, j);
for(j = 267270; j < 267280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 268110; j < 268120; j++) _solve(b, j);
for(j = 268950; j < 268960; j++) _solve(b, j);
for(j = 269790; j < 269800; j++) _solve(b, j);
for(j = 270630; j < 270640; j++) _solve(b, j);
for(j = 271470; j < 271480; j++) _solve(b, j);
for(j = 272310; j < 272320; j++) _solve(b, j);
for(j = 273150; j < 273160; j++) _solve(b, j);
for(j = 273990; j < 274000; j++) _solve(b, j);
for(j = 274830; j < 274840; j++) _solve(b, j);
for(j = 275670; j < 275680; j++) _solve(b, j);
for(j = 276510; j < 276520; j++) _solve(b, j);
for(j = 277350; j < 277360; j++) _solve(b, j);
for(j = 278190; j < 278200; j++) _solve(b, j);
for(j = 279030; j < 279040; j++) _solve(b, j);
for(j = 279870; j < 279880; j++) _solve(b, j);
for(j = 280710; j < 280720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 281550; j < 281560; j++) _solve(b, j);
for(j = 282390; j < 282400; j++) _solve(b, j);
for(j = 283230; j < 283240; j++) _solve(b, j);
for(j = 284070; j < 284080; j++) _solve(b, j);
for(j = 284910; j < 284920; j++) _solve(b, j);
for(j = 285750; j < 285760; j++) _solve(b, j);
for(j = 286590; j < 286600; j++) _solve(b, j);
for(j = 287430; j < 287440; j++) _solve(b, j);
for(j = 288270; j < 288280; j++) _solve(b, j);
for(j = 289110; j < 289120; j++) _solve(b, j);
for(j = 289950; j < 289960; j++) _solve(b, j);
for(j = 290790; j < 290800; j++) _solve(b, j);
for(j = 291630; j < 291640; j++) _solve(b, j);
for(j = 292470; j < 292480; j++) _solve(b, j);
for(j = 293310; j < 293320; j++) _solve(b, j);
for(j = 294150; j < 294160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 294990; j < 295000; j++) _solve(b, j);
for(j = 295830; j < 295840; j++) _solve(b, j);
for(j = 296670; j < 296680; j++) _solve(b, j);
for(j = 297510; j < 297520; j++) _solve(b, j);
for(j = 298350; j < 298360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 228640; j < 228650; j++) _solve(b, j);
for(j = 229480; j < 229490; j++) _solve(b, j);
for(j = 230320; j < 230330; j++) _solve(b, j);
for(j = 231160; j < 231170; j++) _solve(b, j);
for(j = 232000; j < 232010; j++) _solve(b, j);
for(j = 232840; j < 232850; j++) _solve(b, j);
for(j = 233680; j < 233690; j++) _solve(b, j);
for(j = 234520; j < 234530; j++) _solve(b, j);
for(j = 235360; j < 235370; j++) _solve(b, j);
for(j = 236200; j < 236210; j++) _solve(b, j);
for(j = 237040; j < 237050; j++) _solve(b, j);
for(j = 237880; j < 237890; j++) _solve(b, j);
for(j = 238720; j < 238730; j++) _solve(b, j);
for(j = 239560; j < 239570; j++) _solve(b, j);
for(j = 240400; j < 240410; j++) _solve(b, j);
for(j = 241240; j < 241250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 242080; j < 242090; j++) _solve(b, j);
for(j = 242920; j < 242930; j++) _solve(b, j);
for(j = 243760; j < 243770; j++) _solve(b, j);
for(j = 244600; j < 244610; j++) _solve(b, j);
for(j = 245440; j < 245450; j++) _solve(b, j);
for(j = 246280; j < 246290; j++) _solve(b, j);
for(j = 247120; j < 247130; j++) _solve(b, j);
for(j = 247960; j < 247970; j++) _solve(b, j);
for(j = 248800; j < 248810; j++) _solve(b, j);
for(j = 249640; j < 249650; j++) _solve(b, j);
for(j = 250480; j < 250490; j++) _solve(b, j);
for(j = 251320; j < 251330; j++) _solve(b, j);
for(j = 252160; j < 252170; j++) _solve(b, j);
for(j = 253000; j < 253010; j++) _solve(b, j);
for(j = 253840; j < 253850; j++) _solve(b, j);
for(j = 254680; j < 254690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 255520; j < 255530; j++) _solve(b, j);
for(j = 256360; j < 256370; j++) _solve(b, j);
for(j = 257200; j < 257210; j++) _solve(b, j);
for(j = 258040; j < 258050; j++) _solve(b, j);
for(j = 258880; j < 258890; j++) _solve(b, j);
for(j = 259720; j < 259730; j++) _solve(b, j);
for(j = 260560; j < 260570; j++) _solve(b, j);
for(j = 261400; j < 261410; j++) _solve(b, j);
for(j = 262240; j < 262250; j++) _solve(b, j);
for(j = 263080; j < 263090; j++) _solve(b, j);
for(j = 263920; j < 263930; j++) _solve(b, j);
for(j = 264760; j < 264770; j++) _solve(b, j);
for(j = 265600; j < 265610; j++) _solve(b, j);
for(j = 266440; j < 266450; j++) _solve(b, j);
for(j = 267280; j < 267290; j++) _solve(b, j);
for(j = 268120; j < 268130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 268960; j < 268970; j++) _solve(b, j);
for(j = 269800; j < 269810; j++) _solve(b, j);
for(j = 270640; j < 270650; j++) _solve(b, j);
for(j = 271480; j < 271490; j++) _solve(b, j);
for(j = 272320; j < 272330; j++) _solve(b, j);
for(j = 273160; j < 273170; j++) _solve(b, j);
for(j = 274000; j < 274010; j++) _solve(b, j);
for(j = 274840; j < 274850; j++) _solve(b, j);
for(j = 275680; j < 275690; j++) _solve(b, j);
for(j = 276520; j < 276530; j++) _solve(b, j);
for(j = 277360; j < 277370; j++) _solve(b, j);
for(j = 278200; j < 278210; j++) _solve(b, j);
for(j = 279040; j < 279050; j++) _solve(b, j);
for(j = 279880; j < 279890; j++) _solve(b, j);
for(j = 280720; j < 280730; j++) _solve(b, j);
for(j = 281560; j < 281570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 282400; j < 282410; j++) _solve(b, j);
for(j = 283240; j < 283250; j++) _solve(b, j);
for(j = 284080; j < 284090; j++) _solve(b, j);
for(j = 284920; j < 284930; j++) _solve(b, j);
for(j = 285760; j < 285770; j++) _solve(b, j);
for(j = 286600; j < 286610; j++) _solve(b, j);
for(j = 287440; j < 287450; j++) _solve(b, j);
for(j = 288280; j < 288290; j++) _solve(b, j);
for(j = 289120; j < 289130; j++) _solve(b, j);
for(j = 289960; j < 289970; j++) _solve(b, j);
for(j = 290800; j < 290810; j++) _solve(b, j);
for(j = 291640; j < 291650; j++) _solve(b, j);
for(j = 292480; j < 292490; j++) _solve(b, j);
for(j = 293320; j < 293330; j++) _solve(b, j);
for(j = 294160; j < 294170; j++) _solve(b, j);
for(j = 295000; j < 295010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 295840; j < 295850; j++) _solve(b, j);
for(j = 296680; j < 296690; j++) _solve(b, j);
for(j = 297520; j < 297530; j++) _solve(b, j);
for(j = 298360; j < 298370; j++) _solve(b, j);
for(j = 299200; j < 299210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 229490; j < 229500; j++) _solve(b, j);
for(j = 230330; j < 230340; j++) _solve(b, j);
for(j = 231170; j < 231180; j++) _solve(b, j);
for(j = 232010; j < 232020; j++) _solve(b, j);
for(j = 232850; j < 232860; j++) _solve(b, j);
for(j = 233690; j < 233700; j++) _solve(b, j);
for(j = 234530; j < 234540; j++) _solve(b, j);
for(j = 235370; j < 235380; j++) _solve(b, j);
for(j = 236210; j < 236220; j++) _solve(b, j);
for(j = 237050; j < 237060; j++) _solve(b, j);
for(j = 237890; j < 237900; j++) _solve(b, j);
for(j = 238730; j < 238740; j++) _solve(b, j);
for(j = 239570; j < 239580; j++) _solve(b, j);
for(j = 240410; j < 240420; j++) _solve(b, j);
for(j = 241250; j < 241260; j++) _solve(b, j);
for(j = 242090; j < 242100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 242930; j < 242940; j++) _solve(b, j);
for(j = 243770; j < 243780; j++) _solve(b, j);
for(j = 244610; j < 244620; j++) _solve(b, j);
for(j = 245450; j < 245460; j++) _solve(b, j);
for(j = 246290; j < 246300; j++) _solve(b, j);
for(j = 247130; j < 247140; j++) _solve(b, j);
for(j = 247970; j < 247980; j++) _solve(b, j);
for(j = 248810; j < 248820; j++) _solve(b, j);
for(j = 249650; j < 249660; j++) _solve(b, j);
for(j = 250490; j < 250500; j++) _solve(b, j);
for(j = 251330; j < 251340; j++) _solve(b, j);
for(j = 252170; j < 252180; j++) _solve(b, j);
for(j = 253010; j < 253020; j++) _solve(b, j);
for(j = 253850; j < 253860; j++) _solve(b, j);
for(j = 254690; j < 254700; j++) _solve(b, j);
for(j = 255530; j < 255540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 256370; j < 256380; j++) _solve(b, j);
for(j = 257210; j < 257220; j++) _solve(b, j);
for(j = 258050; j < 258060; j++) _solve(b, j);
for(j = 258890; j < 258900; j++) _solve(b, j);
for(j = 259730; j < 259740; j++) _solve(b, j);
for(j = 260570; j < 260580; j++) _solve(b, j);
for(j = 261410; j < 261420; j++) _solve(b, j);
for(j = 262250; j < 262260; j++) _solve(b, j);
for(j = 263090; j < 263100; j++) _solve(b, j);
for(j = 263930; j < 263940; j++) _solve(b, j);
for(j = 264770; j < 264780; j++) _solve(b, j);
for(j = 265610; j < 265620; j++) _solve(b, j);
for(j = 266450; j < 266460; j++) _solve(b, j);
for(j = 267290; j < 267300; j++) _solve(b, j);
for(j = 268130; j < 268140; j++) _solve(b, j);
for(j = 268970; j < 268980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 269810; j < 269820; j++) _solve(b, j);
for(j = 270650; j < 270660; j++) _solve(b, j);
for(j = 271490; j < 271500; j++) _solve(b, j);
for(j = 272330; j < 272340; j++) _solve(b, j);
for(j = 273170; j < 273180; j++) _solve(b, j);
for(j = 274010; j < 274020; j++) _solve(b, j);
for(j = 274850; j < 274860; j++) _solve(b, j);
for(j = 275690; j < 275700; j++) _solve(b, j);
for(j = 276530; j < 276540; j++) _solve(b, j);
for(j = 277370; j < 277380; j++) _solve(b, j);
for(j = 278210; j < 278220; j++) _solve(b, j);
for(j = 279050; j < 279060; j++) _solve(b, j);
for(j = 279890; j < 279900; j++) _solve(b, j);
for(j = 280730; j < 280740; j++) _solve(b, j);
for(j = 281570; j < 281580; j++) _solve(b, j);
for(j = 282410; j < 282420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 283250; j < 283260; j++) _solve(b, j);
for(j = 284090; j < 284100; j++) _solve(b, j);
for(j = 284930; j < 284940; j++) _solve(b, j);
for(j = 285770; j < 285780; j++) _solve(b, j);
for(j = 286610; j < 286620; j++) _solve(b, j);
for(j = 287450; j < 287460; j++) _solve(b, j);
for(j = 288290; j < 288300; j++) _solve(b, j);
for(j = 289130; j < 289140; j++) _solve(b, j);
for(j = 289970; j < 289980; j++) _solve(b, j);
for(j = 290810; j < 290820; j++) _solve(b, j);
for(j = 291650; j < 291660; j++) _solve(b, j);
for(j = 292490; j < 292500; j++) _solve(b, j);
for(j = 293330; j < 293340; j++) _solve(b, j);
for(j = 294170; j < 294180; j++) _solve(b, j);
for(j = 295010; j < 295020; j++) _solve(b, j);
for(j = 295850; j < 295860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 296690; j < 296700; j++) _solve(b, j);
for(j = 297530; j < 297540; j++) _solve(b, j);
for(j = 298370; j < 298380; j++) _solve(b, j);
for(j = 299210; j < 299220; j++) _solve(b, j);
for(j = 300050; j < 300060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 230340; j < 230350; j++) _solve(b, j);
for(j = 231180; j < 231190; j++) _solve(b, j);
for(j = 232020; j < 232030; j++) _solve(b, j);
for(j = 232860; j < 232870; j++) _solve(b, j);
for(j = 233700; j < 233710; j++) _solve(b, j);
for(j = 234540; j < 234550; j++) _solve(b, j);
for(j = 235380; j < 235390; j++) _solve(b, j);
for(j = 236220; j < 236230; j++) _solve(b, j);
for(j = 237060; j < 237070; j++) _solve(b, j);
for(j = 237900; j < 237910; j++) _solve(b, j);
for(j = 238740; j < 238750; j++) _solve(b, j);
for(j = 239580; j < 239590; j++) _solve(b, j);
for(j = 240420; j < 240430; j++) _solve(b, j);
for(j = 241260; j < 241270; j++) _solve(b, j);
for(j = 242100; j < 242110; j++) _solve(b, j);
for(j = 242940; j < 242950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 243780; j < 243790; j++) _solve(b, j);
for(j = 244620; j < 244630; j++) _solve(b, j);
for(j = 245460; j < 245470; j++) _solve(b, j);
for(j = 246300; j < 246310; j++) _solve(b, j);
for(j = 247140; j < 247150; j++) _solve(b, j);
for(j = 247980; j < 247990; j++) _solve(b, j);
for(j = 248820; j < 248830; j++) _solve(b, j);
for(j = 249660; j < 249670; j++) _solve(b, j);
for(j = 250500; j < 250510; j++) _solve(b, j);
for(j = 251340; j < 251350; j++) _solve(b, j);
for(j = 252180; j < 252190; j++) _solve(b, j);
for(j = 253020; j < 253030; j++) _solve(b, j);
for(j = 253860; j < 253870; j++) _solve(b, j);
for(j = 254700; j < 254710; j++) _solve(b, j);
for(j = 255540; j < 255550; j++) _solve(b, j);
for(j = 256380; j < 256390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 257220; j < 257230; j++) _solve(b, j);
for(j = 258060; j < 258070; j++) _solve(b, j);
for(j = 258900; j < 258910; j++) _solve(b, j);
for(j = 259740; j < 259750; j++) _solve(b, j);
for(j = 260580; j < 260590; j++) _solve(b, j);
for(j = 261420; j < 261430; j++) _solve(b, j);
for(j = 262260; j < 262270; j++) _solve(b, j);
for(j = 263100; j < 263110; j++) _solve(b, j);
for(j = 263940; j < 263950; j++) _solve(b, j);
for(j = 264780; j < 264790; j++) _solve(b, j);
for(j = 265620; j < 265630; j++) _solve(b, j);
for(j = 266460; j < 266470; j++) _solve(b, j);
for(j = 267300; j < 267310; j++) _solve(b, j);
for(j = 268140; j < 268150; j++) _solve(b, j);
for(j = 268980; j < 268990; j++) _solve(b, j);
for(j = 269820; j < 269830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 270660; j < 270670; j++) _solve(b, j);
for(j = 271500; j < 271510; j++) _solve(b, j);
for(j = 272340; j < 272350; j++) _solve(b, j);
for(j = 273180; j < 273190; j++) _solve(b, j);
for(j = 274020; j < 274030; j++) _solve(b, j);
for(j = 274860; j < 274870; j++) _solve(b, j);
for(j = 275700; j < 275710; j++) _solve(b, j);
for(j = 276540; j < 276550; j++) _solve(b, j);
for(j = 277380; j < 277390; j++) _solve(b, j);
for(j = 278220; j < 278230; j++) _solve(b, j);
for(j = 279060; j < 279070; j++) _solve(b, j);
for(j = 279900; j < 279910; j++) _solve(b, j);
for(j = 280740; j < 280750; j++) _solve(b, j);
for(j = 281580; j < 281590; j++) _solve(b, j);
for(j = 282420; j < 282430; j++) _solve(b, j);
for(j = 283260; j < 283270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 284100; j < 284110; j++) _solve(b, j);
for(j = 284940; j < 284950; j++) _solve(b, j);
for(j = 285780; j < 285790; j++) _solve(b, j);
for(j = 286620; j < 286630; j++) _solve(b, j);
for(j = 287460; j < 287470; j++) _solve(b, j);
for(j = 288300; j < 288310; j++) _solve(b, j);
for(j = 289140; j < 289150; j++) _solve(b, j);
for(j = 289980; j < 289990; j++) _solve(b, j);
for(j = 290820; j < 290830; j++) _solve(b, j);
for(j = 291660; j < 291670; j++) _solve(b, j);
for(j = 292500; j < 292510; j++) _solve(b, j);
for(j = 293340; j < 293350; j++) _solve(b, j);
for(j = 294180; j < 294190; j++) _solve(b, j);
for(j = 295020; j < 295030; j++) _solve(b, j);
for(j = 295860; j < 295870; j++) _solve(b, j);
for(j = 296700; j < 296710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 297540; j < 297550; j++) _solve(b, j);
for(j = 298380; j < 298390; j++) _solve(b, j);
for(j = 299220; j < 299230; j++) _solve(b, j);
for(j = 300060; j < 300070; j++) _solve(b, j);
for(j = 300900; j < 300910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 231190; j < 231200; j++) _solve(b, j);
for(j = 232030; j < 232040; j++) _solve(b, j);
for(j = 232870; j < 232880; j++) _solve(b, j);
for(j = 233710; j < 233720; j++) _solve(b, j);
for(j = 234550; j < 234560; j++) _solve(b, j);
for(j = 235390; j < 235400; j++) _solve(b, j);
for(j = 236230; j < 236240; j++) _solve(b, j);
for(j = 237070; j < 237080; j++) _solve(b, j);
for(j = 237910; j < 237920; j++) _solve(b, j);
for(j = 238750; j < 238760; j++) _solve(b, j);
for(j = 239590; j < 239600; j++) _solve(b, j);
for(j = 240430; j < 240440; j++) _solve(b, j);
for(j = 241270; j < 241280; j++) _solve(b, j);
for(j = 242110; j < 242120; j++) _solve(b, j);
for(j = 242950; j < 242960; j++) _solve(b, j);
for(j = 243790; j < 243800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 244630; j < 244640; j++) _solve(b, j);
for(j = 245470; j < 245480; j++) _solve(b, j);
for(j = 246310; j < 246320; j++) _solve(b, j);
for(j = 247150; j < 247160; j++) _solve(b, j);
for(j = 247990; j < 248000; j++) _solve(b, j);
for(j = 248830; j < 248840; j++) _solve(b, j);
for(j = 249670; j < 249680; j++) _solve(b, j);
for(j = 250510; j < 250520; j++) _solve(b, j);
for(j = 251350; j < 251360; j++) _solve(b, j);
for(j = 252190; j < 252200; j++) _solve(b, j);
for(j = 253030; j < 253040; j++) _solve(b, j);
for(j = 253870; j < 253880; j++) _solve(b, j);
for(j = 254710; j < 254720; j++) _solve(b, j);
for(j = 255550; j < 255560; j++) _solve(b, j);
for(j = 256390; j < 256400; j++) _solve(b, j);
for(j = 257230; j < 257240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 258070; j < 258080; j++) _solve(b, j);
for(j = 258910; j < 258920; j++) _solve(b, j);
for(j = 259750; j < 259760; j++) _solve(b, j);
for(j = 260590; j < 260600; j++) _solve(b, j);
for(j = 261430; j < 261440; j++) _solve(b, j);
for(j = 262270; j < 262280; j++) _solve(b, j);
for(j = 263110; j < 263120; j++) _solve(b, j);
for(j = 263950; j < 263960; j++) _solve(b, j);
for(j = 264790; j < 264800; j++) _solve(b, j);
for(j = 265630; j < 265640; j++) _solve(b, j);
for(j = 266470; j < 266480; j++) _solve(b, j);
for(j = 267310; j < 267320; j++) _solve(b, j);
for(j = 268150; j < 268160; j++) _solve(b, j);
for(j = 268990; j < 269000; j++) _solve(b, j);
for(j = 269830; j < 269840; j++) _solve(b, j);
for(j = 270670; j < 270680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 271510; j < 271520; j++) _solve(b, j);
for(j = 272350; j < 272360; j++) _solve(b, j);
for(j = 273190; j < 273200; j++) _solve(b, j);
for(j = 274030; j < 274040; j++) _solve(b, j);
for(j = 274870; j < 274880; j++) _solve(b, j);
for(j = 275710; j < 275720; j++) _solve(b, j);
for(j = 276550; j < 276560; j++) _solve(b, j);
for(j = 277390; j < 277400; j++) _solve(b, j);
for(j = 278230; j < 278240; j++) _solve(b, j);
for(j = 279070; j < 279080; j++) _solve(b, j);
for(j = 279910; j < 279920; j++) _solve(b, j);
for(j = 280750; j < 280760; j++) _solve(b, j);
for(j = 281590; j < 281600; j++) _solve(b, j);
for(j = 282430; j < 282440; j++) _solve(b, j);
for(j = 283270; j < 283280; j++) _solve(b, j);
for(j = 284110; j < 284120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 284950; j < 284960; j++) _solve(b, j);
for(j = 285790; j < 285800; j++) _solve(b, j);
for(j = 286630; j < 286640; j++) _solve(b, j);
for(j = 287470; j < 287480; j++) _solve(b, j);
for(j = 288310; j < 288320; j++) _solve(b, j);
for(j = 289150; j < 289160; j++) _solve(b, j);
for(j = 289990; j < 290000; j++) _solve(b, j);
for(j = 290830; j < 290840; j++) _solve(b, j);
for(j = 291670; j < 291680; j++) _solve(b, j);
for(j = 292510; j < 292520; j++) _solve(b, j);
for(j = 293350; j < 293360; j++) _solve(b, j);
for(j = 294190; j < 294200; j++) _solve(b, j);
for(j = 295030; j < 295040; j++) _solve(b, j);
for(j = 295870; j < 295880; j++) _solve(b, j);
for(j = 296710; j < 296720; j++) _solve(b, j);
for(j = 297550; j < 297560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 298390; j < 298400; j++) _solve(b, j);
for(j = 299230; j < 299240; j++) _solve(b, j);
for(j = 300070; j < 300080; j++) _solve(b, j);
for(j = 300910; j < 300920; j++) _solve(b, j);
for(j = 301750; j < 301760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 232040; j < 232050; j++) _solve(b, j);
for(j = 232880; j < 232890; j++) _solve(b, j);
for(j = 233720; j < 233730; j++) _solve(b, j);
for(j = 234560; j < 234570; j++) _solve(b, j);
for(j = 235400; j < 235410; j++) _solve(b, j);
for(j = 236240; j < 236250; j++) _solve(b, j);
for(j = 237080; j < 237090; j++) _solve(b, j);
for(j = 237920; j < 237930; j++) _solve(b, j);
for(j = 238760; j < 238770; j++) _solve(b, j);
for(j = 239600; j < 239610; j++) _solve(b, j);
for(j = 240440; j < 240450; j++) _solve(b, j);
for(j = 241280; j < 241290; j++) _solve(b, j);
for(j = 242120; j < 242130; j++) _solve(b, j);
for(j = 242960; j < 242970; j++) _solve(b, j);
for(j = 243800; j < 243810; j++) _solve(b, j);
for(j = 244640; j < 244650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 245480; j < 245490; j++) _solve(b, j);
for(j = 246320; j < 246330; j++) _solve(b, j);
for(j = 247160; j < 247170; j++) _solve(b, j);
for(j = 248000; j < 248010; j++) _solve(b, j);
for(j = 248840; j < 248850; j++) _solve(b, j);
for(j = 249680; j < 249690; j++) _solve(b, j);
for(j = 250520; j < 250530; j++) _solve(b, j);
for(j = 251360; j < 251370; j++) _solve(b, j);
for(j = 252200; j < 252210; j++) _solve(b, j);
for(j = 253040; j < 253050; j++) _solve(b, j);
for(j = 253880; j < 253890; j++) _solve(b, j);
for(j = 254720; j < 254730; j++) _solve(b, j);
for(j = 255560; j < 255570; j++) _solve(b, j);
for(j = 256400; j < 256410; j++) _solve(b, j);
for(j = 257240; j < 257250; j++) _solve(b, j);
for(j = 258080; j < 258090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 258920; j < 258930; j++) _solve(b, j);
for(j = 259760; j < 259770; j++) _solve(b, j);
for(j = 260600; j < 260610; j++) _solve(b, j);
for(j = 261440; j < 261450; j++) _solve(b, j);
for(j = 262280; j < 262290; j++) _solve(b, j);
for(j = 263120; j < 263130; j++) _solve(b, j);
for(j = 263960; j < 263970; j++) _solve(b, j);
for(j = 264800; j < 264810; j++) _solve(b, j);
for(j = 265640; j < 265650; j++) _solve(b, j);
for(j = 266480; j < 266490; j++) _solve(b, j);
for(j = 267320; j < 267330; j++) _solve(b, j);
for(j = 268160; j < 268170; j++) _solve(b, j);
for(j = 269000; j < 269010; j++) _solve(b, j);
for(j = 269840; j < 269850; j++) _solve(b, j);
for(j = 270680; j < 270690; j++) _solve(b, j);
for(j = 271520; j < 271530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 272360; j < 272370; j++) _solve(b, j);
for(j = 273200; j < 273210; j++) _solve(b, j);
for(j = 274040; j < 274050; j++) _solve(b, j);
for(j = 274880; j < 274890; j++) _solve(b, j);
for(j = 275720; j < 275730; j++) _solve(b, j);
for(j = 276560; j < 276570; j++) _solve(b, j);
for(j = 277400; j < 277410; j++) _solve(b, j);
for(j = 278240; j < 278250; j++) _solve(b, j);
for(j = 279080; j < 279090; j++) _solve(b, j);
for(j = 279920; j < 279930; j++) _solve(b, j);
for(j = 280760; j < 280770; j++) _solve(b, j);
for(j = 281600; j < 281610; j++) _solve(b, j);
for(j = 282440; j < 282450; j++) _solve(b, j);
for(j = 283280; j < 283290; j++) _solve(b, j);
for(j = 284120; j < 284130; j++) _solve(b, j);
for(j = 284960; j < 284970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 285800; j < 285810; j++) _solve(b, j);
for(j = 286640; j < 286650; j++) _solve(b, j);
for(j = 287480; j < 287490; j++) _solve(b, j);
for(j = 288320; j < 288330; j++) _solve(b, j);
for(j = 289160; j < 289170; j++) _solve(b, j);
for(j = 290000; j < 290010; j++) _solve(b, j);
for(j = 290840; j < 290850; j++) _solve(b, j);
for(j = 291680; j < 291690; j++) _solve(b, j);
for(j = 292520; j < 292530; j++) _solve(b, j);
for(j = 293360; j < 293370; j++) _solve(b, j);
for(j = 294200; j < 294210; j++) _solve(b, j);
for(j = 295040; j < 295050; j++) _solve(b, j);
for(j = 295880; j < 295890; j++) _solve(b, j);
for(j = 296720; j < 296730; j++) _solve(b, j);
for(j = 297560; j < 297570; j++) _solve(b, j);
for(j = 298400; j < 298410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 299240; j < 299250; j++) _solve(b, j);
for(j = 300080; j < 300090; j++) _solve(b, j);
for(j = 300920; j < 300930; j++) _solve(b, j);
for(j = 301760; j < 301770; j++) _solve(b, j);
for(j = 302600; j < 302610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 232890; j < 232900; j++) _solve(b, j);
for(j = 233730; j < 233740; j++) _solve(b, j);
for(j = 234570; j < 234580; j++) _solve(b, j);
for(j = 235410; j < 235420; j++) _solve(b, j);
for(j = 236250; j < 236260; j++) _solve(b, j);
for(j = 237090; j < 237100; j++) _solve(b, j);
for(j = 237930; j < 237940; j++) _solve(b, j);
for(j = 238770; j < 238780; j++) _solve(b, j);
for(j = 239610; j < 239620; j++) _solve(b, j);
for(j = 240450; j < 240460; j++) _solve(b, j);
for(j = 241290; j < 241300; j++) _solve(b, j);
for(j = 242130; j < 242140; j++) _solve(b, j);
for(j = 242970; j < 242980; j++) _solve(b, j);
for(j = 243810; j < 243820; j++) _solve(b, j);
for(j = 244650; j < 244660; j++) _solve(b, j);
for(j = 245490; j < 245500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 246330; j < 246340; j++) _solve(b, j);
for(j = 247170; j < 247180; j++) _solve(b, j);
for(j = 248010; j < 248020; j++) _solve(b, j);
for(j = 248850; j < 248860; j++) _solve(b, j);
for(j = 249690; j < 249700; j++) _solve(b, j);
for(j = 250530; j < 250540; j++) _solve(b, j);
for(j = 251370; j < 251380; j++) _solve(b, j);
for(j = 252210; j < 252220; j++) _solve(b, j);
for(j = 253050; j < 253060; j++) _solve(b, j);
for(j = 253890; j < 253900; j++) _solve(b, j);
for(j = 254730; j < 254740; j++) _solve(b, j);
for(j = 255570; j < 255580; j++) _solve(b, j);
for(j = 256410; j < 256420; j++) _solve(b, j);
for(j = 257250; j < 257260; j++) _solve(b, j);
for(j = 258090; j < 258100; j++) _solve(b, j);
for(j = 258930; j < 258940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 259770; j < 259780; j++) _solve(b, j);
for(j = 260610; j < 260620; j++) _solve(b, j);
for(j = 261450; j < 261460; j++) _solve(b, j);
for(j = 262290; j < 262300; j++) _solve(b, j);
for(j = 263130; j < 263140; j++) _solve(b, j);
for(j = 263970; j < 263980; j++) _solve(b, j);
for(j = 264810; j < 264820; j++) _solve(b, j);
for(j = 265650; j < 265660; j++) _solve(b, j);
for(j = 266490; j < 266500; j++) _solve(b, j);
for(j = 267330; j < 267340; j++) _solve(b, j);
for(j = 268170; j < 268180; j++) _solve(b, j);
for(j = 269010; j < 269020; j++) _solve(b, j);
for(j = 269850; j < 269860; j++) _solve(b, j);
for(j = 270690; j < 270700; j++) _solve(b, j);
for(j = 271530; j < 271540; j++) _solve(b, j);
for(j = 272370; j < 272380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 273210; j < 273220; j++) _solve(b, j);
for(j = 274050; j < 274060; j++) _solve(b, j);
for(j = 274890; j < 274900; j++) _solve(b, j);
for(j = 275730; j < 275740; j++) _solve(b, j);
for(j = 276570; j < 276580; j++) _solve(b, j);
for(j = 277410; j < 277420; j++) _solve(b, j);
for(j = 278250; j < 278260; j++) _solve(b, j);
for(j = 279090; j < 279100; j++) _solve(b, j);
for(j = 279930; j < 279940; j++) _solve(b, j);
for(j = 280770; j < 280780; j++) _solve(b, j);
for(j = 281610; j < 281620; j++) _solve(b, j);
for(j = 282450; j < 282460; j++) _solve(b, j);
for(j = 283290; j < 283300; j++) _solve(b, j);
for(j = 284130; j < 284140; j++) _solve(b, j);
for(j = 284970; j < 284980; j++) _solve(b, j);
for(j = 285810; j < 285820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 286650; j < 286660; j++) _solve(b, j);
for(j = 287490; j < 287500; j++) _solve(b, j);
for(j = 288330; j < 288340; j++) _solve(b, j);
for(j = 289170; j < 289180; j++) _solve(b, j);
for(j = 290010; j < 290020; j++) _solve(b, j);
for(j = 290850; j < 290860; j++) _solve(b, j);
for(j = 291690; j < 291700; j++) _solve(b, j);
for(j = 292530; j < 292540; j++) _solve(b, j);
for(j = 293370; j < 293380; j++) _solve(b, j);
for(j = 294210; j < 294220; j++) _solve(b, j);
for(j = 295050; j < 295060; j++) _solve(b, j);
for(j = 295890; j < 295900; j++) _solve(b, j);
for(j = 296730; j < 296740; j++) _solve(b, j);
for(j = 297570; j < 297580; j++) _solve(b, j);
for(j = 298410; j < 298420; j++) _solve(b, j);
for(j = 299250; j < 299260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 300090; j < 300100; j++) _solve(b, j);
for(j = 300930; j < 300940; j++) _solve(b, j);
for(j = 301770; j < 301780; j++) _solve(b, j);
for(j = 302610; j < 302620; j++) _solve(b, j);
for(j = 303450; j < 303460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 233740; j < 233750; j++) _solve(b, j);
for(j = 234580; j < 234590; j++) _solve(b, j);
for(j = 235420; j < 235430; j++) _solve(b, j);
for(j = 236260; j < 236270; j++) _solve(b, j);
for(j = 237100; j < 237110; j++) _solve(b, j);
for(j = 237940; j < 237950; j++) _solve(b, j);
for(j = 238780; j < 238790; j++) _solve(b, j);
for(j = 239620; j < 239630; j++) _solve(b, j);
for(j = 240460; j < 240470; j++) _solve(b, j);
for(j = 241300; j < 241310; j++) _solve(b, j);
for(j = 242140; j < 242150; j++) _solve(b, j);
for(j = 242980; j < 242990; j++) _solve(b, j);
for(j = 243820; j < 243830; j++) _solve(b, j);
for(j = 244660; j < 244670; j++) _solve(b, j);
for(j = 245500; j < 245510; j++) _solve(b, j);
for(j = 246340; j < 246350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 247180; j < 247190; j++) _solve(b, j);
for(j = 248020; j < 248030; j++) _solve(b, j);
for(j = 248860; j < 248870; j++) _solve(b, j);
for(j = 249700; j < 249710; j++) _solve(b, j);
for(j = 250540; j < 250550; j++) _solve(b, j);
for(j = 251380; j < 251390; j++) _solve(b, j);
for(j = 252220; j < 252230; j++) _solve(b, j);
for(j = 253060; j < 253070; j++) _solve(b, j);
for(j = 253900; j < 253910; j++) _solve(b, j);
for(j = 254740; j < 254750; j++) _solve(b, j);
for(j = 255580; j < 255590; j++) _solve(b, j);
for(j = 256420; j < 256430; j++) _solve(b, j);
for(j = 257260; j < 257270; j++) _solve(b, j);
for(j = 258100; j < 258110; j++) _solve(b, j);
for(j = 258940; j < 258950; j++) _solve(b, j);
for(j = 259780; j < 259790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 260620; j < 260630; j++) _solve(b, j);
for(j = 261460; j < 261470; j++) _solve(b, j);
for(j = 262300; j < 262310; j++) _solve(b, j);
for(j = 263140; j < 263150; j++) _solve(b, j);
for(j = 263980; j < 263990; j++) _solve(b, j);
for(j = 264820; j < 264830; j++) _solve(b, j);
for(j = 265660; j < 265670; j++) _solve(b, j);
for(j = 266500; j < 266510; j++) _solve(b, j);
for(j = 267340; j < 267350; j++) _solve(b, j);
for(j = 268180; j < 268190; j++) _solve(b, j);
for(j = 269020; j < 269030; j++) _solve(b, j);
for(j = 269860; j < 269870; j++) _solve(b, j);
for(j = 270700; j < 270710; j++) _solve(b, j);
for(j = 271540; j < 271550; j++) _solve(b, j);
for(j = 272380; j < 272390; j++) _solve(b, j);
for(j = 273220; j < 273230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 274060; j < 274070; j++) _solve(b, j);
for(j = 274900; j < 274910; j++) _solve(b, j);
for(j = 275740; j < 275750; j++) _solve(b, j);
for(j = 276580; j < 276590; j++) _solve(b, j);
for(j = 277420; j < 277430; j++) _solve(b, j);
for(j = 278260; j < 278270; j++) _solve(b, j);
for(j = 279100; j < 279110; j++) _solve(b, j);
for(j = 279940; j < 279950; j++) _solve(b, j);
for(j = 280780; j < 280790; j++) _solve(b, j);
for(j = 281620; j < 281630; j++) _solve(b, j);
for(j = 282460; j < 282470; j++) _solve(b, j);
for(j = 283300; j < 283310; j++) _solve(b, j);
for(j = 284140; j < 284150; j++) _solve(b, j);
for(j = 284980; j < 284990; j++) _solve(b, j);
for(j = 285820; j < 285830; j++) _solve(b, j);
for(j = 286660; j < 286670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 287500; j < 287510; j++) _solve(b, j);
for(j = 288340; j < 288350; j++) _solve(b, j);
for(j = 289180; j < 289190; j++) _solve(b, j);
for(j = 290020; j < 290030; j++) _solve(b, j);
for(j = 290860; j < 290870; j++) _solve(b, j);
for(j = 291700; j < 291710; j++) _solve(b, j);
for(j = 292540; j < 292550; j++) _solve(b, j);
for(j = 293380; j < 293390; j++) _solve(b, j);
for(j = 294220; j < 294230; j++) _solve(b, j);
for(j = 295060; j < 295070; j++) _solve(b, j);
for(j = 295900; j < 295910; j++) _solve(b, j);
for(j = 296740; j < 296750; j++) _solve(b, j);
for(j = 297580; j < 297590; j++) _solve(b, j);
for(j = 298420; j < 298430; j++) _solve(b, j);
for(j = 299260; j < 299270; j++) _solve(b, j);
for(j = 300100; j < 300110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 300940; j < 300950; j++) _solve(b, j);
for(j = 301780; j < 301790; j++) _solve(b, j);
for(j = 302620; j < 302630; j++) _solve(b, j);
for(j = 303460; j < 303470; j++) _solve(b, j);
for(j = 304300; j < 304310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 234590; j < 234600; j++) _solve(b, j);
for(j = 235430; j < 235440; j++) _solve(b, j);
for(j = 236270; j < 236280; j++) _solve(b, j);
for(j = 237110; j < 237120; j++) _solve(b, j);
for(j = 237950; j < 237960; j++) _solve(b, j);
for(j = 238790; j < 238800; j++) _solve(b, j);
for(j = 239630; j < 239640; j++) _solve(b, j);
for(j = 240470; j < 240480; j++) _solve(b, j);
for(j = 241310; j < 241320; j++) _solve(b, j);
for(j = 242150; j < 242160; j++) _solve(b, j);
for(j = 242990; j < 243000; j++) _solve(b, j);
for(j = 243830; j < 243840; j++) _solve(b, j);
for(j = 244670; j < 244680; j++) _solve(b, j);
for(j = 245510; j < 245520; j++) _solve(b, j);
for(j = 246350; j < 246360; j++) _solve(b, j);
for(j = 247190; j < 247200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 248030; j < 248040; j++) _solve(b, j);
for(j = 248870; j < 248880; j++) _solve(b, j);
for(j = 249710; j < 249720; j++) _solve(b, j);
for(j = 250550; j < 250560; j++) _solve(b, j);
for(j = 251390; j < 251400; j++) _solve(b, j);
for(j = 252230; j < 252240; j++) _solve(b, j);
for(j = 253070; j < 253080; j++) _solve(b, j);
for(j = 253910; j < 253920; j++) _solve(b, j);
for(j = 254750; j < 254760; j++) _solve(b, j);
for(j = 255590; j < 255600; j++) _solve(b, j);
for(j = 256430; j < 256440; j++) _solve(b, j);
for(j = 257270; j < 257280; j++) _solve(b, j);
for(j = 258110; j < 258120; j++) _solve(b, j);
for(j = 258950; j < 258960; j++) _solve(b, j);
for(j = 259790; j < 259800; j++) _solve(b, j);
for(j = 260630; j < 260640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 261470; j < 261480; j++) _solve(b, j);
for(j = 262310; j < 262320; j++) _solve(b, j);
for(j = 263150; j < 263160; j++) _solve(b, j);
for(j = 263990; j < 264000; j++) _solve(b, j);
for(j = 264830; j < 264840; j++) _solve(b, j);
for(j = 265670; j < 265680; j++) _solve(b, j);
for(j = 266510; j < 266520; j++) _solve(b, j);
for(j = 267350; j < 267360; j++) _solve(b, j);
for(j = 268190; j < 268200; j++) _solve(b, j);
for(j = 269030; j < 269040; j++) _solve(b, j);
for(j = 269870; j < 269880; j++) _solve(b, j);
for(j = 270710; j < 270720; j++) _solve(b, j);
for(j = 271550; j < 271560; j++) _solve(b, j);
for(j = 272390; j < 272400; j++) _solve(b, j);
for(j = 273230; j < 273240; j++) _solve(b, j);
for(j = 274070; j < 274080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 274910; j < 274920; j++) _solve(b, j);
for(j = 275750; j < 275760; j++) _solve(b, j);
for(j = 276590; j < 276600; j++) _solve(b, j);
for(j = 277430; j < 277440; j++) _solve(b, j);
for(j = 278270; j < 278280; j++) _solve(b, j);
for(j = 279110; j < 279120; j++) _solve(b, j);
for(j = 279950; j < 279960; j++) _solve(b, j);
for(j = 280790; j < 280800; j++) _solve(b, j);
for(j = 281630; j < 281640; j++) _solve(b, j);
for(j = 282470; j < 282480; j++) _solve(b, j);
for(j = 283310; j < 283320; j++) _solve(b, j);
for(j = 284150; j < 284160; j++) _solve(b, j);
for(j = 284990; j < 285000; j++) _solve(b, j);
for(j = 285830; j < 285840; j++) _solve(b, j);
for(j = 286670; j < 286680; j++) _solve(b, j);
for(j = 287510; j < 287520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 288350; j < 288360; j++) _solve(b, j);
for(j = 289190; j < 289200; j++) _solve(b, j);
for(j = 290030; j < 290040; j++) _solve(b, j);
for(j = 290870; j < 290880; j++) _solve(b, j);
for(j = 291710; j < 291720; j++) _solve(b, j);
for(j = 292550; j < 292560; j++) _solve(b, j);
for(j = 293390; j < 293400; j++) _solve(b, j);
for(j = 294230; j < 294240; j++) _solve(b, j);
for(j = 295070; j < 295080; j++) _solve(b, j);
for(j = 295910; j < 295920; j++) _solve(b, j);
for(j = 296750; j < 296760; j++) _solve(b, j);
for(j = 297590; j < 297600; j++) _solve(b, j);
for(j = 298430; j < 298440; j++) _solve(b, j);
for(j = 299270; j < 299280; j++) _solve(b, j);
for(j = 300110; j < 300120; j++) _solve(b, j);
for(j = 300950; j < 300960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 301790; j < 301800; j++) _solve(b, j);
for(j = 302630; j < 302640; j++) _solve(b, j);
for(j = 303470; j < 303480; j++) _solve(b, j);
for(j = 304310; j < 304320; j++) _solve(b, j);
for(j = 305150; j < 305160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 235440; j < 235450; j++) _solve(b, j);
for(j = 236280; j < 236290; j++) _solve(b, j);
for(j = 237120; j < 237130; j++) _solve(b, j);
for(j = 237960; j < 237970; j++) _solve(b, j);
for(j = 238800; j < 238810; j++) _solve(b, j);
for(j = 239640; j < 239650; j++) _solve(b, j);
for(j = 240480; j < 240490; j++) _solve(b, j);
for(j = 241320; j < 241330; j++) _solve(b, j);
for(j = 242160; j < 242170; j++) _solve(b, j);
for(j = 243000; j < 243010; j++) _solve(b, j);
for(j = 243840; j < 243850; j++) _solve(b, j);
for(j = 244680; j < 244690; j++) _solve(b, j);
for(j = 245520; j < 245530; j++) _solve(b, j);
for(j = 246360; j < 246370; j++) _solve(b, j);
for(j = 247200; j < 247210; j++) _solve(b, j);
for(j = 248040; j < 248050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 248880; j < 248890; j++) _solve(b, j);
for(j = 249720; j < 249730; j++) _solve(b, j);
for(j = 250560; j < 250570; j++) _solve(b, j);
for(j = 251400; j < 251410; j++) _solve(b, j);
for(j = 252240; j < 252250; j++) _solve(b, j);
for(j = 253080; j < 253090; j++) _solve(b, j);
for(j = 253920; j < 253930; j++) _solve(b, j);
for(j = 254760; j < 254770; j++) _solve(b, j);
for(j = 255600; j < 255610; j++) _solve(b, j);
for(j = 256440; j < 256450; j++) _solve(b, j);
for(j = 257280; j < 257290; j++) _solve(b, j);
for(j = 258120; j < 258130; j++) _solve(b, j);
for(j = 258960; j < 258970; j++) _solve(b, j);
for(j = 259800; j < 259810; j++) _solve(b, j);
for(j = 260640; j < 260650; j++) _solve(b, j);
for(j = 261480; j < 261490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 262320; j < 262330; j++) _solve(b, j);
for(j = 263160; j < 263170; j++) _solve(b, j);
for(j = 264000; j < 264010; j++) _solve(b, j);
for(j = 264840; j < 264850; j++) _solve(b, j);
for(j = 265680; j < 265690; j++) _solve(b, j);
for(j = 266520; j < 266530; j++) _solve(b, j);
for(j = 267360; j < 267370; j++) _solve(b, j);
for(j = 268200; j < 268210; j++) _solve(b, j);
for(j = 269040; j < 269050; j++) _solve(b, j);
for(j = 269880; j < 269890; j++) _solve(b, j);
for(j = 270720; j < 270730; j++) _solve(b, j);
for(j = 271560; j < 271570; j++) _solve(b, j);
for(j = 272400; j < 272410; j++) _solve(b, j);
for(j = 273240; j < 273250; j++) _solve(b, j);
for(j = 274080; j < 274090; j++) _solve(b, j);
for(j = 274920; j < 274930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 275760; j < 275770; j++) _solve(b, j);
for(j = 276600; j < 276610; j++) _solve(b, j);
for(j = 277440; j < 277450; j++) _solve(b, j);
for(j = 278280; j < 278290; j++) _solve(b, j);
for(j = 279120; j < 279130; j++) _solve(b, j);
for(j = 279960; j < 279970; j++) _solve(b, j);
for(j = 280800; j < 280810; j++) _solve(b, j);
for(j = 281640; j < 281650; j++) _solve(b, j);
for(j = 282480; j < 282490; j++) _solve(b, j);
for(j = 283320; j < 283330; j++) _solve(b, j);
for(j = 284160; j < 284170; j++) _solve(b, j);
for(j = 285000; j < 285010; j++) _solve(b, j);
for(j = 285840; j < 285850; j++) _solve(b, j);
for(j = 286680; j < 286690; j++) _solve(b, j);
for(j = 287520; j < 287530; j++) _solve(b, j);
for(j = 288360; j < 288370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 289200; j < 289210; j++) _solve(b, j);
for(j = 290040; j < 290050; j++) _solve(b, j);
for(j = 290880; j < 290890; j++) _solve(b, j);
for(j = 291720; j < 291730; j++) _solve(b, j);
for(j = 292560; j < 292570; j++) _solve(b, j);
for(j = 293400; j < 293410; j++) _solve(b, j);
for(j = 294240; j < 294250; j++) _solve(b, j);
for(j = 295080; j < 295090; j++) _solve(b, j);
for(j = 295920; j < 295930; j++) _solve(b, j);
for(j = 296760; j < 296770; j++) _solve(b, j);
for(j = 297600; j < 297610; j++) _solve(b, j);
for(j = 298440; j < 298450; j++) _solve(b, j);
for(j = 299280; j < 299290; j++) _solve(b, j);
for(j = 300120; j < 300130; j++) _solve(b, j);
for(j = 300960; j < 300970; j++) _solve(b, j);
for(j = 301800; j < 301810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 302640; j < 302650; j++) _solve(b, j);
for(j = 303480; j < 303490; j++) _solve(b, j);
for(j = 304320; j < 304330; j++) _solve(b, j);
for(j = 305160; j < 305170; j++) _solve(b, j);
for(j = 306000; j < 306010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 236290; j < 236300; j++) _solve(b, j);
for(j = 237130; j < 237140; j++) _solve(b, j);
for(j = 237970; j < 237980; j++) _solve(b, j);
for(j = 238810; j < 238820; j++) _solve(b, j);
for(j = 239650; j < 239660; j++) _solve(b, j);
for(j = 240490; j < 240500; j++) _solve(b, j);
for(j = 241330; j < 241340; j++) _solve(b, j);
for(j = 242170; j < 242180; j++) _solve(b, j);
for(j = 243010; j < 243020; j++) _solve(b, j);
for(j = 243850; j < 243860; j++) _solve(b, j);
for(j = 244690; j < 244700; j++) _solve(b, j);
for(j = 245530; j < 245540; j++) _solve(b, j);
for(j = 246370; j < 246380; j++) _solve(b, j);
for(j = 247210; j < 247220; j++) _solve(b, j);
for(j = 248050; j < 248060; j++) _solve(b, j);
for(j = 248890; j < 248900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 249730; j < 249740; j++) _solve(b, j);
for(j = 250570; j < 250580; j++) _solve(b, j);
for(j = 251410; j < 251420; j++) _solve(b, j);
for(j = 252250; j < 252260; j++) _solve(b, j);
for(j = 253090; j < 253100; j++) _solve(b, j);
for(j = 253930; j < 253940; j++) _solve(b, j);
for(j = 254770; j < 254780; j++) _solve(b, j);
for(j = 255610; j < 255620; j++) _solve(b, j);
for(j = 256450; j < 256460; j++) _solve(b, j);
for(j = 257290; j < 257300; j++) _solve(b, j);
for(j = 258130; j < 258140; j++) _solve(b, j);
for(j = 258970; j < 258980; j++) _solve(b, j);
for(j = 259810; j < 259820; j++) _solve(b, j);
for(j = 260650; j < 260660; j++) _solve(b, j);
for(j = 261490; j < 261500; j++) _solve(b, j);
for(j = 262330; j < 262340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 263170; j < 263180; j++) _solve(b, j);
for(j = 264010; j < 264020; j++) _solve(b, j);
for(j = 264850; j < 264860; j++) _solve(b, j);
for(j = 265690; j < 265700; j++) _solve(b, j);
for(j = 266530; j < 266540; j++) _solve(b, j);
for(j = 267370; j < 267380; j++) _solve(b, j);
for(j = 268210; j < 268220; j++) _solve(b, j);
for(j = 269050; j < 269060; j++) _solve(b, j);
for(j = 269890; j < 269900; j++) _solve(b, j);
for(j = 270730; j < 270740; j++) _solve(b, j);
for(j = 271570; j < 271580; j++) _solve(b, j);
for(j = 272410; j < 272420; j++) _solve(b, j);
for(j = 273250; j < 273260; j++) _solve(b, j);
for(j = 274090; j < 274100; j++) _solve(b, j);
for(j = 274930; j < 274940; j++) _solve(b, j);
for(j = 275770; j < 275780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 276610; j < 276620; j++) _solve(b, j);
for(j = 277450; j < 277460; j++) _solve(b, j);
for(j = 278290; j < 278300; j++) _solve(b, j);
for(j = 279130; j < 279140; j++) _solve(b, j);
for(j = 279970; j < 279980; j++) _solve(b, j);
for(j = 280810; j < 280820; j++) _solve(b, j);
for(j = 281650; j < 281660; j++) _solve(b, j);
for(j = 282490; j < 282500; j++) _solve(b, j);
for(j = 283330; j < 283340; j++) _solve(b, j);
for(j = 284170; j < 284180; j++) _solve(b, j);
for(j = 285010; j < 285020; j++) _solve(b, j);
for(j = 285850; j < 285860; j++) _solve(b, j);
for(j = 286690; j < 286700; j++) _solve(b, j);
for(j = 287530; j < 287540; j++) _solve(b, j);
for(j = 288370; j < 288380; j++) _solve(b, j);
for(j = 289210; j < 289220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 290050; j < 290060; j++) _solve(b, j);
for(j = 290890; j < 290900; j++) _solve(b, j);
for(j = 291730; j < 291740; j++) _solve(b, j);
for(j = 292570; j < 292580; j++) _solve(b, j);
for(j = 293410; j < 293420; j++) _solve(b, j);
for(j = 294250; j < 294260; j++) _solve(b, j);
for(j = 295090; j < 295100; j++) _solve(b, j);
for(j = 295930; j < 295940; j++) _solve(b, j);
for(j = 296770; j < 296780; j++) _solve(b, j);
for(j = 297610; j < 297620; j++) _solve(b, j);
for(j = 298450; j < 298460; j++) _solve(b, j);
for(j = 299290; j < 299300; j++) _solve(b, j);
for(j = 300130; j < 300140; j++) _solve(b, j);
for(j = 300970; j < 300980; j++) _solve(b, j);
for(j = 301810; j < 301820; j++) _solve(b, j);
for(j = 302650; j < 302660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 303490; j < 303500; j++) _solve(b, j);
for(j = 304330; j < 304340; j++) _solve(b, j);
for(j = 305170; j < 305180; j++) _solve(b, j);
for(j = 306010; j < 306020; j++) _solve(b, j);
for(j = 306850; j < 306860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 237140; j < 237150; j++) _solve(b, j);
for(j = 237980; j < 237990; j++) _solve(b, j);
for(j = 238820; j < 238830; j++) _solve(b, j);
for(j = 239660; j < 239670; j++) _solve(b, j);
for(j = 240500; j < 240510; j++) _solve(b, j);
for(j = 241340; j < 241350; j++) _solve(b, j);
for(j = 242180; j < 242190; j++) _solve(b, j);
for(j = 243020; j < 243030; j++) _solve(b, j);
for(j = 243860; j < 243870; j++) _solve(b, j);
for(j = 244700; j < 244710; j++) _solve(b, j);
for(j = 245540; j < 245550; j++) _solve(b, j);
for(j = 246380; j < 246390; j++) _solve(b, j);
for(j = 247220; j < 247230; j++) _solve(b, j);
for(j = 248060; j < 248070; j++) _solve(b, j);
for(j = 248900; j < 248910; j++) _solve(b, j);
for(j = 249740; j < 249750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 250580; j < 250590; j++) _solve(b, j);
for(j = 251420; j < 251430; j++) _solve(b, j);
for(j = 252260; j < 252270; j++) _solve(b, j);
for(j = 253100; j < 253110; j++) _solve(b, j);
for(j = 253940; j < 253950; j++) _solve(b, j);
for(j = 254780; j < 254790; j++) _solve(b, j);
for(j = 255620; j < 255630; j++) _solve(b, j);
for(j = 256460; j < 256470; j++) _solve(b, j);
for(j = 257300; j < 257310; j++) _solve(b, j);
for(j = 258140; j < 258150; j++) _solve(b, j);
for(j = 258980; j < 258990; j++) _solve(b, j);
for(j = 259820; j < 259830; j++) _solve(b, j);
for(j = 260660; j < 260670; j++) _solve(b, j);
for(j = 261500; j < 261510; j++) _solve(b, j);
for(j = 262340; j < 262350; j++) _solve(b, j);
for(j = 263180; j < 263190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 264020; j < 264030; j++) _solve(b, j);
for(j = 264860; j < 264870; j++) _solve(b, j);
for(j = 265700; j < 265710; j++) _solve(b, j);
for(j = 266540; j < 266550; j++) _solve(b, j);
for(j = 267380; j < 267390; j++) _solve(b, j);
for(j = 268220; j < 268230; j++) _solve(b, j);
for(j = 269060; j < 269070; j++) _solve(b, j);
for(j = 269900; j < 269910; j++) _solve(b, j);
for(j = 270740; j < 270750; j++) _solve(b, j);
for(j = 271580; j < 271590; j++) _solve(b, j);
for(j = 272420; j < 272430; j++) _solve(b, j);
for(j = 273260; j < 273270; j++) _solve(b, j);
for(j = 274100; j < 274110; j++) _solve(b, j);
for(j = 274940; j < 274950; j++) _solve(b, j);
for(j = 275780; j < 275790; j++) _solve(b, j);
for(j = 276620; j < 276630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 277460; j < 277470; j++) _solve(b, j);
for(j = 278300; j < 278310; j++) _solve(b, j);
for(j = 279140; j < 279150; j++) _solve(b, j);
for(j = 279980; j < 279990; j++) _solve(b, j);
for(j = 280820; j < 280830; j++) _solve(b, j);
for(j = 281660; j < 281670; j++) _solve(b, j);
for(j = 282500; j < 282510; j++) _solve(b, j);
for(j = 283340; j < 283350; j++) _solve(b, j);
for(j = 284180; j < 284190; j++) _solve(b, j);
for(j = 285020; j < 285030; j++) _solve(b, j);
for(j = 285860; j < 285870; j++) _solve(b, j);
for(j = 286700; j < 286710; j++) _solve(b, j);
for(j = 287540; j < 287550; j++) _solve(b, j);
for(j = 288380; j < 288390; j++) _solve(b, j);
for(j = 289220; j < 289230; j++) _solve(b, j);
for(j = 290060; j < 290070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 290900; j < 290910; j++) _solve(b, j);
for(j = 291740; j < 291750; j++) _solve(b, j);
for(j = 292580; j < 292590; j++) _solve(b, j);
for(j = 293420; j < 293430; j++) _solve(b, j);
for(j = 294260; j < 294270; j++) _solve(b, j);
for(j = 295100; j < 295110; j++) _solve(b, j);
for(j = 295940; j < 295950; j++) _solve(b, j);
for(j = 296780; j < 296790; j++) _solve(b, j);
for(j = 297620; j < 297630; j++) _solve(b, j);
for(j = 298460; j < 298470; j++) _solve(b, j);
for(j = 299300; j < 299310; j++) _solve(b, j);
for(j = 300140; j < 300150; j++) _solve(b, j);
for(j = 300980; j < 300990; j++) _solve(b, j);
for(j = 301820; j < 301830; j++) _solve(b, j);
for(j = 302660; j < 302670; j++) _solve(b, j);
for(j = 303500; j < 303510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 304340; j < 304350; j++) _solve(b, j);
for(j = 305180; j < 305190; j++) _solve(b, j);
for(j = 306020; j < 306030; j++) _solve(b, j);
for(j = 306860; j < 306870; j++) _solve(b, j);
for(j = 307700; j < 307710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 237990; j < 238000; j++) _solve(b, j);
for(j = 238830; j < 238840; j++) _solve(b, j);
for(j = 239670; j < 239680; j++) _solve(b, j);
for(j = 240510; j < 240520; j++) _solve(b, j);
for(j = 241350; j < 241360; j++) _solve(b, j);
for(j = 242190; j < 242200; j++) _solve(b, j);
for(j = 243030; j < 243040; j++) _solve(b, j);
for(j = 243870; j < 243880; j++) _solve(b, j);
for(j = 244710; j < 244720; j++) _solve(b, j);
for(j = 245550; j < 245560; j++) _solve(b, j);
for(j = 246390; j < 246400; j++) _solve(b, j);
for(j = 247230; j < 247240; j++) _solve(b, j);
for(j = 248070; j < 248080; j++) _solve(b, j);
for(j = 248910; j < 248920; j++) _solve(b, j);
for(j = 249750; j < 249760; j++) _solve(b, j);
for(j = 250590; j < 250600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 251430; j < 251440; j++) _solve(b, j);
for(j = 252270; j < 252280; j++) _solve(b, j);
for(j = 253110; j < 253120; j++) _solve(b, j);
for(j = 253950; j < 253960; j++) _solve(b, j);
for(j = 254790; j < 254800; j++) _solve(b, j);
for(j = 255630; j < 255640; j++) _solve(b, j);
for(j = 256470; j < 256480; j++) _solve(b, j);
for(j = 257310; j < 257320; j++) _solve(b, j);
for(j = 258150; j < 258160; j++) _solve(b, j);
for(j = 258990; j < 259000; j++) _solve(b, j);
for(j = 259830; j < 259840; j++) _solve(b, j);
for(j = 260670; j < 260680; j++) _solve(b, j);
for(j = 261510; j < 261520; j++) _solve(b, j);
for(j = 262350; j < 262360; j++) _solve(b, j);
for(j = 263190; j < 263200; j++) _solve(b, j);
for(j = 264030; j < 264040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 264870; j < 264880; j++) _solve(b, j);
for(j = 265710; j < 265720; j++) _solve(b, j);
for(j = 266550; j < 266560; j++) _solve(b, j);
for(j = 267390; j < 267400; j++) _solve(b, j);
for(j = 268230; j < 268240; j++) _solve(b, j);
for(j = 269070; j < 269080; j++) _solve(b, j);
for(j = 269910; j < 269920; j++) _solve(b, j);
for(j = 270750; j < 270760; j++) _solve(b, j);
for(j = 271590; j < 271600; j++) _solve(b, j);
for(j = 272430; j < 272440; j++) _solve(b, j);
for(j = 273270; j < 273280; j++) _solve(b, j);
for(j = 274110; j < 274120; j++) _solve(b, j);
for(j = 274950; j < 274960; j++) _solve(b, j);
for(j = 275790; j < 275800; j++) _solve(b, j);
for(j = 276630; j < 276640; j++) _solve(b, j);
for(j = 277470; j < 277480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 278310; j < 278320; j++) _solve(b, j);
for(j = 279150; j < 279160; j++) _solve(b, j);
for(j = 279990; j < 280000; j++) _solve(b, j);
for(j = 280830; j < 280840; j++) _solve(b, j);
for(j = 281670; j < 281680; j++) _solve(b, j);
for(j = 282510; j < 282520; j++) _solve(b, j);
for(j = 283350; j < 283360; j++) _solve(b, j);
for(j = 284190; j < 284200; j++) _solve(b, j);
for(j = 285030; j < 285040; j++) _solve(b, j);
for(j = 285870; j < 285880; j++) _solve(b, j);
for(j = 286710; j < 286720; j++) _solve(b, j);
for(j = 287550; j < 287560; j++) _solve(b, j);
for(j = 288390; j < 288400; j++) _solve(b, j);
for(j = 289230; j < 289240; j++) _solve(b, j);
for(j = 290070; j < 290080; j++) _solve(b, j);
for(j = 290910; j < 290920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 291750; j < 291760; j++) _solve(b, j);
for(j = 292590; j < 292600; j++) _solve(b, j);
for(j = 293430; j < 293440; j++) _solve(b, j);
for(j = 294270; j < 294280; j++) _solve(b, j);
for(j = 295110; j < 295120; j++) _solve(b, j);
for(j = 295950; j < 295960; j++) _solve(b, j);
for(j = 296790; j < 296800; j++) _solve(b, j);
for(j = 297630; j < 297640; j++) _solve(b, j);
for(j = 298470; j < 298480; j++) _solve(b, j);
for(j = 299310; j < 299320; j++) _solve(b, j);
for(j = 300150; j < 300160; j++) _solve(b, j);
for(j = 300990; j < 301000; j++) _solve(b, j);
for(j = 301830; j < 301840; j++) _solve(b, j);
for(j = 302670; j < 302680; j++) _solve(b, j);
for(j = 303510; j < 303520; j++) _solve(b, j);
for(j = 304350; j < 304360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 305190; j < 305200; j++) _solve(b, j);
for(j = 306030; j < 306040; j++) _solve(b, j);
for(j = 306870; j < 306880; j++) _solve(b, j);
for(j = 307710; j < 307720; j++) _solve(b, j);
for(j = 308550; j < 308560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 238840; j < 238850; j++) _solve(b, j);
for(j = 239680; j < 239690; j++) _solve(b, j);
for(j = 240520; j < 240530; j++) _solve(b, j);
for(j = 241360; j < 241370; j++) _solve(b, j);
for(j = 242200; j < 242210; j++) _solve(b, j);
for(j = 243040; j < 243050; j++) _solve(b, j);
for(j = 243880; j < 243890; j++) _solve(b, j);
for(j = 244720; j < 244730; j++) _solve(b, j);
for(j = 245560; j < 245570; j++) _solve(b, j);
for(j = 246400; j < 246410; j++) _solve(b, j);
for(j = 247240; j < 247250; j++) _solve(b, j);
for(j = 248080; j < 248090; j++) _solve(b, j);
for(j = 248920; j < 248930; j++) _solve(b, j);
for(j = 249760; j < 249770; j++) _solve(b, j);
for(j = 250600; j < 250610; j++) _solve(b, j);
for(j = 251440; j < 251450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 252280; j < 252290; j++) _solve(b, j);
for(j = 253120; j < 253130; j++) _solve(b, j);
for(j = 253960; j < 253970; j++) _solve(b, j);
for(j = 254800; j < 254810; j++) _solve(b, j);
for(j = 255640; j < 255650; j++) _solve(b, j);
for(j = 256480; j < 256490; j++) _solve(b, j);
for(j = 257320; j < 257330; j++) _solve(b, j);
for(j = 258160; j < 258170; j++) _solve(b, j);
for(j = 259000; j < 259010; j++) _solve(b, j);
for(j = 259840; j < 259850; j++) _solve(b, j);
for(j = 260680; j < 260690; j++) _solve(b, j);
for(j = 261520; j < 261530; j++) _solve(b, j);
for(j = 262360; j < 262370; j++) _solve(b, j);
for(j = 263200; j < 263210; j++) _solve(b, j);
for(j = 264040; j < 264050; j++) _solve(b, j);
for(j = 264880; j < 264890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 265720; j < 265730; j++) _solve(b, j);
for(j = 266560; j < 266570; j++) _solve(b, j);
for(j = 267400; j < 267410; j++) _solve(b, j);
for(j = 268240; j < 268250; j++) _solve(b, j);
for(j = 269080; j < 269090; j++) _solve(b, j);
for(j = 269920; j < 269930; j++) _solve(b, j);
for(j = 270760; j < 270770; j++) _solve(b, j);
for(j = 271600; j < 271610; j++) _solve(b, j);
for(j = 272440; j < 272450; j++) _solve(b, j);
for(j = 273280; j < 273290; j++) _solve(b, j);
for(j = 274120; j < 274130; j++) _solve(b, j);
for(j = 274960; j < 274970; j++) _solve(b, j);
for(j = 275800; j < 275810; j++) _solve(b, j);
for(j = 276640; j < 276650; j++) _solve(b, j);
for(j = 277480; j < 277490; j++) _solve(b, j);
for(j = 278320; j < 278330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 279160; j < 279170; j++) _solve(b, j);
for(j = 280000; j < 280010; j++) _solve(b, j);
for(j = 280840; j < 280850; j++) _solve(b, j);
for(j = 281680; j < 281690; j++) _solve(b, j);
for(j = 282520; j < 282530; j++) _solve(b, j);
for(j = 283360; j < 283370; j++) _solve(b, j);
for(j = 284200; j < 284210; j++) _solve(b, j);
for(j = 285040; j < 285050; j++) _solve(b, j);
for(j = 285880; j < 285890; j++) _solve(b, j);
for(j = 286720; j < 286730; j++) _solve(b, j);
for(j = 287560; j < 287570; j++) _solve(b, j);
for(j = 288400; j < 288410; j++) _solve(b, j);
for(j = 289240; j < 289250; j++) _solve(b, j);
for(j = 290080; j < 290090; j++) _solve(b, j);
for(j = 290920; j < 290930; j++) _solve(b, j);
for(j = 291760; j < 291770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 292600; j < 292610; j++) _solve(b, j);
for(j = 293440; j < 293450; j++) _solve(b, j);
for(j = 294280; j < 294290; j++) _solve(b, j);
for(j = 295120; j < 295130; j++) _solve(b, j);
for(j = 295960; j < 295970; j++) _solve(b, j);
for(j = 296800; j < 296810; j++) _solve(b, j);
for(j = 297640; j < 297650; j++) _solve(b, j);
for(j = 298480; j < 298490; j++) _solve(b, j);
for(j = 299320; j < 299330; j++) _solve(b, j);
for(j = 300160; j < 300170; j++) _solve(b, j);
for(j = 301000; j < 301010; j++) _solve(b, j);
for(j = 301840; j < 301850; j++) _solve(b, j);
for(j = 302680; j < 302690; j++) _solve(b, j);
for(j = 303520; j < 303530; j++) _solve(b, j);
for(j = 304360; j < 304370; j++) _solve(b, j);
for(j = 305200; j < 305210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 306040; j < 306050; j++) _solve(b, j);
for(j = 306880; j < 306890; j++) _solve(b, j);
for(j = 307720; j < 307730; j++) _solve(b, j);
for(j = 308560; j < 308570; j++) _solve(b, j);
for(j = 309400; j < 309410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 239690; j < 239700; j++) _solve(b, j);
for(j = 240530; j < 240540; j++) _solve(b, j);
for(j = 241370; j < 241380; j++) _solve(b, j);
for(j = 242210; j < 242220; j++) _solve(b, j);
for(j = 243050; j < 243060; j++) _solve(b, j);
for(j = 243890; j < 243900; j++) _solve(b, j);
for(j = 244730; j < 244740; j++) _solve(b, j);
for(j = 245570; j < 245580; j++) _solve(b, j);
for(j = 246410; j < 246420; j++) _solve(b, j);
for(j = 247250; j < 247260; j++) _solve(b, j);
for(j = 248090; j < 248100; j++) _solve(b, j);
for(j = 248930; j < 248940; j++) _solve(b, j);
for(j = 249770; j < 249780; j++) _solve(b, j);
for(j = 250610; j < 250620; j++) _solve(b, j);
for(j = 251450; j < 251460; j++) _solve(b, j);
for(j = 252290; j < 252300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 253130; j < 253140; j++) _solve(b, j);
for(j = 253970; j < 253980; j++) _solve(b, j);
for(j = 254810; j < 254820; j++) _solve(b, j);
for(j = 255650; j < 255660; j++) _solve(b, j);
for(j = 256490; j < 256500; j++) _solve(b, j);
for(j = 257330; j < 257340; j++) _solve(b, j);
for(j = 258170; j < 258180; j++) _solve(b, j);
for(j = 259010; j < 259020; j++) _solve(b, j);
for(j = 259850; j < 259860; j++) _solve(b, j);
for(j = 260690; j < 260700; j++) _solve(b, j);
for(j = 261530; j < 261540; j++) _solve(b, j);
for(j = 262370; j < 262380; j++) _solve(b, j);
for(j = 263210; j < 263220; j++) _solve(b, j);
for(j = 264050; j < 264060; j++) _solve(b, j);
for(j = 264890; j < 264900; j++) _solve(b, j);
for(j = 265730; j < 265740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 266570; j < 266580; j++) _solve(b, j);
for(j = 267410; j < 267420; j++) _solve(b, j);
for(j = 268250; j < 268260; j++) _solve(b, j);
for(j = 269090; j < 269100; j++) _solve(b, j);
for(j = 269930; j < 269940; j++) _solve(b, j);
for(j = 270770; j < 270780; j++) _solve(b, j);
for(j = 271610; j < 271620; j++) _solve(b, j);
for(j = 272450; j < 272460; j++) _solve(b, j);
for(j = 273290; j < 273300; j++) _solve(b, j);
for(j = 274130; j < 274140; j++) _solve(b, j);
for(j = 274970; j < 274980; j++) _solve(b, j);
for(j = 275810; j < 275820; j++) _solve(b, j);
for(j = 276650; j < 276660; j++) _solve(b, j);
for(j = 277490; j < 277500; j++) _solve(b, j);
for(j = 278330; j < 278340; j++) _solve(b, j);
for(j = 279170; j < 279180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 280010; j < 280020; j++) _solve(b, j);
for(j = 280850; j < 280860; j++) _solve(b, j);
for(j = 281690; j < 281700; j++) _solve(b, j);
for(j = 282530; j < 282540; j++) _solve(b, j);
for(j = 283370; j < 283380; j++) _solve(b, j);
for(j = 284210; j < 284220; j++) _solve(b, j);
for(j = 285050; j < 285060; j++) _solve(b, j);
for(j = 285890; j < 285900; j++) _solve(b, j);
for(j = 286730; j < 286740; j++) _solve(b, j);
for(j = 287570; j < 287580; j++) _solve(b, j);
for(j = 288410; j < 288420; j++) _solve(b, j);
for(j = 289250; j < 289260; j++) _solve(b, j);
for(j = 290090; j < 290100; j++) _solve(b, j);
for(j = 290930; j < 290940; j++) _solve(b, j);
for(j = 291770; j < 291780; j++) _solve(b, j);
for(j = 292610; j < 292620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 293450; j < 293460; j++) _solve(b, j);
for(j = 294290; j < 294300; j++) _solve(b, j);
for(j = 295130; j < 295140; j++) _solve(b, j);
for(j = 295970; j < 295980; j++) _solve(b, j);
for(j = 296810; j < 296820; j++) _solve(b, j);
for(j = 297650; j < 297660; j++) _solve(b, j);
for(j = 298490; j < 298500; j++) _solve(b, j);
for(j = 299330; j < 299340; j++) _solve(b, j);
for(j = 300170; j < 300180; j++) _solve(b, j);
for(j = 301010; j < 301020; j++) _solve(b, j);
for(j = 301850; j < 301860; j++) _solve(b, j);
for(j = 302690; j < 302700; j++) _solve(b, j);
for(j = 303530; j < 303540; j++) _solve(b, j);
for(j = 304370; j < 304380; j++) _solve(b, j);
for(j = 305210; j < 305220; j++) _solve(b, j);
for(j = 306050; j < 306060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 306890; j < 306900; j++) _solve(b, j);
for(j = 307730; j < 307740; j++) _solve(b, j);
for(j = 308570; j < 308580; j++) _solve(b, j);
for(j = 309410; j < 309420; j++) _solve(b, j);
for(j = 310250; j < 310260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 240540; j < 240550; j++) _solve(b, j);
for(j = 241380; j < 241390; j++) _solve(b, j);
for(j = 242220; j < 242230; j++) _solve(b, j);
for(j = 243060; j < 243070; j++) _solve(b, j);
for(j = 243900; j < 243910; j++) _solve(b, j);
for(j = 244740; j < 244750; j++) _solve(b, j);
for(j = 245580; j < 245590; j++) _solve(b, j);
for(j = 246420; j < 246430; j++) _solve(b, j);
for(j = 247260; j < 247270; j++) _solve(b, j);
for(j = 248100; j < 248110; j++) _solve(b, j);
for(j = 248940; j < 248950; j++) _solve(b, j);
for(j = 249780; j < 249790; j++) _solve(b, j);
for(j = 250620; j < 250630; j++) _solve(b, j);
for(j = 251460; j < 251470; j++) _solve(b, j);
for(j = 252300; j < 252310; j++) _solve(b, j);
for(j = 253140; j < 253150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 253980; j < 253990; j++) _solve(b, j);
for(j = 254820; j < 254830; j++) _solve(b, j);
for(j = 255660; j < 255670; j++) _solve(b, j);
for(j = 256500; j < 256510; j++) _solve(b, j);
for(j = 257340; j < 257350; j++) _solve(b, j);
for(j = 258180; j < 258190; j++) _solve(b, j);
for(j = 259020; j < 259030; j++) _solve(b, j);
for(j = 259860; j < 259870; j++) _solve(b, j);
for(j = 260700; j < 260710; j++) _solve(b, j);
for(j = 261540; j < 261550; j++) _solve(b, j);
for(j = 262380; j < 262390; j++) _solve(b, j);
for(j = 263220; j < 263230; j++) _solve(b, j);
for(j = 264060; j < 264070; j++) _solve(b, j);
for(j = 264900; j < 264910; j++) _solve(b, j);
for(j = 265740; j < 265750; j++) _solve(b, j);
for(j = 266580; j < 266590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 267420; j < 267430; j++) _solve(b, j);
for(j = 268260; j < 268270; j++) _solve(b, j);
for(j = 269100; j < 269110; j++) _solve(b, j);
for(j = 269940; j < 269950; j++) _solve(b, j);
for(j = 270780; j < 270790; j++) _solve(b, j);
for(j = 271620; j < 271630; j++) _solve(b, j);
for(j = 272460; j < 272470; j++) _solve(b, j);
for(j = 273300; j < 273310; j++) _solve(b, j);
for(j = 274140; j < 274150; j++) _solve(b, j);
for(j = 274980; j < 274990; j++) _solve(b, j);
for(j = 275820; j < 275830; j++) _solve(b, j);
for(j = 276660; j < 276670; j++) _solve(b, j);
for(j = 277500; j < 277510; j++) _solve(b, j);
for(j = 278340; j < 278350; j++) _solve(b, j);
for(j = 279180; j < 279190; j++) _solve(b, j);
for(j = 280020; j < 280030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 280860; j < 280870; j++) _solve(b, j);
for(j = 281700; j < 281710; j++) _solve(b, j);
for(j = 282540; j < 282550; j++) _solve(b, j);
for(j = 283380; j < 283390; j++) _solve(b, j);
for(j = 284220; j < 284230; j++) _solve(b, j);
for(j = 285060; j < 285070; j++) _solve(b, j);
for(j = 285900; j < 285910; j++) _solve(b, j);
for(j = 286740; j < 286750; j++) _solve(b, j);
for(j = 287580; j < 287590; j++) _solve(b, j);
for(j = 288420; j < 288430; j++) _solve(b, j);
for(j = 289260; j < 289270; j++) _solve(b, j);
for(j = 290100; j < 290110; j++) _solve(b, j);
for(j = 290940; j < 290950; j++) _solve(b, j);
for(j = 291780; j < 291790; j++) _solve(b, j);
for(j = 292620; j < 292630; j++) _solve(b, j);
for(j = 293460; j < 293470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 294300; j < 294310; j++) _solve(b, j);
for(j = 295140; j < 295150; j++) _solve(b, j);
for(j = 295980; j < 295990; j++) _solve(b, j);
for(j = 296820; j < 296830; j++) _solve(b, j);
for(j = 297660; j < 297670; j++) _solve(b, j);
for(j = 298500; j < 298510; j++) _solve(b, j);
for(j = 299340; j < 299350; j++) _solve(b, j);
for(j = 300180; j < 300190; j++) _solve(b, j);
for(j = 301020; j < 301030; j++) _solve(b, j);
for(j = 301860; j < 301870; j++) _solve(b, j);
for(j = 302700; j < 302710; j++) _solve(b, j);
for(j = 303540; j < 303550; j++) _solve(b, j);
for(j = 304380; j < 304390; j++) _solve(b, j);
for(j = 305220; j < 305230; j++) _solve(b, j);
for(j = 306060; j < 306070; j++) _solve(b, j);
for(j = 306900; j < 306910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 307740; j < 307750; j++) _solve(b, j);
for(j = 308580; j < 308590; j++) _solve(b, j);
for(j = 309420; j < 309430; j++) _solve(b, j);
for(j = 310260; j < 310270; j++) _solve(b, j);
for(j = 311100; j < 311110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 241390; j < 241400; j++) _solve(b, j);
for(j = 242230; j < 242240; j++) _solve(b, j);
for(j = 243070; j < 243080; j++) _solve(b, j);
for(j = 243910; j < 243920; j++) _solve(b, j);
for(j = 244750; j < 244760; j++) _solve(b, j);
for(j = 245590; j < 245600; j++) _solve(b, j);
for(j = 246430; j < 246440; j++) _solve(b, j);
for(j = 247270; j < 247280; j++) _solve(b, j);
for(j = 248110; j < 248120; j++) _solve(b, j);
for(j = 248950; j < 248960; j++) _solve(b, j);
for(j = 249790; j < 249800; j++) _solve(b, j);
for(j = 250630; j < 250640; j++) _solve(b, j);
for(j = 251470; j < 251480; j++) _solve(b, j);
for(j = 252310; j < 252320; j++) _solve(b, j);
for(j = 253150; j < 253160; j++) _solve(b, j);
for(j = 253990; j < 254000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 254830; j < 254840; j++) _solve(b, j);
for(j = 255670; j < 255680; j++) _solve(b, j);
for(j = 256510; j < 256520; j++) _solve(b, j);
for(j = 257350; j < 257360; j++) _solve(b, j);
for(j = 258190; j < 258200; j++) _solve(b, j);
for(j = 259030; j < 259040; j++) _solve(b, j);
for(j = 259870; j < 259880; j++) _solve(b, j);
for(j = 260710; j < 260720; j++) _solve(b, j);
for(j = 261550; j < 261560; j++) _solve(b, j);
for(j = 262390; j < 262400; j++) _solve(b, j);
for(j = 263230; j < 263240; j++) _solve(b, j);
for(j = 264070; j < 264080; j++) _solve(b, j);
for(j = 264910; j < 264920; j++) _solve(b, j);
for(j = 265750; j < 265760; j++) _solve(b, j);
for(j = 266590; j < 266600; j++) _solve(b, j);
for(j = 267430; j < 267440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 268270; j < 268280; j++) _solve(b, j);
for(j = 269110; j < 269120; j++) _solve(b, j);
for(j = 269950; j < 269960; j++) _solve(b, j);
for(j = 270790; j < 270800; j++) _solve(b, j);
for(j = 271630; j < 271640; j++) _solve(b, j);
for(j = 272470; j < 272480; j++) _solve(b, j);
for(j = 273310; j < 273320; j++) _solve(b, j);
for(j = 274150; j < 274160; j++) _solve(b, j);
for(j = 274990; j < 275000; j++) _solve(b, j);
for(j = 275830; j < 275840; j++) _solve(b, j);
for(j = 276670; j < 276680; j++) _solve(b, j);
for(j = 277510; j < 277520; j++) _solve(b, j);
for(j = 278350; j < 278360; j++) _solve(b, j);
for(j = 279190; j < 279200; j++) _solve(b, j);
for(j = 280030; j < 280040; j++) _solve(b, j);
for(j = 280870; j < 280880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 281710; j < 281720; j++) _solve(b, j);
for(j = 282550; j < 282560; j++) _solve(b, j);
for(j = 283390; j < 283400; j++) _solve(b, j);
for(j = 284230; j < 284240; j++) _solve(b, j);
for(j = 285070; j < 285080; j++) _solve(b, j);
for(j = 285910; j < 285920; j++) _solve(b, j);
for(j = 286750; j < 286760; j++) _solve(b, j);
for(j = 287590; j < 287600; j++) _solve(b, j);
for(j = 288430; j < 288440; j++) _solve(b, j);
for(j = 289270; j < 289280; j++) _solve(b, j);
for(j = 290110; j < 290120; j++) _solve(b, j);
for(j = 290950; j < 290960; j++) _solve(b, j);
for(j = 291790; j < 291800; j++) _solve(b, j);
for(j = 292630; j < 292640; j++) _solve(b, j);
for(j = 293470; j < 293480; j++) _solve(b, j);
for(j = 294310; j < 294320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 295150; j < 295160; j++) _solve(b, j);
for(j = 295990; j < 296000; j++) _solve(b, j);
for(j = 296830; j < 296840; j++) _solve(b, j);
for(j = 297670; j < 297680; j++) _solve(b, j);
for(j = 298510; j < 298520; j++) _solve(b, j);
for(j = 299350; j < 299360; j++) _solve(b, j);
for(j = 300190; j < 300200; j++) _solve(b, j);
for(j = 301030; j < 301040; j++) _solve(b, j);
for(j = 301870; j < 301880; j++) _solve(b, j);
for(j = 302710; j < 302720; j++) _solve(b, j);
for(j = 303550; j < 303560; j++) _solve(b, j);
for(j = 304390; j < 304400; j++) _solve(b, j);
for(j = 305230; j < 305240; j++) _solve(b, j);
for(j = 306070; j < 306080; j++) _solve(b, j);
for(j = 306910; j < 306920; j++) _solve(b, j);
for(j = 307750; j < 307760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 308590; j < 308600; j++) _solve(b, j);
for(j = 309430; j < 309440; j++) _solve(b, j);
for(j = 310270; j < 310280; j++) _solve(b, j);
for(j = 311110; j < 311120; j++) _solve(b, j);
for(j = 311950; j < 311960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 242240; j < 242250; j++) _solve(b, j);
for(j = 243080; j < 243090; j++) _solve(b, j);
for(j = 243920; j < 243930; j++) _solve(b, j);
for(j = 244760; j < 244770; j++) _solve(b, j);
for(j = 245600; j < 245610; j++) _solve(b, j);
for(j = 246440; j < 246450; j++) _solve(b, j);
for(j = 247280; j < 247290; j++) _solve(b, j);
for(j = 248120; j < 248130; j++) _solve(b, j);
for(j = 248960; j < 248970; j++) _solve(b, j);
for(j = 249800; j < 249810; j++) _solve(b, j);
for(j = 250640; j < 250650; j++) _solve(b, j);
for(j = 251480; j < 251490; j++) _solve(b, j);
for(j = 252320; j < 252330; j++) _solve(b, j);
for(j = 253160; j < 253170; j++) _solve(b, j);
for(j = 254000; j < 254010; j++) _solve(b, j);
for(j = 254840; j < 254850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 255680; j < 255690; j++) _solve(b, j);
for(j = 256520; j < 256530; j++) _solve(b, j);
for(j = 257360; j < 257370; j++) _solve(b, j);
for(j = 258200; j < 258210; j++) _solve(b, j);
for(j = 259040; j < 259050; j++) _solve(b, j);
for(j = 259880; j < 259890; j++) _solve(b, j);
for(j = 260720; j < 260730; j++) _solve(b, j);
for(j = 261560; j < 261570; j++) _solve(b, j);
for(j = 262400; j < 262410; j++) _solve(b, j);
for(j = 263240; j < 263250; j++) _solve(b, j);
for(j = 264080; j < 264090; j++) _solve(b, j);
for(j = 264920; j < 264930; j++) _solve(b, j);
for(j = 265760; j < 265770; j++) _solve(b, j);
for(j = 266600; j < 266610; j++) _solve(b, j);
for(j = 267440; j < 267450; j++) _solve(b, j);
for(j = 268280; j < 268290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 269120; j < 269130; j++) _solve(b, j);
for(j = 269960; j < 269970; j++) _solve(b, j);
for(j = 270800; j < 270810; j++) _solve(b, j);
for(j = 271640; j < 271650; j++) _solve(b, j);
for(j = 272480; j < 272490; j++) _solve(b, j);
for(j = 273320; j < 273330; j++) _solve(b, j);
for(j = 274160; j < 274170; j++) _solve(b, j);
for(j = 275000; j < 275010; j++) _solve(b, j);
for(j = 275840; j < 275850; j++) _solve(b, j);
for(j = 276680; j < 276690; j++) _solve(b, j);
for(j = 277520; j < 277530; j++) _solve(b, j);
for(j = 278360; j < 278370; j++) _solve(b, j);
for(j = 279200; j < 279210; j++) _solve(b, j);
for(j = 280040; j < 280050; j++) _solve(b, j);
for(j = 280880; j < 280890; j++) _solve(b, j);
for(j = 281720; j < 281730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 282560; j < 282570; j++) _solve(b, j);
for(j = 283400; j < 283410; j++) _solve(b, j);
for(j = 284240; j < 284250; j++) _solve(b, j);
for(j = 285080; j < 285090; j++) _solve(b, j);
for(j = 285920; j < 285930; j++) _solve(b, j);
for(j = 286760; j < 286770; j++) _solve(b, j);
for(j = 287600; j < 287610; j++) _solve(b, j);
for(j = 288440; j < 288450; j++) _solve(b, j);
for(j = 289280; j < 289290; j++) _solve(b, j);
for(j = 290120; j < 290130; j++) _solve(b, j);
for(j = 290960; j < 290970; j++) _solve(b, j);
for(j = 291800; j < 291810; j++) _solve(b, j);
for(j = 292640; j < 292650; j++) _solve(b, j);
for(j = 293480; j < 293490; j++) _solve(b, j);
for(j = 294320; j < 294330; j++) _solve(b, j);
for(j = 295160; j < 295170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 296000; j < 296010; j++) _solve(b, j);
for(j = 296840; j < 296850; j++) _solve(b, j);
for(j = 297680; j < 297690; j++) _solve(b, j);
for(j = 298520; j < 298530; j++) _solve(b, j);
for(j = 299360; j < 299370; j++) _solve(b, j);
for(j = 300200; j < 300210; j++) _solve(b, j);
for(j = 301040; j < 301050; j++) _solve(b, j);
for(j = 301880; j < 301890; j++) _solve(b, j);
for(j = 302720; j < 302730; j++) _solve(b, j);
for(j = 303560; j < 303570; j++) _solve(b, j);
for(j = 304400; j < 304410; j++) _solve(b, j);
for(j = 305240; j < 305250; j++) _solve(b, j);
for(j = 306080; j < 306090; j++) _solve(b, j);
for(j = 306920; j < 306930; j++) _solve(b, j);
for(j = 307760; j < 307770; j++) _solve(b, j);
for(j = 308600; j < 308610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 309440; j < 309450; j++) _solve(b, j);
for(j = 310280; j < 310290; j++) _solve(b, j);
for(j = 311120; j < 311130; j++) _solve(b, j);
for(j = 311960; j < 311970; j++) _solve(b, j);
for(j = 312800; j < 312810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 243090; j < 243100; j++) _solve(b, j);
for(j = 243930; j < 243940; j++) _solve(b, j);
for(j = 244770; j < 244780; j++) _solve(b, j);
for(j = 245610; j < 245620; j++) _solve(b, j);
for(j = 246450; j < 246460; j++) _solve(b, j);
for(j = 247290; j < 247300; j++) _solve(b, j);
for(j = 248130; j < 248140; j++) _solve(b, j);
for(j = 248970; j < 248980; j++) _solve(b, j);
for(j = 249810; j < 249820; j++) _solve(b, j);
for(j = 250650; j < 250660; j++) _solve(b, j);
for(j = 251490; j < 251500; j++) _solve(b, j);
for(j = 252330; j < 252340; j++) _solve(b, j);
for(j = 253170; j < 253180; j++) _solve(b, j);
for(j = 254010; j < 254020; j++) _solve(b, j);
for(j = 254850; j < 254860; j++) _solve(b, j);
for(j = 255690; j < 255700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 256530; j < 256540; j++) _solve(b, j);
for(j = 257370; j < 257380; j++) _solve(b, j);
for(j = 258210; j < 258220; j++) _solve(b, j);
for(j = 259050; j < 259060; j++) _solve(b, j);
for(j = 259890; j < 259900; j++) _solve(b, j);
for(j = 260730; j < 260740; j++) _solve(b, j);
for(j = 261570; j < 261580; j++) _solve(b, j);
for(j = 262410; j < 262420; j++) _solve(b, j);
for(j = 263250; j < 263260; j++) _solve(b, j);
for(j = 264090; j < 264100; j++) _solve(b, j);
for(j = 264930; j < 264940; j++) _solve(b, j);
for(j = 265770; j < 265780; j++) _solve(b, j);
for(j = 266610; j < 266620; j++) _solve(b, j);
for(j = 267450; j < 267460; j++) _solve(b, j);
for(j = 268290; j < 268300; j++) _solve(b, j);
for(j = 269130; j < 269140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 269970; j < 269980; j++) _solve(b, j);
for(j = 270810; j < 270820; j++) _solve(b, j);
for(j = 271650; j < 271660; j++) _solve(b, j);
for(j = 272490; j < 272500; j++) _solve(b, j);
for(j = 273330; j < 273340; j++) _solve(b, j);
for(j = 274170; j < 274180; j++) _solve(b, j);
for(j = 275010; j < 275020; j++) _solve(b, j);
for(j = 275850; j < 275860; j++) _solve(b, j);
for(j = 276690; j < 276700; j++) _solve(b, j);
for(j = 277530; j < 277540; j++) _solve(b, j);
for(j = 278370; j < 278380; j++) _solve(b, j);
for(j = 279210; j < 279220; j++) _solve(b, j);
for(j = 280050; j < 280060; j++) _solve(b, j);
for(j = 280890; j < 280900; j++) _solve(b, j);
for(j = 281730; j < 281740; j++) _solve(b, j);
for(j = 282570; j < 282580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 283410; j < 283420; j++) _solve(b, j);
for(j = 284250; j < 284260; j++) _solve(b, j);
for(j = 285090; j < 285100; j++) _solve(b, j);
for(j = 285930; j < 285940; j++) _solve(b, j);
for(j = 286770; j < 286780; j++) _solve(b, j);
for(j = 287610; j < 287620; j++) _solve(b, j);
for(j = 288450; j < 288460; j++) _solve(b, j);
for(j = 289290; j < 289300; j++) _solve(b, j);
for(j = 290130; j < 290140; j++) _solve(b, j);
for(j = 290970; j < 290980; j++) _solve(b, j);
for(j = 291810; j < 291820; j++) _solve(b, j);
for(j = 292650; j < 292660; j++) _solve(b, j);
for(j = 293490; j < 293500; j++) _solve(b, j);
for(j = 294330; j < 294340; j++) _solve(b, j);
for(j = 295170; j < 295180; j++) _solve(b, j);
for(j = 296010; j < 296020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 296850; j < 296860; j++) _solve(b, j);
for(j = 297690; j < 297700; j++) _solve(b, j);
for(j = 298530; j < 298540; j++) _solve(b, j);
for(j = 299370; j < 299380; j++) _solve(b, j);
for(j = 300210; j < 300220; j++) _solve(b, j);
for(j = 301050; j < 301060; j++) _solve(b, j);
for(j = 301890; j < 301900; j++) _solve(b, j);
for(j = 302730; j < 302740; j++) _solve(b, j);
for(j = 303570; j < 303580; j++) _solve(b, j);
for(j = 304410; j < 304420; j++) _solve(b, j);
for(j = 305250; j < 305260; j++) _solve(b, j);
for(j = 306090; j < 306100; j++) _solve(b, j);
for(j = 306930; j < 306940; j++) _solve(b, j);
for(j = 307770; j < 307780; j++) _solve(b, j);
for(j = 308610; j < 308620; j++) _solve(b, j);
for(j = 309450; j < 309460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 310290; j < 310300; j++) _solve(b, j);
for(j = 311130; j < 311140; j++) _solve(b, j);
for(j = 311970; j < 311980; j++) _solve(b, j);
for(j = 312810; j < 312820; j++) _solve(b, j);
for(j = 313650; j < 313660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 243940; j < 243950; j++) _solve(b, j);
for(j = 244780; j < 244790; j++) _solve(b, j);
for(j = 245620; j < 245630; j++) _solve(b, j);
for(j = 246460; j < 246470; j++) _solve(b, j);
for(j = 247300; j < 247310; j++) _solve(b, j);
for(j = 248140; j < 248150; j++) _solve(b, j);
for(j = 248980; j < 248990; j++) _solve(b, j);
for(j = 249820; j < 249830; j++) _solve(b, j);
for(j = 250660; j < 250670; j++) _solve(b, j);
for(j = 251500; j < 251510; j++) _solve(b, j);
for(j = 252340; j < 252350; j++) _solve(b, j);
for(j = 253180; j < 253190; j++) _solve(b, j);
for(j = 254020; j < 254030; j++) _solve(b, j);
for(j = 254860; j < 254870; j++) _solve(b, j);
for(j = 255700; j < 255710; j++) _solve(b, j);
for(j = 256540; j < 256550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 257380; j < 257390; j++) _solve(b, j);
for(j = 258220; j < 258230; j++) _solve(b, j);
for(j = 259060; j < 259070; j++) _solve(b, j);
for(j = 259900; j < 259910; j++) _solve(b, j);
for(j = 260740; j < 260750; j++) _solve(b, j);
for(j = 261580; j < 261590; j++) _solve(b, j);
for(j = 262420; j < 262430; j++) _solve(b, j);
for(j = 263260; j < 263270; j++) _solve(b, j);
for(j = 264100; j < 264110; j++) _solve(b, j);
for(j = 264940; j < 264950; j++) _solve(b, j);
for(j = 265780; j < 265790; j++) _solve(b, j);
for(j = 266620; j < 266630; j++) _solve(b, j);
for(j = 267460; j < 267470; j++) _solve(b, j);
for(j = 268300; j < 268310; j++) _solve(b, j);
for(j = 269140; j < 269150; j++) _solve(b, j);
for(j = 269980; j < 269990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 270820; j < 270830; j++) _solve(b, j);
for(j = 271660; j < 271670; j++) _solve(b, j);
for(j = 272500; j < 272510; j++) _solve(b, j);
for(j = 273340; j < 273350; j++) _solve(b, j);
for(j = 274180; j < 274190; j++) _solve(b, j);
for(j = 275020; j < 275030; j++) _solve(b, j);
for(j = 275860; j < 275870; j++) _solve(b, j);
for(j = 276700; j < 276710; j++) _solve(b, j);
for(j = 277540; j < 277550; j++) _solve(b, j);
for(j = 278380; j < 278390; j++) _solve(b, j);
for(j = 279220; j < 279230; j++) _solve(b, j);
for(j = 280060; j < 280070; j++) _solve(b, j);
for(j = 280900; j < 280910; j++) _solve(b, j);
for(j = 281740; j < 281750; j++) _solve(b, j);
for(j = 282580; j < 282590; j++) _solve(b, j);
for(j = 283420; j < 283430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 284260; j < 284270; j++) _solve(b, j);
for(j = 285100; j < 285110; j++) _solve(b, j);
for(j = 285940; j < 285950; j++) _solve(b, j);
for(j = 286780; j < 286790; j++) _solve(b, j);
for(j = 287620; j < 287630; j++) _solve(b, j);
for(j = 288460; j < 288470; j++) _solve(b, j);
for(j = 289300; j < 289310; j++) _solve(b, j);
for(j = 290140; j < 290150; j++) _solve(b, j);
for(j = 290980; j < 290990; j++) _solve(b, j);
for(j = 291820; j < 291830; j++) _solve(b, j);
for(j = 292660; j < 292670; j++) _solve(b, j);
for(j = 293500; j < 293510; j++) _solve(b, j);
for(j = 294340; j < 294350; j++) _solve(b, j);
for(j = 295180; j < 295190; j++) _solve(b, j);
for(j = 296020; j < 296030; j++) _solve(b, j);
for(j = 296860; j < 296870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 297700; j < 297710; j++) _solve(b, j);
for(j = 298540; j < 298550; j++) _solve(b, j);
for(j = 299380; j < 299390; j++) _solve(b, j);
for(j = 300220; j < 300230; j++) _solve(b, j);
for(j = 301060; j < 301070; j++) _solve(b, j);
for(j = 301900; j < 301910; j++) _solve(b, j);
for(j = 302740; j < 302750; j++) _solve(b, j);
for(j = 303580; j < 303590; j++) _solve(b, j);
for(j = 304420; j < 304430; j++) _solve(b, j);
for(j = 305260; j < 305270; j++) _solve(b, j);
for(j = 306100; j < 306110; j++) _solve(b, j);
for(j = 306940; j < 306950; j++) _solve(b, j);
for(j = 307780; j < 307790; j++) _solve(b, j);
for(j = 308620; j < 308630; j++) _solve(b, j);
for(j = 309460; j < 309470; j++) _solve(b, j);
for(j = 310300; j < 310310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 311140; j < 311150; j++) _solve(b, j);
for(j = 311980; j < 311990; j++) _solve(b, j);
for(j = 312820; j < 312830; j++) _solve(b, j);
for(j = 313660; j < 313670; j++) _solve(b, j);
for(j = 314500; j < 314510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 244790; j < 244800; j++) _solve(b, j);
for(j = 245630; j < 245640; j++) _solve(b, j);
for(j = 246470; j < 246480; j++) _solve(b, j);
for(j = 247310; j < 247320; j++) _solve(b, j);
for(j = 248150; j < 248160; j++) _solve(b, j);
for(j = 248990; j < 249000; j++) _solve(b, j);
for(j = 249830; j < 249840; j++) _solve(b, j);
for(j = 250670; j < 250680; j++) _solve(b, j);
for(j = 251510; j < 251520; j++) _solve(b, j);
for(j = 252350; j < 252360; j++) _solve(b, j);
for(j = 253190; j < 253200; j++) _solve(b, j);
for(j = 254030; j < 254040; j++) _solve(b, j);
for(j = 254870; j < 254880; j++) _solve(b, j);
for(j = 255710; j < 255720; j++) _solve(b, j);
for(j = 256550; j < 256560; j++) _solve(b, j);
for(j = 257390; j < 257400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 258230; j < 258240; j++) _solve(b, j);
for(j = 259070; j < 259080; j++) _solve(b, j);
for(j = 259910; j < 259920; j++) _solve(b, j);
for(j = 260750; j < 260760; j++) _solve(b, j);
for(j = 261590; j < 261600; j++) _solve(b, j);
for(j = 262430; j < 262440; j++) _solve(b, j);
for(j = 263270; j < 263280; j++) _solve(b, j);
for(j = 264110; j < 264120; j++) _solve(b, j);
for(j = 264950; j < 264960; j++) _solve(b, j);
for(j = 265790; j < 265800; j++) _solve(b, j);
for(j = 266630; j < 266640; j++) _solve(b, j);
for(j = 267470; j < 267480; j++) _solve(b, j);
for(j = 268310; j < 268320; j++) _solve(b, j);
for(j = 269150; j < 269160; j++) _solve(b, j);
for(j = 269990; j < 270000; j++) _solve(b, j);
for(j = 270830; j < 270840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 271670; j < 271680; j++) _solve(b, j);
for(j = 272510; j < 272520; j++) _solve(b, j);
for(j = 273350; j < 273360; j++) _solve(b, j);
for(j = 274190; j < 274200; j++) _solve(b, j);
for(j = 275030; j < 275040; j++) _solve(b, j);
for(j = 275870; j < 275880; j++) _solve(b, j);
for(j = 276710; j < 276720; j++) _solve(b, j);
for(j = 277550; j < 277560; j++) _solve(b, j);
for(j = 278390; j < 278400; j++) _solve(b, j);
for(j = 279230; j < 279240; j++) _solve(b, j);
for(j = 280070; j < 280080; j++) _solve(b, j);
for(j = 280910; j < 280920; j++) _solve(b, j);
for(j = 281750; j < 281760; j++) _solve(b, j);
for(j = 282590; j < 282600; j++) _solve(b, j);
for(j = 283430; j < 283440; j++) _solve(b, j);
for(j = 284270; j < 284280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 285110; j < 285120; j++) _solve(b, j);
for(j = 285950; j < 285960; j++) _solve(b, j);
for(j = 286790; j < 286800; j++) _solve(b, j);
for(j = 287630; j < 287640; j++) _solve(b, j);
for(j = 288470; j < 288480; j++) _solve(b, j);
for(j = 289310; j < 289320; j++) _solve(b, j);
for(j = 290150; j < 290160; j++) _solve(b, j);
for(j = 290990; j < 291000; j++) _solve(b, j);
for(j = 291830; j < 291840; j++) _solve(b, j);
for(j = 292670; j < 292680; j++) _solve(b, j);
for(j = 293510; j < 293520; j++) _solve(b, j);
for(j = 294350; j < 294360; j++) _solve(b, j);
for(j = 295190; j < 295200; j++) _solve(b, j);
for(j = 296030; j < 296040; j++) _solve(b, j);
for(j = 296870; j < 296880; j++) _solve(b, j);
for(j = 297710; j < 297720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 298550; j < 298560; j++) _solve(b, j);
for(j = 299390; j < 299400; j++) _solve(b, j);
for(j = 300230; j < 300240; j++) _solve(b, j);
for(j = 301070; j < 301080; j++) _solve(b, j);
for(j = 301910; j < 301920; j++) _solve(b, j);
for(j = 302750; j < 302760; j++) _solve(b, j);
for(j = 303590; j < 303600; j++) _solve(b, j);
for(j = 304430; j < 304440; j++) _solve(b, j);
for(j = 305270; j < 305280; j++) _solve(b, j);
for(j = 306110; j < 306120; j++) _solve(b, j);
for(j = 306950; j < 306960; j++) _solve(b, j);
for(j = 307790; j < 307800; j++) _solve(b, j);
for(j = 308630; j < 308640; j++) _solve(b, j);
for(j = 309470; j < 309480; j++) _solve(b, j);
for(j = 310310; j < 310320; j++) _solve(b, j);
for(j = 311150; j < 311160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 311990; j < 312000; j++) _solve(b, j);
for(j = 312830; j < 312840; j++) _solve(b, j);
for(j = 313670; j < 313680; j++) _solve(b, j);
for(j = 314510; j < 314520; j++) _solve(b, j);
for(j = 315350; j < 315360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 245640; j < 245650; j++) _solve(b, j);
for(j = 246480; j < 246490; j++) _solve(b, j);
for(j = 247320; j < 247330; j++) _solve(b, j);
for(j = 248160; j < 248170; j++) _solve(b, j);
for(j = 249000; j < 249010; j++) _solve(b, j);
for(j = 249840; j < 249850; j++) _solve(b, j);
for(j = 250680; j < 250690; j++) _solve(b, j);
for(j = 251520; j < 251530; j++) _solve(b, j);
for(j = 252360; j < 252370; j++) _solve(b, j);
for(j = 253200; j < 253210; j++) _solve(b, j);
for(j = 254040; j < 254050; j++) _solve(b, j);
for(j = 254880; j < 254890; j++) _solve(b, j);
for(j = 255720; j < 255730; j++) _solve(b, j);
for(j = 256560; j < 256570; j++) _solve(b, j);
for(j = 257400; j < 257410; j++) _solve(b, j);
for(j = 258240; j < 258250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 259080; j < 259090; j++) _solve(b, j);
for(j = 259920; j < 259930; j++) _solve(b, j);
for(j = 260760; j < 260770; j++) _solve(b, j);
for(j = 261600; j < 261610; j++) _solve(b, j);
for(j = 262440; j < 262450; j++) _solve(b, j);
for(j = 263280; j < 263290; j++) _solve(b, j);
for(j = 264120; j < 264130; j++) _solve(b, j);
for(j = 264960; j < 264970; j++) _solve(b, j);
for(j = 265800; j < 265810; j++) _solve(b, j);
for(j = 266640; j < 266650; j++) _solve(b, j);
for(j = 267480; j < 267490; j++) _solve(b, j);
for(j = 268320; j < 268330; j++) _solve(b, j);
for(j = 269160; j < 269170; j++) _solve(b, j);
for(j = 270000; j < 270010; j++) _solve(b, j);
for(j = 270840; j < 270850; j++) _solve(b, j);
for(j = 271680; j < 271690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 272520; j < 272530; j++) _solve(b, j);
for(j = 273360; j < 273370; j++) _solve(b, j);
for(j = 274200; j < 274210; j++) _solve(b, j);
for(j = 275040; j < 275050; j++) _solve(b, j);
for(j = 275880; j < 275890; j++) _solve(b, j);
for(j = 276720; j < 276730; j++) _solve(b, j);
for(j = 277560; j < 277570; j++) _solve(b, j);
for(j = 278400; j < 278410; j++) _solve(b, j);
for(j = 279240; j < 279250; j++) _solve(b, j);
for(j = 280080; j < 280090; j++) _solve(b, j);
for(j = 280920; j < 280930; j++) _solve(b, j);
for(j = 281760; j < 281770; j++) _solve(b, j);
for(j = 282600; j < 282610; j++) _solve(b, j);
for(j = 283440; j < 283450; j++) _solve(b, j);
for(j = 284280; j < 284290; j++) _solve(b, j);
for(j = 285120; j < 285130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 285960; j < 285970; j++) _solve(b, j);
for(j = 286800; j < 286810; j++) _solve(b, j);
for(j = 287640; j < 287650; j++) _solve(b, j);
for(j = 288480; j < 288490; j++) _solve(b, j);
for(j = 289320; j < 289330; j++) _solve(b, j);
for(j = 290160; j < 290170; j++) _solve(b, j);
for(j = 291000; j < 291010; j++) _solve(b, j);
for(j = 291840; j < 291850; j++) _solve(b, j);
for(j = 292680; j < 292690; j++) _solve(b, j);
for(j = 293520; j < 293530; j++) _solve(b, j);
for(j = 294360; j < 294370; j++) _solve(b, j);
for(j = 295200; j < 295210; j++) _solve(b, j);
for(j = 296040; j < 296050; j++) _solve(b, j);
for(j = 296880; j < 296890; j++) _solve(b, j);
for(j = 297720; j < 297730; j++) _solve(b, j);
for(j = 298560; j < 298570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 299400; j < 299410; j++) _solve(b, j);
for(j = 300240; j < 300250; j++) _solve(b, j);
for(j = 301080; j < 301090; j++) _solve(b, j);
for(j = 301920; j < 301930; j++) _solve(b, j);
for(j = 302760; j < 302770; j++) _solve(b, j);
for(j = 303600; j < 303610; j++) _solve(b, j);
for(j = 304440; j < 304450; j++) _solve(b, j);
for(j = 305280; j < 305290; j++) _solve(b, j);
for(j = 306120; j < 306130; j++) _solve(b, j);
for(j = 306960; j < 306970; j++) _solve(b, j);
for(j = 307800; j < 307810; j++) _solve(b, j);
for(j = 308640; j < 308650; j++) _solve(b, j);
for(j = 309480; j < 309490; j++) _solve(b, j);
for(j = 310320; j < 310330; j++) _solve(b, j);
for(j = 311160; j < 311170; j++) _solve(b, j);
for(j = 312000; j < 312010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 312840; j < 312850; j++) _solve(b, j);
for(j = 313680; j < 313690; j++) _solve(b, j);
for(j = 314520; j < 314530; j++) _solve(b, j);
for(j = 315360; j < 315370; j++) _solve(b, j);
for(j = 316200; j < 316210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 246490; j < 246500; j++) _solve(b, j);
for(j = 247330; j < 247340; j++) _solve(b, j);
for(j = 248170; j < 248180; j++) _solve(b, j);
for(j = 249010; j < 249020; j++) _solve(b, j);
for(j = 249850; j < 249860; j++) _solve(b, j);
for(j = 250690; j < 250700; j++) _solve(b, j);
for(j = 251530; j < 251540; j++) _solve(b, j);
for(j = 252370; j < 252380; j++) _solve(b, j);
for(j = 253210; j < 253220; j++) _solve(b, j);
for(j = 254050; j < 254060; j++) _solve(b, j);
for(j = 254890; j < 254900; j++) _solve(b, j);
for(j = 255730; j < 255740; j++) _solve(b, j);
for(j = 256570; j < 256580; j++) _solve(b, j);
for(j = 257410; j < 257420; j++) _solve(b, j);
for(j = 258250; j < 258260; j++) _solve(b, j);
for(j = 259090; j < 259100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 259930; j < 259940; j++) _solve(b, j);
for(j = 260770; j < 260780; j++) _solve(b, j);
for(j = 261610; j < 261620; j++) _solve(b, j);
for(j = 262450; j < 262460; j++) _solve(b, j);
for(j = 263290; j < 263300; j++) _solve(b, j);
for(j = 264130; j < 264140; j++) _solve(b, j);
for(j = 264970; j < 264980; j++) _solve(b, j);
for(j = 265810; j < 265820; j++) _solve(b, j);
for(j = 266650; j < 266660; j++) _solve(b, j);
for(j = 267490; j < 267500; j++) _solve(b, j);
for(j = 268330; j < 268340; j++) _solve(b, j);
for(j = 269170; j < 269180; j++) _solve(b, j);
for(j = 270010; j < 270020; j++) _solve(b, j);
for(j = 270850; j < 270860; j++) _solve(b, j);
for(j = 271690; j < 271700; j++) _solve(b, j);
for(j = 272530; j < 272540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 273370; j < 273380; j++) _solve(b, j);
for(j = 274210; j < 274220; j++) _solve(b, j);
for(j = 275050; j < 275060; j++) _solve(b, j);
for(j = 275890; j < 275900; j++) _solve(b, j);
for(j = 276730; j < 276740; j++) _solve(b, j);
for(j = 277570; j < 277580; j++) _solve(b, j);
for(j = 278410; j < 278420; j++) _solve(b, j);
for(j = 279250; j < 279260; j++) _solve(b, j);
for(j = 280090; j < 280100; j++) _solve(b, j);
for(j = 280930; j < 280940; j++) _solve(b, j);
for(j = 281770; j < 281780; j++) _solve(b, j);
for(j = 282610; j < 282620; j++) _solve(b, j);
for(j = 283450; j < 283460; j++) _solve(b, j);
for(j = 284290; j < 284300; j++) _solve(b, j);
for(j = 285130; j < 285140; j++) _solve(b, j);
for(j = 285970; j < 285980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 286810; j < 286820; j++) _solve(b, j);
for(j = 287650; j < 287660; j++) _solve(b, j);
for(j = 288490; j < 288500; j++) _solve(b, j);
for(j = 289330; j < 289340; j++) _solve(b, j);
for(j = 290170; j < 290180; j++) _solve(b, j);
for(j = 291010; j < 291020; j++) _solve(b, j);
for(j = 291850; j < 291860; j++) _solve(b, j);
for(j = 292690; j < 292700; j++) _solve(b, j);
for(j = 293530; j < 293540; j++) _solve(b, j);
for(j = 294370; j < 294380; j++) _solve(b, j);
for(j = 295210; j < 295220; j++) _solve(b, j);
for(j = 296050; j < 296060; j++) _solve(b, j);
for(j = 296890; j < 296900; j++) _solve(b, j);
for(j = 297730; j < 297740; j++) _solve(b, j);
for(j = 298570; j < 298580; j++) _solve(b, j);
for(j = 299410; j < 299420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 300250; j < 300260; j++) _solve(b, j);
for(j = 301090; j < 301100; j++) _solve(b, j);
for(j = 301930; j < 301940; j++) _solve(b, j);
for(j = 302770; j < 302780; j++) _solve(b, j);
for(j = 303610; j < 303620; j++) _solve(b, j);
for(j = 304450; j < 304460; j++) _solve(b, j);
for(j = 305290; j < 305300; j++) _solve(b, j);
for(j = 306130; j < 306140; j++) _solve(b, j);
for(j = 306970; j < 306980; j++) _solve(b, j);
for(j = 307810; j < 307820; j++) _solve(b, j);
for(j = 308650; j < 308660; j++) _solve(b, j);
for(j = 309490; j < 309500; j++) _solve(b, j);
for(j = 310330; j < 310340; j++) _solve(b, j);
for(j = 311170; j < 311180; j++) _solve(b, j);
for(j = 312010; j < 312020; j++) _solve(b, j);
for(j = 312850; j < 312860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 313690; j < 313700; j++) _solve(b, j);
for(j = 314530; j < 314540; j++) _solve(b, j);
for(j = 315370; j < 315380; j++) _solve(b, j);
for(j = 316210; j < 316220; j++) _solve(b, j);
for(j = 317050; j < 317060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 247340; j < 247350; j++) _solve(b, j);
for(j = 248180; j < 248190; j++) _solve(b, j);
for(j = 249020; j < 249030; j++) _solve(b, j);
for(j = 249860; j < 249870; j++) _solve(b, j);
for(j = 250700; j < 250710; j++) _solve(b, j);
for(j = 251540; j < 251550; j++) _solve(b, j);
for(j = 252380; j < 252390; j++) _solve(b, j);
for(j = 253220; j < 253230; j++) _solve(b, j);
for(j = 254060; j < 254070; j++) _solve(b, j);
for(j = 254900; j < 254910; j++) _solve(b, j);
for(j = 255740; j < 255750; j++) _solve(b, j);
for(j = 256580; j < 256590; j++) _solve(b, j);
for(j = 257420; j < 257430; j++) _solve(b, j);
for(j = 258260; j < 258270; j++) _solve(b, j);
for(j = 259100; j < 259110; j++) _solve(b, j);
for(j = 259940; j < 259950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 260780; j < 260790; j++) _solve(b, j);
for(j = 261620; j < 261630; j++) _solve(b, j);
for(j = 262460; j < 262470; j++) _solve(b, j);
for(j = 263300; j < 263310; j++) _solve(b, j);
for(j = 264140; j < 264150; j++) _solve(b, j);
for(j = 264980; j < 264990; j++) _solve(b, j);
for(j = 265820; j < 265830; j++) _solve(b, j);
for(j = 266660; j < 266670; j++) _solve(b, j);
for(j = 267500; j < 267510; j++) _solve(b, j);
for(j = 268340; j < 268350; j++) _solve(b, j);
for(j = 269180; j < 269190; j++) _solve(b, j);
for(j = 270020; j < 270030; j++) _solve(b, j);
for(j = 270860; j < 270870; j++) _solve(b, j);
for(j = 271700; j < 271710; j++) _solve(b, j);
for(j = 272540; j < 272550; j++) _solve(b, j);
for(j = 273380; j < 273390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 274220; j < 274230; j++) _solve(b, j);
for(j = 275060; j < 275070; j++) _solve(b, j);
for(j = 275900; j < 275910; j++) _solve(b, j);
for(j = 276740; j < 276750; j++) _solve(b, j);
for(j = 277580; j < 277590; j++) _solve(b, j);
for(j = 278420; j < 278430; j++) _solve(b, j);
for(j = 279260; j < 279270; j++) _solve(b, j);
for(j = 280100; j < 280110; j++) _solve(b, j);
for(j = 280940; j < 280950; j++) _solve(b, j);
for(j = 281780; j < 281790; j++) _solve(b, j);
for(j = 282620; j < 282630; j++) _solve(b, j);
for(j = 283460; j < 283470; j++) _solve(b, j);
for(j = 284300; j < 284310; j++) _solve(b, j);
for(j = 285140; j < 285150; j++) _solve(b, j);
for(j = 285980; j < 285990; j++) _solve(b, j);
for(j = 286820; j < 286830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 287660; j < 287670; j++) _solve(b, j);
for(j = 288500; j < 288510; j++) _solve(b, j);
for(j = 289340; j < 289350; j++) _solve(b, j);
for(j = 290180; j < 290190; j++) _solve(b, j);
for(j = 291020; j < 291030; j++) _solve(b, j);
for(j = 291860; j < 291870; j++) _solve(b, j);
for(j = 292700; j < 292710; j++) _solve(b, j);
for(j = 293540; j < 293550; j++) _solve(b, j);
for(j = 294380; j < 294390; j++) _solve(b, j);
for(j = 295220; j < 295230; j++) _solve(b, j);
for(j = 296060; j < 296070; j++) _solve(b, j);
for(j = 296900; j < 296910; j++) _solve(b, j);
for(j = 297740; j < 297750; j++) _solve(b, j);
for(j = 298580; j < 298590; j++) _solve(b, j);
for(j = 299420; j < 299430; j++) _solve(b, j);
for(j = 300260; j < 300270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 301100; j < 301110; j++) _solve(b, j);
for(j = 301940; j < 301950; j++) _solve(b, j);
for(j = 302780; j < 302790; j++) _solve(b, j);
for(j = 303620; j < 303630; j++) _solve(b, j);
for(j = 304460; j < 304470; j++) _solve(b, j);
for(j = 305300; j < 305310; j++) _solve(b, j);
for(j = 306140; j < 306150; j++) _solve(b, j);
for(j = 306980; j < 306990; j++) _solve(b, j);
for(j = 307820; j < 307830; j++) _solve(b, j);
for(j = 308660; j < 308670; j++) _solve(b, j);
for(j = 309500; j < 309510; j++) _solve(b, j);
for(j = 310340; j < 310350; j++) _solve(b, j);
for(j = 311180; j < 311190; j++) _solve(b, j);
for(j = 312020; j < 312030; j++) _solve(b, j);
for(j = 312860; j < 312870; j++) _solve(b, j);
for(j = 313700; j < 313710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 314540; j < 314550; j++) _solve(b, j);
for(j = 315380; j < 315390; j++) _solve(b, j);
for(j = 316220; j < 316230; j++) _solve(b, j);
for(j = 317060; j < 317070; j++) _solve(b, j);
for(j = 317900; j < 317910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 248190; j < 248200; j++) _solve(b, j);
for(j = 249030; j < 249040; j++) _solve(b, j);
for(j = 249870; j < 249880; j++) _solve(b, j);
for(j = 250710; j < 250720; j++) _solve(b, j);
for(j = 251550; j < 251560; j++) _solve(b, j);
for(j = 252390; j < 252400; j++) _solve(b, j);
for(j = 253230; j < 253240; j++) _solve(b, j);
for(j = 254070; j < 254080; j++) _solve(b, j);
for(j = 254910; j < 254920; j++) _solve(b, j);
for(j = 255750; j < 255760; j++) _solve(b, j);
for(j = 256590; j < 256600; j++) _solve(b, j);
for(j = 257430; j < 257440; j++) _solve(b, j);
for(j = 258270; j < 258280; j++) _solve(b, j);
for(j = 259110; j < 259120; j++) _solve(b, j);
for(j = 259950; j < 259960; j++) _solve(b, j);
for(j = 260790; j < 260800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 261630; j < 261640; j++) _solve(b, j);
for(j = 262470; j < 262480; j++) _solve(b, j);
for(j = 263310; j < 263320; j++) _solve(b, j);
for(j = 264150; j < 264160; j++) _solve(b, j);
for(j = 264990; j < 265000; j++) _solve(b, j);
for(j = 265830; j < 265840; j++) _solve(b, j);
for(j = 266670; j < 266680; j++) _solve(b, j);
for(j = 267510; j < 267520; j++) _solve(b, j);
for(j = 268350; j < 268360; j++) _solve(b, j);
for(j = 269190; j < 269200; j++) _solve(b, j);
for(j = 270030; j < 270040; j++) _solve(b, j);
for(j = 270870; j < 270880; j++) _solve(b, j);
for(j = 271710; j < 271720; j++) _solve(b, j);
for(j = 272550; j < 272560; j++) _solve(b, j);
for(j = 273390; j < 273400; j++) _solve(b, j);
for(j = 274230; j < 274240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 275070; j < 275080; j++) _solve(b, j);
for(j = 275910; j < 275920; j++) _solve(b, j);
for(j = 276750; j < 276760; j++) _solve(b, j);
for(j = 277590; j < 277600; j++) _solve(b, j);
for(j = 278430; j < 278440; j++) _solve(b, j);
for(j = 279270; j < 279280; j++) _solve(b, j);
for(j = 280110; j < 280120; j++) _solve(b, j);
for(j = 280950; j < 280960; j++) _solve(b, j);
for(j = 281790; j < 281800; j++) _solve(b, j);
for(j = 282630; j < 282640; j++) _solve(b, j);
for(j = 283470; j < 283480; j++) _solve(b, j);
for(j = 284310; j < 284320; j++) _solve(b, j);
for(j = 285150; j < 285160; j++) _solve(b, j);
for(j = 285990; j < 286000; j++) _solve(b, j);
for(j = 286830; j < 286840; j++) _solve(b, j);
for(j = 287670; j < 287680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 288510; j < 288520; j++) _solve(b, j);
for(j = 289350; j < 289360; j++) _solve(b, j);
for(j = 290190; j < 290200; j++) _solve(b, j);
for(j = 291030; j < 291040; j++) _solve(b, j);
for(j = 291870; j < 291880; j++) _solve(b, j);
for(j = 292710; j < 292720; j++) _solve(b, j);
for(j = 293550; j < 293560; j++) _solve(b, j);
for(j = 294390; j < 294400; j++) _solve(b, j);
for(j = 295230; j < 295240; j++) _solve(b, j);
for(j = 296070; j < 296080; j++) _solve(b, j);
for(j = 296910; j < 296920; j++) _solve(b, j);
for(j = 297750; j < 297760; j++) _solve(b, j);
for(j = 298590; j < 298600; j++) _solve(b, j);
for(j = 299430; j < 299440; j++) _solve(b, j);
for(j = 300270; j < 300280; j++) _solve(b, j);
for(j = 301110; j < 301120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 301950; j < 301960; j++) _solve(b, j);
for(j = 302790; j < 302800; j++) _solve(b, j);
for(j = 303630; j < 303640; j++) _solve(b, j);
for(j = 304470; j < 304480; j++) _solve(b, j);
for(j = 305310; j < 305320; j++) _solve(b, j);
for(j = 306150; j < 306160; j++) _solve(b, j);
for(j = 306990; j < 307000; j++) _solve(b, j);
for(j = 307830; j < 307840; j++) _solve(b, j);
for(j = 308670; j < 308680; j++) _solve(b, j);
for(j = 309510; j < 309520; j++) _solve(b, j);
for(j = 310350; j < 310360; j++) _solve(b, j);
for(j = 311190; j < 311200; j++) _solve(b, j);
for(j = 312030; j < 312040; j++) _solve(b, j);
for(j = 312870; j < 312880; j++) _solve(b, j);
for(j = 313710; j < 313720; j++) _solve(b, j);
for(j = 314550; j < 314560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 315390; j < 315400; j++) _solve(b, j);
for(j = 316230; j < 316240; j++) _solve(b, j);
for(j = 317070; j < 317080; j++) _solve(b, j);
for(j = 317910; j < 317920; j++) _solve(b, j);
for(j = 318750; j < 318760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 249040; j < 249050; j++) _solve(b, j);
for(j = 249880; j < 249890; j++) _solve(b, j);
for(j = 250720; j < 250730; j++) _solve(b, j);
for(j = 251560; j < 251570; j++) _solve(b, j);
for(j = 252400; j < 252410; j++) _solve(b, j);
for(j = 253240; j < 253250; j++) _solve(b, j);
for(j = 254080; j < 254090; j++) _solve(b, j);
for(j = 254920; j < 254930; j++) _solve(b, j);
for(j = 255760; j < 255770; j++) _solve(b, j);
for(j = 256600; j < 256610; j++) _solve(b, j);
for(j = 257440; j < 257450; j++) _solve(b, j);
for(j = 258280; j < 258290; j++) _solve(b, j);
for(j = 259120; j < 259130; j++) _solve(b, j);
for(j = 259960; j < 259970; j++) _solve(b, j);
for(j = 260800; j < 260810; j++) _solve(b, j);
for(j = 261640; j < 261650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 262480; j < 262490; j++) _solve(b, j);
for(j = 263320; j < 263330; j++) _solve(b, j);
for(j = 264160; j < 264170; j++) _solve(b, j);
for(j = 265000; j < 265010; j++) _solve(b, j);
for(j = 265840; j < 265850; j++) _solve(b, j);
for(j = 266680; j < 266690; j++) _solve(b, j);
for(j = 267520; j < 267530; j++) _solve(b, j);
for(j = 268360; j < 268370; j++) _solve(b, j);
for(j = 269200; j < 269210; j++) _solve(b, j);
for(j = 270040; j < 270050; j++) _solve(b, j);
for(j = 270880; j < 270890; j++) _solve(b, j);
for(j = 271720; j < 271730; j++) _solve(b, j);
for(j = 272560; j < 272570; j++) _solve(b, j);
for(j = 273400; j < 273410; j++) _solve(b, j);
for(j = 274240; j < 274250; j++) _solve(b, j);
for(j = 275080; j < 275090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 275920; j < 275930; j++) _solve(b, j);
for(j = 276760; j < 276770; j++) _solve(b, j);
for(j = 277600; j < 277610; j++) _solve(b, j);
for(j = 278440; j < 278450; j++) _solve(b, j);
for(j = 279280; j < 279290; j++) _solve(b, j);
for(j = 280120; j < 280130; j++) _solve(b, j);
for(j = 280960; j < 280970; j++) _solve(b, j);
for(j = 281800; j < 281810; j++) _solve(b, j);
for(j = 282640; j < 282650; j++) _solve(b, j);
for(j = 283480; j < 283490; j++) _solve(b, j);
for(j = 284320; j < 284330; j++) _solve(b, j);
for(j = 285160; j < 285170; j++) _solve(b, j);
for(j = 286000; j < 286010; j++) _solve(b, j);
for(j = 286840; j < 286850; j++) _solve(b, j);
for(j = 287680; j < 287690; j++) _solve(b, j);
for(j = 288520; j < 288530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 289360; j < 289370; j++) _solve(b, j);
for(j = 290200; j < 290210; j++) _solve(b, j);
for(j = 291040; j < 291050; j++) _solve(b, j);
for(j = 291880; j < 291890; j++) _solve(b, j);
for(j = 292720; j < 292730; j++) _solve(b, j);
for(j = 293560; j < 293570; j++) _solve(b, j);
for(j = 294400; j < 294410; j++) _solve(b, j);
for(j = 295240; j < 295250; j++) _solve(b, j);
for(j = 296080; j < 296090; j++) _solve(b, j);
for(j = 296920; j < 296930; j++) _solve(b, j);
for(j = 297760; j < 297770; j++) _solve(b, j);
for(j = 298600; j < 298610; j++) _solve(b, j);
for(j = 299440; j < 299450; j++) _solve(b, j);
for(j = 300280; j < 300290; j++) _solve(b, j);
for(j = 301120; j < 301130; j++) _solve(b, j);
for(j = 301960; j < 301970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 302800; j < 302810; j++) _solve(b, j);
for(j = 303640; j < 303650; j++) _solve(b, j);
for(j = 304480; j < 304490; j++) _solve(b, j);
for(j = 305320; j < 305330; j++) _solve(b, j);
for(j = 306160; j < 306170; j++) _solve(b, j);
for(j = 307000; j < 307010; j++) _solve(b, j);
for(j = 307840; j < 307850; j++) _solve(b, j);
for(j = 308680; j < 308690; j++) _solve(b, j);
for(j = 309520; j < 309530; j++) _solve(b, j);
for(j = 310360; j < 310370; j++) _solve(b, j);
for(j = 311200; j < 311210; j++) _solve(b, j);
for(j = 312040; j < 312050; j++) _solve(b, j);
for(j = 312880; j < 312890; j++) _solve(b, j);
for(j = 313720; j < 313730; j++) _solve(b, j);
for(j = 314560; j < 314570; j++) _solve(b, j);
for(j = 315400; j < 315410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 316240; j < 316250; j++) _solve(b, j);
for(j = 317080; j < 317090; j++) _solve(b, j);
for(j = 317920; j < 317930; j++) _solve(b, j);
for(j = 318760; j < 318770; j++) _solve(b, j);
for(j = 319600; j < 319610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 249890; j < 249900; j++) _solve(b, j);
for(j = 250730; j < 250740; j++) _solve(b, j);
for(j = 251570; j < 251580; j++) _solve(b, j);
for(j = 252410; j < 252420; j++) _solve(b, j);
for(j = 253250; j < 253260; j++) _solve(b, j);
for(j = 254090; j < 254100; j++) _solve(b, j);
for(j = 254930; j < 254940; j++) _solve(b, j);
for(j = 255770; j < 255780; j++) _solve(b, j);
for(j = 256610; j < 256620; j++) _solve(b, j);
for(j = 257450; j < 257460; j++) _solve(b, j);
for(j = 258290; j < 258300; j++) _solve(b, j);
for(j = 259130; j < 259140; j++) _solve(b, j);
for(j = 259970; j < 259980; j++) _solve(b, j);
for(j = 260810; j < 260820; j++) _solve(b, j);
for(j = 261650; j < 261660; j++) _solve(b, j);
for(j = 262490; j < 262500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 263330; j < 263340; j++) _solve(b, j);
for(j = 264170; j < 264180; j++) _solve(b, j);
for(j = 265010; j < 265020; j++) _solve(b, j);
for(j = 265850; j < 265860; j++) _solve(b, j);
for(j = 266690; j < 266700; j++) _solve(b, j);
for(j = 267530; j < 267540; j++) _solve(b, j);
for(j = 268370; j < 268380; j++) _solve(b, j);
for(j = 269210; j < 269220; j++) _solve(b, j);
for(j = 270050; j < 270060; j++) _solve(b, j);
for(j = 270890; j < 270900; j++) _solve(b, j);
for(j = 271730; j < 271740; j++) _solve(b, j);
for(j = 272570; j < 272580; j++) _solve(b, j);
for(j = 273410; j < 273420; j++) _solve(b, j);
for(j = 274250; j < 274260; j++) _solve(b, j);
for(j = 275090; j < 275100; j++) _solve(b, j);
for(j = 275930; j < 275940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 276770; j < 276780; j++) _solve(b, j);
for(j = 277610; j < 277620; j++) _solve(b, j);
for(j = 278450; j < 278460; j++) _solve(b, j);
for(j = 279290; j < 279300; j++) _solve(b, j);
for(j = 280130; j < 280140; j++) _solve(b, j);
for(j = 280970; j < 280980; j++) _solve(b, j);
for(j = 281810; j < 281820; j++) _solve(b, j);
for(j = 282650; j < 282660; j++) _solve(b, j);
for(j = 283490; j < 283500; j++) _solve(b, j);
for(j = 284330; j < 284340; j++) _solve(b, j);
for(j = 285170; j < 285180; j++) _solve(b, j);
for(j = 286010; j < 286020; j++) _solve(b, j);
for(j = 286850; j < 286860; j++) _solve(b, j);
for(j = 287690; j < 287700; j++) _solve(b, j);
for(j = 288530; j < 288540; j++) _solve(b, j);
for(j = 289370; j < 289380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 290210; j < 290220; j++) _solve(b, j);
for(j = 291050; j < 291060; j++) _solve(b, j);
for(j = 291890; j < 291900; j++) _solve(b, j);
for(j = 292730; j < 292740; j++) _solve(b, j);
for(j = 293570; j < 293580; j++) _solve(b, j);
for(j = 294410; j < 294420; j++) _solve(b, j);
for(j = 295250; j < 295260; j++) _solve(b, j);
for(j = 296090; j < 296100; j++) _solve(b, j);
for(j = 296930; j < 296940; j++) _solve(b, j);
for(j = 297770; j < 297780; j++) _solve(b, j);
for(j = 298610; j < 298620; j++) _solve(b, j);
for(j = 299450; j < 299460; j++) _solve(b, j);
for(j = 300290; j < 300300; j++) _solve(b, j);
for(j = 301130; j < 301140; j++) _solve(b, j);
for(j = 301970; j < 301980; j++) _solve(b, j);
for(j = 302810; j < 302820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 303650; j < 303660; j++) _solve(b, j);
for(j = 304490; j < 304500; j++) _solve(b, j);
for(j = 305330; j < 305340; j++) _solve(b, j);
for(j = 306170; j < 306180; j++) _solve(b, j);
for(j = 307010; j < 307020; j++) _solve(b, j);
for(j = 307850; j < 307860; j++) _solve(b, j);
for(j = 308690; j < 308700; j++) _solve(b, j);
for(j = 309530; j < 309540; j++) _solve(b, j);
for(j = 310370; j < 310380; j++) _solve(b, j);
for(j = 311210; j < 311220; j++) _solve(b, j);
for(j = 312050; j < 312060; j++) _solve(b, j);
for(j = 312890; j < 312900; j++) _solve(b, j);
for(j = 313730; j < 313740; j++) _solve(b, j);
for(j = 314570; j < 314580; j++) _solve(b, j);
for(j = 315410; j < 315420; j++) _solve(b, j);
for(j = 316250; j < 316260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 317090; j < 317100; j++) _solve(b, j);
for(j = 317930; j < 317940; j++) _solve(b, j);
for(j = 318770; j < 318780; j++) _solve(b, j);
for(j = 319610; j < 319620; j++) _solve(b, j);
for(j = 320450; j < 320460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 250740; j < 250750; j++) _solve(b, j);
for(j = 251580; j < 251590; j++) _solve(b, j);
for(j = 252420; j < 252430; j++) _solve(b, j);
for(j = 253260; j < 253270; j++) _solve(b, j);
for(j = 254100; j < 254110; j++) _solve(b, j);
for(j = 254940; j < 254950; j++) _solve(b, j);
for(j = 255780; j < 255790; j++) _solve(b, j);
for(j = 256620; j < 256630; j++) _solve(b, j);
for(j = 257460; j < 257470; j++) _solve(b, j);
for(j = 258300; j < 258310; j++) _solve(b, j);
for(j = 259140; j < 259150; j++) _solve(b, j);
for(j = 259980; j < 259990; j++) _solve(b, j);
for(j = 260820; j < 260830; j++) _solve(b, j);
for(j = 261660; j < 261670; j++) _solve(b, j);
for(j = 262500; j < 262510; j++) _solve(b, j);
for(j = 263340; j < 263350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 264180; j < 264190; j++) _solve(b, j);
for(j = 265020; j < 265030; j++) _solve(b, j);
for(j = 265860; j < 265870; j++) _solve(b, j);
for(j = 266700; j < 266710; j++) _solve(b, j);
for(j = 267540; j < 267550; j++) _solve(b, j);
for(j = 268380; j < 268390; j++) _solve(b, j);
for(j = 269220; j < 269230; j++) _solve(b, j);
for(j = 270060; j < 270070; j++) _solve(b, j);
for(j = 270900; j < 270910; j++) _solve(b, j);
for(j = 271740; j < 271750; j++) _solve(b, j);
for(j = 272580; j < 272590; j++) _solve(b, j);
for(j = 273420; j < 273430; j++) _solve(b, j);
for(j = 274260; j < 274270; j++) _solve(b, j);
for(j = 275100; j < 275110; j++) _solve(b, j);
for(j = 275940; j < 275950; j++) _solve(b, j);
for(j = 276780; j < 276790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 277620; j < 277630; j++) _solve(b, j);
for(j = 278460; j < 278470; j++) _solve(b, j);
for(j = 279300; j < 279310; j++) _solve(b, j);
for(j = 280140; j < 280150; j++) _solve(b, j);
for(j = 280980; j < 280990; j++) _solve(b, j);
for(j = 281820; j < 281830; j++) _solve(b, j);
for(j = 282660; j < 282670; j++) _solve(b, j);
for(j = 283500; j < 283510; j++) _solve(b, j);
for(j = 284340; j < 284350; j++) _solve(b, j);
for(j = 285180; j < 285190; j++) _solve(b, j);
for(j = 286020; j < 286030; j++) _solve(b, j);
for(j = 286860; j < 286870; j++) _solve(b, j);
for(j = 287700; j < 287710; j++) _solve(b, j);
for(j = 288540; j < 288550; j++) _solve(b, j);
for(j = 289380; j < 289390; j++) _solve(b, j);
for(j = 290220; j < 290230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 291060; j < 291070; j++) _solve(b, j);
for(j = 291900; j < 291910; j++) _solve(b, j);
for(j = 292740; j < 292750; j++) _solve(b, j);
for(j = 293580; j < 293590; j++) _solve(b, j);
for(j = 294420; j < 294430; j++) _solve(b, j);
for(j = 295260; j < 295270; j++) _solve(b, j);
for(j = 296100; j < 296110; j++) _solve(b, j);
for(j = 296940; j < 296950; j++) _solve(b, j);
for(j = 297780; j < 297790; j++) _solve(b, j);
for(j = 298620; j < 298630; j++) _solve(b, j);
for(j = 299460; j < 299470; j++) _solve(b, j);
for(j = 300300; j < 300310; j++) _solve(b, j);
for(j = 301140; j < 301150; j++) _solve(b, j);
for(j = 301980; j < 301990; j++) _solve(b, j);
for(j = 302820; j < 302830; j++) _solve(b, j);
for(j = 303660; j < 303670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 304500; j < 304510; j++) _solve(b, j);
for(j = 305340; j < 305350; j++) _solve(b, j);
for(j = 306180; j < 306190; j++) _solve(b, j);
for(j = 307020; j < 307030; j++) _solve(b, j);
for(j = 307860; j < 307870; j++) _solve(b, j);
for(j = 308700; j < 308710; j++) _solve(b, j);
for(j = 309540; j < 309550; j++) _solve(b, j);
for(j = 310380; j < 310390; j++) _solve(b, j);
for(j = 311220; j < 311230; j++) _solve(b, j);
for(j = 312060; j < 312070; j++) _solve(b, j);
for(j = 312900; j < 312910; j++) _solve(b, j);
for(j = 313740; j < 313750; j++) _solve(b, j);
for(j = 314580; j < 314590; j++) _solve(b, j);
for(j = 315420; j < 315430; j++) _solve(b, j);
for(j = 316260; j < 316270; j++) _solve(b, j);
for(j = 317100; j < 317110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 317940; j < 317950; j++) _solve(b, j);
for(j = 318780; j < 318790; j++) _solve(b, j);
for(j = 319620; j < 319630; j++) _solve(b, j);
for(j = 320460; j < 320470; j++) _solve(b, j);
for(j = 321300; j < 321310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 251590; j < 251600; j++) _solve(b, j);
for(j = 252430; j < 252440; j++) _solve(b, j);
for(j = 253270; j < 253280; j++) _solve(b, j);
for(j = 254110; j < 254120; j++) _solve(b, j);
for(j = 254950; j < 254960; j++) _solve(b, j);
for(j = 255790; j < 255800; j++) _solve(b, j);
for(j = 256630; j < 256640; j++) _solve(b, j);
for(j = 257470; j < 257480; j++) _solve(b, j);
for(j = 258310; j < 258320; j++) _solve(b, j);
for(j = 259150; j < 259160; j++) _solve(b, j);
for(j = 259990; j < 260000; j++) _solve(b, j);
for(j = 260830; j < 260840; j++) _solve(b, j);
for(j = 261670; j < 261680; j++) _solve(b, j);
for(j = 262510; j < 262520; j++) _solve(b, j);
for(j = 263350; j < 263360; j++) _solve(b, j);
for(j = 264190; j < 264200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 265030; j < 265040; j++) _solve(b, j);
for(j = 265870; j < 265880; j++) _solve(b, j);
for(j = 266710; j < 266720; j++) _solve(b, j);
for(j = 267550; j < 267560; j++) _solve(b, j);
for(j = 268390; j < 268400; j++) _solve(b, j);
for(j = 269230; j < 269240; j++) _solve(b, j);
for(j = 270070; j < 270080; j++) _solve(b, j);
for(j = 270910; j < 270920; j++) _solve(b, j);
for(j = 271750; j < 271760; j++) _solve(b, j);
for(j = 272590; j < 272600; j++) _solve(b, j);
for(j = 273430; j < 273440; j++) _solve(b, j);
for(j = 274270; j < 274280; j++) _solve(b, j);
for(j = 275110; j < 275120; j++) _solve(b, j);
for(j = 275950; j < 275960; j++) _solve(b, j);
for(j = 276790; j < 276800; j++) _solve(b, j);
for(j = 277630; j < 277640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 278470; j < 278480; j++) _solve(b, j);
for(j = 279310; j < 279320; j++) _solve(b, j);
for(j = 280150; j < 280160; j++) _solve(b, j);
for(j = 280990; j < 281000; j++) _solve(b, j);
for(j = 281830; j < 281840; j++) _solve(b, j);
for(j = 282670; j < 282680; j++) _solve(b, j);
for(j = 283510; j < 283520; j++) _solve(b, j);
for(j = 284350; j < 284360; j++) _solve(b, j);
for(j = 285190; j < 285200; j++) _solve(b, j);
for(j = 286030; j < 286040; j++) _solve(b, j);
for(j = 286870; j < 286880; j++) _solve(b, j);
for(j = 287710; j < 287720; j++) _solve(b, j);
for(j = 288550; j < 288560; j++) _solve(b, j);
for(j = 289390; j < 289400; j++) _solve(b, j);
for(j = 290230; j < 290240; j++) _solve(b, j);
for(j = 291070; j < 291080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 291910; j < 291920; j++) _solve(b, j);
for(j = 292750; j < 292760; j++) _solve(b, j);
for(j = 293590; j < 293600; j++) _solve(b, j);
for(j = 294430; j < 294440; j++) _solve(b, j);
for(j = 295270; j < 295280; j++) _solve(b, j);
for(j = 296110; j < 296120; j++) _solve(b, j);
for(j = 296950; j < 296960; j++) _solve(b, j);
for(j = 297790; j < 297800; j++) _solve(b, j);
for(j = 298630; j < 298640; j++) _solve(b, j);
for(j = 299470; j < 299480; j++) _solve(b, j);
for(j = 300310; j < 300320; j++) _solve(b, j);
for(j = 301150; j < 301160; j++) _solve(b, j);
for(j = 301990; j < 302000; j++) _solve(b, j);
for(j = 302830; j < 302840; j++) _solve(b, j);
for(j = 303670; j < 303680; j++) _solve(b, j);
for(j = 304510; j < 304520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 305350; j < 305360; j++) _solve(b, j);
for(j = 306190; j < 306200; j++) _solve(b, j);
for(j = 307030; j < 307040; j++) _solve(b, j);
for(j = 307870; j < 307880; j++) _solve(b, j);
for(j = 308710; j < 308720; j++) _solve(b, j);
for(j = 309550; j < 309560; j++) _solve(b, j);
for(j = 310390; j < 310400; j++) _solve(b, j);
for(j = 311230; j < 311240; j++) _solve(b, j);
for(j = 312070; j < 312080; j++) _solve(b, j);
for(j = 312910; j < 312920; j++) _solve(b, j);
for(j = 313750; j < 313760; j++) _solve(b, j);
for(j = 314590; j < 314600; j++) _solve(b, j);
for(j = 315430; j < 315440; j++) _solve(b, j);
for(j = 316270; j < 316280; j++) _solve(b, j);
for(j = 317110; j < 317120; j++) _solve(b, j);
for(j = 317950; j < 317960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 318790; j < 318800; j++) _solve(b, j);
for(j = 319630; j < 319640; j++) _solve(b, j);
for(j = 320470; j < 320480; j++) _solve(b, j);
for(j = 321310; j < 321320; j++) _solve(b, j);
for(j = 322150; j < 322160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 252440; j < 252450; j++) _solve(b, j);
for(j = 253280; j < 253290; j++) _solve(b, j);
for(j = 254120; j < 254130; j++) _solve(b, j);
for(j = 254960; j < 254970; j++) _solve(b, j);
for(j = 255800; j < 255810; j++) _solve(b, j);
for(j = 256640; j < 256650; j++) _solve(b, j);
for(j = 257480; j < 257490; j++) _solve(b, j);
for(j = 258320; j < 258330; j++) _solve(b, j);
for(j = 259160; j < 259170; j++) _solve(b, j);
for(j = 260000; j < 260010; j++) _solve(b, j);
for(j = 260840; j < 260850; j++) _solve(b, j);
for(j = 261680; j < 261690; j++) _solve(b, j);
for(j = 262520; j < 262530; j++) _solve(b, j);
for(j = 263360; j < 263370; j++) _solve(b, j);
for(j = 264200; j < 264210; j++) _solve(b, j);
for(j = 265040; j < 265050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 265880; j < 265890; j++) _solve(b, j);
for(j = 266720; j < 266730; j++) _solve(b, j);
for(j = 267560; j < 267570; j++) _solve(b, j);
for(j = 268400; j < 268410; j++) _solve(b, j);
for(j = 269240; j < 269250; j++) _solve(b, j);
for(j = 270080; j < 270090; j++) _solve(b, j);
for(j = 270920; j < 270930; j++) _solve(b, j);
for(j = 271760; j < 271770; j++) _solve(b, j);
for(j = 272600; j < 272610; j++) _solve(b, j);
for(j = 273440; j < 273450; j++) _solve(b, j);
for(j = 274280; j < 274290; j++) _solve(b, j);
for(j = 275120; j < 275130; j++) _solve(b, j);
for(j = 275960; j < 275970; j++) _solve(b, j);
for(j = 276800; j < 276810; j++) _solve(b, j);
for(j = 277640; j < 277650; j++) _solve(b, j);
for(j = 278480; j < 278490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 279320; j < 279330; j++) _solve(b, j);
for(j = 280160; j < 280170; j++) _solve(b, j);
for(j = 281000; j < 281010; j++) _solve(b, j);
for(j = 281840; j < 281850; j++) _solve(b, j);
for(j = 282680; j < 282690; j++) _solve(b, j);
for(j = 283520; j < 283530; j++) _solve(b, j);
for(j = 284360; j < 284370; j++) _solve(b, j);
for(j = 285200; j < 285210; j++) _solve(b, j);
for(j = 286040; j < 286050; j++) _solve(b, j);
for(j = 286880; j < 286890; j++) _solve(b, j);
for(j = 287720; j < 287730; j++) _solve(b, j);
for(j = 288560; j < 288570; j++) _solve(b, j);
for(j = 289400; j < 289410; j++) _solve(b, j);
for(j = 290240; j < 290250; j++) _solve(b, j);
for(j = 291080; j < 291090; j++) _solve(b, j);
for(j = 291920; j < 291930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 292760; j < 292770; j++) _solve(b, j);
for(j = 293600; j < 293610; j++) _solve(b, j);
for(j = 294440; j < 294450; j++) _solve(b, j);
for(j = 295280; j < 295290; j++) _solve(b, j);
for(j = 296120; j < 296130; j++) _solve(b, j);
for(j = 296960; j < 296970; j++) _solve(b, j);
for(j = 297800; j < 297810; j++) _solve(b, j);
for(j = 298640; j < 298650; j++) _solve(b, j);
for(j = 299480; j < 299490; j++) _solve(b, j);
for(j = 300320; j < 300330; j++) _solve(b, j);
for(j = 301160; j < 301170; j++) _solve(b, j);
for(j = 302000; j < 302010; j++) _solve(b, j);
for(j = 302840; j < 302850; j++) _solve(b, j);
for(j = 303680; j < 303690; j++) _solve(b, j);
for(j = 304520; j < 304530; j++) _solve(b, j);
for(j = 305360; j < 305370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 306200; j < 306210; j++) _solve(b, j);
for(j = 307040; j < 307050; j++) _solve(b, j);
for(j = 307880; j < 307890; j++) _solve(b, j);
for(j = 308720; j < 308730; j++) _solve(b, j);
for(j = 309560; j < 309570; j++) _solve(b, j);
for(j = 310400; j < 310410; j++) _solve(b, j);
for(j = 311240; j < 311250; j++) _solve(b, j);
for(j = 312080; j < 312090; j++) _solve(b, j);
for(j = 312920; j < 312930; j++) _solve(b, j);
for(j = 313760; j < 313770; j++) _solve(b, j);
for(j = 314600; j < 314610; j++) _solve(b, j);
for(j = 315440; j < 315450; j++) _solve(b, j);
for(j = 316280; j < 316290; j++) _solve(b, j);
for(j = 317120; j < 317130; j++) _solve(b, j);
for(j = 317960; j < 317970; j++) _solve(b, j);
for(j = 318800; j < 318810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 319640; j < 319650; j++) _solve(b, j);
for(j = 320480; j < 320490; j++) _solve(b, j);
for(j = 321320; j < 321330; j++) _solve(b, j);
for(j = 322160; j < 322170; j++) _solve(b, j);
for(j = 323000; j < 323010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 253290; j < 253300; j++) _solve(b, j);
for(j = 254130; j < 254140; j++) _solve(b, j);
for(j = 254970; j < 254980; j++) _solve(b, j);
for(j = 255810; j < 255820; j++) _solve(b, j);
for(j = 256650; j < 256660; j++) _solve(b, j);
for(j = 257490; j < 257500; j++) _solve(b, j);
for(j = 258330; j < 258340; j++) _solve(b, j);
for(j = 259170; j < 259180; j++) _solve(b, j);
for(j = 260010; j < 260020; j++) _solve(b, j);
for(j = 260850; j < 260860; j++) _solve(b, j);
for(j = 261690; j < 261700; j++) _solve(b, j);
for(j = 262530; j < 262540; j++) _solve(b, j);
for(j = 263370; j < 263380; j++) _solve(b, j);
for(j = 264210; j < 264220; j++) _solve(b, j);
for(j = 265050; j < 265060; j++) _solve(b, j);
for(j = 265890; j < 265900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 266730; j < 266740; j++) _solve(b, j);
for(j = 267570; j < 267580; j++) _solve(b, j);
for(j = 268410; j < 268420; j++) _solve(b, j);
for(j = 269250; j < 269260; j++) _solve(b, j);
for(j = 270090; j < 270100; j++) _solve(b, j);
for(j = 270930; j < 270940; j++) _solve(b, j);
for(j = 271770; j < 271780; j++) _solve(b, j);
for(j = 272610; j < 272620; j++) _solve(b, j);
for(j = 273450; j < 273460; j++) _solve(b, j);
for(j = 274290; j < 274300; j++) _solve(b, j);
for(j = 275130; j < 275140; j++) _solve(b, j);
for(j = 275970; j < 275980; j++) _solve(b, j);
for(j = 276810; j < 276820; j++) _solve(b, j);
for(j = 277650; j < 277660; j++) _solve(b, j);
for(j = 278490; j < 278500; j++) _solve(b, j);
for(j = 279330; j < 279340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 280170; j < 280180; j++) _solve(b, j);
for(j = 281010; j < 281020; j++) _solve(b, j);
for(j = 281850; j < 281860; j++) _solve(b, j);
for(j = 282690; j < 282700; j++) _solve(b, j);
for(j = 283530; j < 283540; j++) _solve(b, j);
for(j = 284370; j < 284380; j++) _solve(b, j);
for(j = 285210; j < 285220; j++) _solve(b, j);
for(j = 286050; j < 286060; j++) _solve(b, j);
for(j = 286890; j < 286900; j++) _solve(b, j);
for(j = 287730; j < 287740; j++) _solve(b, j);
for(j = 288570; j < 288580; j++) _solve(b, j);
for(j = 289410; j < 289420; j++) _solve(b, j);
for(j = 290250; j < 290260; j++) _solve(b, j);
for(j = 291090; j < 291100; j++) _solve(b, j);
for(j = 291930; j < 291940; j++) _solve(b, j);
for(j = 292770; j < 292780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 293610; j < 293620; j++) _solve(b, j);
for(j = 294450; j < 294460; j++) _solve(b, j);
for(j = 295290; j < 295300; j++) _solve(b, j);
for(j = 296130; j < 296140; j++) _solve(b, j);
for(j = 296970; j < 296980; j++) _solve(b, j);
for(j = 297810; j < 297820; j++) _solve(b, j);
for(j = 298650; j < 298660; j++) _solve(b, j);
for(j = 299490; j < 299500; j++) _solve(b, j);
for(j = 300330; j < 300340; j++) _solve(b, j);
for(j = 301170; j < 301180; j++) _solve(b, j);
for(j = 302010; j < 302020; j++) _solve(b, j);
for(j = 302850; j < 302860; j++) _solve(b, j);
for(j = 303690; j < 303700; j++) _solve(b, j);
for(j = 304530; j < 304540; j++) _solve(b, j);
for(j = 305370; j < 305380; j++) _solve(b, j);
for(j = 306210; j < 306220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 307050; j < 307060; j++) _solve(b, j);
for(j = 307890; j < 307900; j++) _solve(b, j);
for(j = 308730; j < 308740; j++) _solve(b, j);
for(j = 309570; j < 309580; j++) _solve(b, j);
for(j = 310410; j < 310420; j++) _solve(b, j);
for(j = 311250; j < 311260; j++) _solve(b, j);
for(j = 312090; j < 312100; j++) _solve(b, j);
for(j = 312930; j < 312940; j++) _solve(b, j);
for(j = 313770; j < 313780; j++) _solve(b, j);
for(j = 314610; j < 314620; j++) _solve(b, j);
for(j = 315450; j < 315460; j++) _solve(b, j);
for(j = 316290; j < 316300; j++) _solve(b, j);
for(j = 317130; j < 317140; j++) _solve(b, j);
for(j = 317970; j < 317980; j++) _solve(b, j);
for(j = 318810; j < 318820; j++) _solve(b, j);
for(j = 319650; j < 319660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 320490; j < 320500; j++) _solve(b, j);
for(j = 321330; j < 321340; j++) _solve(b, j);
for(j = 322170; j < 322180; j++) _solve(b, j);
for(j = 323010; j < 323020; j++) _solve(b, j);
for(j = 323850; j < 323860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 254140; j < 254150; j++) _solve(b, j);
for(j = 254980; j < 254990; j++) _solve(b, j);
for(j = 255820; j < 255830; j++) _solve(b, j);
for(j = 256660; j < 256670; j++) _solve(b, j);
for(j = 257500; j < 257510; j++) _solve(b, j);
for(j = 258340; j < 258350; j++) _solve(b, j);
for(j = 259180; j < 259190; j++) _solve(b, j);
for(j = 260020; j < 260030; j++) _solve(b, j);
for(j = 260860; j < 260870; j++) _solve(b, j);
for(j = 261700; j < 261710; j++) _solve(b, j);
for(j = 262540; j < 262550; j++) _solve(b, j);
for(j = 263380; j < 263390; j++) _solve(b, j);
for(j = 264220; j < 264230; j++) _solve(b, j);
for(j = 265060; j < 265070; j++) _solve(b, j);
for(j = 265900; j < 265910; j++) _solve(b, j);
for(j = 266740; j < 266750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 267580; j < 267590; j++) _solve(b, j);
for(j = 268420; j < 268430; j++) _solve(b, j);
for(j = 269260; j < 269270; j++) _solve(b, j);
for(j = 270100; j < 270110; j++) _solve(b, j);
for(j = 270940; j < 270950; j++) _solve(b, j);
for(j = 271780; j < 271790; j++) _solve(b, j);
for(j = 272620; j < 272630; j++) _solve(b, j);
for(j = 273460; j < 273470; j++) _solve(b, j);
for(j = 274300; j < 274310; j++) _solve(b, j);
for(j = 275140; j < 275150; j++) _solve(b, j);
for(j = 275980; j < 275990; j++) _solve(b, j);
for(j = 276820; j < 276830; j++) _solve(b, j);
for(j = 277660; j < 277670; j++) _solve(b, j);
for(j = 278500; j < 278510; j++) _solve(b, j);
for(j = 279340; j < 279350; j++) _solve(b, j);
for(j = 280180; j < 280190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 281020; j < 281030; j++) _solve(b, j);
for(j = 281860; j < 281870; j++) _solve(b, j);
for(j = 282700; j < 282710; j++) _solve(b, j);
for(j = 283540; j < 283550; j++) _solve(b, j);
for(j = 284380; j < 284390; j++) _solve(b, j);
for(j = 285220; j < 285230; j++) _solve(b, j);
for(j = 286060; j < 286070; j++) _solve(b, j);
for(j = 286900; j < 286910; j++) _solve(b, j);
for(j = 287740; j < 287750; j++) _solve(b, j);
for(j = 288580; j < 288590; j++) _solve(b, j);
for(j = 289420; j < 289430; j++) _solve(b, j);
for(j = 290260; j < 290270; j++) _solve(b, j);
for(j = 291100; j < 291110; j++) _solve(b, j);
for(j = 291940; j < 291950; j++) _solve(b, j);
for(j = 292780; j < 292790; j++) _solve(b, j);
for(j = 293620; j < 293630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 294460; j < 294470; j++) _solve(b, j);
for(j = 295300; j < 295310; j++) _solve(b, j);
for(j = 296140; j < 296150; j++) _solve(b, j);
for(j = 296980; j < 296990; j++) _solve(b, j);
for(j = 297820; j < 297830; j++) _solve(b, j);
for(j = 298660; j < 298670; j++) _solve(b, j);
for(j = 299500; j < 299510; j++) _solve(b, j);
for(j = 300340; j < 300350; j++) _solve(b, j);
for(j = 301180; j < 301190; j++) _solve(b, j);
for(j = 302020; j < 302030; j++) _solve(b, j);
for(j = 302860; j < 302870; j++) _solve(b, j);
for(j = 303700; j < 303710; j++) _solve(b, j);
for(j = 304540; j < 304550; j++) _solve(b, j);
for(j = 305380; j < 305390; j++) _solve(b, j);
for(j = 306220; j < 306230; j++) _solve(b, j);
for(j = 307060; j < 307070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 307900; j < 307910; j++) _solve(b, j);
for(j = 308740; j < 308750; j++) _solve(b, j);
for(j = 309580; j < 309590; j++) _solve(b, j);
for(j = 310420; j < 310430; j++) _solve(b, j);
for(j = 311260; j < 311270; j++) _solve(b, j);
for(j = 312100; j < 312110; j++) _solve(b, j);
for(j = 312940; j < 312950; j++) _solve(b, j);
for(j = 313780; j < 313790; j++) _solve(b, j);
for(j = 314620; j < 314630; j++) _solve(b, j);
for(j = 315460; j < 315470; j++) _solve(b, j);
for(j = 316300; j < 316310; j++) _solve(b, j);
for(j = 317140; j < 317150; j++) _solve(b, j);
for(j = 317980; j < 317990; j++) _solve(b, j);
for(j = 318820; j < 318830; j++) _solve(b, j);
for(j = 319660; j < 319670; j++) _solve(b, j);
for(j = 320500; j < 320510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 321340; j < 321350; j++) _solve(b, j);
for(j = 322180; j < 322190; j++) _solve(b, j);
for(j = 323020; j < 323030; j++) _solve(b, j);
for(j = 323860; j < 323870; j++) _solve(b, j);
for(j = 324700; j < 324710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 254990; j < 255000; j++) _solve(b, j);
for(j = 255830; j < 255840; j++) _solve(b, j);
for(j = 256670; j < 256680; j++) _solve(b, j);
for(j = 257510; j < 257520; j++) _solve(b, j);
for(j = 258350; j < 258360; j++) _solve(b, j);
for(j = 259190; j < 259200; j++) _solve(b, j);
for(j = 260030; j < 260040; j++) _solve(b, j);
for(j = 260870; j < 260880; j++) _solve(b, j);
for(j = 261710; j < 261720; j++) _solve(b, j);
for(j = 262550; j < 262560; j++) _solve(b, j);
for(j = 263390; j < 263400; j++) _solve(b, j);
for(j = 264230; j < 264240; j++) _solve(b, j);
for(j = 265070; j < 265080; j++) _solve(b, j);
for(j = 265910; j < 265920; j++) _solve(b, j);
for(j = 266750; j < 266760; j++) _solve(b, j);
for(j = 267590; j < 267600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 268430; j < 268440; j++) _solve(b, j);
for(j = 269270; j < 269280; j++) _solve(b, j);
for(j = 270110; j < 270120; j++) _solve(b, j);
for(j = 270950; j < 270960; j++) _solve(b, j);
for(j = 271790; j < 271800; j++) _solve(b, j);
for(j = 272630; j < 272640; j++) _solve(b, j);
for(j = 273470; j < 273480; j++) _solve(b, j);
for(j = 274310; j < 274320; j++) _solve(b, j);
for(j = 275150; j < 275160; j++) _solve(b, j);
for(j = 275990; j < 276000; j++) _solve(b, j);
for(j = 276830; j < 276840; j++) _solve(b, j);
for(j = 277670; j < 277680; j++) _solve(b, j);
for(j = 278510; j < 278520; j++) _solve(b, j);
for(j = 279350; j < 279360; j++) _solve(b, j);
for(j = 280190; j < 280200; j++) _solve(b, j);
for(j = 281030; j < 281040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 281870; j < 281880; j++) _solve(b, j);
for(j = 282710; j < 282720; j++) _solve(b, j);
for(j = 283550; j < 283560; j++) _solve(b, j);
for(j = 284390; j < 284400; j++) _solve(b, j);
for(j = 285230; j < 285240; j++) _solve(b, j);
for(j = 286070; j < 286080; j++) _solve(b, j);
for(j = 286910; j < 286920; j++) _solve(b, j);
for(j = 287750; j < 287760; j++) _solve(b, j);
for(j = 288590; j < 288600; j++) _solve(b, j);
for(j = 289430; j < 289440; j++) _solve(b, j);
for(j = 290270; j < 290280; j++) _solve(b, j);
for(j = 291110; j < 291120; j++) _solve(b, j);
for(j = 291950; j < 291960; j++) _solve(b, j);
for(j = 292790; j < 292800; j++) _solve(b, j);
for(j = 293630; j < 293640; j++) _solve(b, j);
for(j = 294470; j < 294480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 295310; j < 295320; j++) _solve(b, j);
for(j = 296150; j < 296160; j++) _solve(b, j);
for(j = 296990; j < 297000; j++) _solve(b, j);
for(j = 297830; j < 297840; j++) _solve(b, j);
for(j = 298670; j < 298680; j++) _solve(b, j);
for(j = 299510; j < 299520; j++) _solve(b, j);
for(j = 300350; j < 300360; j++) _solve(b, j);
for(j = 301190; j < 301200; j++) _solve(b, j);
for(j = 302030; j < 302040; j++) _solve(b, j);
for(j = 302870; j < 302880; j++) _solve(b, j);
for(j = 303710; j < 303720; j++) _solve(b, j);
for(j = 304550; j < 304560; j++) _solve(b, j);
for(j = 305390; j < 305400; j++) _solve(b, j);
for(j = 306230; j < 306240; j++) _solve(b, j);
for(j = 307070; j < 307080; j++) _solve(b, j);
for(j = 307910; j < 307920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 308750; j < 308760; j++) _solve(b, j);
for(j = 309590; j < 309600; j++) _solve(b, j);
for(j = 310430; j < 310440; j++) _solve(b, j);
for(j = 311270; j < 311280; j++) _solve(b, j);
for(j = 312110; j < 312120; j++) _solve(b, j);
for(j = 312950; j < 312960; j++) _solve(b, j);
for(j = 313790; j < 313800; j++) _solve(b, j);
for(j = 314630; j < 314640; j++) _solve(b, j);
for(j = 315470; j < 315480; j++) _solve(b, j);
for(j = 316310; j < 316320; j++) _solve(b, j);
for(j = 317150; j < 317160; j++) _solve(b, j);
for(j = 317990; j < 318000; j++) _solve(b, j);
for(j = 318830; j < 318840; j++) _solve(b, j);
for(j = 319670; j < 319680; j++) _solve(b, j);
for(j = 320510; j < 320520; j++) _solve(b, j);
for(j = 321350; j < 321360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 322190; j < 322200; j++) _solve(b, j);
for(j = 323030; j < 323040; j++) _solve(b, j);
for(j = 323870; j < 323880; j++) _solve(b, j);
for(j = 324710; j < 324720; j++) _solve(b, j);
for(j = 325550; j < 325560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 255840; j < 255850; j++) _solve(b, j);
for(j = 256680; j < 256690; j++) _solve(b, j);
for(j = 257520; j < 257530; j++) _solve(b, j);
for(j = 258360; j < 258370; j++) _solve(b, j);
for(j = 259200; j < 259210; j++) _solve(b, j);
for(j = 260040; j < 260050; j++) _solve(b, j);
for(j = 260880; j < 260890; j++) _solve(b, j);
for(j = 261720; j < 261730; j++) _solve(b, j);
for(j = 262560; j < 262570; j++) _solve(b, j);
for(j = 263400; j < 263410; j++) _solve(b, j);
for(j = 264240; j < 264250; j++) _solve(b, j);
for(j = 265080; j < 265090; j++) _solve(b, j);
for(j = 265920; j < 265930; j++) _solve(b, j);
for(j = 266760; j < 266770; j++) _solve(b, j);
for(j = 267600; j < 267610; j++) _solve(b, j);
for(j = 268440; j < 268450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 269280; j < 269290; j++) _solve(b, j);
for(j = 270120; j < 270130; j++) _solve(b, j);
for(j = 270960; j < 270970; j++) _solve(b, j);
for(j = 271800; j < 271810; j++) _solve(b, j);
for(j = 272640; j < 272650; j++) _solve(b, j);
for(j = 273480; j < 273490; j++) _solve(b, j);
for(j = 274320; j < 274330; j++) _solve(b, j);
for(j = 275160; j < 275170; j++) _solve(b, j);
for(j = 276000; j < 276010; j++) _solve(b, j);
for(j = 276840; j < 276850; j++) _solve(b, j);
for(j = 277680; j < 277690; j++) _solve(b, j);
for(j = 278520; j < 278530; j++) _solve(b, j);
for(j = 279360; j < 279370; j++) _solve(b, j);
for(j = 280200; j < 280210; j++) _solve(b, j);
for(j = 281040; j < 281050; j++) _solve(b, j);
for(j = 281880; j < 281890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 282720; j < 282730; j++) _solve(b, j);
for(j = 283560; j < 283570; j++) _solve(b, j);
for(j = 284400; j < 284410; j++) _solve(b, j);
for(j = 285240; j < 285250; j++) _solve(b, j);
for(j = 286080; j < 286090; j++) _solve(b, j);
for(j = 286920; j < 286930; j++) _solve(b, j);
for(j = 287760; j < 287770; j++) _solve(b, j);
for(j = 288600; j < 288610; j++) _solve(b, j);
for(j = 289440; j < 289450; j++) _solve(b, j);
for(j = 290280; j < 290290; j++) _solve(b, j);
for(j = 291120; j < 291130; j++) _solve(b, j);
for(j = 291960; j < 291970; j++) _solve(b, j);
for(j = 292800; j < 292810; j++) _solve(b, j);
for(j = 293640; j < 293650; j++) _solve(b, j);
for(j = 294480; j < 294490; j++) _solve(b, j);
for(j = 295320; j < 295330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 296160; j < 296170; j++) _solve(b, j);
for(j = 297000; j < 297010; j++) _solve(b, j);
for(j = 297840; j < 297850; j++) _solve(b, j);
for(j = 298680; j < 298690; j++) _solve(b, j);
for(j = 299520; j < 299530; j++) _solve(b, j);
for(j = 300360; j < 300370; j++) _solve(b, j);
for(j = 301200; j < 301210; j++) _solve(b, j);
for(j = 302040; j < 302050; j++) _solve(b, j);
for(j = 302880; j < 302890; j++) _solve(b, j);
for(j = 303720; j < 303730; j++) _solve(b, j);
for(j = 304560; j < 304570; j++) _solve(b, j);
for(j = 305400; j < 305410; j++) _solve(b, j);
for(j = 306240; j < 306250; j++) _solve(b, j);
for(j = 307080; j < 307090; j++) _solve(b, j);
for(j = 307920; j < 307930; j++) _solve(b, j);
for(j = 308760; j < 308770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 309600; j < 309610; j++) _solve(b, j);
for(j = 310440; j < 310450; j++) _solve(b, j);
for(j = 311280; j < 311290; j++) _solve(b, j);
for(j = 312120; j < 312130; j++) _solve(b, j);
for(j = 312960; j < 312970; j++) _solve(b, j);
for(j = 313800; j < 313810; j++) _solve(b, j);
for(j = 314640; j < 314650; j++) _solve(b, j);
for(j = 315480; j < 315490; j++) _solve(b, j);
for(j = 316320; j < 316330; j++) _solve(b, j);
for(j = 317160; j < 317170; j++) _solve(b, j);
for(j = 318000; j < 318010; j++) _solve(b, j);
for(j = 318840; j < 318850; j++) _solve(b, j);
for(j = 319680; j < 319690; j++) _solve(b, j);
for(j = 320520; j < 320530; j++) _solve(b, j);
for(j = 321360; j < 321370; j++) _solve(b, j);
for(j = 322200; j < 322210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 323040; j < 323050; j++) _solve(b, j);
for(j = 323880; j < 323890; j++) _solve(b, j);
for(j = 324720; j < 324730; j++) _solve(b, j);
for(j = 325560; j < 325570; j++) _solve(b, j);
for(j = 326400; j < 326410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 256690; j < 256700; j++) _solve(b, j);
for(j = 257530; j < 257540; j++) _solve(b, j);
for(j = 258370; j < 258380; j++) _solve(b, j);
for(j = 259210; j < 259220; j++) _solve(b, j);
for(j = 260050; j < 260060; j++) _solve(b, j);
for(j = 260890; j < 260900; j++) _solve(b, j);
for(j = 261730; j < 261740; j++) _solve(b, j);
for(j = 262570; j < 262580; j++) _solve(b, j);
for(j = 263410; j < 263420; j++) _solve(b, j);
for(j = 264250; j < 264260; j++) _solve(b, j);
for(j = 265090; j < 265100; j++) _solve(b, j);
for(j = 265930; j < 265940; j++) _solve(b, j);
for(j = 266770; j < 266780; j++) _solve(b, j);
for(j = 267610; j < 267620; j++) _solve(b, j);
for(j = 268450; j < 268460; j++) _solve(b, j);
for(j = 269290; j < 269300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 270130; j < 270140; j++) _solve(b, j);
for(j = 270970; j < 270980; j++) _solve(b, j);
for(j = 271810; j < 271820; j++) _solve(b, j);
for(j = 272650; j < 272660; j++) _solve(b, j);
for(j = 273490; j < 273500; j++) _solve(b, j);
for(j = 274330; j < 274340; j++) _solve(b, j);
for(j = 275170; j < 275180; j++) _solve(b, j);
for(j = 276010; j < 276020; j++) _solve(b, j);
for(j = 276850; j < 276860; j++) _solve(b, j);
for(j = 277690; j < 277700; j++) _solve(b, j);
for(j = 278530; j < 278540; j++) _solve(b, j);
for(j = 279370; j < 279380; j++) _solve(b, j);
for(j = 280210; j < 280220; j++) _solve(b, j);
for(j = 281050; j < 281060; j++) _solve(b, j);
for(j = 281890; j < 281900; j++) _solve(b, j);
for(j = 282730; j < 282740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 283570; j < 283580; j++) _solve(b, j);
for(j = 284410; j < 284420; j++) _solve(b, j);
for(j = 285250; j < 285260; j++) _solve(b, j);
for(j = 286090; j < 286100; j++) _solve(b, j);
for(j = 286930; j < 286940; j++) _solve(b, j);
for(j = 287770; j < 287780; j++) _solve(b, j);
for(j = 288610; j < 288620; j++) _solve(b, j);
for(j = 289450; j < 289460; j++) _solve(b, j);
for(j = 290290; j < 290300; j++) _solve(b, j);
for(j = 291130; j < 291140; j++) _solve(b, j);
for(j = 291970; j < 291980; j++) _solve(b, j);
for(j = 292810; j < 292820; j++) _solve(b, j);
for(j = 293650; j < 293660; j++) _solve(b, j);
for(j = 294490; j < 294500; j++) _solve(b, j);
for(j = 295330; j < 295340; j++) _solve(b, j);
for(j = 296170; j < 296180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 297010; j < 297020; j++) _solve(b, j);
for(j = 297850; j < 297860; j++) _solve(b, j);
for(j = 298690; j < 298700; j++) _solve(b, j);
for(j = 299530; j < 299540; j++) _solve(b, j);
for(j = 300370; j < 300380; j++) _solve(b, j);
for(j = 301210; j < 301220; j++) _solve(b, j);
for(j = 302050; j < 302060; j++) _solve(b, j);
for(j = 302890; j < 302900; j++) _solve(b, j);
for(j = 303730; j < 303740; j++) _solve(b, j);
for(j = 304570; j < 304580; j++) _solve(b, j);
for(j = 305410; j < 305420; j++) _solve(b, j);
for(j = 306250; j < 306260; j++) _solve(b, j);
for(j = 307090; j < 307100; j++) _solve(b, j);
for(j = 307930; j < 307940; j++) _solve(b, j);
for(j = 308770; j < 308780; j++) _solve(b, j);
for(j = 309610; j < 309620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 310450; j < 310460; j++) _solve(b, j);
for(j = 311290; j < 311300; j++) _solve(b, j);
for(j = 312130; j < 312140; j++) _solve(b, j);
for(j = 312970; j < 312980; j++) _solve(b, j);
for(j = 313810; j < 313820; j++) _solve(b, j);
for(j = 314650; j < 314660; j++) _solve(b, j);
for(j = 315490; j < 315500; j++) _solve(b, j);
for(j = 316330; j < 316340; j++) _solve(b, j);
for(j = 317170; j < 317180; j++) _solve(b, j);
for(j = 318010; j < 318020; j++) _solve(b, j);
for(j = 318850; j < 318860; j++) _solve(b, j);
for(j = 319690; j < 319700; j++) _solve(b, j);
for(j = 320530; j < 320540; j++) _solve(b, j);
for(j = 321370; j < 321380; j++) _solve(b, j);
for(j = 322210; j < 322220; j++) _solve(b, j);
for(j = 323050; j < 323060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 323890; j < 323900; j++) _solve(b, j);
for(j = 324730; j < 324740; j++) _solve(b, j);
for(j = 325570; j < 325580; j++) _solve(b, j);
for(j = 326410; j < 326420; j++) _solve(b, j);
for(j = 327250; j < 327260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 257540; j < 257550; j++) _solve(b, j);
for(j = 258380; j < 258390; j++) _solve(b, j);
for(j = 259220; j < 259230; j++) _solve(b, j);
for(j = 260060; j < 260070; j++) _solve(b, j);
for(j = 260900; j < 260910; j++) _solve(b, j);
for(j = 261740; j < 261750; j++) _solve(b, j);
for(j = 262580; j < 262590; j++) _solve(b, j);
for(j = 263420; j < 263430; j++) _solve(b, j);
for(j = 264260; j < 264270; j++) _solve(b, j);
for(j = 265100; j < 265110; j++) _solve(b, j);
for(j = 265940; j < 265950; j++) _solve(b, j);
for(j = 266780; j < 266790; j++) _solve(b, j);
for(j = 267620; j < 267630; j++) _solve(b, j);
for(j = 268460; j < 268470; j++) _solve(b, j);
for(j = 269300; j < 269310; j++) _solve(b, j);
for(j = 270140; j < 270150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 270980; j < 270990; j++) _solve(b, j);
for(j = 271820; j < 271830; j++) _solve(b, j);
for(j = 272660; j < 272670; j++) _solve(b, j);
for(j = 273500; j < 273510; j++) _solve(b, j);
for(j = 274340; j < 274350; j++) _solve(b, j);
for(j = 275180; j < 275190; j++) _solve(b, j);
for(j = 276020; j < 276030; j++) _solve(b, j);
for(j = 276860; j < 276870; j++) _solve(b, j);
for(j = 277700; j < 277710; j++) _solve(b, j);
for(j = 278540; j < 278550; j++) _solve(b, j);
for(j = 279380; j < 279390; j++) _solve(b, j);
for(j = 280220; j < 280230; j++) _solve(b, j);
for(j = 281060; j < 281070; j++) _solve(b, j);
for(j = 281900; j < 281910; j++) _solve(b, j);
for(j = 282740; j < 282750; j++) _solve(b, j);
for(j = 283580; j < 283590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 284420; j < 284430; j++) _solve(b, j);
for(j = 285260; j < 285270; j++) _solve(b, j);
for(j = 286100; j < 286110; j++) _solve(b, j);
for(j = 286940; j < 286950; j++) _solve(b, j);
for(j = 287780; j < 287790; j++) _solve(b, j);
for(j = 288620; j < 288630; j++) _solve(b, j);
for(j = 289460; j < 289470; j++) _solve(b, j);
for(j = 290300; j < 290310; j++) _solve(b, j);
for(j = 291140; j < 291150; j++) _solve(b, j);
for(j = 291980; j < 291990; j++) _solve(b, j);
for(j = 292820; j < 292830; j++) _solve(b, j);
for(j = 293660; j < 293670; j++) _solve(b, j);
for(j = 294500; j < 294510; j++) _solve(b, j);
for(j = 295340; j < 295350; j++) _solve(b, j);
for(j = 296180; j < 296190; j++) _solve(b, j);
for(j = 297020; j < 297030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 297860; j < 297870; j++) _solve(b, j);
for(j = 298700; j < 298710; j++) _solve(b, j);
for(j = 299540; j < 299550; j++) _solve(b, j);
for(j = 300380; j < 300390; j++) _solve(b, j);
for(j = 301220; j < 301230; j++) _solve(b, j);
for(j = 302060; j < 302070; j++) _solve(b, j);
for(j = 302900; j < 302910; j++) _solve(b, j);
for(j = 303740; j < 303750; j++) _solve(b, j);
for(j = 304580; j < 304590; j++) _solve(b, j);
for(j = 305420; j < 305430; j++) _solve(b, j);
for(j = 306260; j < 306270; j++) _solve(b, j);
for(j = 307100; j < 307110; j++) _solve(b, j);
for(j = 307940; j < 307950; j++) _solve(b, j);
for(j = 308780; j < 308790; j++) _solve(b, j);
for(j = 309620; j < 309630; j++) _solve(b, j);
for(j = 310460; j < 310470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 311300; j < 311310; j++) _solve(b, j);
for(j = 312140; j < 312150; j++) _solve(b, j);
for(j = 312980; j < 312990; j++) _solve(b, j);
for(j = 313820; j < 313830; j++) _solve(b, j);
for(j = 314660; j < 314670; j++) _solve(b, j);
for(j = 315500; j < 315510; j++) _solve(b, j);
for(j = 316340; j < 316350; j++) _solve(b, j);
for(j = 317180; j < 317190; j++) _solve(b, j);
for(j = 318020; j < 318030; j++) _solve(b, j);
for(j = 318860; j < 318870; j++) _solve(b, j);
for(j = 319700; j < 319710; j++) _solve(b, j);
for(j = 320540; j < 320550; j++) _solve(b, j);
for(j = 321380; j < 321390; j++) _solve(b, j);
for(j = 322220; j < 322230; j++) _solve(b, j);
for(j = 323060; j < 323070; j++) _solve(b, j);
for(j = 323900; j < 323910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 324740; j < 324750; j++) _solve(b, j);
for(j = 325580; j < 325590; j++) _solve(b, j);
for(j = 326420; j < 326430; j++) _solve(b, j);
for(j = 327260; j < 327270; j++) _solve(b, j);
for(j = 328100; j < 328110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 258390; j < 258400; j++) _solve(b, j);
for(j = 259230; j < 259240; j++) _solve(b, j);
for(j = 260070; j < 260080; j++) _solve(b, j);
for(j = 260910; j < 260920; j++) _solve(b, j);
for(j = 261750; j < 261760; j++) _solve(b, j);
for(j = 262590; j < 262600; j++) _solve(b, j);
for(j = 263430; j < 263440; j++) _solve(b, j);
for(j = 264270; j < 264280; j++) _solve(b, j);
for(j = 265110; j < 265120; j++) _solve(b, j);
for(j = 265950; j < 265960; j++) _solve(b, j);
for(j = 266790; j < 266800; j++) _solve(b, j);
for(j = 267630; j < 267640; j++) _solve(b, j);
for(j = 268470; j < 268480; j++) _solve(b, j);
for(j = 269310; j < 269320; j++) _solve(b, j);
for(j = 270150; j < 270160; j++) _solve(b, j);
for(j = 270990; j < 271000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 271830; j < 271840; j++) _solve(b, j);
for(j = 272670; j < 272680; j++) _solve(b, j);
for(j = 273510; j < 273520; j++) _solve(b, j);
for(j = 274350; j < 274360; j++) _solve(b, j);
for(j = 275190; j < 275200; j++) _solve(b, j);
for(j = 276030; j < 276040; j++) _solve(b, j);
for(j = 276870; j < 276880; j++) _solve(b, j);
for(j = 277710; j < 277720; j++) _solve(b, j);
for(j = 278550; j < 278560; j++) _solve(b, j);
for(j = 279390; j < 279400; j++) _solve(b, j);
for(j = 280230; j < 280240; j++) _solve(b, j);
for(j = 281070; j < 281080; j++) _solve(b, j);
for(j = 281910; j < 281920; j++) _solve(b, j);
for(j = 282750; j < 282760; j++) _solve(b, j);
for(j = 283590; j < 283600; j++) _solve(b, j);
for(j = 284430; j < 284440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 285270; j < 285280; j++) _solve(b, j);
for(j = 286110; j < 286120; j++) _solve(b, j);
for(j = 286950; j < 286960; j++) _solve(b, j);
for(j = 287790; j < 287800; j++) _solve(b, j);
for(j = 288630; j < 288640; j++) _solve(b, j);
for(j = 289470; j < 289480; j++) _solve(b, j);
for(j = 290310; j < 290320; j++) _solve(b, j);
for(j = 291150; j < 291160; j++) _solve(b, j);
for(j = 291990; j < 292000; j++) _solve(b, j);
for(j = 292830; j < 292840; j++) _solve(b, j);
for(j = 293670; j < 293680; j++) _solve(b, j);
for(j = 294510; j < 294520; j++) _solve(b, j);
for(j = 295350; j < 295360; j++) _solve(b, j);
for(j = 296190; j < 296200; j++) _solve(b, j);
for(j = 297030; j < 297040; j++) _solve(b, j);
for(j = 297870; j < 297880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 298710; j < 298720; j++) _solve(b, j);
for(j = 299550; j < 299560; j++) _solve(b, j);
for(j = 300390; j < 300400; j++) _solve(b, j);
for(j = 301230; j < 301240; j++) _solve(b, j);
for(j = 302070; j < 302080; j++) _solve(b, j);
for(j = 302910; j < 302920; j++) _solve(b, j);
for(j = 303750; j < 303760; j++) _solve(b, j);
for(j = 304590; j < 304600; j++) _solve(b, j);
for(j = 305430; j < 305440; j++) _solve(b, j);
for(j = 306270; j < 306280; j++) _solve(b, j);
for(j = 307110; j < 307120; j++) _solve(b, j);
for(j = 307950; j < 307960; j++) _solve(b, j);
for(j = 308790; j < 308800; j++) _solve(b, j);
for(j = 309630; j < 309640; j++) _solve(b, j);
for(j = 310470; j < 310480; j++) _solve(b, j);
for(j = 311310; j < 311320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 312150; j < 312160; j++) _solve(b, j);
for(j = 312990; j < 313000; j++) _solve(b, j);
for(j = 313830; j < 313840; j++) _solve(b, j);
for(j = 314670; j < 314680; j++) _solve(b, j);
for(j = 315510; j < 315520; j++) _solve(b, j);
for(j = 316350; j < 316360; j++) _solve(b, j);
for(j = 317190; j < 317200; j++) _solve(b, j);
for(j = 318030; j < 318040; j++) _solve(b, j);
for(j = 318870; j < 318880; j++) _solve(b, j);
for(j = 319710; j < 319720; j++) _solve(b, j);
for(j = 320550; j < 320560; j++) _solve(b, j);
for(j = 321390; j < 321400; j++) _solve(b, j);
for(j = 322230; j < 322240; j++) _solve(b, j);
for(j = 323070; j < 323080; j++) _solve(b, j);
for(j = 323910; j < 323920; j++) _solve(b, j);
for(j = 324750; j < 324760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 325590; j < 325600; j++) _solve(b, j);
for(j = 326430; j < 326440; j++) _solve(b, j);
for(j = 327270; j < 327280; j++) _solve(b, j);
for(j = 328110; j < 328120; j++) _solve(b, j);
for(j = 328950; j < 328960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 259240; j < 259250; j++) _solve(b, j);
for(j = 260080; j < 260090; j++) _solve(b, j);
for(j = 260920; j < 260930; j++) _solve(b, j);
for(j = 261760; j < 261770; j++) _solve(b, j);
for(j = 262600; j < 262610; j++) _solve(b, j);
for(j = 263440; j < 263450; j++) _solve(b, j);
for(j = 264280; j < 264290; j++) _solve(b, j);
for(j = 265120; j < 265130; j++) _solve(b, j);
for(j = 265960; j < 265970; j++) _solve(b, j);
for(j = 266800; j < 266810; j++) _solve(b, j);
for(j = 267640; j < 267650; j++) _solve(b, j);
for(j = 268480; j < 268490; j++) _solve(b, j);
for(j = 269320; j < 269330; j++) _solve(b, j);
for(j = 270160; j < 270170; j++) _solve(b, j);
for(j = 271000; j < 271010; j++) _solve(b, j);
for(j = 271840; j < 271850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 272680; j < 272690; j++) _solve(b, j);
for(j = 273520; j < 273530; j++) _solve(b, j);
for(j = 274360; j < 274370; j++) _solve(b, j);
for(j = 275200; j < 275210; j++) _solve(b, j);
for(j = 276040; j < 276050; j++) _solve(b, j);
for(j = 276880; j < 276890; j++) _solve(b, j);
for(j = 277720; j < 277730; j++) _solve(b, j);
for(j = 278560; j < 278570; j++) _solve(b, j);
for(j = 279400; j < 279410; j++) _solve(b, j);
for(j = 280240; j < 280250; j++) _solve(b, j);
for(j = 281080; j < 281090; j++) _solve(b, j);
for(j = 281920; j < 281930; j++) _solve(b, j);
for(j = 282760; j < 282770; j++) _solve(b, j);
for(j = 283600; j < 283610; j++) _solve(b, j);
for(j = 284440; j < 284450; j++) _solve(b, j);
for(j = 285280; j < 285290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 286120; j < 286130; j++) _solve(b, j);
for(j = 286960; j < 286970; j++) _solve(b, j);
for(j = 287800; j < 287810; j++) _solve(b, j);
for(j = 288640; j < 288650; j++) _solve(b, j);
for(j = 289480; j < 289490; j++) _solve(b, j);
for(j = 290320; j < 290330; j++) _solve(b, j);
for(j = 291160; j < 291170; j++) _solve(b, j);
for(j = 292000; j < 292010; j++) _solve(b, j);
for(j = 292840; j < 292850; j++) _solve(b, j);
for(j = 293680; j < 293690; j++) _solve(b, j);
for(j = 294520; j < 294530; j++) _solve(b, j);
for(j = 295360; j < 295370; j++) _solve(b, j);
for(j = 296200; j < 296210; j++) _solve(b, j);
for(j = 297040; j < 297050; j++) _solve(b, j);
for(j = 297880; j < 297890; j++) _solve(b, j);
for(j = 298720; j < 298730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 299560; j < 299570; j++) _solve(b, j);
for(j = 300400; j < 300410; j++) _solve(b, j);
for(j = 301240; j < 301250; j++) _solve(b, j);
for(j = 302080; j < 302090; j++) _solve(b, j);
for(j = 302920; j < 302930; j++) _solve(b, j);
for(j = 303760; j < 303770; j++) _solve(b, j);
for(j = 304600; j < 304610; j++) _solve(b, j);
for(j = 305440; j < 305450; j++) _solve(b, j);
for(j = 306280; j < 306290; j++) _solve(b, j);
for(j = 307120; j < 307130; j++) _solve(b, j);
for(j = 307960; j < 307970; j++) _solve(b, j);
for(j = 308800; j < 308810; j++) _solve(b, j);
for(j = 309640; j < 309650; j++) _solve(b, j);
for(j = 310480; j < 310490; j++) _solve(b, j);
for(j = 311320; j < 311330; j++) _solve(b, j);
for(j = 312160; j < 312170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 313000; j < 313010; j++) _solve(b, j);
for(j = 313840; j < 313850; j++) _solve(b, j);
for(j = 314680; j < 314690; j++) _solve(b, j);
for(j = 315520; j < 315530; j++) _solve(b, j);
for(j = 316360; j < 316370; j++) _solve(b, j);
for(j = 317200; j < 317210; j++) _solve(b, j);
for(j = 318040; j < 318050; j++) _solve(b, j);
for(j = 318880; j < 318890; j++) _solve(b, j);
for(j = 319720; j < 319730; j++) _solve(b, j);
for(j = 320560; j < 320570; j++) _solve(b, j);
for(j = 321400; j < 321410; j++) _solve(b, j);
for(j = 322240; j < 322250; j++) _solve(b, j);
for(j = 323080; j < 323090; j++) _solve(b, j);
for(j = 323920; j < 323930; j++) _solve(b, j);
for(j = 324760; j < 324770; j++) _solve(b, j);
for(j = 325600; j < 325610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 326440; j < 326450; j++) _solve(b, j);
for(j = 327280; j < 327290; j++) _solve(b, j);
for(j = 328120; j < 328130; j++) _solve(b, j);
for(j = 328960; j < 328970; j++) _solve(b, j);
for(j = 329800; j < 329810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 260090; j < 260100; j++) _solve(b, j);
for(j = 260930; j < 260940; j++) _solve(b, j);
for(j = 261770; j < 261780; j++) _solve(b, j);
for(j = 262610; j < 262620; j++) _solve(b, j);
for(j = 263450; j < 263460; j++) _solve(b, j);
for(j = 264290; j < 264300; j++) _solve(b, j);
for(j = 265130; j < 265140; j++) _solve(b, j);
for(j = 265970; j < 265980; j++) _solve(b, j);
for(j = 266810; j < 266820; j++) _solve(b, j);
for(j = 267650; j < 267660; j++) _solve(b, j);
for(j = 268490; j < 268500; j++) _solve(b, j);
for(j = 269330; j < 269340; j++) _solve(b, j);
for(j = 270170; j < 270180; j++) _solve(b, j);
for(j = 271010; j < 271020; j++) _solve(b, j);
for(j = 271850; j < 271860; j++) _solve(b, j);
for(j = 272690; j < 272700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 273530; j < 273540; j++) _solve(b, j);
for(j = 274370; j < 274380; j++) _solve(b, j);
for(j = 275210; j < 275220; j++) _solve(b, j);
for(j = 276050; j < 276060; j++) _solve(b, j);
for(j = 276890; j < 276900; j++) _solve(b, j);
for(j = 277730; j < 277740; j++) _solve(b, j);
for(j = 278570; j < 278580; j++) _solve(b, j);
for(j = 279410; j < 279420; j++) _solve(b, j);
for(j = 280250; j < 280260; j++) _solve(b, j);
for(j = 281090; j < 281100; j++) _solve(b, j);
for(j = 281930; j < 281940; j++) _solve(b, j);
for(j = 282770; j < 282780; j++) _solve(b, j);
for(j = 283610; j < 283620; j++) _solve(b, j);
for(j = 284450; j < 284460; j++) _solve(b, j);
for(j = 285290; j < 285300; j++) _solve(b, j);
for(j = 286130; j < 286140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 286970; j < 286980; j++) _solve(b, j);
for(j = 287810; j < 287820; j++) _solve(b, j);
for(j = 288650; j < 288660; j++) _solve(b, j);
for(j = 289490; j < 289500; j++) _solve(b, j);
for(j = 290330; j < 290340; j++) _solve(b, j);
for(j = 291170; j < 291180; j++) _solve(b, j);
for(j = 292010; j < 292020; j++) _solve(b, j);
for(j = 292850; j < 292860; j++) _solve(b, j);
for(j = 293690; j < 293700; j++) _solve(b, j);
for(j = 294530; j < 294540; j++) _solve(b, j);
for(j = 295370; j < 295380; j++) _solve(b, j);
for(j = 296210; j < 296220; j++) _solve(b, j);
for(j = 297050; j < 297060; j++) _solve(b, j);
for(j = 297890; j < 297900; j++) _solve(b, j);
for(j = 298730; j < 298740; j++) _solve(b, j);
for(j = 299570; j < 299580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 300410; j < 300420; j++) _solve(b, j);
for(j = 301250; j < 301260; j++) _solve(b, j);
for(j = 302090; j < 302100; j++) _solve(b, j);
for(j = 302930; j < 302940; j++) _solve(b, j);
for(j = 303770; j < 303780; j++) _solve(b, j);
for(j = 304610; j < 304620; j++) _solve(b, j);
for(j = 305450; j < 305460; j++) _solve(b, j);
for(j = 306290; j < 306300; j++) _solve(b, j);
for(j = 307130; j < 307140; j++) _solve(b, j);
for(j = 307970; j < 307980; j++) _solve(b, j);
for(j = 308810; j < 308820; j++) _solve(b, j);
for(j = 309650; j < 309660; j++) _solve(b, j);
for(j = 310490; j < 310500; j++) _solve(b, j);
for(j = 311330; j < 311340; j++) _solve(b, j);
for(j = 312170; j < 312180; j++) _solve(b, j);
for(j = 313010; j < 313020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 313850; j < 313860; j++) _solve(b, j);
for(j = 314690; j < 314700; j++) _solve(b, j);
for(j = 315530; j < 315540; j++) _solve(b, j);
for(j = 316370; j < 316380; j++) _solve(b, j);
for(j = 317210; j < 317220; j++) _solve(b, j);
for(j = 318050; j < 318060; j++) _solve(b, j);
for(j = 318890; j < 318900; j++) _solve(b, j);
for(j = 319730; j < 319740; j++) _solve(b, j);
for(j = 320570; j < 320580; j++) _solve(b, j);
for(j = 321410; j < 321420; j++) _solve(b, j);
for(j = 322250; j < 322260; j++) _solve(b, j);
for(j = 323090; j < 323100; j++) _solve(b, j);
for(j = 323930; j < 323940; j++) _solve(b, j);
for(j = 324770; j < 324780; j++) _solve(b, j);
for(j = 325610; j < 325620; j++) _solve(b, j);
for(j = 326450; j < 326460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 327290; j < 327300; j++) _solve(b, j);
for(j = 328130; j < 328140; j++) _solve(b, j);
for(j = 328970; j < 328980; j++) _solve(b, j);
for(j = 329810; j < 329820; j++) _solve(b, j);
for(j = 330650; j < 330660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 260940; j < 260950; j++) _solve(b, j);
for(j = 261780; j < 261790; j++) _solve(b, j);
for(j = 262620; j < 262630; j++) _solve(b, j);
for(j = 263460; j < 263470; j++) _solve(b, j);
for(j = 264300; j < 264310; j++) _solve(b, j);
for(j = 265140; j < 265150; j++) _solve(b, j);
for(j = 265980; j < 265990; j++) _solve(b, j);
for(j = 266820; j < 266830; j++) _solve(b, j);
for(j = 267660; j < 267670; j++) _solve(b, j);
for(j = 268500; j < 268510; j++) _solve(b, j);
for(j = 269340; j < 269350; j++) _solve(b, j);
for(j = 270180; j < 270190; j++) _solve(b, j);
for(j = 271020; j < 271030; j++) _solve(b, j);
for(j = 271860; j < 271870; j++) _solve(b, j);
for(j = 272700; j < 272710; j++) _solve(b, j);
for(j = 273540; j < 273550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 274380; j < 274390; j++) _solve(b, j);
for(j = 275220; j < 275230; j++) _solve(b, j);
for(j = 276060; j < 276070; j++) _solve(b, j);
for(j = 276900; j < 276910; j++) _solve(b, j);
for(j = 277740; j < 277750; j++) _solve(b, j);
for(j = 278580; j < 278590; j++) _solve(b, j);
for(j = 279420; j < 279430; j++) _solve(b, j);
for(j = 280260; j < 280270; j++) _solve(b, j);
for(j = 281100; j < 281110; j++) _solve(b, j);
for(j = 281940; j < 281950; j++) _solve(b, j);
for(j = 282780; j < 282790; j++) _solve(b, j);
for(j = 283620; j < 283630; j++) _solve(b, j);
for(j = 284460; j < 284470; j++) _solve(b, j);
for(j = 285300; j < 285310; j++) _solve(b, j);
for(j = 286140; j < 286150; j++) _solve(b, j);
for(j = 286980; j < 286990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 287820; j < 287830; j++) _solve(b, j);
for(j = 288660; j < 288670; j++) _solve(b, j);
for(j = 289500; j < 289510; j++) _solve(b, j);
for(j = 290340; j < 290350; j++) _solve(b, j);
for(j = 291180; j < 291190; j++) _solve(b, j);
for(j = 292020; j < 292030; j++) _solve(b, j);
for(j = 292860; j < 292870; j++) _solve(b, j);
for(j = 293700; j < 293710; j++) _solve(b, j);
for(j = 294540; j < 294550; j++) _solve(b, j);
for(j = 295380; j < 295390; j++) _solve(b, j);
for(j = 296220; j < 296230; j++) _solve(b, j);
for(j = 297060; j < 297070; j++) _solve(b, j);
for(j = 297900; j < 297910; j++) _solve(b, j);
for(j = 298740; j < 298750; j++) _solve(b, j);
for(j = 299580; j < 299590; j++) _solve(b, j);
for(j = 300420; j < 300430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 301260; j < 301270; j++) _solve(b, j);
for(j = 302100; j < 302110; j++) _solve(b, j);
for(j = 302940; j < 302950; j++) _solve(b, j);
for(j = 303780; j < 303790; j++) _solve(b, j);
for(j = 304620; j < 304630; j++) _solve(b, j);
for(j = 305460; j < 305470; j++) _solve(b, j);
for(j = 306300; j < 306310; j++) _solve(b, j);
for(j = 307140; j < 307150; j++) _solve(b, j);
for(j = 307980; j < 307990; j++) _solve(b, j);
for(j = 308820; j < 308830; j++) _solve(b, j);
for(j = 309660; j < 309670; j++) _solve(b, j);
for(j = 310500; j < 310510; j++) _solve(b, j);
for(j = 311340; j < 311350; j++) _solve(b, j);
for(j = 312180; j < 312190; j++) _solve(b, j);
for(j = 313020; j < 313030; j++) _solve(b, j);
for(j = 313860; j < 313870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 314700; j < 314710; j++) _solve(b, j);
for(j = 315540; j < 315550; j++) _solve(b, j);
for(j = 316380; j < 316390; j++) _solve(b, j);
for(j = 317220; j < 317230; j++) _solve(b, j);
for(j = 318060; j < 318070; j++) _solve(b, j);
for(j = 318900; j < 318910; j++) _solve(b, j);
for(j = 319740; j < 319750; j++) _solve(b, j);
for(j = 320580; j < 320590; j++) _solve(b, j);
for(j = 321420; j < 321430; j++) _solve(b, j);
for(j = 322260; j < 322270; j++) _solve(b, j);
for(j = 323100; j < 323110; j++) _solve(b, j);
for(j = 323940; j < 323950; j++) _solve(b, j);
for(j = 324780; j < 324790; j++) _solve(b, j);
for(j = 325620; j < 325630; j++) _solve(b, j);
for(j = 326460; j < 326470; j++) _solve(b, j);
for(j = 327300; j < 327310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 328140; j < 328150; j++) _solve(b, j);
for(j = 328980; j < 328990; j++) _solve(b, j);
for(j = 329820; j < 329830; j++) _solve(b, j);
for(j = 330660; j < 330670; j++) _solve(b, j);
for(j = 331500; j < 331510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 261790; j < 261800; j++) _solve(b, j);
for(j = 262630; j < 262640; j++) _solve(b, j);
for(j = 263470; j < 263480; j++) _solve(b, j);
for(j = 264310; j < 264320; j++) _solve(b, j);
for(j = 265150; j < 265160; j++) _solve(b, j);
for(j = 265990; j < 266000; j++) _solve(b, j);
for(j = 266830; j < 266840; j++) _solve(b, j);
for(j = 267670; j < 267680; j++) _solve(b, j);
for(j = 268510; j < 268520; j++) _solve(b, j);
for(j = 269350; j < 269360; j++) _solve(b, j);
for(j = 270190; j < 270200; j++) _solve(b, j);
for(j = 271030; j < 271040; j++) _solve(b, j);
for(j = 271870; j < 271880; j++) _solve(b, j);
for(j = 272710; j < 272720; j++) _solve(b, j);
for(j = 273550; j < 273560; j++) _solve(b, j);
for(j = 274390; j < 274400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 275230; j < 275240; j++) _solve(b, j);
for(j = 276070; j < 276080; j++) _solve(b, j);
for(j = 276910; j < 276920; j++) _solve(b, j);
for(j = 277750; j < 277760; j++) _solve(b, j);
for(j = 278590; j < 278600; j++) _solve(b, j);
for(j = 279430; j < 279440; j++) _solve(b, j);
for(j = 280270; j < 280280; j++) _solve(b, j);
for(j = 281110; j < 281120; j++) _solve(b, j);
for(j = 281950; j < 281960; j++) _solve(b, j);
for(j = 282790; j < 282800; j++) _solve(b, j);
for(j = 283630; j < 283640; j++) _solve(b, j);
for(j = 284470; j < 284480; j++) _solve(b, j);
for(j = 285310; j < 285320; j++) _solve(b, j);
for(j = 286150; j < 286160; j++) _solve(b, j);
for(j = 286990; j < 287000; j++) _solve(b, j);
for(j = 287830; j < 287840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 288670; j < 288680; j++) _solve(b, j);
for(j = 289510; j < 289520; j++) _solve(b, j);
for(j = 290350; j < 290360; j++) _solve(b, j);
for(j = 291190; j < 291200; j++) _solve(b, j);
for(j = 292030; j < 292040; j++) _solve(b, j);
for(j = 292870; j < 292880; j++) _solve(b, j);
for(j = 293710; j < 293720; j++) _solve(b, j);
for(j = 294550; j < 294560; j++) _solve(b, j);
for(j = 295390; j < 295400; j++) _solve(b, j);
for(j = 296230; j < 296240; j++) _solve(b, j);
for(j = 297070; j < 297080; j++) _solve(b, j);
for(j = 297910; j < 297920; j++) _solve(b, j);
for(j = 298750; j < 298760; j++) _solve(b, j);
for(j = 299590; j < 299600; j++) _solve(b, j);
for(j = 300430; j < 300440; j++) _solve(b, j);
for(j = 301270; j < 301280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 302110; j < 302120; j++) _solve(b, j);
for(j = 302950; j < 302960; j++) _solve(b, j);
for(j = 303790; j < 303800; j++) _solve(b, j);
for(j = 304630; j < 304640; j++) _solve(b, j);
for(j = 305470; j < 305480; j++) _solve(b, j);
for(j = 306310; j < 306320; j++) _solve(b, j);
for(j = 307150; j < 307160; j++) _solve(b, j);
for(j = 307990; j < 308000; j++) _solve(b, j);
for(j = 308830; j < 308840; j++) _solve(b, j);
for(j = 309670; j < 309680; j++) _solve(b, j);
for(j = 310510; j < 310520; j++) _solve(b, j);
for(j = 311350; j < 311360; j++) _solve(b, j);
for(j = 312190; j < 312200; j++) _solve(b, j);
for(j = 313030; j < 313040; j++) _solve(b, j);
for(j = 313870; j < 313880; j++) _solve(b, j);
for(j = 314710; j < 314720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 315550; j < 315560; j++) _solve(b, j);
for(j = 316390; j < 316400; j++) _solve(b, j);
for(j = 317230; j < 317240; j++) _solve(b, j);
for(j = 318070; j < 318080; j++) _solve(b, j);
for(j = 318910; j < 318920; j++) _solve(b, j);
for(j = 319750; j < 319760; j++) _solve(b, j);
for(j = 320590; j < 320600; j++) _solve(b, j);
for(j = 321430; j < 321440; j++) _solve(b, j);
for(j = 322270; j < 322280; j++) _solve(b, j);
for(j = 323110; j < 323120; j++) _solve(b, j);
for(j = 323950; j < 323960; j++) _solve(b, j);
for(j = 324790; j < 324800; j++) _solve(b, j);
for(j = 325630; j < 325640; j++) _solve(b, j);
for(j = 326470; j < 326480; j++) _solve(b, j);
for(j = 327310; j < 327320; j++) _solve(b, j);
for(j = 328150; j < 328160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 328990; j < 329000; j++) _solve(b, j);
for(j = 329830; j < 329840; j++) _solve(b, j);
for(j = 330670; j < 330680; j++) _solve(b, j);
for(j = 331510; j < 331520; j++) _solve(b, j);
for(j = 332350; j < 332360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 262640; j < 262650; j++) _solve(b, j);
for(j = 263480; j < 263490; j++) _solve(b, j);
for(j = 264320; j < 264330; j++) _solve(b, j);
for(j = 265160; j < 265170; j++) _solve(b, j);
for(j = 266000; j < 266010; j++) _solve(b, j);
for(j = 266840; j < 266850; j++) _solve(b, j);
for(j = 267680; j < 267690; j++) _solve(b, j);
for(j = 268520; j < 268530; j++) _solve(b, j);
for(j = 269360; j < 269370; j++) _solve(b, j);
for(j = 270200; j < 270210; j++) _solve(b, j);
for(j = 271040; j < 271050; j++) _solve(b, j);
for(j = 271880; j < 271890; j++) _solve(b, j);
for(j = 272720; j < 272730; j++) _solve(b, j);
for(j = 273560; j < 273570; j++) _solve(b, j);
for(j = 274400; j < 274410; j++) _solve(b, j);
for(j = 275240; j < 275250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 276080; j < 276090; j++) _solve(b, j);
for(j = 276920; j < 276930; j++) _solve(b, j);
for(j = 277760; j < 277770; j++) _solve(b, j);
for(j = 278600; j < 278610; j++) _solve(b, j);
for(j = 279440; j < 279450; j++) _solve(b, j);
for(j = 280280; j < 280290; j++) _solve(b, j);
for(j = 281120; j < 281130; j++) _solve(b, j);
for(j = 281960; j < 281970; j++) _solve(b, j);
for(j = 282800; j < 282810; j++) _solve(b, j);
for(j = 283640; j < 283650; j++) _solve(b, j);
for(j = 284480; j < 284490; j++) _solve(b, j);
for(j = 285320; j < 285330; j++) _solve(b, j);
for(j = 286160; j < 286170; j++) _solve(b, j);
for(j = 287000; j < 287010; j++) _solve(b, j);
for(j = 287840; j < 287850; j++) _solve(b, j);
for(j = 288680; j < 288690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 289520; j < 289530; j++) _solve(b, j);
for(j = 290360; j < 290370; j++) _solve(b, j);
for(j = 291200; j < 291210; j++) _solve(b, j);
for(j = 292040; j < 292050; j++) _solve(b, j);
for(j = 292880; j < 292890; j++) _solve(b, j);
for(j = 293720; j < 293730; j++) _solve(b, j);
for(j = 294560; j < 294570; j++) _solve(b, j);
for(j = 295400; j < 295410; j++) _solve(b, j);
for(j = 296240; j < 296250; j++) _solve(b, j);
for(j = 297080; j < 297090; j++) _solve(b, j);
for(j = 297920; j < 297930; j++) _solve(b, j);
for(j = 298760; j < 298770; j++) _solve(b, j);
for(j = 299600; j < 299610; j++) _solve(b, j);
for(j = 300440; j < 300450; j++) _solve(b, j);
for(j = 301280; j < 301290; j++) _solve(b, j);
for(j = 302120; j < 302130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 302960; j < 302970; j++) _solve(b, j);
for(j = 303800; j < 303810; j++) _solve(b, j);
for(j = 304640; j < 304650; j++) _solve(b, j);
for(j = 305480; j < 305490; j++) _solve(b, j);
for(j = 306320; j < 306330; j++) _solve(b, j);
for(j = 307160; j < 307170; j++) _solve(b, j);
for(j = 308000; j < 308010; j++) _solve(b, j);
for(j = 308840; j < 308850; j++) _solve(b, j);
for(j = 309680; j < 309690; j++) _solve(b, j);
for(j = 310520; j < 310530; j++) _solve(b, j);
for(j = 311360; j < 311370; j++) _solve(b, j);
for(j = 312200; j < 312210; j++) _solve(b, j);
for(j = 313040; j < 313050; j++) _solve(b, j);
for(j = 313880; j < 313890; j++) _solve(b, j);
for(j = 314720; j < 314730; j++) _solve(b, j);
for(j = 315560; j < 315570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 316400; j < 316410; j++) _solve(b, j);
for(j = 317240; j < 317250; j++) _solve(b, j);
for(j = 318080; j < 318090; j++) _solve(b, j);
for(j = 318920; j < 318930; j++) _solve(b, j);
for(j = 319760; j < 319770; j++) _solve(b, j);
for(j = 320600; j < 320610; j++) _solve(b, j);
for(j = 321440; j < 321450; j++) _solve(b, j);
for(j = 322280; j < 322290; j++) _solve(b, j);
for(j = 323120; j < 323130; j++) _solve(b, j);
for(j = 323960; j < 323970; j++) _solve(b, j);
for(j = 324800; j < 324810; j++) _solve(b, j);
for(j = 325640; j < 325650; j++) _solve(b, j);
for(j = 326480; j < 326490; j++) _solve(b, j);
for(j = 327320; j < 327330; j++) _solve(b, j);
for(j = 328160; j < 328170; j++) _solve(b, j);
for(j = 329000; j < 329010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 329840; j < 329850; j++) _solve(b, j);
for(j = 330680; j < 330690; j++) _solve(b, j);
for(j = 331520; j < 331530; j++) _solve(b, j);
for(j = 332360; j < 332370; j++) _solve(b, j);
for(j = 333200; j < 333210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 263490; j < 263500; j++) _solve(b, j);
for(j = 264330; j < 264340; j++) _solve(b, j);
for(j = 265170; j < 265180; j++) _solve(b, j);
for(j = 266010; j < 266020; j++) _solve(b, j);
for(j = 266850; j < 266860; j++) _solve(b, j);
for(j = 267690; j < 267700; j++) _solve(b, j);
for(j = 268530; j < 268540; j++) _solve(b, j);
for(j = 269370; j < 269380; j++) _solve(b, j);
for(j = 270210; j < 270220; j++) _solve(b, j);
for(j = 271050; j < 271060; j++) _solve(b, j);
for(j = 271890; j < 271900; j++) _solve(b, j);
for(j = 272730; j < 272740; j++) _solve(b, j);
for(j = 273570; j < 273580; j++) _solve(b, j);
for(j = 274410; j < 274420; j++) _solve(b, j);
for(j = 275250; j < 275260; j++) _solve(b, j);
for(j = 276090; j < 276100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 276930; j < 276940; j++) _solve(b, j);
for(j = 277770; j < 277780; j++) _solve(b, j);
for(j = 278610; j < 278620; j++) _solve(b, j);
for(j = 279450; j < 279460; j++) _solve(b, j);
for(j = 280290; j < 280300; j++) _solve(b, j);
for(j = 281130; j < 281140; j++) _solve(b, j);
for(j = 281970; j < 281980; j++) _solve(b, j);
for(j = 282810; j < 282820; j++) _solve(b, j);
for(j = 283650; j < 283660; j++) _solve(b, j);
for(j = 284490; j < 284500; j++) _solve(b, j);
for(j = 285330; j < 285340; j++) _solve(b, j);
for(j = 286170; j < 286180; j++) _solve(b, j);
for(j = 287010; j < 287020; j++) _solve(b, j);
for(j = 287850; j < 287860; j++) _solve(b, j);
for(j = 288690; j < 288700; j++) _solve(b, j);
for(j = 289530; j < 289540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 290370; j < 290380; j++) _solve(b, j);
for(j = 291210; j < 291220; j++) _solve(b, j);
for(j = 292050; j < 292060; j++) _solve(b, j);
for(j = 292890; j < 292900; j++) _solve(b, j);
for(j = 293730; j < 293740; j++) _solve(b, j);
for(j = 294570; j < 294580; j++) _solve(b, j);
for(j = 295410; j < 295420; j++) _solve(b, j);
for(j = 296250; j < 296260; j++) _solve(b, j);
for(j = 297090; j < 297100; j++) _solve(b, j);
for(j = 297930; j < 297940; j++) _solve(b, j);
for(j = 298770; j < 298780; j++) _solve(b, j);
for(j = 299610; j < 299620; j++) _solve(b, j);
for(j = 300450; j < 300460; j++) _solve(b, j);
for(j = 301290; j < 301300; j++) _solve(b, j);
for(j = 302130; j < 302140; j++) _solve(b, j);
for(j = 302970; j < 302980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 303810; j < 303820; j++) _solve(b, j);
for(j = 304650; j < 304660; j++) _solve(b, j);
for(j = 305490; j < 305500; j++) _solve(b, j);
for(j = 306330; j < 306340; j++) _solve(b, j);
for(j = 307170; j < 307180; j++) _solve(b, j);
for(j = 308010; j < 308020; j++) _solve(b, j);
for(j = 308850; j < 308860; j++) _solve(b, j);
for(j = 309690; j < 309700; j++) _solve(b, j);
for(j = 310530; j < 310540; j++) _solve(b, j);
for(j = 311370; j < 311380; j++) _solve(b, j);
for(j = 312210; j < 312220; j++) _solve(b, j);
for(j = 313050; j < 313060; j++) _solve(b, j);
for(j = 313890; j < 313900; j++) _solve(b, j);
for(j = 314730; j < 314740; j++) _solve(b, j);
for(j = 315570; j < 315580; j++) _solve(b, j);
for(j = 316410; j < 316420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 317250; j < 317260; j++) _solve(b, j);
for(j = 318090; j < 318100; j++) _solve(b, j);
for(j = 318930; j < 318940; j++) _solve(b, j);
for(j = 319770; j < 319780; j++) _solve(b, j);
for(j = 320610; j < 320620; j++) _solve(b, j);
for(j = 321450; j < 321460; j++) _solve(b, j);
for(j = 322290; j < 322300; j++) _solve(b, j);
for(j = 323130; j < 323140; j++) _solve(b, j);
for(j = 323970; j < 323980; j++) _solve(b, j);
for(j = 324810; j < 324820; j++) _solve(b, j);
for(j = 325650; j < 325660; j++) _solve(b, j);
for(j = 326490; j < 326500; j++) _solve(b, j);
for(j = 327330; j < 327340; j++) _solve(b, j);
for(j = 328170; j < 328180; j++) _solve(b, j);
for(j = 329010; j < 329020; j++) _solve(b, j);
for(j = 329850; j < 329860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 330690; j < 330700; j++) _solve(b, j);
for(j = 331530; j < 331540; j++) _solve(b, j);
for(j = 332370; j < 332380; j++) _solve(b, j);
for(j = 333210; j < 333220; j++) _solve(b, j);
for(j = 334050; j < 334060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 264340; j < 264350; j++) _solve(b, j);
for(j = 265180; j < 265190; j++) _solve(b, j);
for(j = 266020; j < 266030; j++) _solve(b, j);
for(j = 266860; j < 266870; j++) _solve(b, j);
for(j = 267700; j < 267710; j++) _solve(b, j);
for(j = 268540; j < 268550; j++) _solve(b, j);
for(j = 269380; j < 269390; j++) _solve(b, j);
for(j = 270220; j < 270230; j++) _solve(b, j);
for(j = 271060; j < 271070; j++) _solve(b, j);
for(j = 271900; j < 271910; j++) _solve(b, j);
for(j = 272740; j < 272750; j++) _solve(b, j);
for(j = 273580; j < 273590; j++) _solve(b, j);
for(j = 274420; j < 274430; j++) _solve(b, j);
for(j = 275260; j < 275270; j++) _solve(b, j);
for(j = 276100; j < 276110; j++) _solve(b, j);
for(j = 276940; j < 276950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 277780; j < 277790; j++) _solve(b, j);
for(j = 278620; j < 278630; j++) _solve(b, j);
for(j = 279460; j < 279470; j++) _solve(b, j);
for(j = 280300; j < 280310; j++) _solve(b, j);
for(j = 281140; j < 281150; j++) _solve(b, j);
for(j = 281980; j < 281990; j++) _solve(b, j);
for(j = 282820; j < 282830; j++) _solve(b, j);
for(j = 283660; j < 283670; j++) _solve(b, j);
for(j = 284500; j < 284510; j++) _solve(b, j);
for(j = 285340; j < 285350; j++) _solve(b, j);
for(j = 286180; j < 286190; j++) _solve(b, j);
for(j = 287020; j < 287030; j++) _solve(b, j);
for(j = 287860; j < 287870; j++) _solve(b, j);
for(j = 288700; j < 288710; j++) _solve(b, j);
for(j = 289540; j < 289550; j++) _solve(b, j);
for(j = 290380; j < 290390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 291220; j < 291230; j++) _solve(b, j);
for(j = 292060; j < 292070; j++) _solve(b, j);
for(j = 292900; j < 292910; j++) _solve(b, j);
for(j = 293740; j < 293750; j++) _solve(b, j);
for(j = 294580; j < 294590; j++) _solve(b, j);
for(j = 295420; j < 295430; j++) _solve(b, j);
for(j = 296260; j < 296270; j++) _solve(b, j);
for(j = 297100; j < 297110; j++) _solve(b, j);
for(j = 297940; j < 297950; j++) _solve(b, j);
for(j = 298780; j < 298790; j++) _solve(b, j);
for(j = 299620; j < 299630; j++) _solve(b, j);
for(j = 300460; j < 300470; j++) _solve(b, j);
for(j = 301300; j < 301310; j++) _solve(b, j);
for(j = 302140; j < 302150; j++) _solve(b, j);
for(j = 302980; j < 302990; j++) _solve(b, j);
for(j = 303820; j < 303830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 304660; j < 304670; j++) _solve(b, j);
for(j = 305500; j < 305510; j++) _solve(b, j);
for(j = 306340; j < 306350; j++) _solve(b, j);
for(j = 307180; j < 307190; j++) _solve(b, j);
for(j = 308020; j < 308030; j++) _solve(b, j);
for(j = 308860; j < 308870; j++) _solve(b, j);
for(j = 309700; j < 309710; j++) _solve(b, j);
for(j = 310540; j < 310550; j++) _solve(b, j);
for(j = 311380; j < 311390; j++) _solve(b, j);
for(j = 312220; j < 312230; j++) _solve(b, j);
for(j = 313060; j < 313070; j++) _solve(b, j);
for(j = 313900; j < 313910; j++) _solve(b, j);
for(j = 314740; j < 314750; j++) _solve(b, j);
for(j = 315580; j < 315590; j++) _solve(b, j);
for(j = 316420; j < 316430; j++) _solve(b, j);
for(j = 317260; j < 317270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 318100; j < 318110; j++) _solve(b, j);
for(j = 318940; j < 318950; j++) _solve(b, j);
for(j = 319780; j < 319790; j++) _solve(b, j);
for(j = 320620; j < 320630; j++) _solve(b, j);
for(j = 321460; j < 321470; j++) _solve(b, j);
for(j = 322300; j < 322310; j++) _solve(b, j);
for(j = 323140; j < 323150; j++) _solve(b, j);
for(j = 323980; j < 323990; j++) _solve(b, j);
for(j = 324820; j < 324830; j++) _solve(b, j);
for(j = 325660; j < 325670; j++) _solve(b, j);
for(j = 326500; j < 326510; j++) _solve(b, j);
for(j = 327340; j < 327350; j++) _solve(b, j);
for(j = 328180; j < 328190; j++) _solve(b, j);
for(j = 329020; j < 329030; j++) _solve(b, j);
for(j = 329860; j < 329870; j++) _solve(b, j);
for(j = 330700; j < 330710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 331540; j < 331550; j++) _solve(b, j);
for(j = 332380; j < 332390; j++) _solve(b, j);
for(j = 333220; j < 333230; j++) _solve(b, j);
for(j = 334060; j < 334070; j++) _solve(b, j);
for(j = 334900; j < 334910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 265190; j < 265200; j++) _solve(b, j);
for(j = 266030; j < 266040; j++) _solve(b, j);
for(j = 266870; j < 266880; j++) _solve(b, j);
for(j = 267710; j < 267720; j++) _solve(b, j);
for(j = 268550; j < 268560; j++) _solve(b, j);
for(j = 269390; j < 269400; j++) _solve(b, j);
for(j = 270230; j < 270240; j++) _solve(b, j);
for(j = 271070; j < 271080; j++) _solve(b, j);
for(j = 271910; j < 271920; j++) _solve(b, j);
for(j = 272750; j < 272760; j++) _solve(b, j);
for(j = 273590; j < 273600; j++) _solve(b, j);
for(j = 274430; j < 274440; j++) _solve(b, j);
for(j = 275270; j < 275280; j++) _solve(b, j);
for(j = 276110; j < 276120; j++) _solve(b, j);
for(j = 276950; j < 276960; j++) _solve(b, j);
for(j = 277790; j < 277800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 278630; j < 278640; j++) _solve(b, j);
for(j = 279470; j < 279480; j++) _solve(b, j);
for(j = 280310; j < 280320; j++) _solve(b, j);
for(j = 281150; j < 281160; j++) _solve(b, j);
for(j = 281990; j < 282000; j++) _solve(b, j);
for(j = 282830; j < 282840; j++) _solve(b, j);
for(j = 283670; j < 283680; j++) _solve(b, j);
for(j = 284510; j < 284520; j++) _solve(b, j);
for(j = 285350; j < 285360; j++) _solve(b, j);
for(j = 286190; j < 286200; j++) _solve(b, j);
for(j = 287030; j < 287040; j++) _solve(b, j);
for(j = 287870; j < 287880; j++) _solve(b, j);
for(j = 288710; j < 288720; j++) _solve(b, j);
for(j = 289550; j < 289560; j++) _solve(b, j);
for(j = 290390; j < 290400; j++) _solve(b, j);
for(j = 291230; j < 291240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 292070; j < 292080; j++) _solve(b, j);
for(j = 292910; j < 292920; j++) _solve(b, j);
for(j = 293750; j < 293760; j++) _solve(b, j);
for(j = 294590; j < 294600; j++) _solve(b, j);
for(j = 295430; j < 295440; j++) _solve(b, j);
for(j = 296270; j < 296280; j++) _solve(b, j);
for(j = 297110; j < 297120; j++) _solve(b, j);
for(j = 297950; j < 297960; j++) _solve(b, j);
for(j = 298790; j < 298800; j++) _solve(b, j);
for(j = 299630; j < 299640; j++) _solve(b, j);
for(j = 300470; j < 300480; j++) _solve(b, j);
for(j = 301310; j < 301320; j++) _solve(b, j);
for(j = 302150; j < 302160; j++) _solve(b, j);
for(j = 302990; j < 303000; j++) _solve(b, j);
for(j = 303830; j < 303840; j++) _solve(b, j);
for(j = 304670; j < 304680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 305510; j < 305520; j++) _solve(b, j);
for(j = 306350; j < 306360; j++) _solve(b, j);
for(j = 307190; j < 307200; j++) _solve(b, j);
for(j = 308030; j < 308040; j++) _solve(b, j);
for(j = 308870; j < 308880; j++) _solve(b, j);
for(j = 309710; j < 309720; j++) _solve(b, j);
for(j = 310550; j < 310560; j++) _solve(b, j);
for(j = 311390; j < 311400; j++) _solve(b, j);
for(j = 312230; j < 312240; j++) _solve(b, j);
for(j = 313070; j < 313080; j++) _solve(b, j);
for(j = 313910; j < 313920; j++) _solve(b, j);
for(j = 314750; j < 314760; j++) _solve(b, j);
for(j = 315590; j < 315600; j++) _solve(b, j);
for(j = 316430; j < 316440; j++) _solve(b, j);
for(j = 317270; j < 317280; j++) _solve(b, j);
for(j = 318110; j < 318120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 318950; j < 318960; j++) _solve(b, j);
for(j = 319790; j < 319800; j++) _solve(b, j);
for(j = 320630; j < 320640; j++) _solve(b, j);
for(j = 321470; j < 321480; j++) _solve(b, j);
for(j = 322310; j < 322320; j++) _solve(b, j);
for(j = 323150; j < 323160; j++) _solve(b, j);
for(j = 323990; j < 324000; j++) _solve(b, j);
for(j = 324830; j < 324840; j++) _solve(b, j);
for(j = 325670; j < 325680; j++) _solve(b, j);
for(j = 326510; j < 326520; j++) _solve(b, j);
for(j = 327350; j < 327360; j++) _solve(b, j);
for(j = 328190; j < 328200; j++) _solve(b, j);
for(j = 329030; j < 329040; j++) _solve(b, j);
for(j = 329870; j < 329880; j++) _solve(b, j);
for(j = 330710; j < 330720; j++) _solve(b, j);
for(j = 331550; j < 331560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 332390; j < 332400; j++) _solve(b, j);
for(j = 333230; j < 333240; j++) _solve(b, j);
for(j = 334070; j < 334080; j++) _solve(b, j);
for(j = 334910; j < 334920; j++) _solve(b, j);
for(j = 335750; j < 335760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 266040; j < 266050; j++) _solve(b, j);
for(j = 266880; j < 266890; j++) _solve(b, j);
for(j = 267720; j < 267730; j++) _solve(b, j);
for(j = 268560; j < 268570; j++) _solve(b, j);
for(j = 269400; j < 269410; j++) _solve(b, j);
for(j = 270240; j < 270250; j++) _solve(b, j);
for(j = 271080; j < 271090; j++) _solve(b, j);
for(j = 271920; j < 271930; j++) _solve(b, j);
for(j = 272760; j < 272770; j++) _solve(b, j);
for(j = 273600; j < 273610; j++) _solve(b, j);
for(j = 274440; j < 274450; j++) _solve(b, j);
for(j = 275280; j < 275290; j++) _solve(b, j);
for(j = 276120; j < 276130; j++) _solve(b, j);
for(j = 276960; j < 276970; j++) _solve(b, j);
for(j = 277800; j < 277810; j++) _solve(b, j);
for(j = 278640; j < 278650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 279480; j < 279490; j++) _solve(b, j);
for(j = 280320; j < 280330; j++) _solve(b, j);
for(j = 281160; j < 281170; j++) _solve(b, j);
for(j = 282000; j < 282010; j++) _solve(b, j);
for(j = 282840; j < 282850; j++) _solve(b, j);
for(j = 283680; j < 283690; j++) _solve(b, j);
for(j = 284520; j < 284530; j++) _solve(b, j);
for(j = 285360; j < 285370; j++) _solve(b, j);
for(j = 286200; j < 286210; j++) _solve(b, j);
for(j = 287040; j < 287050; j++) _solve(b, j);
for(j = 287880; j < 287890; j++) _solve(b, j);
for(j = 288720; j < 288730; j++) _solve(b, j);
for(j = 289560; j < 289570; j++) _solve(b, j);
for(j = 290400; j < 290410; j++) _solve(b, j);
for(j = 291240; j < 291250; j++) _solve(b, j);
for(j = 292080; j < 292090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 292920; j < 292930; j++) _solve(b, j);
for(j = 293760; j < 293770; j++) _solve(b, j);
for(j = 294600; j < 294610; j++) _solve(b, j);
for(j = 295440; j < 295450; j++) _solve(b, j);
for(j = 296280; j < 296290; j++) _solve(b, j);
for(j = 297120; j < 297130; j++) _solve(b, j);
for(j = 297960; j < 297970; j++) _solve(b, j);
for(j = 298800; j < 298810; j++) _solve(b, j);
for(j = 299640; j < 299650; j++) _solve(b, j);
for(j = 300480; j < 300490; j++) _solve(b, j);
for(j = 301320; j < 301330; j++) _solve(b, j);
for(j = 302160; j < 302170; j++) _solve(b, j);
for(j = 303000; j < 303010; j++) _solve(b, j);
for(j = 303840; j < 303850; j++) _solve(b, j);
for(j = 304680; j < 304690; j++) _solve(b, j);
for(j = 305520; j < 305530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 306360; j < 306370; j++) _solve(b, j);
for(j = 307200; j < 307210; j++) _solve(b, j);
for(j = 308040; j < 308050; j++) _solve(b, j);
for(j = 308880; j < 308890; j++) _solve(b, j);
for(j = 309720; j < 309730; j++) _solve(b, j);
for(j = 310560; j < 310570; j++) _solve(b, j);
for(j = 311400; j < 311410; j++) _solve(b, j);
for(j = 312240; j < 312250; j++) _solve(b, j);
for(j = 313080; j < 313090; j++) _solve(b, j);
for(j = 313920; j < 313930; j++) _solve(b, j);
for(j = 314760; j < 314770; j++) _solve(b, j);
for(j = 315600; j < 315610; j++) _solve(b, j);
for(j = 316440; j < 316450; j++) _solve(b, j);
for(j = 317280; j < 317290; j++) _solve(b, j);
for(j = 318120; j < 318130; j++) _solve(b, j);
for(j = 318960; j < 318970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 319800; j < 319810; j++) _solve(b, j);
for(j = 320640; j < 320650; j++) _solve(b, j);
for(j = 321480; j < 321490; j++) _solve(b, j);
for(j = 322320; j < 322330; j++) _solve(b, j);
for(j = 323160; j < 323170; j++) _solve(b, j);
for(j = 324000; j < 324010; j++) _solve(b, j);
for(j = 324840; j < 324850; j++) _solve(b, j);
for(j = 325680; j < 325690; j++) _solve(b, j);
for(j = 326520; j < 326530; j++) _solve(b, j);
for(j = 327360; j < 327370; j++) _solve(b, j);
for(j = 328200; j < 328210; j++) _solve(b, j);
for(j = 329040; j < 329050; j++) _solve(b, j);
for(j = 329880; j < 329890; j++) _solve(b, j);
for(j = 330720; j < 330730; j++) _solve(b, j);
for(j = 331560; j < 331570; j++) _solve(b, j);
for(j = 332400; j < 332410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 333240; j < 333250; j++) _solve(b, j);
for(j = 334080; j < 334090; j++) _solve(b, j);
for(j = 334920; j < 334930; j++) _solve(b, j);
for(j = 335760; j < 335770; j++) _solve(b, j);
for(j = 336600; j < 336610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 266890; j < 266900; j++) _solve(b, j);
for(j = 267730; j < 267740; j++) _solve(b, j);
for(j = 268570; j < 268580; j++) _solve(b, j);
for(j = 269410; j < 269420; j++) _solve(b, j);
for(j = 270250; j < 270260; j++) _solve(b, j);
for(j = 271090; j < 271100; j++) _solve(b, j);
for(j = 271930; j < 271940; j++) _solve(b, j);
for(j = 272770; j < 272780; j++) _solve(b, j);
for(j = 273610; j < 273620; j++) _solve(b, j);
for(j = 274450; j < 274460; j++) _solve(b, j);
for(j = 275290; j < 275300; j++) _solve(b, j);
for(j = 276130; j < 276140; j++) _solve(b, j);
for(j = 276970; j < 276980; j++) _solve(b, j);
for(j = 277810; j < 277820; j++) _solve(b, j);
for(j = 278650; j < 278660; j++) _solve(b, j);
for(j = 279490; j < 279500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 280330; j < 280340; j++) _solve(b, j);
for(j = 281170; j < 281180; j++) _solve(b, j);
for(j = 282010; j < 282020; j++) _solve(b, j);
for(j = 282850; j < 282860; j++) _solve(b, j);
for(j = 283690; j < 283700; j++) _solve(b, j);
for(j = 284530; j < 284540; j++) _solve(b, j);
for(j = 285370; j < 285380; j++) _solve(b, j);
for(j = 286210; j < 286220; j++) _solve(b, j);
for(j = 287050; j < 287060; j++) _solve(b, j);
for(j = 287890; j < 287900; j++) _solve(b, j);
for(j = 288730; j < 288740; j++) _solve(b, j);
for(j = 289570; j < 289580; j++) _solve(b, j);
for(j = 290410; j < 290420; j++) _solve(b, j);
for(j = 291250; j < 291260; j++) _solve(b, j);
for(j = 292090; j < 292100; j++) _solve(b, j);
for(j = 292930; j < 292940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 293770; j < 293780; j++) _solve(b, j);
for(j = 294610; j < 294620; j++) _solve(b, j);
for(j = 295450; j < 295460; j++) _solve(b, j);
for(j = 296290; j < 296300; j++) _solve(b, j);
for(j = 297130; j < 297140; j++) _solve(b, j);
for(j = 297970; j < 297980; j++) _solve(b, j);
for(j = 298810; j < 298820; j++) _solve(b, j);
for(j = 299650; j < 299660; j++) _solve(b, j);
for(j = 300490; j < 300500; j++) _solve(b, j);
for(j = 301330; j < 301340; j++) _solve(b, j);
for(j = 302170; j < 302180; j++) _solve(b, j);
for(j = 303010; j < 303020; j++) _solve(b, j);
for(j = 303850; j < 303860; j++) _solve(b, j);
for(j = 304690; j < 304700; j++) _solve(b, j);
for(j = 305530; j < 305540; j++) _solve(b, j);
for(j = 306370; j < 306380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 307210; j < 307220; j++) _solve(b, j);
for(j = 308050; j < 308060; j++) _solve(b, j);
for(j = 308890; j < 308900; j++) _solve(b, j);
for(j = 309730; j < 309740; j++) _solve(b, j);
for(j = 310570; j < 310580; j++) _solve(b, j);
for(j = 311410; j < 311420; j++) _solve(b, j);
for(j = 312250; j < 312260; j++) _solve(b, j);
for(j = 313090; j < 313100; j++) _solve(b, j);
for(j = 313930; j < 313940; j++) _solve(b, j);
for(j = 314770; j < 314780; j++) _solve(b, j);
for(j = 315610; j < 315620; j++) _solve(b, j);
for(j = 316450; j < 316460; j++) _solve(b, j);
for(j = 317290; j < 317300; j++) _solve(b, j);
for(j = 318130; j < 318140; j++) _solve(b, j);
for(j = 318970; j < 318980; j++) _solve(b, j);
for(j = 319810; j < 319820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 320650; j < 320660; j++) _solve(b, j);
for(j = 321490; j < 321500; j++) _solve(b, j);
for(j = 322330; j < 322340; j++) _solve(b, j);
for(j = 323170; j < 323180; j++) _solve(b, j);
for(j = 324010; j < 324020; j++) _solve(b, j);
for(j = 324850; j < 324860; j++) _solve(b, j);
for(j = 325690; j < 325700; j++) _solve(b, j);
for(j = 326530; j < 326540; j++) _solve(b, j);
for(j = 327370; j < 327380; j++) _solve(b, j);
for(j = 328210; j < 328220; j++) _solve(b, j);
for(j = 329050; j < 329060; j++) _solve(b, j);
for(j = 329890; j < 329900; j++) _solve(b, j);
for(j = 330730; j < 330740; j++) _solve(b, j);
for(j = 331570; j < 331580; j++) _solve(b, j);
for(j = 332410; j < 332420; j++) _solve(b, j);
for(j = 333250; j < 333260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 334090; j < 334100; j++) _solve(b, j);
for(j = 334930; j < 334940; j++) _solve(b, j);
for(j = 335770; j < 335780; j++) _solve(b, j);
for(j = 336610; j < 336620; j++) _solve(b, j);
for(j = 337450; j < 337460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 267740; j < 267750; j++) _solve(b, j);
for(j = 268580; j < 268590; j++) _solve(b, j);
for(j = 269420; j < 269430; j++) _solve(b, j);
for(j = 270260; j < 270270; j++) _solve(b, j);
for(j = 271100; j < 271110; j++) _solve(b, j);
for(j = 271940; j < 271950; j++) _solve(b, j);
for(j = 272780; j < 272790; j++) _solve(b, j);
for(j = 273620; j < 273630; j++) _solve(b, j);
for(j = 274460; j < 274470; j++) _solve(b, j);
for(j = 275300; j < 275310; j++) _solve(b, j);
for(j = 276140; j < 276150; j++) _solve(b, j);
for(j = 276980; j < 276990; j++) _solve(b, j);
for(j = 277820; j < 277830; j++) _solve(b, j);
for(j = 278660; j < 278670; j++) _solve(b, j);
for(j = 279500; j < 279510; j++) _solve(b, j);
for(j = 280340; j < 280350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 281180; j < 281190; j++) _solve(b, j);
for(j = 282020; j < 282030; j++) _solve(b, j);
for(j = 282860; j < 282870; j++) _solve(b, j);
for(j = 283700; j < 283710; j++) _solve(b, j);
for(j = 284540; j < 284550; j++) _solve(b, j);
for(j = 285380; j < 285390; j++) _solve(b, j);
for(j = 286220; j < 286230; j++) _solve(b, j);
for(j = 287060; j < 287070; j++) _solve(b, j);
for(j = 287900; j < 287910; j++) _solve(b, j);
for(j = 288740; j < 288750; j++) _solve(b, j);
for(j = 289580; j < 289590; j++) _solve(b, j);
for(j = 290420; j < 290430; j++) _solve(b, j);
for(j = 291260; j < 291270; j++) _solve(b, j);
for(j = 292100; j < 292110; j++) _solve(b, j);
for(j = 292940; j < 292950; j++) _solve(b, j);
for(j = 293780; j < 293790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 294620; j < 294630; j++) _solve(b, j);
for(j = 295460; j < 295470; j++) _solve(b, j);
for(j = 296300; j < 296310; j++) _solve(b, j);
for(j = 297140; j < 297150; j++) _solve(b, j);
for(j = 297980; j < 297990; j++) _solve(b, j);
for(j = 298820; j < 298830; j++) _solve(b, j);
for(j = 299660; j < 299670; j++) _solve(b, j);
for(j = 300500; j < 300510; j++) _solve(b, j);
for(j = 301340; j < 301350; j++) _solve(b, j);
for(j = 302180; j < 302190; j++) _solve(b, j);
for(j = 303020; j < 303030; j++) _solve(b, j);
for(j = 303860; j < 303870; j++) _solve(b, j);
for(j = 304700; j < 304710; j++) _solve(b, j);
for(j = 305540; j < 305550; j++) _solve(b, j);
for(j = 306380; j < 306390; j++) _solve(b, j);
for(j = 307220; j < 307230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 308060; j < 308070; j++) _solve(b, j);
for(j = 308900; j < 308910; j++) _solve(b, j);
for(j = 309740; j < 309750; j++) _solve(b, j);
for(j = 310580; j < 310590; j++) _solve(b, j);
for(j = 311420; j < 311430; j++) _solve(b, j);
for(j = 312260; j < 312270; j++) _solve(b, j);
for(j = 313100; j < 313110; j++) _solve(b, j);
for(j = 313940; j < 313950; j++) _solve(b, j);
for(j = 314780; j < 314790; j++) _solve(b, j);
for(j = 315620; j < 315630; j++) _solve(b, j);
for(j = 316460; j < 316470; j++) _solve(b, j);
for(j = 317300; j < 317310; j++) _solve(b, j);
for(j = 318140; j < 318150; j++) _solve(b, j);
for(j = 318980; j < 318990; j++) _solve(b, j);
for(j = 319820; j < 319830; j++) _solve(b, j);
for(j = 320660; j < 320670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 321500; j < 321510; j++) _solve(b, j);
for(j = 322340; j < 322350; j++) _solve(b, j);
for(j = 323180; j < 323190; j++) _solve(b, j);
for(j = 324020; j < 324030; j++) _solve(b, j);
for(j = 324860; j < 324870; j++) _solve(b, j);
for(j = 325700; j < 325710; j++) _solve(b, j);
for(j = 326540; j < 326550; j++) _solve(b, j);
for(j = 327380; j < 327390; j++) _solve(b, j);
for(j = 328220; j < 328230; j++) _solve(b, j);
for(j = 329060; j < 329070; j++) _solve(b, j);
for(j = 329900; j < 329910; j++) _solve(b, j);
for(j = 330740; j < 330750; j++) _solve(b, j);
for(j = 331580; j < 331590; j++) _solve(b, j);
for(j = 332420; j < 332430; j++) _solve(b, j);
for(j = 333260; j < 333270; j++) _solve(b, j);
for(j = 334100; j < 334110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 334940; j < 334950; j++) _solve(b, j);
for(j = 335780; j < 335790; j++) _solve(b, j);
for(j = 336620; j < 336630; j++) _solve(b, j);
for(j = 337460; j < 337470; j++) _solve(b, j);
for(j = 338300; j < 338310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 268590; j < 268600; j++) _solve(b, j);
for(j = 269430; j < 269440; j++) _solve(b, j);
for(j = 270270; j < 270280; j++) _solve(b, j);
for(j = 271110; j < 271120; j++) _solve(b, j);
for(j = 271950; j < 271960; j++) _solve(b, j);
for(j = 272790; j < 272800; j++) _solve(b, j);
for(j = 273630; j < 273640; j++) _solve(b, j);
for(j = 274470; j < 274480; j++) _solve(b, j);
for(j = 275310; j < 275320; j++) _solve(b, j);
for(j = 276150; j < 276160; j++) _solve(b, j);
for(j = 276990; j < 277000; j++) _solve(b, j);
for(j = 277830; j < 277840; j++) _solve(b, j);
for(j = 278670; j < 278680; j++) _solve(b, j);
for(j = 279510; j < 279520; j++) _solve(b, j);
for(j = 280350; j < 280360; j++) _solve(b, j);
for(j = 281190; j < 281200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 282030; j < 282040; j++) _solve(b, j);
for(j = 282870; j < 282880; j++) _solve(b, j);
for(j = 283710; j < 283720; j++) _solve(b, j);
for(j = 284550; j < 284560; j++) _solve(b, j);
for(j = 285390; j < 285400; j++) _solve(b, j);
for(j = 286230; j < 286240; j++) _solve(b, j);
for(j = 287070; j < 287080; j++) _solve(b, j);
for(j = 287910; j < 287920; j++) _solve(b, j);
for(j = 288750; j < 288760; j++) _solve(b, j);
for(j = 289590; j < 289600; j++) _solve(b, j);
for(j = 290430; j < 290440; j++) _solve(b, j);
for(j = 291270; j < 291280; j++) _solve(b, j);
for(j = 292110; j < 292120; j++) _solve(b, j);
for(j = 292950; j < 292960; j++) _solve(b, j);
for(j = 293790; j < 293800; j++) _solve(b, j);
for(j = 294630; j < 294640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 295470; j < 295480; j++) _solve(b, j);
for(j = 296310; j < 296320; j++) _solve(b, j);
for(j = 297150; j < 297160; j++) _solve(b, j);
for(j = 297990; j < 298000; j++) _solve(b, j);
for(j = 298830; j < 298840; j++) _solve(b, j);
for(j = 299670; j < 299680; j++) _solve(b, j);
for(j = 300510; j < 300520; j++) _solve(b, j);
for(j = 301350; j < 301360; j++) _solve(b, j);
for(j = 302190; j < 302200; j++) _solve(b, j);
for(j = 303030; j < 303040; j++) _solve(b, j);
for(j = 303870; j < 303880; j++) _solve(b, j);
for(j = 304710; j < 304720; j++) _solve(b, j);
for(j = 305550; j < 305560; j++) _solve(b, j);
for(j = 306390; j < 306400; j++) _solve(b, j);
for(j = 307230; j < 307240; j++) _solve(b, j);
for(j = 308070; j < 308080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 308910; j < 308920; j++) _solve(b, j);
for(j = 309750; j < 309760; j++) _solve(b, j);
for(j = 310590; j < 310600; j++) _solve(b, j);
for(j = 311430; j < 311440; j++) _solve(b, j);
for(j = 312270; j < 312280; j++) _solve(b, j);
for(j = 313110; j < 313120; j++) _solve(b, j);
for(j = 313950; j < 313960; j++) _solve(b, j);
for(j = 314790; j < 314800; j++) _solve(b, j);
for(j = 315630; j < 315640; j++) _solve(b, j);
for(j = 316470; j < 316480; j++) _solve(b, j);
for(j = 317310; j < 317320; j++) _solve(b, j);
for(j = 318150; j < 318160; j++) _solve(b, j);
for(j = 318990; j < 319000; j++) _solve(b, j);
for(j = 319830; j < 319840; j++) _solve(b, j);
for(j = 320670; j < 320680; j++) _solve(b, j);
for(j = 321510; j < 321520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 322350; j < 322360; j++) _solve(b, j);
for(j = 323190; j < 323200; j++) _solve(b, j);
for(j = 324030; j < 324040; j++) _solve(b, j);
for(j = 324870; j < 324880; j++) _solve(b, j);
for(j = 325710; j < 325720; j++) _solve(b, j);
for(j = 326550; j < 326560; j++) _solve(b, j);
for(j = 327390; j < 327400; j++) _solve(b, j);
for(j = 328230; j < 328240; j++) _solve(b, j);
for(j = 329070; j < 329080; j++) _solve(b, j);
for(j = 329910; j < 329920; j++) _solve(b, j);
for(j = 330750; j < 330760; j++) _solve(b, j);
for(j = 331590; j < 331600; j++) _solve(b, j);
for(j = 332430; j < 332440; j++) _solve(b, j);
for(j = 333270; j < 333280; j++) _solve(b, j);
for(j = 334110; j < 334120; j++) _solve(b, j);
for(j = 334950; j < 334960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 335790; j < 335800; j++) _solve(b, j);
for(j = 336630; j < 336640; j++) _solve(b, j);
for(j = 337470; j < 337480; j++) _solve(b, j);
for(j = 338310; j < 338320; j++) _solve(b, j);
for(j = 339150; j < 339160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 269440; j < 269450; j++) _solve(b, j);
for(j = 270280; j < 270290; j++) _solve(b, j);
for(j = 271120; j < 271130; j++) _solve(b, j);
for(j = 271960; j < 271970; j++) _solve(b, j);
for(j = 272800; j < 272810; j++) _solve(b, j);
for(j = 273640; j < 273650; j++) _solve(b, j);
for(j = 274480; j < 274490; j++) _solve(b, j);
for(j = 275320; j < 275330; j++) _solve(b, j);
for(j = 276160; j < 276170; j++) _solve(b, j);
for(j = 277000; j < 277010; j++) _solve(b, j);
for(j = 277840; j < 277850; j++) _solve(b, j);
for(j = 278680; j < 278690; j++) _solve(b, j);
for(j = 279520; j < 279530; j++) _solve(b, j);
for(j = 280360; j < 280370; j++) _solve(b, j);
for(j = 281200; j < 281210; j++) _solve(b, j);
for(j = 282040; j < 282050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 282880; j < 282890; j++) _solve(b, j);
for(j = 283720; j < 283730; j++) _solve(b, j);
for(j = 284560; j < 284570; j++) _solve(b, j);
for(j = 285400; j < 285410; j++) _solve(b, j);
for(j = 286240; j < 286250; j++) _solve(b, j);
for(j = 287080; j < 287090; j++) _solve(b, j);
for(j = 287920; j < 287930; j++) _solve(b, j);
for(j = 288760; j < 288770; j++) _solve(b, j);
for(j = 289600; j < 289610; j++) _solve(b, j);
for(j = 290440; j < 290450; j++) _solve(b, j);
for(j = 291280; j < 291290; j++) _solve(b, j);
for(j = 292120; j < 292130; j++) _solve(b, j);
for(j = 292960; j < 292970; j++) _solve(b, j);
for(j = 293800; j < 293810; j++) _solve(b, j);
for(j = 294640; j < 294650; j++) _solve(b, j);
for(j = 295480; j < 295490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 296320; j < 296330; j++) _solve(b, j);
for(j = 297160; j < 297170; j++) _solve(b, j);
for(j = 298000; j < 298010; j++) _solve(b, j);
for(j = 298840; j < 298850; j++) _solve(b, j);
for(j = 299680; j < 299690; j++) _solve(b, j);
for(j = 300520; j < 300530; j++) _solve(b, j);
for(j = 301360; j < 301370; j++) _solve(b, j);
for(j = 302200; j < 302210; j++) _solve(b, j);
for(j = 303040; j < 303050; j++) _solve(b, j);
for(j = 303880; j < 303890; j++) _solve(b, j);
for(j = 304720; j < 304730; j++) _solve(b, j);
for(j = 305560; j < 305570; j++) _solve(b, j);
for(j = 306400; j < 306410; j++) _solve(b, j);
for(j = 307240; j < 307250; j++) _solve(b, j);
for(j = 308080; j < 308090; j++) _solve(b, j);
for(j = 308920; j < 308930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 309760; j < 309770; j++) _solve(b, j);
for(j = 310600; j < 310610; j++) _solve(b, j);
for(j = 311440; j < 311450; j++) _solve(b, j);
for(j = 312280; j < 312290; j++) _solve(b, j);
for(j = 313120; j < 313130; j++) _solve(b, j);
for(j = 313960; j < 313970; j++) _solve(b, j);
for(j = 314800; j < 314810; j++) _solve(b, j);
for(j = 315640; j < 315650; j++) _solve(b, j);
for(j = 316480; j < 316490; j++) _solve(b, j);
for(j = 317320; j < 317330; j++) _solve(b, j);
for(j = 318160; j < 318170; j++) _solve(b, j);
for(j = 319000; j < 319010; j++) _solve(b, j);
for(j = 319840; j < 319850; j++) _solve(b, j);
for(j = 320680; j < 320690; j++) _solve(b, j);
for(j = 321520; j < 321530; j++) _solve(b, j);
for(j = 322360; j < 322370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 323200; j < 323210; j++) _solve(b, j);
for(j = 324040; j < 324050; j++) _solve(b, j);
for(j = 324880; j < 324890; j++) _solve(b, j);
for(j = 325720; j < 325730; j++) _solve(b, j);
for(j = 326560; j < 326570; j++) _solve(b, j);
for(j = 327400; j < 327410; j++) _solve(b, j);
for(j = 328240; j < 328250; j++) _solve(b, j);
for(j = 329080; j < 329090; j++) _solve(b, j);
for(j = 329920; j < 329930; j++) _solve(b, j);
for(j = 330760; j < 330770; j++) _solve(b, j);
for(j = 331600; j < 331610; j++) _solve(b, j);
for(j = 332440; j < 332450; j++) _solve(b, j);
for(j = 333280; j < 333290; j++) _solve(b, j);
for(j = 334120; j < 334130; j++) _solve(b, j);
for(j = 334960; j < 334970; j++) _solve(b, j);
for(j = 335800; j < 335810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 336640; j < 336650; j++) _solve(b, j);
for(j = 337480; j < 337490; j++) _solve(b, j);
for(j = 338320; j < 338330; j++) _solve(b, j);
for(j = 339160; j < 339170; j++) _solve(b, j);
for(j = 340000; j < 340010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 270290; j < 270300; j++) _solve(b, j);
for(j = 271130; j < 271140; j++) _solve(b, j);
for(j = 271970; j < 271980; j++) _solve(b, j);
for(j = 272810; j < 272820; j++) _solve(b, j);
for(j = 273650; j < 273660; j++) _solve(b, j);
for(j = 274490; j < 274500; j++) _solve(b, j);
for(j = 275330; j < 275340; j++) _solve(b, j);
for(j = 276170; j < 276180; j++) _solve(b, j);
for(j = 277010; j < 277020; j++) _solve(b, j);
for(j = 277850; j < 277860; j++) _solve(b, j);
for(j = 278690; j < 278700; j++) _solve(b, j);
for(j = 279530; j < 279540; j++) _solve(b, j);
for(j = 280370; j < 280380; j++) _solve(b, j);
for(j = 281210; j < 281220; j++) _solve(b, j);
for(j = 282050; j < 282060; j++) _solve(b, j);
for(j = 282890; j < 282900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 283730; j < 283740; j++) _solve(b, j);
for(j = 284570; j < 284580; j++) _solve(b, j);
for(j = 285410; j < 285420; j++) _solve(b, j);
for(j = 286250; j < 286260; j++) _solve(b, j);
for(j = 287090; j < 287100; j++) _solve(b, j);
for(j = 287930; j < 287940; j++) _solve(b, j);
for(j = 288770; j < 288780; j++) _solve(b, j);
for(j = 289610; j < 289620; j++) _solve(b, j);
for(j = 290450; j < 290460; j++) _solve(b, j);
for(j = 291290; j < 291300; j++) _solve(b, j);
for(j = 292130; j < 292140; j++) _solve(b, j);
for(j = 292970; j < 292980; j++) _solve(b, j);
for(j = 293810; j < 293820; j++) _solve(b, j);
for(j = 294650; j < 294660; j++) _solve(b, j);
for(j = 295490; j < 295500; j++) _solve(b, j);
for(j = 296330; j < 296340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 297170; j < 297180; j++) _solve(b, j);
for(j = 298010; j < 298020; j++) _solve(b, j);
for(j = 298850; j < 298860; j++) _solve(b, j);
for(j = 299690; j < 299700; j++) _solve(b, j);
for(j = 300530; j < 300540; j++) _solve(b, j);
for(j = 301370; j < 301380; j++) _solve(b, j);
for(j = 302210; j < 302220; j++) _solve(b, j);
for(j = 303050; j < 303060; j++) _solve(b, j);
for(j = 303890; j < 303900; j++) _solve(b, j);
for(j = 304730; j < 304740; j++) _solve(b, j);
for(j = 305570; j < 305580; j++) _solve(b, j);
for(j = 306410; j < 306420; j++) _solve(b, j);
for(j = 307250; j < 307260; j++) _solve(b, j);
for(j = 308090; j < 308100; j++) _solve(b, j);
for(j = 308930; j < 308940; j++) _solve(b, j);
for(j = 309770; j < 309780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 310610; j < 310620; j++) _solve(b, j);
for(j = 311450; j < 311460; j++) _solve(b, j);
for(j = 312290; j < 312300; j++) _solve(b, j);
for(j = 313130; j < 313140; j++) _solve(b, j);
for(j = 313970; j < 313980; j++) _solve(b, j);
for(j = 314810; j < 314820; j++) _solve(b, j);
for(j = 315650; j < 315660; j++) _solve(b, j);
for(j = 316490; j < 316500; j++) _solve(b, j);
for(j = 317330; j < 317340; j++) _solve(b, j);
for(j = 318170; j < 318180; j++) _solve(b, j);
for(j = 319010; j < 319020; j++) _solve(b, j);
for(j = 319850; j < 319860; j++) _solve(b, j);
for(j = 320690; j < 320700; j++) _solve(b, j);
for(j = 321530; j < 321540; j++) _solve(b, j);
for(j = 322370; j < 322380; j++) _solve(b, j);
for(j = 323210; j < 323220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 324050; j < 324060; j++) _solve(b, j);
for(j = 324890; j < 324900; j++) _solve(b, j);
for(j = 325730; j < 325740; j++) _solve(b, j);
for(j = 326570; j < 326580; j++) _solve(b, j);
for(j = 327410; j < 327420; j++) _solve(b, j);
for(j = 328250; j < 328260; j++) _solve(b, j);
for(j = 329090; j < 329100; j++) _solve(b, j);
for(j = 329930; j < 329940; j++) _solve(b, j);
for(j = 330770; j < 330780; j++) _solve(b, j);
for(j = 331610; j < 331620; j++) _solve(b, j);
for(j = 332450; j < 332460; j++) _solve(b, j);
for(j = 333290; j < 333300; j++) _solve(b, j);
for(j = 334130; j < 334140; j++) _solve(b, j);
for(j = 334970; j < 334980; j++) _solve(b, j);
for(j = 335810; j < 335820; j++) _solve(b, j);
for(j = 336650; j < 336660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 337490; j < 337500; j++) _solve(b, j);
for(j = 338330; j < 338340; j++) _solve(b, j);
for(j = 339170; j < 339180; j++) _solve(b, j);
for(j = 340010; j < 340020; j++) _solve(b, j);
for(j = 340850; j < 340860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 271140; j < 271150; j++) _solve(b, j);
for(j = 271980; j < 271990; j++) _solve(b, j);
for(j = 272820; j < 272830; j++) _solve(b, j);
for(j = 273660; j < 273670; j++) _solve(b, j);
for(j = 274500; j < 274510; j++) _solve(b, j);
for(j = 275340; j < 275350; j++) _solve(b, j);
for(j = 276180; j < 276190; j++) _solve(b, j);
for(j = 277020; j < 277030; j++) _solve(b, j);
for(j = 277860; j < 277870; j++) _solve(b, j);
for(j = 278700; j < 278710; j++) _solve(b, j);
for(j = 279540; j < 279550; j++) _solve(b, j);
for(j = 280380; j < 280390; j++) _solve(b, j);
for(j = 281220; j < 281230; j++) _solve(b, j);
for(j = 282060; j < 282070; j++) _solve(b, j);
for(j = 282900; j < 282910; j++) _solve(b, j);
for(j = 283740; j < 283750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 284580; j < 284590; j++) _solve(b, j);
for(j = 285420; j < 285430; j++) _solve(b, j);
for(j = 286260; j < 286270; j++) _solve(b, j);
for(j = 287100; j < 287110; j++) _solve(b, j);
for(j = 287940; j < 287950; j++) _solve(b, j);
for(j = 288780; j < 288790; j++) _solve(b, j);
for(j = 289620; j < 289630; j++) _solve(b, j);
for(j = 290460; j < 290470; j++) _solve(b, j);
for(j = 291300; j < 291310; j++) _solve(b, j);
for(j = 292140; j < 292150; j++) _solve(b, j);
for(j = 292980; j < 292990; j++) _solve(b, j);
for(j = 293820; j < 293830; j++) _solve(b, j);
for(j = 294660; j < 294670; j++) _solve(b, j);
for(j = 295500; j < 295510; j++) _solve(b, j);
for(j = 296340; j < 296350; j++) _solve(b, j);
for(j = 297180; j < 297190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 298020; j < 298030; j++) _solve(b, j);
for(j = 298860; j < 298870; j++) _solve(b, j);
for(j = 299700; j < 299710; j++) _solve(b, j);
for(j = 300540; j < 300550; j++) _solve(b, j);
for(j = 301380; j < 301390; j++) _solve(b, j);
for(j = 302220; j < 302230; j++) _solve(b, j);
for(j = 303060; j < 303070; j++) _solve(b, j);
for(j = 303900; j < 303910; j++) _solve(b, j);
for(j = 304740; j < 304750; j++) _solve(b, j);
for(j = 305580; j < 305590; j++) _solve(b, j);
for(j = 306420; j < 306430; j++) _solve(b, j);
for(j = 307260; j < 307270; j++) _solve(b, j);
for(j = 308100; j < 308110; j++) _solve(b, j);
for(j = 308940; j < 308950; j++) _solve(b, j);
for(j = 309780; j < 309790; j++) _solve(b, j);
for(j = 310620; j < 310630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 311460; j < 311470; j++) _solve(b, j);
for(j = 312300; j < 312310; j++) _solve(b, j);
for(j = 313140; j < 313150; j++) _solve(b, j);
for(j = 313980; j < 313990; j++) _solve(b, j);
for(j = 314820; j < 314830; j++) _solve(b, j);
for(j = 315660; j < 315670; j++) _solve(b, j);
for(j = 316500; j < 316510; j++) _solve(b, j);
for(j = 317340; j < 317350; j++) _solve(b, j);
for(j = 318180; j < 318190; j++) _solve(b, j);
for(j = 319020; j < 319030; j++) _solve(b, j);
for(j = 319860; j < 319870; j++) _solve(b, j);
for(j = 320700; j < 320710; j++) _solve(b, j);
for(j = 321540; j < 321550; j++) _solve(b, j);
for(j = 322380; j < 322390; j++) _solve(b, j);
for(j = 323220; j < 323230; j++) _solve(b, j);
for(j = 324060; j < 324070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 324900; j < 324910; j++) _solve(b, j);
for(j = 325740; j < 325750; j++) _solve(b, j);
for(j = 326580; j < 326590; j++) _solve(b, j);
for(j = 327420; j < 327430; j++) _solve(b, j);
for(j = 328260; j < 328270; j++) _solve(b, j);
for(j = 329100; j < 329110; j++) _solve(b, j);
for(j = 329940; j < 329950; j++) _solve(b, j);
for(j = 330780; j < 330790; j++) _solve(b, j);
for(j = 331620; j < 331630; j++) _solve(b, j);
for(j = 332460; j < 332470; j++) _solve(b, j);
for(j = 333300; j < 333310; j++) _solve(b, j);
for(j = 334140; j < 334150; j++) _solve(b, j);
for(j = 334980; j < 334990; j++) _solve(b, j);
for(j = 335820; j < 335830; j++) _solve(b, j);
for(j = 336660; j < 336670; j++) _solve(b, j);
for(j = 337500; j < 337510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 338340; j < 338350; j++) _solve(b, j);
for(j = 339180; j < 339190; j++) _solve(b, j);
for(j = 340020; j < 340030; j++) _solve(b, j);
for(j = 340860; j < 340870; j++) _solve(b, j);
for(j = 341700; j < 341710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 271990; j < 272000; j++) _solve(b, j);
for(j = 272830; j < 272840; j++) _solve(b, j);
for(j = 273670; j < 273680; j++) _solve(b, j);
for(j = 274510; j < 274520; j++) _solve(b, j);
for(j = 275350; j < 275360; j++) _solve(b, j);
for(j = 276190; j < 276200; j++) _solve(b, j);
for(j = 277030; j < 277040; j++) _solve(b, j);
for(j = 277870; j < 277880; j++) _solve(b, j);
for(j = 278710; j < 278720; j++) _solve(b, j);
for(j = 279550; j < 279560; j++) _solve(b, j);
for(j = 280390; j < 280400; j++) _solve(b, j);
for(j = 281230; j < 281240; j++) _solve(b, j);
for(j = 282070; j < 282080; j++) _solve(b, j);
for(j = 282910; j < 282920; j++) _solve(b, j);
for(j = 283750; j < 283760; j++) _solve(b, j);
for(j = 284590; j < 284600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 285430; j < 285440; j++) _solve(b, j);
for(j = 286270; j < 286280; j++) _solve(b, j);
for(j = 287110; j < 287120; j++) _solve(b, j);
for(j = 287950; j < 287960; j++) _solve(b, j);
for(j = 288790; j < 288800; j++) _solve(b, j);
for(j = 289630; j < 289640; j++) _solve(b, j);
for(j = 290470; j < 290480; j++) _solve(b, j);
for(j = 291310; j < 291320; j++) _solve(b, j);
for(j = 292150; j < 292160; j++) _solve(b, j);
for(j = 292990; j < 293000; j++) _solve(b, j);
for(j = 293830; j < 293840; j++) _solve(b, j);
for(j = 294670; j < 294680; j++) _solve(b, j);
for(j = 295510; j < 295520; j++) _solve(b, j);
for(j = 296350; j < 296360; j++) _solve(b, j);
for(j = 297190; j < 297200; j++) _solve(b, j);
for(j = 298030; j < 298040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 298870; j < 298880; j++) _solve(b, j);
for(j = 299710; j < 299720; j++) _solve(b, j);
for(j = 300550; j < 300560; j++) _solve(b, j);
for(j = 301390; j < 301400; j++) _solve(b, j);
for(j = 302230; j < 302240; j++) _solve(b, j);
for(j = 303070; j < 303080; j++) _solve(b, j);
for(j = 303910; j < 303920; j++) _solve(b, j);
for(j = 304750; j < 304760; j++) _solve(b, j);
for(j = 305590; j < 305600; j++) _solve(b, j);
for(j = 306430; j < 306440; j++) _solve(b, j);
for(j = 307270; j < 307280; j++) _solve(b, j);
for(j = 308110; j < 308120; j++) _solve(b, j);
for(j = 308950; j < 308960; j++) _solve(b, j);
for(j = 309790; j < 309800; j++) _solve(b, j);
for(j = 310630; j < 310640; j++) _solve(b, j);
for(j = 311470; j < 311480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 312310; j < 312320; j++) _solve(b, j);
for(j = 313150; j < 313160; j++) _solve(b, j);
for(j = 313990; j < 314000; j++) _solve(b, j);
for(j = 314830; j < 314840; j++) _solve(b, j);
for(j = 315670; j < 315680; j++) _solve(b, j);
for(j = 316510; j < 316520; j++) _solve(b, j);
for(j = 317350; j < 317360; j++) _solve(b, j);
for(j = 318190; j < 318200; j++) _solve(b, j);
for(j = 319030; j < 319040; j++) _solve(b, j);
for(j = 319870; j < 319880; j++) _solve(b, j);
for(j = 320710; j < 320720; j++) _solve(b, j);
for(j = 321550; j < 321560; j++) _solve(b, j);
for(j = 322390; j < 322400; j++) _solve(b, j);
for(j = 323230; j < 323240; j++) _solve(b, j);
for(j = 324070; j < 324080; j++) _solve(b, j);
for(j = 324910; j < 324920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 325750; j < 325760; j++) _solve(b, j);
for(j = 326590; j < 326600; j++) _solve(b, j);
for(j = 327430; j < 327440; j++) _solve(b, j);
for(j = 328270; j < 328280; j++) _solve(b, j);
for(j = 329110; j < 329120; j++) _solve(b, j);
for(j = 329950; j < 329960; j++) _solve(b, j);
for(j = 330790; j < 330800; j++) _solve(b, j);
for(j = 331630; j < 331640; j++) _solve(b, j);
for(j = 332470; j < 332480; j++) _solve(b, j);
for(j = 333310; j < 333320; j++) _solve(b, j);
for(j = 334150; j < 334160; j++) _solve(b, j);
for(j = 334990; j < 335000; j++) _solve(b, j);
for(j = 335830; j < 335840; j++) _solve(b, j);
for(j = 336670; j < 336680; j++) _solve(b, j);
for(j = 337510; j < 337520; j++) _solve(b, j);
for(j = 338350; j < 338360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 339190; j < 339200; j++) _solve(b, j);
for(j = 340030; j < 340040; j++) _solve(b, j);
for(j = 340870; j < 340880; j++) _solve(b, j);
for(j = 341710; j < 341720; j++) _solve(b, j);
for(j = 342550; j < 342560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 272840; j < 272850; j++) _solve(b, j);
for(j = 273680; j < 273690; j++) _solve(b, j);
for(j = 274520; j < 274530; j++) _solve(b, j);
for(j = 275360; j < 275370; j++) _solve(b, j);
for(j = 276200; j < 276210; j++) _solve(b, j);
for(j = 277040; j < 277050; j++) _solve(b, j);
for(j = 277880; j < 277890; j++) _solve(b, j);
for(j = 278720; j < 278730; j++) _solve(b, j);
for(j = 279560; j < 279570; j++) _solve(b, j);
for(j = 280400; j < 280410; j++) _solve(b, j);
for(j = 281240; j < 281250; j++) _solve(b, j);
for(j = 282080; j < 282090; j++) _solve(b, j);
for(j = 282920; j < 282930; j++) _solve(b, j);
for(j = 283760; j < 283770; j++) _solve(b, j);
for(j = 284600; j < 284610; j++) _solve(b, j);
for(j = 285440; j < 285450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 286280; j < 286290; j++) _solve(b, j);
for(j = 287120; j < 287130; j++) _solve(b, j);
for(j = 287960; j < 287970; j++) _solve(b, j);
for(j = 288800; j < 288810; j++) _solve(b, j);
for(j = 289640; j < 289650; j++) _solve(b, j);
for(j = 290480; j < 290490; j++) _solve(b, j);
for(j = 291320; j < 291330; j++) _solve(b, j);
for(j = 292160; j < 292170; j++) _solve(b, j);
for(j = 293000; j < 293010; j++) _solve(b, j);
for(j = 293840; j < 293850; j++) _solve(b, j);
for(j = 294680; j < 294690; j++) _solve(b, j);
for(j = 295520; j < 295530; j++) _solve(b, j);
for(j = 296360; j < 296370; j++) _solve(b, j);
for(j = 297200; j < 297210; j++) _solve(b, j);
for(j = 298040; j < 298050; j++) _solve(b, j);
for(j = 298880; j < 298890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 299720; j < 299730; j++) _solve(b, j);
for(j = 300560; j < 300570; j++) _solve(b, j);
for(j = 301400; j < 301410; j++) _solve(b, j);
for(j = 302240; j < 302250; j++) _solve(b, j);
for(j = 303080; j < 303090; j++) _solve(b, j);
for(j = 303920; j < 303930; j++) _solve(b, j);
for(j = 304760; j < 304770; j++) _solve(b, j);
for(j = 305600; j < 305610; j++) _solve(b, j);
for(j = 306440; j < 306450; j++) _solve(b, j);
for(j = 307280; j < 307290; j++) _solve(b, j);
for(j = 308120; j < 308130; j++) _solve(b, j);
for(j = 308960; j < 308970; j++) _solve(b, j);
for(j = 309800; j < 309810; j++) _solve(b, j);
for(j = 310640; j < 310650; j++) _solve(b, j);
for(j = 311480; j < 311490; j++) _solve(b, j);
for(j = 312320; j < 312330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 313160; j < 313170; j++) _solve(b, j);
for(j = 314000; j < 314010; j++) _solve(b, j);
for(j = 314840; j < 314850; j++) _solve(b, j);
for(j = 315680; j < 315690; j++) _solve(b, j);
for(j = 316520; j < 316530; j++) _solve(b, j);
for(j = 317360; j < 317370; j++) _solve(b, j);
for(j = 318200; j < 318210; j++) _solve(b, j);
for(j = 319040; j < 319050; j++) _solve(b, j);
for(j = 319880; j < 319890; j++) _solve(b, j);
for(j = 320720; j < 320730; j++) _solve(b, j);
for(j = 321560; j < 321570; j++) _solve(b, j);
for(j = 322400; j < 322410; j++) _solve(b, j);
for(j = 323240; j < 323250; j++) _solve(b, j);
for(j = 324080; j < 324090; j++) _solve(b, j);
for(j = 324920; j < 324930; j++) _solve(b, j);
for(j = 325760; j < 325770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 326600; j < 326610; j++) _solve(b, j);
for(j = 327440; j < 327450; j++) _solve(b, j);
for(j = 328280; j < 328290; j++) _solve(b, j);
for(j = 329120; j < 329130; j++) _solve(b, j);
for(j = 329960; j < 329970; j++) _solve(b, j);
for(j = 330800; j < 330810; j++) _solve(b, j);
for(j = 331640; j < 331650; j++) _solve(b, j);
for(j = 332480; j < 332490; j++) _solve(b, j);
for(j = 333320; j < 333330; j++) _solve(b, j);
for(j = 334160; j < 334170; j++) _solve(b, j);
for(j = 335000; j < 335010; j++) _solve(b, j);
for(j = 335840; j < 335850; j++) _solve(b, j);
for(j = 336680; j < 336690; j++) _solve(b, j);
for(j = 337520; j < 337530; j++) _solve(b, j);
for(j = 338360; j < 338370; j++) _solve(b, j);
for(j = 339200; j < 339210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 340040; j < 340050; j++) _solve(b, j);
for(j = 340880; j < 340890; j++) _solve(b, j);
for(j = 341720; j < 341730; j++) _solve(b, j);
for(j = 342560; j < 342570; j++) _solve(b, j);
for(j = 343400; j < 343410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 273690; j < 273700; j++) _solve(b, j);
for(j = 274530; j < 274540; j++) _solve(b, j);
for(j = 275370; j < 275380; j++) _solve(b, j);
for(j = 276210; j < 276220; j++) _solve(b, j);
for(j = 277050; j < 277060; j++) _solve(b, j);
for(j = 277890; j < 277900; j++) _solve(b, j);
for(j = 278730; j < 278740; j++) _solve(b, j);
for(j = 279570; j < 279580; j++) _solve(b, j);
for(j = 280410; j < 280420; j++) _solve(b, j);
for(j = 281250; j < 281260; j++) _solve(b, j);
for(j = 282090; j < 282100; j++) _solve(b, j);
for(j = 282930; j < 282940; j++) _solve(b, j);
for(j = 283770; j < 283780; j++) _solve(b, j);
for(j = 284610; j < 284620; j++) _solve(b, j);
for(j = 285450; j < 285460; j++) _solve(b, j);
for(j = 286290; j < 286300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 287130; j < 287140; j++) _solve(b, j);
for(j = 287970; j < 287980; j++) _solve(b, j);
for(j = 288810; j < 288820; j++) _solve(b, j);
for(j = 289650; j < 289660; j++) _solve(b, j);
for(j = 290490; j < 290500; j++) _solve(b, j);
for(j = 291330; j < 291340; j++) _solve(b, j);
for(j = 292170; j < 292180; j++) _solve(b, j);
for(j = 293010; j < 293020; j++) _solve(b, j);
for(j = 293850; j < 293860; j++) _solve(b, j);
for(j = 294690; j < 294700; j++) _solve(b, j);
for(j = 295530; j < 295540; j++) _solve(b, j);
for(j = 296370; j < 296380; j++) _solve(b, j);
for(j = 297210; j < 297220; j++) _solve(b, j);
for(j = 298050; j < 298060; j++) _solve(b, j);
for(j = 298890; j < 298900; j++) _solve(b, j);
for(j = 299730; j < 299740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 300570; j < 300580; j++) _solve(b, j);
for(j = 301410; j < 301420; j++) _solve(b, j);
for(j = 302250; j < 302260; j++) _solve(b, j);
for(j = 303090; j < 303100; j++) _solve(b, j);
for(j = 303930; j < 303940; j++) _solve(b, j);
for(j = 304770; j < 304780; j++) _solve(b, j);
for(j = 305610; j < 305620; j++) _solve(b, j);
for(j = 306450; j < 306460; j++) _solve(b, j);
for(j = 307290; j < 307300; j++) _solve(b, j);
for(j = 308130; j < 308140; j++) _solve(b, j);
for(j = 308970; j < 308980; j++) _solve(b, j);
for(j = 309810; j < 309820; j++) _solve(b, j);
for(j = 310650; j < 310660; j++) _solve(b, j);
for(j = 311490; j < 311500; j++) _solve(b, j);
for(j = 312330; j < 312340; j++) _solve(b, j);
for(j = 313170; j < 313180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 314010; j < 314020; j++) _solve(b, j);
for(j = 314850; j < 314860; j++) _solve(b, j);
for(j = 315690; j < 315700; j++) _solve(b, j);
for(j = 316530; j < 316540; j++) _solve(b, j);
for(j = 317370; j < 317380; j++) _solve(b, j);
for(j = 318210; j < 318220; j++) _solve(b, j);
for(j = 319050; j < 319060; j++) _solve(b, j);
for(j = 319890; j < 319900; j++) _solve(b, j);
for(j = 320730; j < 320740; j++) _solve(b, j);
for(j = 321570; j < 321580; j++) _solve(b, j);
for(j = 322410; j < 322420; j++) _solve(b, j);
for(j = 323250; j < 323260; j++) _solve(b, j);
for(j = 324090; j < 324100; j++) _solve(b, j);
for(j = 324930; j < 324940; j++) _solve(b, j);
for(j = 325770; j < 325780; j++) _solve(b, j);
for(j = 326610; j < 326620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 327450; j < 327460; j++) _solve(b, j);
for(j = 328290; j < 328300; j++) _solve(b, j);
for(j = 329130; j < 329140; j++) _solve(b, j);
for(j = 329970; j < 329980; j++) _solve(b, j);
for(j = 330810; j < 330820; j++) _solve(b, j);
for(j = 331650; j < 331660; j++) _solve(b, j);
for(j = 332490; j < 332500; j++) _solve(b, j);
for(j = 333330; j < 333340; j++) _solve(b, j);
for(j = 334170; j < 334180; j++) _solve(b, j);
for(j = 335010; j < 335020; j++) _solve(b, j);
for(j = 335850; j < 335860; j++) _solve(b, j);
for(j = 336690; j < 336700; j++) _solve(b, j);
for(j = 337530; j < 337540; j++) _solve(b, j);
for(j = 338370; j < 338380; j++) _solve(b, j);
for(j = 339210; j < 339220; j++) _solve(b, j);
for(j = 340050; j < 340060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 340890; j < 340900; j++) _solve(b, j);
for(j = 341730; j < 341740; j++) _solve(b, j);
for(j = 342570; j < 342580; j++) _solve(b, j);
for(j = 343410; j < 343420; j++) _solve(b, j);
for(j = 344250; j < 344260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 274540; j < 274550; j++) _solve(b, j);
for(j = 275380; j < 275390; j++) _solve(b, j);
for(j = 276220; j < 276230; j++) _solve(b, j);
for(j = 277060; j < 277070; j++) _solve(b, j);
for(j = 277900; j < 277910; j++) _solve(b, j);
for(j = 278740; j < 278750; j++) _solve(b, j);
for(j = 279580; j < 279590; j++) _solve(b, j);
for(j = 280420; j < 280430; j++) _solve(b, j);
for(j = 281260; j < 281270; j++) _solve(b, j);
for(j = 282100; j < 282110; j++) _solve(b, j);
for(j = 282940; j < 282950; j++) _solve(b, j);
for(j = 283780; j < 283790; j++) _solve(b, j);
for(j = 284620; j < 284630; j++) _solve(b, j);
for(j = 285460; j < 285470; j++) _solve(b, j);
for(j = 286300; j < 286310; j++) _solve(b, j);
for(j = 287140; j < 287150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 287980; j < 287990; j++) _solve(b, j);
for(j = 288820; j < 288830; j++) _solve(b, j);
for(j = 289660; j < 289670; j++) _solve(b, j);
for(j = 290500; j < 290510; j++) _solve(b, j);
for(j = 291340; j < 291350; j++) _solve(b, j);
for(j = 292180; j < 292190; j++) _solve(b, j);
for(j = 293020; j < 293030; j++) _solve(b, j);
for(j = 293860; j < 293870; j++) _solve(b, j);
for(j = 294700; j < 294710; j++) _solve(b, j);
for(j = 295540; j < 295550; j++) _solve(b, j);
for(j = 296380; j < 296390; j++) _solve(b, j);
for(j = 297220; j < 297230; j++) _solve(b, j);
for(j = 298060; j < 298070; j++) _solve(b, j);
for(j = 298900; j < 298910; j++) _solve(b, j);
for(j = 299740; j < 299750; j++) _solve(b, j);
for(j = 300580; j < 300590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 301420; j < 301430; j++) _solve(b, j);
for(j = 302260; j < 302270; j++) _solve(b, j);
for(j = 303100; j < 303110; j++) _solve(b, j);
for(j = 303940; j < 303950; j++) _solve(b, j);
for(j = 304780; j < 304790; j++) _solve(b, j);
for(j = 305620; j < 305630; j++) _solve(b, j);
for(j = 306460; j < 306470; j++) _solve(b, j);
for(j = 307300; j < 307310; j++) _solve(b, j);
for(j = 308140; j < 308150; j++) _solve(b, j);
for(j = 308980; j < 308990; j++) _solve(b, j);
for(j = 309820; j < 309830; j++) _solve(b, j);
for(j = 310660; j < 310670; j++) _solve(b, j);
for(j = 311500; j < 311510; j++) _solve(b, j);
for(j = 312340; j < 312350; j++) _solve(b, j);
for(j = 313180; j < 313190; j++) _solve(b, j);
for(j = 314020; j < 314030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 314860; j < 314870; j++) _solve(b, j);
for(j = 315700; j < 315710; j++) _solve(b, j);
for(j = 316540; j < 316550; j++) _solve(b, j);
for(j = 317380; j < 317390; j++) _solve(b, j);
for(j = 318220; j < 318230; j++) _solve(b, j);
for(j = 319060; j < 319070; j++) _solve(b, j);
for(j = 319900; j < 319910; j++) _solve(b, j);
for(j = 320740; j < 320750; j++) _solve(b, j);
for(j = 321580; j < 321590; j++) _solve(b, j);
for(j = 322420; j < 322430; j++) _solve(b, j);
for(j = 323260; j < 323270; j++) _solve(b, j);
for(j = 324100; j < 324110; j++) _solve(b, j);
for(j = 324940; j < 324950; j++) _solve(b, j);
for(j = 325780; j < 325790; j++) _solve(b, j);
for(j = 326620; j < 326630; j++) _solve(b, j);
for(j = 327460; j < 327470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 328300; j < 328310; j++) _solve(b, j);
for(j = 329140; j < 329150; j++) _solve(b, j);
for(j = 329980; j < 329990; j++) _solve(b, j);
for(j = 330820; j < 330830; j++) _solve(b, j);
for(j = 331660; j < 331670; j++) _solve(b, j);
for(j = 332500; j < 332510; j++) _solve(b, j);
for(j = 333340; j < 333350; j++) _solve(b, j);
for(j = 334180; j < 334190; j++) _solve(b, j);
for(j = 335020; j < 335030; j++) _solve(b, j);
for(j = 335860; j < 335870; j++) _solve(b, j);
for(j = 336700; j < 336710; j++) _solve(b, j);
for(j = 337540; j < 337550; j++) _solve(b, j);
for(j = 338380; j < 338390; j++) _solve(b, j);
for(j = 339220; j < 339230; j++) _solve(b, j);
for(j = 340060; j < 340070; j++) _solve(b, j);
for(j = 340900; j < 340910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 341740; j < 341750; j++) _solve(b, j);
for(j = 342580; j < 342590; j++) _solve(b, j);
for(j = 343420; j < 343430; j++) _solve(b, j);
for(j = 344260; j < 344270; j++) _solve(b, j);
for(j = 345100; j < 345110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 275390; j < 275400; j++) _solve(b, j);
for(j = 276230; j < 276240; j++) _solve(b, j);
for(j = 277070; j < 277080; j++) _solve(b, j);
for(j = 277910; j < 277920; j++) _solve(b, j);
for(j = 278750; j < 278760; j++) _solve(b, j);
for(j = 279590; j < 279600; j++) _solve(b, j);
for(j = 280430; j < 280440; j++) _solve(b, j);
for(j = 281270; j < 281280; j++) _solve(b, j);
for(j = 282110; j < 282120; j++) _solve(b, j);
for(j = 282950; j < 282960; j++) _solve(b, j);
for(j = 283790; j < 283800; j++) _solve(b, j);
for(j = 284630; j < 284640; j++) _solve(b, j);
for(j = 285470; j < 285480; j++) _solve(b, j);
for(j = 286310; j < 286320; j++) _solve(b, j);
for(j = 287150; j < 287160; j++) _solve(b, j);
for(j = 287990; j < 288000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 288830; j < 288840; j++) _solve(b, j);
for(j = 289670; j < 289680; j++) _solve(b, j);
for(j = 290510; j < 290520; j++) _solve(b, j);
for(j = 291350; j < 291360; j++) _solve(b, j);
for(j = 292190; j < 292200; j++) _solve(b, j);
for(j = 293030; j < 293040; j++) _solve(b, j);
for(j = 293870; j < 293880; j++) _solve(b, j);
for(j = 294710; j < 294720; j++) _solve(b, j);
for(j = 295550; j < 295560; j++) _solve(b, j);
for(j = 296390; j < 296400; j++) _solve(b, j);
for(j = 297230; j < 297240; j++) _solve(b, j);
for(j = 298070; j < 298080; j++) _solve(b, j);
for(j = 298910; j < 298920; j++) _solve(b, j);
for(j = 299750; j < 299760; j++) _solve(b, j);
for(j = 300590; j < 300600; j++) _solve(b, j);
for(j = 301430; j < 301440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 302270; j < 302280; j++) _solve(b, j);
for(j = 303110; j < 303120; j++) _solve(b, j);
for(j = 303950; j < 303960; j++) _solve(b, j);
for(j = 304790; j < 304800; j++) _solve(b, j);
for(j = 305630; j < 305640; j++) _solve(b, j);
for(j = 306470; j < 306480; j++) _solve(b, j);
for(j = 307310; j < 307320; j++) _solve(b, j);
for(j = 308150; j < 308160; j++) _solve(b, j);
for(j = 308990; j < 309000; j++) _solve(b, j);
for(j = 309830; j < 309840; j++) _solve(b, j);
for(j = 310670; j < 310680; j++) _solve(b, j);
for(j = 311510; j < 311520; j++) _solve(b, j);
for(j = 312350; j < 312360; j++) _solve(b, j);
for(j = 313190; j < 313200; j++) _solve(b, j);
for(j = 314030; j < 314040; j++) _solve(b, j);
for(j = 314870; j < 314880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 315710; j < 315720; j++) _solve(b, j);
for(j = 316550; j < 316560; j++) _solve(b, j);
for(j = 317390; j < 317400; j++) _solve(b, j);
for(j = 318230; j < 318240; j++) _solve(b, j);
for(j = 319070; j < 319080; j++) _solve(b, j);
for(j = 319910; j < 319920; j++) _solve(b, j);
for(j = 320750; j < 320760; j++) _solve(b, j);
for(j = 321590; j < 321600; j++) _solve(b, j);
for(j = 322430; j < 322440; j++) _solve(b, j);
for(j = 323270; j < 323280; j++) _solve(b, j);
for(j = 324110; j < 324120; j++) _solve(b, j);
for(j = 324950; j < 324960; j++) _solve(b, j);
for(j = 325790; j < 325800; j++) _solve(b, j);
for(j = 326630; j < 326640; j++) _solve(b, j);
for(j = 327470; j < 327480; j++) _solve(b, j);
for(j = 328310; j < 328320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 329150; j < 329160; j++) _solve(b, j);
for(j = 329990; j < 330000; j++) _solve(b, j);
for(j = 330830; j < 330840; j++) _solve(b, j);
for(j = 331670; j < 331680; j++) _solve(b, j);
for(j = 332510; j < 332520; j++) _solve(b, j);
for(j = 333350; j < 333360; j++) _solve(b, j);
for(j = 334190; j < 334200; j++) _solve(b, j);
for(j = 335030; j < 335040; j++) _solve(b, j);
for(j = 335870; j < 335880; j++) _solve(b, j);
for(j = 336710; j < 336720; j++) _solve(b, j);
for(j = 337550; j < 337560; j++) _solve(b, j);
for(j = 338390; j < 338400; j++) _solve(b, j);
for(j = 339230; j < 339240; j++) _solve(b, j);
for(j = 340070; j < 340080; j++) _solve(b, j);
for(j = 340910; j < 340920; j++) _solve(b, j);
for(j = 341750; j < 341760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 342590; j < 342600; j++) _solve(b, j);
for(j = 343430; j < 343440; j++) _solve(b, j);
for(j = 344270; j < 344280; j++) _solve(b, j);
for(j = 345110; j < 345120; j++) _solve(b, j);
for(j = 345950; j < 345960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 276240; j < 276250; j++) _solve(b, j);
for(j = 277080; j < 277090; j++) _solve(b, j);
for(j = 277920; j < 277930; j++) _solve(b, j);
for(j = 278760; j < 278770; j++) _solve(b, j);
for(j = 279600; j < 279610; j++) _solve(b, j);
for(j = 280440; j < 280450; j++) _solve(b, j);
for(j = 281280; j < 281290; j++) _solve(b, j);
for(j = 282120; j < 282130; j++) _solve(b, j);
for(j = 282960; j < 282970; j++) _solve(b, j);
for(j = 283800; j < 283810; j++) _solve(b, j);
for(j = 284640; j < 284650; j++) _solve(b, j);
for(j = 285480; j < 285490; j++) _solve(b, j);
for(j = 286320; j < 286330; j++) _solve(b, j);
for(j = 287160; j < 287170; j++) _solve(b, j);
for(j = 288000; j < 288010; j++) _solve(b, j);
for(j = 288840; j < 288850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 289680; j < 289690; j++) _solve(b, j);
for(j = 290520; j < 290530; j++) _solve(b, j);
for(j = 291360; j < 291370; j++) _solve(b, j);
for(j = 292200; j < 292210; j++) _solve(b, j);
for(j = 293040; j < 293050; j++) _solve(b, j);
for(j = 293880; j < 293890; j++) _solve(b, j);
for(j = 294720; j < 294730; j++) _solve(b, j);
for(j = 295560; j < 295570; j++) _solve(b, j);
for(j = 296400; j < 296410; j++) _solve(b, j);
for(j = 297240; j < 297250; j++) _solve(b, j);
for(j = 298080; j < 298090; j++) _solve(b, j);
for(j = 298920; j < 298930; j++) _solve(b, j);
for(j = 299760; j < 299770; j++) _solve(b, j);
for(j = 300600; j < 300610; j++) _solve(b, j);
for(j = 301440; j < 301450; j++) _solve(b, j);
for(j = 302280; j < 302290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 303120; j < 303130; j++) _solve(b, j);
for(j = 303960; j < 303970; j++) _solve(b, j);
for(j = 304800; j < 304810; j++) _solve(b, j);
for(j = 305640; j < 305650; j++) _solve(b, j);
for(j = 306480; j < 306490; j++) _solve(b, j);
for(j = 307320; j < 307330; j++) _solve(b, j);
for(j = 308160; j < 308170; j++) _solve(b, j);
for(j = 309000; j < 309010; j++) _solve(b, j);
for(j = 309840; j < 309850; j++) _solve(b, j);
for(j = 310680; j < 310690; j++) _solve(b, j);
for(j = 311520; j < 311530; j++) _solve(b, j);
for(j = 312360; j < 312370; j++) _solve(b, j);
for(j = 313200; j < 313210; j++) _solve(b, j);
for(j = 314040; j < 314050; j++) _solve(b, j);
for(j = 314880; j < 314890; j++) _solve(b, j);
for(j = 315720; j < 315730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 316560; j < 316570; j++) _solve(b, j);
for(j = 317400; j < 317410; j++) _solve(b, j);
for(j = 318240; j < 318250; j++) _solve(b, j);
for(j = 319080; j < 319090; j++) _solve(b, j);
for(j = 319920; j < 319930; j++) _solve(b, j);
for(j = 320760; j < 320770; j++) _solve(b, j);
for(j = 321600; j < 321610; j++) _solve(b, j);
for(j = 322440; j < 322450; j++) _solve(b, j);
for(j = 323280; j < 323290; j++) _solve(b, j);
for(j = 324120; j < 324130; j++) _solve(b, j);
for(j = 324960; j < 324970; j++) _solve(b, j);
for(j = 325800; j < 325810; j++) _solve(b, j);
for(j = 326640; j < 326650; j++) _solve(b, j);
for(j = 327480; j < 327490; j++) _solve(b, j);
for(j = 328320; j < 328330; j++) _solve(b, j);
for(j = 329160; j < 329170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 330000; j < 330010; j++) _solve(b, j);
for(j = 330840; j < 330850; j++) _solve(b, j);
for(j = 331680; j < 331690; j++) _solve(b, j);
for(j = 332520; j < 332530; j++) _solve(b, j);
for(j = 333360; j < 333370; j++) _solve(b, j);
for(j = 334200; j < 334210; j++) _solve(b, j);
for(j = 335040; j < 335050; j++) _solve(b, j);
for(j = 335880; j < 335890; j++) _solve(b, j);
for(j = 336720; j < 336730; j++) _solve(b, j);
for(j = 337560; j < 337570; j++) _solve(b, j);
for(j = 338400; j < 338410; j++) _solve(b, j);
for(j = 339240; j < 339250; j++) _solve(b, j);
for(j = 340080; j < 340090; j++) _solve(b, j);
for(j = 340920; j < 340930; j++) _solve(b, j);
for(j = 341760; j < 341770; j++) _solve(b, j);
for(j = 342600; j < 342610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 343440; j < 343450; j++) _solve(b, j);
for(j = 344280; j < 344290; j++) _solve(b, j);
for(j = 345120; j < 345130; j++) _solve(b, j);
for(j = 345960; j < 345970; j++) _solve(b, j);
for(j = 346800; j < 346810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 277090; j < 277100; j++) _solve(b, j);
for(j = 277930; j < 277940; j++) _solve(b, j);
for(j = 278770; j < 278780; j++) _solve(b, j);
for(j = 279610; j < 279620; j++) _solve(b, j);
for(j = 280450; j < 280460; j++) _solve(b, j);
for(j = 281290; j < 281300; j++) _solve(b, j);
for(j = 282130; j < 282140; j++) _solve(b, j);
for(j = 282970; j < 282980; j++) _solve(b, j);
for(j = 283810; j < 283820; j++) _solve(b, j);
for(j = 284650; j < 284660; j++) _solve(b, j);
for(j = 285490; j < 285500; j++) _solve(b, j);
for(j = 286330; j < 286340; j++) _solve(b, j);
for(j = 287170; j < 287180; j++) _solve(b, j);
for(j = 288010; j < 288020; j++) _solve(b, j);
for(j = 288850; j < 288860; j++) _solve(b, j);
for(j = 289690; j < 289700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 290530; j < 290540; j++) _solve(b, j);
for(j = 291370; j < 291380; j++) _solve(b, j);
for(j = 292210; j < 292220; j++) _solve(b, j);
for(j = 293050; j < 293060; j++) _solve(b, j);
for(j = 293890; j < 293900; j++) _solve(b, j);
for(j = 294730; j < 294740; j++) _solve(b, j);
for(j = 295570; j < 295580; j++) _solve(b, j);
for(j = 296410; j < 296420; j++) _solve(b, j);
for(j = 297250; j < 297260; j++) _solve(b, j);
for(j = 298090; j < 298100; j++) _solve(b, j);
for(j = 298930; j < 298940; j++) _solve(b, j);
for(j = 299770; j < 299780; j++) _solve(b, j);
for(j = 300610; j < 300620; j++) _solve(b, j);
for(j = 301450; j < 301460; j++) _solve(b, j);
for(j = 302290; j < 302300; j++) _solve(b, j);
for(j = 303130; j < 303140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 303970; j < 303980; j++) _solve(b, j);
for(j = 304810; j < 304820; j++) _solve(b, j);
for(j = 305650; j < 305660; j++) _solve(b, j);
for(j = 306490; j < 306500; j++) _solve(b, j);
for(j = 307330; j < 307340; j++) _solve(b, j);
for(j = 308170; j < 308180; j++) _solve(b, j);
for(j = 309010; j < 309020; j++) _solve(b, j);
for(j = 309850; j < 309860; j++) _solve(b, j);
for(j = 310690; j < 310700; j++) _solve(b, j);
for(j = 311530; j < 311540; j++) _solve(b, j);
for(j = 312370; j < 312380; j++) _solve(b, j);
for(j = 313210; j < 313220; j++) _solve(b, j);
for(j = 314050; j < 314060; j++) _solve(b, j);
for(j = 314890; j < 314900; j++) _solve(b, j);
for(j = 315730; j < 315740; j++) _solve(b, j);
for(j = 316570; j < 316580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 317410; j < 317420; j++) _solve(b, j);
for(j = 318250; j < 318260; j++) _solve(b, j);
for(j = 319090; j < 319100; j++) _solve(b, j);
for(j = 319930; j < 319940; j++) _solve(b, j);
for(j = 320770; j < 320780; j++) _solve(b, j);
for(j = 321610; j < 321620; j++) _solve(b, j);
for(j = 322450; j < 322460; j++) _solve(b, j);
for(j = 323290; j < 323300; j++) _solve(b, j);
for(j = 324130; j < 324140; j++) _solve(b, j);
for(j = 324970; j < 324980; j++) _solve(b, j);
for(j = 325810; j < 325820; j++) _solve(b, j);
for(j = 326650; j < 326660; j++) _solve(b, j);
for(j = 327490; j < 327500; j++) _solve(b, j);
for(j = 328330; j < 328340; j++) _solve(b, j);
for(j = 329170; j < 329180; j++) _solve(b, j);
for(j = 330010; j < 330020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 330850; j < 330860; j++) _solve(b, j);
for(j = 331690; j < 331700; j++) _solve(b, j);
for(j = 332530; j < 332540; j++) _solve(b, j);
for(j = 333370; j < 333380; j++) _solve(b, j);
for(j = 334210; j < 334220; j++) _solve(b, j);
for(j = 335050; j < 335060; j++) _solve(b, j);
for(j = 335890; j < 335900; j++) _solve(b, j);
for(j = 336730; j < 336740; j++) _solve(b, j);
for(j = 337570; j < 337580; j++) _solve(b, j);
for(j = 338410; j < 338420; j++) _solve(b, j);
for(j = 339250; j < 339260; j++) _solve(b, j);
for(j = 340090; j < 340100; j++) _solve(b, j);
for(j = 340930; j < 340940; j++) _solve(b, j);
for(j = 341770; j < 341780; j++) _solve(b, j);
for(j = 342610; j < 342620; j++) _solve(b, j);
for(j = 343450; j < 343460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 344290; j < 344300; j++) _solve(b, j);
for(j = 345130; j < 345140; j++) _solve(b, j);
for(j = 345970; j < 345980; j++) _solve(b, j);
for(j = 346810; j < 346820; j++) _solve(b, j);
for(j = 347650; j < 347660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 277940; j < 277950; j++) _solve(b, j);
for(j = 278780; j < 278790; j++) _solve(b, j);
for(j = 279620; j < 279630; j++) _solve(b, j);
for(j = 280460; j < 280470; j++) _solve(b, j);
for(j = 281300; j < 281310; j++) _solve(b, j);
for(j = 282140; j < 282150; j++) _solve(b, j);
for(j = 282980; j < 282990; j++) _solve(b, j);
for(j = 283820; j < 283830; j++) _solve(b, j);
for(j = 284660; j < 284670; j++) _solve(b, j);
for(j = 285500; j < 285510; j++) _solve(b, j);
for(j = 286340; j < 286350; j++) _solve(b, j);
for(j = 287180; j < 287190; j++) _solve(b, j);
for(j = 288020; j < 288030; j++) _solve(b, j);
for(j = 288860; j < 288870; j++) _solve(b, j);
for(j = 289700; j < 289710; j++) _solve(b, j);
for(j = 290540; j < 290550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 291380; j < 291390; j++) _solve(b, j);
for(j = 292220; j < 292230; j++) _solve(b, j);
for(j = 293060; j < 293070; j++) _solve(b, j);
for(j = 293900; j < 293910; j++) _solve(b, j);
for(j = 294740; j < 294750; j++) _solve(b, j);
for(j = 295580; j < 295590; j++) _solve(b, j);
for(j = 296420; j < 296430; j++) _solve(b, j);
for(j = 297260; j < 297270; j++) _solve(b, j);
for(j = 298100; j < 298110; j++) _solve(b, j);
for(j = 298940; j < 298950; j++) _solve(b, j);
for(j = 299780; j < 299790; j++) _solve(b, j);
for(j = 300620; j < 300630; j++) _solve(b, j);
for(j = 301460; j < 301470; j++) _solve(b, j);
for(j = 302300; j < 302310; j++) _solve(b, j);
for(j = 303140; j < 303150; j++) _solve(b, j);
for(j = 303980; j < 303990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 304820; j < 304830; j++) _solve(b, j);
for(j = 305660; j < 305670; j++) _solve(b, j);
for(j = 306500; j < 306510; j++) _solve(b, j);
for(j = 307340; j < 307350; j++) _solve(b, j);
for(j = 308180; j < 308190; j++) _solve(b, j);
for(j = 309020; j < 309030; j++) _solve(b, j);
for(j = 309860; j < 309870; j++) _solve(b, j);
for(j = 310700; j < 310710; j++) _solve(b, j);
for(j = 311540; j < 311550; j++) _solve(b, j);
for(j = 312380; j < 312390; j++) _solve(b, j);
for(j = 313220; j < 313230; j++) _solve(b, j);
for(j = 314060; j < 314070; j++) _solve(b, j);
for(j = 314900; j < 314910; j++) _solve(b, j);
for(j = 315740; j < 315750; j++) _solve(b, j);
for(j = 316580; j < 316590; j++) _solve(b, j);
for(j = 317420; j < 317430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 318260; j < 318270; j++) _solve(b, j);
for(j = 319100; j < 319110; j++) _solve(b, j);
for(j = 319940; j < 319950; j++) _solve(b, j);
for(j = 320780; j < 320790; j++) _solve(b, j);
for(j = 321620; j < 321630; j++) _solve(b, j);
for(j = 322460; j < 322470; j++) _solve(b, j);
for(j = 323300; j < 323310; j++) _solve(b, j);
for(j = 324140; j < 324150; j++) _solve(b, j);
for(j = 324980; j < 324990; j++) _solve(b, j);
for(j = 325820; j < 325830; j++) _solve(b, j);
for(j = 326660; j < 326670; j++) _solve(b, j);
for(j = 327500; j < 327510; j++) _solve(b, j);
for(j = 328340; j < 328350; j++) _solve(b, j);
for(j = 329180; j < 329190; j++) _solve(b, j);
for(j = 330020; j < 330030; j++) _solve(b, j);
for(j = 330860; j < 330870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 331700; j < 331710; j++) _solve(b, j);
for(j = 332540; j < 332550; j++) _solve(b, j);
for(j = 333380; j < 333390; j++) _solve(b, j);
for(j = 334220; j < 334230; j++) _solve(b, j);
for(j = 335060; j < 335070; j++) _solve(b, j);
for(j = 335900; j < 335910; j++) _solve(b, j);
for(j = 336740; j < 336750; j++) _solve(b, j);
for(j = 337580; j < 337590; j++) _solve(b, j);
for(j = 338420; j < 338430; j++) _solve(b, j);
for(j = 339260; j < 339270; j++) _solve(b, j);
for(j = 340100; j < 340110; j++) _solve(b, j);
for(j = 340940; j < 340950; j++) _solve(b, j);
for(j = 341780; j < 341790; j++) _solve(b, j);
for(j = 342620; j < 342630; j++) _solve(b, j);
for(j = 343460; j < 343470; j++) _solve(b, j);
for(j = 344300; j < 344310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 345140; j < 345150; j++) _solve(b, j);
for(j = 345980; j < 345990; j++) _solve(b, j);
for(j = 346820; j < 346830; j++) _solve(b, j);
for(j = 347660; j < 347670; j++) _solve(b, j);
for(j = 348500; j < 348510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 278790; j < 278800; j++) _solve(b, j);
for(j = 279630; j < 279640; j++) _solve(b, j);
for(j = 280470; j < 280480; j++) _solve(b, j);
for(j = 281310; j < 281320; j++) _solve(b, j);
for(j = 282150; j < 282160; j++) _solve(b, j);
for(j = 282990; j < 283000; j++) _solve(b, j);
for(j = 283830; j < 283840; j++) _solve(b, j);
for(j = 284670; j < 284680; j++) _solve(b, j);
for(j = 285510; j < 285520; j++) _solve(b, j);
for(j = 286350; j < 286360; j++) _solve(b, j);
for(j = 287190; j < 287200; j++) _solve(b, j);
for(j = 288030; j < 288040; j++) _solve(b, j);
for(j = 288870; j < 288880; j++) _solve(b, j);
for(j = 289710; j < 289720; j++) _solve(b, j);
for(j = 290550; j < 290560; j++) _solve(b, j);
for(j = 291390; j < 291400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 292230; j < 292240; j++) _solve(b, j);
for(j = 293070; j < 293080; j++) _solve(b, j);
for(j = 293910; j < 293920; j++) _solve(b, j);
for(j = 294750; j < 294760; j++) _solve(b, j);
for(j = 295590; j < 295600; j++) _solve(b, j);
for(j = 296430; j < 296440; j++) _solve(b, j);
for(j = 297270; j < 297280; j++) _solve(b, j);
for(j = 298110; j < 298120; j++) _solve(b, j);
for(j = 298950; j < 298960; j++) _solve(b, j);
for(j = 299790; j < 299800; j++) _solve(b, j);
for(j = 300630; j < 300640; j++) _solve(b, j);
for(j = 301470; j < 301480; j++) _solve(b, j);
for(j = 302310; j < 302320; j++) _solve(b, j);
for(j = 303150; j < 303160; j++) _solve(b, j);
for(j = 303990; j < 304000; j++) _solve(b, j);
for(j = 304830; j < 304840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 305670; j < 305680; j++) _solve(b, j);
for(j = 306510; j < 306520; j++) _solve(b, j);
for(j = 307350; j < 307360; j++) _solve(b, j);
for(j = 308190; j < 308200; j++) _solve(b, j);
for(j = 309030; j < 309040; j++) _solve(b, j);
for(j = 309870; j < 309880; j++) _solve(b, j);
for(j = 310710; j < 310720; j++) _solve(b, j);
for(j = 311550; j < 311560; j++) _solve(b, j);
for(j = 312390; j < 312400; j++) _solve(b, j);
for(j = 313230; j < 313240; j++) _solve(b, j);
for(j = 314070; j < 314080; j++) _solve(b, j);
for(j = 314910; j < 314920; j++) _solve(b, j);
for(j = 315750; j < 315760; j++) _solve(b, j);
for(j = 316590; j < 316600; j++) _solve(b, j);
for(j = 317430; j < 317440; j++) _solve(b, j);
for(j = 318270; j < 318280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 319110; j < 319120; j++) _solve(b, j);
for(j = 319950; j < 319960; j++) _solve(b, j);
for(j = 320790; j < 320800; j++) _solve(b, j);
for(j = 321630; j < 321640; j++) _solve(b, j);
for(j = 322470; j < 322480; j++) _solve(b, j);
for(j = 323310; j < 323320; j++) _solve(b, j);
for(j = 324150; j < 324160; j++) _solve(b, j);
for(j = 324990; j < 325000; j++) _solve(b, j);
for(j = 325830; j < 325840; j++) _solve(b, j);
for(j = 326670; j < 326680; j++) _solve(b, j);
for(j = 327510; j < 327520; j++) _solve(b, j);
for(j = 328350; j < 328360; j++) _solve(b, j);
for(j = 329190; j < 329200; j++) _solve(b, j);
for(j = 330030; j < 330040; j++) _solve(b, j);
for(j = 330870; j < 330880; j++) _solve(b, j);
for(j = 331710; j < 331720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 332550; j < 332560; j++) _solve(b, j);
for(j = 333390; j < 333400; j++) _solve(b, j);
for(j = 334230; j < 334240; j++) _solve(b, j);
for(j = 335070; j < 335080; j++) _solve(b, j);
for(j = 335910; j < 335920; j++) _solve(b, j);
for(j = 336750; j < 336760; j++) _solve(b, j);
for(j = 337590; j < 337600; j++) _solve(b, j);
for(j = 338430; j < 338440; j++) _solve(b, j);
for(j = 339270; j < 339280; j++) _solve(b, j);
for(j = 340110; j < 340120; j++) _solve(b, j);
for(j = 340950; j < 340960; j++) _solve(b, j);
for(j = 341790; j < 341800; j++) _solve(b, j);
for(j = 342630; j < 342640; j++) _solve(b, j);
for(j = 343470; j < 343480; j++) _solve(b, j);
for(j = 344310; j < 344320; j++) _solve(b, j);
for(j = 345150; j < 345160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 345990; j < 346000; j++) _solve(b, j);
for(j = 346830; j < 346840; j++) _solve(b, j);
for(j = 347670; j < 347680; j++) _solve(b, j);
for(j = 348510; j < 348520; j++) _solve(b, j);
for(j = 349350; j < 349360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 279640; j < 279650; j++) _solve(b, j);
for(j = 280480; j < 280490; j++) _solve(b, j);
for(j = 281320; j < 281330; j++) _solve(b, j);
for(j = 282160; j < 282170; j++) _solve(b, j);
for(j = 283000; j < 283010; j++) _solve(b, j);
for(j = 283840; j < 283850; j++) _solve(b, j);
for(j = 284680; j < 284690; j++) _solve(b, j);
for(j = 285520; j < 285530; j++) _solve(b, j);
for(j = 286360; j < 286370; j++) _solve(b, j);
for(j = 287200; j < 287210; j++) _solve(b, j);
for(j = 288040; j < 288050; j++) _solve(b, j);
for(j = 288880; j < 288890; j++) _solve(b, j);
for(j = 289720; j < 289730; j++) _solve(b, j);
for(j = 290560; j < 290570; j++) _solve(b, j);
for(j = 291400; j < 291410; j++) _solve(b, j);
for(j = 292240; j < 292250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 293080; j < 293090; j++) _solve(b, j);
for(j = 293920; j < 293930; j++) _solve(b, j);
for(j = 294760; j < 294770; j++) _solve(b, j);
for(j = 295600; j < 295610; j++) _solve(b, j);
for(j = 296440; j < 296450; j++) _solve(b, j);
for(j = 297280; j < 297290; j++) _solve(b, j);
for(j = 298120; j < 298130; j++) _solve(b, j);
for(j = 298960; j < 298970; j++) _solve(b, j);
for(j = 299800; j < 299810; j++) _solve(b, j);
for(j = 300640; j < 300650; j++) _solve(b, j);
for(j = 301480; j < 301490; j++) _solve(b, j);
for(j = 302320; j < 302330; j++) _solve(b, j);
for(j = 303160; j < 303170; j++) _solve(b, j);
for(j = 304000; j < 304010; j++) _solve(b, j);
for(j = 304840; j < 304850; j++) _solve(b, j);
for(j = 305680; j < 305690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 306520; j < 306530; j++) _solve(b, j);
for(j = 307360; j < 307370; j++) _solve(b, j);
for(j = 308200; j < 308210; j++) _solve(b, j);
for(j = 309040; j < 309050; j++) _solve(b, j);
for(j = 309880; j < 309890; j++) _solve(b, j);
for(j = 310720; j < 310730; j++) _solve(b, j);
for(j = 311560; j < 311570; j++) _solve(b, j);
for(j = 312400; j < 312410; j++) _solve(b, j);
for(j = 313240; j < 313250; j++) _solve(b, j);
for(j = 314080; j < 314090; j++) _solve(b, j);
for(j = 314920; j < 314930; j++) _solve(b, j);
for(j = 315760; j < 315770; j++) _solve(b, j);
for(j = 316600; j < 316610; j++) _solve(b, j);
for(j = 317440; j < 317450; j++) _solve(b, j);
for(j = 318280; j < 318290; j++) _solve(b, j);
for(j = 319120; j < 319130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 319960; j < 319970; j++) _solve(b, j);
for(j = 320800; j < 320810; j++) _solve(b, j);
for(j = 321640; j < 321650; j++) _solve(b, j);
for(j = 322480; j < 322490; j++) _solve(b, j);
for(j = 323320; j < 323330; j++) _solve(b, j);
for(j = 324160; j < 324170; j++) _solve(b, j);
for(j = 325000; j < 325010; j++) _solve(b, j);
for(j = 325840; j < 325850; j++) _solve(b, j);
for(j = 326680; j < 326690; j++) _solve(b, j);
for(j = 327520; j < 327530; j++) _solve(b, j);
for(j = 328360; j < 328370; j++) _solve(b, j);
for(j = 329200; j < 329210; j++) _solve(b, j);
for(j = 330040; j < 330050; j++) _solve(b, j);
for(j = 330880; j < 330890; j++) _solve(b, j);
for(j = 331720; j < 331730; j++) _solve(b, j);
for(j = 332560; j < 332570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 333400; j < 333410; j++) _solve(b, j);
for(j = 334240; j < 334250; j++) _solve(b, j);
for(j = 335080; j < 335090; j++) _solve(b, j);
for(j = 335920; j < 335930; j++) _solve(b, j);
for(j = 336760; j < 336770; j++) _solve(b, j);
for(j = 337600; j < 337610; j++) _solve(b, j);
for(j = 338440; j < 338450; j++) _solve(b, j);
for(j = 339280; j < 339290; j++) _solve(b, j);
for(j = 340120; j < 340130; j++) _solve(b, j);
for(j = 340960; j < 340970; j++) _solve(b, j);
for(j = 341800; j < 341810; j++) _solve(b, j);
for(j = 342640; j < 342650; j++) _solve(b, j);
for(j = 343480; j < 343490; j++) _solve(b, j);
for(j = 344320; j < 344330; j++) _solve(b, j);
for(j = 345160; j < 345170; j++) _solve(b, j);
for(j = 346000; j < 346010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 346840; j < 346850; j++) _solve(b, j);
for(j = 347680; j < 347690; j++) _solve(b, j);
for(j = 348520; j < 348530; j++) _solve(b, j);
for(j = 349360; j < 349370; j++) _solve(b, j);
for(j = 350200; j < 350210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 280490; j < 280500; j++) _solve(b, j);
for(j = 281330; j < 281340; j++) _solve(b, j);
for(j = 282170; j < 282180; j++) _solve(b, j);
for(j = 283010; j < 283020; j++) _solve(b, j);
for(j = 283850; j < 283860; j++) _solve(b, j);
for(j = 284690; j < 284700; j++) _solve(b, j);
for(j = 285530; j < 285540; j++) _solve(b, j);
for(j = 286370; j < 286380; j++) _solve(b, j);
for(j = 287210; j < 287220; j++) _solve(b, j);
for(j = 288050; j < 288060; j++) _solve(b, j);
for(j = 288890; j < 288900; j++) _solve(b, j);
for(j = 289730; j < 289740; j++) _solve(b, j);
for(j = 290570; j < 290580; j++) _solve(b, j);
for(j = 291410; j < 291420; j++) _solve(b, j);
for(j = 292250; j < 292260; j++) _solve(b, j);
for(j = 293090; j < 293100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 293930; j < 293940; j++) _solve(b, j);
for(j = 294770; j < 294780; j++) _solve(b, j);
for(j = 295610; j < 295620; j++) _solve(b, j);
for(j = 296450; j < 296460; j++) _solve(b, j);
for(j = 297290; j < 297300; j++) _solve(b, j);
for(j = 298130; j < 298140; j++) _solve(b, j);
for(j = 298970; j < 298980; j++) _solve(b, j);
for(j = 299810; j < 299820; j++) _solve(b, j);
for(j = 300650; j < 300660; j++) _solve(b, j);
for(j = 301490; j < 301500; j++) _solve(b, j);
for(j = 302330; j < 302340; j++) _solve(b, j);
for(j = 303170; j < 303180; j++) _solve(b, j);
for(j = 304010; j < 304020; j++) _solve(b, j);
for(j = 304850; j < 304860; j++) _solve(b, j);
for(j = 305690; j < 305700; j++) _solve(b, j);
for(j = 306530; j < 306540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 307370; j < 307380; j++) _solve(b, j);
for(j = 308210; j < 308220; j++) _solve(b, j);
for(j = 309050; j < 309060; j++) _solve(b, j);
for(j = 309890; j < 309900; j++) _solve(b, j);
for(j = 310730; j < 310740; j++) _solve(b, j);
for(j = 311570; j < 311580; j++) _solve(b, j);
for(j = 312410; j < 312420; j++) _solve(b, j);
for(j = 313250; j < 313260; j++) _solve(b, j);
for(j = 314090; j < 314100; j++) _solve(b, j);
for(j = 314930; j < 314940; j++) _solve(b, j);
for(j = 315770; j < 315780; j++) _solve(b, j);
for(j = 316610; j < 316620; j++) _solve(b, j);
for(j = 317450; j < 317460; j++) _solve(b, j);
for(j = 318290; j < 318300; j++) _solve(b, j);
for(j = 319130; j < 319140; j++) _solve(b, j);
for(j = 319970; j < 319980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 320810; j < 320820; j++) _solve(b, j);
for(j = 321650; j < 321660; j++) _solve(b, j);
for(j = 322490; j < 322500; j++) _solve(b, j);
for(j = 323330; j < 323340; j++) _solve(b, j);
for(j = 324170; j < 324180; j++) _solve(b, j);
for(j = 325010; j < 325020; j++) _solve(b, j);
for(j = 325850; j < 325860; j++) _solve(b, j);
for(j = 326690; j < 326700; j++) _solve(b, j);
for(j = 327530; j < 327540; j++) _solve(b, j);
for(j = 328370; j < 328380; j++) _solve(b, j);
for(j = 329210; j < 329220; j++) _solve(b, j);
for(j = 330050; j < 330060; j++) _solve(b, j);
for(j = 330890; j < 330900; j++) _solve(b, j);
for(j = 331730; j < 331740; j++) _solve(b, j);
for(j = 332570; j < 332580; j++) _solve(b, j);
for(j = 333410; j < 333420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 334250; j < 334260; j++) _solve(b, j);
for(j = 335090; j < 335100; j++) _solve(b, j);
for(j = 335930; j < 335940; j++) _solve(b, j);
for(j = 336770; j < 336780; j++) _solve(b, j);
for(j = 337610; j < 337620; j++) _solve(b, j);
for(j = 338450; j < 338460; j++) _solve(b, j);
for(j = 339290; j < 339300; j++) _solve(b, j);
for(j = 340130; j < 340140; j++) _solve(b, j);
for(j = 340970; j < 340980; j++) _solve(b, j);
for(j = 341810; j < 341820; j++) _solve(b, j);
for(j = 342650; j < 342660; j++) _solve(b, j);
for(j = 343490; j < 343500; j++) _solve(b, j);
for(j = 344330; j < 344340; j++) _solve(b, j);
for(j = 345170; j < 345180; j++) _solve(b, j);
for(j = 346010; j < 346020; j++) _solve(b, j);
for(j = 346850; j < 346860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 347690; j < 347700; j++) _solve(b, j);
for(j = 348530; j < 348540; j++) _solve(b, j);
for(j = 349370; j < 349380; j++) _solve(b, j);
for(j = 350210; j < 350220; j++) _solve(b, j);
for(j = 351050; j < 351060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 281340; j < 281350; j++) _solve(b, j);
for(j = 282180; j < 282190; j++) _solve(b, j);
for(j = 283020; j < 283030; j++) _solve(b, j);
for(j = 283860; j < 283870; j++) _solve(b, j);
for(j = 284700; j < 284710; j++) _solve(b, j);
for(j = 285540; j < 285550; j++) _solve(b, j);
for(j = 286380; j < 286390; j++) _solve(b, j);
for(j = 287220; j < 287230; j++) _solve(b, j);
for(j = 288060; j < 288070; j++) _solve(b, j);
for(j = 288900; j < 288910; j++) _solve(b, j);
for(j = 289740; j < 289750; j++) _solve(b, j);
for(j = 290580; j < 290590; j++) _solve(b, j);
for(j = 291420; j < 291430; j++) _solve(b, j);
for(j = 292260; j < 292270; j++) _solve(b, j);
for(j = 293100; j < 293110; j++) _solve(b, j);
for(j = 293940; j < 293950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 294780; j < 294790; j++) _solve(b, j);
for(j = 295620; j < 295630; j++) _solve(b, j);
for(j = 296460; j < 296470; j++) _solve(b, j);
for(j = 297300; j < 297310; j++) _solve(b, j);
for(j = 298140; j < 298150; j++) _solve(b, j);
for(j = 298980; j < 298990; j++) _solve(b, j);
for(j = 299820; j < 299830; j++) _solve(b, j);
for(j = 300660; j < 300670; j++) _solve(b, j);
for(j = 301500; j < 301510; j++) _solve(b, j);
for(j = 302340; j < 302350; j++) _solve(b, j);
for(j = 303180; j < 303190; j++) _solve(b, j);
for(j = 304020; j < 304030; j++) _solve(b, j);
for(j = 304860; j < 304870; j++) _solve(b, j);
for(j = 305700; j < 305710; j++) _solve(b, j);
for(j = 306540; j < 306550; j++) _solve(b, j);
for(j = 307380; j < 307390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 308220; j < 308230; j++) _solve(b, j);
for(j = 309060; j < 309070; j++) _solve(b, j);
for(j = 309900; j < 309910; j++) _solve(b, j);
for(j = 310740; j < 310750; j++) _solve(b, j);
for(j = 311580; j < 311590; j++) _solve(b, j);
for(j = 312420; j < 312430; j++) _solve(b, j);
for(j = 313260; j < 313270; j++) _solve(b, j);
for(j = 314100; j < 314110; j++) _solve(b, j);
for(j = 314940; j < 314950; j++) _solve(b, j);
for(j = 315780; j < 315790; j++) _solve(b, j);
for(j = 316620; j < 316630; j++) _solve(b, j);
for(j = 317460; j < 317470; j++) _solve(b, j);
for(j = 318300; j < 318310; j++) _solve(b, j);
for(j = 319140; j < 319150; j++) _solve(b, j);
for(j = 319980; j < 319990; j++) _solve(b, j);
for(j = 320820; j < 320830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 321660; j < 321670; j++) _solve(b, j);
for(j = 322500; j < 322510; j++) _solve(b, j);
for(j = 323340; j < 323350; j++) _solve(b, j);
for(j = 324180; j < 324190; j++) _solve(b, j);
for(j = 325020; j < 325030; j++) _solve(b, j);
for(j = 325860; j < 325870; j++) _solve(b, j);
for(j = 326700; j < 326710; j++) _solve(b, j);
for(j = 327540; j < 327550; j++) _solve(b, j);
for(j = 328380; j < 328390; j++) _solve(b, j);
for(j = 329220; j < 329230; j++) _solve(b, j);
for(j = 330060; j < 330070; j++) _solve(b, j);
for(j = 330900; j < 330910; j++) _solve(b, j);
for(j = 331740; j < 331750; j++) _solve(b, j);
for(j = 332580; j < 332590; j++) _solve(b, j);
for(j = 333420; j < 333430; j++) _solve(b, j);
for(j = 334260; j < 334270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 335100; j < 335110; j++) _solve(b, j);
for(j = 335940; j < 335950; j++) _solve(b, j);
for(j = 336780; j < 336790; j++) _solve(b, j);
for(j = 337620; j < 337630; j++) _solve(b, j);
for(j = 338460; j < 338470; j++) _solve(b, j);
for(j = 339300; j < 339310; j++) _solve(b, j);
for(j = 340140; j < 340150; j++) _solve(b, j);
for(j = 340980; j < 340990; j++) _solve(b, j);
for(j = 341820; j < 341830; j++) _solve(b, j);
for(j = 342660; j < 342670; j++) _solve(b, j);
for(j = 343500; j < 343510; j++) _solve(b, j);
for(j = 344340; j < 344350; j++) _solve(b, j);
for(j = 345180; j < 345190; j++) _solve(b, j);
for(j = 346020; j < 346030; j++) _solve(b, j);
for(j = 346860; j < 346870; j++) _solve(b, j);
for(j = 347700; j < 347710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 348540; j < 348550; j++) _solve(b, j);
for(j = 349380; j < 349390; j++) _solve(b, j);
for(j = 350220; j < 350230; j++) _solve(b, j);
for(j = 351060; j < 351070; j++) _solve(b, j);
for(j = 351900; j < 351910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 282190; j < 282200; j++) _solve(b, j);
for(j = 283030; j < 283040; j++) _solve(b, j);
for(j = 283870; j < 283880; j++) _solve(b, j);
for(j = 284710; j < 284720; j++) _solve(b, j);
for(j = 285550; j < 285560; j++) _solve(b, j);
for(j = 286390; j < 286400; j++) _solve(b, j);
for(j = 287230; j < 287240; j++) _solve(b, j);
for(j = 288070; j < 288080; j++) _solve(b, j);
for(j = 288910; j < 288920; j++) _solve(b, j);
for(j = 289750; j < 289760; j++) _solve(b, j);
for(j = 290590; j < 290600; j++) _solve(b, j);
for(j = 291430; j < 291440; j++) _solve(b, j);
for(j = 292270; j < 292280; j++) _solve(b, j);
for(j = 293110; j < 293120; j++) _solve(b, j);
for(j = 293950; j < 293960; j++) _solve(b, j);
for(j = 294790; j < 294800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 295630; j < 295640; j++) _solve(b, j);
for(j = 296470; j < 296480; j++) _solve(b, j);
for(j = 297310; j < 297320; j++) _solve(b, j);
for(j = 298150; j < 298160; j++) _solve(b, j);
for(j = 298990; j < 299000; j++) _solve(b, j);
for(j = 299830; j < 299840; j++) _solve(b, j);
for(j = 300670; j < 300680; j++) _solve(b, j);
for(j = 301510; j < 301520; j++) _solve(b, j);
for(j = 302350; j < 302360; j++) _solve(b, j);
for(j = 303190; j < 303200; j++) _solve(b, j);
for(j = 304030; j < 304040; j++) _solve(b, j);
for(j = 304870; j < 304880; j++) _solve(b, j);
for(j = 305710; j < 305720; j++) _solve(b, j);
for(j = 306550; j < 306560; j++) _solve(b, j);
for(j = 307390; j < 307400; j++) _solve(b, j);
for(j = 308230; j < 308240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 309070; j < 309080; j++) _solve(b, j);
for(j = 309910; j < 309920; j++) _solve(b, j);
for(j = 310750; j < 310760; j++) _solve(b, j);
for(j = 311590; j < 311600; j++) _solve(b, j);
for(j = 312430; j < 312440; j++) _solve(b, j);
for(j = 313270; j < 313280; j++) _solve(b, j);
for(j = 314110; j < 314120; j++) _solve(b, j);
for(j = 314950; j < 314960; j++) _solve(b, j);
for(j = 315790; j < 315800; j++) _solve(b, j);
for(j = 316630; j < 316640; j++) _solve(b, j);
for(j = 317470; j < 317480; j++) _solve(b, j);
for(j = 318310; j < 318320; j++) _solve(b, j);
for(j = 319150; j < 319160; j++) _solve(b, j);
for(j = 319990; j < 320000; j++) _solve(b, j);
for(j = 320830; j < 320840; j++) _solve(b, j);
for(j = 321670; j < 321680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 322510; j < 322520; j++) _solve(b, j);
for(j = 323350; j < 323360; j++) _solve(b, j);
for(j = 324190; j < 324200; j++) _solve(b, j);
for(j = 325030; j < 325040; j++) _solve(b, j);
for(j = 325870; j < 325880; j++) _solve(b, j);
for(j = 326710; j < 326720; j++) _solve(b, j);
for(j = 327550; j < 327560; j++) _solve(b, j);
for(j = 328390; j < 328400; j++) _solve(b, j);
for(j = 329230; j < 329240; j++) _solve(b, j);
for(j = 330070; j < 330080; j++) _solve(b, j);
for(j = 330910; j < 330920; j++) _solve(b, j);
for(j = 331750; j < 331760; j++) _solve(b, j);
for(j = 332590; j < 332600; j++) _solve(b, j);
for(j = 333430; j < 333440; j++) _solve(b, j);
for(j = 334270; j < 334280; j++) _solve(b, j);
for(j = 335110; j < 335120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 335950; j < 335960; j++) _solve(b, j);
for(j = 336790; j < 336800; j++) _solve(b, j);
for(j = 337630; j < 337640; j++) _solve(b, j);
for(j = 338470; j < 338480; j++) _solve(b, j);
for(j = 339310; j < 339320; j++) _solve(b, j);
for(j = 340150; j < 340160; j++) _solve(b, j);
for(j = 340990; j < 341000; j++) _solve(b, j);
for(j = 341830; j < 341840; j++) _solve(b, j);
for(j = 342670; j < 342680; j++) _solve(b, j);
for(j = 343510; j < 343520; j++) _solve(b, j);
for(j = 344350; j < 344360; j++) _solve(b, j);
for(j = 345190; j < 345200; j++) _solve(b, j);
for(j = 346030; j < 346040; j++) _solve(b, j);
for(j = 346870; j < 346880; j++) _solve(b, j);
for(j = 347710; j < 347720; j++) _solve(b, j);
for(j = 348550; j < 348560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 349390; j < 349400; j++) _solve(b, j);
for(j = 350230; j < 350240; j++) _solve(b, j);
for(j = 351070; j < 351080; j++) _solve(b, j);
for(j = 351910; j < 351920; j++) _solve(b, j);
for(j = 352750; j < 352760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 283040; j < 283050; j++) _solve(b, j);
for(j = 283880; j < 283890; j++) _solve(b, j);
for(j = 284720; j < 284730; j++) _solve(b, j);
for(j = 285560; j < 285570; j++) _solve(b, j);
for(j = 286400; j < 286410; j++) _solve(b, j);
for(j = 287240; j < 287250; j++) _solve(b, j);
for(j = 288080; j < 288090; j++) _solve(b, j);
for(j = 288920; j < 288930; j++) _solve(b, j);
for(j = 289760; j < 289770; j++) _solve(b, j);
for(j = 290600; j < 290610; j++) _solve(b, j);
for(j = 291440; j < 291450; j++) _solve(b, j);
for(j = 292280; j < 292290; j++) _solve(b, j);
for(j = 293120; j < 293130; j++) _solve(b, j);
for(j = 293960; j < 293970; j++) _solve(b, j);
for(j = 294800; j < 294810; j++) _solve(b, j);
for(j = 295640; j < 295650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 296480; j < 296490; j++) _solve(b, j);
for(j = 297320; j < 297330; j++) _solve(b, j);
for(j = 298160; j < 298170; j++) _solve(b, j);
for(j = 299000; j < 299010; j++) _solve(b, j);
for(j = 299840; j < 299850; j++) _solve(b, j);
for(j = 300680; j < 300690; j++) _solve(b, j);
for(j = 301520; j < 301530; j++) _solve(b, j);
for(j = 302360; j < 302370; j++) _solve(b, j);
for(j = 303200; j < 303210; j++) _solve(b, j);
for(j = 304040; j < 304050; j++) _solve(b, j);
for(j = 304880; j < 304890; j++) _solve(b, j);
for(j = 305720; j < 305730; j++) _solve(b, j);
for(j = 306560; j < 306570; j++) _solve(b, j);
for(j = 307400; j < 307410; j++) _solve(b, j);
for(j = 308240; j < 308250; j++) _solve(b, j);
for(j = 309080; j < 309090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 309920; j < 309930; j++) _solve(b, j);
for(j = 310760; j < 310770; j++) _solve(b, j);
for(j = 311600; j < 311610; j++) _solve(b, j);
for(j = 312440; j < 312450; j++) _solve(b, j);
for(j = 313280; j < 313290; j++) _solve(b, j);
for(j = 314120; j < 314130; j++) _solve(b, j);
for(j = 314960; j < 314970; j++) _solve(b, j);
for(j = 315800; j < 315810; j++) _solve(b, j);
for(j = 316640; j < 316650; j++) _solve(b, j);
for(j = 317480; j < 317490; j++) _solve(b, j);
for(j = 318320; j < 318330; j++) _solve(b, j);
for(j = 319160; j < 319170; j++) _solve(b, j);
for(j = 320000; j < 320010; j++) _solve(b, j);
for(j = 320840; j < 320850; j++) _solve(b, j);
for(j = 321680; j < 321690; j++) _solve(b, j);
for(j = 322520; j < 322530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 323360; j < 323370; j++) _solve(b, j);
for(j = 324200; j < 324210; j++) _solve(b, j);
for(j = 325040; j < 325050; j++) _solve(b, j);
for(j = 325880; j < 325890; j++) _solve(b, j);
for(j = 326720; j < 326730; j++) _solve(b, j);
for(j = 327560; j < 327570; j++) _solve(b, j);
for(j = 328400; j < 328410; j++) _solve(b, j);
for(j = 329240; j < 329250; j++) _solve(b, j);
for(j = 330080; j < 330090; j++) _solve(b, j);
for(j = 330920; j < 330930; j++) _solve(b, j);
for(j = 331760; j < 331770; j++) _solve(b, j);
for(j = 332600; j < 332610; j++) _solve(b, j);
for(j = 333440; j < 333450; j++) _solve(b, j);
for(j = 334280; j < 334290; j++) _solve(b, j);
for(j = 335120; j < 335130; j++) _solve(b, j);
for(j = 335960; j < 335970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 336800; j < 336810; j++) _solve(b, j);
for(j = 337640; j < 337650; j++) _solve(b, j);
for(j = 338480; j < 338490; j++) _solve(b, j);
for(j = 339320; j < 339330; j++) _solve(b, j);
for(j = 340160; j < 340170; j++) _solve(b, j);
for(j = 341000; j < 341010; j++) _solve(b, j);
for(j = 341840; j < 341850; j++) _solve(b, j);
for(j = 342680; j < 342690; j++) _solve(b, j);
for(j = 343520; j < 343530; j++) _solve(b, j);
for(j = 344360; j < 344370; j++) _solve(b, j);
for(j = 345200; j < 345210; j++) _solve(b, j);
for(j = 346040; j < 346050; j++) _solve(b, j);
for(j = 346880; j < 346890; j++) _solve(b, j);
for(j = 347720; j < 347730; j++) _solve(b, j);
for(j = 348560; j < 348570; j++) _solve(b, j);
for(j = 349400; j < 349410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 350240; j < 350250; j++) _solve(b, j);
for(j = 351080; j < 351090; j++) _solve(b, j);
for(j = 351920; j < 351930; j++) _solve(b, j);
for(j = 352760; j < 352770; j++) _solve(b, j);
for(j = 353600; j < 353610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 283890; j < 283900; j++) _solve(b, j);
for(j = 284730; j < 284740; j++) _solve(b, j);
for(j = 285570; j < 285580; j++) _solve(b, j);
for(j = 286410; j < 286420; j++) _solve(b, j);
for(j = 287250; j < 287260; j++) _solve(b, j);
for(j = 288090; j < 288100; j++) _solve(b, j);
for(j = 288930; j < 288940; j++) _solve(b, j);
for(j = 289770; j < 289780; j++) _solve(b, j);
for(j = 290610; j < 290620; j++) _solve(b, j);
for(j = 291450; j < 291460; j++) _solve(b, j);
for(j = 292290; j < 292300; j++) _solve(b, j);
for(j = 293130; j < 293140; j++) _solve(b, j);
for(j = 293970; j < 293980; j++) _solve(b, j);
for(j = 294810; j < 294820; j++) _solve(b, j);
for(j = 295650; j < 295660; j++) _solve(b, j);
for(j = 296490; j < 296500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 297330; j < 297340; j++) _solve(b, j);
for(j = 298170; j < 298180; j++) _solve(b, j);
for(j = 299010; j < 299020; j++) _solve(b, j);
for(j = 299850; j < 299860; j++) _solve(b, j);
for(j = 300690; j < 300700; j++) _solve(b, j);
for(j = 301530; j < 301540; j++) _solve(b, j);
for(j = 302370; j < 302380; j++) _solve(b, j);
for(j = 303210; j < 303220; j++) _solve(b, j);
for(j = 304050; j < 304060; j++) _solve(b, j);
for(j = 304890; j < 304900; j++) _solve(b, j);
for(j = 305730; j < 305740; j++) _solve(b, j);
for(j = 306570; j < 306580; j++) _solve(b, j);
for(j = 307410; j < 307420; j++) _solve(b, j);
for(j = 308250; j < 308260; j++) _solve(b, j);
for(j = 309090; j < 309100; j++) _solve(b, j);
for(j = 309930; j < 309940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 310770; j < 310780; j++) _solve(b, j);
for(j = 311610; j < 311620; j++) _solve(b, j);
for(j = 312450; j < 312460; j++) _solve(b, j);
for(j = 313290; j < 313300; j++) _solve(b, j);
for(j = 314130; j < 314140; j++) _solve(b, j);
for(j = 314970; j < 314980; j++) _solve(b, j);
for(j = 315810; j < 315820; j++) _solve(b, j);
for(j = 316650; j < 316660; j++) _solve(b, j);
for(j = 317490; j < 317500; j++) _solve(b, j);
for(j = 318330; j < 318340; j++) _solve(b, j);
for(j = 319170; j < 319180; j++) _solve(b, j);
for(j = 320010; j < 320020; j++) _solve(b, j);
for(j = 320850; j < 320860; j++) _solve(b, j);
for(j = 321690; j < 321700; j++) _solve(b, j);
for(j = 322530; j < 322540; j++) _solve(b, j);
for(j = 323370; j < 323380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 324210; j < 324220; j++) _solve(b, j);
for(j = 325050; j < 325060; j++) _solve(b, j);
for(j = 325890; j < 325900; j++) _solve(b, j);
for(j = 326730; j < 326740; j++) _solve(b, j);
for(j = 327570; j < 327580; j++) _solve(b, j);
for(j = 328410; j < 328420; j++) _solve(b, j);
for(j = 329250; j < 329260; j++) _solve(b, j);
for(j = 330090; j < 330100; j++) _solve(b, j);
for(j = 330930; j < 330940; j++) _solve(b, j);
for(j = 331770; j < 331780; j++) _solve(b, j);
for(j = 332610; j < 332620; j++) _solve(b, j);
for(j = 333450; j < 333460; j++) _solve(b, j);
for(j = 334290; j < 334300; j++) _solve(b, j);
for(j = 335130; j < 335140; j++) _solve(b, j);
for(j = 335970; j < 335980; j++) _solve(b, j);
for(j = 336810; j < 336820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 337650; j < 337660; j++) _solve(b, j);
for(j = 338490; j < 338500; j++) _solve(b, j);
for(j = 339330; j < 339340; j++) _solve(b, j);
for(j = 340170; j < 340180; j++) _solve(b, j);
for(j = 341010; j < 341020; j++) _solve(b, j);
for(j = 341850; j < 341860; j++) _solve(b, j);
for(j = 342690; j < 342700; j++) _solve(b, j);
for(j = 343530; j < 343540; j++) _solve(b, j);
for(j = 344370; j < 344380; j++) _solve(b, j);
for(j = 345210; j < 345220; j++) _solve(b, j);
for(j = 346050; j < 346060; j++) _solve(b, j);
for(j = 346890; j < 346900; j++) _solve(b, j);
for(j = 347730; j < 347740; j++) _solve(b, j);
for(j = 348570; j < 348580; j++) _solve(b, j);
for(j = 349410; j < 349420; j++) _solve(b, j);
for(j = 350250; j < 350260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 351090; j < 351100; j++) _solve(b, j);
for(j = 351930; j < 351940; j++) _solve(b, j);
for(j = 352770; j < 352780; j++) _solve(b, j);
for(j = 353610; j < 353620; j++) _solve(b, j);
for(j = 354450; j < 354460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 284740; j < 284750; j++) _solve(b, j);
for(j = 285580; j < 285590; j++) _solve(b, j);
for(j = 286420; j < 286430; j++) _solve(b, j);
for(j = 287260; j < 287270; j++) _solve(b, j);
for(j = 288100; j < 288110; j++) _solve(b, j);
for(j = 288940; j < 288950; j++) _solve(b, j);
for(j = 289780; j < 289790; j++) _solve(b, j);
for(j = 290620; j < 290630; j++) _solve(b, j);
for(j = 291460; j < 291470; j++) _solve(b, j);
for(j = 292300; j < 292310; j++) _solve(b, j);
for(j = 293140; j < 293150; j++) _solve(b, j);
for(j = 293980; j < 293990; j++) _solve(b, j);
for(j = 294820; j < 294830; j++) _solve(b, j);
for(j = 295660; j < 295670; j++) _solve(b, j);
for(j = 296500; j < 296510; j++) _solve(b, j);
for(j = 297340; j < 297350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 298180; j < 298190; j++) _solve(b, j);
for(j = 299020; j < 299030; j++) _solve(b, j);
for(j = 299860; j < 299870; j++) _solve(b, j);
for(j = 300700; j < 300710; j++) _solve(b, j);
for(j = 301540; j < 301550; j++) _solve(b, j);
for(j = 302380; j < 302390; j++) _solve(b, j);
for(j = 303220; j < 303230; j++) _solve(b, j);
for(j = 304060; j < 304070; j++) _solve(b, j);
for(j = 304900; j < 304910; j++) _solve(b, j);
for(j = 305740; j < 305750; j++) _solve(b, j);
for(j = 306580; j < 306590; j++) _solve(b, j);
for(j = 307420; j < 307430; j++) _solve(b, j);
for(j = 308260; j < 308270; j++) _solve(b, j);
for(j = 309100; j < 309110; j++) _solve(b, j);
for(j = 309940; j < 309950; j++) _solve(b, j);
for(j = 310780; j < 310790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 311620; j < 311630; j++) _solve(b, j);
for(j = 312460; j < 312470; j++) _solve(b, j);
for(j = 313300; j < 313310; j++) _solve(b, j);
for(j = 314140; j < 314150; j++) _solve(b, j);
for(j = 314980; j < 314990; j++) _solve(b, j);
for(j = 315820; j < 315830; j++) _solve(b, j);
for(j = 316660; j < 316670; j++) _solve(b, j);
for(j = 317500; j < 317510; j++) _solve(b, j);
for(j = 318340; j < 318350; j++) _solve(b, j);
for(j = 319180; j < 319190; j++) _solve(b, j);
for(j = 320020; j < 320030; j++) _solve(b, j);
for(j = 320860; j < 320870; j++) _solve(b, j);
for(j = 321700; j < 321710; j++) _solve(b, j);
for(j = 322540; j < 322550; j++) _solve(b, j);
for(j = 323380; j < 323390; j++) _solve(b, j);
for(j = 324220; j < 324230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 325060; j < 325070; j++) _solve(b, j);
for(j = 325900; j < 325910; j++) _solve(b, j);
for(j = 326740; j < 326750; j++) _solve(b, j);
for(j = 327580; j < 327590; j++) _solve(b, j);
for(j = 328420; j < 328430; j++) _solve(b, j);
for(j = 329260; j < 329270; j++) _solve(b, j);
for(j = 330100; j < 330110; j++) _solve(b, j);
for(j = 330940; j < 330950; j++) _solve(b, j);
for(j = 331780; j < 331790; j++) _solve(b, j);
for(j = 332620; j < 332630; j++) _solve(b, j);
for(j = 333460; j < 333470; j++) _solve(b, j);
for(j = 334300; j < 334310; j++) _solve(b, j);
for(j = 335140; j < 335150; j++) _solve(b, j);
for(j = 335980; j < 335990; j++) _solve(b, j);
for(j = 336820; j < 336830; j++) _solve(b, j);
for(j = 337660; j < 337670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 338500; j < 338510; j++) _solve(b, j);
for(j = 339340; j < 339350; j++) _solve(b, j);
for(j = 340180; j < 340190; j++) _solve(b, j);
for(j = 341020; j < 341030; j++) _solve(b, j);
for(j = 341860; j < 341870; j++) _solve(b, j);
for(j = 342700; j < 342710; j++) _solve(b, j);
for(j = 343540; j < 343550; j++) _solve(b, j);
for(j = 344380; j < 344390; j++) _solve(b, j);
for(j = 345220; j < 345230; j++) _solve(b, j);
for(j = 346060; j < 346070; j++) _solve(b, j);
for(j = 346900; j < 346910; j++) _solve(b, j);
for(j = 347740; j < 347750; j++) _solve(b, j);
for(j = 348580; j < 348590; j++) _solve(b, j);
for(j = 349420; j < 349430; j++) _solve(b, j);
for(j = 350260; j < 350270; j++) _solve(b, j);
for(j = 351100; j < 351110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 351940; j < 351950; j++) _solve(b, j);
for(j = 352780; j < 352790; j++) _solve(b, j);
for(j = 353620; j < 353630; j++) _solve(b, j);
for(j = 354460; j < 354470; j++) _solve(b, j);
for(j = 355300; j < 355310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 285590; j < 285600; j++) _solve(b, j);
for(j = 286430; j < 286440; j++) _solve(b, j);
for(j = 287270; j < 287280; j++) _solve(b, j);
for(j = 288110; j < 288120; j++) _solve(b, j);
for(j = 288950; j < 288960; j++) _solve(b, j);
for(j = 289790; j < 289800; j++) _solve(b, j);
for(j = 290630; j < 290640; j++) _solve(b, j);
for(j = 291470; j < 291480; j++) _solve(b, j);
for(j = 292310; j < 292320; j++) _solve(b, j);
for(j = 293150; j < 293160; j++) _solve(b, j);
for(j = 293990; j < 294000; j++) _solve(b, j);
for(j = 294830; j < 294840; j++) _solve(b, j);
for(j = 295670; j < 295680; j++) _solve(b, j);
for(j = 296510; j < 296520; j++) _solve(b, j);
for(j = 297350; j < 297360; j++) _solve(b, j);
for(j = 298190; j < 298200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 299030; j < 299040; j++) _solve(b, j);
for(j = 299870; j < 299880; j++) _solve(b, j);
for(j = 300710; j < 300720; j++) _solve(b, j);
for(j = 301550; j < 301560; j++) _solve(b, j);
for(j = 302390; j < 302400; j++) _solve(b, j);
for(j = 303230; j < 303240; j++) _solve(b, j);
for(j = 304070; j < 304080; j++) _solve(b, j);
for(j = 304910; j < 304920; j++) _solve(b, j);
for(j = 305750; j < 305760; j++) _solve(b, j);
for(j = 306590; j < 306600; j++) _solve(b, j);
for(j = 307430; j < 307440; j++) _solve(b, j);
for(j = 308270; j < 308280; j++) _solve(b, j);
for(j = 309110; j < 309120; j++) _solve(b, j);
for(j = 309950; j < 309960; j++) _solve(b, j);
for(j = 310790; j < 310800; j++) _solve(b, j);
for(j = 311630; j < 311640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 312470; j < 312480; j++) _solve(b, j);
for(j = 313310; j < 313320; j++) _solve(b, j);
for(j = 314150; j < 314160; j++) _solve(b, j);
for(j = 314990; j < 315000; j++) _solve(b, j);
for(j = 315830; j < 315840; j++) _solve(b, j);
for(j = 316670; j < 316680; j++) _solve(b, j);
for(j = 317510; j < 317520; j++) _solve(b, j);
for(j = 318350; j < 318360; j++) _solve(b, j);
for(j = 319190; j < 319200; j++) _solve(b, j);
for(j = 320030; j < 320040; j++) _solve(b, j);
for(j = 320870; j < 320880; j++) _solve(b, j);
for(j = 321710; j < 321720; j++) _solve(b, j);
for(j = 322550; j < 322560; j++) _solve(b, j);
for(j = 323390; j < 323400; j++) _solve(b, j);
for(j = 324230; j < 324240; j++) _solve(b, j);
for(j = 325070; j < 325080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 325910; j < 325920; j++) _solve(b, j);
for(j = 326750; j < 326760; j++) _solve(b, j);
for(j = 327590; j < 327600; j++) _solve(b, j);
for(j = 328430; j < 328440; j++) _solve(b, j);
for(j = 329270; j < 329280; j++) _solve(b, j);
for(j = 330110; j < 330120; j++) _solve(b, j);
for(j = 330950; j < 330960; j++) _solve(b, j);
for(j = 331790; j < 331800; j++) _solve(b, j);
for(j = 332630; j < 332640; j++) _solve(b, j);
for(j = 333470; j < 333480; j++) _solve(b, j);
for(j = 334310; j < 334320; j++) _solve(b, j);
for(j = 335150; j < 335160; j++) _solve(b, j);
for(j = 335990; j < 336000; j++) _solve(b, j);
for(j = 336830; j < 336840; j++) _solve(b, j);
for(j = 337670; j < 337680; j++) _solve(b, j);
for(j = 338510; j < 338520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 339350; j < 339360; j++) _solve(b, j);
for(j = 340190; j < 340200; j++) _solve(b, j);
for(j = 341030; j < 341040; j++) _solve(b, j);
for(j = 341870; j < 341880; j++) _solve(b, j);
for(j = 342710; j < 342720; j++) _solve(b, j);
for(j = 343550; j < 343560; j++) _solve(b, j);
for(j = 344390; j < 344400; j++) _solve(b, j);
for(j = 345230; j < 345240; j++) _solve(b, j);
for(j = 346070; j < 346080; j++) _solve(b, j);
for(j = 346910; j < 346920; j++) _solve(b, j);
for(j = 347750; j < 347760; j++) _solve(b, j);
for(j = 348590; j < 348600; j++) _solve(b, j);
for(j = 349430; j < 349440; j++) _solve(b, j);
for(j = 350270; j < 350280; j++) _solve(b, j);
for(j = 351110; j < 351120; j++) _solve(b, j);
for(j = 351950; j < 351960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 352790; j < 352800; j++) _solve(b, j);
for(j = 353630; j < 353640; j++) _solve(b, j);
for(j = 354470; j < 354480; j++) _solve(b, j);
for(j = 355310; j < 355320; j++) _solve(b, j);
for(j = 356150; j < 356160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 286440; j < 286450; j++) _solve(b, j);
for(j = 287280; j < 287290; j++) _solve(b, j);
for(j = 288120; j < 288130; j++) _solve(b, j);
for(j = 288960; j < 288970; j++) _solve(b, j);
for(j = 289800; j < 289810; j++) _solve(b, j);
for(j = 290640; j < 290650; j++) _solve(b, j);
for(j = 291480; j < 291490; j++) _solve(b, j);
for(j = 292320; j < 292330; j++) _solve(b, j);
for(j = 293160; j < 293170; j++) _solve(b, j);
for(j = 294000; j < 294010; j++) _solve(b, j);
for(j = 294840; j < 294850; j++) _solve(b, j);
for(j = 295680; j < 295690; j++) _solve(b, j);
for(j = 296520; j < 296530; j++) _solve(b, j);
for(j = 297360; j < 297370; j++) _solve(b, j);
for(j = 298200; j < 298210; j++) _solve(b, j);
for(j = 299040; j < 299050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 299880; j < 299890; j++) _solve(b, j);
for(j = 300720; j < 300730; j++) _solve(b, j);
for(j = 301560; j < 301570; j++) _solve(b, j);
for(j = 302400; j < 302410; j++) _solve(b, j);
for(j = 303240; j < 303250; j++) _solve(b, j);
for(j = 304080; j < 304090; j++) _solve(b, j);
for(j = 304920; j < 304930; j++) _solve(b, j);
for(j = 305760; j < 305770; j++) _solve(b, j);
for(j = 306600; j < 306610; j++) _solve(b, j);
for(j = 307440; j < 307450; j++) _solve(b, j);
for(j = 308280; j < 308290; j++) _solve(b, j);
for(j = 309120; j < 309130; j++) _solve(b, j);
for(j = 309960; j < 309970; j++) _solve(b, j);
for(j = 310800; j < 310810; j++) _solve(b, j);
for(j = 311640; j < 311650; j++) _solve(b, j);
for(j = 312480; j < 312490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 313320; j < 313330; j++) _solve(b, j);
for(j = 314160; j < 314170; j++) _solve(b, j);
for(j = 315000; j < 315010; j++) _solve(b, j);
for(j = 315840; j < 315850; j++) _solve(b, j);
for(j = 316680; j < 316690; j++) _solve(b, j);
for(j = 317520; j < 317530; j++) _solve(b, j);
for(j = 318360; j < 318370; j++) _solve(b, j);
for(j = 319200; j < 319210; j++) _solve(b, j);
for(j = 320040; j < 320050; j++) _solve(b, j);
for(j = 320880; j < 320890; j++) _solve(b, j);
for(j = 321720; j < 321730; j++) _solve(b, j);
for(j = 322560; j < 322570; j++) _solve(b, j);
for(j = 323400; j < 323410; j++) _solve(b, j);
for(j = 324240; j < 324250; j++) _solve(b, j);
for(j = 325080; j < 325090; j++) _solve(b, j);
for(j = 325920; j < 325930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 326760; j < 326770; j++) _solve(b, j);
for(j = 327600; j < 327610; j++) _solve(b, j);
for(j = 328440; j < 328450; j++) _solve(b, j);
for(j = 329280; j < 329290; j++) _solve(b, j);
for(j = 330120; j < 330130; j++) _solve(b, j);
for(j = 330960; j < 330970; j++) _solve(b, j);
for(j = 331800; j < 331810; j++) _solve(b, j);
for(j = 332640; j < 332650; j++) _solve(b, j);
for(j = 333480; j < 333490; j++) _solve(b, j);
for(j = 334320; j < 334330; j++) _solve(b, j);
for(j = 335160; j < 335170; j++) _solve(b, j);
for(j = 336000; j < 336010; j++) _solve(b, j);
for(j = 336840; j < 336850; j++) _solve(b, j);
for(j = 337680; j < 337690; j++) _solve(b, j);
for(j = 338520; j < 338530; j++) _solve(b, j);
for(j = 339360; j < 339370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 340200; j < 340210; j++) _solve(b, j);
for(j = 341040; j < 341050; j++) _solve(b, j);
for(j = 341880; j < 341890; j++) _solve(b, j);
for(j = 342720; j < 342730; j++) _solve(b, j);
for(j = 343560; j < 343570; j++) _solve(b, j);
for(j = 344400; j < 344410; j++) _solve(b, j);
for(j = 345240; j < 345250; j++) _solve(b, j);
for(j = 346080; j < 346090; j++) _solve(b, j);
for(j = 346920; j < 346930; j++) _solve(b, j);
for(j = 347760; j < 347770; j++) _solve(b, j);
for(j = 348600; j < 348610; j++) _solve(b, j);
for(j = 349440; j < 349450; j++) _solve(b, j);
for(j = 350280; j < 350290; j++) _solve(b, j);
for(j = 351120; j < 351130; j++) _solve(b, j);
for(j = 351960; j < 351970; j++) _solve(b, j);
for(j = 352800; j < 352810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 353640; j < 353650; j++) _solve(b, j);
for(j = 354480; j < 354490; j++) _solve(b, j);
for(j = 355320; j < 355330; j++) _solve(b, j);
for(j = 356160; j < 356170; j++) _solve(b, j);
for(j = 357000; j < 357010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 287290; j < 287300; j++) _solve(b, j);
for(j = 288130; j < 288140; j++) _solve(b, j);
for(j = 288970; j < 288980; j++) _solve(b, j);
for(j = 289810; j < 289820; j++) _solve(b, j);
for(j = 290650; j < 290660; j++) _solve(b, j);
for(j = 291490; j < 291500; j++) _solve(b, j);
for(j = 292330; j < 292340; j++) _solve(b, j);
for(j = 293170; j < 293180; j++) _solve(b, j);
for(j = 294010; j < 294020; j++) _solve(b, j);
for(j = 294850; j < 294860; j++) _solve(b, j);
for(j = 295690; j < 295700; j++) _solve(b, j);
for(j = 296530; j < 296540; j++) _solve(b, j);
for(j = 297370; j < 297380; j++) _solve(b, j);
for(j = 298210; j < 298220; j++) _solve(b, j);
for(j = 299050; j < 299060; j++) _solve(b, j);
for(j = 299890; j < 299900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 300730; j < 300740; j++) _solve(b, j);
for(j = 301570; j < 301580; j++) _solve(b, j);
for(j = 302410; j < 302420; j++) _solve(b, j);
for(j = 303250; j < 303260; j++) _solve(b, j);
for(j = 304090; j < 304100; j++) _solve(b, j);
for(j = 304930; j < 304940; j++) _solve(b, j);
for(j = 305770; j < 305780; j++) _solve(b, j);
for(j = 306610; j < 306620; j++) _solve(b, j);
for(j = 307450; j < 307460; j++) _solve(b, j);
for(j = 308290; j < 308300; j++) _solve(b, j);
for(j = 309130; j < 309140; j++) _solve(b, j);
for(j = 309970; j < 309980; j++) _solve(b, j);
for(j = 310810; j < 310820; j++) _solve(b, j);
for(j = 311650; j < 311660; j++) _solve(b, j);
for(j = 312490; j < 312500; j++) _solve(b, j);
for(j = 313330; j < 313340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 314170; j < 314180; j++) _solve(b, j);
for(j = 315010; j < 315020; j++) _solve(b, j);
for(j = 315850; j < 315860; j++) _solve(b, j);
for(j = 316690; j < 316700; j++) _solve(b, j);
for(j = 317530; j < 317540; j++) _solve(b, j);
for(j = 318370; j < 318380; j++) _solve(b, j);
for(j = 319210; j < 319220; j++) _solve(b, j);
for(j = 320050; j < 320060; j++) _solve(b, j);
for(j = 320890; j < 320900; j++) _solve(b, j);
for(j = 321730; j < 321740; j++) _solve(b, j);
for(j = 322570; j < 322580; j++) _solve(b, j);
for(j = 323410; j < 323420; j++) _solve(b, j);
for(j = 324250; j < 324260; j++) _solve(b, j);
for(j = 325090; j < 325100; j++) _solve(b, j);
for(j = 325930; j < 325940; j++) _solve(b, j);
for(j = 326770; j < 326780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 327610; j < 327620; j++) _solve(b, j);
for(j = 328450; j < 328460; j++) _solve(b, j);
for(j = 329290; j < 329300; j++) _solve(b, j);
for(j = 330130; j < 330140; j++) _solve(b, j);
for(j = 330970; j < 330980; j++) _solve(b, j);
for(j = 331810; j < 331820; j++) _solve(b, j);
for(j = 332650; j < 332660; j++) _solve(b, j);
for(j = 333490; j < 333500; j++) _solve(b, j);
for(j = 334330; j < 334340; j++) _solve(b, j);
for(j = 335170; j < 335180; j++) _solve(b, j);
for(j = 336010; j < 336020; j++) _solve(b, j);
for(j = 336850; j < 336860; j++) _solve(b, j);
for(j = 337690; j < 337700; j++) _solve(b, j);
for(j = 338530; j < 338540; j++) _solve(b, j);
for(j = 339370; j < 339380; j++) _solve(b, j);
for(j = 340210; j < 340220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 341050; j < 341060; j++) _solve(b, j);
for(j = 341890; j < 341900; j++) _solve(b, j);
for(j = 342730; j < 342740; j++) _solve(b, j);
for(j = 343570; j < 343580; j++) _solve(b, j);
for(j = 344410; j < 344420; j++) _solve(b, j);
for(j = 345250; j < 345260; j++) _solve(b, j);
for(j = 346090; j < 346100; j++) _solve(b, j);
for(j = 346930; j < 346940; j++) _solve(b, j);
for(j = 347770; j < 347780; j++) _solve(b, j);
for(j = 348610; j < 348620; j++) _solve(b, j);
for(j = 349450; j < 349460; j++) _solve(b, j);
for(j = 350290; j < 350300; j++) _solve(b, j);
for(j = 351130; j < 351140; j++) _solve(b, j);
for(j = 351970; j < 351980; j++) _solve(b, j);
for(j = 352810; j < 352820; j++) _solve(b, j);
for(j = 353650; j < 353660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 354490; j < 354500; j++) _solve(b, j);
for(j = 355330; j < 355340; j++) _solve(b, j);
for(j = 356170; j < 356180; j++) _solve(b, j);
for(j = 357010; j < 357020; j++) _solve(b, j);
for(j = 357850; j < 357860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 288140; j < 288150; j++) _solve(b, j);
for(j = 288980; j < 288990; j++) _solve(b, j);
for(j = 289820; j < 289830; j++) _solve(b, j);
for(j = 290660; j < 290670; j++) _solve(b, j);
for(j = 291500; j < 291510; j++) _solve(b, j);
for(j = 292340; j < 292350; j++) _solve(b, j);
for(j = 293180; j < 293190; j++) _solve(b, j);
for(j = 294020; j < 294030; j++) _solve(b, j);
for(j = 294860; j < 294870; j++) _solve(b, j);
for(j = 295700; j < 295710; j++) _solve(b, j);
for(j = 296540; j < 296550; j++) _solve(b, j);
for(j = 297380; j < 297390; j++) _solve(b, j);
for(j = 298220; j < 298230; j++) _solve(b, j);
for(j = 299060; j < 299070; j++) _solve(b, j);
for(j = 299900; j < 299910; j++) _solve(b, j);
for(j = 300740; j < 300750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 301580; j < 301590; j++) _solve(b, j);
for(j = 302420; j < 302430; j++) _solve(b, j);
for(j = 303260; j < 303270; j++) _solve(b, j);
for(j = 304100; j < 304110; j++) _solve(b, j);
for(j = 304940; j < 304950; j++) _solve(b, j);
for(j = 305780; j < 305790; j++) _solve(b, j);
for(j = 306620; j < 306630; j++) _solve(b, j);
for(j = 307460; j < 307470; j++) _solve(b, j);
for(j = 308300; j < 308310; j++) _solve(b, j);
for(j = 309140; j < 309150; j++) _solve(b, j);
for(j = 309980; j < 309990; j++) _solve(b, j);
for(j = 310820; j < 310830; j++) _solve(b, j);
for(j = 311660; j < 311670; j++) _solve(b, j);
for(j = 312500; j < 312510; j++) _solve(b, j);
for(j = 313340; j < 313350; j++) _solve(b, j);
for(j = 314180; j < 314190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 315020; j < 315030; j++) _solve(b, j);
for(j = 315860; j < 315870; j++) _solve(b, j);
for(j = 316700; j < 316710; j++) _solve(b, j);
for(j = 317540; j < 317550; j++) _solve(b, j);
for(j = 318380; j < 318390; j++) _solve(b, j);
for(j = 319220; j < 319230; j++) _solve(b, j);
for(j = 320060; j < 320070; j++) _solve(b, j);
for(j = 320900; j < 320910; j++) _solve(b, j);
for(j = 321740; j < 321750; j++) _solve(b, j);
for(j = 322580; j < 322590; j++) _solve(b, j);
for(j = 323420; j < 323430; j++) _solve(b, j);
for(j = 324260; j < 324270; j++) _solve(b, j);
for(j = 325100; j < 325110; j++) _solve(b, j);
for(j = 325940; j < 325950; j++) _solve(b, j);
for(j = 326780; j < 326790; j++) _solve(b, j);
for(j = 327620; j < 327630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 328460; j < 328470; j++) _solve(b, j);
for(j = 329300; j < 329310; j++) _solve(b, j);
for(j = 330140; j < 330150; j++) _solve(b, j);
for(j = 330980; j < 330990; j++) _solve(b, j);
for(j = 331820; j < 331830; j++) _solve(b, j);
for(j = 332660; j < 332670; j++) _solve(b, j);
for(j = 333500; j < 333510; j++) _solve(b, j);
for(j = 334340; j < 334350; j++) _solve(b, j);
for(j = 335180; j < 335190; j++) _solve(b, j);
for(j = 336020; j < 336030; j++) _solve(b, j);
for(j = 336860; j < 336870; j++) _solve(b, j);
for(j = 337700; j < 337710; j++) _solve(b, j);
for(j = 338540; j < 338550; j++) _solve(b, j);
for(j = 339380; j < 339390; j++) _solve(b, j);
for(j = 340220; j < 340230; j++) _solve(b, j);
for(j = 341060; j < 341070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 341900; j < 341910; j++) _solve(b, j);
for(j = 342740; j < 342750; j++) _solve(b, j);
for(j = 343580; j < 343590; j++) _solve(b, j);
for(j = 344420; j < 344430; j++) _solve(b, j);
for(j = 345260; j < 345270; j++) _solve(b, j);
for(j = 346100; j < 346110; j++) _solve(b, j);
for(j = 346940; j < 346950; j++) _solve(b, j);
for(j = 347780; j < 347790; j++) _solve(b, j);
for(j = 348620; j < 348630; j++) _solve(b, j);
for(j = 349460; j < 349470; j++) _solve(b, j);
for(j = 350300; j < 350310; j++) _solve(b, j);
for(j = 351140; j < 351150; j++) _solve(b, j);
for(j = 351980; j < 351990; j++) _solve(b, j);
for(j = 352820; j < 352830; j++) _solve(b, j);
for(j = 353660; j < 353670; j++) _solve(b, j);
for(j = 354500; j < 354510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 355340; j < 355350; j++) _solve(b, j);
for(j = 356180; j < 356190; j++) _solve(b, j);
for(j = 357020; j < 357030; j++) _solve(b, j);
for(j = 357860; j < 357870; j++) _solve(b, j);
for(j = 358700; j < 358710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 288990; j < 289000; j++) _solve(b, j);
for(j = 289830; j < 289840; j++) _solve(b, j);
for(j = 290670; j < 290680; j++) _solve(b, j);
for(j = 291510; j < 291520; j++) _solve(b, j);
for(j = 292350; j < 292360; j++) _solve(b, j);
for(j = 293190; j < 293200; j++) _solve(b, j);
for(j = 294030; j < 294040; j++) _solve(b, j);
for(j = 294870; j < 294880; j++) _solve(b, j);
for(j = 295710; j < 295720; j++) _solve(b, j);
for(j = 296550; j < 296560; j++) _solve(b, j);
for(j = 297390; j < 297400; j++) _solve(b, j);
for(j = 298230; j < 298240; j++) _solve(b, j);
for(j = 299070; j < 299080; j++) _solve(b, j);
for(j = 299910; j < 299920; j++) _solve(b, j);
for(j = 300750; j < 300760; j++) _solve(b, j);
for(j = 301590; j < 301600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 302430; j < 302440; j++) _solve(b, j);
for(j = 303270; j < 303280; j++) _solve(b, j);
for(j = 304110; j < 304120; j++) _solve(b, j);
for(j = 304950; j < 304960; j++) _solve(b, j);
for(j = 305790; j < 305800; j++) _solve(b, j);
for(j = 306630; j < 306640; j++) _solve(b, j);
for(j = 307470; j < 307480; j++) _solve(b, j);
for(j = 308310; j < 308320; j++) _solve(b, j);
for(j = 309150; j < 309160; j++) _solve(b, j);
for(j = 309990; j < 310000; j++) _solve(b, j);
for(j = 310830; j < 310840; j++) _solve(b, j);
for(j = 311670; j < 311680; j++) _solve(b, j);
for(j = 312510; j < 312520; j++) _solve(b, j);
for(j = 313350; j < 313360; j++) _solve(b, j);
for(j = 314190; j < 314200; j++) _solve(b, j);
for(j = 315030; j < 315040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 315870; j < 315880; j++) _solve(b, j);
for(j = 316710; j < 316720; j++) _solve(b, j);
for(j = 317550; j < 317560; j++) _solve(b, j);
for(j = 318390; j < 318400; j++) _solve(b, j);
for(j = 319230; j < 319240; j++) _solve(b, j);
for(j = 320070; j < 320080; j++) _solve(b, j);
for(j = 320910; j < 320920; j++) _solve(b, j);
for(j = 321750; j < 321760; j++) _solve(b, j);
for(j = 322590; j < 322600; j++) _solve(b, j);
for(j = 323430; j < 323440; j++) _solve(b, j);
for(j = 324270; j < 324280; j++) _solve(b, j);
for(j = 325110; j < 325120; j++) _solve(b, j);
for(j = 325950; j < 325960; j++) _solve(b, j);
for(j = 326790; j < 326800; j++) _solve(b, j);
for(j = 327630; j < 327640; j++) _solve(b, j);
for(j = 328470; j < 328480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 329310; j < 329320; j++) _solve(b, j);
for(j = 330150; j < 330160; j++) _solve(b, j);
for(j = 330990; j < 331000; j++) _solve(b, j);
for(j = 331830; j < 331840; j++) _solve(b, j);
for(j = 332670; j < 332680; j++) _solve(b, j);
for(j = 333510; j < 333520; j++) _solve(b, j);
for(j = 334350; j < 334360; j++) _solve(b, j);
for(j = 335190; j < 335200; j++) _solve(b, j);
for(j = 336030; j < 336040; j++) _solve(b, j);
for(j = 336870; j < 336880; j++) _solve(b, j);
for(j = 337710; j < 337720; j++) _solve(b, j);
for(j = 338550; j < 338560; j++) _solve(b, j);
for(j = 339390; j < 339400; j++) _solve(b, j);
for(j = 340230; j < 340240; j++) _solve(b, j);
for(j = 341070; j < 341080; j++) _solve(b, j);
for(j = 341910; j < 341920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 342750; j < 342760; j++) _solve(b, j);
for(j = 343590; j < 343600; j++) _solve(b, j);
for(j = 344430; j < 344440; j++) _solve(b, j);
for(j = 345270; j < 345280; j++) _solve(b, j);
for(j = 346110; j < 346120; j++) _solve(b, j);
for(j = 346950; j < 346960; j++) _solve(b, j);
for(j = 347790; j < 347800; j++) _solve(b, j);
for(j = 348630; j < 348640; j++) _solve(b, j);
for(j = 349470; j < 349480; j++) _solve(b, j);
for(j = 350310; j < 350320; j++) _solve(b, j);
for(j = 351150; j < 351160; j++) _solve(b, j);
for(j = 351990; j < 352000; j++) _solve(b, j);
for(j = 352830; j < 352840; j++) _solve(b, j);
for(j = 353670; j < 353680; j++) _solve(b, j);
for(j = 354510; j < 354520; j++) _solve(b, j);
for(j = 355350; j < 355360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 356190; j < 356200; j++) _solve(b, j);
for(j = 357030; j < 357040; j++) _solve(b, j);
for(j = 357870; j < 357880; j++) _solve(b, j);
for(j = 358710; j < 358720; j++) _solve(b, j);
for(j = 359550; j < 359560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 289840; j < 289850; j++) _solve(b, j);
for(j = 290680; j < 290690; j++) _solve(b, j);
for(j = 291520; j < 291530; j++) _solve(b, j);
for(j = 292360; j < 292370; j++) _solve(b, j);
for(j = 293200; j < 293210; j++) _solve(b, j);
for(j = 294040; j < 294050; j++) _solve(b, j);
for(j = 294880; j < 294890; j++) _solve(b, j);
for(j = 295720; j < 295730; j++) _solve(b, j);
for(j = 296560; j < 296570; j++) _solve(b, j);
for(j = 297400; j < 297410; j++) _solve(b, j);
for(j = 298240; j < 298250; j++) _solve(b, j);
for(j = 299080; j < 299090; j++) _solve(b, j);
for(j = 299920; j < 299930; j++) _solve(b, j);
for(j = 300760; j < 300770; j++) _solve(b, j);
for(j = 301600; j < 301610; j++) _solve(b, j);
for(j = 302440; j < 302450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 303280; j < 303290; j++) _solve(b, j);
for(j = 304120; j < 304130; j++) _solve(b, j);
for(j = 304960; j < 304970; j++) _solve(b, j);
for(j = 305800; j < 305810; j++) _solve(b, j);
for(j = 306640; j < 306650; j++) _solve(b, j);
for(j = 307480; j < 307490; j++) _solve(b, j);
for(j = 308320; j < 308330; j++) _solve(b, j);
for(j = 309160; j < 309170; j++) _solve(b, j);
for(j = 310000; j < 310010; j++) _solve(b, j);
for(j = 310840; j < 310850; j++) _solve(b, j);
for(j = 311680; j < 311690; j++) _solve(b, j);
for(j = 312520; j < 312530; j++) _solve(b, j);
for(j = 313360; j < 313370; j++) _solve(b, j);
for(j = 314200; j < 314210; j++) _solve(b, j);
for(j = 315040; j < 315050; j++) _solve(b, j);
for(j = 315880; j < 315890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 316720; j < 316730; j++) _solve(b, j);
for(j = 317560; j < 317570; j++) _solve(b, j);
for(j = 318400; j < 318410; j++) _solve(b, j);
for(j = 319240; j < 319250; j++) _solve(b, j);
for(j = 320080; j < 320090; j++) _solve(b, j);
for(j = 320920; j < 320930; j++) _solve(b, j);
for(j = 321760; j < 321770; j++) _solve(b, j);
for(j = 322600; j < 322610; j++) _solve(b, j);
for(j = 323440; j < 323450; j++) _solve(b, j);
for(j = 324280; j < 324290; j++) _solve(b, j);
for(j = 325120; j < 325130; j++) _solve(b, j);
for(j = 325960; j < 325970; j++) _solve(b, j);
for(j = 326800; j < 326810; j++) _solve(b, j);
for(j = 327640; j < 327650; j++) _solve(b, j);
for(j = 328480; j < 328490; j++) _solve(b, j);
for(j = 329320; j < 329330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 330160; j < 330170; j++) _solve(b, j);
for(j = 331000; j < 331010; j++) _solve(b, j);
for(j = 331840; j < 331850; j++) _solve(b, j);
for(j = 332680; j < 332690; j++) _solve(b, j);
for(j = 333520; j < 333530; j++) _solve(b, j);
for(j = 334360; j < 334370; j++) _solve(b, j);
for(j = 335200; j < 335210; j++) _solve(b, j);
for(j = 336040; j < 336050; j++) _solve(b, j);
for(j = 336880; j < 336890; j++) _solve(b, j);
for(j = 337720; j < 337730; j++) _solve(b, j);
for(j = 338560; j < 338570; j++) _solve(b, j);
for(j = 339400; j < 339410; j++) _solve(b, j);
for(j = 340240; j < 340250; j++) _solve(b, j);
for(j = 341080; j < 341090; j++) _solve(b, j);
for(j = 341920; j < 341930; j++) _solve(b, j);
for(j = 342760; j < 342770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 343600; j < 343610; j++) _solve(b, j);
for(j = 344440; j < 344450; j++) _solve(b, j);
for(j = 345280; j < 345290; j++) _solve(b, j);
for(j = 346120; j < 346130; j++) _solve(b, j);
for(j = 346960; j < 346970; j++) _solve(b, j);
for(j = 347800; j < 347810; j++) _solve(b, j);
for(j = 348640; j < 348650; j++) _solve(b, j);
for(j = 349480; j < 349490; j++) _solve(b, j);
for(j = 350320; j < 350330; j++) _solve(b, j);
for(j = 351160; j < 351170; j++) _solve(b, j);
for(j = 352000; j < 352010; j++) _solve(b, j);
for(j = 352840; j < 352850; j++) _solve(b, j);
for(j = 353680; j < 353690; j++) _solve(b, j);
for(j = 354520; j < 354530; j++) _solve(b, j);
for(j = 355360; j < 355370; j++) _solve(b, j);
for(j = 356200; j < 356210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 357040; j < 357050; j++) _solve(b, j);
for(j = 357880; j < 357890; j++) _solve(b, j);
for(j = 358720; j < 358730; j++) _solve(b, j);
for(j = 359560; j < 359570; j++) _solve(b, j);
for(j = 360400; j < 360410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 290690; j < 290700; j++) _solve(b, j);
for(j = 291530; j < 291540; j++) _solve(b, j);
for(j = 292370; j < 292380; j++) _solve(b, j);
for(j = 293210; j < 293220; j++) _solve(b, j);
for(j = 294050; j < 294060; j++) _solve(b, j);
for(j = 294890; j < 294900; j++) _solve(b, j);
for(j = 295730; j < 295740; j++) _solve(b, j);
for(j = 296570; j < 296580; j++) _solve(b, j);
for(j = 297410; j < 297420; j++) _solve(b, j);
for(j = 298250; j < 298260; j++) _solve(b, j);
for(j = 299090; j < 299100; j++) _solve(b, j);
for(j = 299930; j < 299940; j++) _solve(b, j);
for(j = 300770; j < 300780; j++) _solve(b, j);
for(j = 301610; j < 301620; j++) _solve(b, j);
for(j = 302450; j < 302460; j++) _solve(b, j);
for(j = 303290; j < 303300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 304130; j < 304140; j++) _solve(b, j);
for(j = 304970; j < 304980; j++) _solve(b, j);
for(j = 305810; j < 305820; j++) _solve(b, j);
for(j = 306650; j < 306660; j++) _solve(b, j);
for(j = 307490; j < 307500; j++) _solve(b, j);
for(j = 308330; j < 308340; j++) _solve(b, j);
for(j = 309170; j < 309180; j++) _solve(b, j);
for(j = 310010; j < 310020; j++) _solve(b, j);
for(j = 310850; j < 310860; j++) _solve(b, j);
for(j = 311690; j < 311700; j++) _solve(b, j);
for(j = 312530; j < 312540; j++) _solve(b, j);
for(j = 313370; j < 313380; j++) _solve(b, j);
for(j = 314210; j < 314220; j++) _solve(b, j);
for(j = 315050; j < 315060; j++) _solve(b, j);
for(j = 315890; j < 315900; j++) _solve(b, j);
for(j = 316730; j < 316740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 317570; j < 317580; j++) _solve(b, j);
for(j = 318410; j < 318420; j++) _solve(b, j);
for(j = 319250; j < 319260; j++) _solve(b, j);
for(j = 320090; j < 320100; j++) _solve(b, j);
for(j = 320930; j < 320940; j++) _solve(b, j);
for(j = 321770; j < 321780; j++) _solve(b, j);
for(j = 322610; j < 322620; j++) _solve(b, j);
for(j = 323450; j < 323460; j++) _solve(b, j);
for(j = 324290; j < 324300; j++) _solve(b, j);
for(j = 325130; j < 325140; j++) _solve(b, j);
for(j = 325970; j < 325980; j++) _solve(b, j);
for(j = 326810; j < 326820; j++) _solve(b, j);
for(j = 327650; j < 327660; j++) _solve(b, j);
for(j = 328490; j < 328500; j++) _solve(b, j);
for(j = 329330; j < 329340; j++) _solve(b, j);
for(j = 330170; j < 330180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 331010; j < 331020; j++) _solve(b, j);
for(j = 331850; j < 331860; j++) _solve(b, j);
for(j = 332690; j < 332700; j++) _solve(b, j);
for(j = 333530; j < 333540; j++) _solve(b, j);
for(j = 334370; j < 334380; j++) _solve(b, j);
for(j = 335210; j < 335220; j++) _solve(b, j);
for(j = 336050; j < 336060; j++) _solve(b, j);
for(j = 336890; j < 336900; j++) _solve(b, j);
for(j = 337730; j < 337740; j++) _solve(b, j);
for(j = 338570; j < 338580; j++) _solve(b, j);
for(j = 339410; j < 339420; j++) _solve(b, j);
for(j = 340250; j < 340260; j++) _solve(b, j);
for(j = 341090; j < 341100; j++) _solve(b, j);
for(j = 341930; j < 341940; j++) _solve(b, j);
for(j = 342770; j < 342780; j++) _solve(b, j);
for(j = 343610; j < 343620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 344450; j < 344460; j++) _solve(b, j);
for(j = 345290; j < 345300; j++) _solve(b, j);
for(j = 346130; j < 346140; j++) _solve(b, j);
for(j = 346970; j < 346980; j++) _solve(b, j);
for(j = 347810; j < 347820; j++) _solve(b, j);
for(j = 348650; j < 348660; j++) _solve(b, j);
for(j = 349490; j < 349500; j++) _solve(b, j);
for(j = 350330; j < 350340; j++) _solve(b, j);
for(j = 351170; j < 351180; j++) _solve(b, j);
for(j = 352010; j < 352020; j++) _solve(b, j);
for(j = 352850; j < 352860; j++) _solve(b, j);
for(j = 353690; j < 353700; j++) _solve(b, j);
for(j = 354530; j < 354540; j++) _solve(b, j);
for(j = 355370; j < 355380; j++) _solve(b, j);
for(j = 356210; j < 356220; j++) _solve(b, j);
for(j = 357050; j < 357060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 357890; j < 357900; j++) _solve(b, j);
for(j = 358730; j < 358740; j++) _solve(b, j);
for(j = 359570; j < 359580; j++) _solve(b, j);
for(j = 360410; j < 360420; j++) _solve(b, j);
for(j = 361250; j < 361260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 291540; j < 291550; j++) _solve(b, j);
for(j = 292380; j < 292390; j++) _solve(b, j);
for(j = 293220; j < 293230; j++) _solve(b, j);
for(j = 294060; j < 294070; j++) _solve(b, j);
for(j = 294900; j < 294910; j++) _solve(b, j);
for(j = 295740; j < 295750; j++) _solve(b, j);
for(j = 296580; j < 296590; j++) _solve(b, j);
for(j = 297420; j < 297430; j++) _solve(b, j);
for(j = 298260; j < 298270; j++) _solve(b, j);
for(j = 299100; j < 299110; j++) _solve(b, j);
for(j = 299940; j < 299950; j++) _solve(b, j);
for(j = 300780; j < 300790; j++) _solve(b, j);
for(j = 301620; j < 301630; j++) _solve(b, j);
for(j = 302460; j < 302470; j++) _solve(b, j);
for(j = 303300; j < 303310; j++) _solve(b, j);
for(j = 304140; j < 304150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 304980; j < 304990; j++) _solve(b, j);
for(j = 305820; j < 305830; j++) _solve(b, j);
for(j = 306660; j < 306670; j++) _solve(b, j);
for(j = 307500; j < 307510; j++) _solve(b, j);
for(j = 308340; j < 308350; j++) _solve(b, j);
for(j = 309180; j < 309190; j++) _solve(b, j);
for(j = 310020; j < 310030; j++) _solve(b, j);
for(j = 310860; j < 310870; j++) _solve(b, j);
for(j = 311700; j < 311710; j++) _solve(b, j);
for(j = 312540; j < 312550; j++) _solve(b, j);
for(j = 313380; j < 313390; j++) _solve(b, j);
for(j = 314220; j < 314230; j++) _solve(b, j);
for(j = 315060; j < 315070; j++) _solve(b, j);
for(j = 315900; j < 315910; j++) _solve(b, j);
for(j = 316740; j < 316750; j++) _solve(b, j);
for(j = 317580; j < 317590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 318420; j < 318430; j++) _solve(b, j);
for(j = 319260; j < 319270; j++) _solve(b, j);
for(j = 320100; j < 320110; j++) _solve(b, j);
for(j = 320940; j < 320950; j++) _solve(b, j);
for(j = 321780; j < 321790; j++) _solve(b, j);
for(j = 322620; j < 322630; j++) _solve(b, j);
for(j = 323460; j < 323470; j++) _solve(b, j);
for(j = 324300; j < 324310; j++) _solve(b, j);
for(j = 325140; j < 325150; j++) _solve(b, j);
for(j = 325980; j < 325990; j++) _solve(b, j);
for(j = 326820; j < 326830; j++) _solve(b, j);
for(j = 327660; j < 327670; j++) _solve(b, j);
for(j = 328500; j < 328510; j++) _solve(b, j);
for(j = 329340; j < 329350; j++) _solve(b, j);
for(j = 330180; j < 330190; j++) _solve(b, j);
for(j = 331020; j < 331030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 331860; j < 331870; j++) _solve(b, j);
for(j = 332700; j < 332710; j++) _solve(b, j);
for(j = 333540; j < 333550; j++) _solve(b, j);
for(j = 334380; j < 334390; j++) _solve(b, j);
for(j = 335220; j < 335230; j++) _solve(b, j);
for(j = 336060; j < 336070; j++) _solve(b, j);
for(j = 336900; j < 336910; j++) _solve(b, j);
for(j = 337740; j < 337750; j++) _solve(b, j);
for(j = 338580; j < 338590; j++) _solve(b, j);
for(j = 339420; j < 339430; j++) _solve(b, j);
for(j = 340260; j < 340270; j++) _solve(b, j);
for(j = 341100; j < 341110; j++) _solve(b, j);
for(j = 341940; j < 341950; j++) _solve(b, j);
for(j = 342780; j < 342790; j++) _solve(b, j);
for(j = 343620; j < 343630; j++) _solve(b, j);
for(j = 344460; j < 344470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 345300; j < 345310; j++) _solve(b, j);
for(j = 346140; j < 346150; j++) _solve(b, j);
for(j = 346980; j < 346990; j++) _solve(b, j);
for(j = 347820; j < 347830; j++) _solve(b, j);
for(j = 348660; j < 348670; j++) _solve(b, j);
for(j = 349500; j < 349510; j++) _solve(b, j);
for(j = 350340; j < 350350; j++) _solve(b, j);
for(j = 351180; j < 351190; j++) _solve(b, j);
for(j = 352020; j < 352030; j++) _solve(b, j);
for(j = 352860; j < 352870; j++) _solve(b, j);
for(j = 353700; j < 353710; j++) _solve(b, j);
for(j = 354540; j < 354550; j++) _solve(b, j);
for(j = 355380; j < 355390; j++) _solve(b, j);
for(j = 356220; j < 356230; j++) _solve(b, j);
for(j = 357060; j < 357070; j++) _solve(b, j);
for(j = 357900; j < 357910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 358740; j < 358750; j++) _solve(b, j);
for(j = 359580; j < 359590; j++) _solve(b, j);
for(j = 360420; j < 360430; j++) _solve(b, j);
for(j = 361260; j < 361270; j++) _solve(b, j);
for(j = 362100; j < 362110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 292390; j < 292400; j++) _solve(b, j);
for(j = 293230; j < 293240; j++) _solve(b, j);
for(j = 294070; j < 294080; j++) _solve(b, j);
for(j = 294910; j < 294920; j++) _solve(b, j);
for(j = 295750; j < 295760; j++) _solve(b, j);
for(j = 296590; j < 296600; j++) _solve(b, j);
for(j = 297430; j < 297440; j++) _solve(b, j);
for(j = 298270; j < 298280; j++) _solve(b, j);
for(j = 299110; j < 299120; j++) _solve(b, j);
for(j = 299950; j < 299960; j++) _solve(b, j);
for(j = 300790; j < 300800; j++) _solve(b, j);
for(j = 301630; j < 301640; j++) _solve(b, j);
for(j = 302470; j < 302480; j++) _solve(b, j);
for(j = 303310; j < 303320; j++) _solve(b, j);
for(j = 304150; j < 304160; j++) _solve(b, j);
for(j = 304990; j < 305000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 305830; j < 305840; j++) _solve(b, j);
for(j = 306670; j < 306680; j++) _solve(b, j);
for(j = 307510; j < 307520; j++) _solve(b, j);
for(j = 308350; j < 308360; j++) _solve(b, j);
for(j = 309190; j < 309200; j++) _solve(b, j);
for(j = 310030; j < 310040; j++) _solve(b, j);
for(j = 310870; j < 310880; j++) _solve(b, j);
for(j = 311710; j < 311720; j++) _solve(b, j);
for(j = 312550; j < 312560; j++) _solve(b, j);
for(j = 313390; j < 313400; j++) _solve(b, j);
for(j = 314230; j < 314240; j++) _solve(b, j);
for(j = 315070; j < 315080; j++) _solve(b, j);
for(j = 315910; j < 315920; j++) _solve(b, j);
for(j = 316750; j < 316760; j++) _solve(b, j);
for(j = 317590; j < 317600; j++) _solve(b, j);
for(j = 318430; j < 318440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 319270; j < 319280; j++) _solve(b, j);
for(j = 320110; j < 320120; j++) _solve(b, j);
for(j = 320950; j < 320960; j++) _solve(b, j);
for(j = 321790; j < 321800; j++) _solve(b, j);
for(j = 322630; j < 322640; j++) _solve(b, j);
for(j = 323470; j < 323480; j++) _solve(b, j);
for(j = 324310; j < 324320; j++) _solve(b, j);
for(j = 325150; j < 325160; j++) _solve(b, j);
for(j = 325990; j < 326000; j++) _solve(b, j);
for(j = 326830; j < 326840; j++) _solve(b, j);
for(j = 327670; j < 327680; j++) _solve(b, j);
for(j = 328510; j < 328520; j++) _solve(b, j);
for(j = 329350; j < 329360; j++) _solve(b, j);
for(j = 330190; j < 330200; j++) _solve(b, j);
for(j = 331030; j < 331040; j++) _solve(b, j);
for(j = 331870; j < 331880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 332710; j < 332720; j++) _solve(b, j);
for(j = 333550; j < 333560; j++) _solve(b, j);
for(j = 334390; j < 334400; j++) _solve(b, j);
for(j = 335230; j < 335240; j++) _solve(b, j);
for(j = 336070; j < 336080; j++) _solve(b, j);
for(j = 336910; j < 336920; j++) _solve(b, j);
for(j = 337750; j < 337760; j++) _solve(b, j);
for(j = 338590; j < 338600; j++) _solve(b, j);
for(j = 339430; j < 339440; j++) _solve(b, j);
for(j = 340270; j < 340280; j++) _solve(b, j);
for(j = 341110; j < 341120; j++) _solve(b, j);
for(j = 341950; j < 341960; j++) _solve(b, j);
for(j = 342790; j < 342800; j++) _solve(b, j);
for(j = 343630; j < 343640; j++) _solve(b, j);
for(j = 344470; j < 344480; j++) _solve(b, j);
for(j = 345310; j < 345320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 346150; j < 346160; j++) _solve(b, j);
for(j = 346990; j < 347000; j++) _solve(b, j);
for(j = 347830; j < 347840; j++) _solve(b, j);
for(j = 348670; j < 348680; j++) _solve(b, j);
for(j = 349510; j < 349520; j++) _solve(b, j);
for(j = 350350; j < 350360; j++) _solve(b, j);
for(j = 351190; j < 351200; j++) _solve(b, j);
for(j = 352030; j < 352040; j++) _solve(b, j);
for(j = 352870; j < 352880; j++) _solve(b, j);
for(j = 353710; j < 353720; j++) _solve(b, j);
for(j = 354550; j < 354560; j++) _solve(b, j);
for(j = 355390; j < 355400; j++) _solve(b, j);
for(j = 356230; j < 356240; j++) _solve(b, j);
for(j = 357070; j < 357080; j++) _solve(b, j);
for(j = 357910; j < 357920; j++) _solve(b, j);
for(j = 358750; j < 358760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 359590; j < 359600; j++) _solve(b, j);
for(j = 360430; j < 360440; j++) _solve(b, j);
for(j = 361270; j < 361280; j++) _solve(b, j);
for(j = 362110; j < 362120; j++) _solve(b, j);
for(j = 362950; j < 362960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 293240; j < 293250; j++) _solve(b, j);
for(j = 294080; j < 294090; j++) _solve(b, j);
for(j = 294920; j < 294930; j++) _solve(b, j);
for(j = 295760; j < 295770; j++) _solve(b, j);
for(j = 296600; j < 296610; j++) _solve(b, j);
for(j = 297440; j < 297450; j++) _solve(b, j);
for(j = 298280; j < 298290; j++) _solve(b, j);
for(j = 299120; j < 299130; j++) _solve(b, j);
for(j = 299960; j < 299970; j++) _solve(b, j);
for(j = 300800; j < 300810; j++) _solve(b, j);
for(j = 301640; j < 301650; j++) _solve(b, j);
for(j = 302480; j < 302490; j++) _solve(b, j);
for(j = 303320; j < 303330; j++) _solve(b, j);
for(j = 304160; j < 304170; j++) _solve(b, j);
for(j = 305000; j < 305010; j++) _solve(b, j);
for(j = 305840; j < 305850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 306680; j < 306690; j++) _solve(b, j);
for(j = 307520; j < 307530; j++) _solve(b, j);
for(j = 308360; j < 308370; j++) _solve(b, j);
for(j = 309200; j < 309210; j++) _solve(b, j);
for(j = 310040; j < 310050; j++) _solve(b, j);
for(j = 310880; j < 310890; j++) _solve(b, j);
for(j = 311720; j < 311730; j++) _solve(b, j);
for(j = 312560; j < 312570; j++) _solve(b, j);
for(j = 313400; j < 313410; j++) _solve(b, j);
for(j = 314240; j < 314250; j++) _solve(b, j);
for(j = 315080; j < 315090; j++) _solve(b, j);
for(j = 315920; j < 315930; j++) _solve(b, j);
for(j = 316760; j < 316770; j++) _solve(b, j);
for(j = 317600; j < 317610; j++) _solve(b, j);
for(j = 318440; j < 318450; j++) _solve(b, j);
for(j = 319280; j < 319290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 320120; j < 320130; j++) _solve(b, j);
for(j = 320960; j < 320970; j++) _solve(b, j);
for(j = 321800; j < 321810; j++) _solve(b, j);
for(j = 322640; j < 322650; j++) _solve(b, j);
for(j = 323480; j < 323490; j++) _solve(b, j);
for(j = 324320; j < 324330; j++) _solve(b, j);
for(j = 325160; j < 325170; j++) _solve(b, j);
for(j = 326000; j < 326010; j++) _solve(b, j);
for(j = 326840; j < 326850; j++) _solve(b, j);
for(j = 327680; j < 327690; j++) _solve(b, j);
for(j = 328520; j < 328530; j++) _solve(b, j);
for(j = 329360; j < 329370; j++) _solve(b, j);
for(j = 330200; j < 330210; j++) _solve(b, j);
for(j = 331040; j < 331050; j++) _solve(b, j);
for(j = 331880; j < 331890; j++) _solve(b, j);
for(j = 332720; j < 332730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 333560; j < 333570; j++) _solve(b, j);
for(j = 334400; j < 334410; j++) _solve(b, j);
for(j = 335240; j < 335250; j++) _solve(b, j);
for(j = 336080; j < 336090; j++) _solve(b, j);
for(j = 336920; j < 336930; j++) _solve(b, j);
for(j = 337760; j < 337770; j++) _solve(b, j);
for(j = 338600; j < 338610; j++) _solve(b, j);
for(j = 339440; j < 339450; j++) _solve(b, j);
for(j = 340280; j < 340290; j++) _solve(b, j);
for(j = 341120; j < 341130; j++) _solve(b, j);
for(j = 341960; j < 341970; j++) _solve(b, j);
for(j = 342800; j < 342810; j++) _solve(b, j);
for(j = 343640; j < 343650; j++) _solve(b, j);
for(j = 344480; j < 344490; j++) _solve(b, j);
for(j = 345320; j < 345330; j++) _solve(b, j);
for(j = 346160; j < 346170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 347000; j < 347010; j++) _solve(b, j);
for(j = 347840; j < 347850; j++) _solve(b, j);
for(j = 348680; j < 348690; j++) _solve(b, j);
for(j = 349520; j < 349530; j++) _solve(b, j);
for(j = 350360; j < 350370; j++) _solve(b, j);
for(j = 351200; j < 351210; j++) _solve(b, j);
for(j = 352040; j < 352050; j++) _solve(b, j);
for(j = 352880; j < 352890; j++) _solve(b, j);
for(j = 353720; j < 353730; j++) _solve(b, j);
for(j = 354560; j < 354570; j++) _solve(b, j);
for(j = 355400; j < 355410; j++) _solve(b, j);
for(j = 356240; j < 356250; j++) _solve(b, j);
for(j = 357080; j < 357090; j++) _solve(b, j);
for(j = 357920; j < 357930; j++) _solve(b, j);
for(j = 358760; j < 358770; j++) _solve(b, j);
for(j = 359600; j < 359610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 360440; j < 360450; j++) _solve(b, j);
for(j = 361280; j < 361290; j++) _solve(b, j);
for(j = 362120; j < 362130; j++) _solve(b, j);
for(j = 362960; j < 362970; j++) _solve(b, j);
for(j = 363800; j < 363810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 294090; j < 294100; j++) _solve(b, j);
for(j = 294930; j < 294940; j++) _solve(b, j);
for(j = 295770; j < 295780; j++) _solve(b, j);
for(j = 296610; j < 296620; j++) _solve(b, j);
for(j = 297450; j < 297460; j++) _solve(b, j);
for(j = 298290; j < 298300; j++) _solve(b, j);
for(j = 299130; j < 299140; j++) _solve(b, j);
for(j = 299970; j < 299980; j++) _solve(b, j);
for(j = 300810; j < 300820; j++) _solve(b, j);
for(j = 301650; j < 301660; j++) _solve(b, j);
for(j = 302490; j < 302500; j++) _solve(b, j);
for(j = 303330; j < 303340; j++) _solve(b, j);
for(j = 304170; j < 304180; j++) _solve(b, j);
for(j = 305010; j < 305020; j++) _solve(b, j);
for(j = 305850; j < 305860; j++) _solve(b, j);
for(j = 306690; j < 306700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 307530; j < 307540; j++) _solve(b, j);
for(j = 308370; j < 308380; j++) _solve(b, j);
for(j = 309210; j < 309220; j++) _solve(b, j);
for(j = 310050; j < 310060; j++) _solve(b, j);
for(j = 310890; j < 310900; j++) _solve(b, j);
for(j = 311730; j < 311740; j++) _solve(b, j);
for(j = 312570; j < 312580; j++) _solve(b, j);
for(j = 313410; j < 313420; j++) _solve(b, j);
for(j = 314250; j < 314260; j++) _solve(b, j);
for(j = 315090; j < 315100; j++) _solve(b, j);
for(j = 315930; j < 315940; j++) _solve(b, j);
for(j = 316770; j < 316780; j++) _solve(b, j);
for(j = 317610; j < 317620; j++) _solve(b, j);
for(j = 318450; j < 318460; j++) _solve(b, j);
for(j = 319290; j < 319300; j++) _solve(b, j);
for(j = 320130; j < 320140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 320970; j < 320980; j++) _solve(b, j);
for(j = 321810; j < 321820; j++) _solve(b, j);
for(j = 322650; j < 322660; j++) _solve(b, j);
for(j = 323490; j < 323500; j++) _solve(b, j);
for(j = 324330; j < 324340; j++) _solve(b, j);
for(j = 325170; j < 325180; j++) _solve(b, j);
for(j = 326010; j < 326020; j++) _solve(b, j);
for(j = 326850; j < 326860; j++) _solve(b, j);
for(j = 327690; j < 327700; j++) _solve(b, j);
for(j = 328530; j < 328540; j++) _solve(b, j);
for(j = 329370; j < 329380; j++) _solve(b, j);
for(j = 330210; j < 330220; j++) _solve(b, j);
for(j = 331050; j < 331060; j++) _solve(b, j);
for(j = 331890; j < 331900; j++) _solve(b, j);
for(j = 332730; j < 332740; j++) _solve(b, j);
for(j = 333570; j < 333580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 334410; j < 334420; j++) _solve(b, j);
for(j = 335250; j < 335260; j++) _solve(b, j);
for(j = 336090; j < 336100; j++) _solve(b, j);
for(j = 336930; j < 336940; j++) _solve(b, j);
for(j = 337770; j < 337780; j++) _solve(b, j);
for(j = 338610; j < 338620; j++) _solve(b, j);
for(j = 339450; j < 339460; j++) _solve(b, j);
for(j = 340290; j < 340300; j++) _solve(b, j);
for(j = 341130; j < 341140; j++) _solve(b, j);
for(j = 341970; j < 341980; j++) _solve(b, j);
for(j = 342810; j < 342820; j++) _solve(b, j);
for(j = 343650; j < 343660; j++) _solve(b, j);
for(j = 344490; j < 344500; j++) _solve(b, j);
for(j = 345330; j < 345340; j++) _solve(b, j);
for(j = 346170; j < 346180; j++) _solve(b, j);
for(j = 347010; j < 347020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 347850; j < 347860; j++) _solve(b, j);
for(j = 348690; j < 348700; j++) _solve(b, j);
for(j = 349530; j < 349540; j++) _solve(b, j);
for(j = 350370; j < 350380; j++) _solve(b, j);
for(j = 351210; j < 351220; j++) _solve(b, j);
for(j = 352050; j < 352060; j++) _solve(b, j);
for(j = 352890; j < 352900; j++) _solve(b, j);
for(j = 353730; j < 353740; j++) _solve(b, j);
for(j = 354570; j < 354580; j++) _solve(b, j);
for(j = 355410; j < 355420; j++) _solve(b, j);
for(j = 356250; j < 356260; j++) _solve(b, j);
for(j = 357090; j < 357100; j++) _solve(b, j);
for(j = 357930; j < 357940; j++) _solve(b, j);
for(j = 358770; j < 358780; j++) _solve(b, j);
for(j = 359610; j < 359620; j++) _solve(b, j);
for(j = 360450; j < 360460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 361290; j < 361300; j++) _solve(b, j);
for(j = 362130; j < 362140; j++) _solve(b, j);
for(j = 362970; j < 362980; j++) _solve(b, j);
for(j = 363810; j < 363820; j++) _solve(b, j);
for(j = 364650; j < 364660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 294940; j < 294950; j++) _solve(b, j);
for(j = 295780; j < 295790; j++) _solve(b, j);
for(j = 296620; j < 296630; j++) _solve(b, j);
for(j = 297460; j < 297470; j++) _solve(b, j);
for(j = 298300; j < 298310; j++) _solve(b, j);
for(j = 299140; j < 299150; j++) _solve(b, j);
for(j = 299980; j < 299990; j++) _solve(b, j);
for(j = 300820; j < 300830; j++) _solve(b, j);
for(j = 301660; j < 301670; j++) _solve(b, j);
for(j = 302500; j < 302510; j++) _solve(b, j);
for(j = 303340; j < 303350; j++) _solve(b, j);
for(j = 304180; j < 304190; j++) _solve(b, j);
for(j = 305020; j < 305030; j++) _solve(b, j);
for(j = 305860; j < 305870; j++) _solve(b, j);
for(j = 306700; j < 306710; j++) _solve(b, j);
for(j = 307540; j < 307550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 308380; j < 308390; j++) _solve(b, j);
for(j = 309220; j < 309230; j++) _solve(b, j);
for(j = 310060; j < 310070; j++) _solve(b, j);
for(j = 310900; j < 310910; j++) _solve(b, j);
for(j = 311740; j < 311750; j++) _solve(b, j);
for(j = 312580; j < 312590; j++) _solve(b, j);
for(j = 313420; j < 313430; j++) _solve(b, j);
for(j = 314260; j < 314270; j++) _solve(b, j);
for(j = 315100; j < 315110; j++) _solve(b, j);
for(j = 315940; j < 315950; j++) _solve(b, j);
for(j = 316780; j < 316790; j++) _solve(b, j);
for(j = 317620; j < 317630; j++) _solve(b, j);
for(j = 318460; j < 318470; j++) _solve(b, j);
for(j = 319300; j < 319310; j++) _solve(b, j);
for(j = 320140; j < 320150; j++) _solve(b, j);
for(j = 320980; j < 320990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 321820; j < 321830; j++) _solve(b, j);
for(j = 322660; j < 322670; j++) _solve(b, j);
for(j = 323500; j < 323510; j++) _solve(b, j);
for(j = 324340; j < 324350; j++) _solve(b, j);
for(j = 325180; j < 325190; j++) _solve(b, j);
for(j = 326020; j < 326030; j++) _solve(b, j);
for(j = 326860; j < 326870; j++) _solve(b, j);
for(j = 327700; j < 327710; j++) _solve(b, j);
for(j = 328540; j < 328550; j++) _solve(b, j);
for(j = 329380; j < 329390; j++) _solve(b, j);
for(j = 330220; j < 330230; j++) _solve(b, j);
for(j = 331060; j < 331070; j++) _solve(b, j);
for(j = 331900; j < 331910; j++) _solve(b, j);
for(j = 332740; j < 332750; j++) _solve(b, j);
for(j = 333580; j < 333590; j++) _solve(b, j);
for(j = 334420; j < 334430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 335260; j < 335270; j++) _solve(b, j);
for(j = 336100; j < 336110; j++) _solve(b, j);
for(j = 336940; j < 336950; j++) _solve(b, j);
for(j = 337780; j < 337790; j++) _solve(b, j);
for(j = 338620; j < 338630; j++) _solve(b, j);
for(j = 339460; j < 339470; j++) _solve(b, j);
for(j = 340300; j < 340310; j++) _solve(b, j);
for(j = 341140; j < 341150; j++) _solve(b, j);
for(j = 341980; j < 341990; j++) _solve(b, j);
for(j = 342820; j < 342830; j++) _solve(b, j);
for(j = 343660; j < 343670; j++) _solve(b, j);
for(j = 344500; j < 344510; j++) _solve(b, j);
for(j = 345340; j < 345350; j++) _solve(b, j);
for(j = 346180; j < 346190; j++) _solve(b, j);
for(j = 347020; j < 347030; j++) _solve(b, j);
for(j = 347860; j < 347870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 348700; j < 348710; j++) _solve(b, j);
for(j = 349540; j < 349550; j++) _solve(b, j);
for(j = 350380; j < 350390; j++) _solve(b, j);
for(j = 351220; j < 351230; j++) _solve(b, j);
for(j = 352060; j < 352070; j++) _solve(b, j);
for(j = 352900; j < 352910; j++) _solve(b, j);
for(j = 353740; j < 353750; j++) _solve(b, j);
for(j = 354580; j < 354590; j++) _solve(b, j);
for(j = 355420; j < 355430; j++) _solve(b, j);
for(j = 356260; j < 356270; j++) _solve(b, j);
for(j = 357100; j < 357110; j++) _solve(b, j);
for(j = 357940; j < 357950; j++) _solve(b, j);
for(j = 358780; j < 358790; j++) _solve(b, j);
for(j = 359620; j < 359630; j++) _solve(b, j);
for(j = 360460; j < 360470; j++) _solve(b, j);
for(j = 361300; j < 361310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 362140; j < 362150; j++) _solve(b, j);
for(j = 362980; j < 362990; j++) _solve(b, j);
for(j = 363820; j < 363830; j++) _solve(b, j);
for(j = 364660; j < 364670; j++) _solve(b, j);
for(j = 365500; j < 365510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 295790; j < 295800; j++) _solve(b, j);
for(j = 296630; j < 296640; j++) _solve(b, j);
for(j = 297470; j < 297480; j++) _solve(b, j);
for(j = 298310; j < 298320; j++) _solve(b, j);
for(j = 299150; j < 299160; j++) _solve(b, j);
for(j = 299990; j < 300000; j++) _solve(b, j);
for(j = 300830; j < 300840; j++) _solve(b, j);
for(j = 301670; j < 301680; j++) _solve(b, j);
for(j = 302510; j < 302520; j++) _solve(b, j);
for(j = 303350; j < 303360; j++) _solve(b, j);
for(j = 304190; j < 304200; j++) _solve(b, j);
for(j = 305030; j < 305040; j++) _solve(b, j);
for(j = 305870; j < 305880; j++) _solve(b, j);
for(j = 306710; j < 306720; j++) _solve(b, j);
for(j = 307550; j < 307560; j++) _solve(b, j);
for(j = 308390; j < 308400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 309230; j < 309240; j++) _solve(b, j);
for(j = 310070; j < 310080; j++) _solve(b, j);
for(j = 310910; j < 310920; j++) _solve(b, j);
for(j = 311750; j < 311760; j++) _solve(b, j);
for(j = 312590; j < 312600; j++) _solve(b, j);
for(j = 313430; j < 313440; j++) _solve(b, j);
for(j = 314270; j < 314280; j++) _solve(b, j);
for(j = 315110; j < 315120; j++) _solve(b, j);
for(j = 315950; j < 315960; j++) _solve(b, j);
for(j = 316790; j < 316800; j++) _solve(b, j);
for(j = 317630; j < 317640; j++) _solve(b, j);
for(j = 318470; j < 318480; j++) _solve(b, j);
for(j = 319310; j < 319320; j++) _solve(b, j);
for(j = 320150; j < 320160; j++) _solve(b, j);
for(j = 320990; j < 321000; j++) _solve(b, j);
for(j = 321830; j < 321840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 322670; j < 322680; j++) _solve(b, j);
for(j = 323510; j < 323520; j++) _solve(b, j);
for(j = 324350; j < 324360; j++) _solve(b, j);
for(j = 325190; j < 325200; j++) _solve(b, j);
for(j = 326030; j < 326040; j++) _solve(b, j);
for(j = 326870; j < 326880; j++) _solve(b, j);
for(j = 327710; j < 327720; j++) _solve(b, j);
for(j = 328550; j < 328560; j++) _solve(b, j);
for(j = 329390; j < 329400; j++) _solve(b, j);
for(j = 330230; j < 330240; j++) _solve(b, j);
for(j = 331070; j < 331080; j++) _solve(b, j);
for(j = 331910; j < 331920; j++) _solve(b, j);
for(j = 332750; j < 332760; j++) _solve(b, j);
for(j = 333590; j < 333600; j++) _solve(b, j);
for(j = 334430; j < 334440; j++) _solve(b, j);
for(j = 335270; j < 335280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 336110; j < 336120; j++) _solve(b, j);
for(j = 336950; j < 336960; j++) _solve(b, j);
for(j = 337790; j < 337800; j++) _solve(b, j);
for(j = 338630; j < 338640; j++) _solve(b, j);
for(j = 339470; j < 339480; j++) _solve(b, j);
for(j = 340310; j < 340320; j++) _solve(b, j);
for(j = 341150; j < 341160; j++) _solve(b, j);
for(j = 341990; j < 342000; j++) _solve(b, j);
for(j = 342830; j < 342840; j++) _solve(b, j);
for(j = 343670; j < 343680; j++) _solve(b, j);
for(j = 344510; j < 344520; j++) _solve(b, j);
for(j = 345350; j < 345360; j++) _solve(b, j);
for(j = 346190; j < 346200; j++) _solve(b, j);
for(j = 347030; j < 347040; j++) _solve(b, j);
for(j = 347870; j < 347880; j++) _solve(b, j);
for(j = 348710; j < 348720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 349550; j < 349560; j++) _solve(b, j);
for(j = 350390; j < 350400; j++) _solve(b, j);
for(j = 351230; j < 351240; j++) _solve(b, j);
for(j = 352070; j < 352080; j++) _solve(b, j);
for(j = 352910; j < 352920; j++) _solve(b, j);
for(j = 353750; j < 353760; j++) _solve(b, j);
for(j = 354590; j < 354600; j++) _solve(b, j);
for(j = 355430; j < 355440; j++) _solve(b, j);
for(j = 356270; j < 356280; j++) _solve(b, j);
for(j = 357110; j < 357120; j++) _solve(b, j);
for(j = 357950; j < 357960; j++) _solve(b, j);
for(j = 358790; j < 358800; j++) _solve(b, j);
for(j = 359630; j < 359640; j++) _solve(b, j);
for(j = 360470; j < 360480; j++) _solve(b, j);
for(j = 361310; j < 361320; j++) _solve(b, j);
for(j = 362150; j < 362160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 362990; j < 363000; j++) _solve(b, j);
for(j = 363830; j < 363840; j++) _solve(b, j);
for(j = 364670; j < 364680; j++) _solve(b, j);
for(j = 365510; j < 365520; j++) _solve(b, j);
for(j = 366350; j < 366360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 296640; j < 296650; j++) _solve(b, j);
for(j = 297480; j < 297490; j++) _solve(b, j);
for(j = 298320; j < 298330; j++) _solve(b, j);
for(j = 299160; j < 299170; j++) _solve(b, j);
for(j = 300000; j < 300010; j++) _solve(b, j);
for(j = 300840; j < 300850; j++) _solve(b, j);
for(j = 301680; j < 301690; j++) _solve(b, j);
for(j = 302520; j < 302530; j++) _solve(b, j);
for(j = 303360; j < 303370; j++) _solve(b, j);
for(j = 304200; j < 304210; j++) _solve(b, j);
for(j = 305040; j < 305050; j++) _solve(b, j);
for(j = 305880; j < 305890; j++) _solve(b, j);
for(j = 306720; j < 306730; j++) _solve(b, j);
for(j = 307560; j < 307570; j++) _solve(b, j);
for(j = 308400; j < 308410; j++) _solve(b, j);
for(j = 309240; j < 309250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 310080; j < 310090; j++) _solve(b, j);
for(j = 310920; j < 310930; j++) _solve(b, j);
for(j = 311760; j < 311770; j++) _solve(b, j);
for(j = 312600; j < 312610; j++) _solve(b, j);
for(j = 313440; j < 313450; j++) _solve(b, j);
for(j = 314280; j < 314290; j++) _solve(b, j);
for(j = 315120; j < 315130; j++) _solve(b, j);
for(j = 315960; j < 315970; j++) _solve(b, j);
for(j = 316800; j < 316810; j++) _solve(b, j);
for(j = 317640; j < 317650; j++) _solve(b, j);
for(j = 318480; j < 318490; j++) _solve(b, j);
for(j = 319320; j < 319330; j++) _solve(b, j);
for(j = 320160; j < 320170; j++) _solve(b, j);
for(j = 321000; j < 321010; j++) _solve(b, j);
for(j = 321840; j < 321850; j++) _solve(b, j);
for(j = 322680; j < 322690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 323520; j < 323530; j++) _solve(b, j);
for(j = 324360; j < 324370; j++) _solve(b, j);
for(j = 325200; j < 325210; j++) _solve(b, j);
for(j = 326040; j < 326050; j++) _solve(b, j);
for(j = 326880; j < 326890; j++) _solve(b, j);
for(j = 327720; j < 327730; j++) _solve(b, j);
for(j = 328560; j < 328570; j++) _solve(b, j);
for(j = 329400; j < 329410; j++) _solve(b, j);
for(j = 330240; j < 330250; j++) _solve(b, j);
for(j = 331080; j < 331090; j++) _solve(b, j);
for(j = 331920; j < 331930; j++) _solve(b, j);
for(j = 332760; j < 332770; j++) _solve(b, j);
for(j = 333600; j < 333610; j++) _solve(b, j);
for(j = 334440; j < 334450; j++) _solve(b, j);
for(j = 335280; j < 335290; j++) _solve(b, j);
for(j = 336120; j < 336130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 336960; j < 336970; j++) _solve(b, j);
for(j = 337800; j < 337810; j++) _solve(b, j);
for(j = 338640; j < 338650; j++) _solve(b, j);
for(j = 339480; j < 339490; j++) _solve(b, j);
for(j = 340320; j < 340330; j++) _solve(b, j);
for(j = 341160; j < 341170; j++) _solve(b, j);
for(j = 342000; j < 342010; j++) _solve(b, j);
for(j = 342840; j < 342850; j++) _solve(b, j);
for(j = 343680; j < 343690; j++) _solve(b, j);
for(j = 344520; j < 344530; j++) _solve(b, j);
for(j = 345360; j < 345370; j++) _solve(b, j);
for(j = 346200; j < 346210; j++) _solve(b, j);
for(j = 347040; j < 347050; j++) _solve(b, j);
for(j = 347880; j < 347890; j++) _solve(b, j);
for(j = 348720; j < 348730; j++) _solve(b, j);
for(j = 349560; j < 349570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 350400; j < 350410; j++) _solve(b, j);
for(j = 351240; j < 351250; j++) _solve(b, j);
for(j = 352080; j < 352090; j++) _solve(b, j);
for(j = 352920; j < 352930; j++) _solve(b, j);
for(j = 353760; j < 353770; j++) _solve(b, j);
for(j = 354600; j < 354610; j++) _solve(b, j);
for(j = 355440; j < 355450; j++) _solve(b, j);
for(j = 356280; j < 356290; j++) _solve(b, j);
for(j = 357120; j < 357130; j++) _solve(b, j);
for(j = 357960; j < 357970; j++) _solve(b, j);
for(j = 358800; j < 358810; j++) _solve(b, j);
for(j = 359640; j < 359650; j++) _solve(b, j);
for(j = 360480; j < 360490; j++) _solve(b, j);
for(j = 361320; j < 361330; j++) _solve(b, j);
for(j = 362160; j < 362170; j++) _solve(b, j);
for(j = 363000; j < 363010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 363840; j < 363850; j++) _solve(b, j);
for(j = 364680; j < 364690; j++) _solve(b, j);
for(j = 365520; j < 365530; j++) _solve(b, j);
for(j = 366360; j < 366370; j++) _solve(b, j);
for(j = 367200; j < 367210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 297490; j < 297500; j++) _solve(b, j);
for(j = 298330; j < 298340; j++) _solve(b, j);
for(j = 299170; j < 299180; j++) _solve(b, j);
for(j = 300010; j < 300020; j++) _solve(b, j);
for(j = 300850; j < 300860; j++) _solve(b, j);
for(j = 301690; j < 301700; j++) _solve(b, j);
for(j = 302530; j < 302540; j++) _solve(b, j);
for(j = 303370; j < 303380; j++) _solve(b, j);
for(j = 304210; j < 304220; j++) _solve(b, j);
for(j = 305050; j < 305060; j++) _solve(b, j);
for(j = 305890; j < 305900; j++) _solve(b, j);
for(j = 306730; j < 306740; j++) _solve(b, j);
for(j = 307570; j < 307580; j++) _solve(b, j);
for(j = 308410; j < 308420; j++) _solve(b, j);
for(j = 309250; j < 309260; j++) _solve(b, j);
for(j = 310090; j < 310100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 310930; j < 310940; j++) _solve(b, j);
for(j = 311770; j < 311780; j++) _solve(b, j);
for(j = 312610; j < 312620; j++) _solve(b, j);
for(j = 313450; j < 313460; j++) _solve(b, j);
for(j = 314290; j < 314300; j++) _solve(b, j);
for(j = 315130; j < 315140; j++) _solve(b, j);
for(j = 315970; j < 315980; j++) _solve(b, j);
for(j = 316810; j < 316820; j++) _solve(b, j);
for(j = 317650; j < 317660; j++) _solve(b, j);
for(j = 318490; j < 318500; j++) _solve(b, j);
for(j = 319330; j < 319340; j++) _solve(b, j);
for(j = 320170; j < 320180; j++) _solve(b, j);
for(j = 321010; j < 321020; j++) _solve(b, j);
for(j = 321850; j < 321860; j++) _solve(b, j);
for(j = 322690; j < 322700; j++) _solve(b, j);
for(j = 323530; j < 323540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 324370; j < 324380; j++) _solve(b, j);
for(j = 325210; j < 325220; j++) _solve(b, j);
for(j = 326050; j < 326060; j++) _solve(b, j);
for(j = 326890; j < 326900; j++) _solve(b, j);
for(j = 327730; j < 327740; j++) _solve(b, j);
for(j = 328570; j < 328580; j++) _solve(b, j);
for(j = 329410; j < 329420; j++) _solve(b, j);
for(j = 330250; j < 330260; j++) _solve(b, j);
for(j = 331090; j < 331100; j++) _solve(b, j);
for(j = 331930; j < 331940; j++) _solve(b, j);
for(j = 332770; j < 332780; j++) _solve(b, j);
for(j = 333610; j < 333620; j++) _solve(b, j);
for(j = 334450; j < 334460; j++) _solve(b, j);
for(j = 335290; j < 335300; j++) _solve(b, j);
for(j = 336130; j < 336140; j++) _solve(b, j);
for(j = 336970; j < 336980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 337810; j < 337820; j++) _solve(b, j);
for(j = 338650; j < 338660; j++) _solve(b, j);
for(j = 339490; j < 339500; j++) _solve(b, j);
for(j = 340330; j < 340340; j++) _solve(b, j);
for(j = 341170; j < 341180; j++) _solve(b, j);
for(j = 342010; j < 342020; j++) _solve(b, j);
for(j = 342850; j < 342860; j++) _solve(b, j);
for(j = 343690; j < 343700; j++) _solve(b, j);
for(j = 344530; j < 344540; j++) _solve(b, j);
for(j = 345370; j < 345380; j++) _solve(b, j);
for(j = 346210; j < 346220; j++) _solve(b, j);
for(j = 347050; j < 347060; j++) _solve(b, j);
for(j = 347890; j < 347900; j++) _solve(b, j);
for(j = 348730; j < 348740; j++) _solve(b, j);
for(j = 349570; j < 349580; j++) _solve(b, j);
for(j = 350410; j < 350420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 351250; j < 351260; j++) _solve(b, j);
for(j = 352090; j < 352100; j++) _solve(b, j);
for(j = 352930; j < 352940; j++) _solve(b, j);
for(j = 353770; j < 353780; j++) _solve(b, j);
for(j = 354610; j < 354620; j++) _solve(b, j);
for(j = 355450; j < 355460; j++) _solve(b, j);
for(j = 356290; j < 356300; j++) _solve(b, j);
for(j = 357130; j < 357140; j++) _solve(b, j);
for(j = 357970; j < 357980; j++) _solve(b, j);
for(j = 358810; j < 358820; j++) _solve(b, j);
for(j = 359650; j < 359660; j++) _solve(b, j);
for(j = 360490; j < 360500; j++) _solve(b, j);
for(j = 361330; j < 361340; j++) _solve(b, j);
for(j = 362170; j < 362180; j++) _solve(b, j);
for(j = 363010; j < 363020; j++) _solve(b, j);
for(j = 363850; j < 363860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 364690; j < 364700; j++) _solve(b, j);
for(j = 365530; j < 365540; j++) _solve(b, j);
for(j = 366370; j < 366380; j++) _solve(b, j);
for(j = 367210; j < 367220; j++) _solve(b, j);
for(j = 368050; j < 368060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 298340; j < 298350; j++) _solve(b, j);
for(j = 299180; j < 299190; j++) _solve(b, j);
for(j = 300020; j < 300030; j++) _solve(b, j);
for(j = 300860; j < 300870; j++) _solve(b, j);
for(j = 301700; j < 301710; j++) _solve(b, j);
for(j = 302540; j < 302550; j++) _solve(b, j);
for(j = 303380; j < 303390; j++) _solve(b, j);
for(j = 304220; j < 304230; j++) _solve(b, j);
for(j = 305060; j < 305070; j++) _solve(b, j);
for(j = 305900; j < 305910; j++) _solve(b, j);
for(j = 306740; j < 306750; j++) _solve(b, j);
for(j = 307580; j < 307590; j++) _solve(b, j);
for(j = 308420; j < 308430; j++) _solve(b, j);
for(j = 309260; j < 309270; j++) _solve(b, j);
for(j = 310100; j < 310110; j++) _solve(b, j);
for(j = 310940; j < 310950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 311780; j < 311790; j++) _solve(b, j);
for(j = 312620; j < 312630; j++) _solve(b, j);
for(j = 313460; j < 313470; j++) _solve(b, j);
for(j = 314300; j < 314310; j++) _solve(b, j);
for(j = 315140; j < 315150; j++) _solve(b, j);
for(j = 315980; j < 315990; j++) _solve(b, j);
for(j = 316820; j < 316830; j++) _solve(b, j);
for(j = 317660; j < 317670; j++) _solve(b, j);
for(j = 318500; j < 318510; j++) _solve(b, j);
for(j = 319340; j < 319350; j++) _solve(b, j);
for(j = 320180; j < 320190; j++) _solve(b, j);
for(j = 321020; j < 321030; j++) _solve(b, j);
for(j = 321860; j < 321870; j++) _solve(b, j);
for(j = 322700; j < 322710; j++) _solve(b, j);
for(j = 323540; j < 323550; j++) _solve(b, j);
for(j = 324380; j < 324390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 325220; j < 325230; j++) _solve(b, j);
for(j = 326060; j < 326070; j++) _solve(b, j);
for(j = 326900; j < 326910; j++) _solve(b, j);
for(j = 327740; j < 327750; j++) _solve(b, j);
for(j = 328580; j < 328590; j++) _solve(b, j);
for(j = 329420; j < 329430; j++) _solve(b, j);
for(j = 330260; j < 330270; j++) _solve(b, j);
for(j = 331100; j < 331110; j++) _solve(b, j);
for(j = 331940; j < 331950; j++) _solve(b, j);
for(j = 332780; j < 332790; j++) _solve(b, j);
for(j = 333620; j < 333630; j++) _solve(b, j);
for(j = 334460; j < 334470; j++) _solve(b, j);
for(j = 335300; j < 335310; j++) _solve(b, j);
for(j = 336140; j < 336150; j++) _solve(b, j);
for(j = 336980; j < 336990; j++) _solve(b, j);
for(j = 337820; j < 337830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 338660; j < 338670; j++) _solve(b, j);
for(j = 339500; j < 339510; j++) _solve(b, j);
for(j = 340340; j < 340350; j++) _solve(b, j);
for(j = 341180; j < 341190; j++) _solve(b, j);
for(j = 342020; j < 342030; j++) _solve(b, j);
for(j = 342860; j < 342870; j++) _solve(b, j);
for(j = 343700; j < 343710; j++) _solve(b, j);
for(j = 344540; j < 344550; j++) _solve(b, j);
for(j = 345380; j < 345390; j++) _solve(b, j);
for(j = 346220; j < 346230; j++) _solve(b, j);
for(j = 347060; j < 347070; j++) _solve(b, j);
for(j = 347900; j < 347910; j++) _solve(b, j);
for(j = 348740; j < 348750; j++) _solve(b, j);
for(j = 349580; j < 349590; j++) _solve(b, j);
for(j = 350420; j < 350430; j++) _solve(b, j);
for(j = 351260; j < 351270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 352100; j < 352110; j++) _solve(b, j);
for(j = 352940; j < 352950; j++) _solve(b, j);
for(j = 353780; j < 353790; j++) _solve(b, j);
for(j = 354620; j < 354630; j++) _solve(b, j);
for(j = 355460; j < 355470; j++) _solve(b, j);
for(j = 356300; j < 356310; j++) _solve(b, j);
for(j = 357140; j < 357150; j++) _solve(b, j);
for(j = 357980; j < 357990; j++) _solve(b, j);
for(j = 358820; j < 358830; j++) _solve(b, j);
for(j = 359660; j < 359670; j++) _solve(b, j);
for(j = 360500; j < 360510; j++) _solve(b, j);
for(j = 361340; j < 361350; j++) _solve(b, j);
for(j = 362180; j < 362190; j++) _solve(b, j);
for(j = 363020; j < 363030; j++) _solve(b, j);
for(j = 363860; j < 363870; j++) _solve(b, j);
for(j = 364700; j < 364710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 365540; j < 365550; j++) _solve(b, j);
for(j = 366380; j < 366390; j++) _solve(b, j);
for(j = 367220; j < 367230; j++) _solve(b, j);
for(j = 368060; j < 368070; j++) _solve(b, j);
for(j = 368900; j < 368910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 299190; j < 299200; j++) _solve(b, j);
for(j = 300030; j < 300040; j++) _solve(b, j);
for(j = 300870; j < 300880; j++) _solve(b, j);
for(j = 301710; j < 301720; j++) _solve(b, j);
for(j = 302550; j < 302560; j++) _solve(b, j);
for(j = 303390; j < 303400; j++) _solve(b, j);
for(j = 304230; j < 304240; j++) _solve(b, j);
for(j = 305070; j < 305080; j++) _solve(b, j);
for(j = 305910; j < 305920; j++) _solve(b, j);
for(j = 306750; j < 306760; j++) _solve(b, j);
for(j = 307590; j < 307600; j++) _solve(b, j);
for(j = 308430; j < 308440; j++) _solve(b, j);
for(j = 309270; j < 309280; j++) _solve(b, j);
for(j = 310110; j < 310120; j++) _solve(b, j);
for(j = 310950; j < 310960; j++) _solve(b, j);
for(j = 311790; j < 311800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 312630; j < 312640; j++) _solve(b, j);
for(j = 313470; j < 313480; j++) _solve(b, j);
for(j = 314310; j < 314320; j++) _solve(b, j);
for(j = 315150; j < 315160; j++) _solve(b, j);
for(j = 315990; j < 316000; j++) _solve(b, j);
for(j = 316830; j < 316840; j++) _solve(b, j);
for(j = 317670; j < 317680; j++) _solve(b, j);
for(j = 318510; j < 318520; j++) _solve(b, j);
for(j = 319350; j < 319360; j++) _solve(b, j);
for(j = 320190; j < 320200; j++) _solve(b, j);
for(j = 321030; j < 321040; j++) _solve(b, j);
for(j = 321870; j < 321880; j++) _solve(b, j);
for(j = 322710; j < 322720; j++) _solve(b, j);
for(j = 323550; j < 323560; j++) _solve(b, j);
for(j = 324390; j < 324400; j++) _solve(b, j);
for(j = 325230; j < 325240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 326070; j < 326080; j++) _solve(b, j);
for(j = 326910; j < 326920; j++) _solve(b, j);
for(j = 327750; j < 327760; j++) _solve(b, j);
for(j = 328590; j < 328600; j++) _solve(b, j);
for(j = 329430; j < 329440; j++) _solve(b, j);
for(j = 330270; j < 330280; j++) _solve(b, j);
for(j = 331110; j < 331120; j++) _solve(b, j);
for(j = 331950; j < 331960; j++) _solve(b, j);
for(j = 332790; j < 332800; j++) _solve(b, j);
for(j = 333630; j < 333640; j++) _solve(b, j);
for(j = 334470; j < 334480; j++) _solve(b, j);
for(j = 335310; j < 335320; j++) _solve(b, j);
for(j = 336150; j < 336160; j++) _solve(b, j);
for(j = 336990; j < 337000; j++) _solve(b, j);
for(j = 337830; j < 337840; j++) _solve(b, j);
for(j = 338670; j < 338680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 339510; j < 339520; j++) _solve(b, j);
for(j = 340350; j < 340360; j++) _solve(b, j);
for(j = 341190; j < 341200; j++) _solve(b, j);
for(j = 342030; j < 342040; j++) _solve(b, j);
for(j = 342870; j < 342880; j++) _solve(b, j);
for(j = 343710; j < 343720; j++) _solve(b, j);
for(j = 344550; j < 344560; j++) _solve(b, j);
for(j = 345390; j < 345400; j++) _solve(b, j);
for(j = 346230; j < 346240; j++) _solve(b, j);
for(j = 347070; j < 347080; j++) _solve(b, j);
for(j = 347910; j < 347920; j++) _solve(b, j);
for(j = 348750; j < 348760; j++) _solve(b, j);
for(j = 349590; j < 349600; j++) _solve(b, j);
for(j = 350430; j < 350440; j++) _solve(b, j);
for(j = 351270; j < 351280; j++) _solve(b, j);
for(j = 352110; j < 352120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 352950; j < 352960; j++) _solve(b, j);
for(j = 353790; j < 353800; j++) _solve(b, j);
for(j = 354630; j < 354640; j++) _solve(b, j);
for(j = 355470; j < 355480; j++) _solve(b, j);
for(j = 356310; j < 356320; j++) _solve(b, j);
for(j = 357150; j < 357160; j++) _solve(b, j);
for(j = 357990; j < 358000; j++) _solve(b, j);
for(j = 358830; j < 358840; j++) _solve(b, j);
for(j = 359670; j < 359680; j++) _solve(b, j);
for(j = 360510; j < 360520; j++) _solve(b, j);
for(j = 361350; j < 361360; j++) _solve(b, j);
for(j = 362190; j < 362200; j++) _solve(b, j);
for(j = 363030; j < 363040; j++) _solve(b, j);
for(j = 363870; j < 363880; j++) _solve(b, j);
for(j = 364710; j < 364720; j++) _solve(b, j);
for(j = 365550; j < 365560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 366390; j < 366400; j++) _solve(b, j);
for(j = 367230; j < 367240; j++) _solve(b, j);
for(j = 368070; j < 368080; j++) _solve(b, j);
for(j = 368910; j < 368920; j++) _solve(b, j);
for(j = 369750; j < 369760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 300040; j < 300050; j++) _solve(b, j);
for(j = 300880; j < 300890; j++) _solve(b, j);
for(j = 301720; j < 301730; j++) _solve(b, j);
for(j = 302560; j < 302570; j++) _solve(b, j);
for(j = 303400; j < 303410; j++) _solve(b, j);
for(j = 304240; j < 304250; j++) _solve(b, j);
for(j = 305080; j < 305090; j++) _solve(b, j);
for(j = 305920; j < 305930; j++) _solve(b, j);
for(j = 306760; j < 306770; j++) _solve(b, j);
for(j = 307600; j < 307610; j++) _solve(b, j);
for(j = 308440; j < 308450; j++) _solve(b, j);
for(j = 309280; j < 309290; j++) _solve(b, j);
for(j = 310120; j < 310130; j++) _solve(b, j);
for(j = 310960; j < 310970; j++) _solve(b, j);
for(j = 311800; j < 311810; j++) _solve(b, j);
for(j = 312640; j < 312650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 313480; j < 313490; j++) _solve(b, j);
for(j = 314320; j < 314330; j++) _solve(b, j);
for(j = 315160; j < 315170; j++) _solve(b, j);
for(j = 316000; j < 316010; j++) _solve(b, j);
for(j = 316840; j < 316850; j++) _solve(b, j);
for(j = 317680; j < 317690; j++) _solve(b, j);
for(j = 318520; j < 318530; j++) _solve(b, j);
for(j = 319360; j < 319370; j++) _solve(b, j);
for(j = 320200; j < 320210; j++) _solve(b, j);
for(j = 321040; j < 321050; j++) _solve(b, j);
for(j = 321880; j < 321890; j++) _solve(b, j);
for(j = 322720; j < 322730; j++) _solve(b, j);
for(j = 323560; j < 323570; j++) _solve(b, j);
for(j = 324400; j < 324410; j++) _solve(b, j);
for(j = 325240; j < 325250; j++) _solve(b, j);
for(j = 326080; j < 326090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 326920; j < 326930; j++) _solve(b, j);
for(j = 327760; j < 327770; j++) _solve(b, j);
for(j = 328600; j < 328610; j++) _solve(b, j);
for(j = 329440; j < 329450; j++) _solve(b, j);
for(j = 330280; j < 330290; j++) _solve(b, j);
for(j = 331120; j < 331130; j++) _solve(b, j);
for(j = 331960; j < 331970; j++) _solve(b, j);
for(j = 332800; j < 332810; j++) _solve(b, j);
for(j = 333640; j < 333650; j++) _solve(b, j);
for(j = 334480; j < 334490; j++) _solve(b, j);
for(j = 335320; j < 335330; j++) _solve(b, j);
for(j = 336160; j < 336170; j++) _solve(b, j);
for(j = 337000; j < 337010; j++) _solve(b, j);
for(j = 337840; j < 337850; j++) _solve(b, j);
for(j = 338680; j < 338690; j++) _solve(b, j);
for(j = 339520; j < 339530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 340360; j < 340370; j++) _solve(b, j);
for(j = 341200; j < 341210; j++) _solve(b, j);
for(j = 342040; j < 342050; j++) _solve(b, j);
for(j = 342880; j < 342890; j++) _solve(b, j);
for(j = 343720; j < 343730; j++) _solve(b, j);
for(j = 344560; j < 344570; j++) _solve(b, j);
for(j = 345400; j < 345410; j++) _solve(b, j);
for(j = 346240; j < 346250; j++) _solve(b, j);
for(j = 347080; j < 347090; j++) _solve(b, j);
for(j = 347920; j < 347930; j++) _solve(b, j);
for(j = 348760; j < 348770; j++) _solve(b, j);
for(j = 349600; j < 349610; j++) _solve(b, j);
for(j = 350440; j < 350450; j++) _solve(b, j);
for(j = 351280; j < 351290; j++) _solve(b, j);
for(j = 352120; j < 352130; j++) _solve(b, j);
for(j = 352960; j < 352970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 353800; j < 353810; j++) _solve(b, j);
for(j = 354640; j < 354650; j++) _solve(b, j);
for(j = 355480; j < 355490; j++) _solve(b, j);
for(j = 356320; j < 356330; j++) _solve(b, j);
for(j = 357160; j < 357170; j++) _solve(b, j);
for(j = 358000; j < 358010; j++) _solve(b, j);
for(j = 358840; j < 358850; j++) _solve(b, j);
for(j = 359680; j < 359690; j++) _solve(b, j);
for(j = 360520; j < 360530; j++) _solve(b, j);
for(j = 361360; j < 361370; j++) _solve(b, j);
for(j = 362200; j < 362210; j++) _solve(b, j);
for(j = 363040; j < 363050; j++) _solve(b, j);
for(j = 363880; j < 363890; j++) _solve(b, j);
for(j = 364720; j < 364730; j++) _solve(b, j);
for(j = 365560; j < 365570; j++) _solve(b, j);
for(j = 366400; j < 366410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 367240; j < 367250; j++) _solve(b, j);
for(j = 368080; j < 368090; j++) _solve(b, j);
for(j = 368920; j < 368930; j++) _solve(b, j);
for(j = 369760; j < 369770; j++) _solve(b, j);
for(j = 370600; j < 370610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 300890; j < 300900; j++) _solve(b, j);
for(j = 301730; j < 301740; j++) _solve(b, j);
for(j = 302570; j < 302580; j++) _solve(b, j);
for(j = 303410; j < 303420; j++) _solve(b, j);
for(j = 304250; j < 304260; j++) _solve(b, j);
for(j = 305090; j < 305100; j++) _solve(b, j);
for(j = 305930; j < 305940; j++) _solve(b, j);
for(j = 306770; j < 306780; j++) _solve(b, j);
for(j = 307610; j < 307620; j++) _solve(b, j);
for(j = 308450; j < 308460; j++) _solve(b, j);
for(j = 309290; j < 309300; j++) _solve(b, j);
for(j = 310130; j < 310140; j++) _solve(b, j);
for(j = 310970; j < 310980; j++) _solve(b, j);
for(j = 311810; j < 311820; j++) _solve(b, j);
for(j = 312650; j < 312660; j++) _solve(b, j);
for(j = 313490; j < 313500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 314330; j < 314340; j++) _solve(b, j);
for(j = 315170; j < 315180; j++) _solve(b, j);
for(j = 316010; j < 316020; j++) _solve(b, j);
for(j = 316850; j < 316860; j++) _solve(b, j);
for(j = 317690; j < 317700; j++) _solve(b, j);
for(j = 318530; j < 318540; j++) _solve(b, j);
for(j = 319370; j < 319380; j++) _solve(b, j);
for(j = 320210; j < 320220; j++) _solve(b, j);
for(j = 321050; j < 321060; j++) _solve(b, j);
for(j = 321890; j < 321900; j++) _solve(b, j);
for(j = 322730; j < 322740; j++) _solve(b, j);
for(j = 323570; j < 323580; j++) _solve(b, j);
for(j = 324410; j < 324420; j++) _solve(b, j);
for(j = 325250; j < 325260; j++) _solve(b, j);
for(j = 326090; j < 326100; j++) _solve(b, j);
for(j = 326930; j < 326940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 327770; j < 327780; j++) _solve(b, j);
for(j = 328610; j < 328620; j++) _solve(b, j);
for(j = 329450; j < 329460; j++) _solve(b, j);
for(j = 330290; j < 330300; j++) _solve(b, j);
for(j = 331130; j < 331140; j++) _solve(b, j);
for(j = 331970; j < 331980; j++) _solve(b, j);
for(j = 332810; j < 332820; j++) _solve(b, j);
for(j = 333650; j < 333660; j++) _solve(b, j);
for(j = 334490; j < 334500; j++) _solve(b, j);
for(j = 335330; j < 335340; j++) _solve(b, j);
for(j = 336170; j < 336180; j++) _solve(b, j);
for(j = 337010; j < 337020; j++) _solve(b, j);
for(j = 337850; j < 337860; j++) _solve(b, j);
for(j = 338690; j < 338700; j++) _solve(b, j);
for(j = 339530; j < 339540; j++) _solve(b, j);
for(j = 340370; j < 340380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 341210; j < 341220; j++) _solve(b, j);
for(j = 342050; j < 342060; j++) _solve(b, j);
for(j = 342890; j < 342900; j++) _solve(b, j);
for(j = 343730; j < 343740; j++) _solve(b, j);
for(j = 344570; j < 344580; j++) _solve(b, j);
for(j = 345410; j < 345420; j++) _solve(b, j);
for(j = 346250; j < 346260; j++) _solve(b, j);
for(j = 347090; j < 347100; j++) _solve(b, j);
for(j = 347930; j < 347940; j++) _solve(b, j);
for(j = 348770; j < 348780; j++) _solve(b, j);
for(j = 349610; j < 349620; j++) _solve(b, j);
for(j = 350450; j < 350460; j++) _solve(b, j);
for(j = 351290; j < 351300; j++) _solve(b, j);
for(j = 352130; j < 352140; j++) _solve(b, j);
for(j = 352970; j < 352980; j++) _solve(b, j);
for(j = 353810; j < 353820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 354650; j < 354660; j++) _solve(b, j);
for(j = 355490; j < 355500; j++) _solve(b, j);
for(j = 356330; j < 356340; j++) _solve(b, j);
for(j = 357170; j < 357180; j++) _solve(b, j);
for(j = 358010; j < 358020; j++) _solve(b, j);
for(j = 358850; j < 358860; j++) _solve(b, j);
for(j = 359690; j < 359700; j++) _solve(b, j);
for(j = 360530; j < 360540; j++) _solve(b, j);
for(j = 361370; j < 361380; j++) _solve(b, j);
for(j = 362210; j < 362220; j++) _solve(b, j);
for(j = 363050; j < 363060; j++) _solve(b, j);
for(j = 363890; j < 363900; j++) _solve(b, j);
for(j = 364730; j < 364740; j++) _solve(b, j);
for(j = 365570; j < 365580; j++) _solve(b, j);
for(j = 366410; j < 366420; j++) _solve(b, j);
for(j = 367250; j < 367260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 368090; j < 368100; j++) _solve(b, j);
for(j = 368930; j < 368940; j++) _solve(b, j);
for(j = 369770; j < 369780; j++) _solve(b, j);
for(j = 370610; j < 370620; j++) _solve(b, j);
for(j = 371450; j < 371460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 301740; j < 301750; j++) _solve(b, j);
for(j = 302580; j < 302590; j++) _solve(b, j);
for(j = 303420; j < 303430; j++) _solve(b, j);
for(j = 304260; j < 304270; j++) _solve(b, j);
for(j = 305100; j < 305110; j++) _solve(b, j);
for(j = 305940; j < 305950; j++) _solve(b, j);
for(j = 306780; j < 306790; j++) _solve(b, j);
for(j = 307620; j < 307630; j++) _solve(b, j);
for(j = 308460; j < 308470; j++) _solve(b, j);
for(j = 309300; j < 309310; j++) _solve(b, j);
for(j = 310140; j < 310150; j++) _solve(b, j);
for(j = 310980; j < 310990; j++) _solve(b, j);
for(j = 311820; j < 311830; j++) _solve(b, j);
for(j = 312660; j < 312670; j++) _solve(b, j);
for(j = 313500; j < 313510; j++) _solve(b, j);
for(j = 314340; j < 314350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 315180; j < 315190; j++) _solve(b, j);
for(j = 316020; j < 316030; j++) _solve(b, j);
for(j = 316860; j < 316870; j++) _solve(b, j);
for(j = 317700; j < 317710; j++) _solve(b, j);
for(j = 318540; j < 318550; j++) _solve(b, j);
for(j = 319380; j < 319390; j++) _solve(b, j);
for(j = 320220; j < 320230; j++) _solve(b, j);
for(j = 321060; j < 321070; j++) _solve(b, j);
for(j = 321900; j < 321910; j++) _solve(b, j);
for(j = 322740; j < 322750; j++) _solve(b, j);
for(j = 323580; j < 323590; j++) _solve(b, j);
for(j = 324420; j < 324430; j++) _solve(b, j);
for(j = 325260; j < 325270; j++) _solve(b, j);
for(j = 326100; j < 326110; j++) _solve(b, j);
for(j = 326940; j < 326950; j++) _solve(b, j);
for(j = 327780; j < 327790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 328620; j < 328630; j++) _solve(b, j);
for(j = 329460; j < 329470; j++) _solve(b, j);
for(j = 330300; j < 330310; j++) _solve(b, j);
for(j = 331140; j < 331150; j++) _solve(b, j);
for(j = 331980; j < 331990; j++) _solve(b, j);
for(j = 332820; j < 332830; j++) _solve(b, j);
for(j = 333660; j < 333670; j++) _solve(b, j);
for(j = 334500; j < 334510; j++) _solve(b, j);
for(j = 335340; j < 335350; j++) _solve(b, j);
for(j = 336180; j < 336190; j++) _solve(b, j);
for(j = 337020; j < 337030; j++) _solve(b, j);
for(j = 337860; j < 337870; j++) _solve(b, j);
for(j = 338700; j < 338710; j++) _solve(b, j);
for(j = 339540; j < 339550; j++) _solve(b, j);
for(j = 340380; j < 340390; j++) _solve(b, j);
for(j = 341220; j < 341230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 342060; j < 342070; j++) _solve(b, j);
for(j = 342900; j < 342910; j++) _solve(b, j);
for(j = 343740; j < 343750; j++) _solve(b, j);
for(j = 344580; j < 344590; j++) _solve(b, j);
for(j = 345420; j < 345430; j++) _solve(b, j);
for(j = 346260; j < 346270; j++) _solve(b, j);
for(j = 347100; j < 347110; j++) _solve(b, j);
for(j = 347940; j < 347950; j++) _solve(b, j);
for(j = 348780; j < 348790; j++) _solve(b, j);
for(j = 349620; j < 349630; j++) _solve(b, j);
for(j = 350460; j < 350470; j++) _solve(b, j);
for(j = 351300; j < 351310; j++) _solve(b, j);
for(j = 352140; j < 352150; j++) _solve(b, j);
for(j = 352980; j < 352990; j++) _solve(b, j);
for(j = 353820; j < 353830; j++) _solve(b, j);
for(j = 354660; j < 354670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 355500; j < 355510; j++) _solve(b, j);
for(j = 356340; j < 356350; j++) _solve(b, j);
for(j = 357180; j < 357190; j++) _solve(b, j);
for(j = 358020; j < 358030; j++) _solve(b, j);
for(j = 358860; j < 358870; j++) _solve(b, j);
for(j = 359700; j < 359710; j++) _solve(b, j);
for(j = 360540; j < 360550; j++) _solve(b, j);
for(j = 361380; j < 361390; j++) _solve(b, j);
for(j = 362220; j < 362230; j++) _solve(b, j);
for(j = 363060; j < 363070; j++) _solve(b, j);
for(j = 363900; j < 363910; j++) _solve(b, j);
for(j = 364740; j < 364750; j++) _solve(b, j);
for(j = 365580; j < 365590; j++) _solve(b, j);
for(j = 366420; j < 366430; j++) _solve(b, j);
for(j = 367260; j < 367270; j++) _solve(b, j);
for(j = 368100; j < 368110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 368940; j < 368950; j++) _solve(b, j);
for(j = 369780; j < 369790; j++) _solve(b, j);
for(j = 370620; j < 370630; j++) _solve(b, j);
for(j = 371460; j < 371470; j++) _solve(b, j);
for(j = 372300; j < 372310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 302590; j < 302600; j++) _solve(b, j);
for(j = 303430; j < 303440; j++) _solve(b, j);
for(j = 304270; j < 304280; j++) _solve(b, j);
for(j = 305110; j < 305120; j++) _solve(b, j);
for(j = 305950; j < 305960; j++) _solve(b, j);
for(j = 306790; j < 306800; j++) _solve(b, j);
for(j = 307630; j < 307640; j++) _solve(b, j);
for(j = 308470; j < 308480; j++) _solve(b, j);
for(j = 309310; j < 309320; j++) _solve(b, j);
for(j = 310150; j < 310160; j++) _solve(b, j);
for(j = 310990; j < 311000; j++) _solve(b, j);
for(j = 311830; j < 311840; j++) _solve(b, j);
for(j = 312670; j < 312680; j++) _solve(b, j);
for(j = 313510; j < 313520; j++) _solve(b, j);
for(j = 314350; j < 314360; j++) _solve(b, j);
for(j = 315190; j < 315200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 316030; j < 316040; j++) _solve(b, j);
for(j = 316870; j < 316880; j++) _solve(b, j);
for(j = 317710; j < 317720; j++) _solve(b, j);
for(j = 318550; j < 318560; j++) _solve(b, j);
for(j = 319390; j < 319400; j++) _solve(b, j);
for(j = 320230; j < 320240; j++) _solve(b, j);
for(j = 321070; j < 321080; j++) _solve(b, j);
for(j = 321910; j < 321920; j++) _solve(b, j);
for(j = 322750; j < 322760; j++) _solve(b, j);
for(j = 323590; j < 323600; j++) _solve(b, j);
for(j = 324430; j < 324440; j++) _solve(b, j);
for(j = 325270; j < 325280; j++) _solve(b, j);
for(j = 326110; j < 326120; j++) _solve(b, j);
for(j = 326950; j < 326960; j++) _solve(b, j);
for(j = 327790; j < 327800; j++) _solve(b, j);
for(j = 328630; j < 328640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 329470; j < 329480; j++) _solve(b, j);
for(j = 330310; j < 330320; j++) _solve(b, j);
for(j = 331150; j < 331160; j++) _solve(b, j);
for(j = 331990; j < 332000; j++) _solve(b, j);
for(j = 332830; j < 332840; j++) _solve(b, j);
for(j = 333670; j < 333680; j++) _solve(b, j);
for(j = 334510; j < 334520; j++) _solve(b, j);
for(j = 335350; j < 335360; j++) _solve(b, j);
for(j = 336190; j < 336200; j++) _solve(b, j);
for(j = 337030; j < 337040; j++) _solve(b, j);
for(j = 337870; j < 337880; j++) _solve(b, j);
for(j = 338710; j < 338720; j++) _solve(b, j);
for(j = 339550; j < 339560; j++) _solve(b, j);
for(j = 340390; j < 340400; j++) _solve(b, j);
for(j = 341230; j < 341240; j++) _solve(b, j);
for(j = 342070; j < 342080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 342910; j < 342920; j++) _solve(b, j);
for(j = 343750; j < 343760; j++) _solve(b, j);
for(j = 344590; j < 344600; j++) _solve(b, j);
for(j = 345430; j < 345440; j++) _solve(b, j);
for(j = 346270; j < 346280; j++) _solve(b, j);
for(j = 347110; j < 347120; j++) _solve(b, j);
for(j = 347950; j < 347960; j++) _solve(b, j);
for(j = 348790; j < 348800; j++) _solve(b, j);
for(j = 349630; j < 349640; j++) _solve(b, j);
for(j = 350470; j < 350480; j++) _solve(b, j);
for(j = 351310; j < 351320; j++) _solve(b, j);
for(j = 352150; j < 352160; j++) _solve(b, j);
for(j = 352990; j < 353000; j++) _solve(b, j);
for(j = 353830; j < 353840; j++) _solve(b, j);
for(j = 354670; j < 354680; j++) _solve(b, j);
for(j = 355510; j < 355520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 356350; j < 356360; j++) _solve(b, j);
for(j = 357190; j < 357200; j++) _solve(b, j);
for(j = 358030; j < 358040; j++) _solve(b, j);
for(j = 358870; j < 358880; j++) _solve(b, j);
for(j = 359710; j < 359720; j++) _solve(b, j);
for(j = 360550; j < 360560; j++) _solve(b, j);
for(j = 361390; j < 361400; j++) _solve(b, j);
for(j = 362230; j < 362240; j++) _solve(b, j);
for(j = 363070; j < 363080; j++) _solve(b, j);
for(j = 363910; j < 363920; j++) _solve(b, j);
for(j = 364750; j < 364760; j++) _solve(b, j);
for(j = 365590; j < 365600; j++) _solve(b, j);
for(j = 366430; j < 366440; j++) _solve(b, j);
for(j = 367270; j < 367280; j++) _solve(b, j);
for(j = 368110; j < 368120; j++) _solve(b, j);
for(j = 368950; j < 368960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 369790; j < 369800; j++) _solve(b, j);
for(j = 370630; j < 370640; j++) _solve(b, j);
for(j = 371470; j < 371480; j++) _solve(b, j);
for(j = 372310; j < 372320; j++) _solve(b, j);
for(j = 373150; j < 373160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 303440; j < 303450; j++) _solve(b, j);
for(j = 304280; j < 304290; j++) _solve(b, j);
for(j = 305120; j < 305130; j++) _solve(b, j);
for(j = 305960; j < 305970; j++) _solve(b, j);
for(j = 306800; j < 306810; j++) _solve(b, j);
for(j = 307640; j < 307650; j++) _solve(b, j);
for(j = 308480; j < 308490; j++) _solve(b, j);
for(j = 309320; j < 309330; j++) _solve(b, j);
for(j = 310160; j < 310170; j++) _solve(b, j);
for(j = 311000; j < 311010; j++) _solve(b, j);
for(j = 311840; j < 311850; j++) _solve(b, j);
for(j = 312680; j < 312690; j++) _solve(b, j);
for(j = 313520; j < 313530; j++) _solve(b, j);
for(j = 314360; j < 314370; j++) _solve(b, j);
for(j = 315200; j < 315210; j++) _solve(b, j);
for(j = 316040; j < 316050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 316880; j < 316890; j++) _solve(b, j);
for(j = 317720; j < 317730; j++) _solve(b, j);
for(j = 318560; j < 318570; j++) _solve(b, j);
for(j = 319400; j < 319410; j++) _solve(b, j);
for(j = 320240; j < 320250; j++) _solve(b, j);
for(j = 321080; j < 321090; j++) _solve(b, j);
for(j = 321920; j < 321930; j++) _solve(b, j);
for(j = 322760; j < 322770; j++) _solve(b, j);
for(j = 323600; j < 323610; j++) _solve(b, j);
for(j = 324440; j < 324450; j++) _solve(b, j);
for(j = 325280; j < 325290; j++) _solve(b, j);
for(j = 326120; j < 326130; j++) _solve(b, j);
for(j = 326960; j < 326970; j++) _solve(b, j);
for(j = 327800; j < 327810; j++) _solve(b, j);
for(j = 328640; j < 328650; j++) _solve(b, j);
for(j = 329480; j < 329490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 330320; j < 330330; j++) _solve(b, j);
for(j = 331160; j < 331170; j++) _solve(b, j);
for(j = 332000; j < 332010; j++) _solve(b, j);
for(j = 332840; j < 332850; j++) _solve(b, j);
for(j = 333680; j < 333690; j++) _solve(b, j);
for(j = 334520; j < 334530; j++) _solve(b, j);
for(j = 335360; j < 335370; j++) _solve(b, j);
for(j = 336200; j < 336210; j++) _solve(b, j);
for(j = 337040; j < 337050; j++) _solve(b, j);
for(j = 337880; j < 337890; j++) _solve(b, j);
for(j = 338720; j < 338730; j++) _solve(b, j);
for(j = 339560; j < 339570; j++) _solve(b, j);
for(j = 340400; j < 340410; j++) _solve(b, j);
for(j = 341240; j < 341250; j++) _solve(b, j);
for(j = 342080; j < 342090; j++) _solve(b, j);
for(j = 342920; j < 342930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 343760; j < 343770; j++) _solve(b, j);
for(j = 344600; j < 344610; j++) _solve(b, j);
for(j = 345440; j < 345450; j++) _solve(b, j);
for(j = 346280; j < 346290; j++) _solve(b, j);
for(j = 347120; j < 347130; j++) _solve(b, j);
for(j = 347960; j < 347970; j++) _solve(b, j);
for(j = 348800; j < 348810; j++) _solve(b, j);
for(j = 349640; j < 349650; j++) _solve(b, j);
for(j = 350480; j < 350490; j++) _solve(b, j);
for(j = 351320; j < 351330; j++) _solve(b, j);
for(j = 352160; j < 352170; j++) _solve(b, j);
for(j = 353000; j < 353010; j++) _solve(b, j);
for(j = 353840; j < 353850; j++) _solve(b, j);
for(j = 354680; j < 354690; j++) _solve(b, j);
for(j = 355520; j < 355530; j++) _solve(b, j);
for(j = 356360; j < 356370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 357200; j < 357210; j++) _solve(b, j);
for(j = 358040; j < 358050; j++) _solve(b, j);
for(j = 358880; j < 358890; j++) _solve(b, j);
for(j = 359720; j < 359730; j++) _solve(b, j);
for(j = 360560; j < 360570; j++) _solve(b, j);
for(j = 361400; j < 361410; j++) _solve(b, j);
for(j = 362240; j < 362250; j++) _solve(b, j);
for(j = 363080; j < 363090; j++) _solve(b, j);
for(j = 363920; j < 363930; j++) _solve(b, j);
for(j = 364760; j < 364770; j++) _solve(b, j);
for(j = 365600; j < 365610; j++) _solve(b, j);
for(j = 366440; j < 366450; j++) _solve(b, j);
for(j = 367280; j < 367290; j++) _solve(b, j);
for(j = 368120; j < 368130; j++) _solve(b, j);
for(j = 368960; j < 368970; j++) _solve(b, j);
for(j = 369800; j < 369810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 370640; j < 370650; j++) _solve(b, j);
for(j = 371480; j < 371490; j++) _solve(b, j);
for(j = 372320; j < 372330; j++) _solve(b, j);
for(j = 373160; j < 373170; j++) _solve(b, j);
for(j = 374000; j < 374010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 304290; j < 304300; j++) _solve(b, j);
for(j = 305130; j < 305140; j++) _solve(b, j);
for(j = 305970; j < 305980; j++) _solve(b, j);
for(j = 306810; j < 306820; j++) _solve(b, j);
for(j = 307650; j < 307660; j++) _solve(b, j);
for(j = 308490; j < 308500; j++) _solve(b, j);
for(j = 309330; j < 309340; j++) _solve(b, j);
for(j = 310170; j < 310180; j++) _solve(b, j);
for(j = 311010; j < 311020; j++) _solve(b, j);
for(j = 311850; j < 311860; j++) _solve(b, j);
for(j = 312690; j < 312700; j++) _solve(b, j);
for(j = 313530; j < 313540; j++) _solve(b, j);
for(j = 314370; j < 314380; j++) _solve(b, j);
for(j = 315210; j < 315220; j++) _solve(b, j);
for(j = 316050; j < 316060; j++) _solve(b, j);
for(j = 316890; j < 316900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 317730; j < 317740; j++) _solve(b, j);
for(j = 318570; j < 318580; j++) _solve(b, j);
for(j = 319410; j < 319420; j++) _solve(b, j);
for(j = 320250; j < 320260; j++) _solve(b, j);
for(j = 321090; j < 321100; j++) _solve(b, j);
for(j = 321930; j < 321940; j++) _solve(b, j);
for(j = 322770; j < 322780; j++) _solve(b, j);
for(j = 323610; j < 323620; j++) _solve(b, j);
for(j = 324450; j < 324460; j++) _solve(b, j);
for(j = 325290; j < 325300; j++) _solve(b, j);
for(j = 326130; j < 326140; j++) _solve(b, j);
for(j = 326970; j < 326980; j++) _solve(b, j);
for(j = 327810; j < 327820; j++) _solve(b, j);
for(j = 328650; j < 328660; j++) _solve(b, j);
for(j = 329490; j < 329500; j++) _solve(b, j);
for(j = 330330; j < 330340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 331170; j < 331180; j++) _solve(b, j);
for(j = 332010; j < 332020; j++) _solve(b, j);
for(j = 332850; j < 332860; j++) _solve(b, j);
for(j = 333690; j < 333700; j++) _solve(b, j);
for(j = 334530; j < 334540; j++) _solve(b, j);
for(j = 335370; j < 335380; j++) _solve(b, j);
for(j = 336210; j < 336220; j++) _solve(b, j);
for(j = 337050; j < 337060; j++) _solve(b, j);
for(j = 337890; j < 337900; j++) _solve(b, j);
for(j = 338730; j < 338740; j++) _solve(b, j);
for(j = 339570; j < 339580; j++) _solve(b, j);
for(j = 340410; j < 340420; j++) _solve(b, j);
for(j = 341250; j < 341260; j++) _solve(b, j);
for(j = 342090; j < 342100; j++) _solve(b, j);
for(j = 342930; j < 342940; j++) _solve(b, j);
for(j = 343770; j < 343780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 344610; j < 344620; j++) _solve(b, j);
for(j = 345450; j < 345460; j++) _solve(b, j);
for(j = 346290; j < 346300; j++) _solve(b, j);
for(j = 347130; j < 347140; j++) _solve(b, j);
for(j = 347970; j < 347980; j++) _solve(b, j);
for(j = 348810; j < 348820; j++) _solve(b, j);
for(j = 349650; j < 349660; j++) _solve(b, j);
for(j = 350490; j < 350500; j++) _solve(b, j);
for(j = 351330; j < 351340; j++) _solve(b, j);
for(j = 352170; j < 352180; j++) _solve(b, j);
for(j = 353010; j < 353020; j++) _solve(b, j);
for(j = 353850; j < 353860; j++) _solve(b, j);
for(j = 354690; j < 354700; j++) _solve(b, j);
for(j = 355530; j < 355540; j++) _solve(b, j);
for(j = 356370; j < 356380; j++) _solve(b, j);
for(j = 357210; j < 357220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 358050; j < 358060; j++) _solve(b, j);
for(j = 358890; j < 358900; j++) _solve(b, j);
for(j = 359730; j < 359740; j++) _solve(b, j);
for(j = 360570; j < 360580; j++) _solve(b, j);
for(j = 361410; j < 361420; j++) _solve(b, j);
for(j = 362250; j < 362260; j++) _solve(b, j);
for(j = 363090; j < 363100; j++) _solve(b, j);
for(j = 363930; j < 363940; j++) _solve(b, j);
for(j = 364770; j < 364780; j++) _solve(b, j);
for(j = 365610; j < 365620; j++) _solve(b, j);
for(j = 366450; j < 366460; j++) _solve(b, j);
for(j = 367290; j < 367300; j++) _solve(b, j);
for(j = 368130; j < 368140; j++) _solve(b, j);
for(j = 368970; j < 368980; j++) _solve(b, j);
for(j = 369810; j < 369820; j++) _solve(b, j);
for(j = 370650; j < 370660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 371490; j < 371500; j++) _solve(b, j);
for(j = 372330; j < 372340; j++) _solve(b, j);
for(j = 373170; j < 373180; j++) _solve(b, j);
for(j = 374010; j < 374020; j++) _solve(b, j);
for(j = 374850; j < 374860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 305140; j < 305150; j++) _solve(b, j);
for(j = 305980; j < 305990; j++) _solve(b, j);
for(j = 306820; j < 306830; j++) _solve(b, j);
for(j = 307660; j < 307670; j++) _solve(b, j);
for(j = 308500; j < 308510; j++) _solve(b, j);
for(j = 309340; j < 309350; j++) _solve(b, j);
for(j = 310180; j < 310190; j++) _solve(b, j);
for(j = 311020; j < 311030; j++) _solve(b, j);
for(j = 311860; j < 311870; j++) _solve(b, j);
for(j = 312700; j < 312710; j++) _solve(b, j);
for(j = 313540; j < 313550; j++) _solve(b, j);
for(j = 314380; j < 314390; j++) _solve(b, j);
for(j = 315220; j < 315230; j++) _solve(b, j);
for(j = 316060; j < 316070; j++) _solve(b, j);
for(j = 316900; j < 316910; j++) _solve(b, j);
for(j = 317740; j < 317750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 318580; j < 318590; j++) _solve(b, j);
for(j = 319420; j < 319430; j++) _solve(b, j);
for(j = 320260; j < 320270; j++) _solve(b, j);
for(j = 321100; j < 321110; j++) _solve(b, j);
for(j = 321940; j < 321950; j++) _solve(b, j);
for(j = 322780; j < 322790; j++) _solve(b, j);
for(j = 323620; j < 323630; j++) _solve(b, j);
for(j = 324460; j < 324470; j++) _solve(b, j);
for(j = 325300; j < 325310; j++) _solve(b, j);
for(j = 326140; j < 326150; j++) _solve(b, j);
for(j = 326980; j < 326990; j++) _solve(b, j);
for(j = 327820; j < 327830; j++) _solve(b, j);
for(j = 328660; j < 328670; j++) _solve(b, j);
for(j = 329500; j < 329510; j++) _solve(b, j);
for(j = 330340; j < 330350; j++) _solve(b, j);
for(j = 331180; j < 331190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 332020; j < 332030; j++) _solve(b, j);
for(j = 332860; j < 332870; j++) _solve(b, j);
for(j = 333700; j < 333710; j++) _solve(b, j);
for(j = 334540; j < 334550; j++) _solve(b, j);
for(j = 335380; j < 335390; j++) _solve(b, j);
for(j = 336220; j < 336230; j++) _solve(b, j);
for(j = 337060; j < 337070; j++) _solve(b, j);
for(j = 337900; j < 337910; j++) _solve(b, j);
for(j = 338740; j < 338750; j++) _solve(b, j);
for(j = 339580; j < 339590; j++) _solve(b, j);
for(j = 340420; j < 340430; j++) _solve(b, j);
for(j = 341260; j < 341270; j++) _solve(b, j);
for(j = 342100; j < 342110; j++) _solve(b, j);
for(j = 342940; j < 342950; j++) _solve(b, j);
for(j = 343780; j < 343790; j++) _solve(b, j);
for(j = 344620; j < 344630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 345460; j < 345470; j++) _solve(b, j);
for(j = 346300; j < 346310; j++) _solve(b, j);
for(j = 347140; j < 347150; j++) _solve(b, j);
for(j = 347980; j < 347990; j++) _solve(b, j);
for(j = 348820; j < 348830; j++) _solve(b, j);
for(j = 349660; j < 349670; j++) _solve(b, j);
for(j = 350500; j < 350510; j++) _solve(b, j);
for(j = 351340; j < 351350; j++) _solve(b, j);
for(j = 352180; j < 352190; j++) _solve(b, j);
for(j = 353020; j < 353030; j++) _solve(b, j);
for(j = 353860; j < 353870; j++) _solve(b, j);
for(j = 354700; j < 354710; j++) _solve(b, j);
for(j = 355540; j < 355550; j++) _solve(b, j);
for(j = 356380; j < 356390; j++) _solve(b, j);
for(j = 357220; j < 357230; j++) _solve(b, j);
for(j = 358060; j < 358070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 358900; j < 358910; j++) _solve(b, j);
for(j = 359740; j < 359750; j++) _solve(b, j);
for(j = 360580; j < 360590; j++) _solve(b, j);
for(j = 361420; j < 361430; j++) _solve(b, j);
for(j = 362260; j < 362270; j++) _solve(b, j);
for(j = 363100; j < 363110; j++) _solve(b, j);
for(j = 363940; j < 363950; j++) _solve(b, j);
for(j = 364780; j < 364790; j++) _solve(b, j);
for(j = 365620; j < 365630; j++) _solve(b, j);
for(j = 366460; j < 366470; j++) _solve(b, j);
for(j = 367300; j < 367310; j++) _solve(b, j);
for(j = 368140; j < 368150; j++) _solve(b, j);
for(j = 368980; j < 368990; j++) _solve(b, j);
for(j = 369820; j < 369830; j++) _solve(b, j);
for(j = 370660; j < 370670; j++) _solve(b, j);
for(j = 371500; j < 371510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 372340; j < 372350; j++) _solve(b, j);
for(j = 373180; j < 373190; j++) _solve(b, j);
for(j = 374020; j < 374030; j++) _solve(b, j);
for(j = 374860; j < 374870; j++) _solve(b, j);
for(j = 375700; j < 375710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 305990; j < 306000; j++) _solve(b, j);
for(j = 306830; j < 306840; j++) _solve(b, j);
for(j = 307670; j < 307680; j++) _solve(b, j);
for(j = 308510; j < 308520; j++) _solve(b, j);
for(j = 309350; j < 309360; j++) _solve(b, j);
for(j = 310190; j < 310200; j++) _solve(b, j);
for(j = 311030; j < 311040; j++) _solve(b, j);
for(j = 311870; j < 311880; j++) _solve(b, j);
for(j = 312710; j < 312720; j++) _solve(b, j);
for(j = 313550; j < 313560; j++) _solve(b, j);
for(j = 314390; j < 314400; j++) _solve(b, j);
for(j = 315230; j < 315240; j++) _solve(b, j);
for(j = 316070; j < 316080; j++) _solve(b, j);
for(j = 316910; j < 316920; j++) _solve(b, j);
for(j = 317750; j < 317760; j++) _solve(b, j);
for(j = 318590; j < 318600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 319430; j < 319440; j++) _solve(b, j);
for(j = 320270; j < 320280; j++) _solve(b, j);
for(j = 321110; j < 321120; j++) _solve(b, j);
for(j = 321950; j < 321960; j++) _solve(b, j);
for(j = 322790; j < 322800; j++) _solve(b, j);
for(j = 323630; j < 323640; j++) _solve(b, j);
for(j = 324470; j < 324480; j++) _solve(b, j);
for(j = 325310; j < 325320; j++) _solve(b, j);
for(j = 326150; j < 326160; j++) _solve(b, j);
for(j = 326990; j < 327000; j++) _solve(b, j);
for(j = 327830; j < 327840; j++) _solve(b, j);
for(j = 328670; j < 328680; j++) _solve(b, j);
for(j = 329510; j < 329520; j++) _solve(b, j);
for(j = 330350; j < 330360; j++) _solve(b, j);
for(j = 331190; j < 331200; j++) _solve(b, j);
for(j = 332030; j < 332040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 332870; j < 332880; j++) _solve(b, j);
for(j = 333710; j < 333720; j++) _solve(b, j);
for(j = 334550; j < 334560; j++) _solve(b, j);
for(j = 335390; j < 335400; j++) _solve(b, j);
for(j = 336230; j < 336240; j++) _solve(b, j);
for(j = 337070; j < 337080; j++) _solve(b, j);
for(j = 337910; j < 337920; j++) _solve(b, j);
for(j = 338750; j < 338760; j++) _solve(b, j);
for(j = 339590; j < 339600; j++) _solve(b, j);
for(j = 340430; j < 340440; j++) _solve(b, j);
for(j = 341270; j < 341280; j++) _solve(b, j);
for(j = 342110; j < 342120; j++) _solve(b, j);
for(j = 342950; j < 342960; j++) _solve(b, j);
for(j = 343790; j < 343800; j++) _solve(b, j);
for(j = 344630; j < 344640; j++) _solve(b, j);
for(j = 345470; j < 345480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 346310; j < 346320; j++) _solve(b, j);
for(j = 347150; j < 347160; j++) _solve(b, j);
for(j = 347990; j < 348000; j++) _solve(b, j);
for(j = 348830; j < 348840; j++) _solve(b, j);
for(j = 349670; j < 349680; j++) _solve(b, j);
for(j = 350510; j < 350520; j++) _solve(b, j);
for(j = 351350; j < 351360; j++) _solve(b, j);
for(j = 352190; j < 352200; j++) _solve(b, j);
for(j = 353030; j < 353040; j++) _solve(b, j);
for(j = 353870; j < 353880; j++) _solve(b, j);
for(j = 354710; j < 354720; j++) _solve(b, j);
for(j = 355550; j < 355560; j++) _solve(b, j);
for(j = 356390; j < 356400; j++) _solve(b, j);
for(j = 357230; j < 357240; j++) _solve(b, j);
for(j = 358070; j < 358080; j++) _solve(b, j);
for(j = 358910; j < 358920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 359750; j < 359760; j++) _solve(b, j);
for(j = 360590; j < 360600; j++) _solve(b, j);
for(j = 361430; j < 361440; j++) _solve(b, j);
for(j = 362270; j < 362280; j++) _solve(b, j);
for(j = 363110; j < 363120; j++) _solve(b, j);
for(j = 363950; j < 363960; j++) _solve(b, j);
for(j = 364790; j < 364800; j++) _solve(b, j);
for(j = 365630; j < 365640; j++) _solve(b, j);
for(j = 366470; j < 366480; j++) _solve(b, j);
for(j = 367310; j < 367320; j++) _solve(b, j);
for(j = 368150; j < 368160; j++) _solve(b, j);
for(j = 368990; j < 369000; j++) _solve(b, j);
for(j = 369830; j < 369840; j++) _solve(b, j);
for(j = 370670; j < 370680; j++) _solve(b, j);
for(j = 371510; j < 371520; j++) _solve(b, j);
for(j = 372350; j < 372360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 373190; j < 373200; j++) _solve(b, j);
for(j = 374030; j < 374040; j++) _solve(b, j);
for(j = 374870; j < 374880; j++) _solve(b, j);
for(j = 375710; j < 375720; j++) _solve(b, j);
for(j = 376550; j < 376560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 306840; j < 306850; j++) _solve(b, j);
for(j = 307680; j < 307690; j++) _solve(b, j);
for(j = 308520; j < 308530; j++) _solve(b, j);
for(j = 309360; j < 309370; j++) _solve(b, j);
for(j = 310200; j < 310210; j++) _solve(b, j);
for(j = 311040; j < 311050; j++) _solve(b, j);
for(j = 311880; j < 311890; j++) _solve(b, j);
for(j = 312720; j < 312730; j++) _solve(b, j);
for(j = 313560; j < 313570; j++) _solve(b, j);
for(j = 314400; j < 314410; j++) _solve(b, j);
for(j = 315240; j < 315250; j++) _solve(b, j);
for(j = 316080; j < 316090; j++) _solve(b, j);
for(j = 316920; j < 316930; j++) _solve(b, j);
for(j = 317760; j < 317770; j++) _solve(b, j);
for(j = 318600; j < 318610; j++) _solve(b, j);
for(j = 319440; j < 319450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 320280; j < 320290; j++) _solve(b, j);
for(j = 321120; j < 321130; j++) _solve(b, j);
for(j = 321960; j < 321970; j++) _solve(b, j);
for(j = 322800; j < 322810; j++) _solve(b, j);
for(j = 323640; j < 323650; j++) _solve(b, j);
for(j = 324480; j < 324490; j++) _solve(b, j);
for(j = 325320; j < 325330; j++) _solve(b, j);
for(j = 326160; j < 326170; j++) _solve(b, j);
for(j = 327000; j < 327010; j++) _solve(b, j);
for(j = 327840; j < 327850; j++) _solve(b, j);
for(j = 328680; j < 328690; j++) _solve(b, j);
for(j = 329520; j < 329530; j++) _solve(b, j);
for(j = 330360; j < 330370; j++) _solve(b, j);
for(j = 331200; j < 331210; j++) _solve(b, j);
for(j = 332040; j < 332050; j++) _solve(b, j);
for(j = 332880; j < 332890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 333720; j < 333730; j++) _solve(b, j);
for(j = 334560; j < 334570; j++) _solve(b, j);
for(j = 335400; j < 335410; j++) _solve(b, j);
for(j = 336240; j < 336250; j++) _solve(b, j);
for(j = 337080; j < 337090; j++) _solve(b, j);
for(j = 337920; j < 337930; j++) _solve(b, j);
for(j = 338760; j < 338770; j++) _solve(b, j);
for(j = 339600; j < 339610; j++) _solve(b, j);
for(j = 340440; j < 340450; j++) _solve(b, j);
for(j = 341280; j < 341290; j++) _solve(b, j);
for(j = 342120; j < 342130; j++) _solve(b, j);
for(j = 342960; j < 342970; j++) _solve(b, j);
for(j = 343800; j < 343810; j++) _solve(b, j);
for(j = 344640; j < 344650; j++) _solve(b, j);
for(j = 345480; j < 345490; j++) _solve(b, j);
for(j = 346320; j < 346330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 347160; j < 347170; j++) _solve(b, j);
for(j = 348000; j < 348010; j++) _solve(b, j);
for(j = 348840; j < 348850; j++) _solve(b, j);
for(j = 349680; j < 349690; j++) _solve(b, j);
for(j = 350520; j < 350530; j++) _solve(b, j);
for(j = 351360; j < 351370; j++) _solve(b, j);
for(j = 352200; j < 352210; j++) _solve(b, j);
for(j = 353040; j < 353050; j++) _solve(b, j);
for(j = 353880; j < 353890; j++) _solve(b, j);
for(j = 354720; j < 354730; j++) _solve(b, j);
for(j = 355560; j < 355570; j++) _solve(b, j);
for(j = 356400; j < 356410; j++) _solve(b, j);
for(j = 357240; j < 357250; j++) _solve(b, j);
for(j = 358080; j < 358090; j++) _solve(b, j);
for(j = 358920; j < 358930; j++) _solve(b, j);
for(j = 359760; j < 359770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 360600; j < 360610; j++) _solve(b, j);
for(j = 361440; j < 361450; j++) _solve(b, j);
for(j = 362280; j < 362290; j++) _solve(b, j);
for(j = 363120; j < 363130; j++) _solve(b, j);
for(j = 363960; j < 363970; j++) _solve(b, j);
for(j = 364800; j < 364810; j++) _solve(b, j);
for(j = 365640; j < 365650; j++) _solve(b, j);
for(j = 366480; j < 366490; j++) _solve(b, j);
for(j = 367320; j < 367330; j++) _solve(b, j);
for(j = 368160; j < 368170; j++) _solve(b, j);
for(j = 369000; j < 369010; j++) _solve(b, j);
for(j = 369840; j < 369850; j++) _solve(b, j);
for(j = 370680; j < 370690; j++) _solve(b, j);
for(j = 371520; j < 371530; j++) _solve(b, j);
for(j = 372360; j < 372370; j++) _solve(b, j);
for(j = 373200; j < 373210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 374040; j < 374050; j++) _solve(b, j);
for(j = 374880; j < 374890; j++) _solve(b, j);
for(j = 375720; j < 375730; j++) _solve(b, j);
for(j = 376560; j < 376570; j++) _solve(b, j);
for(j = 377400; j < 377410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 307690; j < 307700; j++) _solve(b, j);
for(j = 308530; j < 308540; j++) _solve(b, j);
for(j = 309370; j < 309380; j++) _solve(b, j);
for(j = 310210; j < 310220; j++) _solve(b, j);
for(j = 311050; j < 311060; j++) _solve(b, j);
for(j = 311890; j < 311900; j++) _solve(b, j);
for(j = 312730; j < 312740; j++) _solve(b, j);
for(j = 313570; j < 313580; j++) _solve(b, j);
for(j = 314410; j < 314420; j++) _solve(b, j);
for(j = 315250; j < 315260; j++) _solve(b, j);
for(j = 316090; j < 316100; j++) _solve(b, j);
for(j = 316930; j < 316940; j++) _solve(b, j);
for(j = 317770; j < 317780; j++) _solve(b, j);
for(j = 318610; j < 318620; j++) _solve(b, j);
for(j = 319450; j < 319460; j++) _solve(b, j);
for(j = 320290; j < 320300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 321130; j < 321140; j++) _solve(b, j);
for(j = 321970; j < 321980; j++) _solve(b, j);
for(j = 322810; j < 322820; j++) _solve(b, j);
for(j = 323650; j < 323660; j++) _solve(b, j);
for(j = 324490; j < 324500; j++) _solve(b, j);
for(j = 325330; j < 325340; j++) _solve(b, j);
for(j = 326170; j < 326180; j++) _solve(b, j);
for(j = 327010; j < 327020; j++) _solve(b, j);
for(j = 327850; j < 327860; j++) _solve(b, j);
for(j = 328690; j < 328700; j++) _solve(b, j);
for(j = 329530; j < 329540; j++) _solve(b, j);
for(j = 330370; j < 330380; j++) _solve(b, j);
for(j = 331210; j < 331220; j++) _solve(b, j);
for(j = 332050; j < 332060; j++) _solve(b, j);
for(j = 332890; j < 332900; j++) _solve(b, j);
for(j = 333730; j < 333740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 334570; j < 334580; j++) _solve(b, j);
for(j = 335410; j < 335420; j++) _solve(b, j);
for(j = 336250; j < 336260; j++) _solve(b, j);
for(j = 337090; j < 337100; j++) _solve(b, j);
for(j = 337930; j < 337940; j++) _solve(b, j);
for(j = 338770; j < 338780; j++) _solve(b, j);
for(j = 339610; j < 339620; j++) _solve(b, j);
for(j = 340450; j < 340460; j++) _solve(b, j);
for(j = 341290; j < 341300; j++) _solve(b, j);
for(j = 342130; j < 342140; j++) _solve(b, j);
for(j = 342970; j < 342980; j++) _solve(b, j);
for(j = 343810; j < 343820; j++) _solve(b, j);
for(j = 344650; j < 344660; j++) _solve(b, j);
for(j = 345490; j < 345500; j++) _solve(b, j);
for(j = 346330; j < 346340; j++) _solve(b, j);
for(j = 347170; j < 347180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 348010; j < 348020; j++) _solve(b, j);
for(j = 348850; j < 348860; j++) _solve(b, j);
for(j = 349690; j < 349700; j++) _solve(b, j);
for(j = 350530; j < 350540; j++) _solve(b, j);
for(j = 351370; j < 351380; j++) _solve(b, j);
for(j = 352210; j < 352220; j++) _solve(b, j);
for(j = 353050; j < 353060; j++) _solve(b, j);
for(j = 353890; j < 353900; j++) _solve(b, j);
for(j = 354730; j < 354740; j++) _solve(b, j);
for(j = 355570; j < 355580; j++) _solve(b, j);
for(j = 356410; j < 356420; j++) _solve(b, j);
for(j = 357250; j < 357260; j++) _solve(b, j);
for(j = 358090; j < 358100; j++) _solve(b, j);
for(j = 358930; j < 358940; j++) _solve(b, j);
for(j = 359770; j < 359780; j++) _solve(b, j);
for(j = 360610; j < 360620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 361450; j < 361460; j++) _solve(b, j);
for(j = 362290; j < 362300; j++) _solve(b, j);
for(j = 363130; j < 363140; j++) _solve(b, j);
for(j = 363970; j < 363980; j++) _solve(b, j);
for(j = 364810; j < 364820; j++) _solve(b, j);
for(j = 365650; j < 365660; j++) _solve(b, j);
for(j = 366490; j < 366500; j++) _solve(b, j);
for(j = 367330; j < 367340; j++) _solve(b, j);
for(j = 368170; j < 368180; j++) _solve(b, j);
for(j = 369010; j < 369020; j++) _solve(b, j);
for(j = 369850; j < 369860; j++) _solve(b, j);
for(j = 370690; j < 370700; j++) _solve(b, j);
for(j = 371530; j < 371540; j++) _solve(b, j);
for(j = 372370; j < 372380; j++) _solve(b, j);
for(j = 373210; j < 373220; j++) _solve(b, j);
for(j = 374050; j < 374060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 374890; j < 374900; j++) _solve(b, j);
for(j = 375730; j < 375740; j++) _solve(b, j);
for(j = 376570; j < 376580; j++) _solve(b, j);
for(j = 377410; j < 377420; j++) _solve(b, j);
for(j = 378250; j < 378260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 308540; j < 308550; j++) _solve(b, j);
for(j = 309380; j < 309390; j++) _solve(b, j);
for(j = 310220; j < 310230; j++) _solve(b, j);
for(j = 311060; j < 311070; j++) _solve(b, j);
for(j = 311900; j < 311910; j++) _solve(b, j);
for(j = 312740; j < 312750; j++) _solve(b, j);
for(j = 313580; j < 313590; j++) _solve(b, j);
for(j = 314420; j < 314430; j++) _solve(b, j);
for(j = 315260; j < 315270; j++) _solve(b, j);
for(j = 316100; j < 316110; j++) _solve(b, j);
for(j = 316940; j < 316950; j++) _solve(b, j);
for(j = 317780; j < 317790; j++) _solve(b, j);
for(j = 318620; j < 318630; j++) _solve(b, j);
for(j = 319460; j < 319470; j++) _solve(b, j);
for(j = 320300; j < 320310; j++) _solve(b, j);
for(j = 321140; j < 321150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 321980; j < 321990; j++) _solve(b, j);
for(j = 322820; j < 322830; j++) _solve(b, j);
for(j = 323660; j < 323670; j++) _solve(b, j);
for(j = 324500; j < 324510; j++) _solve(b, j);
for(j = 325340; j < 325350; j++) _solve(b, j);
for(j = 326180; j < 326190; j++) _solve(b, j);
for(j = 327020; j < 327030; j++) _solve(b, j);
for(j = 327860; j < 327870; j++) _solve(b, j);
for(j = 328700; j < 328710; j++) _solve(b, j);
for(j = 329540; j < 329550; j++) _solve(b, j);
for(j = 330380; j < 330390; j++) _solve(b, j);
for(j = 331220; j < 331230; j++) _solve(b, j);
for(j = 332060; j < 332070; j++) _solve(b, j);
for(j = 332900; j < 332910; j++) _solve(b, j);
for(j = 333740; j < 333750; j++) _solve(b, j);
for(j = 334580; j < 334590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 335420; j < 335430; j++) _solve(b, j);
for(j = 336260; j < 336270; j++) _solve(b, j);
for(j = 337100; j < 337110; j++) _solve(b, j);
for(j = 337940; j < 337950; j++) _solve(b, j);
for(j = 338780; j < 338790; j++) _solve(b, j);
for(j = 339620; j < 339630; j++) _solve(b, j);
for(j = 340460; j < 340470; j++) _solve(b, j);
for(j = 341300; j < 341310; j++) _solve(b, j);
for(j = 342140; j < 342150; j++) _solve(b, j);
for(j = 342980; j < 342990; j++) _solve(b, j);
for(j = 343820; j < 343830; j++) _solve(b, j);
for(j = 344660; j < 344670; j++) _solve(b, j);
for(j = 345500; j < 345510; j++) _solve(b, j);
for(j = 346340; j < 346350; j++) _solve(b, j);
for(j = 347180; j < 347190; j++) _solve(b, j);
for(j = 348020; j < 348030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 348860; j < 348870; j++) _solve(b, j);
for(j = 349700; j < 349710; j++) _solve(b, j);
for(j = 350540; j < 350550; j++) _solve(b, j);
for(j = 351380; j < 351390; j++) _solve(b, j);
for(j = 352220; j < 352230; j++) _solve(b, j);
for(j = 353060; j < 353070; j++) _solve(b, j);
for(j = 353900; j < 353910; j++) _solve(b, j);
for(j = 354740; j < 354750; j++) _solve(b, j);
for(j = 355580; j < 355590; j++) _solve(b, j);
for(j = 356420; j < 356430; j++) _solve(b, j);
for(j = 357260; j < 357270; j++) _solve(b, j);
for(j = 358100; j < 358110; j++) _solve(b, j);
for(j = 358940; j < 358950; j++) _solve(b, j);
for(j = 359780; j < 359790; j++) _solve(b, j);
for(j = 360620; j < 360630; j++) _solve(b, j);
for(j = 361460; j < 361470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 362300; j < 362310; j++) _solve(b, j);
for(j = 363140; j < 363150; j++) _solve(b, j);
for(j = 363980; j < 363990; j++) _solve(b, j);
for(j = 364820; j < 364830; j++) _solve(b, j);
for(j = 365660; j < 365670; j++) _solve(b, j);
for(j = 366500; j < 366510; j++) _solve(b, j);
for(j = 367340; j < 367350; j++) _solve(b, j);
for(j = 368180; j < 368190; j++) _solve(b, j);
for(j = 369020; j < 369030; j++) _solve(b, j);
for(j = 369860; j < 369870; j++) _solve(b, j);
for(j = 370700; j < 370710; j++) _solve(b, j);
for(j = 371540; j < 371550; j++) _solve(b, j);
for(j = 372380; j < 372390; j++) _solve(b, j);
for(j = 373220; j < 373230; j++) _solve(b, j);
for(j = 374060; j < 374070; j++) _solve(b, j);
for(j = 374900; j < 374910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 375740; j < 375750; j++) _solve(b, j);
for(j = 376580; j < 376590; j++) _solve(b, j);
for(j = 377420; j < 377430; j++) _solve(b, j);
for(j = 378260; j < 378270; j++) _solve(b, j);
for(j = 379100; j < 379110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 309390; j < 309400; j++) _solve(b, j);
for(j = 310230; j < 310240; j++) _solve(b, j);
for(j = 311070; j < 311080; j++) _solve(b, j);
for(j = 311910; j < 311920; j++) _solve(b, j);
for(j = 312750; j < 312760; j++) _solve(b, j);
for(j = 313590; j < 313600; j++) _solve(b, j);
for(j = 314430; j < 314440; j++) _solve(b, j);
for(j = 315270; j < 315280; j++) _solve(b, j);
for(j = 316110; j < 316120; j++) _solve(b, j);
for(j = 316950; j < 316960; j++) _solve(b, j);
for(j = 317790; j < 317800; j++) _solve(b, j);
for(j = 318630; j < 318640; j++) _solve(b, j);
for(j = 319470; j < 319480; j++) _solve(b, j);
for(j = 320310; j < 320320; j++) _solve(b, j);
for(j = 321150; j < 321160; j++) _solve(b, j);
for(j = 321990; j < 322000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 322830; j < 322840; j++) _solve(b, j);
for(j = 323670; j < 323680; j++) _solve(b, j);
for(j = 324510; j < 324520; j++) _solve(b, j);
for(j = 325350; j < 325360; j++) _solve(b, j);
for(j = 326190; j < 326200; j++) _solve(b, j);
for(j = 327030; j < 327040; j++) _solve(b, j);
for(j = 327870; j < 327880; j++) _solve(b, j);
for(j = 328710; j < 328720; j++) _solve(b, j);
for(j = 329550; j < 329560; j++) _solve(b, j);
for(j = 330390; j < 330400; j++) _solve(b, j);
for(j = 331230; j < 331240; j++) _solve(b, j);
for(j = 332070; j < 332080; j++) _solve(b, j);
for(j = 332910; j < 332920; j++) _solve(b, j);
for(j = 333750; j < 333760; j++) _solve(b, j);
for(j = 334590; j < 334600; j++) _solve(b, j);
for(j = 335430; j < 335440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 336270; j < 336280; j++) _solve(b, j);
for(j = 337110; j < 337120; j++) _solve(b, j);
for(j = 337950; j < 337960; j++) _solve(b, j);
for(j = 338790; j < 338800; j++) _solve(b, j);
for(j = 339630; j < 339640; j++) _solve(b, j);
for(j = 340470; j < 340480; j++) _solve(b, j);
for(j = 341310; j < 341320; j++) _solve(b, j);
for(j = 342150; j < 342160; j++) _solve(b, j);
for(j = 342990; j < 343000; j++) _solve(b, j);
for(j = 343830; j < 343840; j++) _solve(b, j);
for(j = 344670; j < 344680; j++) _solve(b, j);
for(j = 345510; j < 345520; j++) _solve(b, j);
for(j = 346350; j < 346360; j++) _solve(b, j);
for(j = 347190; j < 347200; j++) _solve(b, j);
for(j = 348030; j < 348040; j++) _solve(b, j);
for(j = 348870; j < 348880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 349710; j < 349720; j++) _solve(b, j);
for(j = 350550; j < 350560; j++) _solve(b, j);
for(j = 351390; j < 351400; j++) _solve(b, j);
for(j = 352230; j < 352240; j++) _solve(b, j);
for(j = 353070; j < 353080; j++) _solve(b, j);
for(j = 353910; j < 353920; j++) _solve(b, j);
for(j = 354750; j < 354760; j++) _solve(b, j);
for(j = 355590; j < 355600; j++) _solve(b, j);
for(j = 356430; j < 356440; j++) _solve(b, j);
for(j = 357270; j < 357280; j++) _solve(b, j);
for(j = 358110; j < 358120; j++) _solve(b, j);
for(j = 358950; j < 358960; j++) _solve(b, j);
for(j = 359790; j < 359800; j++) _solve(b, j);
for(j = 360630; j < 360640; j++) _solve(b, j);
for(j = 361470; j < 361480; j++) _solve(b, j);
for(j = 362310; j < 362320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 363150; j < 363160; j++) _solve(b, j);
for(j = 363990; j < 364000; j++) _solve(b, j);
for(j = 364830; j < 364840; j++) _solve(b, j);
for(j = 365670; j < 365680; j++) _solve(b, j);
for(j = 366510; j < 366520; j++) _solve(b, j);
for(j = 367350; j < 367360; j++) _solve(b, j);
for(j = 368190; j < 368200; j++) _solve(b, j);
for(j = 369030; j < 369040; j++) _solve(b, j);
for(j = 369870; j < 369880; j++) _solve(b, j);
for(j = 370710; j < 370720; j++) _solve(b, j);
for(j = 371550; j < 371560; j++) _solve(b, j);
for(j = 372390; j < 372400; j++) _solve(b, j);
for(j = 373230; j < 373240; j++) _solve(b, j);
for(j = 374070; j < 374080; j++) _solve(b, j);
for(j = 374910; j < 374920; j++) _solve(b, j);
for(j = 375750; j < 375760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 376590; j < 376600; j++) _solve(b, j);
for(j = 377430; j < 377440; j++) _solve(b, j);
for(j = 378270; j < 378280; j++) _solve(b, j);
for(j = 379110; j < 379120; j++) _solve(b, j);
for(j = 379950; j < 379960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 310240; j < 310250; j++) _solve(b, j);
for(j = 311080; j < 311090; j++) _solve(b, j);
for(j = 311920; j < 311930; j++) _solve(b, j);
for(j = 312760; j < 312770; j++) _solve(b, j);
for(j = 313600; j < 313610; j++) _solve(b, j);
for(j = 314440; j < 314450; j++) _solve(b, j);
for(j = 315280; j < 315290; j++) _solve(b, j);
for(j = 316120; j < 316130; j++) _solve(b, j);
for(j = 316960; j < 316970; j++) _solve(b, j);
for(j = 317800; j < 317810; j++) _solve(b, j);
for(j = 318640; j < 318650; j++) _solve(b, j);
for(j = 319480; j < 319490; j++) _solve(b, j);
for(j = 320320; j < 320330; j++) _solve(b, j);
for(j = 321160; j < 321170; j++) _solve(b, j);
for(j = 322000; j < 322010; j++) _solve(b, j);
for(j = 322840; j < 322850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 323680; j < 323690; j++) _solve(b, j);
for(j = 324520; j < 324530; j++) _solve(b, j);
for(j = 325360; j < 325370; j++) _solve(b, j);
for(j = 326200; j < 326210; j++) _solve(b, j);
for(j = 327040; j < 327050; j++) _solve(b, j);
for(j = 327880; j < 327890; j++) _solve(b, j);
for(j = 328720; j < 328730; j++) _solve(b, j);
for(j = 329560; j < 329570; j++) _solve(b, j);
for(j = 330400; j < 330410; j++) _solve(b, j);
for(j = 331240; j < 331250; j++) _solve(b, j);
for(j = 332080; j < 332090; j++) _solve(b, j);
for(j = 332920; j < 332930; j++) _solve(b, j);
for(j = 333760; j < 333770; j++) _solve(b, j);
for(j = 334600; j < 334610; j++) _solve(b, j);
for(j = 335440; j < 335450; j++) _solve(b, j);
for(j = 336280; j < 336290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 337120; j < 337130; j++) _solve(b, j);
for(j = 337960; j < 337970; j++) _solve(b, j);
for(j = 338800; j < 338810; j++) _solve(b, j);
for(j = 339640; j < 339650; j++) _solve(b, j);
for(j = 340480; j < 340490; j++) _solve(b, j);
for(j = 341320; j < 341330; j++) _solve(b, j);
for(j = 342160; j < 342170; j++) _solve(b, j);
for(j = 343000; j < 343010; j++) _solve(b, j);
for(j = 343840; j < 343850; j++) _solve(b, j);
for(j = 344680; j < 344690; j++) _solve(b, j);
for(j = 345520; j < 345530; j++) _solve(b, j);
for(j = 346360; j < 346370; j++) _solve(b, j);
for(j = 347200; j < 347210; j++) _solve(b, j);
for(j = 348040; j < 348050; j++) _solve(b, j);
for(j = 348880; j < 348890; j++) _solve(b, j);
for(j = 349720; j < 349730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 350560; j < 350570; j++) _solve(b, j);
for(j = 351400; j < 351410; j++) _solve(b, j);
for(j = 352240; j < 352250; j++) _solve(b, j);
for(j = 353080; j < 353090; j++) _solve(b, j);
for(j = 353920; j < 353930; j++) _solve(b, j);
for(j = 354760; j < 354770; j++) _solve(b, j);
for(j = 355600; j < 355610; j++) _solve(b, j);
for(j = 356440; j < 356450; j++) _solve(b, j);
for(j = 357280; j < 357290; j++) _solve(b, j);
for(j = 358120; j < 358130; j++) _solve(b, j);
for(j = 358960; j < 358970; j++) _solve(b, j);
for(j = 359800; j < 359810; j++) _solve(b, j);
for(j = 360640; j < 360650; j++) _solve(b, j);
for(j = 361480; j < 361490; j++) _solve(b, j);
for(j = 362320; j < 362330; j++) _solve(b, j);
for(j = 363160; j < 363170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 364000; j < 364010; j++) _solve(b, j);
for(j = 364840; j < 364850; j++) _solve(b, j);
for(j = 365680; j < 365690; j++) _solve(b, j);
for(j = 366520; j < 366530; j++) _solve(b, j);
for(j = 367360; j < 367370; j++) _solve(b, j);
for(j = 368200; j < 368210; j++) _solve(b, j);
for(j = 369040; j < 369050; j++) _solve(b, j);
for(j = 369880; j < 369890; j++) _solve(b, j);
for(j = 370720; j < 370730; j++) _solve(b, j);
for(j = 371560; j < 371570; j++) _solve(b, j);
for(j = 372400; j < 372410; j++) _solve(b, j);
for(j = 373240; j < 373250; j++) _solve(b, j);
for(j = 374080; j < 374090; j++) _solve(b, j);
for(j = 374920; j < 374930; j++) _solve(b, j);
for(j = 375760; j < 375770; j++) _solve(b, j);
for(j = 376600; j < 376610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 377440; j < 377450; j++) _solve(b, j);
for(j = 378280; j < 378290; j++) _solve(b, j);
for(j = 379120; j < 379130; j++) _solve(b, j);
for(j = 379960; j < 379970; j++) _solve(b, j);
for(j = 380800; j < 380810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 311090; j < 311100; j++) _solve(b, j);
for(j = 311930; j < 311940; j++) _solve(b, j);
for(j = 312770; j < 312780; j++) _solve(b, j);
for(j = 313610; j < 313620; j++) _solve(b, j);
for(j = 314450; j < 314460; j++) _solve(b, j);
for(j = 315290; j < 315300; j++) _solve(b, j);
for(j = 316130; j < 316140; j++) _solve(b, j);
for(j = 316970; j < 316980; j++) _solve(b, j);
for(j = 317810; j < 317820; j++) _solve(b, j);
for(j = 318650; j < 318660; j++) _solve(b, j);
for(j = 319490; j < 319500; j++) _solve(b, j);
for(j = 320330; j < 320340; j++) _solve(b, j);
for(j = 321170; j < 321180; j++) _solve(b, j);
for(j = 322010; j < 322020; j++) _solve(b, j);
for(j = 322850; j < 322860; j++) _solve(b, j);
for(j = 323690; j < 323700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 324530; j < 324540; j++) _solve(b, j);
for(j = 325370; j < 325380; j++) _solve(b, j);
for(j = 326210; j < 326220; j++) _solve(b, j);
for(j = 327050; j < 327060; j++) _solve(b, j);
for(j = 327890; j < 327900; j++) _solve(b, j);
for(j = 328730; j < 328740; j++) _solve(b, j);
for(j = 329570; j < 329580; j++) _solve(b, j);
for(j = 330410; j < 330420; j++) _solve(b, j);
for(j = 331250; j < 331260; j++) _solve(b, j);
for(j = 332090; j < 332100; j++) _solve(b, j);
for(j = 332930; j < 332940; j++) _solve(b, j);
for(j = 333770; j < 333780; j++) _solve(b, j);
for(j = 334610; j < 334620; j++) _solve(b, j);
for(j = 335450; j < 335460; j++) _solve(b, j);
for(j = 336290; j < 336300; j++) _solve(b, j);
for(j = 337130; j < 337140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 337970; j < 337980; j++) _solve(b, j);
for(j = 338810; j < 338820; j++) _solve(b, j);
for(j = 339650; j < 339660; j++) _solve(b, j);
for(j = 340490; j < 340500; j++) _solve(b, j);
for(j = 341330; j < 341340; j++) _solve(b, j);
for(j = 342170; j < 342180; j++) _solve(b, j);
for(j = 343010; j < 343020; j++) _solve(b, j);
for(j = 343850; j < 343860; j++) _solve(b, j);
for(j = 344690; j < 344700; j++) _solve(b, j);
for(j = 345530; j < 345540; j++) _solve(b, j);
for(j = 346370; j < 346380; j++) _solve(b, j);
for(j = 347210; j < 347220; j++) _solve(b, j);
for(j = 348050; j < 348060; j++) _solve(b, j);
for(j = 348890; j < 348900; j++) _solve(b, j);
for(j = 349730; j < 349740; j++) _solve(b, j);
for(j = 350570; j < 350580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 351410; j < 351420; j++) _solve(b, j);
for(j = 352250; j < 352260; j++) _solve(b, j);
for(j = 353090; j < 353100; j++) _solve(b, j);
for(j = 353930; j < 353940; j++) _solve(b, j);
for(j = 354770; j < 354780; j++) _solve(b, j);
for(j = 355610; j < 355620; j++) _solve(b, j);
for(j = 356450; j < 356460; j++) _solve(b, j);
for(j = 357290; j < 357300; j++) _solve(b, j);
for(j = 358130; j < 358140; j++) _solve(b, j);
for(j = 358970; j < 358980; j++) _solve(b, j);
for(j = 359810; j < 359820; j++) _solve(b, j);
for(j = 360650; j < 360660; j++) _solve(b, j);
for(j = 361490; j < 361500; j++) _solve(b, j);
for(j = 362330; j < 362340; j++) _solve(b, j);
for(j = 363170; j < 363180; j++) _solve(b, j);
for(j = 364010; j < 364020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 364850; j < 364860; j++) _solve(b, j);
for(j = 365690; j < 365700; j++) _solve(b, j);
for(j = 366530; j < 366540; j++) _solve(b, j);
for(j = 367370; j < 367380; j++) _solve(b, j);
for(j = 368210; j < 368220; j++) _solve(b, j);
for(j = 369050; j < 369060; j++) _solve(b, j);
for(j = 369890; j < 369900; j++) _solve(b, j);
for(j = 370730; j < 370740; j++) _solve(b, j);
for(j = 371570; j < 371580; j++) _solve(b, j);
for(j = 372410; j < 372420; j++) _solve(b, j);
for(j = 373250; j < 373260; j++) _solve(b, j);
for(j = 374090; j < 374100; j++) _solve(b, j);
for(j = 374930; j < 374940; j++) _solve(b, j);
for(j = 375770; j < 375780; j++) _solve(b, j);
for(j = 376610; j < 376620; j++) _solve(b, j);
for(j = 377450; j < 377460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 378290; j < 378300; j++) _solve(b, j);
for(j = 379130; j < 379140; j++) _solve(b, j);
for(j = 379970; j < 379980; j++) _solve(b, j);
for(j = 380810; j < 380820; j++) _solve(b, j);
for(j = 381650; j < 381660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 311940; j < 311950; j++) _solve(b, j);
for(j = 312780; j < 312790; j++) _solve(b, j);
for(j = 313620; j < 313630; j++) _solve(b, j);
for(j = 314460; j < 314470; j++) _solve(b, j);
for(j = 315300; j < 315310; j++) _solve(b, j);
for(j = 316140; j < 316150; j++) _solve(b, j);
for(j = 316980; j < 316990; j++) _solve(b, j);
for(j = 317820; j < 317830; j++) _solve(b, j);
for(j = 318660; j < 318670; j++) _solve(b, j);
for(j = 319500; j < 319510; j++) _solve(b, j);
for(j = 320340; j < 320350; j++) _solve(b, j);
for(j = 321180; j < 321190; j++) _solve(b, j);
for(j = 322020; j < 322030; j++) _solve(b, j);
for(j = 322860; j < 322870; j++) _solve(b, j);
for(j = 323700; j < 323710; j++) _solve(b, j);
for(j = 324540; j < 324550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 325380; j < 325390; j++) _solve(b, j);
for(j = 326220; j < 326230; j++) _solve(b, j);
for(j = 327060; j < 327070; j++) _solve(b, j);
for(j = 327900; j < 327910; j++) _solve(b, j);
for(j = 328740; j < 328750; j++) _solve(b, j);
for(j = 329580; j < 329590; j++) _solve(b, j);
for(j = 330420; j < 330430; j++) _solve(b, j);
for(j = 331260; j < 331270; j++) _solve(b, j);
for(j = 332100; j < 332110; j++) _solve(b, j);
for(j = 332940; j < 332950; j++) _solve(b, j);
for(j = 333780; j < 333790; j++) _solve(b, j);
for(j = 334620; j < 334630; j++) _solve(b, j);
for(j = 335460; j < 335470; j++) _solve(b, j);
for(j = 336300; j < 336310; j++) _solve(b, j);
for(j = 337140; j < 337150; j++) _solve(b, j);
for(j = 337980; j < 337990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 338820; j < 338830; j++) _solve(b, j);
for(j = 339660; j < 339670; j++) _solve(b, j);
for(j = 340500; j < 340510; j++) _solve(b, j);
for(j = 341340; j < 341350; j++) _solve(b, j);
for(j = 342180; j < 342190; j++) _solve(b, j);
for(j = 343020; j < 343030; j++) _solve(b, j);
for(j = 343860; j < 343870; j++) _solve(b, j);
for(j = 344700; j < 344710; j++) _solve(b, j);
for(j = 345540; j < 345550; j++) _solve(b, j);
for(j = 346380; j < 346390; j++) _solve(b, j);
for(j = 347220; j < 347230; j++) _solve(b, j);
for(j = 348060; j < 348070; j++) _solve(b, j);
for(j = 348900; j < 348910; j++) _solve(b, j);
for(j = 349740; j < 349750; j++) _solve(b, j);
for(j = 350580; j < 350590; j++) _solve(b, j);
for(j = 351420; j < 351430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 352260; j < 352270; j++) _solve(b, j);
for(j = 353100; j < 353110; j++) _solve(b, j);
for(j = 353940; j < 353950; j++) _solve(b, j);
for(j = 354780; j < 354790; j++) _solve(b, j);
for(j = 355620; j < 355630; j++) _solve(b, j);
for(j = 356460; j < 356470; j++) _solve(b, j);
for(j = 357300; j < 357310; j++) _solve(b, j);
for(j = 358140; j < 358150; j++) _solve(b, j);
for(j = 358980; j < 358990; j++) _solve(b, j);
for(j = 359820; j < 359830; j++) _solve(b, j);
for(j = 360660; j < 360670; j++) _solve(b, j);
for(j = 361500; j < 361510; j++) _solve(b, j);
for(j = 362340; j < 362350; j++) _solve(b, j);
for(j = 363180; j < 363190; j++) _solve(b, j);
for(j = 364020; j < 364030; j++) _solve(b, j);
for(j = 364860; j < 364870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 365700; j < 365710; j++) _solve(b, j);
for(j = 366540; j < 366550; j++) _solve(b, j);
for(j = 367380; j < 367390; j++) _solve(b, j);
for(j = 368220; j < 368230; j++) _solve(b, j);
for(j = 369060; j < 369070; j++) _solve(b, j);
for(j = 369900; j < 369910; j++) _solve(b, j);
for(j = 370740; j < 370750; j++) _solve(b, j);
for(j = 371580; j < 371590; j++) _solve(b, j);
for(j = 372420; j < 372430; j++) _solve(b, j);
for(j = 373260; j < 373270; j++) _solve(b, j);
for(j = 374100; j < 374110; j++) _solve(b, j);
for(j = 374940; j < 374950; j++) _solve(b, j);
for(j = 375780; j < 375790; j++) _solve(b, j);
for(j = 376620; j < 376630; j++) _solve(b, j);
for(j = 377460; j < 377470; j++) _solve(b, j);
for(j = 378300; j < 378310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 379140; j < 379150; j++) _solve(b, j);
for(j = 379980; j < 379990; j++) _solve(b, j);
for(j = 380820; j < 380830; j++) _solve(b, j);
for(j = 381660; j < 381670; j++) _solve(b, j);
for(j = 382500; j < 382510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 312790; j < 312800; j++) _solve(b, j);
for(j = 313630; j < 313640; j++) _solve(b, j);
for(j = 314470; j < 314480; j++) _solve(b, j);
for(j = 315310; j < 315320; j++) _solve(b, j);
for(j = 316150; j < 316160; j++) _solve(b, j);
for(j = 316990; j < 317000; j++) _solve(b, j);
for(j = 317830; j < 317840; j++) _solve(b, j);
for(j = 318670; j < 318680; j++) _solve(b, j);
for(j = 319510; j < 319520; j++) _solve(b, j);
for(j = 320350; j < 320360; j++) _solve(b, j);
for(j = 321190; j < 321200; j++) _solve(b, j);
for(j = 322030; j < 322040; j++) _solve(b, j);
for(j = 322870; j < 322880; j++) _solve(b, j);
for(j = 323710; j < 323720; j++) _solve(b, j);
for(j = 324550; j < 324560; j++) _solve(b, j);
for(j = 325390; j < 325400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 326230; j < 326240; j++) _solve(b, j);
for(j = 327070; j < 327080; j++) _solve(b, j);
for(j = 327910; j < 327920; j++) _solve(b, j);
for(j = 328750; j < 328760; j++) _solve(b, j);
for(j = 329590; j < 329600; j++) _solve(b, j);
for(j = 330430; j < 330440; j++) _solve(b, j);
for(j = 331270; j < 331280; j++) _solve(b, j);
for(j = 332110; j < 332120; j++) _solve(b, j);
for(j = 332950; j < 332960; j++) _solve(b, j);
for(j = 333790; j < 333800; j++) _solve(b, j);
for(j = 334630; j < 334640; j++) _solve(b, j);
for(j = 335470; j < 335480; j++) _solve(b, j);
for(j = 336310; j < 336320; j++) _solve(b, j);
for(j = 337150; j < 337160; j++) _solve(b, j);
for(j = 337990; j < 338000; j++) _solve(b, j);
for(j = 338830; j < 338840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 339670; j < 339680; j++) _solve(b, j);
for(j = 340510; j < 340520; j++) _solve(b, j);
for(j = 341350; j < 341360; j++) _solve(b, j);
for(j = 342190; j < 342200; j++) _solve(b, j);
for(j = 343030; j < 343040; j++) _solve(b, j);
for(j = 343870; j < 343880; j++) _solve(b, j);
for(j = 344710; j < 344720; j++) _solve(b, j);
for(j = 345550; j < 345560; j++) _solve(b, j);
for(j = 346390; j < 346400; j++) _solve(b, j);
for(j = 347230; j < 347240; j++) _solve(b, j);
for(j = 348070; j < 348080; j++) _solve(b, j);
for(j = 348910; j < 348920; j++) _solve(b, j);
for(j = 349750; j < 349760; j++) _solve(b, j);
for(j = 350590; j < 350600; j++) _solve(b, j);
for(j = 351430; j < 351440; j++) _solve(b, j);
for(j = 352270; j < 352280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 353110; j < 353120; j++) _solve(b, j);
for(j = 353950; j < 353960; j++) _solve(b, j);
for(j = 354790; j < 354800; j++) _solve(b, j);
for(j = 355630; j < 355640; j++) _solve(b, j);
for(j = 356470; j < 356480; j++) _solve(b, j);
for(j = 357310; j < 357320; j++) _solve(b, j);
for(j = 358150; j < 358160; j++) _solve(b, j);
for(j = 358990; j < 359000; j++) _solve(b, j);
for(j = 359830; j < 359840; j++) _solve(b, j);
for(j = 360670; j < 360680; j++) _solve(b, j);
for(j = 361510; j < 361520; j++) _solve(b, j);
for(j = 362350; j < 362360; j++) _solve(b, j);
for(j = 363190; j < 363200; j++) _solve(b, j);
for(j = 364030; j < 364040; j++) _solve(b, j);
for(j = 364870; j < 364880; j++) _solve(b, j);
for(j = 365710; j < 365720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 366550; j < 366560; j++) _solve(b, j);
for(j = 367390; j < 367400; j++) _solve(b, j);
for(j = 368230; j < 368240; j++) _solve(b, j);
for(j = 369070; j < 369080; j++) _solve(b, j);
for(j = 369910; j < 369920; j++) _solve(b, j);
for(j = 370750; j < 370760; j++) _solve(b, j);
for(j = 371590; j < 371600; j++) _solve(b, j);
for(j = 372430; j < 372440; j++) _solve(b, j);
for(j = 373270; j < 373280; j++) _solve(b, j);
for(j = 374110; j < 374120; j++) _solve(b, j);
for(j = 374950; j < 374960; j++) _solve(b, j);
for(j = 375790; j < 375800; j++) _solve(b, j);
for(j = 376630; j < 376640; j++) _solve(b, j);
for(j = 377470; j < 377480; j++) _solve(b, j);
for(j = 378310; j < 378320; j++) _solve(b, j);
for(j = 379150; j < 379160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 379990; j < 380000; j++) _solve(b, j);
for(j = 380830; j < 380840; j++) _solve(b, j);
for(j = 381670; j < 381680; j++) _solve(b, j);
for(j = 382510; j < 382520; j++) _solve(b, j);
for(j = 383350; j < 383360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 313640; j < 313650; j++) _solve(b, j);
for(j = 314480; j < 314490; j++) _solve(b, j);
for(j = 315320; j < 315330; j++) _solve(b, j);
for(j = 316160; j < 316170; j++) _solve(b, j);
for(j = 317000; j < 317010; j++) _solve(b, j);
for(j = 317840; j < 317850; j++) _solve(b, j);
for(j = 318680; j < 318690; j++) _solve(b, j);
for(j = 319520; j < 319530; j++) _solve(b, j);
for(j = 320360; j < 320370; j++) _solve(b, j);
for(j = 321200; j < 321210; j++) _solve(b, j);
for(j = 322040; j < 322050; j++) _solve(b, j);
for(j = 322880; j < 322890; j++) _solve(b, j);
for(j = 323720; j < 323730; j++) _solve(b, j);
for(j = 324560; j < 324570; j++) _solve(b, j);
for(j = 325400; j < 325410; j++) _solve(b, j);
for(j = 326240; j < 326250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 327080; j < 327090; j++) _solve(b, j);
for(j = 327920; j < 327930; j++) _solve(b, j);
for(j = 328760; j < 328770; j++) _solve(b, j);
for(j = 329600; j < 329610; j++) _solve(b, j);
for(j = 330440; j < 330450; j++) _solve(b, j);
for(j = 331280; j < 331290; j++) _solve(b, j);
for(j = 332120; j < 332130; j++) _solve(b, j);
for(j = 332960; j < 332970; j++) _solve(b, j);
for(j = 333800; j < 333810; j++) _solve(b, j);
for(j = 334640; j < 334650; j++) _solve(b, j);
for(j = 335480; j < 335490; j++) _solve(b, j);
for(j = 336320; j < 336330; j++) _solve(b, j);
for(j = 337160; j < 337170; j++) _solve(b, j);
for(j = 338000; j < 338010; j++) _solve(b, j);
for(j = 338840; j < 338850; j++) _solve(b, j);
for(j = 339680; j < 339690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 340520; j < 340530; j++) _solve(b, j);
for(j = 341360; j < 341370; j++) _solve(b, j);
for(j = 342200; j < 342210; j++) _solve(b, j);
for(j = 343040; j < 343050; j++) _solve(b, j);
for(j = 343880; j < 343890; j++) _solve(b, j);
for(j = 344720; j < 344730; j++) _solve(b, j);
for(j = 345560; j < 345570; j++) _solve(b, j);
for(j = 346400; j < 346410; j++) _solve(b, j);
for(j = 347240; j < 347250; j++) _solve(b, j);
for(j = 348080; j < 348090; j++) _solve(b, j);
for(j = 348920; j < 348930; j++) _solve(b, j);
for(j = 349760; j < 349770; j++) _solve(b, j);
for(j = 350600; j < 350610; j++) _solve(b, j);
for(j = 351440; j < 351450; j++) _solve(b, j);
for(j = 352280; j < 352290; j++) _solve(b, j);
for(j = 353120; j < 353130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 353960; j < 353970; j++) _solve(b, j);
for(j = 354800; j < 354810; j++) _solve(b, j);
for(j = 355640; j < 355650; j++) _solve(b, j);
for(j = 356480; j < 356490; j++) _solve(b, j);
for(j = 357320; j < 357330; j++) _solve(b, j);
for(j = 358160; j < 358170; j++) _solve(b, j);
for(j = 359000; j < 359010; j++) _solve(b, j);
for(j = 359840; j < 359850; j++) _solve(b, j);
for(j = 360680; j < 360690; j++) _solve(b, j);
for(j = 361520; j < 361530; j++) _solve(b, j);
for(j = 362360; j < 362370; j++) _solve(b, j);
for(j = 363200; j < 363210; j++) _solve(b, j);
for(j = 364040; j < 364050; j++) _solve(b, j);
for(j = 364880; j < 364890; j++) _solve(b, j);
for(j = 365720; j < 365730; j++) _solve(b, j);
for(j = 366560; j < 366570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 367400; j < 367410; j++) _solve(b, j);
for(j = 368240; j < 368250; j++) _solve(b, j);
for(j = 369080; j < 369090; j++) _solve(b, j);
for(j = 369920; j < 369930; j++) _solve(b, j);
for(j = 370760; j < 370770; j++) _solve(b, j);
for(j = 371600; j < 371610; j++) _solve(b, j);
for(j = 372440; j < 372450; j++) _solve(b, j);
for(j = 373280; j < 373290; j++) _solve(b, j);
for(j = 374120; j < 374130; j++) _solve(b, j);
for(j = 374960; j < 374970; j++) _solve(b, j);
for(j = 375800; j < 375810; j++) _solve(b, j);
for(j = 376640; j < 376650; j++) _solve(b, j);
for(j = 377480; j < 377490; j++) _solve(b, j);
for(j = 378320; j < 378330; j++) _solve(b, j);
for(j = 379160; j < 379170; j++) _solve(b, j);
for(j = 380000; j < 380010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 380840; j < 380850; j++) _solve(b, j);
for(j = 381680; j < 381690; j++) _solve(b, j);
for(j = 382520; j < 382530; j++) _solve(b, j);
for(j = 383360; j < 383370; j++) _solve(b, j);
for(j = 384200; j < 384210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 314490; j < 314500; j++) _solve(b, j);
for(j = 315330; j < 315340; j++) _solve(b, j);
for(j = 316170; j < 316180; j++) _solve(b, j);
for(j = 317010; j < 317020; j++) _solve(b, j);
for(j = 317850; j < 317860; j++) _solve(b, j);
for(j = 318690; j < 318700; j++) _solve(b, j);
for(j = 319530; j < 319540; j++) _solve(b, j);
for(j = 320370; j < 320380; j++) _solve(b, j);
for(j = 321210; j < 321220; j++) _solve(b, j);
for(j = 322050; j < 322060; j++) _solve(b, j);
for(j = 322890; j < 322900; j++) _solve(b, j);
for(j = 323730; j < 323740; j++) _solve(b, j);
for(j = 324570; j < 324580; j++) _solve(b, j);
for(j = 325410; j < 325420; j++) _solve(b, j);
for(j = 326250; j < 326260; j++) _solve(b, j);
for(j = 327090; j < 327100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 327930; j < 327940; j++) _solve(b, j);
for(j = 328770; j < 328780; j++) _solve(b, j);
for(j = 329610; j < 329620; j++) _solve(b, j);
for(j = 330450; j < 330460; j++) _solve(b, j);
for(j = 331290; j < 331300; j++) _solve(b, j);
for(j = 332130; j < 332140; j++) _solve(b, j);
for(j = 332970; j < 332980; j++) _solve(b, j);
for(j = 333810; j < 333820; j++) _solve(b, j);
for(j = 334650; j < 334660; j++) _solve(b, j);
for(j = 335490; j < 335500; j++) _solve(b, j);
for(j = 336330; j < 336340; j++) _solve(b, j);
for(j = 337170; j < 337180; j++) _solve(b, j);
for(j = 338010; j < 338020; j++) _solve(b, j);
for(j = 338850; j < 338860; j++) _solve(b, j);
for(j = 339690; j < 339700; j++) _solve(b, j);
for(j = 340530; j < 340540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 341370; j < 341380; j++) _solve(b, j);
for(j = 342210; j < 342220; j++) _solve(b, j);
for(j = 343050; j < 343060; j++) _solve(b, j);
for(j = 343890; j < 343900; j++) _solve(b, j);
for(j = 344730; j < 344740; j++) _solve(b, j);
for(j = 345570; j < 345580; j++) _solve(b, j);
for(j = 346410; j < 346420; j++) _solve(b, j);
for(j = 347250; j < 347260; j++) _solve(b, j);
for(j = 348090; j < 348100; j++) _solve(b, j);
for(j = 348930; j < 348940; j++) _solve(b, j);
for(j = 349770; j < 349780; j++) _solve(b, j);
for(j = 350610; j < 350620; j++) _solve(b, j);
for(j = 351450; j < 351460; j++) _solve(b, j);
for(j = 352290; j < 352300; j++) _solve(b, j);
for(j = 353130; j < 353140; j++) _solve(b, j);
for(j = 353970; j < 353980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 354810; j < 354820; j++) _solve(b, j);
for(j = 355650; j < 355660; j++) _solve(b, j);
for(j = 356490; j < 356500; j++) _solve(b, j);
for(j = 357330; j < 357340; j++) _solve(b, j);
for(j = 358170; j < 358180; j++) _solve(b, j);
for(j = 359010; j < 359020; j++) _solve(b, j);
for(j = 359850; j < 359860; j++) _solve(b, j);
for(j = 360690; j < 360700; j++) _solve(b, j);
for(j = 361530; j < 361540; j++) _solve(b, j);
for(j = 362370; j < 362380; j++) _solve(b, j);
for(j = 363210; j < 363220; j++) _solve(b, j);
for(j = 364050; j < 364060; j++) _solve(b, j);
for(j = 364890; j < 364900; j++) _solve(b, j);
for(j = 365730; j < 365740; j++) _solve(b, j);
for(j = 366570; j < 366580; j++) _solve(b, j);
for(j = 367410; j < 367420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 368250; j < 368260; j++) _solve(b, j);
for(j = 369090; j < 369100; j++) _solve(b, j);
for(j = 369930; j < 369940; j++) _solve(b, j);
for(j = 370770; j < 370780; j++) _solve(b, j);
for(j = 371610; j < 371620; j++) _solve(b, j);
for(j = 372450; j < 372460; j++) _solve(b, j);
for(j = 373290; j < 373300; j++) _solve(b, j);
for(j = 374130; j < 374140; j++) _solve(b, j);
for(j = 374970; j < 374980; j++) _solve(b, j);
for(j = 375810; j < 375820; j++) _solve(b, j);
for(j = 376650; j < 376660; j++) _solve(b, j);
for(j = 377490; j < 377500; j++) _solve(b, j);
for(j = 378330; j < 378340; j++) _solve(b, j);
for(j = 379170; j < 379180; j++) _solve(b, j);
for(j = 380010; j < 380020; j++) _solve(b, j);
for(j = 380850; j < 380860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 381690; j < 381700; j++) _solve(b, j);
for(j = 382530; j < 382540; j++) _solve(b, j);
for(j = 383370; j < 383380; j++) _solve(b, j);
for(j = 384210; j < 384220; j++) _solve(b, j);
for(j = 385050; j < 385060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 315340; j < 315350; j++) _solve(b, j);
for(j = 316180; j < 316190; j++) _solve(b, j);
for(j = 317020; j < 317030; j++) _solve(b, j);
for(j = 317860; j < 317870; j++) _solve(b, j);
for(j = 318700; j < 318710; j++) _solve(b, j);
for(j = 319540; j < 319550; j++) _solve(b, j);
for(j = 320380; j < 320390; j++) _solve(b, j);
for(j = 321220; j < 321230; j++) _solve(b, j);
for(j = 322060; j < 322070; j++) _solve(b, j);
for(j = 322900; j < 322910; j++) _solve(b, j);
for(j = 323740; j < 323750; j++) _solve(b, j);
for(j = 324580; j < 324590; j++) _solve(b, j);
for(j = 325420; j < 325430; j++) _solve(b, j);
for(j = 326260; j < 326270; j++) _solve(b, j);
for(j = 327100; j < 327110; j++) _solve(b, j);
for(j = 327940; j < 327950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 328780; j < 328790; j++) _solve(b, j);
for(j = 329620; j < 329630; j++) _solve(b, j);
for(j = 330460; j < 330470; j++) _solve(b, j);
for(j = 331300; j < 331310; j++) _solve(b, j);
for(j = 332140; j < 332150; j++) _solve(b, j);
for(j = 332980; j < 332990; j++) _solve(b, j);
for(j = 333820; j < 333830; j++) _solve(b, j);
for(j = 334660; j < 334670; j++) _solve(b, j);
for(j = 335500; j < 335510; j++) _solve(b, j);
for(j = 336340; j < 336350; j++) _solve(b, j);
for(j = 337180; j < 337190; j++) _solve(b, j);
for(j = 338020; j < 338030; j++) _solve(b, j);
for(j = 338860; j < 338870; j++) _solve(b, j);
for(j = 339700; j < 339710; j++) _solve(b, j);
for(j = 340540; j < 340550; j++) _solve(b, j);
for(j = 341380; j < 341390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 342220; j < 342230; j++) _solve(b, j);
for(j = 343060; j < 343070; j++) _solve(b, j);
for(j = 343900; j < 343910; j++) _solve(b, j);
for(j = 344740; j < 344750; j++) _solve(b, j);
for(j = 345580; j < 345590; j++) _solve(b, j);
for(j = 346420; j < 346430; j++) _solve(b, j);
for(j = 347260; j < 347270; j++) _solve(b, j);
for(j = 348100; j < 348110; j++) _solve(b, j);
for(j = 348940; j < 348950; j++) _solve(b, j);
for(j = 349780; j < 349790; j++) _solve(b, j);
for(j = 350620; j < 350630; j++) _solve(b, j);
for(j = 351460; j < 351470; j++) _solve(b, j);
for(j = 352300; j < 352310; j++) _solve(b, j);
for(j = 353140; j < 353150; j++) _solve(b, j);
for(j = 353980; j < 353990; j++) _solve(b, j);
for(j = 354820; j < 354830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 355660; j < 355670; j++) _solve(b, j);
for(j = 356500; j < 356510; j++) _solve(b, j);
for(j = 357340; j < 357350; j++) _solve(b, j);
for(j = 358180; j < 358190; j++) _solve(b, j);
for(j = 359020; j < 359030; j++) _solve(b, j);
for(j = 359860; j < 359870; j++) _solve(b, j);
for(j = 360700; j < 360710; j++) _solve(b, j);
for(j = 361540; j < 361550; j++) _solve(b, j);
for(j = 362380; j < 362390; j++) _solve(b, j);
for(j = 363220; j < 363230; j++) _solve(b, j);
for(j = 364060; j < 364070; j++) _solve(b, j);
for(j = 364900; j < 364910; j++) _solve(b, j);
for(j = 365740; j < 365750; j++) _solve(b, j);
for(j = 366580; j < 366590; j++) _solve(b, j);
for(j = 367420; j < 367430; j++) _solve(b, j);
for(j = 368260; j < 368270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 369100; j < 369110; j++) _solve(b, j);
for(j = 369940; j < 369950; j++) _solve(b, j);
for(j = 370780; j < 370790; j++) _solve(b, j);
for(j = 371620; j < 371630; j++) _solve(b, j);
for(j = 372460; j < 372470; j++) _solve(b, j);
for(j = 373300; j < 373310; j++) _solve(b, j);
for(j = 374140; j < 374150; j++) _solve(b, j);
for(j = 374980; j < 374990; j++) _solve(b, j);
for(j = 375820; j < 375830; j++) _solve(b, j);
for(j = 376660; j < 376670; j++) _solve(b, j);
for(j = 377500; j < 377510; j++) _solve(b, j);
for(j = 378340; j < 378350; j++) _solve(b, j);
for(j = 379180; j < 379190; j++) _solve(b, j);
for(j = 380020; j < 380030; j++) _solve(b, j);
for(j = 380860; j < 380870; j++) _solve(b, j);
for(j = 381700; j < 381710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 382540; j < 382550; j++) _solve(b, j);
for(j = 383380; j < 383390; j++) _solve(b, j);
for(j = 384220; j < 384230; j++) _solve(b, j);
for(j = 385060; j < 385070; j++) _solve(b, j);
for(j = 385900; j < 385910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 316190; j < 316200; j++) _solve(b, j);
for(j = 317030; j < 317040; j++) _solve(b, j);
for(j = 317870; j < 317880; j++) _solve(b, j);
for(j = 318710; j < 318720; j++) _solve(b, j);
for(j = 319550; j < 319560; j++) _solve(b, j);
for(j = 320390; j < 320400; j++) _solve(b, j);
for(j = 321230; j < 321240; j++) _solve(b, j);
for(j = 322070; j < 322080; j++) _solve(b, j);
for(j = 322910; j < 322920; j++) _solve(b, j);
for(j = 323750; j < 323760; j++) _solve(b, j);
for(j = 324590; j < 324600; j++) _solve(b, j);
for(j = 325430; j < 325440; j++) _solve(b, j);
for(j = 326270; j < 326280; j++) _solve(b, j);
for(j = 327110; j < 327120; j++) _solve(b, j);
for(j = 327950; j < 327960; j++) _solve(b, j);
for(j = 328790; j < 328800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 329630; j < 329640; j++) _solve(b, j);
for(j = 330470; j < 330480; j++) _solve(b, j);
for(j = 331310; j < 331320; j++) _solve(b, j);
for(j = 332150; j < 332160; j++) _solve(b, j);
for(j = 332990; j < 333000; j++) _solve(b, j);
for(j = 333830; j < 333840; j++) _solve(b, j);
for(j = 334670; j < 334680; j++) _solve(b, j);
for(j = 335510; j < 335520; j++) _solve(b, j);
for(j = 336350; j < 336360; j++) _solve(b, j);
for(j = 337190; j < 337200; j++) _solve(b, j);
for(j = 338030; j < 338040; j++) _solve(b, j);
for(j = 338870; j < 338880; j++) _solve(b, j);
for(j = 339710; j < 339720; j++) _solve(b, j);
for(j = 340550; j < 340560; j++) _solve(b, j);
for(j = 341390; j < 341400; j++) _solve(b, j);
for(j = 342230; j < 342240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 343070; j < 343080; j++) _solve(b, j);
for(j = 343910; j < 343920; j++) _solve(b, j);
for(j = 344750; j < 344760; j++) _solve(b, j);
for(j = 345590; j < 345600; j++) _solve(b, j);
for(j = 346430; j < 346440; j++) _solve(b, j);
for(j = 347270; j < 347280; j++) _solve(b, j);
for(j = 348110; j < 348120; j++) _solve(b, j);
for(j = 348950; j < 348960; j++) _solve(b, j);
for(j = 349790; j < 349800; j++) _solve(b, j);
for(j = 350630; j < 350640; j++) _solve(b, j);
for(j = 351470; j < 351480; j++) _solve(b, j);
for(j = 352310; j < 352320; j++) _solve(b, j);
for(j = 353150; j < 353160; j++) _solve(b, j);
for(j = 353990; j < 354000; j++) _solve(b, j);
for(j = 354830; j < 354840; j++) _solve(b, j);
for(j = 355670; j < 355680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 356510; j < 356520; j++) _solve(b, j);
for(j = 357350; j < 357360; j++) _solve(b, j);
for(j = 358190; j < 358200; j++) _solve(b, j);
for(j = 359030; j < 359040; j++) _solve(b, j);
for(j = 359870; j < 359880; j++) _solve(b, j);
for(j = 360710; j < 360720; j++) _solve(b, j);
for(j = 361550; j < 361560; j++) _solve(b, j);
for(j = 362390; j < 362400; j++) _solve(b, j);
for(j = 363230; j < 363240; j++) _solve(b, j);
for(j = 364070; j < 364080; j++) _solve(b, j);
for(j = 364910; j < 364920; j++) _solve(b, j);
for(j = 365750; j < 365760; j++) _solve(b, j);
for(j = 366590; j < 366600; j++) _solve(b, j);
for(j = 367430; j < 367440; j++) _solve(b, j);
for(j = 368270; j < 368280; j++) _solve(b, j);
for(j = 369110; j < 369120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 369950; j < 369960; j++) _solve(b, j);
for(j = 370790; j < 370800; j++) _solve(b, j);
for(j = 371630; j < 371640; j++) _solve(b, j);
for(j = 372470; j < 372480; j++) _solve(b, j);
for(j = 373310; j < 373320; j++) _solve(b, j);
for(j = 374150; j < 374160; j++) _solve(b, j);
for(j = 374990; j < 375000; j++) _solve(b, j);
for(j = 375830; j < 375840; j++) _solve(b, j);
for(j = 376670; j < 376680; j++) _solve(b, j);
for(j = 377510; j < 377520; j++) _solve(b, j);
for(j = 378350; j < 378360; j++) _solve(b, j);
for(j = 379190; j < 379200; j++) _solve(b, j);
for(j = 380030; j < 380040; j++) _solve(b, j);
for(j = 380870; j < 380880; j++) _solve(b, j);
for(j = 381710; j < 381720; j++) _solve(b, j);
for(j = 382550; j < 382560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 383390; j < 383400; j++) _solve(b, j);
for(j = 384230; j < 384240; j++) _solve(b, j);
for(j = 385070; j < 385080; j++) _solve(b, j);
for(j = 385910; j < 385920; j++) _solve(b, j);
for(j = 386750; j < 386760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 317040; j < 317050; j++) _solve(b, j);
for(j = 317880; j < 317890; j++) _solve(b, j);
for(j = 318720; j < 318730; j++) _solve(b, j);
for(j = 319560; j < 319570; j++) _solve(b, j);
for(j = 320400; j < 320410; j++) _solve(b, j);
for(j = 321240; j < 321250; j++) _solve(b, j);
for(j = 322080; j < 322090; j++) _solve(b, j);
for(j = 322920; j < 322930; j++) _solve(b, j);
for(j = 323760; j < 323770; j++) _solve(b, j);
for(j = 324600; j < 324610; j++) _solve(b, j);
for(j = 325440; j < 325450; j++) _solve(b, j);
for(j = 326280; j < 326290; j++) _solve(b, j);
for(j = 327120; j < 327130; j++) _solve(b, j);
for(j = 327960; j < 327970; j++) _solve(b, j);
for(j = 328800; j < 328810; j++) _solve(b, j);
for(j = 329640; j < 329650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 330480; j < 330490; j++) _solve(b, j);
for(j = 331320; j < 331330; j++) _solve(b, j);
for(j = 332160; j < 332170; j++) _solve(b, j);
for(j = 333000; j < 333010; j++) _solve(b, j);
for(j = 333840; j < 333850; j++) _solve(b, j);
for(j = 334680; j < 334690; j++) _solve(b, j);
for(j = 335520; j < 335530; j++) _solve(b, j);
for(j = 336360; j < 336370; j++) _solve(b, j);
for(j = 337200; j < 337210; j++) _solve(b, j);
for(j = 338040; j < 338050; j++) _solve(b, j);
for(j = 338880; j < 338890; j++) _solve(b, j);
for(j = 339720; j < 339730; j++) _solve(b, j);
for(j = 340560; j < 340570; j++) _solve(b, j);
for(j = 341400; j < 341410; j++) _solve(b, j);
for(j = 342240; j < 342250; j++) _solve(b, j);
for(j = 343080; j < 343090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 343920; j < 343930; j++) _solve(b, j);
for(j = 344760; j < 344770; j++) _solve(b, j);
for(j = 345600; j < 345610; j++) _solve(b, j);
for(j = 346440; j < 346450; j++) _solve(b, j);
for(j = 347280; j < 347290; j++) _solve(b, j);
for(j = 348120; j < 348130; j++) _solve(b, j);
for(j = 348960; j < 348970; j++) _solve(b, j);
for(j = 349800; j < 349810; j++) _solve(b, j);
for(j = 350640; j < 350650; j++) _solve(b, j);
for(j = 351480; j < 351490; j++) _solve(b, j);
for(j = 352320; j < 352330; j++) _solve(b, j);
for(j = 353160; j < 353170; j++) _solve(b, j);
for(j = 354000; j < 354010; j++) _solve(b, j);
for(j = 354840; j < 354850; j++) _solve(b, j);
for(j = 355680; j < 355690; j++) _solve(b, j);
for(j = 356520; j < 356530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 357360; j < 357370; j++) _solve(b, j);
for(j = 358200; j < 358210; j++) _solve(b, j);
for(j = 359040; j < 359050; j++) _solve(b, j);
for(j = 359880; j < 359890; j++) _solve(b, j);
for(j = 360720; j < 360730; j++) _solve(b, j);
for(j = 361560; j < 361570; j++) _solve(b, j);
for(j = 362400; j < 362410; j++) _solve(b, j);
for(j = 363240; j < 363250; j++) _solve(b, j);
for(j = 364080; j < 364090; j++) _solve(b, j);
for(j = 364920; j < 364930; j++) _solve(b, j);
for(j = 365760; j < 365770; j++) _solve(b, j);
for(j = 366600; j < 366610; j++) _solve(b, j);
for(j = 367440; j < 367450; j++) _solve(b, j);
for(j = 368280; j < 368290; j++) _solve(b, j);
for(j = 369120; j < 369130; j++) _solve(b, j);
for(j = 369960; j < 369970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 370800; j < 370810; j++) _solve(b, j);
for(j = 371640; j < 371650; j++) _solve(b, j);
for(j = 372480; j < 372490; j++) _solve(b, j);
for(j = 373320; j < 373330; j++) _solve(b, j);
for(j = 374160; j < 374170; j++) _solve(b, j);
for(j = 375000; j < 375010; j++) _solve(b, j);
for(j = 375840; j < 375850; j++) _solve(b, j);
for(j = 376680; j < 376690; j++) _solve(b, j);
for(j = 377520; j < 377530; j++) _solve(b, j);
for(j = 378360; j < 378370; j++) _solve(b, j);
for(j = 379200; j < 379210; j++) _solve(b, j);
for(j = 380040; j < 380050; j++) _solve(b, j);
for(j = 380880; j < 380890; j++) _solve(b, j);
for(j = 381720; j < 381730; j++) _solve(b, j);
for(j = 382560; j < 382570; j++) _solve(b, j);
for(j = 383400; j < 383410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 384240; j < 384250; j++) _solve(b, j);
for(j = 385080; j < 385090; j++) _solve(b, j);
for(j = 385920; j < 385930; j++) _solve(b, j);
for(j = 386760; j < 386770; j++) _solve(b, j);
for(j = 387600; j < 387610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 317890; j < 317900; j++) _solve(b, j);
for(j = 318730; j < 318740; j++) _solve(b, j);
for(j = 319570; j < 319580; j++) _solve(b, j);
for(j = 320410; j < 320420; j++) _solve(b, j);
for(j = 321250; j < 321260; j++) _solve(b, j);
for(j = 322090; j < 322100; j++) _solve(b, j);
for(j = 322930; j < 322940; j++) _solve(b, j);
for(j = 323770; j < 323780; j++) _solve(b, j);
for(j = 324610; j < 324620; j++) _solve(b, j);
for(j = 325450; j < 325460; j++) _solve(b, j);
for(j = 326290; j < 326300; j++) _solve(b, j);
for(j = 327130; j < 327140; j++) _solve(b, j);
for(j = 327970; j < 327980; j++) _solve(b, j);
for(j = 328810; j < 328820; j++) _solve(b, j);
for(j = 329650; j < 329660; j++) _solve(b, j);
for(j = 330490; j < 330500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 331330; j < 331340; j++) _solve(b, j);
for(j = 332170; j < 332180; j++) _solve(b, j);
for(j = 333010; j < 333020; j++) _solve(b, j);
for(j = 333850; j < 333860; j++) _solve(b, j);
for(j = 334690; j < 334700; j++) _solve(b, j);
for(j = 335530; j < 335540; j++) _solve(b, j);
for(j = 336370; j < 336380; j++) _solve(b, j);
for(j = 337210; j < 337220; j++) _solve(b, j);
for(j = 338050; j < 338060; j++) _solve(b, j);
for(j = 338890; j < 338900; j++) _solve(b, j);
for(j = 339730; j < 339740; j++) _solve(b, j);
for(j = 340570; j < 340580; j++) _solve(b, j);
for(j = 341410; j < 341420; j++) _solve(b, j);
for(j = 342250; j < 342260; j++) _solve(b, j);
for(j = 343090; j < 343100; j++) _solve(b, j);
for(j = 343930; j < 343940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 344770; j < 344780; j++) _solve(b, j);
for(j = 345610; j < 345620; j++) _solve(b, j);
for(j = 346450; j < 346460; j++) _solve(b, j);
for(j = 347290; j < 347300; j++) _solve(b, j);
for(j = 348130; j < 348140; j++) _solve(b, j);
for(j = 348970; j < 348980; j++) _solve(b, j);
for(j = 349810; j < 349820; j++) _solve(b, j);
for(j = 350650; j < 350660; j++) _solve(b, j);
for(j = 351490; j < 351500; j++) _solve(b, j);
for(j = 352330; j < 352340; j++) _solve(b, j);
for(j = 353170; j < 353180; j++) _solve(b, j);
for(j = 354010; j < 354020; j++) _solve(b, j);
for(j = 354850; j < 354860; j++) _solve(b, j);
for(j = 355690; j < 355700; j++) _solve(b, j);
for(j = 356530; j < 356540; j++) _solve(b, j);
for(j = 357370; j < 357380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 358210; j < 358220; j++) _solve(b, j);
for(j = 359050; j < 359060; j++) _solve(b, j);
for(j = 359890; j < 359900; j++) _solve(b, j);
for(j = 360730; j < 360740; j++) _solve(b, j);
for(j = 361570; j < 361580; j++) _solve(b, j);
for(j = 362410; j < 362420; j++) _solve(b, j);
for(j = 363250; j < 363260; j++) _solve(b, j);
for(j = 364090; j < 364100; j++) _solve(b, j);
for(j = 364930; j < 364940; j++) _solve(b, j);
for(j = 365770; j < 365780; j++) _solve(b, j);
for(j = 366610; j < 366620; j++) _solve(b, j);
for(j = 367450; j < 367460; j++) _solve(b, j);
for(j = 368290; j < 368300; j++) _solve(b, j);
for(j = 369130; j < 369140; j++) _solve(b, j);
for(j = 369970; j < 369980; j++) _solve(b, j);
for(j = 370810; j < 370820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 371650; j < 371660; j++) _solve(b, j);
for(j = 372490; j < 372500; j++) _solve(b, j);
for(j = 373330; j < 373340; j++) _solve(b, j);
for(j = 374170; j < 374180; j++) _solve(b, j);
for(j = 375010; j < 375020; j++) _solve(b, j);
for(j = 375850; j < 375860; j++) _solve(b, j);
for(j = 376690; j < 376700; j++) _solve(b, j);
for(j = 377530; j < 377540; j++) _solve(b, j);
for(j = 378370; j < 378380; j++) _solve(b, j);
for(j = 379210; j < 379220; j++) _solve(b, j);
for(j = 380050; j < 380060; j++) _solve(b, j);
for(j = 380890; j < 380900; j++) _solve(b, j);
for(j = 381730; j < 381740; j++) _solve(b, j);
for(j = 382570; j < 382580; j++) _solve(b, j);
for(j = 383410; j < 383420; j++) _solve(b, j);
for(j = 384250; j < 384260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 385090; j < 385100; j++) _solve(b, j);
for(j = 385930; j < 385940; j++) _solve(b, j);
for(j = 386770; j < 386780; j++) _solve(b, j);
for(j = 387610; j < 387620; j++) _solve(b, j);
for(j = 388450; j < 388460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 318740; j < 318750; j++) _solve(b, j);
for(j = 319580; j < 319590; j++) _solve(b, j);
for(j = 320420; j < 320430; j++) _solve(b, j);
for(j = 321260; j < 321270; j++) _solve(b, j);
for(j = 322100; j < 322110; j++) _solve(b, j);
for(j = 322940; j < 322950; j++) _solve(b, j);
for(j = 323780; j < 323790; j++) _solve(b, j);
for(j = 324620; j < 324630; j++) _solve(b, j);
for(j = 325460; j < 325470; j++) _solve(b, j);
for(j = 326300; j < 326310; j++) _solve(b, j);
for(j = 327140; j < 327150; j++) _solve(b, j);
for(j = 327980; j < 327990; j++) _solve(b, j);
for(j = 328820; j < 328830; j++) _solve(b, j);
for(j = 329660; j < 329670; j++) _solve(b, j);
for(j = 330500; j < 330510; j++) _solve(b, j);
for(j = 331340; j < 331350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 332180; j < 332190; j++) _solve(b, j);
for(j = 333020; j < 333030; j++) _solve(b, j);
for(j = 333860; j < 333870; j++) _solve(b, j);
for(j = 334700; j < 334710; j++) _solve(b, j);
for(j = 335540; j < 335550; j++) _solve(b, j);
for(j = 336380; j < 336390; j++) _solve(b, j);
for(j = 337220; j < 337230; j++) _solve(b, j);
for(j = 338060; j < 338070; j++) _solve(b, j);
for(j = 338900; j < 338910; j++) _solve(b, j);
for(j = 339740; j < 339750; j++) _solve(b, j);
for(j = 340580; j < 340590; j++) _solve(b, j);
for(j = 341420; j < 341430; j++) _solve(b, j);
for(j = 342260; j < 342270; j++) _solve(b, j);
for(j = 343100; j < 343110; j++) _solve(b, j);
for(j = 343940; j < 343950; j++) _solve(b, j);
for(j = 344780; j < 344790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 345620; j < 345630; j++) _solve(b, j);
for(j = 346460; j < 346470; j++) _solve(b, j);
for(j = 347300; j < 347310; j++) _solve(b, j);
for(j = 348140; j < 348150; j++) _solve(b, j);
for(j = 348980; j < 348990; j++) _solve(b, j);
for(j = 349820; j < 349830; j++) _solve(b, j);
for(j = 350660; j < 350670; j++) _solve(b, j);
for(j = 351500; j < 351510; j++) _solve(b, j);
for(j = 352340; j < 352350; j++) _solve(b, j);
for(j = 353180; j < 353190; j++) _solve(b, j);
for(j = 354020; j < 354030; j++) _solve(b, j);
for(j = 354860; j < 354870; j++) _solve(b, j);
for(j = 355700; j < 355710; j++) _solve(b, j);
for(j = 356540; j < 356550; j++) _solve(b, j);
for(j = 357380; j < 357390; j++) _solve(b, j);
for(j = 358220; j < 358230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 359060; j < 359070; j++) _solve(b, j);
for(j = 359900; j < 359910; j++) _solve(b, j);
for(j = 360740; j < 360750; j++) _solve(b, j);
for(j = 361580; j < 361590; j++) _solve(b, j);
for(j = 362420; j < 362430; j++) _solve(b, j);
for(j = 363260; j < 363270; j++) _solve(b, j);
for(j = 364100; j < 364110; j++) _solve(b, j);
for(j = 364940; j < 364950; j++) _solve(b, j);
for(j = 365780; j < 365790; j++) _solve(b, j);
for(j = 366620; j < 366630; j++) _solve(b, j);
for(j = 367460; j < 367470; j++) _solve(b, j);
for(j = 368300; j < 368310; j++) _solve(b, j);
for(j = 369140; j < 369150; j++) _solve(b, j);
for(j = 369980; j < 369990; j++) _solve(b, j);
for(j = 370820; j < 370830; j++) _solve(b, j);
for(j = 371660; j < 371670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 372500; j < 372510; j++) _solve(b, j);
for(j = 373340; j < 373350; j++) _solve(b, j);
for(j = 374180; j < 374190; j++) _solve(b, j);
for(j = 375020; j < 375030; j++) _solve(b, j);
for(j = 375860; j < 375870; j++) _solve(b, j);
for(j = 376700; j < 376710; j++) _solve(b, j);
for(j = 377540; j < 377550; j++) _solve(b, j);
for(j = 378380; j < 378390; j++) _solve(b, j);
for(j = 379220; j < 379230; j++) _solve(b, j);
for(j = 380060; j < 380070; j++) _solve(b, j);
for(j = 380900; j < 380910; j++) _solve(b, j);
for(j = 381740; j < 381750; j++) _solve(b, j);
for(j = 382580; j < 382590; j++) _solve(b, j);
for(j = 383420; j < 383430; j++) _solve(b, j);
for(j = 384260; j < 384270; j++) _solve(b, j);
for(j = 385100; j < 385110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 385940; j < 385950; j++) _solve(b, j);
for(j = 386780; j < 386790; j++) _solve(b, j);
for(j = 387620; j < 387630; j++) _solve(b, j);
for(j = 388460; j < 388470; j++) _solve(b, j);
for(j = 389300; j < 389310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 319590; j < 319600; j++) _solve(b, j);
for(j = 320430; j < 320440; j++) _solve(b, j);
for(j = 321270; j < 321280; j++) _solve(b, j);
for(j = 322110; j < 322120; j++) _solve(b, j);
for(j = 322950; j < 322960; j++) _solve(b, j);
for(j = 323790; j < 323800; j++) _solve(b, j);
for(j = 324630; j < 324640; j++) _solve(b, j);
for(j = 325470; j < 325480; j++) _solve(b, j);
for(j = 326310; j < 326320; j++) _solve(b, j);
for(j = 327150; j < 327160; j++) _solve(b, j);
for(j = 327990; j < 328000; j++) _solve(b, j);
for(j = 328830; j < 328840; j++) _solve(b, j);
for(j = 329670; j < 329680; j++) _solve(b, j);
for(j = 330510; j < 330520; j++) _solve(b, j);
for(j = 331350; j < 331360; j++) _solve(b, j);
for(j = 332190; j < 332200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 333030; j < 333040; j++) _solve(b, j);
for(j = 333870; j < 333880; j++) _solve(b, j);
for(j = 334710; j < 334720; j++) _solve(b, j);
for(j = 335550; j < 335560; j++) _solve(b, j);
for(j = 336390; j < 336400; j++) _solve(b, j);
for(j = 337230; j < 337240; j++) _solve(b, j);
for(j = 338070; j < 338080; j++) _solve(b, j);
for(j = 338910; j < 338920; j++) _solve(b, j);
for(j = 339750; j < 339760; j++) _solve(b, j);
for(j = 340590; j < 340600; j++) _solve(b, j);
for(j = 341430; j < 341440; j++) _solve(b, j);
for(j = 342270; j < 342280; j++) _solve(b, j);
for(j = 343110; j < 343120; j++) _solve(b, j);
for(j = 343950; j < 343960; j++) _solve(b, j);
for(j = 344790; j < 344800; j++) _solve(b, j);
for(j = 345630; j < 345640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 346470; j < 346480; j++) _solve(b, j);
for(j = 347310; j < 347320; j++) _solve(b, j);
for(j = 348150; j < 348160; j++) _solve(b, j);
for(j = 348990; j < 349000; j++) _solve(b, j);
for(j = 349830; j < 349840; j++) _solve(b, j);
for(j = 350670; j < 350680; j++) _solve(b, j);
for(j = 351510; j < 351520; j++) _solve(b, j);
for(j = 352350; j < 352360; j++) _solve(b, j);
for(j = 353190; j < 353200; j++) _solve(b, j);
for(j = 354030; j < 354040; j++) _solve(b, j);
for(j = 354870; j < 354880; j++) _solve(b, j);
for(j = 355710; j < 355720; j++) _solve(b, j);
for(j = 356550; j < 356560; j++) _solve(b, j);
for(j = 357390; j < 357400; j++) _solve(b, j);
for(j = 358230; j < 358240; j++) _solve(b, j);
for(j = 359070; j < 359080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 359910; j < 359920; j++) _solve(b, j);
for(j = 360750; j < 360760; j++) _solve(b, j);
for(j = 361590; j < 361600; j++) _solve(b, j);
for(j = 362430; j < 362440; j++) _solve(b, j);
for(j = 363270; j < 363280; j++) _solve(b, j);
for(j = 364110; j < 364120; j++) _solve(b, j);
for(j = 364950; j < 364960; j++) _solve(b, j);
for(j = 365790; j < 365800; j++) _solve(b, j);
for(j = 366630; j < 366640; j++) _solve(b, j);
for(j = 367470; j < 367480; j++) _solve(b, j);
for(j = 368310; j < 368320; j++) _solve(b, j);
for(j = 369150; j < 369160; j++) _solve(b, j);
for(j = 369990; j < 370000; j++) _solve(b, j);
for(j = 370830; j < 370840; j++) _solve(b, j);
for(j = 371670; j < 371680; j++) _solve(b, j);
for(j = 372510; j < 372520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 373350; j < 373360; j++) _solve(b, j);
for(j = 374190; j < 374200; j++) _solve(b, j);
for(j = 375030; j < 375040; j++) _solve(b, j);
for(j = 375870; j < 375880; j++) _solve(b, j);
for(j = 376710; j < 376720; j++) _solve(b, j);
for(j = 377550; j < 377560; j++) _solve(b, j);
for(j = 378390; j < 378400; j++) _solve(b, j);
for(j = 379230; j < 379240; j++) _solve(b, j);
for(j = 380070; j < 380080; j++) _solve(b, j);
for(j = 380910; j < 380920; j++) _solve(b, j);
for(j = 381750; j < 381760; j++) _solve(b, j);
for(j = 382590; j < 382600; j++) _solve(b, j);
for(j = 383430; j < 383440; j++) _solve(b, j);
for(j = 384270; j < 384280; j++) _solve(b, j);
for(j = 385110; j < 385120; j++) _solve(b, j);
for(j = 385950; j < 385960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 386790; j < 386800; j++) _solve(b, j);
for(j = 387630; j < 387640; j++) _solve(b, j);
for(j = 388470; j < 388480; j++) _solve(b, j);
for(j = 389310; j < 389320; j++) _solve(b, j);
for(j = 390150; j < 390160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 320440; j < 320450; j++) _solve(b, j);
for(j = 321280; j < 321290; j++) _solve(b, j);
for(j = 322120; j < 322130; j++) _solve(b, j);
for(j = 322960; j < 322970; j++) _solve(b, j);
for(j = 323800; j < 323810; j++) _solve(b, j);
for(j = 324640; j < 324650; j++) _solve(b, j);
for(j = 325480; j < 325490; j++) _solve(b, j);
for(j = 326320; j < 326330; j++) _solve(b, j);
for(j = 327160; j < 327170; j++) _solve(b, j);
for(j = 328000; j < 328010; j++) _solve(b, j);
for(j = 328840; j < 328850; j++) _solve(b, j);
for(j = 329680; j < 329690; j++) _solve(b, j);
for(j = 330520; j < 330530; j++) _solve(b, j);
for(j = 331360; j < 331370; j++) _solve(b, j);
for(j = 332200; j < 332210; j++) _solve(b, j);
for(j = 333040; j < 333050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 333880; j < 333890; j++) _solve(b, j);
for(j = 334720; j < 334730; j++) _solve(b, j);
for(j = 335560; j < 335570; j++) _solve(b, j);
for(j = 336400; j < 336410; j++) _solve(b, j);
for(j = 337240; j < 337250; j++) _solve(b, j);
for(j = 338080; j < 338090; j++) _solve(b, j);
for(j = 338920; j < 338930; j++) _solve(b, j);
for(j = 339760; j < 339770; j++) _solve(b, j);
for(j = 340600; j < 340610; j++) _solve(b, j);
for(j = 341440; j < 341450; j++) _solve(b, j);
for(j = 342280; j < 342290; j++) _solve(b, j);
for(j = 343120; j < 343130; j++) _solve(b, j);
for(j = 343960; j < 343970; j++) _solve(b, j);
for(j = 344800; j < 344810; j++) _solve(b, j);
for(j = 345640; j < 345650; j++) _solve(b, j);
for(j = 346480; j < 346490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 347320; j < 347330; j++) _solve(b, j);
for(j = 348160; j < 348170; j++) _solve(b, j);
for(j = 349000; j < 349010; j++) _solve(b, j);
for(j = 349840; j < 349850; j++) _solve(b, j);
for(j = 350680; j < 350690; j++) _solve(b, j);
for(j = 351520; j < 351530; j++) _solve(b, j);
for(j = 352360; j < 352370; j++) _solve(b, j);
for(j = 353200; j < 353210; j++) _solve(b, j);
for(j = 354040; j < 354050; j++) _solve(b, j);
for(j = 354880; j < 354890; j++) _solve(b, j);
for(j = 355720; j < 355730; j++) _solve(b, j);
for(j = 356560; j < 356570; j++) _solve(b, j);
for(j = 357400; j < 357410; j++) _solve(b, j);
for(j = 358240; j < 358250; j++) _solve(b, j);
for(j = 359080; j < 359090; j++) _solve(b, j);
for(j = 359920; j < 359930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 360760; j < 360770; j++) _solve(b, j);
for(j = 361600; j < 361610; j++) _solve(b, j);
for(j = 362440; j < 362450; j++) _solve(b, j);
for(j = 363280; j < 363290; j++) _solve(b, j);
for(j = 364120; j < 364130; j++) _solve(b, j);
for(j = 364960; j < 364970; j++) _solve(b, j);
for(j = 365800; j < 365810; j++) _solve(b, j);
for(j = 366640; j < 366650; j++) _solve(b, j);
for(j = 367480; j < 367490; j++) _solve(b, j);
for(j = 368320; j < 368330; j++) _solve(b, j);
for(j = 369160; j < 369170; j++) _solve(b, j);
for(j = 370000; j < 370010; j++) _solve(b, j);
for(j = 370840; j < 370850; j++) _solve(b, j);
for(j = 371680; j < 371690; j++) _solve(b, j);
for(j = 372520; j < 372530; j++) _solve(b, j);
for(j = 373360; j < 373370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 374200; j < 374210; j++) _solve(b, j);
for(j = 375040; j < 375050; j++) _solve(b, j);
for(j = 375880; j < 375890; j++) _solve(b, j);
for(j = 376720; j < 376730; j++) _solve(b, j);
for(j = 377560; j < 377570; j++) _solve(b, j);
for(j = 378400; j < 378410; j++) _solve(b, j);
for(j = 379240; j < 379250; j++) _solve(b, j);
for(j = 380080; j < 380090; j++) _solve(b, j);
for(j = 380920; j < 380930; j++) _solve(b, j);
for(j = 381760; j < 381770; j++) _solve(b, j);
for(j = 382600; j < 382610; j++) _solve(b, j);
for(j = 383440; j < 383450; j++) _solve(b, j);
for(j = 384280; j < 384290; j++) _solve(b, j);
for(j = 385120; j < 385130; j++) _solve(b, j);
for(j = 385960; j < 385970; j++) _solve(b, j);
for(j = 386800; j < 386810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 387640; j < 387650; j++) _solve(b, j);
for(j = 388480; j < 388490; j++) _solve(b, j);
for(j = 389320; j < 389330; j++) _solve(b, j);
for(j = 390160; j < 390170; j++) _solve(b, j);
for(j = 391000; j < 391010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 321290; j < 321300; j++) _solve(b, j);
for(j = 322130; j < 322140; j++) _solve(b, j);
for(j = 322970; j < 322980; j++) _solve(b, j);
for(j = 323810; j < 323820; j++) _solve(b, j);
for(j = 324650; j < 324660; j++) _solve(b, j);
for(j = 325490; j < 325500; j++) _solve(b, j);
for(j = 326330; j < 326340; j++) _solve(b, j);
for(j = 327170; j < 327180; j++) _solve(b, j);
for(j = 328010; j < 328020; j++) _solve(b, j);
for(j = 328850; j < 328860; j++) _solve(b, j);
for(j = 329690; j < 329700; j++) _solve(b, j);
for(j = 330530; j < 330540; j++) _solve(b, j);
for(j = 331370; j < 331380; j++) _solve(b, j);
for(j = 332210; j < 332220; j++) _solve(b, j);
for(j = 333050; j < 333060; j++) _solve(b, j);
for(j = 333890; j < 333900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 334730; j < 334740; j++) _solve(b, j);
for(j = 335570; j < 335580; j++) _solve(b, j);
for(j = 336410; j < 336420; j++) _solve(b, j);
for(j = 337250; j < 337260; j++) _solve(b, j);
for(j = 338090; j < 338100; j++) _solve(b, j);
for(j = 338930; j < 338940; j++) _solve(b, j);
for(j = 339770; j < 339780; j++) _solve(b, j);
for(j = 340610; j < 340620; j++) _solve(b, j);
for(j = 341450; j < 341460; j++) _solve(b, j);
for(j = 342290; j < 342300; j++) _solve(b, j);
for(j = 343130; j < 343140; j++) _solve(b, j);
for(j = 343970; j < 343980; j++) _solve(b, j);
for(j = 344810; j < 344820; j++) _solve(b, j);
for(j = 345650; j < 345660; j++) _solve(b, j);
for(j = 346490; j < 346500; j++) _solve(b, j);
for(j = 347330; j < 347340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 348170; j < 348180; j++) _solve(b, j);
for(j = 349010; j < 349020; j++) _solve(b, j);
for(j = 349850; j < 349860; j++) _solve(b, j);
for(j = 350690; j < 350700; j++) _solve(b, j);
for(j = 351530; j < 351540; j++) _solve(b, j);
for(j = 352370; j < 352380; j++) _solve(b, j);
for(j = 353210; j < 353220; j++) _solve(b, j);
for(j = 354050; j < 354060; j++) _solve(b, j);
for(j = 354890; j < 354900; j++) _solve(b, j);
for(j = 355730; j < 355740; j++) _solve(b, j);
for(j = 356570; j < 356580; j++) _solve(b, j);
for(j = 357410; j < 357420; j++) _solve(b, j);
for(j = 358250; j < 358260; j++) _solve(b, j);
for(j = 359090; j < 359100; j++) _solve(b, j);
for(j = 359930; j < 359940; j++) _solve(b, j);
for(j = 360770; j < 360780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 361610; j < 361620; j++) _solve(b, j);
for(j = 362450; j < 362460; j++) _solve(b, j);
for(j = 363290; j < 363300; j++) _solve(b, j);
for(j = 364130; j < 364140; j++) _solve(b, j);
for(j = 364970; j < 364980; j++) _solve(b, j);
for(j = 365810; j < 365820; j++) _solve(b, j);
for(j = 366650; j < 366660; j++) _solve(b, j);
for(j = 367490; j < 367500; j++) _solve(b, j);
for(j = 368330; j < 368340; j++) _solve(b, j);
for(j = 369170; j < 369180; j++) _solve(b, j);
for(j = 370010; j < 370020; j++) _solve(b, j);
for(j = 370850; j < 370860; j++) _solve(b, j);
for(j = 371690; j < 371700; j++) _solve(b, j);
for(j = 372530; j < 372540; j++) _solve(b, j);
for(j = 373370; j < 373380; j++) _solve(b, j);
for(j = 374210; j < 374220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 375050; j < 375060; j++) _solve(b, j);
for(j = 375890; j < 375900; j++) _solve(b, j);
for(j = 376730; j < 376740; j++) _solve(b, j);
for(j = 377570; j < 377580; j++) _solve(b, j);
for(j = 378410; j < 378420; j++) _solve(b, j);
for(j = 379250; j < 379260; j++) _solve(b, j);
for(j = 380090; j < 380100; j++) _solve(b, j);
for(j = 380930; j < 380940; j++) _solve(b, j);
for(j = 381770; j < 381780; j++) _solve(b, j);
for(j = 382610; j < 382620; j++) _solve(b, j);
for(j = 383450; j < 383460; j++) _solve(b, j);
for(j = 384290; j < 384300; j++) _solve(b, j);
for(j = 385130; j < 385140; j++) _solve(b, j);
for(j = 385970; j < 385980; j++) _solve(b, j);
for(j = 386810; j < 386820; j++) _solve(b, j);
for(j = 387650; j < 387660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 388490; j < 388500; j++) _solve(b, j);
for(j = 389330; j < 389340; j++) _solve(b, j);
for(j = 390170; j < 390180; j++) _solve(b, j);
for(j = 391010; j < 391020; j++) _solve(b, j);
for(j = 391850; j < 391860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 322140; j < 322150; j++) _solve(b, j);
for(j = 322980; j < 322990; j++) _solve(b, j);
for(j = 323820; j < 323830; j++) _solve(b, j);
for(j = 324660; j < 324670; j++) _solve(b, j);
for(j = 325500; j < 325510; j++) _solve(b, j);
for(j = 326340; j < 326350; j++) _solve(b, j);
for(j = 327180; j < 327190; j++) _solve(b, j);
for(j = 328020; j < 328030; j++) _solve(b, j);
for(j = 328860; j < 328870; j++) _solve(b, j);
for(j = 329700; j < 329710; j++) _solve(b, j);
for(j = 330540; j < 330550; j++) _solve(b, j);
for(j = 331380; j < 331390; j++) _solve(b, j);
for(j = 332220; j < 332230; j++) _solve(b, j);
for(j = 333060; j < 333070; j++) _solve(b, j);
for(j = 333900; j < 333910; j++) _solve(b, j);
for(j = 334740; j < 334750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 335580; j < 335590; j++) _solve(b, j);
for(j = 336420; j < 336430; j++) _solve(b, j);
for(j = 337260; j < 337270; j++) _solve(b, j);
for(j = 338100; j < 338110; j++) _solve(b, j);
for(j = 338940; j < 338950; j++) _solve(b, j);
for(j = 339780; j < 339790; j++) _solve(b, j);
for(j = 340620; j < 340630; j++) _solve(b, j);
for(j = 341460; j < 341470; j++) _solve(b, j);
for(j = 342300; j < 342310; j++) _solve(b, j);
for(j = 343140; j < 343150; j++) _solve(b, j);
for(j = 343980; j < 343990; j++) _solve(b, j);
for(j = 344820; j < 344830; j++) _solve(b, j);
for(j = 345660; j < 345670; j++) _solve(b, j);
for(j = 346500; j < 346510; j++) _solve(b, j);
for(j = 347340; j < 347350; j++) _solve(b, j);
for(j = 348180; j < 348190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 349020; j < 349030; j++) _solve(b, j);
for(j = 349860; j < 349870; j++) _solve(b, j);
for(j = 350700; j < 350710; j++) _solve(b, j);
for(j = 351540; j < 351550; j++) _solve(b, j);
for(j = 352380; j < 352390; j++) _solve(b, j);
for(j = 353220; j < 353230; j++) _solve(b, j);
for(j = 354060; j < 354070; j++) _solve(b, j);
for(j = 354900; j < 354910; j++) _solve(b, j);
for(j = 355740; j < 355750; j++) _solve(b, j);
for(j = 356580; j < 356590; j++) _solve(b, j);
for(j = 357420; j < 357430; j++) _solve(b, j);
for(j = 358260; j < 358270; j++) _solve(b, j);
for(j = 359100; j < 359110; j++) _solve(b, j);
for(j = 359940; j < 359950; j++) _solve(b, j);
for(j = 360780; j < 360790; j++) _solve(b, j);
for(j = 361620; j < 361630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 362460; j < 362470; j++) _solve(b, j);
for(j = 363300; j < 363310; j++) _solve(b, j);
for(j = 364140; j < 364150; j++) _solve(b, j);
for(j = 364980; j < 364990; j++) _solve(b, j);
for(j = 365820; j < 365830; j++) _solve(b, j);
for(j = 366660; j < 366670; j++) _solve(b, j);
for(j = 367500; j < 367510; j++) _solve(b, j);
for(j = 368340; j < 368350; j++) _solve(b, j);
for(j = 369180; j < 369190; j++) _solve(b, j);
for(j = 370020; j < 370030; j++) _solve(b, j);
for(j = 370860; j < 370870; j++) _solve(b, j);
for(j = 371700; j < 371710; j++) _solve(b, j);
for(j = 372540; j < 372550; j++) _solve(b, j);
for(j = 373380; j < 373390; j++) _solve(b, j);
for(j = 374220; j < 374230; j++) _solve(b, j);
for(j = 375060; j < 375070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 375900; j < 375910; j++) _solve(b, j);
for(j = 376740; j < 376750; j++) _solve(b, j);
for(j = 377580; j < 377590; j++) _solve(b, j);
for(j = 378420; j < 378430; j++) _solve(b, j);
for(j = 379260; j < 379270; j++) _solve(b, j);
for(j = 380100; j < 380110; j++) _solve(b, j);
for(j = 380940; j < 380950; j++) _solve(b, j);
for(j = 381780; j < 381790; j++) _solve(b, j);
for(j = 382620; j < 382630; j++) _solve(b, j);
for(j = 383460; j < 383470; j++) _solve(b, j);
for(j = 384300; j < 384310; j++) _solve(b, j);
for(j = 385140; j < 385150; j++) _solve(b, j);
for(j = 385980; j < 385990; j++) _solve(b, j);
for(j = 386820; j < 386830; j++) _solve(b, j);
for(j = 387660; j < 387670; j++) _solve(b, j);
for(j = 388500; j < 388510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 389340; j < 389350; j++) _solve(b, j);
for(j = 390180; j < 390190; j++) _solve(b, j);
for(j = 391020; j < 391030; j++) _solve(b, j);
for(j = 391860; j < 391870; j++) _solve(b, j);
for(j = 392700; j < 392710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 322990; j < 323000; j++) _solve(b, j);
for(j = 323830; j < 323840; j++) _solve(b, j);
for(j = 324670; j < 324680; j++) _solve(b, j);
for(j = 325510; j < 325520; j++) _solve(b, j);
for(j = 326350; j < 326360; j++) _solve(b, j);
for(j = 327190; j < 327200; j++) _solve(b, j);
for(j = 328030; j < 328040; j++) _solve(b, j);
for(j = 328870; j < 328880; j++) _solve(b, j);
for(j = 329710; j < 329720; j++) _solve(b, j);
for(j = 330550; j < 330560; j++) _solve(b, j);
for(j = 331390; j < 331400; j++) _solve(b, j);
for(j = 332230; j < 332240; j++) _solve(b, j);
for(j = 333070; j < 333080; j++) _solve(b, j);
for(j = 333910; j < 333920; j++) _solve(b, j);
for(j = 334750; j < 334760; j++) _solve(b, j);
for(j = 335590; j < 335600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 336430; j < 336440; j++) _solve(b, j);
for(j = 337270; j < 337280; j++) _solve(b, j);
for(j = 338110; j < 338120; j++) _solve(b, j);
for(j = 338950; j < 338960; j++) _solve(b, j);
for(j = 339790; j < 339800; j++) _solve(b, j);
for(j = 340630; j < 340640; j++) _solve(b, j);
for(j = 341470; j < 341480; j++) _solve(b, j);
for(j = 342310; j < 342320; j++) _solve(b, j);
for(j = 343150; j < 343160; j++) _solve(b, j);
for(j = 343990; j < 344000; j++) _solve(b, j);
for(j = 344830; j < 344840; j++) _solve(b, j);
for(j = 345670; j < 345680; j++) _solve(b, j);
for(j = 346510; j < 346520; j++) _solve(b, j);
for(j = 347350; j < 347360; j++) _solve(b, j);
for(j = 348190; j < 348200; j++) _solve(b, j);
for(j = 349030; j < 349040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 349870; j < 349880; j++) _solve(b, j);
for(j = 350710; j < 350720; j++) _solve(b, j);
for(j = 351550; j < 351560; j++) _solve(b, j);
for(j = 352390; j < 352400; j++) _solve(b, j);
for(j = 353230; j < 353240; j++) _solve(b, j);
for(j = 354070; j < 354080; j++) _solve(b, j);
for(j = 354910; j < 354920; j++) _solve(b, j);
for(j = 355750; j < 355760; j++) _solve(b, j);
for(j = 356590; j < 356600; j++) _solve(b, j);
for(j = 357430; j < 357440; j++) _solve(b, j);
for(j = 358270; j < 358280; j++) _solve(b, j);
for(j = 359110; j < 359120; j++) _solve(b, j);
for(j = 359950; j < 359960; j++) _solve(b, j);
for(j = 360790; j < 360800; j++) _solve(b, j);
for(j = 361630; j < 361640; j++) _solve(b, j);
for(j = 362470; j < 362480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 363310; j < 363320; j++) _solve(b, j);
for(j = 364150; j < 364160; j++) _solve(b, j);
for(j = 364990; j < 365000; j++) _solve(b, j);
for(j = 365830; j < 365840; j++) _solve(b, j);
for(j = 366670; j < 366680; j++) _solve(b, j);
for(j = 367510; j < 367520; j++) _solve(b, j);
for(j = 368350; j < 368360; j++) _solve(b, j);
for(j = 369190; j < 369200; j++) _solve(b, j);
for(j = 370030; j < 370040; j++) _solve(b, j);
for(j = 370870; j < 370880; j++) _solve(b, j);
for(j = 371710; j < 371720; j++) _solve(b, j);
for(j = 372550; j < 372560; j++) _solve(b, j);
for(j = 373390; j < 373400; j++) _solve(b, j);
for(j = 374230; j < 374240; j++) _solve(b, j);
for(j = 375070; j < 375080; j++) _solve(b, j);
for(j = 375910; j < 375920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 376750; j < 376760; j++) _solve(b, j);
for(j = 377590; j < 377600; j++) _solve(b, j);
for(j = 378430; j < 378440; j++) _solve(b, j);
for(j = 379270; j < 379280; j++) _solve(b, j);
for(j = 380110; j < 380120; j++) _solve(b, j);
for(j = 380950; j < 380960; j++) _solve(b, j);
for(j = 381790; j < 381800; j++) _solve(b, j);
for(j = 382630; j < 382640; j++) _solve(b, j);
for(j = 383470; j < 383480; j++) _solve(b, j);
for(j = 384310; j < 384320; j++) _solve(b, j);
for(j = 385150; j < 385160; j++) _solve(b, j);
for(j = 385990; j < 386000; j++) _solve(b, j);
for(j = 386830; j < 386840; j++) _solve(b, j);
for(j = 387670; j < 387680; j++) _solve(b, j);
for(j = 388510; j < 388520; j++) _solve(b, j);
for(j = 389350; j < 389360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 390190; j < 390200; j++) _solve(b, j);
for(j = 391030; j < 391040; j++) _solve(b, j);
for(j = 391870; j < 391880; j++) _solve(b, j);
for(j = 392710; j < 392720; j++) _solve(b, j);
for(j = 393550; j < 393560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 323840; j < 323850; j++) _solve(b, j);
for(j = 324680; j < 324690; j++) _solve(b, j);
for(j = 325520; j < 325530; j++) _solve(b, j);
for(j = 326360; j < 326370; j++) _solve(b, j);
for(j = 327200; j < 327210; j++) _solve(b, j);
for(j = 328040; j < 328050; j++) _solve(b, j);
for(j = 328880; j < 328890; j++) _solve(b, j);
for(j = 329720; j < 329730; j++) _solve(b, j);
for(j = 330560; j < 330570; j++) _solve(b, j);
for(j = 331400; j < 331410; j++) _solve(b, j);
for(j = 332240; j < 332250; j++) _solve(b, j);
for(j = 333080; j < 333090; j++) _solve(b, j);
for(j = 333920; j < 333930; j++) _solve(b, j);
for(j = 334760; j < 334770; j++) _solve(b, j);
for(j = 335600; j < 335610; j++) _solve(b, j);
for(j = 336440; j < 336450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 337280; j < 337290; j++) _solve(b, j);
for(j = 338120; j < 338130; j++) _solve(b, j);
for(j = 338960; j < 338970; j++) _solve(b, j);
for(j = 339800; j < 339810; j++) _solve(b, j);
for(j = 340640; j < 340650; j++) _solve(b, j);
for(j = 341480; j < 341490; j++) _solve(b, j);
for(j = 342320; j < 342330; j++) _solve(b, j);
for(j = 343160; j < 343170; j++) _solve(b, j);
for(j = 344000; j < 344010; j++) _solve(b, j);
for(j = 344840; j < 344850; j++) _solve(b, j);
for(j = 345680; j < 345690; j++) _solve(b, j);
for(j = 346520; j < 346530; j++) _solve(b, j);
for(j = 347360; j < 347370; j++) _solve(b, j);
for(j = 348200; j < 348210; j++) _solve(b, j);
for(j = 349040; j < 349050; j++) _solve(b, j);
for(j = 349880; j < 349890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 350720; j < 350730; j++) _solve(b, j);
for(j = 351560; j < 351570; j++) _solve(b, j);
for(j = 352400; j < 352410; j++) _solve(b, j);
for(j = 353240; j < 353250; j++) _solve(b, j);
for(j = 354080; j < 354090; j++) _solve(b, j);
for(j = 354920; j < 354930; j++) _solve(b, j);
for(j = 355760; j < 355770; j++) _solve(b, j);
for(j = 356600; j < 356610; j++) _solve(b, j);
for(j = 357440; j < 357450; j++) _solve(b, j);
for(j = 358280; j < 358290; j++) _solve(b, j);
for(j = 359120; j < 359130; j++) _solve(b, j);
for(j = 359960; j < 359970; j++) _solve(b, j);
for(j = 360800; j < 360810; j++) _solve(b, j);
for(j = 361640; j < 361650; j++) _solve(b, j);
for(j = 362480; j < 362490; j++) _solve(b, j);
for(j = 363320; j < 363330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 364160; j < 364170; j++) _solve(b, j);
for(j = 365000; j < 365010; j++) _solve(b, j);
for(j = 365840; j < 365850; j++) _solve(b, j);
for(j = 366680; j < 366690; j++) _solve(b, j);
for(j = 367520; j < 367530; j++) _solve(b, j);
for(j = 368360; j < 368370; j++) _solve(b, j);
for(j = 369200; j < 369210; j++) _solve(b, j);
for(j = 370040; j < 370050; j++) _solve(b, j);
for(j = 370880; j < 370890; j++) _solve(b, j);
for(j = 371720; j < 371730; j++) _solve(b, j);
for(j = 372560; j < 372570; j++) _solve(b, j);
for(j = 373400; j < 373410; j++) _solve(b, j);
for(j = 374240; j < 374250; j++) _solve(b, j);
for(j = 375080; j < 375090; j++) _solve(b, j);
for(j = 375920; j < 375930; j++) _solve(b, j);
for(j = 376760; j < 376770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 377600; j < 377610; j++) _solve(b, j);
for(j = 378440; j < 378450; j++) _solve(b, j);
for(j = 379280; j < 379290; j++) _solve(b, j);
for(j = 380120; j < 380130; j++) _solve(b, j);
for(j = 380960; j < 380970; j++) _solve(b, j);
for(j = 381800; j < 381810; j++) _solve(b, j);
for(j = 382640; j < 382650; j++) _solve(b, j);
for(j = 383480; j < 383490; j++) _solve(b, j);
for(j = 384320; j < 384330; j++) _solve(b, j);
for(j = 385160; j < 385170; j++) _solve(b, j);
for(j = 386000; j < 386010; j++) _solve(b, j);
for(j = 386840; j < 386850; j++) _solve(b, j);
for(j = 387680; j < 387690; j++) _solve(b, j);
for(j = 388520; j < 388530; j++) _solve(b, j);
for(j = 389360; j < 389370; j++) _solve(b, j);
for(j = 390200; j < 390210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 391040; j < 391050; j++) _solve(b, j);
for(j = 391880; j < 391890; j++) _solve(b, j);
for(j = 392720; j < 392730; j++) _solve(b, j);
for(j = 393560; j < 393570; j++) _solve(b, j);
for(j = 394400; j < 394410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 324690; j < 324700; j++) _solve(b, j);
for(j = 325530; j < 325540; j++) _solve(b, j);
for(j = 326370; j < 326380; j++) _solve(b, j);
for(j = 327210; j < 327220; j++) _solve(b, j);
for(j = 328050; j < 328060; j++) _solve(b, j);
for(j = 328890; j < 328900; j++) _solve(b, j);
for(j = 329730; j < 329740; j++) _solve(b, j);
for(j = 330570; j < 330580; j++) _solve(b, j);
for(j = 331410; j < 331420; j++) _solve(b, j);
for(j = 332250; j < 332260; j++) _solve(b, j);
for(j = 333090; j < 333100; j++) _solve(b, j);
for(j = 333930; j < 333940; j++) _solve(b, j);
for(j = 334770; j < 334780; j++) _solve(b, j);
for(j = 335610; j < 335620; j++) _solve(b, j);
for(j = 336450; j < 336460; j++) _solve(b, j);
for(j = 337290; j < 337300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 338130; j < 338140; j++) _solve(b, j);
for(j = 338970; j < 338980; j++) _solve(b, j);
for(j = 339810; j < 339820; j++) _solve(b, j);
for(j = 340650; j < 340660; j++) _solve(b, j);
for(j = 341490; j < 341500; j++) _solve(b, j);
for(j = 342330; j < 342340; j++) _solve(b, j);
for(j = 343170; j < 343180; j++) _solve(b, j);
for(j = 344010; j < 344020; j++) _solve(b, j);
for(j = 344850; j < 344860; j++) _solve(b, j);
for(j = 345690; j < 345700; j++) _solve(b, j);
for(j = 346530; j < 346540; j++) _solve(b, j);
for(j = 347370; j < 347380; j++) _solve(b, j);
for(j = 348210; j < 348220; j++) _solve(b, j);
for(j = 349050; j < 349060; j++) _solve(b, j);
for(j = 349890; j < 349900; j++) _solve(b, j);
for(j = 350730; j < 350740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 351570; j < 351580; j++) _solve(b, j);
for(j = 352410; j < 352420; j++) _solve(b, j);
for(j = 353250; j < 353260; j++) _solve(b, j);
for(j = 354090; j < 354100; j++) _solve(b, j);
for(j = 354930; j < 354940; j++) _solve(b, j);
for(j = 355770; j < 355780; j++) _solve(b, j);
for(j = 356610; j < 356620; j++) _solve(b, j);
for(j = 357450; j < 357460; j++) _solve(b, j);
for(j = 358290; j < 358300; j++) _solve(b, j);
for(j = 359130; j < 359140; j++) _solve(b, j);
for(j = 359970; j < 359980; j++) _solve(b, j);
for(j = 360810; j < 360820; j++) _solve(b, j);
for(j = 361650; j < 361660; j++) _solve(b, j);
for(j = 362490; j < 362500; j++) _solve(b, j);
for(j = 363330; j < 363340; j++) _solve(b, j);
for(j = 364170; j < 364180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 365010; j < 365020; j++) _solve(b, j);
for(j = 365850; j < 365860; j++) _solve(b, j);
for(j = 366690; j < 366700; j++) _solve(b, j);
for(j = 367530; j < 367540; j++) _solve(b, j);
for(j = 368370; j < 368380; j++) _solve(b, j);
for(j = 369210; j < 369220; j++) _solve(b, j);
for(j = 370050; j < 370060; j++) _solve(b, j);
for(j = 370890; j < 370900; j++) _solve(b, j);
for(j = 371730; j < 371740; j++) _solve(b, j);
for(j = 372570; j < 372580; j++) _solve(b, j);
for(j = 373410; j < 373420; j++) _solve(b, j);
for(j = 374250; j < 374260; j++) _solve(b, j);
for(j = 375090; j < 375100; j++) _solve(b, j);
for(j = 375930; j < 375940; j++) _solve(b, j);
for(j = 376770; j < 376780; j++) _solve(b, j);
for(j = 377610; j < 377620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 378450; j < 378460; j++) _solve(b, j);
for(j = 379290; j < 379300; j++) _solve(b, j);
for(j = 380130; j < 380140; j++) _solve(b, j);
for(j = 380970; j < 380980; j++) _solve(b, j);
for(j = 381810; j < 381820; j++) _solve(b, j);
for(j = 382650; j < 382660; j++) _solve(b, j);
for(j = 383490; j < 383500; j++) _solve(b, j);
for(j = 384330; j < 384340; j++) _solve(b, j);
for(j = 385170; j < 385180; j++) _solve(b, j);
for(j = 386010; j < 386020; j++) _solve(b, j);
for(j = 386850; j < 386860; j++) _solve(b, j);
for(j = 387690; j < 387700; j++) _solve(b, j);
for(j = 388530; j < 388540; j++) _solve(b, j);
for(j = 389370; j < 389380; j++) _solve(b, j);
for(j = 390210; j < 390220; j++) _solve(b, j);
for(j = 391050; j < 391060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 391890; j < 391900; j++) _solve(b, j);
for(j = 392730; j < 392740; j++) _solve(b, j);
for(j = 393570; j < 393580; j++) _solve(b, j);
for(j = 394410; j < 394420; j++) _solve(b, j);
for(j = 395250; j < 395260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 325540; j < 325550; j++) _solve(b, j);
for(j = 326380; j < 326390; j++) _solve(b, j);
for(j = 327220; j < 327230; j++) _solve(b, j);
for(j = 328060; j < 328070; j++) _solve(b, j);
for(j = 328900; j < 328910; j++) _solve(b, j);
for(j = 329740; j < 329750; j++) _solve(b, j);
for(j = 330580; j < 330590; j++) _solve(b, j);
for(j = 331420; j < 331430; j++) _solve(b, j);
for(j = 332260; j < 332270; j++) _solve(b, j);
for(j = 333100; j < 333110; j++) _solve(b, j);
for(j = 333940; j < 333950; j++) _solve(b, j);
for(j = 334780; j < 334790; j++) _solve(b, j);
for(j = 335620; j < 335630; j++) _solve(b, j);
for(j = 336460; j < 336470; j++) _solve(b, j);
for(j = 337300; j < 337310; j++) _solve(b, j);
for(j = 338140; j < 338150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 338980; j < 338990; j++) _solve(b, j);
for(j = 339820; j < 339830; j++) _solve(b, j);
for(j = 340660; j < 340670; j++) _solve(b, j);
for(j = 341500; j < 341510; j++) _solve(b, j);
for(j = 342340; j < 342350; j++) _solve(b, j);
for(j = 343180; j < 343190; j++) _solve(b, j);
for(j = 344020; j < 344030; j++) _solve(b, j);
for(j = 344860; j < 344870; j++) _solve(b, j);
for(j = 345700; j < 345710; j++) _solve(b, j);
for(j = 346540; j < 346550; j++) _solve(b, j);
for(j = 347380; j < 347390; j++) _solve(b, j);
for(j = 348220; j < 348230; j++) _solve(b, j);
for(j = 349060; j < 349070; j++) _solve(b, j);
for(j = 349900; j < 349910; j++) _solve(b, j);
for(j = 350740; j < 350750; j++) _solve(b, j);
for(j = 351580; j < 351590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 352420; j < 352430; j++) _solve(b, j);
for(j = 353260; j < 353270; j++) _solve(b, j);
for(j = 354100; j < 354110; j++) _solve(b, j);
for(j = 354940; j < 354950; j++) _solve(b, j);
for(j = 355780; j < 355790; j++) _solve(b, j);
for(j = 356620; j < 356630; j++) _solve(b, j);
for(j = 357460; j < 357470; j++) _solve(b, j);
for(j = 358300; j < 358310; j++) _solve(b, j);
for(j = 359140; j < 359150; j++) _solve(b, j);
for(j = 359980; j < 359990; j++) _solve(b, j);
for(j = 360820; j < 360830; j++) _solve(b, j);
for(j = 361660; j < 361670; j++) _solve(b, j);
for(j = 362500; j < 362510; j++) _solve(b, j);
for(j = 363340; j < 363350; j++) _solve(b, j);
for(j = 364180; j < 364190; j++) _solve(b, j);
for(j = 365020; j < 365030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 365860; j < 365870; j++) _solve(b, j);
for(j = 366700; j < 366710; j++) _solve(b, j);
for(j = 367540; j < 367550; j++) _solve(b, j);
for(j = 368380; j < 368390; j++) _solve(b, j);
for(j = 369220; j < 369230; j++) _solve(b, j);
for(j = 370060; j < 370070; j++) _solve(b, j);
for(j = 370900; j < 370910; j++) _solve(b, j);
for(j = 371740; j < 371750; j++) _solve(b, j);
for(j = 372580; j < 372590; j++) _solve(b, j);
for(j = 373420; j < 373430; j++) _solve(b, j);
for(j = 374260; j < 374270; j++) _solve(b, j);
for(j = 375100; j < 375110; j++) _solve(b, j);
for(j = 375940; j < 375950; j++) _solve(b, j);
for(j = 376780; j < 376790; j++) _solve(b, j);
for(j = 377620; j < 377630; j++) _solve(b, j);
for(j = 378460; j < 378470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 379300; j < 379310; j++) _solve(b, j);
for(j = 380140; j < 380150; j++) _solve(b, j);
for(j = 380980; j < 380990; j++) _solve(b, j);
for(j = 381820; j < 381830; j++) _solve(b, j);
for(j = 382660; j < 382670; j++) _solve(b, j);
for(j = 383500; j < 383510; j++) _solve(b, j);
for(j = 384340; j < 384350; j++) _solve(b, j);
for(j = 385180; j < 385190; j++) _solve(b, j);
for(j = 386020; j < 386030; j++) _solve(b, j);
for(j = 386860; j < 386870; j++) _solve(b, j);
for(j = 387700; j < 387710; j++) _solve(b, j);
for(j = 388540; j < 388550; j++) _solve(b, j);
for(j = 389380; j < 389390; j++) _solve(b, j);
for(j = 390220; j < 390230; j++) _solve(b, j);
for(j = 391060; j < 391070; j++) _solve(b, j);
for(j = 391900; j < 391910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 392740; j < 392750; j++) _solve(b, j);
for(j = 393580; j < 393590; j++) _solve(b, j);
for(j = 394420; j < 394430; j++) _solve(b, j);
for(j = 395260; j < 395270; j++) _solve(b, j);
for(j = 396100; j < 396110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 326390; j < 326400; j++) _solve(b, j);
for(j = 327230; j < 327240; j++) _solve(b, j);
for(j = 328070; j < 328080; j++) _solve(b, j);
for(j = 328910; j < 328920; j++) _solve(b, j);
for(j = 329750; j < 329760; j++) _solve(b, j);
for(j = 330590; j < 330600; j++) _solve(b, j);
for(j = 331430; j < 331440; j++) _solve(b, j);
for(j = 332270; j < 332280; j++) _solve(b, j);
for(j = 333110; j < 333120; j++) _solve(b, j);
for(j = 333950; j < 333960; j++) _solve(b, j);
for(j = 334790; j < 334800; j++) _solve(b, j);
for(j = 335630; j < 335640; j++) _solve(b, j);
for(j = 336470; j < 336480; j++) _solve(b, j);
for(j = 337310; j < 337320; j++) _solve(b, j);
for(j = 338150; j < 338160; j++) _solve(b, j);
for(j = 338990; j < 339000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 339830; j < 339840; j++) _solve(b, j);
for(j = 340670; j < 340680; j++) _solve(b, j);
for(j = 341510; j < 341520; j++) _solve(b, j);
for(j = 342350; j < 342360; j++) _solve(b, j);
for(j = 343190; j < 343200; j++) _solve(b, j);
for(j = 344030; j < 344040; j++) _solve(b, j);
for(j = 344870; j < 344880; j++) _solve(b, j);
for(j = 345710; j < 345720; j++) _solve(b, j);
for(j = 346550; j < 346560; j++) _solve(b, j);
for(j = 347390; j < 347400; j++) _solve(b, j);
for(j = 348230; j < 348240; j++) _solve(b, j);
for(j = 349070; j < 349080; j++) _solve(b, j);
for(j = 349910; j < 349920; j++) _solve(b, j);
for(j = 350750; j < 350760; j++) _solve(b, j);
for(j = 351590; j < 351600; j++) _solve(b, j);
for(j = 352430; j < 352440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 353270; j < 353280; j++) _solve(b, j);
for(j = 354110; j < 354120; j++) _solve(b, j);
for(j = 354950; j < 354960; j++) _solve(b, j);
for(j = 355790; j < 355800; j++) _solve(b, j);
for(j = 356630; j < 356640; j++) _solve(b, j);
for(j = 357470; j < 357480; j++) _solve(b, j);
for(j = 358310; j < 358320; j++) _solve(b, j);
for(j = 359150; j < 359160; j++) _solve(b, j);
for(j = 359990; j < 360000; j++) _solve(b, j);
for(j = 360830; j < 360840; j++) _solve(b, j);
for(j = 361670; j < 361680; j++) _solve(b, j);
for(j = 362510; j < 362520; j++) _solve(b, j);
for(j = 363350; j < 363360; j++) _solve(b, j);
for(j = 364190; j < 364200; j++) _solve(b, j);
for(j = 365030; j < 365040; j++) _solve(b, j);
for(j = 365870; j < 365880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 366710; j < 366720; j++) _solve(b, j);
for(j = 367550; j < 367560; j++) _solve(b, j);
for(j = 368390; j < 368400; j++) _solve(b, j);
for(j = 369230; j < 369240; j++) _solve(b, j);
for(j = 370070; j < 370080; j++) _solve(b, j);
for(j = 370910; j < 370920; j++) _solve(b, j);
for(j = 371750; j < 371760; j++) _solve(b, j);
for(j = 372590; j < 372600; j++) _solve(b, j);
for(j = 373430; j < 373440; j++) _solve(b, j);
for(j = 374270; j < 374280; j++) _solve(b, j);
for(j = 375110; j < 375120; j++) _solve(b, j);
for(j = 375950; j < 375960; j++) _solve(b, j);
for(j = 376790; j < 376800; j++) _solve(b, j);
for(j = 377630; j < 377640; j++) _solve(b, j);
for(j = 378470; j < 378480; j++) _solve(b, j);
for(j = 379310; j < 379320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 380150; j < 380160; j++) _solve(b, j);
for(j = 380990; j < 381000; j++) _solve(b, j);
for(j = 381830; j < 381840; j++) _solve(b, j);
for(j = 382670; j < 382680; j++) _solve(b, j);
for(j = 383510; j < 383520; j++) _solve(b, j);
for(j = 384350; j < 384360; j++) _solve(b, j);
for(j = 385190; j < 385200; j++) _solve(b, j);
for(j = 386030; j < 386040; j++) _solve(b, j);
for(j = 386870; j < 386880; j++) _solve(b, j);
for(j = 387710; j < 387720; j++) _solve(b, j);
for(j = 388550; j < 388560; j++) _solve(b, j);
for(j = 389390; j < 389400; j++) _solve(b, j);
for(j = 390230; j < 390240; j++) _solve(b, j);
for(j = 391070; j < 391080; j++) _solve(b, j);
for(j = 391910; j < 391920; j++) _solve(b, j);
for(j = 392750; j < 392760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 393590; j < 393600; j++) _solve(b, j);
for(j = 394430; j < 394440; j++) _solve(b, j);
for(j = 395270; j < 395280; j++) _solve(b, j);
for(j = 396110; j < 396120; j++) _solve(b, j);
for(j = 396950; j < 396960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 327240; j < 327250; j++) _solve(b, j);
for(j = 328080; j < 328090; j++) _solve(b, j);
for(j = 328920; j < 328930; j++) _solve(b, j);
for(j = 329760; j < 329770; j++) _solve(b, j);
for(j = 330600; j < 330610; j++) _solve(b, j);
for(j = 331440; j < 331450; j++) _solve(b, j);
for(j = 332280; j < 332290; j++) _solve(b, j);
for(j = 333120; j < 333130; j++) _solve(b, j);
for(j = 333960; j < 333970; j++) _solve(b, j);
for(j = 334800; j < 334810; j++) _solve(b, j);
for(j = 335640; j < 335650; j++) _solve(b, j);
for(j = 336480; j < 336490; j++) _solve(b, j);
for(j = 337320; j < 337330; j++) _solve(b, j);
for(j = 338160; j < 338170; j++) _solve(b, j);
for(j = 339000; j < 339010; j++) _solve(b, j);
for(j = 339840; j < 339850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 340680; j < 340690; j++) _solve(b, j);
for(j = 341520; j < 341530; j++) _solve(b, j);
for(j = 342360; j < 342370; j++) _solve(b, j);
for(j = 343200; j < 343210; j++) _solve(b, j);
for(j = 344040; j < 344050; j++) _solve(b, j);
for(j = 344880; j < 344890; j++) _solve(b, j);
for(j = 345720; j < 345730; j++) _solve(b, j);
for(j = 346560; j < 346570; j++) _solve(b, j);
for(j = 347400; j < 347410; j++) _solve(b, j);
for(j = 348240; j < 348250; j++) _solve(b, j);
for(j = 349080; j < 349090; j++) _solve(b, j);
for(j = 349920; j < 349930; j++) _solve(b, j);
for(j = 350760; j < 350770; j++) _solve(b, j);
for(j = 351600; j < 351610; j++) _solve(b, j);
for(j = 352440; j < 352450; j++) _solve(b, j);
for(j = 353280; j < 353290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 354120; j < 354130; j++) _solve(b, j);
for(j = 354960; j < 354970; j++) _solve(b, j);
for(j = 355800; j < 355810; j++) _solve(b, j);
for(j = 356640; j < 356650; j++) _solve(b, j);
for(j = 357480; j < 357490; j++) _solve(b, j);
for(j = 358320; j < 358330; j++) _solve(b, j);
for(j = 359160; j < 359170; j++) _solve(b, j);
for(j = 360000; j < 360010; j++) _solve(b, j);
for(j = 360840; j < 360850; j++) _solve(b, j);
for(j = 361680; j < 361690; j++) _solve(b, j);
for(j = 362520; j < 362530; j++) _solve(b, j);
for(j = 363360; j < 363370; j++) _solve(b, j);
for(j = 364200; j < 364210; j++) _solve(b, j);
for(j = 365040; j < 365050; j++) _solve(b, j);
for(j = 365880; j < 365890; j++) _solve(b, j);
for(j = 366720; j < 366730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 367560; j < 367570; j++) _solve(b, j);
for(j = 368400; j < 368410; j++) _solve(b, j);
for(j = 369240; j < 369250; j++) _solve(b, j);
for(j = 370080; j < 370090; j++) _solve(b, j);
for(j = 370920; j < 370930; j++) _solve(b, j);
for(j = 371760; j < 371770; j++) _solve(b, j);
for(j = 372600; j < 372610; j++) _solve(b, j);
for(j = 373440; j < 373450; j++) _solve(b, j);
for(j = 374280; j < 374290; j++) _solve(b, j);
for(j = 375120; j < 375130; j++) _solve(b, j);
for(j = 375960; j < 375970; j++) _solve(b, j);
for(j = 376800; j < 376810; j++) _solve(b, j);
for(j = 377640; j < 377650; j++) _solve(b, j);
for(j = 378480; j < 378490; j++) _solve(b, j);
for(j = 379320; j < 379330; j++) _solve(b, j);
for(j = 380160; j < 380170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 381000; j < 381010; j++) _solve(b, j);
for(j = 381840; j < 381850; j++) _solve(b, j);
for(j = 382680; j < 382690; j++) _solve(b, j);
for(j = 383520; j < 383530; j++) _solve(b, j);
for(j = 384360; j < 384370; j++) _solve(b, j);
for(j = 385200; j < 385210; j++) _solve(b, j);
for(j = 386040; j < 386050; j++) _solve(b, j);
for(j = 386880; j < 386890; j++) _solve(b, j);
for(j = 387720; j < 387730; j++) _solve(b, j);
for(j = 388560; j < 388570; j++) _solve(b, j);
for(j = 389400; j < 389410; j++) _solve(b, j);
for(j = 390240; j < 390250; j++) _solve(b, j);
for(j = 391080; j < 391090; j++) _solve(b, j);
for(j = 391920; j < 391930; j++) _solve(b, j);
for(j = 392760; j < 392770; j++) _solve(b, j);
for(j = 393600; j < 393610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 394440; j < 394450; j++) _solve(b, j);
for(j = 395280; j < 395290; j++) _solve(b, j);
for(j = 396120; j < 396130; j++) _solve(b, j);
for(j = 396960; j < 396970; j++) _solve(b, j);
for(j = 397800; j < 397810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 328090; j < 328100; j++) _solve(b, j);
for(j = 328930; j < 328940; j++) _solve(b, j);
for(j = 329770; j < 329780; j++) _solve(b, j);
for(j = 330610; j < 330620; j++) _solve(b, j);
for(j = 331450; j < 331460; j++) _solve(b, j);
for(j = 332290; j < 332300; j++) _solve(b, j);
for(j = 333130; j < 333140; j++) _solve(b, j);
for(j = 333970; j < 333980; j++) _solve(b, j);
for(j = 334810; j < 334820; j++) _solve(b, j);
for(j = 335650; j < 335660; j++) _solve(b, j);
for(j = 336490; j < 336500; j++) _solve(b, j);
for(j = 337330; j < 337340; j++) _solve(b, j);
for(j = 338170; j < 338180; j++) _solve(b, j);
for(j = 339010; j < 339020; j++) _solve(b, j);
for(j = 339850; j < 339860; j++) _solve(b, j);
for(j = 340690; j < 340700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 341530; j < 341540; j++) _solve(b, j);
for(j = 342370; j < 342380; j++) _solve(b, j);
for(j = 343210; j < 343220; j++) _solve(b, j);
for(j = 344050; j < 344060; j++) _solve(b, j);
for(j = 344890; j < 344900; j++) _solve(b, j);
for(j = 345730; j < 345740; j++) _solve(b, j);
for(j = 346570; j < 346580; j++) _solve(b, j);
for(j = 347410; j < 347420; j++) _solve(b, j);
for(j = 348250; j < 348260; j++) _solve(b, j);
for(j = 349090; j < 349100; j++) _solve(b, j);
for(j = 349930; j < 349940; j++) _solve(b, j);
for(j = 350770; j < 350780; j++) _solve(b, j);
for(j = 351610; j < 351620; j++) _solve(b, j);
for(j = 352450; j < 352460; j++) _solve(b, j);
for(j = 353290; j < 353300; j++) _solve(b, j);
for(j = 354130; j < 354140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 354970; j < 354980; j++) _solve(b, j);
for(j = 355810; j < 355820; j++) _solve(b, j);
for(j = 356650; j < 356660; j++) _solve(b, j);
for(j = 357490; j < 357500; j++) _solve(b, j);
for(j = 358330; j < 358340; j++) _solve(b, j);
for(j = 359170; j < 359180; j++) _solve(b, j);
for(j = 360010; j < 360020; j++) _solve(b, j);
for(j = 360850; j < 360860; j++) _solve(b, j);
for(j = 361690; j < 361700; j++) _solve(b, j);
for(j = 362530; j < 362540; j++) _solve(b, j);
for(j = 363370; j < 363380; j++) _solve(b, j);
for(j = 364210; j < 364220; j++) _solve(b, j);
for(j = 365050; j < 365060; j++) _solve(b, j);
for(j = 365890; j < 365900; j++) _solve(b, j);
for(j = 366730; j < 366740; j++) _solve(b, j);
for(j = 367570; j < 367580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 368410; j < 368420; j++) _solve(b, j);
for(j = 369250; j < 369260; j++) _solve(b, j);
for(j = 370090; j < 370100; j++) _solve(b, j);
for(j = 370930; j < 370940; j++) _solve(b, j);
for(j = 371770; j < 371780; j++) _solve(b, j);
for(j = 372610; j < 372620; j++) _solve(b, j);
for(j = 373450; j < 373460; j++) _solve(b, j);
for(j = 374290; j < 374300; j++) _solve(b, j);
for(j = 375130; j < 375140; j++) _solve(b, j);
for(j = 375970; j < 375980; j++) _solve(b, j);
for(j = 376810; j < 376820; j++) _solve(b, j);
for(j = 377650; j < 377660; j++) _solve(b, j);
for(j = 378490; j < 378500; j++) _solve(b, j);
for(j = 379330; j < 379340; j++) _solve(b, j);
for(j = 380170; j < 380180; j++) _solve(b, j);
for(j = 381010; j < 381020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 381850; j < 381860; j++) _solve(b, j);
for(j = 382690; j < 382700; j++) _solve(b, j);
for(j = 383530; j < 383540; j++) _solve(b, j);
for(j = 384370; j < 384380; j++) _solve(b, j);
for(j = 385210; j < 385220; j++) _solve(b, j);
for(j = 386050; j < 386060; j++) _solve(b, j);
for(j = 386890; j < 386900; j++) _solve(b, j);
for(j = 387730; j < 387740; j++) _solve(b, j);
for(j = 388570; j < 388580; j++) _solve(b, j);
for(j = 389410; j < 389420; j++) _solve(b, j);
for(j = 390250; j < 390260; j++) _solve(b, j);
for(j = 391090; j < 391100; j++) _solve(b, j);
for(j = 391930; j < 391940; j++) _solve(b, j);
for(j = 392770; j < 392780; j++) _solve(b, j);
for(j = 393610; j < 393620; j++) _solve(b, j);
for(j = 394450; j < 394460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 395290; j < 395300; j++) _solve(b, j);
for(j = 396130; j < 396140; j++) _solve(b, j);
for(j = 396970; j < 396980; j++) _solve(b, j);
for(j = 397810; j < 397820; j++) _solve(b, j);
for(j = 398650; j < 398660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 328940; j < 328950; j++) _solve(b, j);
for(j = 329780; j < 329790; j++) _solve(b, j);
for(j = 330620; j < 330630; j++) _solve(b, j);
for(j = 331460; j < 331470; j++) _solve(b, j);
for(j = 332300; j < 332310; j++) _solve(b, j);
for(j = 333140; j < 333150; j++) _solve(b, j);
for(j = 333980; j < 333990; j++) _solve(b, j);
for(j = 334820; j < 334830; j++) _solve(b, j);
for(j = 335660; j < 335670; j++) _solve(b, j);
for(j = 336500; j < 336510; j++) _solve(b, j);
for(j = 337340; j < 337350; j++) _solve(b, j);
for(j = 338180; j < 338190; j++) _solve(b, j);
for(j = 339020; j < 339030; j++) _solve(b, j);
for(j = 339860; j < 339870; j++) _solve(b, j);
for(j = 340700; j < 340710; j++) _solve(b, j);
for(j = 341540; j < 341550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 342380; j < 342390; j++) _solve(b, j);
for(j = 343220; j < 343230; j++) _solve(b, j);
for(j = 344060; j < 344070; j++) _solve(b, j);
for(j = 344900; j < 344910; j++) _solve(b, j);
for(j = 345740; j < 345750; j++) _solve(b, j);
for(j = 346580; j < 346590; j++) _solve(b, j);
for(j = 347420; j < 347430; j++) _solve(b, j);
for(j = 348260; j < 348270; j++) _solve(b, j);
for(j = 349100; j < 349110; j++) _solve(b, j);
for(j = 349940; j < 349950; j++) _solve(b, j);
for(j = 350780; j < 350790; j++) _solve(b, j);
for(j = 351620; j < 351630; j++) _solve(b, j);
for(j = 352460; j < 352470; j++) _solve(b, j);
for(j = 353300; j < 353310; j++) _solve(b, j);
for(j = 354140; j < 354150; j++) _solve(b, j);
for(j = 354980; j < 354990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 355820; j < 355830; j++) _solve(b, j);
for(j = 356660; j < 356670; j++) _solve(b, j);
for(j = 357500; j < 357510; j++) _solve(b, j);
for(j = 358340; j < 358350; j++) _solve(b, j);
for(j = 359180; j < 359190; j++) _solve(b, j);
for(j = 360020; j < 360030; j++) _solve(b, j);
for(j = 360860; j < 360870; j++) _solve(b, j);
for(j = 361700; j < 361710; j++) _solve(b, j);
for(j = 362540; j < 362550; j++) _solve(b, j);
for(j = 363380; j < 363390; j++) _solve(b, j);
for(j = 364220; j < 364230; j++) _solve(b, j);
for(j = 365060; j < 365070; j++) _solve(b, j);
for(j = 365900; j < 365910; j++) _solve(b, j);
for(j = 366740; j < 366750; j++) _solve(b, j);
for(j = 367580; j < 367590; j++) _solve(b, j);
for(j = 368420; j < 368430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 369260; j < 369270; j++) _solve(b, j);
for(j = 370100; j < 370110; j++) _solve(b, j);
for(j = 370940; j < 370950; j++) _solve(b, j);
for(j = 371780; j < 371790; j++) _solve(b, j);
for(j = 372620; j < 372630; j++) _solve(b, j);
for(j = 373460; j < 373470; j++) _solve(b, j);
for(j = 374300; j < 374310; j++) _solve(b, j);
for(j = 375140; j < 375150; j++) _solve(b, j);
for(j = 375980; j < 375990; j++) _solve(b, j);
for(j = 376820; j < 376830; j++) _solve(b, j);
for(j = 377660; j < 377670; j++) _solve(b, j);
for(j = 378500; j < 378510; j++) _solve(b, j);
for(j = 379340; j < 379350; j++) _solve(b, j);
for(j = 380180; j < 380190; j++) _solve(b, j);
for(j = 381020; j < 381030; j++) _solve(b, j);
for(j = 381860; j < 381870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 382700; j < 382710; j++) _solve(b, j);
for(j = 383540; j < 383550; j++) _solve(b, j);
for(j = 384380; j < 384390; j++) _solve(b, j);
for(j = 385220; j < 385230; j++) _solve(b, j);
for(j = 386060; j < 386070; j++) _solve(b, j);
for(j = 386900; j < 386910; j++) _solve(b, j);
for(j = 387740; j < 387750; j++) _solve(b, j);
for(j = 388580; j < 388590; j++) _solve(b, j);
for(j = 389420; j < 389430; j++) _solve(b, j);
for(j = 390260; j < 390270; j++) _solve(b, j);
for(j = 391100; j < 391110; j++) _solve(b, j);
for(j = 391940; j < 391950; j++) _solve(b, j);
for(j = 392780; j < 392790; j++) _solve(b, j);
for(j = 393620; j < 393630; j++) _solve(b, j);
for(j = 394460; j < 394470; j++) _solve(b, j);
for(j = 395300; j < 395310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 396140; j < 396150; j++) _solve(b, j);
for(j = 396980; j < 396990; j++) _solve(b, j);
for(j = 397820; j < 397830; j++) _solve(b, j);
for(j = 398660; j < 398670; j++) _solve(b, j);
for(j = 399500; j < 399510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 329790; j < 329800; j++) _solve(b, j);
for(j = 330630; j < 330640; j++) _solve(b, j);
for(j = 331470; j < 331480; j++) _solve(b, j);
for(j = 332310; j < 332320; j++) _solve(b, j);
for(j = 333150; j < 333160; j++) _solve(b, j);
for(j = 333990; j < 334000; j++) _solve(b, j);
for(j = 334830; j < 334840; j++) _solve(b, j);
for(j = 335670; j < 335680; j++) _solve(b, j);
for(j = 336510; j < 336520; j++) _solve(b, j);
for(j = 337350; j < 337360; j++) _solve(b, j);
for(j = 338190; j < 338200; j++) _solve(b, j);
for(j = 339030; j < 339040; j++) _solve(b, j);
for(j = 339870; j < 339880; j++) _solve(b, j);
for(j = 340710; j < 340720; j++) _solve(b, j);
for(j = 341550; j < 341560; j++) _solve(b, j);
for(j = 342390; j < 342400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 343230; j < 343240; j++) _solve(b, j);
for(j = 344070; j < 344080; j++) _solve(b, j);
for(j = 344910; j < 344920; j++) _solve(b, j);
for(j = 345750; j < 345760; j++) _solve(b, j);
for(j = 346590; j < 346600; j++) _solve(b, j);
for(j = 347430; j < 347440; j++) _solve(b, j);
for(j = 348270; j < 348280; j++) _solve(b, j);
for(j = 349110; j < 349120; j++) _solve(b, j);
for(j = 349950; j < 349960; j++) _solve(b, j);
for(j = 350790; j < 350800; j++) _solve(b, j);
for(j = 351630; j < 351640; j++) _solve(b, j);
for(j = 352470; j < 352480; j++) _solve(b, j);
for(j = 353310; j < 353320; j++) _solve(b, j);
for(j = 354150; j < 354160; j++) _solve(b, j);
for(j = 354990; j < 355000; j++) _solve(b, j);
for(j = 355830; j < 355840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 356670; j < 356680; j++) _solve(b, j);
for(j = 357510; j < 357520; j++) _solve(b, j);
for(j = 358350; j < 358360; j++) _solve(b, j);
for(j = 359190; j < 359200; j++) _solve(b, j);
for(j = 360030; j < 360040; j++) _solve(b, j);
for(j = 360870; j < 360880; j++) _solve(b, j);
for(j = 361710; j < 361720; j++) _solve(b, j);
for(j = 362550; j < 362560; j++) _solve(b, j);
for(j = 363390; j < 363400; j++) _solve(b, j);
for(j = 364230; j < 364240; j++) _solve(b, j);
for(j = 365070; j < 365080; j++) _solve(b, j);
for(j = 365910; j < 365920; j++) _solve(b, j);
for(j = 366750; j < 366760; j++) _solve(b, j);
for(j = 367590; j < 367600; j++) _solve(b, j);
for(j = 368430; j < 368440; j++) _solve(b, j);
for(j = 369270; j < 369280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 370110; j < 370120; j++) _solve(b, j);
for(j = 370950; j < 370960; j++) _solve(b, j);
for(j = 371790; j < 371800; j++) _solve(b, j);
for(j = 372630; j < 372640; j++) _solve(b, j);
for(j = 373470; j < 373480; j++) _solve(b, j);
for(j = 374310; j < 374320; j++) _solve(b, j);
for(j = 375150; j < 375160; j++) _solve(b, j);
for(j = 375990; j < 376000; j++) _solve(b, j);
for(j = 376830; j < 376840; j++) _solve(b, j);
for(j = 377670; j < 377680; j++) _solve(b, j);
for(j = 378510; j < 378520; j++) _solve(b, j);
for(j = 379350; j < 379360; j++) _solve(b, j);
for(j = 380190; j < 380200; j++) _solve(b, j);
for(j = 381030; j < 381040; j++) _solve(b, j);
for(j = 381870; j < 381880; j++) _solve(b, j);
for(j = 382710; j < 382720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 383550; j < 383560; j++) _solve(b, j);
for(j = 384390; j < 384400; j++) _solve(b, j);
for(j = 385230; j < 385240; j++) _solve(b, j);
for(j = 386070; j < 386080; j++) _solve(b, j);
for(j = 386910; j < 386920; j++) _solve(b, j);
for(j = 387750; j < 387760; j++) _solve(b, j);
for(j = 388590; j < 388600; j++) _solve(b, j);
for(j = 389430; j < 389440; j++) _solve(b, j);
for(j = 390270; j < 390280; j++) _solve(b, j);
for(j = 391110; j < 391120; j++) _solve(b, j);
for(j = 391950; j < 391960; j++) _solve(b, j);
for(j = 392790; j < 392800; j++) _solve(b, j);
for(j = 393630; j < 393640; j++) _solve(b, j);
for(j = 394470; j < 394480; j++) _solve(b, j);
for(j = 395310; j < 395320; j++) _solve(b, j);
for(j = 396150; j < 396160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 396990; j < 397000; j++) _solve(b, j);
for(j = 397830; j < 397840; j++) _solve(b, j);
for(j = 398670; j < 398680; j++) _solve(b, j);
for(j = 399510; j < 399520; j++) _solve(b, j);
for(j = 400350; j < 400360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 330640; j < 330650; j++) _solve(b, j);
for(j = 331480; j < 331490; j++) _solve(b, j);
for(j = 332320; j < 332330; j++) _solve(b, j);
for(j = 333160; j < 333170; j++) _solve(b, j);
for(j = 334000; j < 334010; j++) _solve(b, j);
for(j = 334840; j < 334850; j++) _solve(b, j);
for(j = 335680; j < 335690; j++) _solve(b, j);
for(j = 336520; j < 336530; j++) _solve(b, j);
for(j = 337360; j < 337370; j++) _solve(b, j);
for(j = 338200; j < 338210; j++) _solve(b, j);
for(j = 339040; j < 339050; j++) _solve(b, j);
for(j = 339880; j < 339890; j++) _solve(b, j);
for(j = 340720; j < 340730; j++) _solve(b, j);
for(j = 341560; j < 341570; j++) _solve(b, j);
for(j = 342400; j < 342410; j++) _solve(b, j);
for(j = 343240; j < 343250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 344080; j < 344090; j++) _solve(b, j);
for(j = 344920; j < 344930; j++) _solve(b, j);
for(j = 345760; j < 345770; j++) _solve(b, j);
for(j = 346600; j < 346610; j++) _solve(b, j);
for(j = 347440; j < 347450; j++) _solve(b, j);
for(j = 348280; j < 348290; j++) _solve(b, j);
for(j = 349120; j < 349130; j++) _solve(b, j);
for(j = 349960; j < 349970; j++) _solve(b, j);
for(j = 350800; j < 350810; j++) _solve(b, j);
for(j = 351640; j < 351650; j++) _solve(b, j);
for(j = 352480; j < 352490; j++) _solve(b, j);
for(j = 353320; j < 353330; j++) _solve(b, j);
for(j = 354160; j < 354170; j++) _solve(b, j);
for(j = 355000; j < 355010; j++) _solve(b, j);
for(j = 355840; j < 355850; j++) _solve(b, j);
for(j = 356680; j < 356690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 357520; j < 357530; j++) _solve(b, j);
for(j = 358360; j < 358370; j++) _solve(b, j);
for(j = 359200; j < 359210; j++) _solve(b, j);
for(j = 360040; j < 360050; j++) _solve(b, j);
for(j = 360880; j < 360890; j++) _solve(b, j);
for(j = 361720; j < 361730; j++) _solve(b, j);
for(j = 362560; j < 362570; j++) _solve(b, j);
for(j = 363400; j < 363410; j++) _solve(b, j);
for(j = 364240; j < 364250; j++) _solve(b, j);
for(j = 365080; j < 365090; j++) _solve(b, j);
for(j = 365920; j < 365930; j++) _solve(b, j);
for(j = 366760; j < 366770; j++) _solve(b, j);
for(j = 367600; j < 367610; j++) _solve(b, j);
for(j = 368440; j < 368450; j++) _solve(b, j);
for(j = 369280; j < 369290; j++) _solve(b, j);
for(j = 370120; j < 370130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 370960; j < 370970; j++) _solve(b, j);
for(j = 371800; j < 371810; j++) _solve(b, j);
for(j = 372640; j < 372650; j++) _solve(b, j);
for(j = 373480; j < 373490; j++) _solve(b, j);
for(j = 374320; j < 374330; j++) _solve(b, j);
for(j = 375160; j < 375170; j++) _solve(b, j);
for(j = 376000; j < 376010; j++) _solve(b, j);
for(j = 376840; j < 376850; j++) _solve(b, j);
for(j = 377680; j < 377690; j++) _solve(b, j);
for(j = 378520; j < 378530; j++) _solve(b, j);
for(j = 379360; j < 379370; j++) _solve(b, j);
for(j = 380200; j < 380210; j++) _solve(b, j);
for(j = 381040; j < 381050; j++) _solve(b, j);
for(j = 381880; j < 381890; j++) _solve(b, j);
for(j = 382720; j < 382730; j++) _solve(b, j);
for(j = 383560; j < 383570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 384400; j < 384410; j++) _solve(b, j);
for(j = 385240; j < 385250; j++) _solve(b, j);
for(j = 386080; j < 386090; j++) _solve(b, j);
for(j = 386920; j < 386930; j++) _solve(b, j);
for(j = 387760; j < 387770; j++) _solve(b, j);
for(j = 388600; j < 388610; j++) _solve(b, j);
for(j = 389440; j < 389450; j++) _solve(b, j);
for(j = 390280; j < 390290; j++) _solve(b, j);
for(j = 391120; j < 391130; j++) _solve(b, j);
for(j = 391960; j < 391970; j++) _solve(b, j);
for(j = 392800; j < 392810; j++) _solve(b, j);
for(j = 393640; j < 393650; j++) _solve(b, j);
for(j = 394480; j < 394490; j++) _solve(b, j);
for(j = 395320; j < 395330; j++) _solve(b, j);
for(j = 396160; j < 396170; j++) _solve(b, j);
for(j = 397000; j < 397010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 397840; j < 397850; j++) _solve(b, j);
for(j = 398680; j < 398690; j++) _solve(b, j);
for(j = 399520; j < 399530; j++) _solve(b, j);
for(j = 400360; j < 400370; j++) _solve(b, j);
for(j = 401200; j < 401210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 331490; j < 331500; j++) _solve(b, j);
for(j = 332330; j < 332340; j++) _solve(b, j);
for(j = 333170; j < 333180; j++) _solve(b, j);
for(j = 334010; j < 334020; j++) _solve(b, j);
for(j = 334850; j < 334860; j++) _solve(b, j);
for(j = 335690; j < 335700; j++) _solve(b, j);
for(j = 336530; j < 336540; j++) _solve(b, j);
for(j = 337370; j < 337380; j++) _solve(b, j);
for(j = 338210; j < 338220; j++) _solve(b, j);
for(j = 339050; j < 339060; j++) _solve(b, j);
for(j = 339890; j < 339900; j++) _solve(b, j);
for(j = 340730; j < 340740; j++) _solve(b, j);
for(j = 341570; j < 341580; j++) _solve(b, j);
for(j = 342410; j < 342420; j++) _solve(b, j);
for(j = 343250; j < 343260; j++) _solve(b, j);
for(j = 344090; j < 344100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 344930; j < 344940; j++) _solve(b, j);
for(j = 345770; j < 345780; j++) _solve(b, j);
for(j = 346610; j < 346620; j++) _solve(b, j);
for(j = 347450; j < 347460; j++) _solve(b, j);
for(j = 348290; j < 348300; j++) _solve(b, j);
for(j = 349130; j < 349140; j++) _solve(b, j);
for(j = 349970; j < 349980; j++) _solve(b, j);
for(j = 350810; j < 350820; j++) _solve(b, j);
for(j = 351650; j < 351660; j++) _solve(b, j);
for(j = 352490; j < 352500; j++) _solve(b, j);
for(j = 353330; j < 353340; j++) _solve(b, j);
for(j = 354170; j < 354180; j++) _solve(b, j);
for(j = 355010; j < 355020; j++) _solve(b, j);
for(j = 355850; j < 355860; j++) _solve(b, j);
for(j = 356690; j < 356700; j++) _solve(b, j);
for(j = 357530; j < 357540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 358370; j < 358380; j++) _solve(b, j);
for(j = 359210; j < 359220; j++) _solve(b, j);
for(j = 360050; j < 360060; j++) _solve(b, j);
for(j = 360890; j < 360900; j++) _solve(b, j);
for(j = 361730; j < 361740; j++) _solve(b, j);
for(j = 362570; j < 362580; j++) _solve(b, j);
for(j = 363410; j < 363420; j++) _solve(b, j);
for(j = 364250; j < 364260; j++) _solve(b, j);
for(j = 365090; j < 365100; j++) _solve(b, j);
for(j = 365930; j < 365940; j++) _solve(b, j);
for(j = 366770; j < 366780; j++) _solve(b, j);
for(j = 367610; j < 367620; j++) _solve(b, j);
for(j = 368450; j < 368460; j++) _solve(b, j);
for(j = 369290; j < 369300; j++) _solve(b, j);
for(j = 370130; j < 370140; j++) _solve(b, j);
for(j = 370970; j < 370980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 371810; j < 371820; j++) _solve(b, j);
for(j = 372650; j < 372660; j++) _solve(b, j);
for(j = 373490; j < 373500; j++) _solve(b, j);
for(j = 374330; j < 374340; j++) _solve(b, j);
for(j = 375170; j < 375180; j++) _solve(b, j);
for(j = 376010; j < 376020; j++) _solve(b, j);
for(j = 376850; j < 376860; j++) _solve(b, j);
for(j = 377690; j < 377700; j++) _solve(b, j);
for(j = 378530; j < 378540; j++) _solve(b, j);
for(j = 379370; j < 379380; j++) _solve(b, j);
for(j = 380210; j < 380220; j++) _solve(b, j);
for(j = 381050; j < 381060; j++) _solve(b, j);
for(j = 381890; j < 381900; j++) _solve(b, j);
for(j = 382730; j < 382740; j++) _solve(b, j);
for(j = 383570; j < 383580; j++) _solve(b, j);
for(j = 384410; j < 384420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 385250; j < 385260; j++) _solve(b, j);
for(j = 386090; j < 386100; j++) _solve(b, j);
for(j = 386930; j < 386940; j++) _solve(b, j);
for(j = 387770; j < 387780; j++) _solve(b, j);
for(j = 388610; j < 388620; j++) _solve(b, j);
for(j = 389450; j < 389460; j++) _solve(b, j);
for(j = 390290; j < 390300; j++) _solve(b, j);
for(j = 391130; j < 391140; j++) _solve(b, j);
for(j = 391970; j < 391980; j++) _solve(b, j);
for(j = 392810; j < 392820; j++) _solve(b, j);
for(j = 393650; j < 393660; j++) _solve(b, j);
for(j = 394490; j < 394500; j++) _solve(b, j);
for(j = 395330; j < 395340; j++) _solve(b, j);
for(j = 396170; j < 396180; j++) _solve(b, j);
for(j = 397010; j < 397020; j++) _solve(b, j);
for(j = 397850; j < 397860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 398690; j < 398700; j++) _solve(b, j);
for(j = 399530; j < 399540; j++) _solve(b, j);
for(j = 400370; j < 400380; j++) _solve(b, j);
for(j = 401210; j < 401220; j++) _solve(b, j);
for(j = 402050; j < 402060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 332340; j < 332350; j++) _solve(b, j);
for(j = 333180; j < 333190; j++) _solve(b, j);
for(j = 334020; j < 334030; j++) _solve(b, j);
for(j = 334860; j < 334870; j++) _solve(b, j);
for(j = 335700; j < 335710; j++) _solve(b, j);
for(j = 336540; j < 336550; j++) _solve(b, j);
for(j = 337380; j < 337390; j++) _solve(b, j);
for(j = 338220; j < 338230; j++) _solve(b, j);
for(j = 339060; j < 339070; j++) _solve(b, j);
for(j = 339900; j < 339910; j++) _solve(b, j);
for(j = 340740; j < 340750; j++) _solve(b, j);
for(j = 341580; j < 341590; j++) _solve(b, j);
for(j = 342420; j < 342430; j++) _solve(b, j);
for(j = 343260; j < 343270; j++) _solve(b, j);
for(j = 344100; j < 344110; j++) _solve(b, j);
for(j = 344940; j < 344950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 345780; j < 345790; j++) _solve(b, j);
for(j = 346620; j < 346630; j++) _solve(b, j);
for(j = 347460; j < 347470; j++) _solve(b, j);
for(j = 348300; j < 348310; j++) _solve(b, j);
for(j = 349140; j < 349150; j++) _solve(b, j);
for(j = 349980; j < 349990; j++) _solve(b, j);
for(j = 350820; j < 350830; j++) _solve(b, j);
for(j = 351660; j < 351670; j++) _solve(b, j);
for(j = 352500; j < 352510; j++) _solve(b, j);
for(j = 353340; j < 353350; j++) _solve(b, j);
for(j = 354180; j < 354190; j++) _solve(b, j);
for(j = 355020; j < 355030; j++) _solve(b, j);
for(j = 355860; j < 355870; j++) _solve(b, j);
for(j = 356700; j < 356710; j++) _solve(b, j);
for(j = 357540; j < 357550; j++) _solve(b, j);
for(j = 358380; j < 358390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 359220; j < 359230; j++) _solve(b, j);
for(j = 360060; j < 360070; j++) _solve(b, j);
for(j = 360900; j < 360910; j++) _solve(b, j);
for(j = 361740; j < 361750; j++) _solve(b, j);
for(j = 362580; j < 362590; j++) _solve(b, j);
for(j = 363420; j < 363430; j++) _solve(b, j);
for(j = 364260; j < 364270; j++) _solve(b, j);
for(j = 365100; j < 365110; j++) _solve(b, j);
for(j = 365940; j < 365950; j++) _solve(b, j);
for(j = 366780; j < 366790; j++) _solve(b, j);
for(j = 367620; j < 367630; j++) _solve(b, j);
for(j = 368460; j < 368470; j++) _solve(b, j);
for(j = 369300; j < 369310; j++) _solve(b, j);
for(j = 370140; j < 370150; j++) _solve(b, j);
for(j = 370980; j < 370990; j++) _solve(b, j);
for(j = 371820; j < 371830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 372660; j < 372670; j++) _solve(b, j);
for(j = 373500; j < 373510; j++) _solve(b, j);
for(j = 374340; j < 374350; j++) _solve(b, j);
for(j = 375180; j < 375190; j++) _solve(b, j);
for(j = 376020; j < 376030; j++) _solve(b, j);
for(j = 376860; j < 376870; j++) _solve(b, j);
for(j = 377700; j < 377710; j++) _solve(b, j);
for(j = 378540; j < 378550; j++) _solve(b, j);
for(j = 379380; j < 379390; j++) _solve(b, j);
for(j = 380220; j < 380230; j++) _solve(b, j);
for(j = 381060; j < 381070; j++) _solve(b, j);
for(j = 381900; j < 381910; j++) _solve(b, j);
for(j = 382740; j < 382750; j++) _solve(b, j);
for(j = 383580; j < 383590; j++) _solve(b, j);
for(j = 384420; j < 384430; j++) _solve(b, j);
for(j = 385260; j < 385270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 386100; j < 386110; j++) _solve(b, j);
for(j = 386940; j < 386950; j++) _solve(b, j);
for(j = 387780; j < 387790; j++) _solve(b, j);
for(j = 388620; j < 388630; j++) _solve(b, j);
for(j = 389460; j < 389470; j++) _solve(b, j);
for(j = 390300; j < 390310; j++) _solve(b, j);
for(j = 391140; j < 391150; j++) _solve(b, j);
for(j = 391980; j < 391990; j++) _solve(b, j);
for(j = 392820; j < 392830; j++) _solve(b, j);
for(j = 393660; j < 393670; j++) _solve(b, j);
for(j = 394500; j < 394510; j++) _solve(b, j);
for(j = 395340; j < 395350; j++) _solve(b, j);
for(j = 396180; j < 396190; j++) _solve(b, j);
for(j = 397020; j < 397030; j++) _solve(b, j);
for(j = 397860; j < 397870; j++) _solve(b, j);
for(j = 398700; j < 398710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 399540; j < 399550; j++) _solve(b, j);
for(j = 400380; j < 400390; j++) _solve(b, j);
for(j = 401220; j < 401230; j++) _solve(b, j);
for(j = 402060; j < 402070; j++) _solve(b, j);
for(j = 402900; j < 402910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 333190; j < 333200; j++) _solve(b, j);
for(j = 334030; j < 334040; j++) _solve(b, j);
for(j = 334870; j < 334880; j++) _solve(b, j);
for(j = 335710; j < 335720; j++) _solve(b, j);
for(j = 336550; j < 336560; j++) _solve(b, j);
for(j = 337390; j < 337400; j++) _solve(b, j);
for(j = 338230; j < 338240; j++) _solve(b, j);
for(j = 339070; j < 339080; j++) _solve(b, j);
for(j = 339910; j < 339920; j++) _solve(b, j);
for(j = 340750; j < 340760; j++) _solve(b, j);
for(j = 341590; j < 341600; j++) _solve(b, j);
for(j = 342430; j < 342440; j++) _solve(b, j);
for(j = 343270; j < 343280; j++) _solve(b, j);
for(j = 344110; j < 344120; j++) _solve(b, j);
for(j = 344950; j < 344960; j++) _solve(b, j);
for(j = 345790; j < 345800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 346630; j < 346640; j++) _solve(b, j);
for(j = 347470; j < 347480; j++) _solve(b, j);
for(j = 348310; j < 348320; j++) _solve(b, j);
for(j = 349150; j < 349160; j++) _solve(b, j);
for(j = 349990; j < 350000; j++) _solve(b, j);
for(j = 350830; j < 350840; j++) _solve(b, j);
for(j = 351670; j < 351680; j++) _solve(b, j);
for(j = 352510; j < 352520; j++) _solve(b, j);
for(j = 353350; j < 353360; j++) _solve(b, j);
for(j = 354190; j < 354200; j++) _solve(b, j);
for(j = 355030; j < 355040; j++) _solve(b, j);
for(j = 355870; j < 355880; j++) _solve(b, j);
for(j = 356710; j < 356720; j++) _solve(b, j);
for(j = 357550; j < 357560; j++) _solve(b, j);
for(j = 358390; j < 358400; j++) _solve(b, j);
for(j = 359230; j < 359240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 360070; j < 360080; j++) _solve(b, j);
for(j = 360910; j < 360920; j++) _solve(b, j);
for(j = 361750; j < 361760; j++) _solve(b, j);
for(j = 362590; j < 362600; j++) _solve(b, j);
for(j = 363430; j < 363440; j++) _solve(b, j);
for(j = 364270; j < 364280; j++) _solve(b, j);
for(j = 365110; j < 365120; j++) _solve(b, j);
for(j = 365950; j < 365960; j++) _solve(b, j);
for(j = 366790; j < 366800; j++) _solve(b, j);
for(j = 367630; j < 367640; j++) _solve(b, j);
for(j = 368470; j < 368480; j++) _solve(b, j);
for(j = 369310; j < 369320; j++) _solve(b, j);
for(j = 370150; j < 370160; j++) _solve(b, j);
for(j = 370990; j < 371000; j++) _solve(b, j);
for(j = 371830; j < 371840; j++) _solve(b, j);
for(j = 372670; j < 372680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 373510; j < 373520; j++) _solve(b, j);
for(j = 374350; j < 374360; j++) _solve(b, j);
for(j = 375190; j < 375200; j++) _solve(b, j);
for(j = 376030; j < 376040; j++) _solve(b, j);
for(j = 376870; j < 376880; j++) _solve(b, j);
for(j = 377710; j < 377720; j++) _solve(b, j);
for(j = 378550; j < 378560; j++) _solve(b, j);
for(j = 379390; j < 379400; j++) _solve(b, j);
for(j = 380230; j < 380240; j++) _solve(b, j);
for(j = 381070; j < 381080; j++) _solve(b, j);
for(j = 381910; j < 381920; j++) _solve(b, j);
for(j = 382750; j < 382760; j++) _solve(b, j);
for(j = 383590; j < 383600; j++) _solve(b, j);
for(j = 384430; j < 384440; j++) _solve(b, j);
for(j = 385270; j < 385280; j++) _solve(b, j);
for(j = 386110; j < 386120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 386950; j < 386960; j++) _solve(b, j);
for(j = 387790; j < 387800; j++) _solve(b, j);
for(j = 388630; j < 388640; j++) _solve(b, j);
for(j = 389470; j < 389480; j++) _solve(b, j);
for(j = 390310; j < 390320; j++) _solve(b, j);
for(j = 391150; j < 391160; j++) _solve(b, j);
for(j = 391990; j < 392000; j++) _solve(b, j);
for(j = 392830; j < 392840; j++) _solve(b, j);
for(j = 393670; j < 393680; j++) _solve(b, j);
for(j = 394510; j < 394520; j++) _solve(b, j);
for(j = 395350; j < 395360; j++) _solve(b, j);
for(j = 396190; j < 396200; j++) _solve(b, j);
for(j = 397030; j < 397040; j++) _solve(b, j);
for(j = 397870; j < 397880; j++) _solve(b, j);
for(j = 398710; j < 398720; j++) _solve(b, j);
for(j = 399550; j < 399560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 400390; j < 400400; j++) _solve(b, j);
for(j = 401230; j < 401240; j++) _solve(b, j);
for(j = 402070; j < 402080; j++) _solve(b, j);
for(j = 402910; j < 402920; j++) _solve(b, j);
for(j = 403750; j < 403760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 334040; j < 334050; j++) _solve(b, j);
for(j = 334880; j < 334890; j++) _solve(b, j);
for(j = 335720; j < 335730; j++) _solve(b, j);
for(j = 336560; j < 336570; j++) _solve(b, j);
for(j = 337400; j < 337410; j++) _solve(b, j);
for(j = 338240; j < 338250; j++) _solve(b, j);
for(j = 339080; j < 339090; j++) _solve(b, j);
for(j = 339920; j < 339930; j++) _solve(b, j);
for(j = 340760; j < 340770; j++) _solve(b, j);
for(j = 341600; j < 341610; j++) _solve(b, j);
for(j = 342440; j < 342450; j++) _solve(b, j);
for(j = 343280; j < 343290; j++) _solve(b, j);
for(j = 344120; j < 344130; j++) _solve(b, j);
for(j = 344960; j < 344970; j++) _solve(b, j);
for(j = 345800; j < 345810; j++) _solve(b, j);
for(j = 346640; j < 346650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 347480; j < 347490; j++) _solve(b, j);
for(j = 348320; j < 348330; j++) _solve(b, j);
for(j = 349160; j < 349170; j++) _solve(b, j);
for(j = 350000; j < 350010; j++) _solve(b, j);
for(j = 350840; j < 350850; j++) _solve(b, j);
for(j = 351680; j < 351690; j++) _solve(b, j);
for(j = 352520; j < 352530; j++) _solve(b, j);
for(j = 353360; j < 353370; j++) _solve(b, j);
for(j = 354200; j < 354210; j++) _solve(b, j);
for(j = 355040; j < 355050; j++) _solve(b, j);
for(j = 355880; j < 355890; j++) _solve(b, j);
for(j = 356720; j < 356730; j++) _solve(b, j);
for(j = 357560; j < 357570; j++) _solve(b, j);
for(j = 358400; j < 358410; j++) _solve(b, j);
for(j = 359240; j < 359250; j++) _solve(b, j);
for(j = 360080; j < 360090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 360920; j < 360930; j++) _solve(b, j);
for(j = 361760; j < 361770; j++) _solve(b, j);
for(j = 362600; j < 362610; j++) _solve(b, j);
for(j = 363440; j < 363450; j++) _solve(b, j);
for(j = 364280; j < 364290; j++) _solve(b, j);
for(j = 365120; j < 365130; j++) _solve(b, j);
for(j = 365960; j < 365970; j++) _solve(b, j);
for(j = 366800; j < 366810; j++) _solve(b, j);
for(j = 367640; j < 367650; j++) _solve(b, j);
for(j = 368480; j < 368490; j++) _solve(b, j);
for(j = 369320; j < 369330; j++) _solve(b, j);
for(j = 370160; j < 370170; j++) _solve(b, j);
for(j = 371000; j < 371010; j++) _solve(b, j);
for(j = 371840; j < 371850; j++) _solve(b, j);
for(j = 372680; j < 372690; j++) _solve(b, j);
for(j = 373520; j < 373530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 374360; j < 374370; j++) _solve(b, j);
for(j = 375200; j < 375210; j++) _solve(b, j);
for(j = 376040; j < 376050; j++) _solve(b, j);
for(j = 376880; j < 376890; j++) _solve(b, j);
for(j = 377720; j < 377730; j++) _solve(b, j);
for(j = 378560; j < 378570; j++) _solve(b, j);
for(j = 379400; j < 379410; j++) _solve(b, j);
for(j = 380240; j < 380250; j++) _solve(b, j);
for(j = 381080; j < 381090; j++) _solve(b, j);
for(j = 381920; j < 381930; j++) _solve(b, j);
for(j = 382760; j < 382770; j++) _solve(b, j);
for(j = 383600; j < 383610; j++) _solve(b, j);
for(j = 384440; j < 384450; j++) _solve(b, j);
for(j = 385280; j < 385290; j++) _solve(b, j);
for(j = 386120; j < 386130; j++) _solve(b, j);
for(j = 386960; j < 386970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 387800; j < 387810; j++) _solve(b, j);
for(j = 388640; j < 388650; j++) _solve(b, j);
for(j = 389480; j < 389490; j++) _solve(b, j);
for(j = 390320; j < 390330; j++) _solve(b, j);
for(j = 391160; j < 391170; j++) _solve(b, j);
for(j = 392000; j < 392010; j++) _solve(b, j);
for(j = 392840; j < 392850; j++) _solve(b, j);
for(j = 393680; j < 393690; j++) _solve(b, j);
for(j = 394520; j < 394530; j++) _solve(b, j);
for(j = 395360; j < 395370; j++) _solve(b, j);
for(j = 396200; j < 396210; j++) _solve(b, j);
for(j = 397040; j < 397050; j++) _solve(b, j);
for(j = 397880; j < 397890; j++) _solve(b, j);
for(j = 398720; j < 398730; j++) _solve(b, j);
for(j = 399560; j < 399570; j++) _solve(b, j);
for(j = 400400; j < 400410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 401240; j < 401250; j++) _solve(b, j);
for(j = 402080; j < 402090; j++) _solve(b, j);
for(j = 402920; j < 402930; j++) _solve(b, j);
for(j = 403760; j < 403770; j++) _solve(b, j);
for(j = 404600; j < 404610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 334890; j < 334900; j++) _solve(b, j);
for(j = 335730; j < 335740; j++) _solve(b, j);
for(j = 336570; j < 336580; j++) _solve(b, j);
for(j = 337410; j < 337420; j++) _solve(b, j);
for(j = 338250; j < 338260; j++) _solve(b, j);
for(j = 339090; j < 339100; j++) _solve(b, j);
for(j = 339930; j < 339940; j++) _solve(b, j);
for(j = 340770; j < 340780; j++) _solve(b, j);
for(j = 341610; j < 341620; j++) _solve(b, j);
for(j = 342450; j < 342460; j++) _solve(b, j);
for(j = 343290; j < 343300; j++) _solve(b, j);
for(j = 344130; j < 344140; j++) _solve(b, j);
for(j = 344970; j < 344980; j++) _solve(b, j);
for(j = 345810; j < 345820; j++) _solve(b, j);
for(j = 346650; j < 346660; j++) _solve(b, j);
for(j = 347490; j < 347500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 348330; j < 348340; j++) _solve(b, j);
for(j = 349170; j < 349180; j++) _solve(b, j);
for(j = 350010; j < 350020; j++) _solve(b, j);
for(j = 350850; j < 350860; j++) _solve(b, j);
for(j = 351690; j < 351700; j++) _solve(b, j);
for(j = 352530; j < 352540; j++) _solve(b, j);
for(j = 353370; j < 353380; j++) _solve(b, j);
for(j = 354210; j < 354220; j++) _solve(b, j);
for(j = 355050; j < 355060; j++) _solve(b, j);
for(j = 355890; j < 355900; j++) _solve(b, j);
for(j = 356730; j < 356740; j++) _solve(b, j);
for(j = 357570; j < 357580; j++) _solve(b, j);
for(j = 358410; j < 358420; j++) _solve(b, j);
for(j = 359250; j < 359260; j++) _solve(b, j);
for(j = 360090; j < 360100; j++) _solve(b, j);
for(j = 360930; j < 360940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 361770; j < 361780; j++) _solve(b, j);
for(j = 362610; j < 362620; j++) _solve(b, j);
for(j = 363450; j < 363460; j++) _solve(b, j);
for(j = 364290; j < 364300; j++) _solve(b, j);
for(j = 365130; j < 365140; j++) _solve(b, j);
for(j = 365970; j < 365980; j++) _solve(b, j);
for(j = 366810; j < 366820; j++) _solve(b, j);
for(j = 367650; j < 367660; j++) _solve(b, j);
for(j = 368490; j < 368500; j++) _solve(b, j);
for(j = 369330; j < 369340; j++) _solve(b, j);
for(j = 370170; j < 370180; j++) _solve(b, j);
for(j = 371010; j < 371020; j++) _solve(b, j);
for(j = 371850; j < 371860; j++) _solve(b, j);
for(j = 372690; j < 372700; j++) _solve(b, j);
for(j = 373530; j < 373540; j++) _solve(b, j);
for(j = 374370; j < 374380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 375210; j < 375220; j++) _solve(b, j);
for(j = 376050; j < 376060; j++) _solve(b, j);
for(j = 376890; j < 376900; j++) _solve(b, j);
for(j = 377730; j < 377740; j++) _solve(b, j);
for(j = 378570; j < 378580; j++) _solve(b, j);
for(j = 379410; j < 379420; j++) _solve(b, j);
for(j = 380250; j < 380260; j++) _solve(b, j);
for(j = 381090; j < 381100; j++) _solve(b, j);
for(j = 381930; j < 381940; j++) _solve(b, j);
for(j = 382770; j < 382780; j++) _solve(b, j);
for(j = 383610; j < 383620; j++) _solve(b, j);
for(j = 384450; j < 384460; j++) _solve(b, j);
for(j = 385290; j < 385300; j++) _solve(b, j);
for(j = 386130; j < 386140; j++) _solve(b, j);
for(j = 386970; j < 386980; j++) _solve(b, j);
for(j = 387810; j < 387820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 388650; j < 388660; j++) _solve(b, j);
for(j = 389490; j < 389500; j++) _solve(b, j);
for(j = 390330; j < 390340; j++) _solve(b, j);
for(j = 391170; j < 391180; j++) _solve(b, j);
for(j = 392010; j < 392020; j++) _solve(b, j);
for(j = 392850; j < 392860; j++) _solve(b, j);
for(j = 393690; j < 393700; j++) _solve(b, j);
for(j = 394530; j < 394540; j++) _solve(b, j);
for(j = 395370; j < 395380; j++) _solve(b, j);
for(j = 396210; j < 396220; j++) _solve(b, j);
for(j = 397050; j < 397060; j++) _solve(b, j);
for(j = 397890; j < 397900; j++) _solve(b, j);
for(j = 398730; j < 398740; j++) _solve(b, j);
for(j = 399570; j < 399580; j++) _solve(b, j);
for(j = 400410; j < 400420; j++) _solve(b, j);
for(j = 401250; j < 401260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 402090; j < 402100; j++) _solve(b, j);
for(j = 402930; j < 402940; j++) _solve(b, j);
for(j = 403770; j < 403780; j++) _solve(b, j);
for(j = 404610; j < 404620; j++) _solve(b, j);
for(j = 405450; j < 405460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 335740; j < 335750; j++) _solve(b, j);
for(j = 336580; j < 336590; j++) _solve(b, j);
for(j = 337420; j < 337430; j++) _solve(b, j);
for(j = 338260; j < 338270; j++) _solve(b, j);
for(j = 339100; j < 339110; j++) _solve(b, j);
for(j = 339940; j < 339950; j++) _solve(b, j);
for(j = 340780; j < 340790; j++) _solve(b, j);
for(j = 341620; j < 341630; j++) _solve(b, j);
for(j = 342460; j < 342470; j++) _solve(b, j);
for(j = 343300; j < 343310; j++) _solve(b, j);
for(j = 344140; j < 344150; j++) _solve(b, j);
for(j = 344980; j < 344990; j++) _solve(b, j);
for(j = 345820; j < 345830; j++) _solve(b, j);
for(j = 346660; j < 346670; j++) _solve(b, j);
for(j = 347500; j < 347510; j++) _solve(b, j);
for(j = 348340; j < 348350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 349180; j < 349190; j++) _solve(b, j);
for(j = 350020; j < 350030; j++) _solve(b, j);
for(j = 350860; j < 350870; j++) _solve(b, j);
for(j = 351700; j < 351710; j++) _solve(b, j);
for(j = 352540; j < 352550; j++) _solve(b, j);
for(j = 353380; j < 353390; j++) _solve(b, j);
for(j = 354220; j < 354230; j++) _solve(b, j);
for(j = 355060; j < 355070; j++) _solve(b, j);
for(j = 355900; j < 355910; j++) _solve(b, j);
for(j = 356740; j < 356750; j++) _solve(b, j);
for(j = 357580; j < 357590; j++) _solve(b, j);
for(j = 358420; j < 358430; j++) _solve(b, j);
for(j = 359260; j < 359270; j++) _solve(b, j);
for(j = 360100; j < 360110; j++) _solve(b, j);
for(j = 360940; j < 360950; j++) _solve(b, j);
for(j = 361780; j < 361790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 362620; j < 362630; j++) _solve(b, j);
for(j = 363460; j < 363470; j++) _solve(b, j);
for(j = 364300; j < 364310; j++) _solve(b, j);
for(j = 365140; j < 365150; j++) _solve(b, j);
for(j = 365980; j < 365990; j++) _solve(b, j);
for(j = 366820; j < 366830; j++) _solve(b, j);
for(j = 367660; j < 367670; j++) _solve(b, j);
for(j = 368500; j < 368510; j++) _solve(b, j);
for(j = 369340; j < 369350; j++) _solve(b, j);
for(j = 370180; j < 370190; j++) _solve(b, j);
for(j = 371020; j < 371030; j++) _solve(b, j);
for(j = 371860; j < 371870; j++) _solve(b, j);
for(j = 372700; j < 372710; j++) _solve(b, j);
for(j = 373540; j < 373550; j++) _solve(b, j);
for(j = 374380; j < 374390; j++) _solve(b, j);
for(j = 375220; j < 375230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 376060; j < 376070; j++) _solve(b, j);
for(j = 376900; j < 376910; j++) _solve(b, j);
for(j = 377740; j < 377750; j++) _solve(b, j);
for(j = 378580; j < 378590; j++) _solve(b, j);
for(j = 379420; j < 379430; j++) _solve(b, j);
for(j = 380260; j < 380270; j++) _solve(b, j);
for(j = 381100; j < 381110; j++) _solve(b, j);
for(j = 381940; j < 381950; j++) _solve(b, j);
for(j = 382780; j < 382790; j++) _solve(b, j);
for(j = 383620; j < 383630; j++) _solve(b, j);
for(j = 384460; j < 384470; j++) _solve(b, j);
for(j = 385300; j < 385310; j++) _solve(b, j);
for(j = 386140; j < 386150; j++) _solve(b, j);
for(j = 386980; j < 386990; j++) _solve(b, j);
for(j = 387820; j < 387830; j++) _solve(b, j);
for(j = 388660; j < 388670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 389500; j < 389510; j++) _solve(b, j);
for(j = 390340; j < 390350; j++) _solve(b, j);
for(j = 391180; j < 391190; j++) _solve(b, j);
for(j = 392020; j < 392030; j++) _solve(b, j);
for(j = 392860; j < 392870; j++) _solve(b, j);
for(j = 393700; j < 393710; j++) _solve(b, j);
for(j = 394540; j < 394550; j++) _solve(b, j);
for(j = 395380; j < 395390; j++) _solve(b, j);
for(j = 396220; j < 396230; j++) _solve(b, j);
for(j = 397060; j < 397070; j++) _solve(b, j);
for(j = 397900; j < 397910; j++) _solve(b, j);
for(j = 398740; j < 398750; j++) _solve(b, j);
for(j = 399580; j < 399590; j++) _solve(b, j);
for(j = 400420; j < 400430; j++) _solve(b, j);
for(j = 401260; j < 401270; j++) _solve(b, j);
for(j = 402100; j < 402110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 402940; j < 402950; j++) _solve(b, j);
for(j = 403780; j < 403790; j++) _solve(b, j);
for(j = 404620; j < 404630; j++) _solve(b, j);
for(j = 405460; j < 405470; j++) _solve(b, j);
for(j = 406300; j < 406310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 336590; j < 336600; j++) _solve(b, j);
for(j = 337430; j < 337440; j++) _solve(b, j);
for(j = 338270; j < 338280; j++) _solve(b, j);
for(j = 339110; j < 339120; j++) _solve(b, j);
for(j = 339950; j < 339960; j++) _solve(b, j);
for(j = 340790; j < 340800; j++) _solve(b, j);
for(j = 341630; j < 341640; j++) _solve(b, j);
for(j = 342470; j < 342480; j++) _solve(b, j);
for(j = 343310; j < 343320; j++) _solve(b, j);
for(j = 344150; j < 344160; j++) _solve(b, j);
for(j = 344990; j < 345000; j++) _solve(b, j);
for(j = 345830; j < 345840; j++) _solve(b, j);
for(j = 346670; j < 346680; j++) _solve(b, j);
for(j = 347510; j < 347520; j++) _solve(b, j);
for(j = 348350; j < 348360; j++) _solve(b, j);
for(j = 349190; j < 349200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 350030; j < 350040; j++) _solve(b, j);
for(j = 350870; j < 350880; j++) _solve(b, j);
for(j = 351710; j < 351720; j++) _solve(b, j);
for(j = 352550; j < 352560; j++) _solve(b, j);
for(j = 353390; j < 353400; j++) _solve(b, j);
for(j = 354230; j < 354240; j++) _solve(b, j);
for(j = 355070; j < 355080; j++) _solve(b, j);
for(j = 355910; j < 355920; j++) _solve(b, j);
for(j = 356750; j < 356760; j++) _solve(b, j);
for(j = 357590; j < 357600; j++) _solve(b, j);
for(j = 358430; j < 358440; j++) _solve(b, j);
for(j = 359270; j < 359280; j++) _solve(b, j);
for(j = 360110; j < 360120; j++) _solve(b, j);
for(j = 360950; j < 360960; j++) _solve(b, j);
for(j = 361790; j < 361800; j++) _solve(b, j);
for(j = 362630; j < 362640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 363470; j < 363480; j++) _solve(b, j);
for(j = 364310; j < 364320; j++) _solve(b, j);
for(j = 365150; j < 365160; j++) _solve(b, j);
for(j = 365990; j < 366000; j++) _solve(b, j);
for(j = 366830; j < 366840; j++) _solve(b, j);
for(j = 367670; j < 367680; j++) _solve(b, j);
for(j = 368510; j < 368520; j++) _solve(b, j);
for(j = 369350; j < 369360; j++) _solve(b, j);
for(j = 370190; j < 370200; j++) _solve(b, j);
for(j = 371030; j < 371040; j++) _solve(b, j);
for(j = 371870; j < 371880; j++) _solve(b, j);
for(j = 372710; j < 372720; j++) _solve(b, j);
for(j = 373550; j < 373560; j++) _solve(b, j);
for(j = 374390; j < 374400; j++) _solve(b, j);
for(j = 375230; j < 375240; j++) _solve(b, j);
for(j = 376070; j < 376080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 376910; j < 376920; j++) _solve(b, j);
for(j = 377750; j < 377760; j++) _solve(b, j);
for(j = 378590; j < 378600; j++) _solve(b, j);
for(j = 379430; j < 379440; j++) _solve(b, j);
for(j = 380270; j < 380280; j++) _solve(b, j);
for(j = 381110; j < 381120; j++) _solve(b, j);
for(j = 381950; j < 381960; j++) _solve(b, j);
for(j = 382790; j < 382800; j++) _solve(b, j);
for(j = 383630; j < 383640; j++) _solve(b, j);
for(j = 384470; j < 384480; j++) _solve(b, j);
for(j = 385310; j < 385320; j++) _solve(b, j);
for(j = 386150; j < 386160; j++) _solve(b, j);
for(j = 386990; j < 387000; j++) _solve(b, j);
for(j = 387830; j < 387840; j++) _solve(b, j);
for(j = 388670; j < 388680; j++) _solve(b, j);
for(j = 389510; j < 389520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 390350; j < 390360; j++) _solve(b, j);
for(j = 391190; j < 391200; j++) _solve(b, j);
for(j = 392030; j < 392040; j++) _solve(b, j);
for(j = 392870; j < 392880; j++) _solve(b, j);
for(j = 393710; j < 393720; j++) _solve(b, j);
for(j = 394550; j < 394560; j++) _solve(b, j);
for(j = 395390; j < 395400; j++) _solve(b, j);
for(j = 396230; j < 396240; j++) _solve(b, j);
for(j = 397070; j < 397080; j++) _solve(b, j);
for(j = 397910; j < 397920; j++) _solve(b, j);
for(j = 398750; j < 398760; j++) _solve(b, j);
for(j = 399590; j < 399600; j++) _solve(b, j);
for(j = 400430; j < 400440; j++) _solve(b, j);
for(j = 401270; j < 401280; j++) _solve(b, j);
for(j = 402110; j < 402120; j++) _solve(b, j);
for(j = 402950; j < 402960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 403790; j < 403800; j++) _solve(b, j);
for(j = 404630; j < 404640; j++) _solve(b, j);
for(j = 405470; j < 405480; j++) _solve(b, j);
for(j = 406310; j < 406320; j++) _solve(b, j);
for(j = 407150; j < 407160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 337440; j < 337450; j++) _solve(b, j);
for(j = 338280; j < 338290; j++) _solve(b, j);
for(j = 339120; j < 339130; j++) _solve(b, j);
for(j = 339960; j < 339970; j++) _solve(b, j);
for(j = 340800; j < 340810; j++) _solve(b, j);
for(j = 341640; j < 341650; j++) _solve(b, j);
for(j = 342480; j < 342490; j++) _solve(b, j);
for(j = 343320; j < 343330; j++) _solve(b, j);
for(j = 344160; j < 344170; j++) _solve(b, j);
for(j = 345000; j < 345010; j++) _solve(b, j);
for(j = 345840; j < 345850; j++) _solve(b, j);
for(j = 346680; j < 346690; j++) _solve(b, j);
for(j = 347520; j < 347530; j++) _solve(b, j);
for(j = 348360; j < 348370; j++) _solve(b, j);
for(j = 349200; j < 349210; j++) _solve(b, j);
for(j = 350040; j < 350050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 350880; j < 350890; j++) _solve(b, j);
for(j = 351720; j < 351730; j++) _solve(b, j);
for(j = 352560; j < 352570; j++) _solve(b, j);
for(j = 353400; j < 353410; j++) _solve(b, j);
for(j = 354240; j < 354250; j++) _solve(b, j);
for(j = 355080; j < 355090; j++) _solve(b, j);
for(j = 355920; j < 355930; j++) _solve(b, j);
for(j = 356760; j < 356770; j++) _solve(b, j);
for(j = 357600; j < 357610; j++) _solve(b, j);
for(j = 358440; j < 358450; j++) _solve(b, j);
for(j = 359280; j < 359290; j++) _solve(b, j);
for(j = 360120; j < 360130; j++) _solve(b, j);
for(j = 360960; j < 360970; j++) _solve(b, j);
for(j = 361800; j < 361810; j++) _solve(b, j);
for(j = 362640; j < 362650; j++) _solve(b, j);
for(j = 363480; j < 363490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 364320; j < 364330; j++) _solve(b, j);
for(j = 365160; j < 365170; j++) _solve(b, j);
for(j = 366000; j < 366010; j++) _solve(b, j);
for(j = 366840; j < 366850; j++) _solve(b, j);
for(j = 367680; j < 367690; j++) _solve(b, j);
for(j = 368520; j < 368530; j++) _solve(b, j);
for(j = 369360; j < 369370; j++) _solve(b, j);
for(j = 370200; j < 370210; j++) _solve(b, j);
for(j = 371040; j < 371050; j++) _solve(b, j);
for(j = 371880; j < 371890; j++) _solve(b, j);
for(j = 372720; j < 372730; j++) _solve(b, j);
for(j = 373560; j < 373570; j++) _solve(b, j);
for(j = 374400; j < 374410; j++) _solve(b, j);
for(j = 375240; j < 375250; j++) _solve(b, j);
for(j = 376080; j < 376090; j++) _solve(b, j);
for(j = 376920; j < 376930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 377760; j < 377770; j++) _solve(b, j);
for(j = 378600; j < 378610; j++) _solve(b, j);
for(j = 379440; j < 379450; j++) _solve(b, j);
for(j = 380280; j < 380290; j++) _solve(b, j);
for(j = 381120; j < 381130; j++) _solve(b, j);
for(j = 381960; j < 381970; j++) _solve(b, j);
for(j = 382800; j < 382810; j++) _solve(b, j);
for(j = 383640; j < 383650; j++) _solve(b, j);
for(j = 384480; j < 384490; j++) _solve(b, j);
for(j = 385320; j < 385330; j++) _solve(b, j);
for(j = 386160; j < 386170; j++) _solve(b, j);
for(j = 387000; j < 387010; j++) _solve(b, j);
for(j = 387840; j < 387850; j++) _solve(b, j);
for(j = 388680; j < 388690; j++) _solve(b, j);
for(j = 389520; j < 389530; j++) _solve(b, j);
for(j = 390360; j < 390370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 391200; j < 391210; j++) _solve(b, j);
for(j = 392040; j < 392050; j++) _solve(b, j);
for(j = 392880; j < 392890; j++) _solve(b, j);
for(j = 393720; j < 393730; j++) _solve(b, j);
for(j = 394560; j < 394570; j++) _solve(b, j);
for(j = 395400; j < 395410; j++) _solve(b, j);
for(j = 396240; j < 396250; j++) _solve(b, j);
for(j = 397080; j < 397090; j++) _solve(b, j);
for(j = 397920; j < 397930; j++) _solve(b, j);
for(j = 398760; j < 398770; j++) _solve(b, j);
for(j = 399600; j < 399610; j++) _solve(b, j);
for(j = 400440; j < 400450; j++) _solve(b, j);
for(j = 401280; j < 401290; j++) _solve(b, j);
for(j = 402120; j < 402130; j++) _solve(b, j);
for(j = 402960; j < 402970; j++) _solve(b, j);
for(j = 403800; j < 403810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 404640; j < 404650; j++) _solve(b, j);
for(j = 405480; j < 405490; j++) _solve(b, j);
for(j = 406320; j < 406330; j++) _solve(b, j);
for(j = 407160; j < 407170; j++) _solve(b, j);
for(j = 408000; j < 408010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 338290; j < 338300; j++) _solve(b, j);
for(j = 339130; j < 339140; j++) _solve(b, j);
for(j = 339970; j < 339980; j++) _solve(b, j);
for(j = 340810; j < 340820; j++) _solve(b, j);
for(j = 341650; j < 341660; j++) _solve(b, j);
for(j = 342490; j < 342500; j++) _solve(b, j);
for(j = 343330; j < 343340; j++) _solve(b, j);
for(j = 344170; j < 344180; j++) _solve(b, j);
for(j = 345010; j < 345020; j++) _solve(b, j);
for(j = 345850; j < 345860; j++) _solve(b, j);
for(j = 346690; j < 346700; j++) _solve(b, j);
for(j = 347530; j < 347540; j++) _solve(b, j);
for(j = 348370; j < 348380; j++) _solve(b, j);
for(j = 349210; j < 349220; j++) _solve(b, j);
for(j = 350050; j < 350060; j++) _solve(b, j);
for(j = 350890; j < 350900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 351730; j < 351740; j++) _solve(b, j);
for(j = 352570; j < 352580; j++) _solve(b, j);
for(j = 353410; j < 353420; j++) _solve(b, j);
for(j = 354250; j < 354260; j++) _solve(b, j);
for(j = 355090; j < 355100; j++) _solve(b, j);
for(j = 355930; j < 355940; j++) _solve(b, j);
for(j = 356770; j < 356780; j++) _solve(b, j);
for(j = 357610; j < 357620; j++) _solve(b, j);
for(j = 358450; j < 358460; j++) _solve(b, j);
for(j = 359290; j < 359300; j++) _solve(b, j);
for(j = 360130; j < 360140; j++) _solve(b, j);
for(j = 360970; j < 360980; j++) _solve(b, j);
for(j = 361810; j < 361820; j++) _solve(b, j);
for(j = 362650; j < 362660; j++) _solve(b, j);
for(j = 363490; j < 363500; j++) _solve(b, j);
for(j = 364330; j < 364340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 365170; j < 365180; j++) _solve(b, j);
for(j = 366010; j < 366020; j++) _solve(b, j);
for(j = 366850; j < 366860; j++) _solve(b, j);
for(j = 367690; j < 367700; j++) _solve(b, j);
for(j = 368530; j < 368540; j++) _solve(b, j);
for(j = 369370; j < 369380; j++) _solve(b, j);
for(j = 370210; j < 370220; j++) _solve(b, j);
for(j = 371050; j < 371060; j++) _solve(b, j);
for(j = 371890; j < 371900; j++) _solve(b, j);
for(j = 372730; j < 372740; j++) _solve(b, j);
for(j = 373570; j < 373580; j++) _solve(b, j);
for(j = 374410; j < 374420; j++) _solve(b, j);
for(j = 375250; j < 375260; j++) _solve(b, j);
for(j = 376090; j < 376100; j++) _solve(b, j);
for(j = 376930; j < 376940; j++) _solve(b, j);
for(j = 377770; j < 377780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 378610; j < 378620; j++) _solve(b, j);
for(j = 379450; j < 379460; j++) _solve(b, j);
for(j = 380290; j < 380300; j++) _solve(b, j);
for(j = 381130; j < 381140; j++) _solve(b, j);
for(j = 381970; j < 381980; j++) _solve(b, j);
for(j = 382810; j < 382820; j++) _solve(b, j);
for(j = 383650; j < 383660; j++) _solve(b, j);
for(j = 384490; j < 384500; j++) _solve(b, j);
for(j = 385330; j < 385340; j++) _solve(b, j);
for(j = 386170; j < 386180; j++) _solve(b, j);
for(j = 387010; j < 387020; j++) _solve(b, j);
for(j = 387850; j < 387860; j++) _solve(b, j);
for(j = 388690; j < 388700; j++) _solve(b, j);
for(j = 389530; j < 389540; j++) _solve(b, j);
for(j = 390370; j < 390380; j++) _solve(b, j);
for(j = 391210; j < 391220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 392050; j < 392060; j++) _solve(b, j);
for(j = 392890; j < 392900; j++) _solve(b, j);
for(j = 393730; j < 393740; j++) _solve(b, j);
for(j = 394570; j < 394580; j++) _solve(b, j);
for(j = 395410; j < 395420; j++) _solve(b, j);
for(j = 396250; j < 396260; j++) _solve(b, j);
for(j = 397090; j < 397100; j++) _solve(b, j);
for(j = 397930; j < 397940; j++) _solve(b, j);
for(j = 398770; j < 398780; j++) _solve(b, j);
for(j = 399610; j < 399620; j++) _solve(b, j);
for(j = 400450; j < 400460; j++) _solve(b, j);
for(j = 401290; j < 401300; j++) _solve(b, j);
for(j = 402130; j < 402140; j++) _solve(b, j);
for(j = 402970; j < 402980; j++) _solve(b, j);
for(j = 403810; j < 403820; j++) _solve(b, j);
for(j = 404650; j < 404660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 405490; j < 405500; j++) _solve(b, j);
for(j = 406330; j < 406340; j++) _solve(b, j);
for(j = 407170; j < 407180; j++) _solve(b, j);
for(j = 408010; j < 408020; j++) _solve(b, j);
for(j = 408850; j < 408860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 339140; j < 339150; j++) _solve(b, j);
for(j = 339980; j < 339990; j++) _solve(b, j);
for(j = 340820; j < 340830; j++) _solve(b, j);
for(j = 341660; j < 341670; j++) _solve(b, j);
for(j = 342500; j < 342510; j++) _solve(b, j);
for(j = 343340; j < 343350; j++) _solve(b, j);
for(j = 344180; j < 344190; j++) _solve(b, j);
for(j = 345020; j < 345030; j++) _solve(b, j);
for(j = 345860; j < 345870; j++) _solve(b, j);
for(j = 346700; j < 346710; j++) _solve(b, j);
for(j = 347540; j < 347550; j++) _solve(b, j);
for(j = 348380; j < 348390; j++) _solve(b, j);
for(j = 349220; j < 349230; j++) _solve(b, j);
for(j = 350060; j < 350070; j++) _solve(b, j);
for(j = 350900; j < 350910; j++) _solve(b, j);
for(j = 351740; j < 351750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 352580; j < 352590; j++) _solve(b, j);
for(j = 353420; j < 353430; j++) _solve(b, j);
for(j = 354260; j < 354270; j++) _solve(b, j);
for(j = 355100; j < 355110; j++) _solve(b, j);
for(j = 355940; j < 355950; j++) _solve(b, j);
for(j = 356780; j < 356790; j++) _solve(b, j);
for(j = 357620; j < 357630; j++) _solve(b, j);
for(j = 358460; j < 358470; j++) _solve(b, j);
for(j = 359300; j < 359310; j++) _solve(b, j);
for(j = 360140; j < 360150; j++) _solve(b, j);
for(j = 360980; j < 360990; j++) _solve(b, j);
for(j = 361820; j < 361830; j++) _solve(b, j);
for(j = 362660; j < 362670; j++) _solve(b, j);
for(j = 363500; j < 363510; j++) _solve(b, j);
for(j = 364340; j < 364350; j++) _solve(b, j);
for(j = 365180; j < 365190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 366020; j < 366030; j++) _solve(b, j);
for(j = 366860; j < 366870; j++) _solve(b, j);
for(j = 367700; j < 367710; j++) _solve(b, j);
for(j = 368540; j < 368550; j++) _solve(b, j);
for(j = 369380; j < 369390; j++) _solve(b, j);
for(j = 370220; j < 370230; j++) _solve(b, j);
for(j = 371060; j < 371070; j++) _solve(b, j);
for(j = 371900; j < 371910; j++) _solve(b, j);
for(j = 372740; j < 372750; j++) _solve(b, j);
for(j = 373580; j < 373590; j++) _solve(b, j);
for(j = 374420; j < 374430; j++) _solve(b, j);
for(j = 375260; j < 375270; j++) _solve(b, j);
for(j = 376100; j < 376110; j++) _solve(b, j);
for(j = 376940; j < 376950; j++) _solve(b, j);
for(j = 377780; j < 377790; j++) _solve(b, j);
for(j = 378620; j < 378630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 379460; j < 379470; j++) _solve(b, j);
for(j = 380300; j < 380310; j++) _solve(b, j);
for(j = 381140; j < 381150; j++) _solve(b, j);
for(j = 381980; j < 381990; j++) _solve(b, j);
for(j = 382820; j < 382830; j++) _solve(b, j);
for(j = 383660; j < 383670; j++) _solve(b, j);
for(j = 384500; j < 384510; j++) _solve(b, j);
for(j = 385340; j < 385350; j++) _solve(b, j);
for(j = 386180; j < 386190; j++) _solve(b, j);
for(j = 387020; j < 387030; j++) _solve(b, j);
for(j = 387860; j < 387870; j++) _solve(b, j);
for(j = 388700; j < 388710; j++) _solve(b, j);
for(j = 389540; j < 389550; j++) _solve(b, j);
for(j = 390380; j < 390390; j++) _solve(b, j);
for(j = 391220; j < 391230; j++) _solve(b, j);
for(j = 392060; j < 392070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 392900; j < 392910; j++) _solve(b, j);
for(j = 393740; j < 393750; j++) _solve(b, j);
for(j = 394580; j < 394590; j++) _solve(b, j);
for(j = 395420; j < 395430; j++) _solve(b, j);
for(j = 396260; j < 396270; j++) _solve(b, j);
for(j = 397100; j < 397110; j++) _solve(b, j);
for(j = 397940; j < 397950; j++) _solve(b, j);
for(j = 398780; j < 398790; j++) _solve(b, j);
for(j = 399620; j < 399630; j++) _solve(b, j);
for(j = 400460; j < 400470; j++) _solve(b, j);
for(j = 401300; j < 401310; j++) _solve(b, j);
for(j = 402140; j < 402150; j++) _solve(b, j);
for(j = 402980; j < 402990; j++) _solve(b, j);
for(j = 403820; j < 403830; j++) _solve(b, j);
for(j = 404660; j < 404670; j++) _solve(b, j);
for(j = 405500; j < 405510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 406340; j < 406350; j++) _solve(b, j);
for(j = 407180; j < 407190; j++) _solve(b, j);
for(j = 408020; j < 408030; j++) _solve(b, j);
for(j = 408860; j < 408870; j++) _solve(b, j);
for(j = 409700; j < 409710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 339990; j < 340000; j++) _solve(b, j);
for(j = 340830; j < 340840; j++) _solve(b, j);
for(j = 341670; j < 341680; j++) _solve(b, j);
for(j = 342510; j < 342520; j++) _solve(b, j);
for(j = 343350; j < 343360; j++) _solve(b, j);
for(j = 344190; j < 344200; j++) _solve(b, j);
for(j = 345030; j < 345040; j++) _solve(b, j);
for(j = 345870; j < 345880; j++) _solve(b, j);
for(j = 346710; j < 346720; j++) _solve(b, j);
for(j = 347550; j < 347560; j++) _solve(b, j);
for(j = 348390; j < 348400; j++) _solve(b, j);
for(j = 349230; j < 349240; j++) _solve(b, j);
for(j = 350070; j < 350080; j++) _solve(b, j);
for(j = 350910; j < 350920; j++) _solve(b, j);
for(j = 351750; j < 351760; j++) _solve(b, j);
for(j = 352590; j < 352600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 353430; j < 353440; j++) _solve(b, j);
for(j = 354270; j < 354280; j++) _solve(b, j);
for(j = 355110; j < 355120; j++) _solve(b, j);
for(j = 355950; j < 355960; j++) _solve(b, j);
for(j = 356790; j < 356800; j++) _solve(b, j);
for(j = 357630; j < 357640; j++) _solve(b, j);
for(j = 358470; j < 358480; j++) _solve(b, j);
for(j = 359310; j < 359320; j++) _solve(b, j);
for(j = 360150; j < 360160; j++) _solve(b, j);
for(j = 360990; j < 361000; j++) _solve(b, j);
for(j = 361830; j < 361840; j++) _solve(b, j);
for(j = 362670; j < 362680; j++) _solve(b, j);
for(j = 363510; j < 363520; j++) _solve(b, j);
for(j = 364350; j < 364360; j++) _solve(b, j);
for(j = 365190; j < 365200; j++) _solve(b, j);
for(j = 366030; j < 366040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 366870; j < 366880; j++) _solve(b, j);
for(j = 367710; j < 367720; j++) _solve(b, j);
for(j = 368550; j < 368560; j++) _solve(b, j);
for(j = 369390; j < 369400; j++) _solve(b, j);
for(j = 370230; j < 370240; j++) _solve(b, j);
for(j = 371070; j < 371080; j++) _solve(b, j);
for(j = 371910; j < 371920; j++) _solve(b, j);
for(j = 372750; j < 372760; j++) _solve(b, j);
for(j = 373590; j < 373600; j++) _solve(b, j);
for(j = 374430; j < 374440; j++) _solve(b, j);
for(j = 375270; j < 375280; j++) _solve(b, j);
for(j = 376110; j < 376120; j++) _solve(b, j);
for(j = 376950; j < 376960; j++) _solve(b, j);
for(j = 377790; j < 377800; j++) _solve(b, j);
for(j = 378630; j < 378640; j++) _solve(b, j);
for(j = 379470; j < 379480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 380310; j < 380320; j++) _solve(b, j);
for(j = 381150; j < 381160; j++) _solve(b, j);
for(j = 381990; j < 382000; j++) _solve(b, j);
for(j = 382830; j < 382840; j++) _solve(b, j);
for(j = 383670; j < 383680; j++) _solve(b, j);
for(j = 384510; j < 384520; j++) _solve(b, j);
for(j = 385350; j < 385360; j++) _solve(b, j);
for(j = 386190; j < 386200; j++) _solve(b, j);
for(j = 387030; j < 387040; j++) _solve(b, j);
for(j = 387870; j < 387880; j++) _solve(b, j);
for(j = 388710; j < 388720; j++) _solve(b, j);
for(j = 389550; j < 389560; j++) _solve(b, j);
for(j = 390390; j < 390400; j++) _solve(b, j);
for(j = 391230; j < 391240; j++) _solve(b, j);
for(j = 392070; j < 392080; j++) _solve(b, j);
for(j = 392910; j < 392920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 393750; j < 393760; j++) _solve(b, j);
for(j = 394590; j < 394600; j++) _solve(b, j);
for(j = 395430; j < 395440; j++) _solve(b, j);
for(j = 396270; j < 396280; j++) _solve(b, j);
for(j = 397110; j < 397120; j++) _solve(b, j);
for(j = 397950; j < 397960; j++) _solve(b, j);
for(j = 398790; j < 398800; j++) _solve(b, j);
for(j = 399630; j < 399640; j++) _solve(b, j);
for(j = 400470; j < 400480; j++) _solve(b, j);
for(j = 401310; j < 401320; j++) _solve(b, j);
for(j = 402150; j < 402160; j++) _solve(b, j);
for(j = 402990; j < 403000; j++) _solve(b, j);
for(j = 403830; j < 403840; j++) _solve(b, j);
for(j = 404670; j < 404680; j++) _solve(b, j);
for(j = 405510; j < 405520; j++) _solve(b, j);
for(j = 406350; j < 406360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 407190; j < 407200; j++) _solve(b, j);
for(j = 408030; j < 408040; j++) _solve(b, j);
for(j = 408870; j < 408880; j++) _solve(b, j);
for(j = 409710; j < 409720; j++) _solve(b, j);
for(j = 410550; j < 410560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 340840; j < 340850; j++) _solve(b, j);
for(j = 341680; j < 341690; j++) _solve(b, j);
for(j = 342520; j < 342530; j++) _solve(b, j);
for(j = 343360; j < 343370; j++) _solve(b, j);
for(j = 344200; j < 344210; j++) _solve(b, j);
for(j = 345040; j < 345050; j++) _solve(b, j);
for(j = 345880; j < 345890; j++) _solve(b, j);
for(j = 346720; j < 346730; j++) _solve(b, j);
for(j = 347560; j < 347570; j++) _solve(b, j);
for(j = 348400; j < 348410; j++) _solve(b, j);
for(j = 349240; j < 349250; j++) _solve(b, j);
for(j = 350080; j < 350090; j++) _solve(b, j);
for(j = 350920; j < 350930; j++) _solve(b, j);
for(j = 351760; j < 351770; j++) _solve(b, j);
for(j = 352600; j < 352610; j++) _solve(b, j);
for(j = 353440; j < 353450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 354280; j < 354290; j++) _solve(b, j);
for(j = 355120; j < 355130; j++) _solve(b, j);
for(j = 355960; j < 355970; j++) _solve(b, j);
for(j = 356800; j < 356810; j++) _solve(b, j);
for(j = 357640; j < 357650; j++) _solve(b, j);
for(j = 358480; j < 358490; j++) _solve(b, j);
for(j = 359320; j < 359330; j++) _solve(b, j);
for(j = 360160; j < 360170; j++) _solve(b, j);
for(j = 361000; j < 361010; j++) _solve(b, j);
for(j = 361840; j < 361850; j++) _solve(b, j);
for(j = 362680; j < 362690; j++) _solve(b, j);
for(j = 363520; j < 363530; j++) _solve(b, j);
for(j = 364360; j < 364370; j++) _solve(b, j);
for(j = 365200; j < 365210; j++) _solve(b, j);
for(j = 366040; j < 366050; j++) _solve(b, j);
for(j = 366880; j < 366890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 367720; j < 367730; j++) _solve(b, j);
for(j = 368560; j < 368570; j++) _solve(b, j);
for(j = 369400; j < 369410; j++) _solve(b, j);
for(j = 370240; j < 370250; j++) _solve(b, j);
for(j = 371080; j < 371090; j++) _solve(b, j);
for(j = 371920; j < 371930; j++) _solve(b, j);
for(j = 372760; j < 372770; j++) _solve(b, j);
for(j = 373600; j < 373610; j++) _solve(b, j);
for(j = 374440; j < 374450; j++) _solve(b, j);
for(j = 375280; j < 375290; j++) _solve(b, j);
for(j = 376120; j < 376130; j++) _solve(b, j);
for(j = 376960; j < 376970; j++) _solve(b, j);
for(j = 377800; j < 377810; j++) _solve(b, j);
for(j = 378640; j < 378650; j++) _solve(b, j);
for(j = 379480; j < 379490; j++) _solve(b, j);
for(j = 380320; j < 380330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 381160; j < 381170; j++) _solve(b, j);
for(j = 382000; j < 382010; j++) _solve(b, j);
for(j = 382840; j < 382850; j++) _solve(b, j);
for(j = 383680; j < 383690; j++) _solve(b, j);
for(j = 384520; j < 384530; j++) _solve(b, j);
for(j = 385360; j < 385370; j++) _solve(b, j);
for(j = 386200; j < 386210; j++) _solve(b, j);
for(j = 387040; j < 387050; j++) _solve(b, j);
for(j = 387880; j < 387890; j++) _solve(b, j);
for(j = 388720; j < 388730; j++) _solve(b, j);
for(j = 389560; j < 389570; j++) _solve(b, j);
for(j = 390400; j < 390410; j++) _solve(b, j);
for(j = 391240; j < 391250; j++) _solve(b, j);
for(j = 392080; j < 392090; j++) _solve(b, j);
for(j = 392920; j < 392930; j++) _solve(b, j);
for(j = 393760; j < 393770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 394600; j < 394610; j++) _solve(b, j);
for(j = 395440; j < 395450; j++) _solve(b, j);
for(j = 396280; j < 396290; j++) _solve(b, j);
for(j = 397120; j < 397130; j++) _solve(b, j);
for(j = 397960; j < 397970; j++) _solve(b, j);
for(j = 398800; j < 398810; j++) _solve(b, j);
for(j = 399640; j < 399650; j++) _solve(b, j);
for(j = 400480; j < 400490; j++) _solve(b, j);
for(j = 401320; j < 401330; j++) _solve(b, j);
for(j = 402160; j < 402170; j++) _solve(b, j);
for(j = 403000; j < 403010; j++) _solve(b, j);
for(j = 403840; j < 403850; j++) _solve(b, j);
for(j = 404680; j < 404690; j++) _solve(b, j);
for(j = 405520; j < 405530; j++) _solve(b, j);
for(j = 406360; j < 406370; j++) _solve(b, j);
for(j = 407200; j < 407210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 408040; j < 408050; j++) _solve(b, j);
for(j = 408880; j < 408890; j++) _solve(b, j);
for(j = 409720; j < 409730; j++) _solve(b, j);
for(j = 410560; j < 410570; j++) _solve(b, j);
for(j = 411400; j < 411410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 341690; j < 341700; j++) _solve(b, j);
for(j = 342530; j < 342540; j++) _solve(b, j);
for(j = 343370; j < 343380; j++) _solve(b, j);
for(j = 344210; j < 344220; j++) _solve(b, j);
for(j = 345050; j < 345060; j++) _solve(b, j);
for(j = 345890; j < 345900; j++) _solve(b, j);
for(j = 346730; j < 346740; j++) _solve(b, j);
for(j = 347570; j < 347580; j++) _solve(b, j);
for(j = 348410; j < 348420; j++) _solve(b, j);
for(j = 349250; j < 349260; j++) _solve(b, j);
for(j = 350090; j < 350100; j++) _solve(b, j);
for(j = 350930; j < 350940; j++) _solve(b, j);
for(j = 351770; j < 351780; j++) _solve(b, j);
for(j = 352610; j < 352620; j++) _solve(b, j);
for(j = 353450; j < 353460; j++) _solve(b, j);
for(j = 354290; j < 354300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 355130; j < 355140; j++) _solve(b, j);
for(j = 355970; j < 355980; j++) _solve(b, j);
for(j = 356810; j < 356820; j++) _solve(b, j);
for(j = 357650; j < 357660; j++) _solve(b, j);
for(j = 358490; j < 358500; j++) _solve(b, j);
for(j = 359330; j < 359340; j++) _solve(b, j);
for(j = 360170; j < 360180; j++) _solve(b, j);
for(j = 361010; j < 361020; j++) _solve(b, j);
for(j = 361850; j < 361860; j++) _solve(b, j);
for(j = 362690; j < 362700; j++) _solve(b, j);
for(j = 363530; j < 363540; j++) _solve(b, j);
for(j = 364370; j < 364380; j++) _solve(b, j);
for(j = 365210; j < 365220; j++) _solve(b, j);
for(j = 366050; j < 366060; j++) _solve(b, j);
for(j = 366890; j < 366900; j++) _solve(b, j);
for(j = 367730; j < 367740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 368570; j < 368580; j++) _solve(b, j);
for(j = 369410; j < 369420; j++) _solve(b, j);
for(j = 370250; j < 370260; j++) _solve(b, j);
for(j = 371090; j < 371100; j++) _solve(b, j);
for(j = 371930; j < 371940; j++) _solve(b, j);
for(j = 372770; j < 372780; j++) _solve(b, j);
for(j = 373610; j < 373620; j++) _solve(b, j);
for(j = 374450; j < 374460; j++) _solve(b, j);
for(j = 375290; j < 375300; j++) _solve(b, j);
for(j = 376130; j < 376140; j++) _solve(b, j);
for(j = 376970; j < 376980; j++) _solve(b, j);
for(j = 377810; j < 377820; j++) _solve(b, j);
for(j = 378650; j < 378660; j++) _solve(b, j);
for(j = 379490; j < 379500; j++) _solve(b, j);
for(j = 380330; j < 380340; j++) _solve(b, j);
for(j = 381170; j < 381180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 382010; j < 382020; j++) _solve(b, j);
for(j = 382850; j < 382860; j++) _solve(b, j);
for(j = 383690; j < 383700; j++) _solve(b, j);
for(j = 384530; j < 384540; j++) _solve(b, j);
for(j = 385370; j < 385380; j++) _solve(b, j);
for(j = 386210; j < 386220; j++) _solve(b, j);
for(j = 387050; j < 387060; j++) _solve(b, j);
for(j = 387890; j < 387900; j++) _solve(b, j);
for(j = 388730; j < 388740; j++) _solve(b, j);
for(j = 389570; j < 389580; j++) _solve(b, j);
for(j = 390410; j < 390420; j++) _solve(b, j);
for(j = 391250; j < 391260; j++) _solve(b, j);
for(j = 392090; j < 392100; j++) _solve(b, j);
for(j = 392930; j < 392940; j++) _solve(b, j);
for(j = 393770; j < 393780; j++) _solve(b, j);
for(j = 394610; j < 394620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 395450; j < 395460; j++) _solve(b, j);
for(j = 396290; j < 396300; j++) _solve(b, j);
for(j = 397130; j < 397140; j++) _solve(b, j);
for(j = 397970; j < 397980; j++) _solve(b, j);
for(j = 398810; j < 398820; j++) _solve(b, j);
for(j = 399650; j < 399660; j++) _solve(b, j);
for(j = 400490; j < 400500; j++) _solve(b, j);
for(j = 401330; j < 401340; j++) _solve(b, j);
for(j = 402170; j < 402180; j++) _solve(b, j);
for(j = 403010; j < 403020; j++) _solve(b, j);
for(j = 403850; j < 403860; j++) _solve(b, j);
for(j = 404690; j < 404700; j++) _solve(b, j);
for(j = 405530; j < 405540; j++) _solve(b, j);
for(j = 406370; j < 406380; j++) _solve(b, j);
for(j = 407210; j < 407220; j++) _solve(b, j);
for(j = 408050; j < 408060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 408890; j < 408900; j++) _solve(b, j);
for(j = 409730; j < 409740; j++) _solve(b, j);
for(j = 410570; j < 410580; j++) _solve(b, j);
for(j = 411410; j < 411420; j++) _solve(b, j);
for(j = 412250; j < 412260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 342540; j < 342550; j++) _solve(b, j);
for(j = 343380; j < 343390; j++) _solve(b, j);
for(j = 344220; j < 344230; j++) _solve(b, j);
for(j = 345060; j < 345070; j++) _solve(b, j);
for(j = 345900; j < 345910; j++) _solve(b, j);
for(j = 346740; j < 346750; j++) _solve(b, j);
for(j = 347580; j < 347590; j++) _solve(b, j);
for(j = 348420; j < 348430; j++) _solve(b, j);
for(j = 349260; j < 349270; j++) _solve(b, j);
for(j = 350100; j < 350110; j++) _solve(b, j);
for(j = 350940; j < 350950; j++) _solve(b, j);
for(j = 351780; j < 351790; j++) _solve(b, j);
for(j = 352620; j < 352630; j++) _solve(b, j);
for(j = 353460; j < 353470; j++) _solve(b, j);
for(j = 354300; j < 354310; j++) _solve(b, j);
for(j = 355140; j < 355150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 355980; j < 355990; j++) _solve(b, j);
for(j = 356820; j < 356830; j++) _solve(b, j);
for(j = 357660; j < 357670; j++) _solve(b, j);
for(j = 358500; j < 358510; j++) _solve(b, j);
for(j = 359340; j < 359350; j++) _solve(b, j);
for(j = 360180; j < 360190; j++) _solve(b, j);
for(j = 361020; j < 361030; j++) _solve(b, j);
for(j = 361860; j < 361870; j++) _solve(b, j);
for(j = 362700; j < 362710; j++) _solve(b, j);
for(j = 363540; j < 363550; j++) _solve(b, j);
for(j = 364380; j < 364390; j++) _solve(b, j);
for(j = 365220; j < 365230; j++) _solve(b, j);
for(j = 366060; j < 366070; j++) _solve(b, j);
for(j = 366900; j < 366910; j++) _solve(b, j);
for(j = 367740; j < 367750; j++) _solve(b, j);
for(j = 368580; j < 368590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 369420; j < 369430; j++) _solve(b, j);
for(j = 370260; j < 370270; j++) _solve(b, j);
for(j = 371100; j < 371110; j++) _solve(b, j);
for(j = 371940; j < 371950; j++) _solve(b, j);
for(j = 372780; j < 372790; j++) _solve(b, j);
for(j = 373620; j < 373630; j++) _solve(b, j);
for(j = 374460; j < 374470; j++) _solve(b, j);
for(j = 375300; j < 375310; j++) _solve(b, j);
for(j = 376140; j < 376150; j++) _solve(b, j);
for(j = 376980; j < 376990; j++) _solve(b, j);
for(j = 377820; j < 377830; j++) _solve(b, j);
for(j = 378660; j < 378670; j++) _solve(b, j);
for(j = 379500; j < 379510; j++) _solve(b, j);
for(j = 380340; j < 380350; j++) _solve(b, j);
for(j = 381180; j < 381190; j++) _solve(b, j);
for(j = 382020; j < 382030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 382860; j < 382870; j++) _solve(b, j);
for(j = 383700; j < 383710; j++) _solve(b, j);
for(j = 384540; j < 384550; j++) _solve(b, j);
for(j = 385380; j < 385390; j++) _solve(b, j);
for(j = 386220; j < 386230; j++) _solve(b, j);
for(j = 387060; j < 387070; j++) _solve(b, j);
for(j = 387900; j < 387910; j++) _solve(b, j);
for(j = 388740; j < 388750; j++) _solve(b, j);
for(j = 389580; j < 389590; j++) _solve(b, j);
for(j = 390420; j < 390430; j++) _solve(b, j);
for(j = 391260; j < 391270; j++) _solve(b, j);
for(j = 392100; j < 392110; j++) _solve(b, j);
for(j = 392940; j < 392950; j++) _solve(b, j);
for(j = 393780; j < 393790; j++) _solve(b, j);
for(j = 394620; j < 394630; j++) _solve(b, j);
for(j = 395460; j < 395470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 396300; j < 396310; j++) _solve(b, j);
for(j = 397140; j < 397150; j++) _solve(b, j);
for(j = 397980; j < 397990; j++) _solve(b, j);
for(j = 398820; j < 398830; j++) _solve(b, j);
for(j = 399660; j < 399670; j++) _solve(b, j);
for(j = 400500; j < 400510; j++) _solve(b, j);
for(j = 401340; j < 401350; j++) _solve(b, j);
for(j = 402180; j < 402190; j++) _solve(b, j);
for(j = 403020; j < 403030; j++) _solve(b, j);
for(j = 403860; j < 403870; j++) _solve(b, j);
for(j = 404700; j < 404710; j++) _solve(b, j);
for(j = 405540; j < 405550; j++) _solve(b, j);
for(j = 406380; j < 406390; j++) _solve(b, j);
for(j = 407220; j < 407230; j++) _solve(b, j);
for(j = 408060; j < 408070; j++) _solve(b, j);
for(j = 408900; j < 408910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 409740; j < 409750; j++) _solve(b, j);
for(j = 410580; j < 410590; j++) _solve(b, j);
for(j = 411420; j < 411430; j++) _solve(b, j);
for(j = 412260; j < 412270; j++) _solve(b, j);
for(j = 413100; j < 413110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 343390; j < 343400; j++) _solve(b, j);
for(j = 344230; j < 344240; j++) _solve(b, j);
for(j = 345070; j < 345080; j++) _solve(b, j);
for(j = 345910; j < 345920; j++) _solve(b, j);
for(j = 346750; j < 346760; j++) _solve(b, j);
for(j = 347590; j < 347600; j++) _solve(b, j);
for(j = 348430; j < 348440; j++) _solve(b, j);
for(j = 349270; j < 349280; j++) _solve(b, j);
for(j = 350110; j < 350120; j++) _solve(b, j);
for(j = 350950; j < 350960; j++) _solve(b, j);
for(j = 351790; j < 351800; j++) _solve(b, j);
for(j = 352630; j < 352640; j++) _solve(b, j);
for(j = 353470; j < 353480; j++) _solve(b, j);
for(j = 354310; j < 354320; j++) _solve(b, j);
for(j = 355150; j < 355160; j++) _solve(b, j);
for(j = 355990; j < 356000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 356830; j < 356840; j++) _solve(b, j);
for(j = 357670; j < 357680; j++) _solve(b, j);
for(j = 358510; j < 358520; j++) _solve(b, j);
for(j = 359350; j < 359360; j++) _solve(b, j);
for(j = 360190; j < 360200; j++) _solve(b, j);
for(j = 361030; j < 361040; j++) _solve(b, j);
for(j = 361870; j < 361880; j++) _solve(b, j);
for(j = 362710; j < 362720; j++) _solve(b, j);
for(j = 363550; j < 363560; j++) _solve(b, j);
for(j = 364390; j < 364400; j++) _solve(b, j);
for(j = 365230; j < 365240; j++) _solve(b, j);
for(j = 366070; j < 366080; j++) _solve(b, j);
for(j = 366910; j < 366920; j++) _solve(b, j);
for(j = 367750; j < 367760; j++) _solve(b, j);
for(j = 368590; j < 368600; j++) _solve(b, j);
for(j = 369430; j < 369440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 370270; j < 370280; j++) _solve(b, j);
for(j = 371110; j < 371120; j++) _solve(b, j);
for(j = 371950; j < 371960; j++) _solve(b, j);
for(j = 372790; j < 372800; j++) _solve(b, j);
for(j = 373630; j < 373640; j++) _solve(b, j);
for(j = 374470; j < 374480; j++) _solve(b, j);
for(j = 375310; j < 375320; j++) _solve(b, j);
for(j = 376150; j < 376160; j++) _solve(b, j);
for(j = 376990; j < 377000; j++) _solve(b, j);
for(j = 377830; j < 377840; j++) _solve(b, j);
for(j = 378670; j < 378680; j++) _solve(b, j);
for(j = 379510; j < 379520; j++) _solve(b, j);
for(j = 380350; j < 380360; j++) _solve(b, j);
for(j = 381190; j < 381200; j++) _solve(b, j);
for(j = 382030; j < 382040; j++) _solve(b, j);
for(j = 382870; j < 382880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 383710; j < 383720; j++) _solve(b, j);
for(j = 384550; j < 384560; j++) _solve(b, j);
for(j = 385390; j < 385400; j++) _solve(b, j);
for(j = 386230; j < 386240; j++) _solve(b, j);
for(j = 387070; j < 387080; j++) _solve(b, j);
for(j = 387910; j < 387920; j++) _solve(b, j);
for(j = 388750; j < 388760; j++) _solve(b, j);
for(j = 389590; j < 389600; j++) _solve(b, j);
for(j = 390430; j < 390440; j++) _solve(b, j);
for(j = 391270; j < 391280; j++) _solve(b, j);
for(j = 392110; j < 392120; j++) _solve(b, j);
for(j = 392950; j < 392960; j++) _solve(b, j);
for(j = 393790; j < 393800; j++) _solve(b, j);
for(j = 394630; j < 394640; j++) _solve(b, j);
for(j = 395470; j < 395480; j++) _solve(b, j);
for(j = 396310; j < 396320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 397150; j < 397160; j++) _solve(b, j);
for(j = 397990; j < 398000; j++) _solve(b, j);
for(j = 398830; j < 398840; j++) _solve(b, j);
for(j = 399670; j < 399680; j++) _solve(b, j);
for(j = 400510; j < 400520; j++) _solve(b, j);
for(j = 401350; j < 401360; j++) _solve(b, j);
for(j = 402190; j < 402200; j++) _solve(b, j);
for(j = 403030; j < 403040; j++) _solve(b, j);
for(j = 403870; j < 403880; j++) _solve(b, j);
for(j = 404710; j < 404720; j++) _solve(b, j);
for(j = 405550; j < 405560; j++) _solve(b, j);
for(j = 406390; j < 406400; j++) _solve(b, j);
for(j = 407230; j < 407240; j++) _solve(b, j);
for(j = 408070; j < 408080; j++) _solve(b, j);
for(j = 408910; j < 408920; j++) _solve(b, j);
for(j = 409750; j < 409760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 410590; j < 410600; j++) _solve(b, j);
for(j = 411430; j < 411440; j++) _solve(b, j);
for(j = 412270; j < 412280; j++) _solve(b, j);
for(j = 413110; j < 413120; j++) _solve(b, j);
for(j = 413950; j < 413960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 344240; j < 344250; j++) _solve(b, j);
for(j = 345080; j < 345090; j++) _solve(b, j);
for(j = 345920; j < 345930; j++) _solve(b, j);
for(j = 346760; j < 346770; j++) _solve(b, j);
for(j = 347600; j < 347610; j++) _solve(b, j);
for(j = 348440; j < 348450; j++) _solve(b, j);
for(j = 349280; j < 349290; j++) _solve(b, j);
for(j = 350120; j < 350130; j++) _solve(b, j);
for(j = 350960; j < 350970; j++) _solve(b, j);
for(j = 351800; j < 351810; j++) _solve(b, j);
for(j = 352640; j < 352650; j++) _solve(b, j);
for(j = 353480; j < 353490; j++) _solve(b, j);
for(j = 354320; j < 354330; j++) _solve(b, j);
for(j = 355160; j < 355170; j++) _solve(b, j);
for(j = 356000; j < 356010; j++) _solve(b, j);
for(j = 356840; j < 356850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 357680; j < 357690; j++) _solve(b, j);
for(j = 358520; j < 358530; j++) _solve(b, j);
for(j = 359360; j < 359370; j++) _solve(b, j);
for(j = 360200; j < 360210; j++) _solve(b, j);
for(j = 361040; j < 361050; j++) _solve(b, j);
for(j = 361880; j < 361890; j++) _solve(b, j);
for(j = 362720; j < 362730; j++) _solve(b, j);
for(j = 363560; j < 363570; j++) _solve(b, j);
for(j = 364400; j < 364410; j++) _solve(b, j);
for(j = 365240; j < 365250; j++) _solve(b, j);
for(j = 366080; j < 366090; j++) _solve(b, j);
for(j = 366920; j < 366930; j++) _solve(b, j);
for(j = 367760; j < 367770; j++) _solve(b, j);
for(j = 368600; j < 368610; j++) _solve(b, j);
for(j = 369440; j < 369450; j++) _solve(b, j);
for(j = 370280; j < 370290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 371120; j < 371130; j++) _solve(b, j);
for(j = 371960; j < 371970; j++) _solve(b, j);
for(j = 372800; j < 372810; j++) _solve(b, j);
for(j = 373640; j < 373650; j++) _solve(b, j);
for(j = 374480; j < 374490; j++) _solve(b, j);
for(j = 375320; j < 375330; j++) _solve(b, j);
for(j = 376160; j < 376170; j++) _solve(b, j);
for(j = 377000; j < 377010; j++) _solve(b, j);
for(j = 377840; j < 377850; j++) _solve(b, j);
for(j = 378680; j < 378690; j++) _solve(b, j);
for(j = 379520; j < 379530; j++) _solve(b, j);
for(j = 380360; j < 380370; j++) _solve(b, j);
for(j = 381200; j < 381210; j++) _solve(b, j);
for(j = 382040; j < 382050; j++) _solve(b, j);
for(j = 382880; j < 382890; j++) _solve(b, j);
for(j = 383720; j < 383730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 384560; j < 384570; j++) _solve(b, j);
for(j = 385400; j < 385410; j++) _solve(b, j);
for(j = 386240; j < 386250; j++) _solve(b, j);
for(j = 387080; j < 387090; j++) _solve(b, j);
for(j = 387920; j < 387930; j++) _solve(b, j);
for(j = 388760; j < 388770; j++) _solve(b, j);
for(j = 389600; j < 389610; j++) _solve(b, j);
for(j = 390440; j < 390450; j++) _solve(b, j);
for(j = 391280; j < 391290; j++) _solve(b, j);
for(j = 392120; j < 392130; j++) _solve(b, j);
for(j = 392960; j < 392970; j++) _solve(b, j);
for(j = 393800; j < 393810; j++) _solve(b, j);
for(j = 394640; j < 394650; j++) _solve(b, j);
for(j = 395480; j < 395490; j++) _solve(b, j);
for(j = 396320; j < 396330; j++) _solve(b, j);
for(j = 397160; j < 397170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 398000; j < 398010; j++) _solve(b, j);
for(j = 398840; j < 398850; j++) _solve(b, j);
for(j = 399680; j < 399690; j++) _solve(b, j);
for(j = 400520; j < 400530; j++) _solve(b, j);
for(j = 401360; j < 401370; j++) _solve(b, j);
for(j = 402200; j < 402210; j++) _solve(b, j);
for(j = 403040; j < 403050; j++) _solve(b, j);
for(j = 403880; j < 403890; j++) _solve(b, j);
for(j = 404720; j < 404730; j++) _solve(b, j);
for(j = 405560; j < 405570; j++) _solve(b, j);
for(j = 406400; j < 406410; j++) _solve(b, j);
for(j = 407240; j < 407250; j++) _solve(b, j);
for(j = 408080; j < 408090; j++) _solve(b, j);
for(j = 408920; j < 408930; j++) _solve(b, j);
for(j = 409760; j < 409770; j++) _solve(b, j);
for(j = 410600; j < 410610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 411440; j < 411450; j++) _solve(b, j);
for(j = 412280; j < 412290; j++) _solve(b, j);
for(j = 413120; j < 413130; j++) _solve(b, j);
for(j = 413960; j < 413970; j++) _solve(b, j);
for(j = 414800; j < 414810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 345090; j < 345100; j++) _solve(b, j);
for(j = 345930; j < 345940; j++) _solve(b, j);
for(j = 346770; j < 346780; j++) _solve(b, j);
for(j = 347610; j < 347620; j++) _solve(b, j);
for(j = 348450; j < 348460; j++) _solve(b, j);
for(j = 349290; j < 349300; j++) _solve(b, j);
for(j = 350130; j < 350140; j++) _solve(b, j);
for(j = 350970; j < 350980; j++) _solve(b, j);
for(j = 351810; j < 351820; j++) _solve(b, j);
for(j = 352650; j < 352660; j++) _solve(b, j);
for(j = 353490; j < 353500; j++) _solve(b, j);
for(j = 354330; j < 354340; j++) _solve(b, j);
for(j = 355170; j < 355180; j++) _solve(b, j);
for(j = 356010; j < 356020; j++) _solve(b, j);
for(j = 356850; j < 356860; j++) _solve(b, j);
for(j = 357690; j < 357700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 358530; j < 358540; j++) _solve(b, j);
for(j = 359370; j < 359380; j++) _solve(b, j);
for(j = 360210; j < 360220; j++) _solve(b, j);
for(j = 361050; j < 361060; j++) _solve(b, j);
for(j = 361890; j < 361900; j++) _solve(b, j);
for(j = 362730; j < 362740; j++) _solve(b, j);
for(j = 363570; j < 363580; j++) _solve(b, j);
for(j = 364410; j < 364420; j++) _solve(b, j);
for(j = 365250; j < 365260; j++) _solve(b, j);
for(j = 366090; j < 366100; j++) _solve(b, j);
for(j = 366930; j < 366940; j++) _solve(b, j);
for(j = 367770; j < 367780; j++) _solve(b, j);
for(j = 368610; j < 368620; j++) _solve(b, j);
for(j = 369450; j < 369460; j++) _solve(b, j);
for(j = 370290; j < 370300; j++) _solve(b, j);
for(j = 371130; j < 371140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 371970; j < 371980; j++) _solve(b, j);
for(j = 372810; j < 372820; j++) _solve(b, j);
for(j = 373650; j < 373660; j++) _solve(b, j);
for(j = 374490; j < 374500; j++) _solve(b, j);
for(j = 375330; j < 375340; j++) _solve(b, j);
for(j = 376170; j < 376180; j++) _solve(b, j);
for(j = 377010; j < 377020; j++) _solve(b, j);
for(j = 377850; j < 377860; j++) _solve(b, j);
for(j = 378690; j < 378700; j++) _solve(b, j);
for(j = 379530; j < 379540; j++) _solve(b, j);
for(j = 380370; j < 380380; j++) _solve(b, j);
for(j = 381210; j < 381220; j++) _solve(b, j);
for(j = 382050; j < 382060; j++) _solve(b, j);
for(j = 382890; j < 382900; j++) _solve(b, j);
for(j = 383730; j < 383740; j++) _solve(b, j);
for(j = 384570; j < 384580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 385410; j < 385420; j++) _solve(b, j);
for(j = 386250; j < 386260; j++) _solve(b, j);
for(j = 387090; j < 387100; j++) _solve(b, j);
for(j = 387930; j < 387940; j++) _solve(b, j);
for(j = 388770; j < 388780; j++) _solve(b, j);
for(j = 389610; j < 389620; j++) _solve(b, j);
for(j = 390450; j < 390460; j++) _solve(b, j);
for(j = 391290; j < 391300; j++) _solve(b, j);
for(j = 392130; j < 392140; j++) _solve(b, j);
for(j = 392970; j < 392980; j++) _solve(b, j);
for(j = 393810; j < 393820; j++) _solve(b, j);
for(j = 394650; j < 394660; j++) _solve(b, j);
for(j = 395490; j < 395500; j++) _solve(b, j);
for(j = 396330; j < 396340; j++) _solve(b, j);
for(j = 397170; j < 397180; j++) _solve(b, j);
for(j = 398010; j < 398020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 398850; j < 398860; j++) _solve(b, j);
for(j = 399690; j < 399700; j++) _solve(b, j);
for(j = 400530; j < 400540; j++) _solve(b, j);
for(j = 401370; j < 401380; j++) _solve(b, j);
for(j = 402210; j < 402220; j++) _solve(b, j);
for(j = 403050; j < 403060; j++) _solve(b, j);
for(j = 403890; j < 403900; j++) _solve(b, j);
for(j = 404730; j < 404740; j++) _solve(b, j);
for(j = 405570; j < 405580; j++) _solve(b, j);
for(j = 406410; j < 406420; j++) _solve(b, j);
for(j = 407250; j < 407260; j++) _solve(b, j);
for(j = 408090; j < 408100; j++) _solve(b, j);
for(j = 408930; j < 408940; j++) _solve(b, j);
for(j = 409770; j < 409780; j++) _solve(b, j);
for(j = 410610; j < 410620; j++) _solve(b, j);
for(j = 411450; j < 411460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 412290; j < 412300; j++) _solve(b, j);
for(j = 413130; j < 413140; j++) _solve(b, j);
for(j = 413970; j < 413980; j++) _solve(b, j);
for(j = 414810; j < 414820; j++) _solve(b, j);
for(j = 415650; j < 415660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 345940; j < 345950; j++) _solve(b, j);
for(j = 346780; j < 346790; j++) _solve(b, j);
for(j = 347620; j < 347630; j++) _solve(b, j);
for(j = 348460; j < 348470; j++) _solve(b, j);
for(j = 349300; j < 349310; j++) _solve(b, j);
for(j = 350140; j < 350150; j++) _solve(b, j);
for(j = 350980; j < 350990; j++) _solve(b, j);
for(j = 351820; j < 351830; j++) _solve(b, j);
for(j = 352660; j < 352670; j++) _solve(b, j);
for(j = 353500; j < 353510; j++) _solve(b, j);
for(j = 354340; j < 354350; j++) _solve(b, j);
for(j = 355180; j < 355190; j++) _solve(b, j);
for(j = 356020; j < 356030; j++) _solve(b, j);
for(j = 356860; j < 356870; j++) _solve(b, j);
for(j = 357700; j < 357710; j++) _solve(b, j);
for(j = 358540; j < 358550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 359380; j < 359390; j++) _solve(b, j);
for(j = 360220; j < 360230; j++) _solve(b, j);
for(j = 361060; j < 361070; j++) _solve(b, j);
for(j = 361900; j < 361910; j++) _solve(b, j);
for(j = 362740; j < 362750; j++) _solve(b, j);
for(j = 363580; j < 363590; j++) _solve(b, j);
for(j = 364420; j < 364430; j++) _solve(b, j);
for(j = 365260; j < 365270; j++) _solve(b, j);
for(j = 366100; j < 366110; j++) _solve(b, j);
for(j = 366940; j < 366950; j++) _solve(b, j);
for(j = 367780; j < 367790; j++) _solve(b, j);
for(j = 368620; j < 368630; j++) _solve(b, j);
for(j = 369460; j < 369470; j++) _solve(b, j);
for(j = 370300; j < 370310; j++) _solve(b, j);
for(j = 371140; j < 371150; j++) _solve(b, j);
for(j = 371980; j < 371990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 372820; j < 372830; j++) _solve(b, j);
for(j = 373660; j < 373670; j++) _solve(b, j);
for(j = 374500; j < 374510; j++) _solve(b, j);
for(j = 375340; j < 375350; j++) _solve(b, j);
for(j = 376180; j < 376190; j++) _solve(b, j);
for(j = 377020; j < 377030; j++) _solve(b, j);
for(j = 377860; j < 377870; j++) _solve(b, j);
for(j = 378700; j < 378710; j++) _solve(b, j);
for(j = 379540; j < 379550; j++) _solve(b, j);
for(j = 380380; j < 380390; j++) _solve(b, j);
for(j = 381220; j < 381230; j++) _solve(b, j);
for(j = 382060; j < 382070; j++) _solve(b, j);
for(j = 382900; j < 382910; j++) _solve(b, j);
for(j = 383740; j < 383750; j++) _solve(b, j);
for(j = 384580; j < 384590; j++) _solve(b, j);
for(j = 385420; j < 385430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 386260; j < 386270; j++) _solve(b, j);
for(j = 387100; j < 387110; j++) _solve(b, j);
for(j = 387940; j < 387950; j++) _solve(b, j);
for(j = 388780; j < 388790; j++) _solve(b, j);
for(j = 389620; j < 389630; j++) _solve(b, j);
for(j = 390460; j < 390470; j++) _solve(b, j);
for(j = 391300; j < 391310; j++) _solve(b, j);
for(j = 392140; j < 392150; j++) _solve(b, j);
for(j = 392980; j < 392990; j++) _solve(b, j);
for(j = 393820; j < 393830; j++) _solve(b, j);
for(j = 394660; j < 394670; j++) _solve(b, j);
for(j = 395500; j < 395510; j++) _solve(b, j);
for(j = 396340; j < 396350; j++) _solve(b, j);
for(j = 397180; j < 397190; j++) _solve(b, j);
for(j = 398020; j < 398030; j++) _solve(b, j);
for(j = 398860; j < 398870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 399700; j < 399710; j++) _solve(b, j);
for(j = 400540; j < 400550; j++) _solve(b, j);
for(j = 401380; j < 401390; j++) _solve(b, j);
for(j = 402220; j < 402230; j++) _solve(b, j);
for(j = 403060; j < 403070; j++) _solve(b, j);
for(j = 403900; j < 403910; j++) _solve(b, j);
for(j = 404740; j < 404750; j++) _solve(b, j);
for(j = 405580; j < 405590; j++) _solve(b, j);
for(j = 406420; j < 406430; j++) _solve(b, j);
for(j = 407260; j < 407270; j++) _solve(b, j);
for(j = 408100; j < 408110; j++) _solve(b, j);
for(j = 408940; j < 408950; j++) _solve(b, j);
for(j = 409780; j < 409790; j++) _solve(b, j);
for(j = 410620; j < 410630; j++) _solve(b, j);
for(j = 411460; j < 411470; j++) _solve(b, j);
for(j = 412300; j < 412310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 413140; j < 413150; j++) _solve(b, j);
for(j = 413980; j < 413990; j++) _solve(b, j);
for(j = 414820; j < 414830; j++) _solve(b, j);
for(j = 415660; j < 415670; j++) _solve(b, j);
for(j = 416500; j < 416510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 346790; j < 346800; j++) _solve(b, j);
for(j = 347630; j < 347640; j++) _solve(b, j);
for(j = 348470; j < 348480; j++) _solve(b, j);
for(j = 349310; j < 349320; j++) _solve(b, j);
for(j = 350150; j < 350160; j++) _solve(b, j);
for(j = 350990; j < 351000; j++) _solve(b, j);
for(j = 351830; j < 351840; j++) _solve(b, j);
for(j = 352670; j < 352680; j++) _solve(b, j);
for(j = 353510; j < 353520; j++) _solve(b, j);
for(j = 354350; j < 354360; j++) _solve(b, j);
for(j = 355190; j < 355200; j++) _solve(b, j);
for(j = 356030; j < 356040; j++) _solve(b, j);
for(j = 356870; j < 356880; j++) _solve(b, j);
for(j = 357710; j < 357720; j++) _solve(b, j);
for(j = 358550; j < 358560; j++) _solve(b, j);
for(j = 359390; j < 359400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 360230; j < 360240; j++) _solve(b, j);
for(j = 361070; j < 361080; j++) _solve(b, j);
for(j = 361910; j < 361920; j++) _solve(b, j);
for(j = 362750; j < 362760; j++) _solve(b, j);
for(j = 363590; j < 363600; j++) _solve(b, j);
for(j = 364430; j < 364440; j++) _solve(b, j);
for(j = 365270; j < 365280; j++) _solve(b, j);
for(j = 366110; j < 366120; j++) _solve(b, j);
for(j = 366950; j < 366960; j++) _solve(b, j);
for(j = 367790; j < 367800; j++) _solve(b, j);
for(j = 368630; j < 368640; j++) _solve(b, j);
for(j = 369470; j < 369480; j++) _solve(b, j);
for(j = 370310; j < 370320; j++) _solve(b, j);
for(j = 371150; j < 371160; j++) _solve(b, j);
for(j = 371990; j < 372000; j++) _solve(b, j);
for(j = 372830; j < 372840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 373670; j < 373680; j++) _solve(b, j);
for(j = 374510; j < 374520; j++) _solve(b, j);
for(j = 375350; j < 375360; j++) _solve(b, j);
for(j = 376190; j < 376200; j++) _solve(b, j);
for(j = 377030; j < 377040; j++) _solve(b, j);
for(j = 377870; j < 377880; j++) _solve(b, j);
for(j = 378710; j < 378720; j++) _solve(b, j);
for(j = 379550; j < 379560; j++) _solve(b, j);
for(j = 380390; j < 380400; j++) _solve(b, j);
for(j = 381230; j < 381240; j++) _solve(b, j);
for(j = 382070; j < 382080; j++) _solve(b, j);
for(j = 382910; j < 382920; j++) _solve(b, j);
for(j = 383750; j < 383760; j++) _solve(b, j);
for(j = 384590; j < 384600; j++) _solve(b, j);
for(j = 385430; j < 385440; j++) _solve(b, j);
for(j = 386270; j < 386280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 387110; j < 387120; j++) _solve(b, j);
for(j = 387950; j < 387960; j++) _solve(b, j);
for(j = 388790; j < 388800; j++) _solve(b, j);
for(j = 389630; j < 389640; j++) _solve(b, j);
for(j = 390470; j < 390480; j++) _solve(b, j);
for(j = 391310; j < 391320; j++) _solve(b, j);
for(j = 392150; j < 392160; j++) _solve(b, j);
for(j = 392990; j < 393000; j++) _solve(b, j);
for(j = 393830; j < 393840; j++) _solve(b, j);
for(j = 394670; j < 394680; j++) _solve(b, j);
for(j = 395510; j < 395520; j++) _solve(b, j);
for(j = 396350; j < 396360; j++) _solve(b, j);
for(j = 397190; j < 397200; j++) _solve(b, j);
for(j = 398030; j < 398040; j++) _solve(b, j);
for(j = 398870; j < 398880; j++) _solve(b, j);
for(j = 399710; j < 399720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 400550; j < 400560; j++) _solve(b, j);
for(j = 401390; j < 401400; j++) _solve(b, j);
for(j = 402230; j < 402240; j++) _solve(b, j);
for(j = 403070; j < 403080; j++) _solve(b, j);
for(j = 403910; j < 403920; j++) _solve(b, j);
for(j = 404750; j < 404760; j++) _solve(b, j);
for(j = 405590; j < 405600; j++) _solve(b, j);
for(j = 406430; j < 406440; j++) _solve(b, j);
for(j = 407270; j < 407280; j++) _solve(b, j);
for(j = 408110; j < 408120; j++) _solve(b, j);
for(j = 408950; j < 408960; j++) _solve(b, j);
for(j = 409790; j < 409800; j++) _solve(b, j);
for(j = 410630; j < 410640; j++) _solve(b, j);
for(j = 411470; j < 411480; j++) _solve(b, j);
for(j = 412310; j < 412320; j++) _solve(b, j);
for(j = 413150; j < 413160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 413990; j < 414000; j++) _solve(b, j);
for(j = 414830; j < 414840; j++) _solve(b, j);
for(j = 415670; j < 415680; j++) _solve(b, j);
for(j = 416510; j < 416520; j++) _solve(b, j);
for(j = 417350; j < 417360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 347640; j < 347650; j++) _solve(b, j);
for(j = 348480; j < 348490; j++) _solve(b, j);
for(j = 349320; j < 349330; j++) _solve(b, j);
for(j = 350160; j < 350170; j++) _solve(b, j);
for(j = 351000; j < 351010; j++) _solve(b, j);
for(j = 351840; j < 351850; j++) _solve(b, j);
for(j = 352680; j < 352690; j++) _solve(b, j);
for(j = 353520; j < 353530; j++) _solve(b, j);
for(j = 354360; j < 354370; j++) _solve(b, j);
for(j = 355200; j < 355210; j++) _solve(b, j);
for(j = 356040; j < 356050; j++) _solve(b, j);
for(j = 356880; j < 356890; j++) _solve(b, j);
for(j = 357720; j < 357730; j++) _solve(b, j);
for(j = 358560; j < 358570; j++) _solve(b, j);
for(j = 359400; j < 359410; j++) _solve(b, j);
for(j = 360240; j < 360250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 361080; j < 361090; j++) _solve(b, j);
for(j = 361920; j < 361930; j++) _solve(b, j);
for(j = 362760; j < 362770; j++) _solve(b, j);
for(j = 363600; j < 363610; j++) _solve(b, j);
for(j = 364440; j < 364450; j++) _solve(b, j);
for(j = 365280; j < 365290; j++) _solve(b, j);
for(j = 366120; j < 366130; j++) _solve(b, j);
for(j = 366960; j < 366970; j++) _solve(b, j);
for(j = 367800; j < 367810; j++) _solve(b, j);
for(j = 368640; j < 368650; j++) _solve(b, j);
for(j = 369480; j < 369490; j++) _solve(b, j);
for(j = 370320; j < 370330; j++) _solve(b, j);
for(j = 371160; j < 371170; j++) _solve(b, j);
for(j = 372000; j < 372010; j++) _solve(b, j);
for(j = 372840; j < 372850; j++) _solve(b, j);
for(j = 373680; j < 373690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 374520; j < 374530; j++) _solve(b, j);
for(j = 375360; j < 375370; j++) _solve(b, j);
for(j = 376200; j < 376210; j++) _solve(b, j);
for(j = 377040; j < 377050; j++) _solve(b, j);
for(j = 377880; j < 377890; j++) _solve(b, j);
for(j = 378720; j < 378730; j++) _solve(b, j);
for(j = 379560; j < 379570; j++) _solve(b, j);
for(j = 380400; j < 380410; j++) _solve(b, j);
for(j = 381240; j < 381250; j++) _solve(b, j);
for(j = 382080; j < 382090; j++) _solve(b, j);
for(j = 382920; j < 382930; j++) _solve(b, j);
for(j = 383760; j < 383770; j++) _solve(b, j);
for(j = 384600; j < 384610; j++) _solve(b, j);
for(j = 385440; j < 385450; j++) _solve(b, j);
for(j = 386280; j < 386290; j++) _solve(b, j);
for(j = 387120; j < 387130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 387960; j < 387970; j++) _solve(b, j);
for(j = 388800; j < 388810; j++) _solve(b, j);
for(j = 389640; j < 389650; j++) _solve(b, j);
for(j = 390480; j < 390490; j++) _solve(b, j);
for(j = 391320; j < 391330; j++) _solve(b, j);
for(j = 392160; j < 392170; j++) _solve(b, j);
for(j = 393000; j < 393010; j++) _solve(b, j);
for(j = 393840; j < 393850; j++) _solve(b, j);
for(j = 394680; j < 394690; j++) _solve(b, j);
for(j = 395520; j < 395530; j++) _solve(b, j);
for(j = 396360; j < 396370; j++) _solve(b, j);
for(j = 397200; j < 397210; j++) _solve(b, j);
for(j = 398040; j < 398050; j++) _solve(b, j);
for(j = 398880; j < 398890; j++) _solve(b, j);
for(j = 399720; j < 399730; j++) _solve(b, j);
for(j = 400560; j < 400570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 401400; j < 401410; j++) _solve(b, j);
for(j = 402240; j < 402250; j++) _solve(b, j);
for(j = 403080; j < 403090; j++) _solve(b, j);
for(j = 403920; j < 403930; j++) _solve(b, j);
for(j = 404760; j < 404770; j++) _solve(b, j);
for(j = 405600; j < 405610; j++) _solve(b, j);
for(j = 406440; j < 406450; j++) _solve(b, j);
for(j = 407280; j < 407290; j++) _solve(b, j);
for(j = 408120; j < 408130; j++) _solve(b, j);
for(j = 408960; j < 408970; j++) _solve(b, j);
for(j = 409800; j < 409810; j++) _solve(b, j);
for(j = 410640; j < 410650; j++) _solve(b, j);
for(j = 411480; j < 411490; j++) _solve(b, j);
for(j = 412320; j < 412330; j++) _solve(b, j);
for(j = 413160; j < 413170; j++) _solve(b, j);
for(j = 414000; j < 414010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 414840; j < 414850; j++) _solve(b, j);
for(j = 415680; j < 415690; j++) _solve(b, j);
for(j = 416520; j < 416530; j++) _solve(b, j);
for(j = 417360; j < 417370; j++) _solve(b, j);
for(j = 418200; j < 418210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 348490; j < 348500; j++) _solve(b, j);
for(j = 349330; j < 349340; j++) _solve(b, j);
for(j = 350170; j < 350180; j++) _solve(b, j);
for(j = 351010; j < 351020; j++) _solve(b, j);
for(j = 351850; j < 351860; j++) _solve(b, j);
for(j = 352690; j < 352700; j++) _solve(b, j);
for(j = 353530; j < 353540; j++) _solve(b, j);
for(j = 354370; j < 354380; j++) _solve(b, j);
for(j = 355210; j < 355220; j++) _solve(b, j);
for(j = 356050; j < 356060; j++) _solve(b, j);
for(j = 356890; j < 356900; j++) _solve(b, j);
for(j = 357730; j < 357740; j++) _solve(b, j);
for(j = 358570; j < 358580; j++) _solve(b, j);
for(j = 359410; j < 359420; j++) _solve(b, j);
for(j = 360250; j < 360260; j++) _solve(b, j);
for(j = 361090; j < 361100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 361930; j < 361940; j++) _solve(b, j);
for(j = 362770; j < 362780; j++) _solve(b, j);
for(j = 363610; j < 363620; j++) _solve(b, j);
for(j = 364450; j < 364460; j++) _solve(b, j);
for(j = 365290; j < 365300; j++) _solve(b, j);
for(j = 366130; j < 366140; j++) _solve(b, j);
for(j = 366970; j < 366980; j++) _solve(b, j);
for(j = 367810; j < 367820; j++) _solve(b, j);
for(j = 368650; j < 368660; j++) _solve(b, j);
for(j = 369490; j < 369500; j++) _solve(b, j);
for(j = 370330; j < 370340; j++) _solve(b, j);
for(j = 371170; j < 371180; j++) _solve(b, j);
for(j = 372010; j < 372020; j++) _solve(b, j);
for(j = 372850; j < 372860; j++) _solve(b, j);
for(j = 373690; j < 373700; j++) _solve(b, j);
for(j = 374530; j < 374540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 375370; j < 375380; j++) _solve(b, j);
for(j = 376210; j < 376220; j++) _solve(b, j);
for(j = 377050; j < 377060; j++) _solve(b, j);
for(j = 377890; j < 377900; j++) _solve(b, j);
for(j = 378730; j < 378740; j++) _solve(b, j);
for(j = 379570; j < 379580; j++) _solve(b, j);
for(j = 380410; j < 380420; j++) _solve(b, j);
for(j = 381250; j < 381260; j++) _solve(b, j);
for(j = 382090; j < 382100; j++) _solve(b, j);
for(j = 382930; j < 382940; j++) _solve(b, j);
for(j = 383770; j < 383780; j++) _solve(b, j);
for(j = 384610; j < 384620; j++) _solve(b, j);
for(j = 385450; j < 385460; j++) _solve(b, j);
for(j = 386290; j < 386300; j++) _solve(b, j);
for(j = 387130; j < 387140; j++) _solve(b, j);
for(j = 387970; j < 387980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 388810; j < 388820; j++) _solve(b, j);
for(j = 389650; j < 389660; j++) _solve(b, j);
for(j = 390490; j < 390500; j++) _solve(b, j);
for(j = 391330; j < 391340; j++) _solve(b, j);
for(j = 392170; j < 392180; j++) _solve(b, j);
for(j = 393010; j < 393020; j++) _solve(b, j);
for(j = 393850; j < 393860; j++) _solve(b, j);
for(j = 394690; j < 394700; j++) _solve(b, j);
for(j = 395530; j < 395540; j++) _solve(b, j);
for(j = 396370; j < 396380; j++) _solve(b, j);
for(j = 397210; j < 397220; j++) _solve(b, j);
for(j = 398050; j < 398060; j++) _solve(b, j);
for(j = 398890; j < 398900; j++) _solve(b, j);
for(j = 399730; j < 399740; j++) _solve(b, j);
for(j = 400570; j < 400580; j++) _solve(b, j);
for(j = 401410; j < 401420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 402250; j < 402260; j++) _solve(b, j);
for(j = 403090; j < 403100; j++) _solve(b, j);
for(j = 403930; j < 403940; j++) _solve(b, j);
for(j = 404770; j < 404780; j++) _solve(b, j);
for(j = 405610; j < 405620; j++) _solve(b, j);
for(j = 406450; j < 406460; j++) _solve(b, j);
for(j = 407290; j < 407300; j++) _solve(b, j);
for(j = 408130; j < 408140; j++) _solve(b, j);
for(j = 408970; j < 408980; j++) _solve(b, j);
for(j = 409810; j < 409820; j++) _solve(b, j);
for(j = 410650; j < 410660; j++) _solve(b, j);
for(j = 411490; j < 411500; j++) _solve(b, j);
for(j = 412330; j < 412340; j++) _solve(b, j);
for(j = 413170; j < 413180; j++) _solve(b, j);
for(j = 414010; j < 414020; j++) _solve(b, j);
for(j = 414850; j < 414860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 415690; j < 415700; j++) _solve(b, j);
for(j = 416530; j < 416540; j++) _solve(b, j);
for(j = 417370; j < 417380; j++) _solve(b, j);
for(j = 418210; j < 418220; j++) _solve(b, j);
for(j = 419050; j < 419060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 349340; j < 349350; j++) _solve(b, j);
for(j = 350180; j < 350190; j++) _solve(b, j);
for(j = 351020; j < 351030; j++) _solve(b, j);
for(j = 351860; j < 351870; j++) _solve(b, j);
for(j = 352700; j < 352710; j++) _solve(b, j);
for(j = 353540; j < 353550; j++) _solve(b, j);
for(j = 354380; j < 354390; j++) _solve(b, j);
for(j = 355220; j < 355230; j++) _solve(b, j);
for(j = 356060; j < 356070; j++) _solve(b, j);
for(j = 356900; j < 356910; j++) _solve(b, j);
for(j = 357740; j < 357750; j++) _solve(b, j);
for(j = 358580; j < 358590; j++) _solve(b, j);
for(j = 359420; j < 359430; j++) _solve(b, j);
for(j = 360260; j < 360270; j++) _solve(b, j);
for(j = 361100; j < 361110; j++) _solve(b, j);
for(j = 361940; j < 361950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 362780; j < 362790; j++) _solve(b, j);
for(j = 363620; j < 363630; j++) _solve(b, j);
for(j = 364460; j < 364470; j++) _solve(b, j);
for(j = 365300; j < 365310; j++) _solve(b, j);
for(j = 366140; j < 366150; j++) _solve(b, j);
for(j = 366980; j < 366990; j++) _solve(b, j);
for(j = 367820; j < 367830; j++) _solve(b, j);
for(j = 368660; j < 368670; j++) _solve(b, j);
for(j = 369500; j < 369510; j++) _solve(b, j);
for(j = 370340; j < 370350; j++) _solve(b, j);
for(j = 371180; j < 371190; j++) _solve(b, j);
for(j = 372020; j < 372030; j++) _solve(b, j);
for(j = 372860; j < 372870; j++) _solve(b, j);
for(j = 373700; j < 373710; j++) _solve(b, j);
for(j = 374540; j < 374550; j++) _solve(b, j);
for(j = 375380; j < 375390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 376220; j < 376230; j++) _solve(b, j);
for(j = 377060; j < 377070; j++) _solve(b, j);
for(j = 377900; j < 377910; j++) _solve(b, j);
for(j = 378740; j < 378750; j++) _solve(b, j);
for(j = 379580; j < 379590; j++) _solve(b, j);
for(j = 380420; j < 380430; j++) _solve(b, j);
for(j = 381260; j < 381270; j++) _solve(b, j);
for(j = 382100; j < 382110; j++) _solve(b, j);
for(j = 382940; j < 382950; j++) _solve(b, j);
for(j = 383780; j < 383790; j++) _solve(b, j);
for(j = 384620; j < 384630; j++) _solve(b, j);
for(j = 385460; j < 385470; j++) _solve(b, j);
for(j = 386300; j < 386310; j++) _solve(b, j);
for(j = 387140; j < 387150; j++) _solve(b, j);
for(j = 387980; j < 387990; j++) _solve(b, j);
for(j = 388820; j < 388830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 389660; j < 389670; j++) _solve(b, j);
for(j = 390500; j < 390510; j++) _solve(b, j);
for(j = 391340; j < 391350; j++) _solve(b, j);
for(j = 392180; j < 392190; j++) _solve(b, j);
for(j = 393020; j < 393030; j++) _solve(b, j);
for(j = 393860; j < 393870; j++) _solve(b, j);
for(j = 394700; j < 394710; j++) _solve(b, j);
for(j = 395540; j < 395550; j++) _solve(b, j);
for(j = 396380; j < 396390; j++) _solve(b, j);
for(j = 397220; j < 397230; j++) _solve(b, j);
for(j = 398060; j < 398070; j++) _solve(b, j);
for(j = 398900; j < 398910; j++) _solve(b, j);
for(j = 399740; j < 399750; j++) _solve(b, j);
for(j = 400580; j < 400590; j++) _solve(b, j);
for(j = 401420; j < 401430; j++) _solve(b, j);
for(j = 402260; j < 402270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 403100; j < 403110; j++) _solve(b, j);
for(j = 403940; j < 403950; j++) _solve(b, j);
for(j = 404780; j < 404790; j++) _solve(b, j);
for(j = 405620; j < 405630; j++) _solve(b, j);
for(j = 406460; j < 406470; j++) _solve(b, j);
for(j = 407300; j < 407310; j++) _solve(b, j);
for(j = 408140; j < 408150; j++) _solve(b, j);
for(j = 408980; j < 408990; j++) _solve(b, j);
for(j = 409820; j < 409830; j++) _solve(b, j);
for(j = 410660; j < 410670; j++) _solve(b, j);
for(j = 411500; j < 411510; j++) _solve(b, j);
for(j = 412340; j < 412350; j++) _solve(b, j);
for(j = 413180; j < 413190; j++) _solve(b, j);
for(j = 414020; j < 414030; j++) _solve(b, j);
for(j = 414860; j < 414870; j++) _solve(b, j);
for(j = 415700; j < 415710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 416540; j < 416550; j++) _solve(b, j);
for(j = 417380; j < 417390; j++) _solve(b, j);
for(j = 418220; j < 418230; j++) _solve(b, j);
for(j = 419060; j < 419070; j++) _solve(b, j);
for(j = 419900; j < 419910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 350190; j < 350200; j++) _solve(b, j);
for(j = 351030; j < 351040; j++) _solve(b, j);
for(j = 351870; j < 351880; j++) _solve(b, j);
for(j = 352710; j < 352720; j++) _solve(b, j);
for(j = 353550; j < 353560; j++) _solve(b, j);
for(j = 354390; j < 354400; j++) _solve(b, j);
for(j = 355230; j < 355240; j++) _solve(b, j);
for(j = 356070; j < 356080; j++) _solve(b, j);
for(j = 356910; j < 356920; j++) _solve(b, j);
for(j = 357750; j < 357760; j++) _solve(b, j);
for(j = 358590; j < 358600; j++) _solve(b, j);
for(j = 359430; j < 359440; j++) _solve(b, j);
for(j = 360270; j < 360280; j++) _solve(b, j);
for(j = 361110; j < 361120; j++) _solve(b, j);
for(j = 361950; j < 361960; j++) _solve(b, j);
for(j = 362790; j < 362800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 363630; j < 363640; j++) _solve(b, j);
for(j = 364470; j < 364480; j++) _solve(b, j);
for(j = 365310; j < 365320; j++) _solve(b, j);
for(j = 366150; j < 366160; j++) _solve(b, j);
for(j = 366990; j < 367000; j++) _solve(b, j);
for(j = 367830; j < 367840; j++) _solve(b, j);
for(j = 368670; j < 368680; j++) _solve(b, j);
for(j = 369510; j < 369520; j++) _solve(b, j);
for(j = 370350; j < 370360; j++) _solve(b, j);
for(j = 371190; j < 371200; j++) _solve(b, j);
for(j = 372030; j < 372040; j++) _solve(b, j);
for(j = 372870; j < 372880; j++) _solve(b, j);
for(j = 373710; j < 373720; j++) _solve(b, j);
for(j = 374550; j < 374560; j++) _solve(b, j);
for(j = 375390; j < 375400; j++) _solve(b, j);
for(j = 376230; j < 376240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 377070; j < 377080; j++) _solve(b, j);
for(j = 377910; j < 377920; j++) _solve(b, j);
for(j = 378750; j < 378760; j++) _solve(b, j);
for(j = 379590; j < 379600; j++) _solve(b, j);
for(j = 380430; j < 380440; j++) _solve(b, j);
for(j = 381270; j < 381280; j++) _solve(b, j);
for(j = 382110; j < 382120; j++) _solve(b, j);
for(j = 382950; j < 382960; j++) _solve(b, j);
for(j = 383790; j < 383800; j++) _solve(b, j);
for(j = 384630; j < 384640; j++) _solve(b, j);
for(j = 385470; j < 385480; j++) _solve(b, j);
for(j = 386310; j < 386320; j++) _solve(b, j);
for(j = 387150; j < 387160; j++) _solve(b, j);
for(j = 387990; j < 388000; j++) _solve(b, j);
for(j = 388830; j < 388840; j++) _solve(b, j);
for(j = 389670; j < 389680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 390510; j < 390520; j++) _solve(b, j);
for(j = 391350; j < 391360; j++) _solve(b, j);
for(j = 392190; j < 392200; j++) _solve(b, j);
for(j = 393030; j < 393040; j++) _solve(b, j);
for(j = 393870; j < 393880; j++) _solve(b, j);
for(j = 394710; j < 394720; j++) _solve(b, j);
for(j = 395550; j < 395560; j++) _solve(b, j);
for(j = 396390; j < 396400; j++) _solve(b, j);
for(j = 397230; j < 397240; j++) _solve(b, j);
for(j = 398070; j < 398080; j++) _solve(b, j);
for(j = 398910; j < 398920; j++) _solve(b, j);
for(j = 399750; j < 399760; j++) _solve(b, j);
for(j = 400590; j < 400600; j++) _solve(b, j);
for(j = 401430; j < 401440; j++) _solve(b, j);
for(j = 402270; j < 402280; j++) _solve(b, j);
for(j = 403110; j < 403120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 403950; j < 403960; j++) _solve(b, j);
for(j = 404790; j < 404800; j++) _solve(b, j);
for(j = 405630; j < 405640; j++) _solve(b, j);
for(j = 406470; j < 406480; j++) _solve(b, j);
for(j = 407310; j < 407320; j++) _solve(b, j);
for(j = 408150; j < 408160; j++) _solve(b, j);
for(j = 408990; j < 409000; j++) _solve(b, j);
for(j = 409830; j < 409840; j++) _solve(b, j);
for(j = 410670; j < 410680; j++) _solve(b, j);
for(j = 411510; j < 411520; j++) _solve(b, j);
for(j = 412350; j < 412360; j++) _solve(b, j);
for(j = 413190; j < 413200; j++) _solve(b, j);
for(j = 414030; j < 414040; j++) _solve(b, j);
for(j = 414870; j < 414880; j++) _solve(b, j);
for(j = 415710; j < 415720; j++) _solve(b, j);
for(j = 416550; j < 416560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 417390; j < 417400; j++) _solve(b, j);
for(j = 418230; j < 418240; j++) _solve(b, j);
for(j = 419070; j < 419080; j++) _solve(b, j);
for(j = 419910; j < 419920; j++) _solve(b, j);
for(j = 420750; j < 420760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 351040; j < 351050; j++) _solve(b, j);
for(j = 351880; j < 351890; j++) _solve(b, j);
for(j = 352720; j < 352730; j++) _solve(b, j);
for(j = 353560; j < 353570; j++) _solve(b, j);
for(j = 354400; j < 354410; j++) _solve(b, j);
for(j = 355240; j < 355250; j++) _solve(b, j);
for(j = 356080; j < 356090; j++) _solve(b, j);
for(j = 356920; j < 356930; j++) _solve(b, j);
for(j = 357760; j < 357770; j++) _solve(b, j);
for(j = 358600; j < 358610; j++) _solve(b, j);
for(j = 359440; j < 359450; j++) _solve(b, j);
for(j = 360280; j < 360290; j++) _solve(b, j);
for(j = 361120; j < 361130; j++) _solve(b, j);
for(j = 361960; j < 361970; j++) _solve(b, j);
for(j = 362800; j < 362810; j++) _solve(b, j);
for(j = 363640; j < 363650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 364480; j < 364490; j++) _solve(b, j);
for(j = 365320; j < 365330; j++) _solve(b, j);
for(j = 366160; j < 366170; j++) _solve(b, j);
for(j = 367000; j < 367010; j++) _solve(b, j);
for(j = 367840; j < 367850; j++) _solve(b, j);
for(j = 368680; j < 368690; j++) _solve(b, j);
for(j = 369520; j < 369530; j++) _solve(b, j);
for(j = 370360; j < 370370; j++) _solve(b, j);
for(j = 371200; j < 371210; j++) _solve(b, j);
for(j = 372040; j < 372050; j++) _solve(b, j);
for(j = 372880; j < 372890; j++) _solve(b, j);
for(j = 373720; j < 373730; j++) _solve(b, j);
for(j = 374560; j < 374570; j++) _solve(b, j);
for(j = 375400; j < 375410; j++) _solve(b, j);
for(j = 376240; j < 376250; j++) _solve(b, j);
for(j = 377080; j < 377090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 377920; j < 377930; j++) _solve(b, j);
for(j = 378760; j < 378770; j++) _solve(b, j);
for(j = 379600; j < 379610; j++) _solve(b, j);
for(j = 380440; j < 380450; j++) _solve(b, j);
for(j = 381280; j < 381290; j++) _solve(b, j);
for(j = 382120; j < 382130; j++) _solve(b, j);
for(j = 382960; j < 382970; j++) _solve(b, j);
for(j = 383800; j < 383810; j++) _solve(b, j);
for(j = 384640; j < 384650; j++) _solve(b, j);
for(j = 385480; j < 385490; j++) _solve(b, j);
for(j = 386320; j < 386330; j++) _solve(b, j);
for(j = 387160; j < 387170; j++) _solve(b, j);
for(j = 388000; j < 388010; j++) _solve(b, j);
for(j = 388840; j < 388850; j++) _solve(b, j);
for(j = 389680; j < 389690; j++) _solve(b, j);
for(j = 390520; j < 390530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 391360; j < 391370; j++) _solve(b, j);
for(j = 392200; j < 392210; j++) _solve(b, j);
for(j = 393040; j < 393050; j++) _solve(b, j);
for(j = 393880; j < 393890; j++) _solve(b, j);
for(j = 394720; j < 394730; j++) _solve(b, j);
for(j = 395560; j < 395570; j++) _solve(b, j);
for(j = 396400; j < 396410; j++) _solve(b, j);
for(j = 397240; j < 397250; j++) _solve(b, j);
for(j = 398080; j < 398090; j++) _solve(b, j);
for(j = 398920; j < 398930; j++) _solve(b, j);
for(j = 399760; j < 399770; j++) _solve(b, j);
for(j = 400600; j < 400610; j++) _solve(b, j);
for(j = 401440; j < 401450; j++) _solve(b, j);
for(j = 402280; j < 402290; j++) _solve(b, j);
for(j = 403120; j < 403130; j++) _solve(b, j);
for(j = 403960; j < 403970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 404800; j < 404810; j++) _solve(b, j);
for(j = 405640; j < 405650; j++) _solve(b, j);
for(j = 406480; j < 406490; j++) _solve(b, j);
for(j = 407320; j < 407330; j++) _solve(b, j);
for(j = 408160; j < 408170; j++) _solve(b, j);
for(j = 409000; j < 409010; j++) _solve(b, j);
for(j = 409840; j < 409850; j++) _solve(b, j);
for(j = 410680; j < 410690; j++) _solve(b, j);
for(j = 411520; j < 411530; j++) _solve(b, j);
for(j = 412360; j < 412370; j++) _solve(b, j);
for(j = 413200; j < 413210; j++) _solve(b, j);
for(j = 414040; j < 414050; j++) _solve(b, j);
for(j = 414880; j < 414890; j++) _solve(b, j);
for(j = 415720; j < 415730; j++) _solve(b, j);
for(j = 416560; j < 416570; j++) _solve(b, j);
for(j = 417400; j < 417410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 418240; j < 418250; j++) _solve(b, j);
for(j = 419080; j < 419090; j++) _solve(b, j);
for(j = 419920; j < 419930; j++) _solve(b, j);
for(j = 420760; j < 420770; j++) _solve(b, j);
for(j = 421600; j < 421610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 351890; j < 351900; j++) _solve(b, j);
for(j = 352730; j < 352740; j++) _solve(b, j);
for(j = 353570; j < 353580; j++) _solve(b, j);
for(j = 354410; j < 354420; j++) _solve(b, j);
for(j = 355250; j < 355260; j++) _solve(b, j);
for(j = 356090; j < 356100; j++) _solve(b, j);
for(j = 356930; j < 356940; j++) _solve(b, j);
for(j = 357770; j < 357780; j++) _solve(b, j);
for(j = 358610; j < 358620; j++) _solve(b, j);
for(j = 359450; j < 359460; j++) _solve(b, j);
for(j = 360290; j < 360300; j++) _solve(b, j);
for(j = 361130; j < 361140; j++) _solve(b, j);
for(j = 361970; j < 361980; j++) _solve(b, j);
for(j = 362810; j < 362820; j++) _solve(b, j);
for(j = 363650; j < 363660; j++) _solve(b, j);
for(j = 364490; j < 364500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 365330; j < 365340; j++) _solve(b, j);
for(j = 366170; j < 366180; j++) _solve(b, j);
for(j = 367010; j < 367020; j++) _solve(b, j);
for(j = 367850; j < 367860; j++) _solve(b, j);
for(j = 368690; j < 368700; j++) _solve(b, j);
for(j = 369530; j < 369540; j++) _solve(b, j);
for(j = 370370; j < 370380; j++) _solve(b, j);
for(j = 371210; j < 371220; j++) _solve(b, j);
for(j = 372050; j < 372060; j++) _solve(b, j);
for(j = 372890; j < 372900; j++) _solve(b, j);
for(j = 373730; j < 373740; j++) _solve(b, j);
for(j = 374570; j < 374580; j++) _solve(b, j);
for(j = 375410; j < 375420; j++) _solve(b, j);
for(j = 376250; j < 376260; j++) _solve(b, j);
for(j = 377090; j < 377100; j++) _solve(b, j);
for(j = 377930; j < 377940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 378770; j < 378780; j++) _solve(b, j);
for(j = 379610; j < 379620; j++) _solve(b, j);
for(j = 380450; j < 380460; j++) _solve(b, j);
for(j = 381290; j < 381300; j++) _solve(b, j);
for(j = 382130; j < 382140; j++) _solve(b, j);
for(j = 382970; j < 382980; j++) _solve(b, j);
for(j = 383810; j < 383820; j++) _solve(b, j);
for(j = 384650; j < 384660; j++) _solve(b, j);
for(j = 385490; j < 385500; j++) _solve(b, j);
for(j = 386330; j < 386340; j++) _solve(b, j);
for(j = 387170; j < 387180; j++) _solve(b, j);
for(j = 388010; j < 388020; j++) _solve(b, j);
for(j = 388850; j < 388860; j++) _solve(b, j);
for(j = 389690; j < 389700; j++) _solve(b, j);
for(j = 390530; j < 390540; j++) _solve(b, j);
for(j = 391370; j < 391380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 392210; j < 392220; j++) _solve(b, j);
for(j = 393050; j < 393060; j++) _solve(b, j);
for(j = 393890; j < 393900; j++) _solve(b, j);
for(j = 394730; j < 394740; j++) _solve(b, j);
for(j = 395570; j < 395580; j++) _solve(b, j);
for(j = 396410; j < 396420; j++) _solve(b, j);
for(j = 397250; j < 397260; j++) _solve(b, j);
for(j = 398090; j < 398100; j++) _solve(b, j);
for(j = 398930; j < 398940; j++) _solve(b, j);
for(j = 399770; j < 399780; j++) _solve(b, j);
for(j = 400610; j < 400620; j++) _solve(b, j);
for(j = 401450; j < 401460; j++) _solve(b, j);
for(j = 402290; j < 402300; j++) _solve(b, j);
for(j = 403130; j < 403140; j++) _solve(b, j);
for(j = 403970; j < 403980; j++) _solve(b, j);
for(j = 404810; j < 404820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 405650; j < 405660; j++) _solve(b, j);
for(j = 406490; j < 406500; j++) _solve(b, j);
for(j = 407330; j < 407340; j++) _solve(b, j);
for(j = 408170; j < 408180; j++) _solve(b, j);
for(j = 409010; j < 409020; j++) _solve(b, j);
for(j = 409850; j < 409860; j++) _solve(b, j);
for(j = 410690; j < 410700; j++) _solve(b, j);
for(j = 411530; j < 411540; j++) _solve(b, j);
for(j = 412370; j < 412380; j++) _solve(b, j);
for(j = 413210; j < 413220; j++) _solve(b, j);
for(j = 414050; j < 414060; j++) _solve(b, j);
for(j = 414890; j < 414900; j++) _solve(b, j);
for(j = 415730; j < 415740; j++) _solve(b, j);
for(j = 416570; j < 416580; j++) _solve(b, j);
for(j = 417410; j < 417420; j++) _solve(b, j);
for(j = 418250; j < 418260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 419090; j < 419100; j++) _solve(b, j);
for(j = 419930; j < 419940; j++) _solve(b, j);
for(j = 420770; j < 420780; j++) _solve(b, j);
for(j = 421610; j < 421620; j++) _solve(b, j);
for(j = 422450; j < 422460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 352740; j < 352750; j++) _solve(b, j);
for(j = 353580; j < 353590; j++) _solve(b, j);
for(j = 354420; j < 354430; j++) _solve(b, j);
for(j = 355260; j < 355270; j++) _solve(b, j);
for(j = 356100; j < 356110; j++) _solve(b, j);
for(j = 356940; j < 356950; j++) _solve(b, j);
for(j = 357780; j < 357790; j++) _solve(b, j);
for(j = 358620; j < 358630; j++) _solve(b, j);
for(j = 359460; j < 359470; j++) _solve(b, j);
for(j = 360300; j < 360310; j++) _solve(b, j);
for(j = 361140; j < 361150; j++) _solve(b, j);
for(j = 361980; j < 361990; j++) _solve(b, j);
for(j = 362820; j < 362830; j++) _solve(b, j);
for(j = 363660; j < 363670; j++) _solve(b, j);
for(j = 364500; j < 364510; j++) _solve(b, j);
for(j = 365340; j < 365350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 366180; j < 366190; j++) _solve(b, j);
for(j = 367020; j < 367030; j++) _solve(b, j);
for(j = 367860; j < 367870; j++) _solve(b, j);
for(j = 368700; j < 368710; j++) _solve(b, j);
for(j = 369540; j < 369550; j++) _solve(b, j);
for(j = 370380; j < 370390; j++) _solve(b, j);
for(j = 371220; j < 371230; j++) _solve(b, j);
for(j = 372060; j < 372070; j++) _solve(b, j);
for(j = 372900; j < 372910; j++) _solve(b, j);
for(j = 373740; j < 373750; j++) _solve(b, j);
for(j = 374580; j < 374590; j++) _solve(b, j);
for(j = 375420; j < 375430; j++) _solve(b, j);
for(j = 376260; j < 376270; j++) _solve(b, j);
for(j = 377100; j < 377110; j++) _solve(b, j);
for(j = 377940; j < 377950; j++) _solve(b, j);
for(j = 378780; j < 378790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 379620; j < 379630; j++) _solve(b, j);
for(j = 380460; j < 380470; j++) _solve(b, j);
for(j = 381300; j < 381310; j++) _solve(b, j);
for(j = 382140; j < 382150; j++) _solve(b, j);
for(j = 382980; j < 382990; j++) _solve(b, j);
for(j = 383820; j < 383830; j++) _solve(b, j);
for(j = 384660; j < 384670; j++) _solve(b, j);
for(j = 385500; j < 385510; j++) _solve(b, j);
for(j = 386340; j < 386350; j++) _solve(b, j);
for(j = 387180; j < 387190; j++) _solve(b, j);
for(j = 388020; j < 388030; j++) _solve(b, j);
for(j = 388860; j < 388870; j++) _solve(b, j);
for(j = 389700; j < 389710; j++) _solve(b, j);
for(j = 390540; j < 390550; j++) _solve(b, j);
for(j = 391380; j < 391390; j++) _solve(b, j);
for(j = 392220; j < 392230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 393060; j < 393070; j++) _solve(b, j);
for(j = 393900; j < 393910; j++) _solve(b, j);
for(j = 394740; j < 394750; j++) _solve(b, j);
for(j = 395580; j < 395590; j++) _solve(b, j);
for(j = 396420; j < 396430; j++) _solve(b, j);
for(j = 397260; j < 397270; j++) _solve(b, j);
for(j = 398100; j < 398110; j++) _solve(b, j);
for(j = 398940; j < 398950; j++) _solve(b, j);
for(j = 399780; j < 399790; j++) _solve(b, j);
for(j = 400620; j < 400630; j++) _solve(b, j);
for(j = 401460; j < 401470; j++) _solve(b, j);
for(j = 402300; j < 402310; j++) _solve(b, j);
for(j = 403140; j < 403150; j++) _solve(b, j);
for(j = 403980; j < 403990; j++) _solve(b, j);
for(j = 404820; j < 404830; j++) _solve(b, j);
for(j = 405660; j < 405670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 406500; j < 406510; j++) _solve(b, j);
for(j = 407340; j < 407350; j++) _solve(b, j);
for(j = 408180; j < 408190; j++) _solve(b, j);
for(j = 409020; j < 409030; j++) _solve(b, j);
for(j = 409860; j < 409870; j++) _solve(b, j);
for(j = 410700; j < 410710; j++) _solve(b, j);
for(j = 411540; j < 411550; j++) _solve(b, j);
for(j = 412380; j < 412390; j++) _solve(b, j);
for(j = 413220; j < 413230; j++) _solve(b, j);
for(j = 414060; j < 414070; j++) _solve(b, j);
for(j = 414900; j < 414910; j++) _solve(b, j);
for(j = 415740; j < 415750; j++) _solve(b, j);
for(j = 416580; j < 416590; j++) _solve(b, j);
for(j = 417420; j < 417430; j++) _solve(b, j);
for(j = 418260; j < 418270; j++) _solve(b, j);
for(j = 419100; j < 419110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 419940; j < 419950; j++) _solve(b, j);
for(j = 420780; j < 420790; j++) _solve(b, j);
for(j = 421620; j < 421630; j++) _solve(b, j);
for(j = 422460; j < 422470; j++) _solve(b, j);
for(j = 423300; j < 423310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 353590; j < 353600; j++) _solve(b, j);
for(j = 354430; j < 354440; j++) _solve(b, j);
for(j = 355270; j < 355280; j++) _solve(b, j);
for(j = 356110; j < 356120; j++) _solve(b, j);
for(j = 356950; j < 356960; j++) _solve(b, j);
for(j = 357790; j < 357800; j++) _solve(b, j);
for(j = 358630; j < 358640; j++) _solve(b, j);
for(j = 359470; j < 359480; j++) _solve(b, j);
for(j = 360310; j < 360320; j++) _solve(b, j);
for(j = 361150; j < 361160; j++) _solve(b, j);
for(j = 361990; j < 362000; j++) _solve(b, j);
for(j = 362830; j < 362840; j++) _solve(b, j);
for(j = 363670; j < 363680; j++) _solve(b, j);
for(j = 364510; j < 364520; j++) _solve(b, j);
for(j = 365350; j < 365360; j++) _solve(b, j);
for(j = 366190; j < 366200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 367030; j < 367040; j++) _solve(b, j);
for(j = 367870; j < 367880; j++) _solve(b, j);
for(j = 368710; j < 368720; j++) _solve(b, j);
for(j = 369550; j < 369560; j++) _solve(b, j);
for(j = 370390; j < 370400; j++) _solve(b, j);
for(j = 371230; j < 371240; j++) _solve(b, j);
for(j = 372070; j < 372080; j++) _solve(b, j);
for(j = 372910; j < 372920; j++) _solve(b, j);
for(j = 373750; j < 373760; j++) _solve(b, j);
for(j = 374590; j < 374600; j++) _solve(b, j);
for(j = 375430; j < 375440; j++) _solve(b, j);
for(j = 376270; j < 376280; j++) _solve(b, j);
for(j = 377110; j < 377120; j++) _solve(b, j);
for(j = 377950; j < 377960; j++) _solve(b, j);
for(j = 378790; j < 378800; j++) _solve(b, j);
for(j = 379630; j < 379640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 380470; j < 380480; j++) _solve(b, j);
for(j = 381310; j < 381320; j++) _solve(b, j);
for(j = 382150; j < 382160; j++) _solve(b, j);
for(j = 382990; j < 383000; j++) _solve(b, j);
for(j = 383830; j < 383840; j++) _solve(b, j);
for(j = 384670; j < 384680; j++) _solve(b, j);
for(j = 385510; j < 385520; j++) _solve(b, j);
for(j = 386350; j < 386360; j++) _solve(b, j);
for(j = 387190; j < 387200; j++) _solve(b, j);
for(j = 388030; j < 388040; j++) _solve(b, j);
for(j = 388870; j < 388880; j++) _solve(b, j);
for(j = 389710; j < 389720; j++) _solve(b, j);
for(j = 390550; j < 390560; j++) _solve(b, j);
for(j = 391390; j < 391400; j++) _solve(b, j);
for(j = 392230; j < 392240; j++) _solve(b, j);
for(j = 393070; j < 393080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 393910; j < 393920; j++) _solve(b, j);
for(j = 394750; j < 394760; j++) _solve(b, j);
for(j = 395590; j < 395600; j++) _solve(b, j);
for(j = 396430; j < 396440; j++) _solve(b, j);
for(j = 397270; j < 397280; j++) _solve(b, j);
for(j = 398110; j < 398120; j++) _solve(b, j);
for(j = 398950; j < 398960; j++) _solve(b, j);
for(j = 399790; j < 399800; j++) _solve(b, j);
for(j = 400630; j < 400640; j++) _solve(b, j);
for(j = 401470; j < 401480; j++) _solve(b, j);
for(j = 402310; j < 402320; j++) _solve(b, j);
for(j = 403150; j < 403160; j++) _solve(b, j);
for(j = 403990; j < 404000; j++) _solve(b, j);
for(j = 404830; j < 404840; j++) _solve(b, j);
for(j = 405670; j < 405680; j++) _solve(b, j);
for(j = 406510; j < 406520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 407350; j < 407360; j++) _solve(b, j);
for(j = 408190; j < 408200; j++) _solve(b, j);
for(j = 409030; j < 409040; j++) _solve(b, j);
for(j = 409870; j < 409880; j++) _solve(b, j);
for(j = 410710; j < 410720; j++) _solve(b, j);
for(j = 411550; j < 411560; j++) _solve(b, j);
for(j = 412390; j < 412400; j++) _solve(b, j);
for(j = 413230; j < 413240; j++) _solve(b, j);
for(j = 414070; j < 414080; j++) _solve(b, j);
for(j = 414910; j < 414920; j++) _solve(b, j);
for(j = 415750; j < 415760; j++) _solve(b, j);
for(j = 416590; j < 416600; j++) _solve(b, j);
for(j = 417430; j < 417440; j++) _solve(b, j);
for(j = 418270; j < 418280; j++) _solve(b, j);
for(j = 419110; j < 419120; j++) _solve(b, j);
for(j = 419950; j < 419960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 420790; j < 420800; j++) _solve(b, j);
for(j = 421630; j < 421640; j++) _solve(b, j);
for(j = 422470; j < 422480; j++) _solve(b, j);
for(j = 423310; j < 423320; j++) _solve(b, j);
for(j = 424150; j < 424160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 354440; j < 354450; j++) _solve(b, j);
for(j = 355280; j < 355290; j++) _solve(b, j);
for(j = 356120; j < 356130; j++) _solve(b, j);
for(j = 356960; j < 356970; j++) _solve(b, j);
for(j = 357800; j < 357810; j++) _solve(b, j);
for(j = 358640; j < 358650; j++) _solve(b, j);
for(j = 359480; j < 359490; j++) _solve(b, j);
for(j = 360320; j < 360330; j++) _solve(b, j);
for(j = 361160; j < 361170; j++) _solve(b, j);
for(j = 362000; j < 362010; j++) _solve(b, j);
for(j = 362840; j < 362850; j++) _solve(b, j);
for(j = 363680; j < 363690; j++) _solve(b, j);
for(j = 364520; j < 364530; j++) _solve(b, j);
for(j = 365360; j < 365370; j++) _solve(b, j);
for(j = 366200; j < 366210; j++) _solve(b, j);
for(j = 367040; j < 367050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 367880; j < 367890; j++) _solve(b, j);
for(j = 368720; j < 368730; j++) _solve(b, j);
for(j = 369560; j < 369570; j++) _solve(b, j);
for(j = 370400; j < 370410; j++) _solve(b, j);
for(j = 371240; j < 371250; j++) _solve(b, j);
for(j = 372080; j < 372090; j++) _solve(b, j);
for(j = 372920; j < 372930; j++) _solve(b, j);
for(j = 373760; j < 373770; j++) _solve(b, j);
for(j = 374600; j < 374610; j++) _solve(b, j);
for(j = 375440; j < 375450; j++) _solve(b, j);
for(j = 376280; j < 376290; j++) _solve(b, j);
for(j = 377120; j < 377130; j++) _solve(b, j);
for(j = 377960; j < 377970; j++) _solve(b, j);
for(j = 378800; j < 378810; j++) _solve(b, j);
for(j = 379640; j < 379650; j++) _solve(b, j);
for(j = 380480; j < 380490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 381320; j < 381330; j++) _solve(b, j);
for(j = 382160; j < 382170; j++) _solve(b, j);
for(j = 383000; j < 383010; j++) _solve(b, j);
for(j = 383840; j < 383850; j++) _solve(b, j);
for(j = 384680; j < 384690; j++) _solve(b, j);
for(j = 385520; j < 385530; j++) _solve(b, j);
for(j = 386360; j < 386370; j++) _solve(b, j);
for(j = 387200; j < 387210; j++) _solve(b, j);
for(j = 388040; j < 388050; j++) _solve(b, j);
for(j = 388880; j < 388890; j++) _solve(b, j);
for(j = 389720; j < 389730; j++) _solve(b, j);
for(j = 390560; j < 390570; j++) _solve(b, j);
for(j = 391400; j < 391410; j++) _solve(b, j);
for(j = 392240; j < 392250; j++) _solve(b, j);
for(j = 393080; j < 393090; j++) _solve(b, j);
for(j = 393920; j < 393930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 394760; j < 394770; j++) _solve(b, j);
for(j = 395600; j < 395610; j++) _solve(b, j);
for(j = 396440; j < 396450; j++) _solve(b, j);
for(j = 397280; j < 397290; j++) _solve(b, j);
for(j = 398120; j < 398130; j++) _solve(b, j);
for(j = 398960; j < 398970; j++) _solve(b, j);
for(j = 399800; j < 399810; j++) _solve(b, j);
for(j = 400640; j < 400650; j++) _solve(b, j);
for(j = 401480; j < 401490; j++) _solve(b, j);
for(j = 402320; j < 402330; j++) _solve(b, j);
for(j = 403160; j < 403170; j++) _solve(b, j);
for(j = 404000; j < 404010; j++) _solve(b, j);
for(j = 404840; j < 404850; j++) _solve(b, j);
for(j = 405680; j < 405690; j++) _solve(b, j);
for(j = 406520; j < 406530; j++) _solve(b, j);
for(j = 407360; j < 407370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 408200; j < 408210; j++) _solve(b, j);
for(j = 409040; j < 409050; j++) _solve(b, j);
for(j = 409880; j < 409890; j++) _solve(b, j);
for(j = 410720; j < 410730; j++) _solve(b, j);
for(j = 411560; j < 411570; j++) _solve(b, j);
for(j = 412400; j < 412410; j++) _solve(b, j);
for(j = 413240; j < 413250; j++) _solve(b, j);
for(j = 414080; j < 414090; j++) _solve(b, j);
for(j = 414920; j < 414930; j++) _solve(b, j);
for(j = 415760; j < 415770; j++) _solve(b, j);
for(j = 416600; j < 416610; j++) _solve(b, j);
for(j = 417440; j < 417450; j++) _solve(b, j);
for(j = 418280; j < 418290; j++) _solve(b, j);
for(j = 419120; j < 419130; j++) _solve(b, j);
for(j = 419960; j < 419970; j++) _solve(b, j);
for(j = 420800; j < 420810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 421640; j < 421650; j++) _solve(b, j);
for(j = 422480; j < 422490; j++) _solve(b, j);
for(j = 423320; j < 423330; j++) _solve(b, j);
for(j = 424160; j < 424170; j++) _solve(b, j);
for(j = 425000; j < 425010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 355290; j < 355300; j++) _solve(b, j);
for(j = 356130; j < 356140; j++) _solve(b, j);
for(j = 356970; j < 356980; j++) _solve(b, j);
for(j = 357810; j < 357820; j++) _solve(b, j);
for(j = 358650; j < 358660; j++) _solve(b, j);
for(j = 359490; j < 359500; j++) _solve(b, j);
for(j = 360330; j < 360340; j++) _solve(b, j);
for(j = 361170; j < 361180; j++) _solve(b, j);
for(j = 362010; j < 362020; j++) _solve(b, j);
for(j = 362850; j < 362860; j++) _solve(b, j);
for(j = 363690; j < 363700; j++) _solve(b, j);
for(j = 364530; j < 364540; j++) _solve(b, j);
for(j = 365370; j < 365380; j++) _solve(b, j);
for(j = 366210; j < 366220; j++) _solve(b, j);
for(j = 367050; j < 367060; j++) _solve(b, j);
for(j = 367890; j < 367900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 368730; j < 368740; j++) _solve(b, j);
for(j = 369570; j < 369580; j++) _solve(b, j);
for(j = 370410; j < 370420; j++) _solve(b, j);
for(j = 371250; j < 371260; j++) _solve(b, j);
for(j = 372090; j < 372100; j++) _solve(b, j);
for(j = 372930; j < 372940; j++) _solve(b, j);
for(j = 373770; j < 373780; j++) _solve(b, j);
for(j = 374610; j < 374620; j++) _solve(b, j);
for(j = 375450; j < 375460; j++) _solve(b, j);
for(j = 376290; j < 376300; j++) _solve(b, j);
for(j = 377130; j < 377140; j++) _solve(b, j);
for(j = 377970; j < 377980; j++) _solve(b, j);
for(j = 378810; j < 378820; j++) _solve(b, j);
for(j = 379650; j < 379660; j++) _solve(b, j);
for(j = 380490; j < 380500; j++) _solve(b, j);
for(j = 381330; j < 381340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 382170; j < 382180; j++) _solve(b, j);
for(j = 383010; j < 383020; j++) _solve(b, j);
for(j = 383850; j < 383860; j++) _solve(b, j);
for(j = 384690; j < 384700; j++) _solve(b, j);
for(j = 385530; j < 385540; j++) _solve(b, j);
for(j = 386370; j < 386380; j++) _solve(b, j);
for(j = 387210; j < 387220; j++) _solve(b, j);
for(j = 388050; j < 388060; j++) _solve(b, j);
for(j = 388890; j < 388900; j++) _solve(b, j);
for(j = 389730; j < 389740; j++) _solve(b, j);
for(j = 390570; j < 390580; j++) _solve(b, j);
for(j = 391410; j < 391420; j++) _solve(b, j);
for(j = 392250; j < 392260; j++) _solve(b, j);
for(j = 393090; j < 393100; j++) _solve(b, j);
for(j = 393930; j < 393940; j++) _solve(b, j);
for(j = 394770; j < 394780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 395610; j < 395620; j++) _solve(b, j);
for(j = 396450; j < 396460; j++) _solve(b, j);
for(j = 397290; j < 397300; j++) _solve(b, j);
for(j = 398130; j < 398140; j++) _solve(b, j);
for(j = 398970; j < 398980; j++) _solve(b, j);
for(j = 399810; j < 399820; j++) _solve(b, j);
for(j = 400650; j < 400660; j++) _solve(b, j);
for(j = 401490; j < 401500; j++) _solve(b, j);
for(j = 402330; j < 402340; j++) _solve(b, j);
for(j = 403170; j < 403180; j++) _solve(b, j);
for(j = 404010; j < 404020; j++) _solve(b, j);
for(j = 404850; j < 404860; j++) _solve(b, j);
for(j = 405690; j < 405700; j++) _solve(b, j);
for(j = 406530; j < 406540; j++) _solve(b, j);
for(j = 407370; j < 407380; j++) _solve(b, j);
for(j = 408210; j < 408220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 409050; j < 409060; j++) _solve(b, j);
for(j = 409890; j < 409900; j++) _solve(b, j);
for(j = 410730; j < 410740; j++) _solve(b, j);
for(j = 411570; j < 411580; j++) _solve(b, j);
for(j = 412410; j < 412420; j++) _solve(b, j);
for(j = 413250; j < 413260; j++) _solve(b, j);
for(j = 414090; j < 414100; j++) _solve(b, j);
for(j = 414930; j < 414940; j++) _solve(b, j);
for(j = 415770; j < 415780; j++) _solve(b, j);
for(j = 416610; j < 416620; j++) _solve(b, j);
for(j = 417450; j < 417460; j++) _solve(b, j);
for(j = 418290; j < 418300; j++) _solve(b, j);
for(j = 419130; j < 419140; j++) _solve(b, j);
for(j = 419970; j < 419980; j++) _solve(b, j);
for(j = 420810; j < 420820; j++) _solve(b, j);
for(j = 421650; j < 421660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 422490; j < 422500; j++) _solve(b, j);
for(j = 423330; j < 423340; j++) _solve(b, j);
for(j = 424170; j < 424180; j++) _solve(b, j);
for(j = 425010; j < 425020; j++) _solve(b, j);
for(j = 425850; j < 425860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 356140; j < 356150; j++) _solve(b, j);
for(j = 356980; j < 356990; j++) _solve(b, j);
for(j = 357820; j < 357830; j++) _solve(b, j);
for(j = 358660; j < 358670; j++) _solve(b, j);
for(j = 359500; j < 359510; j++) _solve(b, j);
for(j = 360340; j < 360350; j++) _solve(b, j);
for(j = 361180; j < 361190; j++) _solve(b, j);
for(j = 362020; j < 362030; j++) _solve(b, j);
for(j = 362860; j < 362870; j++) _solve(b, j);
for(j = 363700; j < 363710; j++) _solve(b, j);
for(j = 364540; j < 364550; j++) _solve(b, j);
for(j = 365380; j < 365390; j++) _solve(b, j);
for(j = 366220; j < 366230; j++) _solve(b, j);
for(j = 367060; j < 367070; j++) _solve(b, j);
for(j = 367900; j < 367910; j++) _solve(b, j);
for(j = 368740; j < 368750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 369580; j < 369590; j++) _solve(b, j);
for(j = 370420; j < 370430; j++) _solve(b, j);
for(j = 371260; j < 371270; j++) _solve(b, j);
for(j = 372100; j < 372110; j++) _solve(b, j);
for(j = 372940; j < 372950; j++) _solve(b, j);
for(j = 373780; j < 373790; j++) _solve(b, j);
for(j = 374620; j < 374630; j++) _solve(b, j);
for(j = 375460; j < 375470; j++) _solve(b, j);
for(j = 376300; j < 376310; j++) _solve(b, j);
for(j = 377140; j < 377150; j++) _solve(b, j);
for(j = 377980; j < 377990; j++) _solve(b, j);
for(j = 378820; j < 378830; j++) _solve(b, j);
for(j = 379660; j < 379670; j++) _solve(b, j);
for(j = 380500; j < 380510; j++) _solve(b, j);
for(j = 381340; j < 381350; j++) _solve(b, j);
for(j = 382180; j < 382190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 383020; j < 383030; j++) _solve(b, j);
for(j = 383860; j < 383870; j++) _solve(b, j);
for(j = 384700; j < 384710; j++) _solve(b, j);
for(j = 385540; j < 385550; j++) _solve(b, j);
for(j = 386380; j < 386390; j++) _solve(b, j);
for(j = 387220; j < 387230; j++) _solve(b, j);
for(j = 388060; j < 388070; j++) _solve(b, j);
for(j = 388900; j < 388910; j++) _solve(b, j);
for(j = 389740; j < 389750; j++) _solve(b, j);
for(j = 390580; j < 390590; j++) _solve(b, j);
for(j = 391420; j < 391430; j++) _solve(b, j);
for(j = 392260; j < 392270; j++) _solve(b, j);
for(j = 393100; j < 393110; j++) _solve(b, j);
for(j = 393940; j < 393950; j++) _solve(b, j);
for(j = 394780; j < 394790; j++) _solve(b, j);
for(j = 395620; j < 395630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 396460; j < 396470; j++) _solve(b, j);
for(j = 397300; j < 397310; j++) _solve(b, j);
for(j = 398140; j < 398150; j++) _solve(b, j);
for(j = 398980; j < 398990; j++) _solve(b, j);
for(j = 399820; j < 399830; j++) _solve(b, j);
for(j = 400660; j < 400670; j++) _solve(b, j);
for(j = 401500; j < 401510; j++) _solve(b, j);
for(j = 402340; j < 402350; j++) _solve(b, j);
for(j = 403180; j < 403190; j++) _solve(b, j);
for(j = 404020; j < 404030; j++) _solve(b, j);
for(j = 404860; j < 404870; j++) _solve(b, j);
for(j = 405700; j < 405710; j++) _solve(b, j);
for(j = 406540; j < 406550; j++) _solve(b, j);
for(j = 407380; j < 407390; j++) _solve(b, j);
for(j = 408220; j < 408230; j++) _solve(b, j);
for(j = 409060; j < 409070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 409900; j < 409910; j++) _solve(b, j);
for(j = 410740; j < 410750; j++) _solve(b, j);
for(j = 411580; j < 411590; j++) _solve(b, j);
for(j = 412420; j < 412430; j++) _solve(b, j);
for(j = 413260; j < 413270; j++) _solve(b, j);
for(j = 414100; j < 414110; j++) _solve(b, j);
for(j = 414940; j < 414950; j++) _solve(b, j);
for(j = 415780; j < 415790; j++) _solve(b, j);
for(j = 416620; j < 416630; j++) _solve(b, j);
for(j = 417460; j < 417470; j++) _solve(b, j);
for(j = 418300; j < 418310; j++) _solve(b, j);
for(j = 419140; j < 419150; j++) _solve(b, j);
for(j = 419980; j < 419990; j++) _solve(b, j);
for(j = 420820; j < 420830; j++) _solve(b, j);
for(j = 421660; j < 421670; j++) _solve(b, j);
for(j = 422500; j < 422510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 423340; j < 423350; j++) _solve(b, j);
for(j = 424180; j < 424190; j++) _solve(b, j);
for(j = 425020; j < 425030; j++) _solve(b, j);
for(j = 425860; j < 425870; j++) _solve(b, j);
for(j = 426700; j < 426710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 356990; j < 357000; j++) _solve(b, j);
for(j = 357830; j < 357840; j++) _solve(b, j);
for(j = 358670; j < 358680; j++) _solve(b, j);
for(j = 359510; j < 359520; j++) _solve(b, j);
for(j = 360350; j < 360360; j++) _solve(b, j);
for(j = 361190; j < 361200; j++) _solve(b, j);
for(j = 362030; j < 362040; j++) _solve(b, j);
for(j = 362870; j < 362880; j++) _solve(b, j);
for(j = 363710; j < 363720; j++) _solve(b, j);
for(j = 364550; j < 364560; j++) _solve(b, j);
for(j = 365390; j < 365400; j++) _solve(b, j);
for(j = 366230; j < 366240; j++) _solve(b, j);
for(j = 367070; j < 367080; j++) _solve(b, j);
for(j = 367910; j < 367920; j++) _solve(b, j);
for(j = 368750; j < 368760; j++) _solve(b, j);
for(j = 369590; j < 369600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 370430; j < 370440; j++) _solve(b, j);
for(j = 371270; j < 371280; j++) _solve(b, j);
for(j = 372110; j < 372120; j++) _solve(b, j);
for(j = 372950; j < 372960; j++) _solve(b, j);
for(j = 373790; j < 373800; j++) _solve(b, j);
for(j = 374630; j < 374640; j++) _solve(b, j);
for(j = 375470; j < 375480; j++) _solve(b, j);
for(j = 376310; j < 376320; j++) _solve(b, j);
for(j = 377150; j < 377160; j++) _solve(b, j);
for(j = 377990; j < 378000; j++) _solve(b, j);
for(j = 378830; j < 378840; j++) _solve(b, j);
for(j = 379670; j < 379680; j++) _solve(b, j);
for(j = 380510; j < 380520; j++) _solve(b, j);
for(j = 381350; j < 381360; j++) _solve(b, j);
for(j = 382190; j < 382200; j++) _solve(b, j);
for(j = 383030; j < 383040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 383870; j < 383880; j++) _solve(b, j);
for(j = 384710; j < 384720; j++) _solve(b, j);
for(j = 385550; j < 385560; j++) _solve(b, j);
for(j = 386390; j < 386400; j++) _solve(b, j);
for(j = 387230; j < 387240; j++) _solve(b, j);
for(j = 388070; j < 388080; j++) _solve(b, j);
for(j = 388910; j < 388920; j++) _solve(b, j);
for(j = 389750; j < 389760; j++) _solve(b, j);
for(j = 390590; j < 390600; j++) _solve(b, j);
for(j = 391430; j < 391440; j++) _solve(b, j);
for(j = 392270; j < 392280; j++) _solve(b, j);
for(j = 393110; j < 393120; j++) _solve(b, j);
for(j = 393950; j < 393960; j++) _solve(b, j);
for(j = 394790; j < 394800; j++) _solve(b, j);
for(j = 395630; j < 395640; j++) _solve(b, j);
for(j = 396470; j < 396480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 397310; j < 397320; j++) _solve(b, j);
for(j = 398150; j < 398160; j++) _solve(b, j);
for(j = 398990; j < 399000; j++) _solve(b, j);
for(j = 399830; j < 399840; j++) _solve(b, j);
for(j = 400670; j < 400680; j++) _solve(b, j);
for(j = 401510; j < 401520; j++) _solve(b, j);
for(j = 402350; j < 402360; j++) _solve(b, j);
for(j = 403190; j < 403200; j++) _solve(b, j);
for(j = 404030; j < 404040; j++) _solve(b, j);
for(j = 404870; j < 404880; j++) _solve(b, j);
for(j = 405710; j < 405720; j++) _solve(b, j);
for(j = 406550; j < 406560; j++) _solve(b, j);
for(j = 407390; j < 407400; j++) _solve(b, j);
for(j = 408230; j < 408240; j++) _solve(b, j);
for(j = 409070; j < 409080; j++) _solve(b, j);
for(j = 409910; j < 409920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 410750; j < 410760; j++) _solve(b, j);
for(j = 411590; j < 411600; j++) _solve(b, j);
for(j = 412430; j < 412440; j++) _solve(b, j);
for(j = 413270; j < 413280; j++) _solve(b, j);
for(j = 414110; j < 414120; j++) _solve(b, j);
for(j = 414950; j < 414960; j++) _solve(b, j);
for(j = 415790; j < 415800; j++) _solve(b, j);
for(j = 416630; j < 416640; j++) _solve(b, j);
for(j = 417470; j < 417480; j++) _solve(b, j);
for(j = 418310; j < 418320; j++) _solve(b, j);
for(j = 419150; j < 419160; j++) _solve(b, j);
for(j = 419990; j < 420000; j++) _solve(b, j);
for(j = 420830; j < 420840; j++) _solve(b, j);
for(j = 421670; j < 421680; j++) _solve(b, j);
for(j = 422510; j < 422520; j++) _solve(b, j);
for(j = 423350; j < 423360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 424190; j < 424200; j++) _solve(b, j);
for(j = 425030; j < 425040; j++) _solve(b, j);
for(j = 425870; j < 425880; j++) _solve(b, j);
for(j = 426710; j < 426720; j++) _solve(b, j);
for(j = 427550; j < 427560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 357840; j < 357850; j++) _solve(b, j);
for(j = 358680; j < 358690; j++) _solve(b, j);
for(j = 359520; j < 359530; j++) _solve(b, j);
for(j = 360360; j < 360370; j++) _solve(b, j);
for(j = 361200; j < 361210; j++) _solve(b, j);
for(j = 362040; j < 362050; j++) _solve(b, j);
for(j = 362880; j < 362890; j++) _solve(b, j);
for(j = 363720; j < 363730; j++) _solve(b, j);
for(j = 364560; j < 364570; j++) _solve(b, j);
for(j = 365400; j < 365410; j++) _solve(b, j);
for(j = 366240; j < 366250; j++) _solve(b, j);
for(j = 367080; j < 367090; j++) _solve(b, j);
for(j = 367920; j < 367930; j++) _solve(b, j);
for(j = 368760; j < 368770; j++) _solve(b, j);
for(j = 369600; j < 369610; j++) _solve(b, j);
for(j = 370440; j < 370450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 371280; j < 371290; j++) _solve(b, j);
for(j = 372120; j < 372130; j++) _solve(b, j);
for(j = 372960; j < 372970; j++) _solve(b, j);
for(j = 373800; j < 373810; j++) _solve(b, j);
for(j = 374640; j < 374650; j++) _solve(b, j);
for(j = 375480; j < 375490; j++) _solve(b, j);
for(j = 376320; j < 376330; j++) _solve(b, j);
for(j = 377160; j < 377170; j++) _solve(b, j);
for(j = 378000; j < 378010; j++) _solve(b, j);
for(j = 378840; j < 378850; j++) _solve(b, j);
for(j = 379680; j < 379690; j++) _solve(b, j);
for(j = 380520; j < 380530; j++) _solve(b, j);
for(j = 381360; j < 381370; j++) _solve(b, j);
for(j = 382200; j < 382210; j++) _solve(b, j);
for(j = 383040; j < 383050; j++) _solve(b, j);
for(j = 383880; j < 383890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 384720; j < 384730; j++) _solve(b, j);
for(j = 385560; j < 385570; j++) _solve(b, j);
for(j = 386400; j < 386410; j++) _solve(b, j);
for(j = 387240; j < 387250; j++) _solve(b, j);
for(j = 388080; j < 388090; j++) _solve(b, j);
for(j = 388920; j < 388930; j++) _solve(b, j);
for(j = 389760; j < 389770; j++) _solve(b, j);
for(j = 390600; j < 390610; j++) _solve(b, j);
for(j = 391440; j < 391450; j++) _solve(b, j);
for(j = 392280; j < 392290; j++) _solve(b, j);
for(j = 393120; j < 393130; j++) _solve(b, j);
for(j = 393960; j < 393970; j++) _solve(b, j);
for(j = 394800; j < 394810; j++) _solve(b, j);
for(j = 395640; j < 395650; j++) _solve(b, j);
for(j = 396480; j < 396490; j++) _solve(b, j);
for(j = 397320; j < 397330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 398160; j < 398170; j++) _solve(b, j);
for(j = 399000; j < 399010; j++) _solve(b, j);
for(j = 399840; j < 399850; j++) _solve(b, j);
for(j = 400680; j < 400690; j++) _solve(b, j);
for(j = 401520; j < 401530; j++) _solve(b, j);
for(j = 402360; j < 402370; j++) _solve(b, j);
for(j = 403200; j < 403210; j++) _solve(b, j);
for(j = 404040; j < 404050; j++) _solve(b, j);
for(j = 404880; j < 404890; j++) _solve(b, j);
for(j = 405720; j < 405730; j++) _solve(b, j);
for(j = 406560; j < 406570; j++) _solve(b, j);
for(j = 407400; j < 407410; j++) _solve(b, j);
for(j = 408240; j < 408250; j++) _solve(b, j);
for(j = 409080; j < 409090; j++) _solve(b, j);
for(j = 409920; j < 409930; j++) _solve(b, j);
for(j = 410760; j < 410770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 411600; j < 411610; j++) _solve(b, j);
for(j = 412440; j < 412450; j++) _solve(b, j);
for(j = 413280; j < 413290; j++) _solve(b, j);
for(j = 414120; j < 414130; j++) _solve(b, j);
for(j = 414960; j < 414970; j++) _solve(b, j);
for(j = 415800; j < 415810; j++) _solve(b, j);
for(j = 416640; j < 416650; j++) _solve(b, j);
for(j = 417480; j < 417490; j++) _solve(b, j);
for(j = 418320; j < 418330; j++) _solve(b, j);
for(j = 419160; j < 419170; j++) _solve(b, j);
for(j = 420000; j < 420010; j++) _solve(b, j);
for(j = 420840; j < 420850; j++) _solve(b, j);
for(j = 421680; j < 421690; j++) _solve(b, j);
for(j = 422520; j < 422530; j++) _solve(b, j);
for(j = 423360; j < 423370; j++) _solve(b, j);
for(j = 424200; j < 424210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 425040; j < 425050; j++) _solve(b, j);
for(j = 425880; j < 425890; j++) _solve(b, j);
for(j = 426720; j < 426730; j++) _solve(b, j);
for(j = 427560; j < 427570; j++) _solve(b, j);
for(j = 428400; j < 428410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 358690; j < 358700; j++) _solve(b, j);
for(j = 359530; j < 359540; j++) _solve(b, j);
for(j = 360370; j < 360380; j++) _solve(b, j);
for(j = 361210; j < 361220; j++) _solve(b, j);
for(j = 362050; j < 362060; j++) _solve(b, j);
for(j = 362890; j < 362900; j++) _solve(b, j);
for(j = 363730; j < 363740; j++) _solve(b, j);
for(j = 364570; j < 364580; j++) _solve(b, j);
for(j = 365410; j < 365420; j++) _solve(b, j);
for(j = 366250; j < 366260; j++) _solve(b, j);
for(j = 367090; j < 367100; j++) _solve(b, j);
for(j = 367930; j < 367940; j++) _solve(b, j);
for(j = 368770; j < 368780; j++) _solve(b, j);
for(j = 369610; j < 369620; j++) _solve(b, j);
for(j = 370450; j < 370460; j++) _solve(b, j);
for(j = 371290; j < 371300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 372130; j < 372140; j++) _solve(b, j);
for(j = 372970; j < 372980; j++) _solve(b, j);
for(j = 373810; j < 373820; j++) _solve(b, j);
for(j = 374650; j < 374660; j++) _solve(b, j);
for(j = 375490; j < 375500; j++) _solve(b, j);
for(j = 376330; j < 376340; j++) _solve(b, j);
for(j = 377170; j < 377180; j++) _solve(b, j);
for(j = 378010; j < 378020; j++) _solve(b, j);
for(j = 378850; j < 378860; j++) _solve(b, j);
for(j = 379690; j < 379700; j++) _solve(b, j);
for(j = 380530; j < 380540; j++) _solve(b, j);
for(j = 381370; j < 381380; j++) _solve(b, j);
for(j = 382210; j < 382220; j++) _solve(b, j);
for(j = 383050; j < 383060; j++) _solve(b, j);
for(j = 383890; j < 383900; j++) _solve(b, j);
for(j = 384730; j < 384740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 385570; j < 385580; j++) _solve(b, j);
for(j = 386410; j < 386420; j++) _solve(b, j);
for(j = 387250; j < 387260; j++) _solve(b, j);
for(j = 388090; j < 388100; j++) _solve(b, j);
for(j = 388930; j < 388940; j++) _solve(b, j);
for(j = 389770; j < 389780; j++) _solve(b, j);
for(j = 390610; j < 390620; j++) _solve(b, j);
for(j = 391450; j < 391460; j++) _solve(b, j);
for(j = 392290; j < 392300; j++) _solve(b, j);
for(j = 393130; j < 393140; j++) _solve(b, j);
for(j = 393970; j < 393980; j++) _solve(b, j);
for(j = 394810; j < 394820; j++) _solve(b, j);
for(j = 395650; j < 395660; j++) _solve(b, j);
for(j = 396490; j < 396500; j++) _solve(b, j);
for(j = 397330; j < 397340; j++) _solve(b, j);
for(j = 398170; j < 398180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 399010; j < 399020; j++) _solve(b, j);
for(j = 399850; j < 399860; j++) _solve(b, j);
for(j = 400690; j < 400700; j++) _solve(b, j);
for(j = 401530; j < 401540; j++) _solve(b, j);
for(j = 402370; j < 402380; j++) _solve(b, j);
for(j = 403210; j < 403220; j++) _solve(b, j);
for(j = 404050; j < 404060; j++) _solve(b, j);
for(j = 404890; j < 404900; j++) _solve(b, j);
for(j = 405730; j < 405740; j++) _solve(b, j);
for(j = 406570; j < 406580; j++) _solve(b, j);
for(j = 407410; j < 407420; j++) _solve(b, j);
for(j = 408250; j < 408260; j++) _solve(b, j);
for(j = 409090; j < 409100; j++) _solve(b, j);
for(j = 409930; j < 409940; j++) _solve(b, j);
for(j = 410770; j < 410780; j++) _solve(b, j);
for(j = 411610; j < 411620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 412450; j < 412460; j++) _solve(b, j);
for(j = 413290; j < 413300; j++) _solve(b, j);
for(j = 414130; j < 414140; j++) _solve(b, j);
for(j = 414970; j < 414980; j++) _solve(b, j);
for(j = 415810; j < 415820; j++) _solve(b, j);
for(j = 416650; j < 416660; j++) _solve(b, j);
for(j = 417490; j < 417500; j++) _solve(b, j);
for(j = 418330; j < 418340; j++) _solve(b, j);
for(j = 419170; j < 419180; j++) _solve(b, j);
for(j = 420010; j < 420020; j++) _solve(b, j);
for(j = 420850; j < 420860; j++) _solve(b, j);
for(j = 421690; j < 421700; j++) _solve(b, j);
for(j = 422530; j < 422540; j++) _solve(b, j);
for(j = 423370; j < 423380; j++) _solve(b, j);
for(j = 424210; j < 424220; j++) _solve(b, j);
for(j = 425050; j < 425060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 425890; j < 425900; j++) _solve(b, j);
for(j = 426730; j < 426740; j++) _solve(b, j);
for(j = 427570; j < 427580; j++) _solve(b, j);
for(j = 428410; j < 428420; j++) _solve(b, j);
for(j = 429250; j < 429260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 359540; j < 359550; j++) _solve(b, j);
for(j = 360380; j < 360390; j++) _solve(b, j);
for(j = 361220; j < 361230; j++) _solve(b, j);
for(j = 362060; j < 362070; j++) _solve(b, j);
for(j = 362900; j < 362910; j++) _solve(b, j);
for(j = 363740; j < 363750; j++) _solve(b, j);
for(j = 364580; j < 364590; j++) _solve(b, j);
for(j = 365420; j < 365430; j++) _solve(b, j);
for(j = 366260; j < 366270; j++) _solve(b, j);
for(j = 367100; j < 367110; j++) _solve(b, j);
for(j = 367940; j < 367950; j++) _solve(b, j);
for(j = 368780; j < 368790; j++) _solve(b, j);
for(j = 369620; j < 369630; j++) _solve(b, j);
for(j = 370460; j < 370470; j++) _solve(b, j);
for(j = 371300; j < 371310; j++) _solve(b, j);
for(j = 372140; j < 372150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 372980; j < 372990; j++) _solve(b, j);
for(j = 373820; j < 373830; j++) _solve(b, j);
for(j = 374660; j < 374670; j++) _solve(b, j);
for(j = 375500; j < 375510; j++) _solve(b, j);
for(j = 376340; j < 376350; j++) _solve(b, j);
for(j = 377180; j < 377190; j++) _solve(b, j);
for(j = 378020; j < 378030; j++) _solve(b, j);
for(j = 378860; j < 378870; j++) _solve(b, j);
for(j = 379700; j < 379710; j++) _solve(b, j);
for(j = 380540; j < 380550; j++) _solve(b, j);
for(j = 381380; j < 381390; j++) _solve(b, j);
for(j = 382220; j < 382230; j++) _solve(b, j);
for(j = 383060; j < 383070; j++) _solve(b, j);
for(j = 383900; j < 383910; j++) _solve(b, j);
for(j = 384740; j < 384750; j++) _solve(b, j);
for(j = 385580; j < 385590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 386420; j < 386430; j++) _solve(b, j);
for(j = 387260; j < 387270; j++) _solve(b, j);
for(j = 388100; j < 388110; j++) _solve(b, j);
for(j = 388940; j < 388950; j++) _solve(b, j);
for(j = 389780; j < 389790; j++) _solve(b, j);
for(j = 390620; j < 390630; j++) _solve(b, j);
for(j = 391460; j < 391470; j++) _solve(b, j);
for(j = 392300; j < 392310; j++) _solve(b, j);
for(j = 393140; j < 393150; j++) _solve(b, j);
for(j = 393980; j < 393990; j++) _solve(b, j);
for(j = 394820; j < 394830; j++) _solve(b, j);
for(j = 395660; j < 395670; j++) _solve(b, j);
for(j = 396500; j < 396510; j++) _solve(b, j);
for(j = 397340; j < 397350; j++) _solve(b, j);
for(j = 398180; j < 398190; j++) _solve(b, j);
for(j = 399020; j < 399030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 399860; j < 399870; j++) _solve(b, j);
for(j = 400700; j < 400710; j++) _solve(b, j);
for(j = 401540; j < 401550; j++) _solve(b, j);
for(j = 402380; j < 402390; j++) _solve(b, j);
for(j = 403220; j < 403230; j++) _solve(b, j);
for(j = 404060; j < 404070; j++) _solve(b, j);
for(j = 404900; j < 404910; j++) _solve(b, j);
for(j = 405740; j < 405750; j++) _solve(b, j);
for(j = 406580; j < 406590; j++) _solve(b, j);
for(j = 407420; j < 407430; j++) _solve(b, j);
for(j = 408260; j < 408270; j++) _solve(b, j);
for(j = 409100; j < 409110; j++) _solve(b, j);
for(j = 409940; j < 409950; j++) _solve(b, j);
for(j = 410780; j < 410790; j++) _solve(b, j);
for(j = 411620; j < 411630; j++) _solve(b, j);
for(j = 412460; j < 412470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 413300; j < 413310; j++) _solve(b, j);
for(j = 414140; j < 414150; j++) _solve(b, j);
for(j = 414980; j < 414990; j++) _solve(b, j);
for(j = 415820; j < 415830; j++) _solve(b, j);
for(j = 416660; j < 416670; j++) _solve(b, j);
for(j = 417500; j < 417510; j++) _solve(b, j);
for(j = 418340; j < 418350; j++) _solve(b, j);
for(j = 419180; j < 419190; j++) _solve(b, j);
for(j = 420020; j < 420030; j++) _solve(b, j);
for(j = 420860; j < 420870; j++) _solve(b, j);
for(j = 421700; j < 421710; j++) _solve(b, j);
for(j = 422540; j < 422550; j++) _solve(b, j);
for(j = 423380; j < 423390; j++) _solve(b, j);
for(j = 424220; j < 424230; j++) _solve(b, j);
for(j = 425060; j < 425070; j++) _solve(b, j);
for(j = 425900; j < 425910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 426740; j < 426750; j++) _solve(b, j);
for(j = 427580; j < 427590; j++) _solve(b, j);
for(j = 428420; j < 428430; j++) _solve(b, j);
for(j = 429260; j < 429270; j++) _solve(b, j);
for(j = 430100; j < 430110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 360390; j < 360400; j++) _solve(b, j);
for(j = 361230; j < 361240; j++) _solve(b, j);
for(j = 362070; j < 362080; j++) _solve(b, j);
for(j = 362910; j < 362920; j++) _solve(b, j);
for(j = 363750; j < 363760; j++) _solve(b, j);
for(j = 364590; j < 364600; j++) _solve(b, j);
for(j = 365430; j < 365440; j++) _solve(b, j);
for(j = 366270; j < 366280; j++) _solve(b, j);
for(j = 367110; j < 367120; j++) _solve(b, j);
for(j = 367950; j < 367960; j++) _solve(b, j);
for(j = 368790; j < 368800; j++) _solve(b, j);
for(j = 369630; j < 369640; j++) _solve(b, j);
for(j = 370470; j < 370480; j++) _solve(b, j);
for(j = 371310; j < 371320; j++) _solve(b, j);
for(j = 372150; j < 372160; j++) _solve(b, j);
for(j = 372990; j < 373000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 373830; j < 373840; j++) _solve(b, j);
for(j = 374670; j < 374680; j++) _solve(b, j);
for(j = 375510; j < 375520; j++) _solve(b, j);
for(j = 376350; j < 376360; j++) _solve(b, j);
for(j = 377190; j < 377200; j++) _solve(b, j);
for(j = 378030; j < 378040; j++) _solve(b, j);
for(j = 378870; j < 378880; j++) _solve(b, j);
for(j = 379710; j < 379720; j++) _solve(b, j);
for(j = 380550; j < 380560; j++) _solve(b, j);
for(j = 381390; j < 381400; j++) _solve(b, j);
for(j = 382230; j < 382240; j++) _solve(b, j);
for(j = 383070; j < 383080; j++) _solve(b, j);
for(j = 383910; j < 383920; j++) _solve(b, j);
for(j = 384750; j < 384760; j++) _solve(b, j);
for(j = 385590; j < 385600; j++) _solve(b, j);
for(j = 386430; j < 386440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 387270; j < 387280; j++) _solve(b, j);
for(j = 388110; j < 388120; j++) _solve(b, j);
for(j = 388950; j < 388960; j++) _solve(b, j);
for(j = 389790; j < 389800; j++) _solve(b, j);
for(j = 390630; j < 390640; j++) _solve(b, j);
for(j = 391470; j < 391480; j++) _solve(b, j);
for(j = 392310; j < 392320; j++) _solve(b, j);
for(j = 393150; j < 393160; j++) _solve(b, j);
for(j = 393990; j < 394000; j++) _solve(b, j);
for(j = 394830; j < 394840; j++) _solve(b, j);
for(j = 395670; j < 395680; j++) _solve(b, j);
for(j = 396510; j < 396520; j++) _solve(b, j);
for(j = 397350; j < 397360; j++) _solve(b, j);
for(j = 398190; j < 398200; j++) _solve(b, j);
for(j = 399030; j < 399040; j++) _solve(b, j);
for(j = 399870; j < 399880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 400710; j < 400720; j++) _solve(b, j);
for(j = 401550; j < 401560; j++) _solve(b, j);
for(j = 402390; j < 402400; j++) _solve(b, j);
for(j = 403230; j < 403240; j++) _solve(b, j);
for(j = 404070; j < 404080; j++) _solve(b, j);
for(j = 404910; j < 404920; j++) _solve(b, j);
for(j = 405750; j < 405760; j++) _solve(b, j);
for(j = 406590; j < 406600; j++) _solve(b, j);
for(j = 407430; j < 407440; j++) _solve(b, j);
for(j = 408270; j < 408280; j++) _solve(b, j);
for(j = 409110; j < 409120; j++) _solve(b, j);
for(j = 409950; j < 409960; j++) _solve(b, j);
for(j = 410790; j < 410800; j++) _solve(b, j);
for(j = 411630; j < 411640; j++) _solve(b, j);
for(j = 412470; j < 412480; j++) _solve(b, j);
for(j = 413310; j < 413320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 414150; j < 414160; j++) _solve(b, j);
for(j = 414990; j < 415000; j++) _solve(b, j);
for(j = 415830; j < 415840; j++) _solve(b, j);
for(j = 416670; j < 416680; j++) _solve(b, j);
for(j = 417510; j < 417520; j++) _solve(b, j);
for(j = 418350; j < 418360; j++) _solve(b, j);
for(j = 419190; j < 419200; j++) _solve(b, j);
for(j = 420030; j < 420040; j++) _solve(b, j);
for(j = 420870; j < 420880; j++) _solve(b, j);
for(j = 421710; j < 421720; j++) _solve(b, j);
for(j = 422550; j < 422560; j++) _solve(b, j);
for(j = 423390; j < 423400; j++) _solve(b, j);
for(j = 424230; j < 424240; j++) _solve(b, j);
for(j = 425070; j < 425080; j++) _solve(b, j);
for(j = 425910; j < 425920; j++) _solve(b, j);
for(j = 426750; j < 426760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 427590; j < 427600; j++) _solve(b, j);
for(j = 428430; j < 428440; j++) _solve(b, j);
for(j = 429270; j < 429280; j++) _solve(b, j);
for(j = 430110; j < 430120; j++) _solve(b, j);
for(j = 430950; j < 430960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 361240; j < 361250; j++) _solve(b, j);
for(j = 362080; j < 362090; j++) _solve(b, j);
for(j = 362920; j < 362930; j++) _solve(b, j);
for(j = 363760; j < 363770; j++) _solve(b, j);
for(j = 364600; j < 364610; j++) _solve(b, j);
for(j = 365440; j < 365450; j++) _solve(b, j);
for(j = 366280; j < 366290; j++) _solve(b, j);
for(j = 367120; j < 367130; j++) _solve(b, j);
for(j = 367960; j < 367970; j++) _solve(b, j);
for(j = 368800; j < 368810; j++) _solve(b, j);
for(j = 369640; j < 369650; j++) _solve(b, j);
for(j = 370480; j < 370490; j++) _solve(b, j);
for(j = 371320; j < 371330; j++) _solve(b, j);
for(j = 372160; j < 372170; j++) _solve(b, j);
for(j = 373000; j < 373010; j++) _solve(b, j);
for(j = 373840; j < 373850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 374680; j < 374690; j++) _solve(b, j);
for(j = 375520; j < 375530; j++) _solve(b, j);
for(j = 376360; j < 376370; j++) _solve(b, j);
for(j = 377200; j < 377210; j++) _solve(b, j);
for(j = 378040; j < 378050; j++) _solve(b, j);
for(j = 378880; j < 378890; j++) _solve(b, j);
for(j = 379720; j < 379730; j++) _solve(b, j);
for(j = 380560; j < 380570; j++) _solve(b, j);
for(j = 381400; j < 381410; j++) _solve(b, j);
for(j = 382240; j < 382250; j++) _solve(b, j);
for(j = 383080; j < 383090; j++) _solve(b, j);
for(j = 383920; j < 383930; j++) _solve(b, j);
for(j = 384760; j < 384770; j++) _solve(b, j);
for(j = 385600; j < 385610; j++) _solve(b, j);
for(j = 386440; j < 386450; j++) _solve(b, j);
for(j = 387280; j < 387290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 388120; j < 388130; j++) _solve(b, j);
for(j = 388960; j < 388970; j++) _solve(b, j);
for(j = 389800; j < 389810; j++) _solve(b, j);
for(j = 390640; j < 390650; j++) _solve(b, j);
for(j = 391480; j < 391490; j++) _solve(b, j);
for(j = 392320; j < 392330; j++) _solve(b, j);
for(j = 393160; j < 393170; j++) _solve(b, j);
for(j = 394000; j < 394010; j++) _solve(b, j);
for(j = 394840; j < 394850; j++) _solve(b, j);
for(j = 395680; j < 395690; j++) _solve(b, j);
for(j = 396520; j < 396530; j++) _solve(b, j);
for(j = 397360; j < 397370; j++) _solve(b, j);
for(j = 398200; j < 398210; j++) _solve(b, j);
for(j = 399040; j < 399050; j++) _solve(b, j);
for(j = 399880; j < 399890; j++) _solve(b, j);
for(j = 400720; j < 400730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 401560; j < 401570; j++) _solve(b, j);
for(j = 402400; j < 402410; j++) _solve(b, j);
for(j = 403240; j < 403250; j++) _solve(b, j);
for(j = 404080; j < 404090; j++) _solve(b, j);
for(j = 404920; j < 404930; j++) _solve(b, j);
for(j = 405760; j < 405770; j++) _solve(b, j);
for(j = 406600; j < 406610; j++) _solve(b, j);
for(j = 407440; j < 407450; j++) _solve(b, j);
for(j = 408280; j < 408290; j++) _solve(b, j);
for(j = 409120; j < 409130; j++) _solve(b, j);
for(j = 409960; j < 409970; j++) _solve(b, j);
for(j = 410800; j < 410810; j++) _solve(b, j);
for(j = 411640; j < 411650; j++) _solve(b, j);
for(j = 412480; j < 412490; j++) _solve(b, j);
for(j = 413320; j < 413330; j++) _solve(b, j);
for(j = 414160; j < 414170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 415000; j < 415010; j++) _solve(b, j);
for(j = 415840; j < 415850; j++) _solve(b, j);
for(j = 416680; j < 416690; j++) _solve(b, j);
for(j = 417520; j < 417530; j++) _solve(b, j);
for(j = 418360; j < 418370; j++) _solve(b, j);
for(j = 419200; j < 419210; j++) _solve(b, j);
for(j = 420040; j < 420050; j++) _solve(b, j);
for(j = 420880; j < 420890; j++) _solve(b, j);
for(j = 421720; j < 421730; j++) _solve(b, j);
for(j = 422560; j < 422570; j++) _solve(b, j);
for(j = 423400; j < 423410; j++) _solve(b, j);
for(j = 424240; j < 424250; j++) _solve(b, j);
for(j = 425080; j < 425090; j++) _solve(b, j);
for(j = 425920; j < 425930; j++) _solve(b, j);
for(j = 426760; j < 426770; j++) _solve(b, j);
for(j = 427600; j < 427610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 428440; j < 428450; j++) _solve(b, j);
for(j = 429280; j < 429290; j++) _solve(b, j);
for(j = 430120; j < 430130; j++) _solve(b, j);
for(j = 430960; j < 430970; j++) _solve(b, j);
for(j = 431800; j < 431810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 362090; j < 362100; j++) _solve(b, j);
for(j = 362930; j < 362940; j++) _solve(b, j);
for(j = 363770; j < 363780; j++) _solve(b, j);
for(j = 364610; j < 364620; j++) _solve(b, j);
for(j = 365450; j < 365460; j++) _solve(b, j);
for(j = 366290; j < 366300; j++) _solve(b, j);
for(j = 367130; j < 367140; j++) _solve(b, j);
for(j = 367970; j < 367980; j++) _solve(b, j);
for(j = 368810; j < 368820; j++) _solve(b, j);
for(j = 369650; j < 369660; j++) _solve(b, j);
for(j = 370490; j < 370500; j++) _solve(b, j);
for(j = 371330; j < 371340; j++) _solve(b, j);
for(j = 372170; j < 372180; j++) _solve(b, j);
for(j = 373010; j < 373020; j++) _solve(b, j);
for(j = 373850; j < 373860; j++) _solve(b, j);
for(j = 374690; j < 374700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 375530; j < 375540; j++) _solve(b, j);
for(j = 376370; j < 376380; j++) _solve(b, j);
for(j = 377210; j < 377220; j++) _solve(b, j);
for(j = 378050; j < 378060; j++) _solve(b, j);
for(j = 378890; j < 378900; j++) _solve(b, j);
for(j = 379730; j < 379740; j++) _solve(b, j);
for(j = 380570; j < 380580; j++) _solve(b, j);
for(j = 381410; j < 381420; j++) _solve(b, j);
for(j = 382250; j < 382260; j++) _solve(b, j);
for(j = 383090; j < 383100; j++) _solve(b, j);
for(j = 383930; j < 383940; j++) _solve(b, j);
for(j = 384770; j < 384780; j++) _solve(b, j);
for(j = 385610; j < 385620; j++) _solve(b, j);
for(j = 386450; j < 386460; j++) _solve(b, j);
for(j = 387290; j < 387300; j++) _solve(b, j);
for(j = 388130; j < 388140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 388970; j < 388980; j++) _solve(b, j);
for(j = 389810; j < 389820; j++) _solve(b, j);
for(j = 390650; j < 390660; j++) _solve(b, j);
for(j = 391490; j < 391500; j++) _solve(b, j);
for(j = 392330; j < 392340; j++) _solve(b, j);
for(j = 393170; j < 393180; j++) _solve(b, j);
for(j = 394010; j < 394020; j++) _solve(b, j);
for(j = 394850; j < 394860; j++) _solve(b, j);
for(j = 395690; j < 395700; j++) _solve(b, j);
for(j = 396530; j < 396540; j++) _solve(b, j);
for(j = 397370; j < 397380; j++) _solve(b, j);
for(j = 398210; j < 398220; j++) _solve(b, j);
for(j = 399050; j < 399060; j++) _solve(b, j);
for(j = 399890; j < 399900; j++) _solve(b, j);
for(j = 400730; j < 400740; j++) _solve(b, j);
for(j = 401570; j < 401580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 402410; j < 402420; j++) _solve(b, j);
for(j = 403250; j < 403260; j++) _solve(b, j);
for(j = 404090; j < 404100; j++) _solve(b, j);
for(j = 404930; j < 404940; j++) _solve(b, j);
for(j = 405770; j < 405780; j++) _solve(b, j);
for(j = 406610; j < 406620; j++) _solve(b, j);
for(j = 407450; j < 407460; j++) _solve(b, j);
for(j = 408290; j < 408300; j++) _solve(b, j);
for(j = 409130; j < 409140; j++) _solve(b, j);
for(j = 409970; j < 409980; j++) _solve(b, j);
for(j = 410810; j < 410820; j++) _solve(b, j);
for(j = 411650; j < 411660; j++) _solve(b, j);
for(j = 412490; j < 412500; j++) _solve(b, j);
for(j = 413330; j < 413340; j++) _solve(b, j);
for(j = 414170; j < 414180; j++) _solve(b, j);
for(j = 415010; j < 415020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 415850; j < 415860; j++) _solve(b, j);
for(j = 416690; j < 416700; j++) _solve(b, j);
for(j = 417530; j < 417540; j++) _solve(b, j);
for(j = 418370; j < 418380; j++) _solve(b, j);
for(j = 419210; j < 419220; j++) _solve(b, j);
for(j = 420050; j < 420060; j++) _solve(b, j);
for(j = 420890; j < 420900; j++) _solve(b, j);
for(j = 421730; j < 421740; j++) _solve(b, j);
for(j = 422570; j < 422580; j++) _solve(b, j);
for(j = 423410; j < 423420; j++) _solve(b, j);
for(j = 424250; j < 424260; j++) _solve(b, j);
for(j = 425090; j < 425100; j++) _solve(b, j);
for(j = 425930; j < 425940; j++) _solve(b, j);
for(j = 426770; j < 426780; j++) _solve(b, j);
for(j = 427610; j < 427620; j++) _solve(b, j);
for(j = 428450; j < 428460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 429290; j < 429300; j++) _solve(b, j);
for(j = 430130; j < 430140; j++) _solve(b, j);
for(j = 430970; j < 430980; j++) _solve(b, j);
for(j = 431810; j < 431820; j++) _solve(b, j);
for(j = 432650; j < 432660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 362940; j < 362950; j++) _solve(b, j);
for(j = 363780; j < 363790; j++) _solve(b, j);
for(j = 364620; j < 364630; j++) _solve(b, j);
for(j = 365460; j < 365470; j++) _solve(b, j);
for(j = 366300; j < 366310; j++) _solve(b, j);
for(j = 367140; j < 367150; j++) _solve(b, j);
for(j = 367980; j < 367990; j++) _solve(b, j);
for(j = 368820; j < 368830; j++) _solve(b, j);
for(j = 369660; j < 369670; j++) _solve(b, j);
for(j = 370500; j < 370510; j++) _solve(b, j);
for(j = 371340; j < 371350; j++) _solve(b, j);
for(j = 372180; j < 372190; j++) _solve(b, j);
for(j = 373020; j < 373030; j++) _solve(b, j);
for(j = 373860; j < 373870; j++) _solve(b, j);
for(j = 374700; j < 374710; j++) _solve(b, j);
for(j = 375540; j < 375550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 376380; j < 376390; j++) _solve(b, j);
for(j = 377220; j < 377230; j++) _solve(b, j);
for(j = 378060; j < 378070; j++) _solve(b, j);
for(j = 378900; j < 378910; j++) _solve(b, j);
for(j = 379740; j < 379750; j++) _solve(b, j);
for(j = 380580; j < 380590; j++) _solve(b, j);
for(j = 381420; j < 381430; j++) _solve(b, j);
for(j = 382260; j < 382270; j++) _solve(b, j);
for(j = 383100; j < 383110; j++) _solve(b, j);
for(j = 383940; j < 383950; j++) _solve(b, j);
for(j = 384780; j < 384790; j++) _solve(b, j);
for(j = 385620; j < 385630; j++) _solve(b, j);
for(j = 386460; j < 386470; j++) _solve(b, j);
for(j = 387300; j < 387310; j++) _solve(b, j);
for(j = 388140; j < 388150; j++) _solve(b, j);
for(j = 388980; j < 388990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 389820; j < 389830; j++) _solve(b, j);
for(j = 390660; j < 390670; j++) _solve(b, j);
for(j = 391500; j < 391510; j++) _solve(b, j);
for(j = 392340; j < 392350; j++) _solve(b, j);
for(j = 393180; j < 393190; j++) _solve(b, j);
for(j = 394020; j < 394030; j++) _solve(b, j);
for(j = 394860; j < 394870; j++) _solve(b, j);
for(j = 395700; j < 395710; j++) _solve(b, j);
for(j = 396540; j < 396550; j++) _solve(b, j);
for(j = 397380; j < 397390; j++) _solve(b, j);
for(j = 398220; j < 398230; j++) _solve(b, j);
for(j = 399060; j < 399070; j++) _solve(b, j);
for(j = 399900; j < 399910; j++) _solve(b, j);
for(j = 400740; j < 400750; j++) _solve(b, j);
for(j = 401580; j < 401590; j++) _solve(b, j);
for(j = 402420; j < 402430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 403260; j < 403270; j++) _solve(b, j);
for(j = 404100; j < 404110; j++) _solve(b, j);
for(j = 404940; j < 404950; j++) _solve(b, j);
for(j = 405780; j < 405790; j++) _solve(b, j);
for(j = 406620; j < 406630; j++) _solve(b, j);
for(j = 407460; j < 407470; j++) _solve(b, j);
for(j = 408300; j < 408310; j++) _solve(b, j);
for(j = 409140; j < 409150; j++) _solve(b, j);
for(j = 409980; j < 409990; j++) _solve(b, j);
for(j = 410820; j < 410830; j++) _solve(b, j);
for(j = 411660; j < 411670; j++) _solve(b, j);
for(j = 412500; j < 412510; j++) _solve(b, j);
for(j = 413340; j < 413350; j++) _solve(b, j);
for(j = 414180; j < 414190; j++) _solve(b, j);
for(j = 415020; j < 415030; j++) _solve(b, j);
for(j = 415860; j < 415870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 416700; j < 416710; j++) _solve(b, j);
for(j = 417540; j < 417550; j++) _solve(b, j);
for(j = 418380; j < 418390; j++) _solve(b, j);
for(j = 419220; j < 419230; j++) _solve(b, j);
for(j = 420060; j < 420070; j++) _solve(b, j);
for(j = 420900; j < 420910; j++) _solve(b, j);
for(j = 421740; j < 421750; j++) _solve(b, j);
for(j = 422580; j < 422590; j++) _solve(b, j);
for(j = 423420; j < 423430; j++) _solve(b, j);
for(j = 424260; j < 424270; j++) _solve(b, j);
for(j = 425100; j < 425110; j++) _solve(b, j);
for(j = 425940; j < 425950; j++) _solve(b, j);
for(j = 426780; j < 426790; j++) _solve(b, j);
for(j = 427620; j < 427630; j++) _solve(b, j);
for(j = 428460; j < 428470; j++) _solve(b, j);
for(j = 429300; j < 429310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 430140; j < 430150; j++) _solve(b, j);
for(j = 430980; j < 430990; j++) _solve(b, j);
for(j = 431820; j < 431830; j++) _solve(b, j);
for(j = 432660; j < 432670; j++) _solve(b, j);
for(j = 433500; j < 433510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 363790; j < 363800; j++) _solve(b, j);
for(j = 364630; j < 364640; j++) _solve(b, j);
for(j = 365470; j < 365480; j++) _solve(b, j);
for(j = 366310; j < 366320; j++) _solve(b, j);
for(j = 367150; j < 367160; j++) _solve(b, j);
for(j = 367990; j < 368000; j++) _solve(b, j);
for(j = 368830; j < 368840; j++) _solve(b, j);
for(j = 369670; j < 369680; j++) _solve(b, j);
for(j = 370510; j < 370520; j++) _solve(b, j);
for(j = 371350; j < 371360; j++) _solve(b, j);
for(j = 372190; j < 372200; j++) _solve(b, j);
for(j = 373030; j < 373040; j++) _solve(b, j);
for(j = 373870; j < 373880; j++) _solve(b, j);
for(j = 374710; j < 374720; j++) _solve(b, j);
for(j = 375550; j < 375560; j++) _solve(b, j);
for(j = 376390; j < 376400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 377230; j < 377240; j++) _solve(b, j);
for(j = 378070; j < 378080; j++) _solve(b, j);
for(j = 378910; j < 378920; j++) _solve(b, j);
for(j = 379750; j < 379760; j++) _solve(b, j);
for(j = 380590; j < 380600; j++) _solve(b, j);
for(j = 381430; j < 381440; j++) _solve(b, j);
for(j = 382270; j < 382280; j++) _solve(b, j);
for(j = 383110; j < 383120; j++) _solve(b, j);
for(j = 383950; j < 383960; j++) _solve(b, j);
for(j = 384790; j < 384800; j++) _solve(b, j);
for(j = 385630; j < 385640; j++) _solve(b, j);
for(j = 386470; j < 386480; j++) _solve(b, j);
for(j = 387310; j < 387320; j++) _solve(b, j);
for(j = 388150; j < 388160; j++) _solve(b, j);
for(j = 388990; j < 389000; j++) _solve(b, j);
for(j = 389830; j < 389840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 390670; j < 390680; j++) _solve(b, j);
for(j = 391510; j < 391520; j++) _solve(b, j);
for(j = 392350; j < 392360; j++) _solve(b, j);
for(j = 393190; j < 393200; j++) _solve(b, j);
for(j = 394030; j < 394040; j++) _solve(b, j);
for(j = 394870; j < 394880; j++) _solve(b, j);
for(j = 395710; j < 395720; j++) _solve(b, j);
for(j = 396550; j < 396560; j++) _solve(b, j);
for(j = 397390; j < 397400; j++) _solve(b, j);
for(j = 398230; j < 398240; j++) _solve(b, j);
for(j = 399070; j < 399080; j++) _solve(b, j);
for(j = 399910; j < 399920; j++) _solve(b, j);
for(j = 400750; j < 400760; j++) _solve(b, j);
for(j = 401590; j < 401600; j++) _solve(b, j);
for(j = 402430; j < 402440; j++) _solve(b, j);
for(j = 403270; j < 403280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 404110; j < 404120; j++) _solve(b, j);
for(j = 404950; j < 404960; j++) _solve(b, j);
for(j = 405790; j < 405800; j++) _solve(b, j);
for(j = 406630; j < 406640; j++) _solve(b, j);
for(j = 407470; j < 407480; j++) _solve(b, j);
for(j = 408310; j < 408320; j++) _solve(b, j);
for(j = 409150; j < 409160; j++) _solve(b, j);
for(j = 409990; j < 410000; j++) _solve(b, j);
for(j = 410830; j < 410840; j++) _solve(b, j);
for(j = 411670; j < 411680; j++) _solve(b, j);
for(j = 412510; j < 412520; j++) _solve(b, j);
for(j = 413350; j < 413360; j++) _solve(b, j);
for(j = 414190; j < 414200; j++) _solve(b, j);
for(j = 415030; j < 415040; j++) _solve(b, j);
for(j = 415870; j < 415880; j++) _solve(b, j);
for(j = 416710; j < 416720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 417550; j < 417560; j++) _solve(b, j);
for(j = 418390; j < 418400; j++) _solve(b, j);
for(j = 419230; j < 419240; j++) _solve(b, j);
for(j = 420070; j < 420080; j++) _solve(b, j);
for(j = 420910; j < 420920; j++) _solve(b, j);
for(j = 421750; j < 421760; j++) _solve(b, j);
for(j = 422590; j < 422600; j++) _solve(b, j);
for(j = 423430; j < 423440; j++) _solve(b, j);
for(j = 424270; j < 424280; j++) _solve(b, j);
for(j = 425110; j < 425120; j++) _solve(b, j);
for(j = 425950; j < 425960; j++) _solve(b, j);
for(j = 426790; j < 426800; j++) _solve(b, j);
for(j = 427630; j < 427640; j++) _solve(b, j);
for(j = 428470; j < 428480; j++) _solve(b, j);
for(j = 429310; j < 429320; j++) _solve(b, j);
for(j = 430150; j < 430160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 430990; j < 431000; j++) _solve(b, j);
for(j = 431830; j < 431840; j++) _solve(b, j);
for(j = 432670; j < 432680; j++) _solve(b, j);
for(j = 433510; j < 433520; j++) _solve(b, j);
for(j = 434350; j < 434360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 364640; j < 364650; j++) _solve(b, j);
for(j = 365480; j < 365490; j++) _solve(b, j);
for(j = 366320; j < 366330; j++) _solve(b, j);
for(j = 367160; j < 367170; j++) _solve(b, j);
for(j = 368000; j < 368010; j++) _solve(b, j);
for(j = 368840; j < 368850; j++) _solve(b, j);
for(j = 369680; j < 369690; j++) _solve(b, j);
for(j = 370520; j < 370530; j++) _solve(b, j);
for(j = 371360; j < 371370; j++) _solve(b, j);
for(j = 372200; j < 372210; j++) _solve(b, j);
for(j = 373040; j < 373050; j++) _solve(b, j);
for(j = 373880; j < 373890; j++) _solve(b, j);
for(j = 374720; j < 374730; j++) _solve(b, j);
for(j = 375560; j < 375570; j++) _solve(b, j);
for(j = 376400; j < 376410; j++) _solve(b, j);
for(j = 377240; j < 377250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 378080; j < 378090; j++) _solve(b, j);
for(j = 378920; j < 378930; j++) _solve(b, j);
for(j = 379760; j < 379770; j++) _solve(b, j);
for(j = 380600; j < 380610; j++) _solve(b, j);
for(j = 381440; j < 381450; j++) _solve(b, j);
for(j = 382280; j < 382290; j++) _solve(b, j);
for(j = 383120; j < 383130; j++) _solve(b, j);
for(j = 383960; j < 383970; j++) _solve(b, j);
for(j = 384800; j < 384810; j++) _solve(b, j);
for(j = 385640; j < 385650; j++) _solve(b, j);
for(j = 386480; j < 386490; j++) _solve(b, j);
for(j = 387320; j < 387330; j++) _solve(b, j);
for(j = 388160; j < 388170; j++) _solve(b, j);
for(j = 389000; j < 389010; j++) _solve(b, j);
for(j = 389840; j < 389850; j++) _solve(b, j);
for(j = 390680; j < 390690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 391520; j < 391530; j++) _solve(b, j);
for(j = 392360; j < 392370; j++) _solve(b, j);
for(j = 393200; j < 393210; j++) _solve(b, j);
for(j = 394040; j < 394050; j++) _solve(b, j);
for(j = 394880; j < 394890; j++) _solve(b, j);
for(j = 395720; j < 395730; j++) _solve(b, j);
for(j = 396560; j < 396570; j++) _solve(b, j);
for(j = 397400; j < 397410; j++) _solve(b, j);
for(j = 398240; j < 398250; j++) _solve(b, j);
for(j = 399080; j < 399090; j++) _solve(b, j);
for(j = 399920; j < 399930; j++) _solve(b, j);
for(j = 400760; j < 400770; j++) _solve(b, j);
for(j = 401600; j < 401610; j++) _solve(b, j);
for(j = 402440; j < 402450; j++) _solve(b, j);
for(j = 403280; j < 403290; j++) _solve(b, j);
for(j = 404120; j < 404130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 404960; j < 404970; j++) _solve(b, j);
for(j = 405800; j < 405810; j++) _solve(b, j);
for(j = 406640; j < 406650; j++) _solve(b, j);
for(j = 407480; j < 407490; j++) _solve(b, j);
for(j = 408320; j < 408330; j++) _solve(b, j);
for(j = 409160; j < 409170; j++) _solve(b, j);
for(j = 410000; j < 410010; j++) _solve(b, j);
for(j = 410840; j < 410850; j++) _solve(b, j);
for(j = 411680; j < 411690; j++) _solve(b, j);
for(j = 412520; j < 412530; j++) _solve(b, j);
for(j = 413360; j < 413370; j++) _solve(b, j);
for(j = 414200; j < 414210; j++) _solve(b, j);
for(j = 415040; j < 415050; j++) _solve(b, j);
for(j = 415880; j < 415890; j++) _solve(b, j);
for(j = 416720; j < 416730; j++) _solve(b, j);
for(j = 417560; j < 417570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 418400; j < 418410; j++) _solve(b, j);
for(j = 419240; j < 419250; j++) _solve(b, j);
for(j = 420080; j < 420090; j++) _solve(b, j);
for(j = 420920; j < 420930; j++) _solve(b, j);
for(j = 421760; j < 421770; j++) _solve(b, j);
for(j = 422600; j < 422610; j++) _solve(b, j);
for(j = 423440; j < 423450; j++) _solve(b, j);
for(j = 424280; j < 424290; j++) _solve(b, j);
for(j = 425120; j < 425130; j++) _solve(b, j);
for(j = 425960; j < 425970; j++) _solve(b, j);
for(j = 426800; j < 426810; j++) _solve(b, j);
for(j = 427640; j < 427650; j++) _solve(b, j);
for(j = 428480; j < 428490; j++) _solve(b, j);
for(j = 429320; j < 429330; j++) _solve(b, j);
for(j = 430160; j < 430170; j++) _solve(b, j);
for(j = 431000; j < 431010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 431840; j < 431850; j++) _solve(b, j);
for(j = 432680; j < 432690; j++) _solve(b, j);
for(j = 433520; j < 433530; j++) _solve(b, j);
for(j = 434360; j < 434370; j++) _solve(b, j);
for(j = 435200; j < 435210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 365490; j < 365500; j++) _solve(b, j);
for(j = 366330; j < 366340; j++) _solve(b, j);
for(j = 367170; j < 367180; j++) _solve(b, j);
for(j = 368010; j < 368020; j++) _solve(b, j);
for(j = 368850; j < 368860; j++) _solve(b, j);
for(j = 369690; j < 369700; j++) _solve(b, j);
for(j = 370530; j < 370540; j++) _solve(b, j);
for(j = 371370; j < 371380; j++) _solve(b, j);
for(j = 372210; j < 372220; j++) _solve(b, j);
for(j = 373050; j < 373060; j++) _solve(b, j);
for(j = 373890; j < 373900; j++) _solve(b, j);
for(j = 374730; j < 374740; j++) _solve(b, j);
for(j = 375570; j < 375580; j++) _solve(b, j);
for(j = 376410; j < 376420; j++) _solve(b, j);
for(j = 377250; j < 377260; j++) _solve(b, j);
for(j = 378090; j < 378100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 378930; j < 378940; j++) _solve(b, j);
for(j = 379770; j < 379780; j++) _solve(b, j);
for(j = 380610; j < 380620; j++) _solve(b, j);
for(j = 381450; j < 381460; j++) _solve(b, j);
for(j = 382290; j < 382300; j++) _solve(b, j);
for(j = 383130; j < 383140; j++) _solve(b, j);
for(j = 383970; j < 383980; j++) _solve(b, j);
for(j = 384810; j < 384820; j++) _solve(b, j);
for(j = 385650; j < 385660; j++) _solve(b, j);
for(j = 386490; j < 386500; j++) _solve(b, j);
for(j = 387330; j < 387340; j++) _solve(b, j);
for(j = 388170; j < 388180; j++) _solve(b, j);
for(j = 389010; j < 389020; j++) _solve(b, j);
for(j = 389850; j < 389860; j++) _solve(b, j);
for(j = 390690; j < 390700; j++) _solve(b, j);
for(j = 391530; j < 391540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 392370; j < 392380; j++) _solve(b, j);
for(j = 393210; j < 393220; j++) _solve(b, j);
for(j = 394050; j < 394060; j++) _solve(b, j);
for(j = 394890; j < 394900; j++) _solve(b, j);
for(j = 395730; j < 395740; j++) _solve(b, j);
for(j = 396570; j < 396580; j++) _solve(b, j);
for(j = 397410; j < 397420; j++) _solve(b, j);
for(j = 398250; j < 398260; j++) _solve(b, j);
for(j = 399090; j < 399100; j++) _solve(b, j);
for(j = 399930; j < 399940; j++) _solve(b, j);
for(j = 400770; j < 400780; j++) _solve(b, j);
for(j = 401610; j < 401620; j++) _solve(b, j);
for(j = 402450; j < 402460; j++) _solve(b, j);
for(j = 403290; j < 403300; j++) _solve(b, j);
for(j = 404130; j < 404140; j++) _solve(b, j);
for(j = 404970; j < 404980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 405810; j < 405820; j++) _solve(b, j);
for(j = 406650; j < 406660; j++) _solve(b, j);
for(j = 407490; j < 407500; j++) _solve(b, j);
for(j = 408330; j < 408340; j++) _solve(b, j);
for(j = 409170; j < 409180; j++) _solve(b, j);
for(j = 410010; j < 410020; j++) _solve(b, j);
for(j = 410850; j < 410860; j++) _solve(b, j);
for(j = 411690; j < 411700; j++) _solve(b, j);
for(j = 412530; j < 412540; j++) _solve(b, j);
for(j = 413370; j < 413380; j++) _solve(b, j);
for(j = 414210; j < 414220; j++) _solve(b, j);
for(j = 415050; j < 415060; j++) _solve(b, j);
for(j = 415890; j < 415900; j++) _solve(b, j);
for(j = 416730; j < 416740; j++) _solve(b, j);
for(j = 417570; j < 417580; j++) _solve(b, j);
for(j = 418410; j < 418420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 419250; j < 419260; j++) _solve(b, j);
for(j = 420090; j < 420100; j++) _solve(b, j);
for(j = 420930; j < 420940; j++) _solve(b, j);
for(j = 421770; j < 421780; j++) _solve(b, j);
for(j = 422610; j < 422620; j++) _solve(b, j);
for(j = 423450; j < 423460; j++) _solve(b, j);
for(j = 424290; j < 424300; j++) _solve(b, j);
for(j = 425130; j < 425140; j++) _solve(b, j);
for(j = 425970; j < 425980; j++) _solve(b, j);
for(j = 426810; j < 426820; j++) _solve(b, j);
for(j = 427650; j < 427660; j++) _solve(b, j);
for(j = 428490; j < 428500; j++) _solve(b, j);
for(j = 429330; j < 429340; j++) _solve(b, j);
for(j = 430170; j < 430180; j++) _solve(b, j);
for(j = 431010; j < 431020; j++) _solve(b, j);
for(j = 431850; j < 431860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 432690; j < 432700; j++) _solve(b, j);
for(j = 433530; j < 433540; j++) _solve(b, j);
for(j = 434370; j < 434380; j++) _solve(b, j);
for(j = 435210; j < 435220; j++) _solve(b, j);
for(j = 436050; j < 436060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 366340; j < 366350; j++) _solve(b, j);
for(j = 367180; j < 367190; j++) _solve(b, j);
for(j = 368020; j < 368030; j++) _solve(b, j);
for(j = 368860; j < 368870; j++) _solve(b, j);
for(j = 369700; j < 369710; j++) _solve(b, j);
for(j = 370540; j < 370550; j++) _solve(b, j);
for(j = 371380; j < 371390; j++) _solve(b, j);
for(j = 372220; j < 372230; j++) _solve(b, j);
for(j = 373060; j < 373070; j++) _solve(b, j);
for(j = 373900; j < 373910; j++) _solve(b, j);
for(j = 374740; j < 374750; j++) _solve(b, j);
for(j = 375580; j < 375590; j++) _solve(b, j);
for(j = 376420; j < 376430; j++) _solve(b, j);
for(j = 377260; j < 377270; j++) _solve(b, j);
for(j = 378100; j < 378110; j++) _solve(b, j);
for(j = 378940; j < 378950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 379780; j < 379790; j++) _solve(b, j);
for(j = 380620; j < 380630; j++) _solve(b, j);
for(j = 381460; j < 381470; j++) _solve(b, j);
for(j = 382300; j < 382310; j++) _solve(b, j);
for(j = 383140; j < 383150; j++) _solve(b, j);
for(j = 383980; j < 383990; j++) _solve(b, j);
for(j = 384820; j < 384830; j++) _solve(b, j);
for(j = 385660; j < 385670; j++) _solve(b, j);
for(j = 386500; j < 386510; j++) _solve(b, j);
for(j = 387340; j < 387350; j++) _solve(b, j);
for(j = 388180; j < 388190; j++) _solve(b, j);
for(j = 389020; j < 389030; j++) _solve(b, j);
for(j = 389860; j < 389870; j++) _solve(b, j);
for(j = 390700; j < 390710; j++) _solve(b, j);
for(j = 391540; j < 391550; j++) _solve(b, j);
for(j = 392380; j < 392390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 393220; j < 393230; j++) _solve(b, j);
for(j = 394060; j < 394070; j++) _solve(b, j);
for(j = 394900; j < 394910; j++) _solve(b, j);
for(j = 395740; j < 395750; j++) _solve(b, j);
for(j = 396580; j < 396590; j++) _solve(b, j);
for(j = 397420; j < 397430; j++) _solve(b, j);
for(j = 398260; j < 398270; j++) _solve(b, j);
for(j = 399100; j < 399110; j++) _solve(b, j);
for(j = 399940; j < 399950; j++) _solve(b, j);
for(j = 400780; j < 400790; j++) _solve(b, j);
for(j = 401620; j < 401630; j++) _solve(b, j);
for(j = 402460; j < 402470; j++) _solve(b, j);
for(j = 403300; j < 403310; j++) _solve(b, j);
for(j = 404140; j < 404150; j++) _solve(b, j);
for(j = 404980; j < 404990; j++) _solve(b, j);
for(j = 405820; j < 405830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 406660; j < 406670; j++) _solve(b, j);
for(j = 407500; j < 407510; j++) _solve(b, j);
for(j = 408340; j < 408350; j++) _solve(b, j);
for(j = 409180; j < 409190; j++) _solve(b, j);
for(j = 410020; j < 410030; j++) _solve(b, j);
for(j = 410860; j < 410870; j++) _solve(b, j);
for(j = 411700; j < 411710; j++) _solve(b, j);
for(j = 412540; j < 412550; j++) _solve(b, j);
for(j = 413380; j < 413390; j++) _solve(b, j);
for(j = 414220; j < 414230; j++) _solve(b, j);
for(j = 415060; j < 415070; j++) _solve(b, j);
for(j = 415900; j < 415910; j++) _solve(b, j);
for(j = 416740; j < 416750; j++) _solve(b, j);
for(j = 417580; j < 417590; j++) _solve(b, j);
for(j = 418420; j < 418430; j++) _solve(b, j);
for(j = 419260; j < 419270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 420100; j < 420110; j++) _solve(b, j);
for(j = 420940; j < 420950; j++) _solve(b, j);
for(j = 421780; j < 421790; j++) _solve(b, j);
for(j = 422620; j < 422630; j++) _solve(b, j);
for(j = 423460; j < 423470; j++) _solve(b, j);
for(j = 424300; j < 424310; j++) _solve(b, j);
for(j = 425140; j < 425150; j++) _solve(b, j);
for(j = 425980; j < 425990; j++) _solve(b, j);
for(j = 426820; j < 426830; j++) _solve(b, j);
for(j = 427660; j < 427670; j++) _solve(b, j);
for(j = 428500; j < 428510; j++) _solve(b, j);
for(j = 429340; j < 429350; j++) _solve(b, j);
for(j = 430180; j < 430190; j++) _solve(b, j);
for(j = 431020; j < 431030; j++) _solve(b, j);
for(j = 431860; j < 431870; j++) _solve(b, j);
for(j = 432700; j < 432710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 433540; j < 433550; j++) _solve(b, j);
for(j = 434380; j < 434390; j++) _solve(b, j);
for(j = 435220; j < 435230; j++) _solve(b, j);
for(j = 436060; j < 436070; j++) _solve(b, j);
for(j = 436900; j < 436910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 367190; j < 367200; j++) _solve(b, j);
for(j = 368030; j < 368040; j++) _solve(b, j);
for(j = 368870; j < 368880; j++) _solve(b, j);
for(j = 369710; j < 369720; j++) _solve(b, j);
for(j = 370550; j < 370560; j++) _solve(b, j);
for(j = 371390; j < 371400; j++) _solve(b, j);
for(j = 372230; j < 372240; j++) _solve(b, j);
for(j = 373070; j < 373080; j++) _solve(b, j);
for(j = 373910; j < 373920; j++) _solve(b, j);
for(j = 374750; j < 374760; j++) _solve(b, j);
for(j = 375590; j < 375600; j++) _solve(b, j);
for(j = 376430; j < 376440; j++) _solve(b, j);
for(j = 377270; j < 377280; j++) _solve(b, j);
for(j = 378110; j < 378120; j++) _solve(b, j);
for(j = 378950; j < 378960; j++) _solve(b, j);
for(j = 379790; j < 379800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 380630; j < 380640; j++) _solve(b, j);
for(j = 381470; j < 381480; j++) _solve(b, j);
for(j = 382310; j < 382320; j++) _solve(b, j);
for(j = 383150; j < 383160; j++) _solve(b, j);
for(j = 383990; j < 384000; j++) _solve(b, j);
for(j = 384830; j < 384840; j++) _solve(b, j);
for(j = 385670; j < 385680; j++) _solve(b, j);
for(j = 386510; j < 386520; j++) _solve(b, j);
for(j = 387350; j < 387360; j++) _solve(b, j);
for(j = 388190; j < 388200; j++) _solve(b, j);
for(j = 389030; j < 389040; j++) _solve(b, j);
for(j = 389870; j < 389880; j++) _solve(b, j);
for(j = 390710; j < 390720; j++) _solve(b, j);
for(j = 391550; j < 391560; j++) _solve(b, j);
for(j = 392390; j < 392400; j++) _solve(b, j);
for(j = 393230; j < 393240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 394070; j < 394080; j++) _solve(b, j);
for(j = 394910; j < 394920; j++) _solve(b, j);
for(j = 395750; j < 395760; j++) _solve(b, j);
for(j = 396590; j < 396600; j++) _solve(b, j);
for(j = 397430; j < 397440; j++) _solve(b, j);
for(j = 398270; j < 398280; j++) _solve(b, j);
for(j = 399110; j < 399120; j++) _solve(b, j);
for(j = 399950; j < 399960; j++) _solve(b, j);
for(j = 400790; j < 400800; j++) _solve(b, j);
for(j = 401630; j < 401640; j++) _solve(b, j);
for(j = 402470; j < 402480; j++) _solve(b, j);
for(j = 403310; j < 403320; j++) _solve(b, j);
for(j = 404150; j < 404160; j++) _solve(b, j);
for(j = 404990; j < 405000; j++) _solve(b, j);
for(j = 405830; j < 405840; j++) _solve(b, j);
for(j = 406670; j < 406680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 407510; j < 407520; j++) _solve(b, j);
for(j = 408350; j < 408360; j++) _solve(b, j);
for(j = 409190; j < 409200; j++) _solve(b, j);
for(j = 410030; j < 410040; j++) _solve(b, j);
for(j = 410870; j < 410880; j++) _solve(b, j);
for(j = 411710; j < 411720; j++) _solve(b, j);
for(j = 412550; j < 412560; j++) _solve(b, j);
for(j = 413390; j < 413400; j++) _solve(b, j);
for(j = 414230; j < 414240; j++) _solve(b, j);
for(j = 415070; j < 415080; j++) _solve(b, j);
for(j = 415910; j < 415920; j++) _solve(b, j);
for(j = 416750; j < 416760; j++) _solve(b, j);
for(j = 417590; j < 417600; j++) _solve(b, j);
for(j = 418430; j < 418440; j++) _solve(b, j);
for(j = 419270; j < 419280; j++) _solve(b, j);
for(j = 420110; j < 420120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 420950; j < 420960; j++) _solve(b, j);
for(j = 421790; j < 421800; j++) _solve(b, j);
for(j = 422630; j < 422640; j++) _solve(b, j);
for(j = 423470; j < 423480; j++) _solve(b, j);
for(j = 424310; j < 424320; j++) _solve(b, j);
for(j = 425150; j < 425160; j++) _solve(b, j);
for(j = 425990; j < 426000; j++) _solve(b, j);
for(j = 426830; j < 426840; j++) _solve(b, j);
for(j = 427670; j < 427680; j++) _solve(b, j);
for(j = 428510; j < 428520; j++) _solve(b, j);
for(j = 429350; j < 429360; j++) _solve(b, j);
for(j = 430190; j < 430200; j++) _solve(b, j);
for(j = 431030; j < 431040; j++) _solve(b, j);
for(j = 431870; j < 431880; j++) _solve(b, j);
for(j = 432710; j < 432720; j++) _solve(b, j);
for(j = 433550; j < 433560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 434390; j < 434400; j++) _solve(b, j);
for(j = 435230; j < 435240; j++) _solve(b, j);
for(j = 436070; j < 436080; j++) _solve(b, j);
for(j = 436910; j < 436920; j++) _solve(b, j);
for(j = 437750; j < 437760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 368040; j < 368050; j++) _solve(b, j);
for(j = 368880; j < 368890; j++) _solve(b, j);
for(j = 369720; j < 369730; j++) _solve(b, j);
for(j = 370560; j < 370570; j++) _solve(b, j);
for(j = 371400; j < 371410; j++) _solve(b, j);
for(j = 372240; j < 372250; j++) _solve(b, j);
for(j = 373080; j < 373090; j++) _solve(b, j);
for(j = 373920; j < 373930; j++) _solve(b, j);
for(j = 374760; j < 374770; j++) _solve(b, j);
for(j = 375600; j < 375610; j++) _solve(b, j);
for(j = 376440; j < 376450; j++) _solve(b, j);
for(j = 377280; j < 377290; j++) _solve(b, j);
for(j = 378120; j < 378130; j++) _solve(b, j);
for(j = 378960; j < 378970; j++) _solve(b, j);
for(j = 379800; j < 379810; j++) _solve(b, j);
for(j = 380640; j < 380650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 381480; j < 381490; j++) _solve(b, j);
for(j = 382320; j < 382330; j++) _solve(b, j);
for(j = 383160; j < 383170; j++) _solve(b, j);
for(j = 384000; j < 384010; j++) _solve(b, j);
for(j = 384840; j < 384850; j++) _solve(b, j);
for(j = 385680; j < 385690; j++) _solve(b, j);
for(j = 386520; j < 386530; j++) _solve(b, j);
for(j = 387360; j < 387370; j++) _solve(b, j);
for(j = 388200; j < 388210; j++) _solve(b, j);
for(j = 389040; j < 389050; j++) _solve(b, j);
for(j = 389880; j < 389890; j++) _solve(b, j);
for(j = 390720; j < 390730; j++) _solve(b, j);
for(j = 391560; j < 391570; j++) _solve(b, j);
for(j = 392400; j < 392410; j++) _solve(b, j);
for(j = 393240; j < 393250; j++) _solve(b, j);
for(j = 394080; j < 394090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 394920; j < 394930; j++) _solve(b, j);
for(j = 395760; j < 395770; j++) _solve(b, j);
for(j = 396600; j < 396610; j++) _solve(b, j);
for(j = 397440; j < 397450; j++) _solve(b, j);
for(j = 398280; j < 398290; j++) _solve(b, j);
for(j = 399120; j < 399130; j++) _solve(b, j);
for(j = 399960; j < 399970; j++) _solve(b, j);
for(j = 400800; j < 400810; j++) _solve(b, j);
for(j = 401640; j < 401650; j++) _solve(b, j);
for(j = 402480; j < 402490; j++) _solve(b, j);
for(j = 403320; j < 403330; j++) _solve(b, j);
for(j = 404160; j < 404170; j++) _solve(b, j);
for(j = 405000; j < 405010; j++) _solve(b, j);
for(j = 405840; j < 405850; j++) _solve(b, j);
for(j = 406680; j < 406690; j++) _solve(b, j);
for(j = 407520; j < 407530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 408360; j < 408370; j++) _solve(b, j);
for(j = 409200; j < 409210; j++) _solve(b, j);
for(j = 410040; j < 410050; j++) _solve(b, j);
for(j = 410880; j < 410890; j++) _solve(b, j);
for(j = 411720; j < 411730; j++) _solve(b, j);
for(j = 412560; j < 412570; j++) _solve(b, j);
for(j = 413400; j < 413410; j++) _solve(b, j);
for(j = 414240; j < 414250; j++) _solve(b, j);
for(j = 415080; j < 415090; j++) _solve(b, j);
for(j = 415920; j < 415930; j++) _solve(b, j);
for(j = 416760; j < 416770; j++) _solve(b, j);
for(j = 417600; j < 417610; j++) _solve(b, j);
for(j = 418440; j < 418450; j++) _solve(b, j);
for(j = 419280; j < 419290; j++) _solve(b, j);
for(j = 420120; j < 420130; j++) _solve(b, j);
for(j = 420960; j < 420970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 421800; j < 421810; j++) _solve(b, j);
for(j = 422640; j < 422650; j++) _solve(b, j);
for(j = 423480; j < 423490; j++) _solve(b, j);
for(j = 424320; j < 424330; j++) _solve(b, j);
for(j = 425160; j < 425170; j++) _solve(b, j);
for(j = 426000; j < 426010; j++) _solve(b, j);
for(j = 426840; j < 426850; j++) _solve(b, j);
for(j = 427680; j < 427690; j++) _solve(b, j);
for(j = 428520; j < 428530; j++) _solve(b, j);
for(j = 429360; j < 429370; j++) _solve(b, j);
for(j = 430200; j < 430210; j++) _solve(b, j);
for(j = 431040; j < 431050; j++) _solve(b, j);
for(j = 431880; j < 431890; j++) _solve(b, j);
for(j = 432720; j < 432730; j++) _solve(b, j);
for(j = 433560; j < 433570; j++) _solve(b, j);
for(j = 434400; j < 434410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 435240; j < 435250; j++) _solve(b, j);
for(j = 436080; j < 436090; j++) _solve(b, j);
for(j = 436920; j < 436930; j++) _solve(b, j);
for(j = 437760; j < 437770; j++) _solve(b, j);
for(j = 438600; j < 438610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 368890; j < 368900; j++) _solve(b, j);
for(j = 369730; j < 369740; j++) _solve(b, j);
for(j = 370570; j < 370580; j++) _solve(b, j);
for(j = 371410; j < 371420; j++) _solve(b, j);
for(j = 372250; j < 372260; j++) _solve(b, j);
for(j = 373090; j < 373100; j++) _solve(b, j);
for(j = 373930; j < 373940; j++) _solve(b, j);
for(j = 374770; j < 374780; j++) _solve(b, j);
for(j = 375610; j < 375620; j++) _solve(b, j);
for(j = 376450; j < 376460; j++) _solve(b, j);
for(j = 377290; j < 377300; j++) _solve(b, j);
for(j = 378130; j < 378140; j++) _solve(b, j);
for(j = 378970; j < 378980; j++) _solve(b, j);
for(j = 379810; j < 379820; j++) _solve(b, j);
for(j = 380650; j < 380660; j++) _solve(b, j);
for(j = 381490; j < 381500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 382330; j < 382340; j++) _solve(b, j);
for(j = 383170; j < 383180; j++) _solve(b, j);
for(j = 384010; j < 384020; j++) _solve(b, j);
for(j = 384850; j < 384860; j++) _solve(b, j);
for(j = 385690; j < 385700; j++) _solve(b, j);
for(j = 386530; j < 386540; j++) _solve(b, j);
for(j = 387370; j < 387380; j++) _solve(b, j);
for(j = 388210; j < 388220; j++) _solve(b, j);
for(j = 389050; j < 389060; j++) _solve(b, j);
for(j = 389890; j < 389900; j++) _solve(b, j);
for(j = 390730; j < 390740; j++) _solve(b, j);
for(j = 391570; j < 391580; j++) _solve(b, j);
for(j = 392410; j < 392420; j++) _solve(b, j);
for(j = 393250; j < 393260; j++) _solve(b, j);
for(j = 394090; j < 394100; j++) _solve(b, j);
for(j = 394930; j < 394940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 395770; j < 395780; j++) _solve(b, j);
for(j = 396610; j < 396620; j++) _solve(b, j);
for(j = 397450; j < 397460; j++) _solve(b, j);
for(j = 398290; j < 398300; j++) _solve(b, j);
for(j = 399130; j < 399140; j++) _solve(b, j);
for(j = 399970; j < 399980; j++) _solve(b, j);
for(j = 400810; j < 400820; j++) _solve(b, j);
for(j = 401650; j < 401660; j++) _solve(b, j);
for(j = 402490; j < 402500; j++) _solve(b, j);
for(j = 403330; j < 403340; j++) _solve(b, j);
for(j = 404170; j < 404180; j++) _solve(b, j);
for(j = 405010; j < 405020; j++) _solve(b, j);
for(j = 405850; j < 405860; j++) _solve(b, j);
for(j = 406690; j < 406700; j++) _solve(b, j);
for(j = 407530; j < 407540; j++) _solve(b, j);
for(j = 408370; j < 408380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 409210; j < 409220; j++) _solve(b, j);
for(j = 410050; j < 410060; j++) _solve(b, j);
for(j = 410890; j < 410900; j++) _solve(b, j);
for(j = 411730; j < 411740; j++) _solve(b, j);
for(j = 412570; j < 412580; j++) _solve(b, j);
for(j = 413410; j < 413420; j++) _solve(b, j);
for(j = 414250; j < 414260; j++) _solve(b, j);
for(j = 415090; j < 415100; j++) _solve(b, j);
for(j = 415930; j < 415940; j++) _solve(b, j);
for(j = 416770; j < 416780; j++) _solve(b, j);
for(j = 417610; j < 417620; j++) _solve(b, j);
for(j = 418450; j < 418460; j++) _solve(b, j);
for(j = 419290; j < 419300; j++) _solve(b, j);
for(j = 420130; j < 420140; j++) _solve(b, j);
for(j = 420970; j < 420980; j++) _solve(b, j);
for(j = 421810; j < 421820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 422650; j < 422660; j++) _solve(b, j);
for(j = 423490; j < 423500; j++) _solve(b, j);
for(j = 424330; j < 424340; j++) _solve(b, j);
for(j = 425170; j < 425180; j++) _solve(b, j);
for(j = 426010; j < 426020; j++) _solve(b, j);
for(j = 426850; j < 426860; j++) _solve(b, j);
for(j = 427690; j < 427700; j++) _solve(b, j);
for(j = 428530; j < 428540; j++) _solve(b, j);
for(j = 429370; j < 429380; j++) _solve(b, j);
for(j = 430210; j < 430220; j++) _solve(b, j);
for(j = 431050; j < 431060; j++) _solve(b, j);
for(j = 431890; j < 431900; j++) _solve(b, j);
for(j = 432730; j < 432740; j++) _solve(b, j);
for(j = 433570; j < 433580; j++) _solve(b, j);
for(j = 434410; j < 434420; j++) _solve(b, j);
for(j = 435250; j < 435260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 436090; j < 436100; j++) _solve(b, j);
for(j = 436930; j < 436940; j++) _solve(b, j);
for(j = 437770; j < 437780; j++) _solve(b, j);
for(j = 438610; j < 438620; j++) _solve(b, j);
for(j = 439450; j < 439460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 369740; j < 369750; j++) _solve(b, j);
for(j = 370580; j < 370590; j++) _solve(b, j);
for(j = 371420; j < 371430; j++) _solve(b, j);
for(j = 372260; j < 372270; j++) _solve(b, j);
for(j = 373100; j < 373110; j++) _solve(b, j);
for(j = 373940; j < 373950; j++) _solve(b, j);
for(j = 374780; j < 374790; j++) _solve(b, j);
for(j = 375620; j < 375630; j++) _solve(b, j);
for(j = 376460; j < 376470; j++) _solve(b, j);
for(j = 377300; j < 377310; j++) _solve(b, j);
for(j = 378140; j < 378150; j++) _solve(b, j);
for(j = 378980; j < 378990; j++) _solve(b, j);
for(j = 379820; j < 379830; j++) _solve(b, j);
for(j = 380660; j < 380670; j++) _solve(b, j);
for(j = 381500; j < 381510; j++) _solve(b, j);
for(j = 382340; j < 382350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 383180; j < 383190; j++) _solve(b, j);
for(j = 384020; j < 384030; j++) _solve(b, j);
for(j = 384860; j < 384870; j++) _solve(b, j);
for(j = 385700; j < 385710; j++) _solve(b, j);
for(j = 386540; j < 386550; j++) _solve(b, j);
for(j = 387380; j < 387390; j++) _solve(b, j);
for(j = 388220; j < 388230; j++) _solve(b, j);
for(j = 389060; j < 389070; j++) _solve(b, j);
for(j = 389900; j < 389910; j++) _solve(b, j);
for(j = 390740; j < 390750; j++) _solve(b, j);
for(j = 391580; j < 391590; j++) _solve(b, j);
for(j = 392420; j < 392430; j++) _solve(b, j);
for(j = 393260; j < 393270; j++) _solve(b, j);
for(j = 394100; j < 394110; j++) _solve(b, j);
for(j = 394940; j < 394950; j++) _solve(b, j);
for(j = 395780; j < 395790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 396620; j < 396630; j++) _solve(b, j);
for(j = 397460; j < 397470; j++) _solve(b, j);
for(j = 398300; j < 398310; j++) _solve(b, j);
for(j = 399140; j < 399150; j++) _solve(b, j);
for(j = 399980; j < 399990; j++) _solve(b, j);
for(j = 400820; j < 400830; j++) _solve(b, j);
for(j = 401660; j < 401670; j++) _solve(b, j);
for(j = 402500; j < 402510; j++) _solve(b, j);
for(j = 403340; j < 403350; j++) _solve(b, j);
for(j = 404180; j < 404190; j++) _solve(b, j);
for(j = 405020; j < 405030; j++) _solve(b, j);
for(j = 405860; j < 405870; j++) _solve(b, j);
for(j = 406700; j < 406710; j++) _solve(b, j);
for(j = 407540; j < 407550; j++) _solve(b, j);
for(j = 408380; j < 408390; j++) _solve(b, j);
for(j = 409220; j < 409230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 410060; j < 410070; j++) _solve(b, j);
for(j = 410900; j < 410910; j++) _solve(b, j);
for(j = 411740; j < 411750; j++) _solve(b, j);
for(j = 412580; j < 412590; j++) _solve(b, j);
for(j = 413420; j < 413430; j++) _solve(b, j);
for(j = 414260; j < 414270; j++) _solve(b, j);
for(j = 415100; j < 415110; j++) _solve(b, j);
for(j = 415940; j < 415950; j++) _solve(b, j);
for(j = 416780; j < 416790; j++) _solve(b, j);
for(j = 417620; j < 417630; j++) _solve(b, j);
for(j = 418460; j < 418470; j++) _solve(b, j);
for(j = 419300; j < 419310; j++) _solve(b, j);
for(j = 420140; j < 420150; j++) _solve(b, j);
for(j = 420980; j < 420990; j++) _solve(b, j);
for(j = 421820; j < 421830; j++) _solve(b, j);
for(j = 422660; j < 422670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 423500; j < 423510; j++) _solve(b, j);
for(j = 424340; j < 424350; j++) _solve(b, j);
for(j = 425180; j < 425190; j++) _solve(b, j);
for(j = 426020; j < 426030; j++) _solve(b, j);
for(j = 426860; j < 426870; j++) _solve(b, j);
for(j = 427700; j < 427710; j++) _solve(b, j);
for(j = 428540; j < 428550; j++) _solve(b, j);
for(j = 429380; j < 429390; j++) _solve(b, j);
for(j = 430220; j < 430230; j++) _solve(b, j);
for(j = 431060; j < 431070; j++) _solve(b, j);
for(j = 431900; j < 431910; j++) _solve(b, j);
for(j = 432740; j < 432750; j++) _solve(b, j);
for(j = 433580; j < 433590; j++) _solve(b, j);
for(j = 434420; j < 434430; j++) _solve(b, j);
for(j = 435260; j < 435270; j++) _solve(b, j);
for(j = 436100; j < 436110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 436940; j < 436950; j++) _solve(b, j);
for(j = 437780; j < 437790; j++) _solve(b, j);
for(j = 438620; j < 438630; j++) _solve(b, j);
for(j = 439460; j < 439470; j++) _solve(b, j);
for(j = 440300; j < 440310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 370590; j < 370600; j++) _solve(b, j);
for(j = 371430; j < 371440; j++) _solve(b, j);
for(j = 372270; j < 372280; j++) _solve(b, j);
for(j = 373110; j < 373120; j++) _solve(b, j);
for(j = 373950; j < 373960; j++) _solve(b, j);
for(j = 374790; j < 374800; j++) _solve(b, j);
for(j = 375630; j < 375640; j++) _solve(b, j);
for(j = 376470; j < 376480; j++) _solve(b, j);
for(j = 377310; j < 377320; j++) _solve(b, j);
for(j = 378150; j < 378160; j++) _solve(b, j);
for(j = 378990; j < 379000; j++) _solve(b, j);
for(j = 379830; j < 379840; j++) _solve(b, j);
for(j = 380670; j < 380680; j++) _solve(b, j);
for(j = 381510; j < 381520; j++) _solve(b, j);
for(j = 382350; j < 382360; j++) _solve(b, j);
for(j = 383190; j < 383200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 384030; j < 384040; j++) _solve(b, j);
for(j = 384870; j < 384880; j++) _solve(b, j);
for(j = 385710; j < 385720; j++) _solve(b, j);
for(j = 386550; j < 386560; j++) _solve(b, j);
for(j = 387390; j < 387400; j++) _solve(b, j);
for(j = 388230; j < 388240; j++) _solve(b, j);
for(j = 389070; j < 389080; j++) _solve(b, j);
for(j = 389910; j < 389920; j++) _solve(b, j);
for(j = 390750; j < 390760; j++) _solve(b, j);
for(j = 391590; j < 391600; j++) _solve(b, j);
for(j = 392430; j < 392440; j++) _solve(b, j);
for(j = 393270; j < 393280; j++) _solve(b, j);
for(j = 394110; j < 394120; j++) _solve(b, j);
for(j = 394950; j < 394960; j++) _solve(b, j);
for(j = 395790; j < 395800; j++) _solve(b, j);
for(j = 396630; j < 396640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 397470; j < 397480; j++) _solve(b, j);
for(j = 398310; j < 398320; j++) _solve(b, j);
for(j = 399150; j < 399160; j++) _solve(b, j);
for(j = 399990; j < 400000; j++) _solve(b, j);
for(j = 400830; j < 400840; j++) _solve(b, j);
for(j = 401670; j < 401680; j++) _solve(b, j);
for(j = 402510; j < 402520; j++) _solve(b, j);
for(j = 403350; j < 403360; j++) _solve(b, j);
for(j = 404190; j < 404200; j++) _solve(b, j);
for(j = 405030; j < 405040; j++) _solve(b, j);
for(j = 405870; j < 405880; j++) _solve(b, j);
for(j = 406710; j < 406720; j++) _solve(b, j);
for(j = 407550; j < 407560; j++) _solve(b, j);
for(j = 408390; j < 408400; j++) _solve(b, j);
for(j = 409230; j < 409240; j++) _solve(b, j);
for(j = 410070; j < 410080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 410910; j < 410920; j++) _solve(b, j);
for(j = 411750; j < 411760; j++) _solve(b, j);
for(j = 412590; j < 412600; j++) _solve(b, j);
for(j = 413430; j < 413440; j++) _solve(b, j);
for(j = 414270; j < 414280; j++) _solve(b, j);
for(j = 415110; j < 415120; j++) _solve(b, j);
for(j = 415950; j < 415960; j++) _solve(b, j);
for(j = 416790; j < 416800; j++) _solve(b, j);
for(j = 417630; j < 417640; j++) _solve(b, j);
for(j = 418470; j < 418480; j++) _solve(b, j);
for(j = 419310; j < 419320; j++) _solve(b, j);
for(j = 420150; j < 420160; j++) _solve(b, j);
for(j = 420990; j < 421000; j++) _solve(b, j);
for(j = 421830; j < 421840; j++) _solve(b, j);
for(j = 422670; j < 422680; j++) _solve(b, j);
for(j = 423510; j < 423520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 424350; j < 424360; j++) _solve(b, j);
for(j = 425190; j < 425200; j++) _solve(b, j);
for(j = 426030; j < 426040; j++) _solve(b, j);
for(j = 426870; j < 426880; j++) _solve(b, j);
for(j = 427710; j < 427720; j++) _solve(b, j);
for(j = 428550; j < 428560; j++) _solve(b, j);
for(j = 429390; j < 429400; j++) _solve(b, j);
for(j = 430230; j < 430240; j++) _solve(b, j);
for(j = 431070; j < 431080; j++) _solve(b, j);
for(j = 431910; j < 431920; j++) _solve(b, j);
for(j = 432750; j < 432760; j++) _solve(b, j);
for(j = 433590; j < 433600; j++) _solve(b, j);
for(j = 434430; j < 434440; j++) _solve(b, j);
for(j = 435270; j < 435280; j++) _solve(b, j);
for(j = 436110; j < 436120; j++) _solve(b, j);
for(j = 436950; j < 436960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 437790; j < 437800; j++) _solve(b, j);
for(j = 438630; j < 438640; j++) _solve(b, j);
for(j = 439470; j < 439480; j++) _solve(b, j);
for(j = 440310; j < 440320; j++) _solve(b, j);
for(j = 441150; j < 441160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 371440; j < 371450; j++) _solve(b, j);
for(j = 372280; j < 372290; j++) _solve(b, j);
for(j = 373120; j < 373130; j++) _solve(b, j);
for(j = 373960; j < 373970; j++) _solve(b, j);
for(j = 374800; j < 374810; j++) _solve(b, j);
for(j = 375640; j < 375650; j++) _solve(b, j);
for(j = 376480; j < 376490; j++) _solve(b, j);
for(j = 377320; j < 377330; j++) _solve(b, j);
for(j = 378160; j < 378170; j++) _solve(b, j);
for(j = 379000; j < 379010; j++) _solve(b, j);
for(j = 379840; j < 379850; j++) _solve(b, j);
for(j = 380680; j < 380690; j++) _solve(b, j);
for(j = 381520; j < 381530; j++) _solve(b, j);
for(j = 382360; j < 382370; j++) _solve(b, j);
for(j = 383200; j < 383210; j++) _solve(b, j);
for(j = 384040; j < 384050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 384880; j < 384890; j++) _solve(b, j);
for(j = 385720; j < 385730; j++) _solve(b, j);
for(j = 386560; j < 386570; j++) _solve(b, j);
for(j = 387400; j < 387410; j++) _solve(b, j);
for(j = 388240; j < 388250; j++) _solve(b, j);
for(j = 389080; j < 389090; j++) _solve(b, j);
for(j = 389920; j < 389930; j++) _solve(b, j);
for(j = 390760; j < 390770; j++) _solve(b, j);
for(j = 391600; j < 391610; j++) _solve(b, j);
for(j = 392440; j < 392450; j++) _solve(b, j);
for(j = 393280; j < 393290; j++) _solve(b, j);
for(j = 394120; j < 394130; j++) _solve(b, j);
for(j = 394960; j < 394970; j++) _solve(b, j);
for(j = 395800; j < 395810; j++) _solve(b, j);
for(j = 396640; j < 396650; j++) _solve(b, j);
for(j = 397480; j < 397490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 398320; j < 398330; j++) _solve(b, j);
for(j = 399160; j < 399170; j++) _solve(b, j);
for(j = 400000; j < 400010; j++) _solve(b, j);
for(j = 400840; j < 400850; j++) _solve(b, j);
for(j = 401680; j < 401690; j++) _solve(b, j);
for(j = 402520; j < 402530; j++) _solve(b, j);
for(j = 403360; j < 403370; j++) _solve(b, j);
for(j = 404200; j < 404210; j++) _solve(b, j);
for(j = 405040; j < 405050; j++) _solve(b, j);
for(j = 405880; j < 405890; j++) _solve(b, j);
for(j = 406720; j < 406730; j++) _solve(b, j);
for(j = 407560; j < 407570; j++) _solve(b, j);
for(j = 408400; j < 408410; j++) _solve(b, j);
for(j = 409240; j < 409250; j++) _solve(b, j);
for(j = 410080; j < 410090; j++) _solve(b, j);
for(j = 410920; j < 410930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 411760; j < 411770; j++) _solve(b, j);
for(j = 412600; j < 412610; j++) _solve(b, j);
for(j = 413440; j < 413450; j++) _solve(b, j);
for(j = 414280; j < 414290; j++) _solve(b, j);
for(j = 415120; j < 415130; j++) _solve(b, j);
for(j = 415960; j < 415970; j++) _solve(b, j);
for(j = 416800; j < 416810; j++) _solve(b, j);
for(j = 417640; j < 417650; j++) _solve(b, j);
for(j = 418480; j < 418490; j++) _solve(b, j);
for(j = 419320; j < 419330; j++) _solve(b, j);
for(j = 420160; j < 420170; j++) _solve(b, j);
for(j = 421000; j < 421010; j++) _solve(b, j);
for(j = 421840; j < 421850; j++) _solve(b, j);
for(j = 422680; j < 422690; j++) _solve(b, j);
for(j = 423520; j < 423530; j++) _solve(b, j);
for(j = 424360; j < 424370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 425200; j < 425210; j++) _solve(b, j);
for(j = 426040; j < 426050; j++) _solve(b, j);
for(j = 426880; j < 426890; j++) _solve(b, j);
for(j = 427720; j < 427730; j++) _solve(b, j);
for(j = 428560; j < 428570; j++) _solve(b, j);
for(j = 429400; j < 429410; j++) _solve(b, j);
for(j = 430240; j < 430250; j++) _solve(b, j);
for(j = 431080; j < 431090; j++) _solve(b, j);
for(j = 431920; j < 431930; j++) _solve(b, j);
for(j = 432760; j < 432770; j++) _solve(b, j);
for(j = 433600; j < 433610; j++) _solve(b, j);
for(j = 434440; j < 434450; j++) _solve(b, j);
for(j = 435280; j < 435290; j++) _solve(b, j);
for(j = 436120; j < 436130; j++) _solve(b, j);
for(j = 436960; j < 436970; j++) _solve(b, j);
for(j = 437800; j < 437810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 438640; j < 438650; j++) _solve(b, j);
for(j = 439480; j < 439490; j++) _solve(b, j);
for(j = 440320; j < 440330; j++) _solve(b, j);
for(j = 441160; j < 441170; j++) _solve(b, j);
for(j = 442000; j < 442010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 372290; j < 372300; j++) _solve(b, j);
for(j = 373130; j < 373140; j++) _solve(b, j);
for(j = 373970; j < 373980; j++) _solve(b, j);
for(j = 374810; j < 374820; j++) _solve(b, j);
for(j = 375650; j < 375660; j++) _solve(b, j);
for(j = 376490; j < 376500; j++) _solve(b, j);
for(j = 377330; j < 377340; j++) _solve(b, j);
for(j = 378170; j < 378180; j++) _solve(b, j);
for(j = 379010; j < 379020; j++) _solve(b, j);
for(j = 379850; j < 379860; j++) _solve(b, j);
for(j = 380690; j < 380700; j++) _solve(b, j);
for(j = 381530; j < 381540; j++) _solve(b, j);
for(j = 382370; j < 382380; j++) _solve(b, j);
for(j = 383210; j < 383220; j++) _solve(b, j);
for(j = 384050; j < 384060; j++) _solve(b, j);
for(j = 384890; j < 384900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 385730; j < 385740; j++) _solve(b, j);
for(j = 386570; j < 386580; j++) _solve(b, j);
for(j = 387410; j < 387420; j++) _solve(b, j);
for(j = 388250; j < 388260; j++) _solve(b, j);
for(j = 389090; j < 389100; j++) _solve(b, j);
for(j = 389930; j < 389940; j++) _solve(b, j);
for(j = 390770; j < 390780; j++) _solve(b, j);
for(j = 391610; j < 391620; j++) _solve(b, j);
for(j = 392450; j < 392460; j++) _solve(b, j);
for(j = 393290; j < 393300; j++) _solve(b, j);
for(j = 394130; j < 394140; j++) _solve(b, j);
for(j = 394970; j < 394980; j++) _solve(b, j);
for(j = 395810; j < 395820; j++) _solve(b, j);
for(j = 396650; j < 396660; j++) _solve(b, j);
for(j = 397490; j < 397500; j++) _solve(b, j);
for(j = 398330; j < 398340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 399170; j < 399180; j++) _solve(b, j);
for(j = 400010; j < 400020; j++) _solve(b, j);
for(j = 400850; j < 400860; j++) _solve(b, j);
for(j = 401690; j < 401700; j++) _solve(b, j);
for(j = 402530; j < 402540; j++) _solve(b, j);
for(j = 403370; j < 403380; j++) _solve(b, j);
for(j = 404210; j < 404220; j++) _solve(b, j);
for(j = 405050; j < 405060; j++) _solve(b, j);
for(j = 405890; j < 405900; j++) _solve(b, j);
for(j = 406730; j < 406740; j++) _solve(b, j);
for(j = 407570; j < 407580; j++) _solve(b, j);
for(j = 408410; j < 408420; j++) _solve(b, j);
for(j = 409250; j < 409260; j++) _solve(b, j);
for(j = 410090; j < 410100; j++) _solve(b, j);
for(j = 410930; j < 410940; j++) _solve(b, j);
for(j = 411770; j < 411780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 412610; j < 412620; j++) _solve(b, j);
for(j = 413450; j < 413460; j++) _solve(b, j);
for(j = 414290; j < 414300; j++) _solve(b, j);
for(j = 415130; j < 415140; j++) _solve(b, j);
for(j = 415970; j < 415980; j++) _solve(b, j);
for(j = 416810; j < 416820; j++) _solve(b, j);
for(j = 417650; j < 417660; j++) _solve(b, j);
for(j = 418490; j < 418500; j++) _solve(b, j);
for(j = 419330; j < 419340; j++) _solve(b, j);
for(j = 420170; j < 420180; j++) _solve(b, j);
for(j = 421010; j < 421020; j++) _solve(b, j);
for(j = 421850; j < 421860; j++) _solve(b, j);
for(j = 422690; j < 422700; j++) _solve(b, j);
for(j = 423530; j < 423540; j++) _solve(b, j);
for(j = 424370; j < 424380; j++) _solve(b, j);
for(j = 425210; j < 425220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 426050; j < 426060; j++) _solve(b, j);
for(j = 426890; j < 426900; j++) _solve(b, j);
for(j = 427730; j < 427740; j++) _solve(b, j);
for(j = 428570; j < 428580; j++) _solve(b, j);
for(j = 429410; j < 429420; j++) _solve(b, j);
for(j = 430250; j < 430260; j++) _solve(b, j);
for(j = 431090; j < 431100; j++) _solve(b, j);
for(j = 431930; j < 431940; j++) _solve(b, j);
for(j = 432770; j < 432780; j++) _solve(b, j);
for(j = 433610; j < 433620; j++) _solve(b, j);
for(j = 434450; j < 434460; j++) _solve(b, j);
for(j = 435290; j < 435300; j++) _solve(b, j);
for(j = 436130; j < 436140; j++) _solve(b, j);
for(j = 436970; j < 436980; j++) _solve(b, j);
for(j = 437810; j < 437820; j++) _solve(b, j);
for(j = 438650; j < 438660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 439490; j < 439500; j++) _solve(b, j);
for(j = 440330; j < 440340; j++) _solve(b, j);
for(j = 441170; j < 441180; j++) _solve(b, j);
for(j = 442010; j < 442020; j++) _solve(b, j);
for(j = 442850; j < 442860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 373140; j < 373150; j++) _solve(b, j);
for(j = 373980; j < 373990; j++) _solve(b, j);
for(j = 374820; j < 374830; j++) _solve(b, j);
for(j = 375660; j < 375670; j++) _solve(b, j);
for(j = 376500; j < 376510; j++) _solve(b, j);
for(j = 377340; j < 377350; j++) _solve(b, j);
for(j = 378180; j < 378190; j++) _solve(b, j);
for(j = 379020; j < 379030; j++) _solve(b, j);
for(j = 379860; j < 379870; j++) _solve(b, j);
for(j = 380700; j < 380710; j++) _solve(b, j);
for(j = 381540; j < 381550; j++) _solve(b, j);
for(j = 382380; j < 382390; j++) _solve(b, j);
for(j = 383220; j < 383230; j++) _solve(b, j);
for(j = 384060; j < 384070; j++) _solve(b, j);
for(j = 384900; j < 384910; j++) _solve(b, j);
for(j = 385740; j < 385750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 386580; j < 386590; j++) _solve(b, j);
for(j = 387420; j < 387430; j++) _solve(b, j);
for(j = 388260; j < 388270; j++) _solve(b, j);
for(j = 389100; j < 389110; j++) _solve(b, j);
for(j = 389940; j < 389950; j++) _solve(b, j);
for(j = 390780; j < 390790; j++) _solve(b, j);
for(j = 391620; j < 391630; j++) _solve(b, j);
for(j = 392460; j < 392470; j++) _solve(b, j);
for(j = 393300; j < 393310; j++) _solve(b, j);
for(j = 394140; j < 394150; j++) _solve(b, j);
for(j = 394980; j < 394990; j++) _solve(b, j);
for(j = 395820; j < 395830; j++) _solve(b, j);
for(j = 396660; j < 396670; j++) _solve(b, j);
for(j = 397500; j < 397510; j++) _solve(b, j);
for(j = 398340; j < 398350; j++) _solve(b, j);
for(j = 399180; j < 399190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 400020; j < 400030; j++) _solve(b, j);
for(j = 400860; j < 400870; j++) _solve(b, j);
for(j = 401700; j < 401710; j++) _solve(b, j);
for(j = 402540; j < 402550; j++) _solve(b, j);
for(j = 403380; j < 403390; j++) _solve(b, j);
for(j = 404220; j < 404230; j++) _solve(b, j);
for(j = 405060; j < 405070; j++) _solve(b, j);
for(j = 405900; j < 405910; j++) _solve(b, j);
for(j = 406740; j < 406750; j++) _solve(b, j);
for(j = 407580; j < 407590; j++) _solve(b, j);
for(j = 408420; j < 408430; j++) _solve(b, j);
for(j = 409260; j < 409270; j++) _solve(b, j);
for(j = 410100; j < 410110; j++) _solve(b, j);
for(j = 410940; j < 410950; j++) _solve(b, j);
for(j = 411780; j < 411790; j++) _solve(b, j);
for(j = 412620; j < 412630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 413460; j < 413470; j++) _solve(b, j);
for(j = 414300; j < 414310; j++) _solve(b, j);
for(j = 415140; j < 415150; j++) _solve(b, j);
for(j = 415980; j < 415990; j++) _solve(b, j);
for(j = 416820; j < 416830; j++) _solve(b, j);
for(j = 417660; j < 417670; j++) _solve(b, j);
for(j = 418500; j < 418510; j++) _solve(b, j);
for(j = 419340; j < 419350; j++) _solve(b, j);
for(j = 420180; j < 420190; j++) _solve(b, j);
for(j = 421020; j < 421030; j++) _solve(b, j);
for(j = 421860; j < 421870; j++) _solve(b, j);
for(j = 422700; j < 422710; j++) _solve(b, j);
for(j = 423540; j < 423550; j++) _solve(b, j);
for(j = 424380; j < 424390; j++) _solve(b, j);
for(j = 425220; j < 425230; j++) _solve(b, j);
for(j = 426060; j < 426070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 426900; j < 426910; j++) _solve(b, j);
for(j = 427740; j < 427750; j++) _solve(b, j);
for(j = 428580; j < 428590; j++) _solve(b, j);
for(j = 429420; j < 429430; j++) _solve(b, j);
for(j = 430260; j < 430270; j++) _solve(b, j);
for(j = 431100; j < 431110; j++) _solve(b, j);
for(j = 431940; j < 431950; j++) _solve(b, j);
for(j = 432780; j < 432790; j++) _solve(b, j);
for(j = 433620; j < 433630; j++) _solve(b, j);
for(j = 434460; j < 434470; j++) _solve(b, j);
for(j = 435300; j < 435310; j++) _solve(b, j);
for(j = 436140; j < 436150; j++) _solve(b, j);
for(j = 436980; j < 436990; j++) _solve(b, j);
for(j = 437820; j < 437830; j++) _solve(b, j);
for(j = 438660; j < 438670; j++) _solve(b, j);
for(j = 439500; j < 439510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 440340; j < 440350; j++) _solve(b, j);
for(j = 441180; j < 441190; j++) _solve(b, j);
for(j = 442020; j < 442030; j++) _solve(b, j);
for(j = 442860; j < 442870; j++) _solve(b, j);
for(j = 443700; j < 443710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 373990; j < 374000; j++) _solve(b, j);
for(j = 374830; j < 374840; j++) _solve(b, j);
for(j = 375670; j < 375680; j++) _solve(b, j);
for(j = 376510; j < 376520; j++) _solve(b, j);
for(j = 377350; j < 377360; j++) _solve(b, j);
for(j = 378190; j < 378200; j++) _solve(b, j);
for(j = 379030; j < 379040; j++) _solve(b, j);
for(j = 379870; j < 379880; j++) _solve(b, j);
for(j = 380710; j < 380720; j++) _solve(b, j);
for(j = 381550; j < 381560; j++) _solve(b, j);
for(j = 382390; j < 382400; j++) _solve(b, j);
for(j = 383230; j < 383240; j++) _solve(b, j);
for(j = 384070; j < 384080; j++) _solve(b, j);
for(j = 384910; j < 384920; j++) _solve(b, j);
for(j = 385750; j < 385760; j++) _solve(b, j);
for(j = 386590; j < 386600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 387430; j < 387440; j++) _solve(b, j);
for(j = 388270; j < 388280; j++) _solve(b, j);
for(j = 389110; j < 389120; j++) _solve(b, j);
for(j = 389950; j < 389960; j++) _solve(b, j);
for(j = 390790; j < 390800; j++) _solve(b, j);
for(j = 391630; j < 391640; j++) _solve(b, j);
for(j = 392470; j < 392480; j++) _solve(b, j);
for(j = 393310; j < 393320; j++) _solve(b, j);
for(j = 394150; j < 394160; j++) _solve(b, j);
for(j = 394990; j < 395000; j++) _solve(b, j);
for(j = 395830; j < 395840; j++) _solve(b, j);
for(j = 396670; j < 396680; j++) _solve(b, j);
for(j = 397510; j < 397520; j++) _solve(b, j);
for(j = 398350; j < 398360; j++) _solve(b, j);
for(j = 399190; j < 399200; j++) _solve(b, j);
for(j = 400030; j < 400040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 400870; j < 400880; j++) _solve(b, j);
for(j = 401710; j < 401720; j++) _solve(b, j);
for(j = 402550; j < 402560; j++) _solve(b, j);
for(j = 403390; j < 403400; j++) _solve(b, j);
for(j = 404230; j < 404240; j++) _solve(b, j);
for(j = 405070; j < 405080; j++) _solve(b, j);
for(j = 405910; j < 405920; j++) _solve(b, j);
for(j = 406750; j < 406760; j++) _solve(b, j);
for(j = 407590; j < 407600; j++) _solve(b, j);
for(j = 408430; j < 408440; j++) _solve(b, j);
for(j = 409270; j < 409280; j++) _solve(b, j);
for(j = 410110; j < 410120; j++) _solve(b, j);
for(j = 410950; j < 410960; j++) _solve(b, j);
for(j = 411790; j < 411800; j++) _solve(b, j);
for(j = 412630; j < 412640; j++) _solve(b, j);
for(j = 413470; j < 413480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 414310; j < 414320; j++) _solve(b, j);
for(j = 415150; j < 415160; j++) _solve(b, j);
for(j = 415990; j < 416000; j++) _solve(b, j);
for(j = 416830; j < 416840; j++) _solve(b, j);
for(j = 417670; j < 417680; j++) _solve(b, j);
for(j = 418510; j < 418520; j++) _solve(b, j);
for(j = 419350; j < 419360; j++) _solve(b, j);
for(j = 420190; j < 420200; j++) _solve(b, j);
for(j = 421030; j < 421040; j++) _solve(b, j);
for(j = 421870; j < 421880; j++) _solve(b, j);
for(j = 422710; j < 422720; j++) _solve(b, j);
for(j = 423550; j < 423560; j++) _solve(b, j);
for(j = 424390; j < 424400; j++) _solve(b, j);
for(j = 425230; j < 425240; j++) _solve(b, j);
for(j = 426070; j < 426080; j++) _solve(b, j);
for(j = 426910; j < 426920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 427750; j < 427760; j++) _solve(b, j);
for(j = 428590; j < 428600; j++) _solve(b, j);
for(j = 429430; j < 429440; j++) _solve(b, j);
for(j = 430270; j < 430280; j++) _solve(b, j);
for(j = 431110; j < 431120; j++) _solve(b, j);
for(j = 431950; j < 431960; j++) _solve(b, j);
for(j = 432790; j < 432800; j++) _solve(b, j);
for(j = 433630; j < 433640; j++) _solve(b, j);
for(j = 434470; j < 434480; j++) _solve(b, j);
for(j = 435310; j < 435320; j++) _solve(b, j);
for(j = 436150; j < 436160; j++) _solve(b, j);
for(j = 436990; j < 437000; j++) _solve(b, j);
for(j = 437830; j < 437840; j++) _solve(b, j);
for(j = 438670; j < 438680; j++) _solve(b, j);
for(j = 439510; j < 439520; j++) _solve(b, j);
for(j = 440350; j < 440360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 441190; j < 441200; j++) _solve(b, j);
for(j = 442030; j < 442040; j++) _solve(b, j);
for(j = 442870; j < 442880; j++) _solve(b, j);
for(j = 443710; j < 443720; j++) _solve(b, j);
for(j = 444550; j < 444560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 374840; j < 374850; j++) _solve(b, j);
for(j = 375680; j < 375690; j++) _solve(b, j);
for(j = 376520; j < 376530; j++) _solve(b, j);
for(j = 377360; j < 377370; j++) _solve(b, j);
for(j = 378200; j < 378210; j++) _solve(b, j);
for(j = 379040; j < 379050; j++) _solve(b, j);
for(j = 379880; j < 379890; j++) _solve(b, j);
for(j = 380720; j < 380730; j++) _solve(b, j);
for(j = 381560; j < 381570; j++) _solve(b, j);
for(j = 382400; j < 382410; j++) _solve(b, j);
for(j = 383240; j < 383250; j++) _solve(b, j);
for(j = 384080; j < 384090; j++) _solve(b, j);
for(j = 384920; j < 384930; j++) _solve(b, j);
for(j = 385760; j < 385770; j++) _solve(b, j);
for(j = 386600; j < 386610; j++) _solve(b, j);
for(j = 387440; j < 387450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 388280; j < 388290; j++) _solve(b, j);
for(j = 389120; j < 389130; j++) _solve(b, j);
for(j = 389960; j < 389970; j++) _solve(b, j);
for(j = 390800; j < 390810; j++) _solve(b, j);
for(j = 391640; j < 391650; j++) _solve(b, j);
for(j = 392480; j < 392490; j++) _solve(b, j);
for(j = 393320; j < 393330; j++) _solve(b, j);
for(j = 394160; j < 394170; j++) _solve(b, j);
for(j = 395000; j < 395010; j++) _solve(b, j);
for(j = 395840; j < 395850; j++) _solve(b, j);
for(j = 396680; j < 396690; j++) _solve(b, j);
for(j = 397520; j < 397530; j++) _solve(b, j);
for(j = 398360; j < 398370; j++) _solve(b, j);
for(j = 399200; j < 399210; j++) _solve(b, j);
for(j = 400040; j < 400050; j++) _solve(b, j);
for(j = 400880; j < 400890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 401720; j < 401730; j++) _solve(b, j);
for(j = 402560; j < 402570; j++) _solve(b, j);
for(j = 403400; j < 403410; j++) _solve(b, j);
for(j = 404240; j < 404250; j++) _solve(b, j);
for(j = 405080; j < 405090; j++) _solve(b, j);
for(j = 405920; j < 405930; j++) _solve(b, j);
for(j = 406760; j < 406770; j++) _solve(b, j);
for(j = 407600; j < 407610; j++) _solve(b, j);
for(j = 408440; j < 408450; j++) _solve(b, j);
for(j = 409280; j < 409290; j++) _solve(b, j);
for(j = 410120; j < 410130; j++) _solve(b, j);
for(j = 410960; j < 410970; j++) _solve(b, j);
for(j = 411800; j < 411810; j++) _solve(b, j);
for(j = 412640; j < 412650; j++) _solve(b, j);
for(j = 413480; j < 413490; j++) _solve(b, j);
for(j = 414320; j < 414330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 415160; j < 415170; j++) _solve(b, j);
for(j = 416000; j < 416010; j++) _solve(b, j);
for(j = 416840; j < 416850; j++) _solve(b, j);
for(j = 417680; j < 417690; j++) _solve(b, j);
for(j = 418520; j < 418530; j++) _solve(b, j);
for(j = 419360; j < 419370; j++) _solve(b, j);
for(j = 420200; j < 420210; j++) _solve(b, j);
for(j = 421040; j < 421050; j++) _solve(b, j);
for(j = 421880; j < 421890; j++) _solve(b, j);
for(j = 422720; j < 422730; j++) _solve(b, j);
for(j = 423560; j < 423570; j++) _solve(b, j);
for(j = 424400; j < 424410; j++) _solve(b, j);
for(j = 425240; j < 425250; j++) _solve(b, j);
for(j = 426080; j < 426090; j++) _solve(b, j);
for(j = 426920; j < 426930; j++) _solve(b, j);
for(j = 427760; j < 427770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 428600; j < 428610; j++) _solve(b, j);
for(j = 429440; j < 429450; j++) _solve(b, j);
for(j = 430280; j < 430290; j++) _solve(b, j);
for(j = 431120; j < 431130; j++) _solve(b, j);
for(j = 431960; j < 431970; j++) _solve(b, j);
for(j = 432800; j < 432810; j++) _solve(b, j);
for(j = 433640; j < 433650; j++) _solve(b, j);
for(j = 434480; j < 434490; j++) _solve(b, j);
for(j = 435320; j < 435330; j++) _solve(b, j);
for(j = 436160; j < 436170; j++) _solve(b, j);
for(j = 437000; j < 437010; j++) _solve(b, j);
for(j = 437840; j < 437850; j++) _solve(b, j);
for(j = 438680; j < 438690; j++) _solve(b, j);
for(j = 439520; j < 439530; j++) _solve(b, j);
for(j = 440360; j < 440370; j++) _solve(b, j);
for(j = 441200; j < 441210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 442040; j < 442050; j++) _solve(b, j);
for(j = 442880; j < 442890; j++) _solve(b, j);
for(j = 443720; j < 443730; j++) _solve(b, j);
for(j = 444560; j < 444570; j++) _solve(b, j);
for(j = 445400; j < 445410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 375690; j < 375700; j++) _solve(b, j);
for(j = 376530; j < 376540; j++) _solve(b, j);
for(j = 377370; j < 377380; j++) _solve(b, j);
for(j = 378210; j < 378220; j++) _solve(b, j);
for(j = 379050; j < 379060; j++) _solve(b, j);
for(j = 379890; j < 379900; j++) _solve(b, j);
for(j = 380730; j < 380740; j++) _solve(b, j);
for(j = 381570; j < 381580; j++) _solve(b, j);
for(j = 382410; j < 382420; j++) _solve(b, j);
for(j = 383250; j < 383260; j++) _solve(b, j);
for(j = 384090; j < 384100; j++) _solve(b, j);
for(j = 384930; j < 384940; j++) _solve(b, j);
for(j = 385770; j < 385780; j++) _solve(b, j);
for(j = 386610; j < 386620; j++) _solve(b, j);
for(j = 387450; j < 387460; j++) _solve(b, j);
for(j = 388290; j < 388300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 389130; j < 389140; j++) _solve(b, j);
for(j = 389970; j < 389980; j++) _solve(b, j);
for(j = 390810; j < 390820; j++) _solve(b, j);
for(j = 391650; j < 391660; j++) _solve(b, j);
for(j = 392490; j < 392500; j++) _solve(b, j);
for(j = 393330; j < 393340; j++) _solve(b, j);
for(j = 394170; j < 394180; j++) _solve(b, j);
for(j = 395010; j < 395020; j++) _solve(b, j);
for(j = 395850; j < 395860; j++) _solve(b, j);
for(j = 396690; j < 396700; j++) _solve(b, j);
for(j = 397530; j < 397540; j++) _solve(b, j);
for(j = 398370; j < 398380; j++) _solve(b, j);
for(j = 399210; j < 399220; j++) _solve(b, j);
for(j = 400050; j < 400060; j++) _solve(b, j);
for(j = 400890; j < 400900; j++) _solve(b, j);
for(j = 401730; j < 401740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 402570; j < 402580; j++) _solve(b, j);
for(j = 403410; j < 403420; j++) _solve(b, j);
for(j = 404250; j < 404260; j++) _solve(b, j);
for(j = 405090; j < 405100; j++) _solve(b, j);
for(j = 405930; j < 405940; j++) _solve(b, j);
for(j = 406770; j < 406780; j++) _solve(b, j);
for(j = 407610; j < 407620; j++) _solve(b, j);
for(j = 408450; j < 408460; j++) _solve(b, j);
for(j = 409290; j < 409300; j++) _solve(b, j);
for(j = 410130; j < 410140; j++) _solve(b, j);
for(j = 410970; j < 410980; j++) _solve(b, j);
for(j = 411810; j < 411820; j++) _solve(b, j);
for(j = 412650; j < 412660; j++) _solve(b, j);
for(j = 413490; j < 413500; j++) _solve(b, j);
for(j = 414330; j < 414340; j++) _solve(b, j);
for(j = 415170; j < 415180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 416010; j < 416020; j++) _solve(b, j);
for(j = 416850; j < 416860; j++) _solve(b, j);
for(j = 417690; j < 417700; j++) _solve(b, j);
for(j = 418530; j < 418540; j++) _solve(b, j);
for(j = 419370; j < 419380; j++) _solve(b, j);
for(j = 420210; j < 420220; j++) _solve(b, j);
for(j = 421050; j < 421060; j++) _solve(b, j);
for(j = 421890; j < 421900; j++) _solve(b, j);
for(j = 422730; j < 422740; j++) _solve(b, j);
for(j = 423570; j < 423580; j++) _solve(b, j);
for(j = 424410; j < 424420; j++) _solve(b, j);
for(j = 425250; j < 425260; j++) _solve(b, j);
for(j = 426090; j < 426100; j++) _solve(b, j);
for(j = 426930; j < 426940; j++) _solve(b, j);
for(j = 427770; j < 427780; j++) _solve(b, j);
for(j = 428610; j < 428620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 429450; j < 429460; j++) _solve(b, j);
for(j = 430290; j < 430300; j++) _solve(b, j);
for(j = 431130; j < 431140; j++) _solve(b, j);
for(j = 431970; j < 431980; j++) _solve(b, j);
for(j = 432810; j < 432820; j++) _solve(b, j);
for(j = 433650; j < 433660; j++) _solve(b, j);
for(j = 434490; j < 434500; j++) _solve(b, j);
for(j = 435330; j < 435340; j++) _solve(b, j);
for(j = 436170; j < 436180; j++) _solve(b, j);
for(j = 437010; j < 437020; j++) _solve(b, j);
for(j = 437850; j < 437860; j++) _solve(b, j);
for(j = 438690; j < 438700; j++) _solve(b, j);
for(j = 439530; j < 439540; j++) _solve(b, j);
for(j = 440370; j < 440380; j++) _solve(b, j);
for(j = 441210; j < 441220; j++) _solve(b, j);
for(j = 442050; j < 442060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 442890; j < 442900; j++) _solve(b, j);
for(j = 443730; j < 443740; j++) _solve(b, j);
for(j = 444570; j < 444580; j++) _solve(b, j);
for(j = 445410; j < 445420; j++) _solve(b, j);
for(j = 446250; j < 446260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 376540; j < 376550; j++) _solve(b, j);
for(j = 377380; j < 377390; j++) _solve(b, j);
for(j = 378220; j < 378230; j++) _solve(b, j);
for(j = 379060; j < 379070; j++) _solve(b, j);
for(j = 379900; j < 379910; j++) _solve(b, j);
for(j = 380740; j < 380750; j++) _solve(b, j);
for(j = 381580; j < 381590; j++) _solve(b, j);
for(j = 382420; j < 382430; j++) _solve(b, j);
for(j = 383260; j < 383270; j++) _solve(b, j);
for(j = 384100; j < 384110; j++) _solve(b, j);
for(j = 384940; j < 384950; j++) _solve(b, j);
for(j = 385780; j < 385790; j++) _solve(b, j);
for(j = 386620; j < 386630; j++) _solve(b, j);
for(j = 387460; j < 387470; j++) _solve(b, j);
for(j = 388300; j < 388310; j++) _solve(b, j);
for(j = 389140; j < 389150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 389980; j < 389990; j++) _solve(b, j);
for(j = 390820; j < 390830; j++) _solve(b, j);
for(j = 391660; j < 391670; j++) _solve(b, j);
for(j = 392500; j < 392510; j++) _solve(b, j);
for(j = 393340; j < 393350; j++) _solve(b, j);
for(j = 394180; j < 394190; j++) _solve(b, j);
for(j = 395020; j < 395030; j++) _solve(b, j);
for(j = 395860; j < 395870; j++) _solve(b, j);
for(j = 396700; j < 396710; j++) _solve(b, j);
for(j = 397540; j < 397550; j++) _solve(b, j);
for(j = 398380; j < 398390; j++) _solve(b, j);
for(j = 399220; j < 399230; j++) _solve(b, j);
for(j = 400060; j < 400070; j++) _solve(b, j);
for(j = 400900; j < 400910; j++) _solve(b, j);
for(j = 401740; j < 401750; j++) _solve(b, j);
for(j = 402580; j < 402590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 403420; j < 403430; j++) _solve(b, j);
for(j = 404260; j < 404270; j++) _solve(b, j);
for(j = 405100; j < 405110; j++) _solve(b, j);
for(j = 405940; j < 405950; j++) _solve(b, j);
for(j = 406780; j < 406790; j++) _solve(b, j);
for(j = 407620; j < 407630; j++) _solve(b, j);
for(j = 408460; j < 408470; j++) _solve(b, j);
for(j = 409300; j < 409310; j++) _solve(b, j);
for(j = 410140; j < 410150; j++) _solve(b, j);
for(j = 410980; j < 410990; j++) _solve(b, j);
for(j = 411820; j < 411830; j++) _solve(b, j);
for(j = 412660; j < 412670; j++) _solve(b, j);
for(j = 413500; j < 413510; j++) _solve(b, j);
for(j = 414340; j < 414350; j++) _solve(b, j);
for(j = 415180; j < 415190; j++) _solve(b, j);
for(j = 416020; j < 416030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 416860; j < 416870; j++) _solve(b, j);
for(j = 417700; j < 417710; j++) _solve(b, j);
for(j = 418540; j < 418550; j++) _solve(b, j);
for(j = 419380; j < 419390; j++) _solve(b, j);
for(j = 420220; j < 420230; j++) _solve(b, j);
for(j = 421060; j < 421070; j++) _solve(b, j);
for(j = 421900; j < 421910; j++) _solve(b, j);
for(j = 422740; j < 422750; j++) _solve(b, j);
for(j = 423580; j < 423590; j++) _solve(b, j);
for(j = 424420; j < 424430; j++) _solve(b, j);
for(j = 425260; j < 425270; j++) _solve(b, j);
for(j = 426100; j < 426110; j++) _solve(b, j);
for(j = 426940; j < 426950; j++) _solve(b, j);
for(j = 427780; j < 427790; j++) _solve(b, j);
for(j = 428620; j < 428630; j++) _solve(b, j);
for(j = 429460; j < 429470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 430300; j < 430310; j++) _solve(b, j);
for(j = 431140; j < 431150; j++) _solve(b, j);
for(j = 431980; j < 431990; j++) _solve(b, j);
for(j = 432820; j < 432830; j++) _solve(b, j);
for(j = 433660; j < 433670; j++) _solve(b, j);
for(j = 434500; j < 434510; j++) _solve(b, j);
for(j = 435340; j < 435350; j++) _solve(b, j);
for(j = 436180; j < 436190; j++) _solve(b, j);
for(j = 437020; j < 437030; j++) _solve(b, j);
for(j = 437860; j < 437870; j++) _solve(b, j);
for(j = 438700; j < 438710; j++) _solve(b, j);
for(j = 439540; j < 439550; j++) _solve(b, j);
for(j = 440380; j < 440390; j++) _solve(b, j);
for(j = 441220; j < 441230; j++) _solve(b, j);
for(j = 442060; j < 442070; j++) _solve(b, j);
for(j = 442900; j < 442910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 443740; j < 443750; j++) _solve(b, j);
for(j = 444580; j < 444590; j++) _solve(b, j);
for(j = 445420; j < 445430; j++) _solve(b, j);
for(j = 446260; j < 446270; j++) _solve(b, j);
for(j = 447100; j < 447110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 377390; j < 377400; j++) _solve(b, j);
for(j = 378230; j < 378240; j++) _solve(b, j);
for(j = 379070; j < 379080; j++) _solve(b, j);
for(j = 379910; j < 379920; j++) _solve(b, j);
for(j = 380750; j < 380760; j++) _solve(b, j);
for(j = 381590; j < 381600; j++) _solve(b, j);
for(j = 382430; j < 382440; j++) _solve(b, j);
for(j = 383270; j < 383280; j++) _solve(b, j);
for(j = 384110; j < 384120; j++) _solve(b, j);
for(j = 384950; j < 384960; j++) _solve(b, j);
for(j = 385790; j < 385800; j++) _solve(b, j);
for(j = 386630; j < 386640; j++) _solve(b, j);
for(j = 387470; j < 387480; j++) _solve(b, j);
for(j = 388310; j < 388320; j++) _solve(b, j);
for(j = 389150; j < 389160; j++) _solve(b, j);
for(j = 389990; j < 390000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 390830; j < 390840; j++) _solve(b, j);
for(j = 391670; j < 391680; j++) _solve(b, j);
for(j = 392510; j < 392520; j++) _solve(b, j);
for(j = 393350; j < 393360; j++) _solve(b, j);
for(j = 394190; j < 394200; j++) _solve(b, j);
for(j = 395030; j < 395040; j++) _solve(b, j);
for(j = 395870; j < 395880; j++) _solve(b, j);
for(j = 396710; j < 396720; j++) _solve(b, j);
for(j = 397550; j < 397560; j++) _solve(b, j);
for(j = 398390; j < 398400; j++) _solve(b, j);
for(j = 399230; j < 399240; j++) _solve(b, j);
for(j = 400070; j < 400080; j++) _solve(b, j);
for(j = 400910; j < 400920; j++) _solve(b, j);
for(j = 401750; j < 401760; j++) _solve(b, j);
for(j = 402590; j < 402600; j++) _solve(b, j);
for(j = 403430; j < 403440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 404270; j < 404280; j++) _solve(b, j);
for(j = 405110; j < 405120; j++) _solve(b, j);
for(j = 405950; j < 405960; j++) _solve(b, j);
for(j = 406790; j < 406800; j++) _solve(b, j);
for(j = 407630; j < 407640; j++) _solve(b, j);
for(j = 408470; j < 408480; j++) _solve(b, j);
for(j = 409310; j < 409320; j++) _solve(b, j);
for(j = 410150; j < 410160; j++) _solve(b, j);
for(j = 410990; j < 411000; j++) _solve(b, j);
for(j = 411830; j < 411840; j++) _solve(b, j);
for(j = 412670; j < 412680; j++) _solve(b, j);
for(j = 413510; j < 413520; j++) _solve(b, j);
for(j = 414350; j < 414360; j++) _solve(b, j);
for(j = 415190; j < 415200; j++) _solve(b, j);
for(j = 416030; j < 416040; j++) _solve(b, j);
for(j = 416870; j < 416880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 417710; j < 417720; j++) _solve(b, j);
for(j = 418550; j < 418560; j++) _solve(b, j);
for(j = 419390; j < 419400; j++) _solve(b, j);
for(j = 420230; j < 420240; j++) _solve(b, j);
for(j = 421070; j < 421080; j++) _solve(b, j);
for(j = 421910; j < 421920; j++) _solve(b, j);
for(j = 422750; j < 422760; j++) _solve(b, j);
for(j = 423590; j < 423600; j++) _solve(b, j);
for(j = 424430; j < 424440; j++) _solve(b, j);
for(j = 425270; j < 425280; j++) _solve(b, j);
for(j = 426110; j < 426120; j++) _solve(b, j);
for(j = 426950; j < 426960; j++) _solve(b, j);
for(j = 427790; j < 427800; j++) _solve(b, j);
for(j = 428630; j < 428640; j++) _solve(b, j);
for(j = 429470; j < 429480; j++) _solve(b, j);
for(j = 430310; j < 430320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 431150; j < 431160; j++) _solve(b, j);
for(j = 431990; j < 432000; j++) _solve(b, j);
for(j = 432830; j < 432840; j++) _solve(b, j);
for(j = 433670; j < 433680; j++) _solve(b, j);
for(j = 434510; j < 434520; j++) _solve(b, j);
for(j = 435350; j < 435360; j++) _solve(b, j);
for(j = 436190; j < 436200; j++) _solve(b, j);
for(j = 437030; j < 437040; j++) _solve(b, j);
for(j = 437870; j < 437880; j++) _solve(b, j);
for(j = 438710; j < 438720; j++) _solve(b, j);
for(j = 439550; j < 439560; j++) _solve(b, j);
for(j = 440390; j < 440400; j++) _solve(b, j);
for(j = 441230; j < 441240; j++) _solve(b, j);
for(j = 442070; j < 442080; j++) _solve(b, j);
for(j = 442910; j < 442920; j++) _solve(b, j);
for(j = 443750; j < 443760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 444590; j < 444600; j++) _solve(b, j);
for(j = 445430; j < 445440; j++) _solve(b, j);
for(j = 446270; j < 446280; j++) _solve(b, j);
for(j = 447110; j < 447120; j++) _solve(b, j);
for(j = 447950; j < 447960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 378240; j < 378250; j++) _solve(b, j);
for(j = 379080; j < 379090; j++) _solve(b, j);
for(j = 379920; j < 379930; j++) _solve(b, j);
for(j = 380760; j < 380770; j++) _solve(b, j);
for(j = 381600; j < 381610; j++) _solve(b, j);
for(j = 382440; j < 382450; j++) _solve(b, j);
for(j = 383280; j < 383290; j++) _solve(b, j);
for(j = 384120; j < 384130; j++) _solve(b, j);
for(j = 384960; j < 384970; j++) _solve(b, j);
for(j = 385800; j < 385810; j++) _solve(b, j);
for(j = 386640; j < 386650; j++) _solve(b, j);
for(j = 387480; j < 387490; j++) _solve(b, j);
for(j = 388320; j < 388330; j++) _solve(b, j);
for(j = 389160; j < 389170; j++) _solve(b, j);
for(j = 390000; j < 390010; j++) _solve(b, j);
for(j = 390840; j < 390850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 391680; j < 391690; j++) _solve(b, j);
for(j = 392520; j < 392530; j++) _solve(b, j);
for(j = 393360; j < 393370; j++) _solve(b, j);
for(j = 394200; j < 394210; j++) _solve(b, j);
for(j = 395040; j < 395050; j++) _solve(b, j);
for(j = 395880; j < 395890; j++) _solve(b, j);
for(j = 396720; j < 396730; j++) _solve(b, j);
for(j = 397560; j < 397570; j++) _solve(b, j);
for(j = 398400; j < 398410; j++) _solve(b, j);
for(j = 399240; j < 399250; j++) _solve(b, j);
for(j = 400080; j < 400090; j++) _solve(b, j);
for(j = 400920; j < 400930; j++) _solve(b, j);
for(j = 401760; j < 401770; j++) _solve(b, j);
for(j = 402600; j < 402610; j++) _solve(b, j);
for(j = 403440; j < 403450; j++) _solve(b, j);
for(j = 404280; j < 404290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 405120; j < 405130; j++) _solve(b, j);
for(j = 405960; j < 405970; j++) _solve(b, j);
for(j = 406800; j < 406810; j++) _solve(b, j);
for(j = 407640; j < 407650; j++) _solve(b, j);
for(j = 408480; j < 408490; j++) _solve(b, j);
for(j = 409320; j < 409330; j++) _solve(b, j);
for(j = 410160; j < 410170; j++) _solve(b, j);
for(j = 411000; j < 411010; j++) _solve(b, j);
for(j = 411840; j < 411850; j++) _solve(b, j);
for(j = 412680; j < 412690; j++) _solve(b, j);
for(j = 413520; j < 413530; j++) _solve(b, j);
for(j = 414360; j < 414370; j++) _solve(b, j);
for(j = 415200; j < 415210; j++) _solve(b, j);
for(j = 416040; j < 416050; j++) _solve(b, j);
for(j = 416880; j < 416890; j++) _solve(b, j);
for(j = 417720; j < 417730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 418560; j < 418570; j++) _solve(b, j);
for(j = 419400; j < 419410; j++) _solve(b, j);
for(j = 420240; j < 420250; j++) _solve(b, j);
for(j = 421080; j < 421090; j++) _solve(b, j);
for(j = 421920; j < 421930; j++) _solve(b, j);
for(j = 422760; j < 422770; j++) _solve(b, j);
for(j = 423600; j < 423610; j++) _solve(b, j);
for(j = 424440; j < 424450; j++) _solve(b, j);
for(j = 425280; j < 425290; j++) _solve(b, j);
for(j = 426120; j < 426130; j++) _solve(b, j);
for(j = 426960; j < 426970; j++) _solve(b, j);
for(j = 427800; j < 427810; j++) _solve(b, j);
for(j = 428640; j < 428650; j++) _solve(b, j);
for(j = 429480; j < 429490; j++) _solve(b, j);
for(j = 430320; j < 430330; j++) _solve(b, j);
for(j = 431160; j < 431170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 432000; j < 432010; j++) _solve(b, j);
for(j = 432840; j < 432850; j++) _solve(b, j);
for(j = 433680; j < 433690; j++) _solve(b, j);
for(j = 434520; j < 434530; j++) _solve(b, j);
for(j = 435360; j < 435370; j++) _solve(b, j);
for(j = 436200; j < 436210; j++) _solve(b, j);
for(j = 437040; j < 437050; j++) _solve(b, j);
for(j = 437880; j < 437890; j++) _solve(b, j);
for(j = 438720; j < 438730; j++) _solve(b, j);
for(j = 439560; j < 439570; j++) _solve(b, j);
for(j = 440400; j < 440410; j++) _solve(b, j);
for(j = 441240; j < 441250; j++) _solve(b, j);
for(j = 442080; j < 442090; j++) _solve(b, j);
for(j = 442920; j < 442930; j++) _solve(b, j);
for(j = 443760; j < 443770; j++) _solve(b, j);
for(j = 444600; j < 444610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 445440; j < 445450; j++) _solve(b, j);
for(j = 446280; j < 446290; j++) _solve(b, j);
for(j = 447120; j < 447130; j++) _solve(b, j);
for(j = 447960; j < 447970; j++) _solve(b, j);
for(j = 448800; j < 448810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 379090; j < 379100; j++) _solve(b, j);
for(j = 379930; j < 379940; j++) _solve(b, j);
for(j = 380770; j < 380780; j++) _solve(b, j);
for(j = 381610; j < 381620; j++) _solve(b, j);
for(j = 382450; j < 382460; j++) _solve(b, j);
for(j = 383290; j < 383300; j++) _solve(b, j);
for(j = 384130; j < 384140; j++) _solve(b, j);
for(j = 384970; j < 384980; j++) _solve(b, j);
for(j = 385810; j < 385820; j++) _solve(b, j);
for(j = 386650; j < 386660; j++) _solve(b, j);
for(j = 387490; j < 387500; j++) _solve(b, j);
for(j = 388330; j < 388340; j++) _solve(b, j);
for(j = 389170; j < 389180; j++) _solve(b, j);
for(j = 390010; j < 390020; j++) _solve(b, j);
for(j = 390850; j < 390860; j++) _solve(b, j);
for(j = 391690; j < 391700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 392530; j < 392540; j++) _solve(b, j);
for(j = 393370; j < 393380; j++) _solve(b, j);
for(j = 394210; j < 394220; j++) _solve(b, j);
for(j = 395050; j < 395060; j++) _solve(b, j);
for(j = 395890; j < 395900; j++) _solve(b, j);
for(j = 396730; j < 396740; j++) _solve(b, j);
for(j = 397570; j < 397580; j++) _solve(b, j);
for(j = 398410; j < 398420; j++) _solve(b, j);
for(j = 399250; j < 399260; j++) _solve(b, j);
for(j = 400090; j < 400100; j++) _solve(b, j);
for(j = 400930; j < 400940; j++) _solve(b, j);
for(j = 401770; j < 401780; j++) _solve(b, j);
for(j = 402610; j < 402620; j++) _solve(b, j);
for(j = 403450; j < 403460; j++) _solve(b, j);
for(j = 404290; j < 404300; j++) _solve(b, j);
for(j = 405130; j < 405140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 405970; j < 405980; j++) _solve(b, j);
for(j = 406810; j < 406820; j++) _solve(b, j);
for(j = 407650; j < 407660; j++) _solve(b, j);
for(j = 408490; j < 408500; j++) _solve(b, j);
for(j = 409330; j < 409340; j++) _solve(b, j);
for(j = 410170; j < 410180; j++) _solve(b, j);
for(j = 411010; j < 411020; j++) _solve(b, j);
for(j = 411850; j < 411860; j++) _solve(b, j);
for(j = 412690; j < 412700; j++) _solve(b, j);
for(j = 413530; j < 413540; j++) _solve(b, j);
for(j = 414370; j < 414380; j++) _solve(b, j);
for(j = 415210; j < 415220; j++) _solve(b, j);
for(j = 416050; j < 416060; j++) _solve(b, j);
for(j = 416890; j < 416900; j++) _solve(b, j);
for(j = 417730; j < 417740; j++) _solve(b, j);
for(j = 418570; j < 418580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 419410; j < 419420; j++) _solve(b, j);
for(j = 420250; j < 420260; j++) _solve(b, j);
for(j = 421090; j < 421100; j++) _solve(b, j);
for(j = 421930; j < 421940; j++) _solve(b, j);
for(j = 422770; j < 422780; j++) _solve(b, j);
for(j = 423610; j < 423620; j++) _solve(b, j);
for(j = 424450; j < 424460; j++) _solve(b, j);
for(j = 425290; j < 425300; j++) _solve(b, j);
for(j = 426130; j < 426140; j++) _solve(b, j);
for(j = 426970; j < 426980; j++) _solve(b, j);
for(j = 427810; j < 427820; j++) _solve(b, j);
for(j = 428650; j < 428660; j++) _solve(b, j);
for(j = 429490; j < 429500; j++) _solve(b, j);
for(j = 430330; j < 430340; j++) _solve(b, j);
for(j = 431170; j < 431180; j++) _solve(b, j);
for(j = 432010; j < 432020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 432850; j < 432860; j++) _solve(b, j);
for(j = 433690; j < 433700; j++) _solve(b, j);
for(j = 434530; j < 434540; j++) _solve(b, j);
for(j = 435370; j < 435380; j++) _solve(b, j);
for(j = 436210; j < 436220; j++) _solve(b, j);
for(j = 437050; j < 437060; j++) _solve(b, j);
for(j = 437890; j < 437900; j++) _solve(b, j);
for(j = 438730; j < 438740; j++) _solve(b, j);
for(j = 439570; j < 439580; j++) _solve(b, j);
for(j = 440410; j < 440420; j++) _solve(b, j);
for(j = 441250; j < 441260; j++) _solve(b, j);
for(j = 442090; j < 442100; j++) _solve(b, j);
for(j = 442930; j < 442940; j++) _solve(b, j);
for(j = 443770; j < 443780; j++) _solve(b, j);
for(j = 444610; j < 444620; j++) _solve(b, j);
for(j = 445450; j < 445460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 446290; j < 446300; j++) _solve(b, j);
for(j = 447130; j < 447140; j++) _solve(b, j);
for(j = 447970; j < 447980; j++) _solve(b, j);
for(j = 448810; j < 448820; j++) _solve(b, j);
for(j = 449650; j < 449660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 379940; j < 379950; j++) _solve(b, j);
for(j = 380780; j < 380790; j++) _solve(b, j);
for(j = 381620; j < 381630; j++) _solve(b, j);
for(j = 382460; j < 382470; j++) _solve(b, j);
for(j = 383300; j < 383310; j++) _solve(b, j);
for(j = 384140; j < 384150; j++) _solve(b, j);
for(j = 384980; j < 384990; j++) _solve(b, j);
for(j = 385820; j < 385830; j++) _solve(b, j);
for(j = 386660; j < 386670; j++) _solve(b, j);
for(j = 387500; j < 387510; j++) _solve(b, j);
for(j = 388340; j < 388350; j++) _solve(b, j);
for(j = 389180; j < 389190; j++) _solve(b, j);
for(j = 390020; j < 390030; j++) _solve(b, j);
for(j = 390860; j < 390870; j++) _solve(b, j);
for(j = 391700; j < 391710; j++) _solve(b, j);
for(j = 392540; j < 392550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 393380; j < 393390; j++) _solve(b, j);
for(j = 394220; j < 394230; j++) _solve(b, j);
for(j = 395060; j < 395070; j++) _solve(b, j);
for(j = 395900; j < 395910; j++) _solve(b, j);
for(j = 396740; j < 396750; j++) _solve(b, j);
for(j = 397580; j < 397590; j++) _solve(b, j);
for(j = 398420; j < 398430; j++) _solve(b, j);
for(j = 399260; j < 399270; j++) _solve(b, j);
for(j = 400100; j < 400110; j++) _solve(b, j);
for(j = 400940; j < 400950; j++) _solve(b, j);
for(j = 401780; j < 401790; j++) _solve(b, j);
for(j = 402620; j < 402630; j++) _solve(b, j);
for(j = 403460; j < 403470; j++) _solve(b, j);
for(j = 404300; j < 404310; j++) _solve(b, j);
for(j = 405140; j < 405150; j++) _solve(b, j);
for(j = 405980; j < 405990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 406820; j < 406830; j++) _solve(b, j);
for(j = 407660; j < 407670; j++) _solve(b, j);
for(j = 408500; j < 408510; j++) _solve(b, j);
for(j = 409340; j < 409350; j++) _solve(b, j);
for(j = 410180; j < 410190; j++) _solve(b, j);
for(j = 411020; j < 411030; j++) _solve(b, j);
for(j = 411860; j < 411870; j++) _solve(b, j);
for(j = 412700; j < 412710; j++) _solve(b, j);
for(j = 413540; j < 413550; j++) _solve(b, j);
for(j = 414380; j < 414390; j++) _solve(b, j);
for(j = 415220; j < 415230; j++) _solve(b, j);
for(j = 416060; j < 416070; j++) _solve(b, j);
for(j = 416900; j < 416910; j++) _solve(b, j);
for(j = 417740; j < 417750; j++) _solve(b, j);
for(j = 418580; j < 418590; j++) _solve(b, j);
for(j = 419420; j < 419430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 420260; j < 420270; j++) _solve(b, j);
for(j = 421100; j < 421110; j++) _solve(b, j);
for(j = 421940; j < 421950; j++) _solve(b, j);
for(j = 422780; j < 422790; j++) _solve(b, j);
for(j = 423620; j < 423630; j++) _solve(b, j);
for(j = 424460; j < 424470; j++) _solve(b, j);
for(j = 425300; j < 425310; j++) _solve(b, j);
for(j = 426140; j < 426150; j++) _solve(b, j);
for(j = 426980; j < 426990; j++) _solve(b, j);
for(j = 427820; j < 427830; j++) _solve(b, j);
for(j = 428660; j < 428670; j++) _solve(b, j);
for(j = 429500; j < 429510; j++) _solve(b, j);
for(j = 430340; j < 430350; j++) _solve(b, j);
for(j = 431180; j < 431190; j++) _solve(b, j);
for(j = 432020; j < 432030; j++) _solve(b, j);
for(j = 432860; j < 432870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 433700; j < 433710; j++) _solve(b, j);
for(j = 434540; j < 434550; j++) _solve(b, j);
for(j = 435380; j < 435390; j++) _solve(b, j);
for(j = 436220; j < 436230; j++) _solve(b, j);
for(j = 437060; j < 437070; j++) _solve(b, j);
for(j = 437900; j < 437910; j++) _solve(b, j);
for(j = 438740; j < 438750; j++) _solve(b, j);
for(j = 439580; j < 439590; j++) _solve(b, j);
for(j = 440420; j < 440430; j++) _solve(b, j);
for(j = 441260; j < 441270; j++) _solve(b, j);
for(j = 442100; j < 442110; j++) _solve(b, j);
for(j = 442940; j < 442950; j++) _solve(b, j);
for(j = 443780; j < 443790; j++) _solve(b, j);
for(j = 444620; j < 444630; j++) _solve(b, j);
for(j = 445460; j < 445470; j++) _solve(b, j);
for(j = 446300; j < 446310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 447140; j < 447150; j++) _solve(b, j);
for(j = 447980; j < 447990; j++) _solve(b, j);
for(j = 448820; j < 448830; j++) _solve(b, j);
for(j = 449660; j < 449670; j++) _solve(b, j);
for(j = 450500; j < 450510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 380790; j < 380800; j++) _solve(b, j);
for(j = 381630; j < 381640; j++) _solve(b, j);
for(j = 382470; j < 382480; j++) _solve(b, j);
for(j = 383310; j < 383320; j++) _solve(b, j);
for(j = 384150; j < 384160; j++) _solve(b, j);
for(j = 384990; j < 385000; j++) _solve(b, j);
for(j = 385830; j < 385840; j++) _solve(b, j);
for(j = 386670; j < 386680; j++) _solve(b, j);
for(j = 387510; j < 387520; j++) _solve(b, j);
for(j = 388350; j < 388360; j++) _solve(b, j);
for(j = 389190; j < 389200; j++) _solve(b, j);
for(j = 390030; j < 390040; j++) _solve(b, j);
for(j = 390870; j < 390880; j++) _solve(b, j);
for(j = 391710; j < 391720; j++) _solve(b, j);
for(j = 392550; j < 392560; j++) _solve(b, j);
for(j = 393390; j < 393400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 394230; j < 394240; j++) _solve(b, j);
for(j = 395070; j < 395080; j++) _solve(b, j);
for(j = 395910; j < 395920; j++) _solve(b, j);
for(j = 396750; j < 396760; j++) _solve(b, j);
for(j = 397590; j < 397600; j++) _solve(b, j);
for(j = 398430; j < 398440; j++) _solve(b, j);
for(j = 399270; j < 399280; j++) _solve(b, j);
for(j = 400110; j < 400120; j++) _solve(b, j);
for(j = 400950; j < 400960; j++) _solve(b, j);
for(j = 401790; j < 401800; j++) _solve(b, j);
for(j = 402630; j < 402640; j++) _solve(b, j);
for(j = 403470; j < 403480; j++) _solve(b, j);
for(j = 404310; j < 404320; j++) _solve(b, j);
for(j = 405150; j < 405160; j++) _solve(b, j);
for(j = 405990; j < 406000; j++) _solve(b, j);
for(j = 406830; j < 406840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 407670; j < 407680; j++) _solve(b, j);
for(j = 408510; j < 408520; j++) _solve(b, j);
for(j = 409350; j < 409360; j++) _solve(b, j);
for(j = 410190; j < 410200; j++) _solve(b, j);
for(j = 411030; j < 411040; j++) _solve(b, j);
for(j = 411870; j < 411880; j++) _solve(b, j);
for(j = 412710; j < 412720; j++) _solve(b, j);
for(j = 413550; j < 413560; j++) _solve(b, j);
for(j = 414390; j < 414400; j++) _solve(b, j);
for(j = 415230; j < 415240; j++) _solve(b, j);
for(j = 416070; j < 416080; j++) _solve(b, j);
for(j = 416910; j < 416920; j++) _solve(b, j);
for(j = 417750; j < 417760; j++) _solve(b, j);
for(j = 418590; j < 418600; j++) _solve(b, j);
for(j = 419430; j < 419440; j++) _solve(b, j);
for(j = 420270; j < 420280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 421110; j < 421120; j++) _solve(b, j);
for(j = 421950; j < 421960; j++) _solve(b, j);
for(j = 422790; j < 422800; j++) _solve(b, j);
for(j = 423630; j < 423640; j++) _solve(b, j);
for(j = 424470; j < 424480; j++) _solve(b, j);
for(j = 425310; j < 425320; j++) _solve(b, j);
for(j = 426150; j < 426160; j++) _solve(b, j);
for(j = 426990; j < 427000; j++) _solve(b, j);
for(j = 427830; j < 427840; j++) _solve(b, j);
for(j = 428670; j < 428680; j++) _solve(b, j);
for(j = 429510; j < 429520; j++) _solve(b, j);
for(j = 430350; j < 430360; j++) _solve(b, j);
for(j = 431190; j < 431200; j++) _solve(b, j);
for(j = 432030; j < 432040; j++) _solve(b, j);
for(j = 432870; j < 432880; j++) _solve(b, j);
for(j = 433710; j < 433720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 434550; j < 434560; j++) _solve(b, j);
for(j = 435390; j < 435400; j++) _solve(b, j);
for(j = 436230; j < 436240; j++) _solve(b, j);
for(j = 437070; j < 437080; j++) _solve(b, j);
for(j = 437910; j < 437920; j++) _solve(b, j);
for(j = 438750; j < 438760; j++) _solve(b, j);
for(j = 439590; j < 439600; j++) _solve(b, j);
for(j = 440430; j < 440440; j++) _solve(b, j);
for(j = 441270; j < 441280; j++) _solve(b, j);
for(j = 442110; j < 442120; j++) _solve(b, j);
for(j = 442950; j < 442960; j++) _solve(b, j);
for(j = 443790; j < 443800; j++) _solve(b, j);
for(j = 444630; j < 444640; j++) _solve(b, j);
for(j = 445470; j < 445480; j++) _solve(b, j);
for(j = 446310; j < 446320; j++) _solve(b, j);
for(j = 447150; j < 447160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 447990; j < 448000; j++) _solve(b, j);
for(j = 448830; j < 448840; j++) _solve(b, j);
for(j = 449670; j < 449680; j++) _solve(b, j);
for(j = 450510; j < 450520; j++) _solve(b, j);
for(j = 451350; j < 451360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 381640; j < 381650; j++) _solve(b, j);
for(j = 382480; j < 382490; j++) _solve(b, j);
for(j = 383320; j < 383330; j++) _solve(b, j);
for(j = 384160; j < 384170; j++) _solve(b, j);
for(j = 385000; j < 385010; j++) _solve(b, j);
for(j = 385840; j < 385850; j++) _solve(b, j);
for(j = 386680; j < 386690; j++) _solve(b, j);
for(j = 387520; j < 387530; j++) _solve(b, j);
for(j = 388360; j < 388370; j++) _solve(b, j);
for(j = 389200; j < 389210; j++) _solve(b, j);
for(j = 390040; j < 390050; j++) _solve(b, j);
for(j = 390880; j < 390890; j++) _solve(b, j);
for(j = 391720; j < 391730; j++) _solve(b, j);
for(j = 392560; j < 392570; j++) _solve(b, j);
for(j = 393400; j < 393410; j++) _solve(b, j);
for(j = 394240; j < 394250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 395080; j < 395090; j++) _solve(b, j);
for(j = 395920; j < 395930; j++) _solve(b, j);
for(j = 396760; j < 396770; j++) _solve(b, j);
for(j = 397600; j < 397610; j++) _solve(b, j);
for(j = 398440; j < 398450; j++) _solve(b, j);
for(j = 399280; j < 399290; j++) _solve(b, j);
for(j = 400120; j < 400130; j++) _solve(b, j);
for(j = 400960; j < 400970; j++) _solve(b, j);
for(j = 401800; j < 401810; j++) _solve(b, j);
for(j = 402640; j < 402650; j++) _solve(b, j);
for(j = 403480; j < 403490; j++) _solve(b, j);
for(j = 404320; j < 404330; j++) _solve(b, j);
for(j = 405160; j < 405170; j++) _solve(b, j);
for(j = 406000; j < 406010; j++) _solve(b, j);
for(j = 406840; j < 406850; j++) _solve(b, j);
for(j = 407680; j < 407690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 408520; j < 408530; j++) _solve(b, j);
for(j = 409360; j < 409370; j++) _solve(b, j);
for(j = 410200; j < 410210; j++) _solve(b, j);
for(j = 411040; j < 411050; j++) _solve(b, j);
for(j = 411880; j < 411890; j++) _solve(b, j);
for(j = 412720; j < 412730; j++) _solve(b, j);
for(j = 413560; j < 413570; j++) _solve(b, j);
for(j = 414400; j < 414410; j++) _solve(b, j);
for(j = 415240; j < 415250; j++) _solve(b, j);
for(j = 416080; j < 416090; j++) _solve(b, j);
for(j = 416920; j < 416930; j++) _solve(b, j);
for(j = 417760; j < 417770; j++) _solve(b, j);
for(j = 418600; j < 418610; j++) _solve(b, j);
for(j = 419440; j < 419450; j++) _solve(b, j);
for(j = 420280; j < 420290; j++) _solve(b, j);
for(j = 421120; j < 421130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 421960; j < 421970; j++) _solve(b, j);
for(j = 422800; j < 422810; j++) _solve(b, j);
for(j = 423640; j < 423650; j++) _solve(b, j);
for(j = 424480; j < 424490; j++) _solve(b, j);
for(j = 425320; j < 425330; j++) _solve(b, j);
for(j = 426160; j < 426170; j++) _solve(b, j);
for(j = 427000; j < 427010; j++) _solve(b, j);
for(j = 427840; j < 427850; j++) _solve(b, j);
for(j = 428680; j < 428690; j++) _solve(b, j);
for(j = 429520; j < 429530; j++) _solve(b, j);
for(j = 430360; j < 430370; j++) _solve(b, j);
for(j = 431200; j < 431210; j++) _solve(b, j);
for(j = 432040; j < 432050; j++) _solve(b, j);
for(j = 432880; j < 432890; j++) _solve(b, j);
for(j = 433720; j < 433730; j++) _solve(b, j);
for(j = 434560; j < 434570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 435400; j < 435410; j++) _solve(b, j);
for(j = 436240; j < 436250; j++) _solve(b, j);
for(j = 437080; j < 437090; j++) _solve(b, j);
for(j = 437920; j < 437930; j++) _solve(b, j);
for(j = 438760; j < 438770; j++) _solve(b, j);
for(j = 439600; j < 439610; j++) _solve(b, j);
for(j = 440440; j < 440450; j++) _solve(b, j);
for(j = 441280; j < 441290; j++) _solve(b, j);
for(j = 442120; j < 442130; j++) _solve(b, j);
for(j = 442960; j < 442970; j++) _solve(b, j);
for(j = 443800; j < 443810; j++) _solve(b, j);
for(j = 444640; j < 444650; j++) _solve(b, j);
for(j = 445480; j < 445490; j++) _solve(b, j);
for(j = 446320; j < 446330; j++) _solve(b, j);
for(j = 447160; j < 447170; j++) _solve(b, j);
for(j = 448000; j < 448010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 448840; j < 448850; j++) _solve(b, j);
for(j = 449680; j < 449690; j++) _solve(b, j);
for(j = 450520; j < 450530; j++) _solve(b, j);
for(j = 451360; j < 451370; j++) _solve(b, j);
for(j = 452200; j < 452210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 382490; j < 382500; j++) _solve(b, j);
for(j = 383330; j < 383340; j++) _solve(b, j);
for(j = 384170; j < 384180; j++) _solve(b, j);
for(j = 385010; j < 385020; j++) _solve(b, j);
for(j = 385850; j < 385860; j++) _solve(b, j);
for(j = 386690; j < 386700; j++) _solve(b, j);
for(j = 387530; j < 387540; j++) _solve(b, j);
for(j = 388370; j < 388380; j++) _solve(b, j);
for(j = 389210; j < 389220; j++) _solve(b, j);
for(j = 390050; j < 390060; j++) _solve(b, j);
for(j = 390890; j < 390900; j++) _solve(b, j);
for(j = 391730; j < 391740; j++) _solve(b, j);
for(j = 392570; j < 392580; j++) _solve(b, j);
for(j = 393410; j < 393420; j++) _solve(b, j);
for(j = 394250; j < 394260; j++) _solve(b, j);
for(j = 395090; j < 395100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 395930; j < 395940; j++) _solve(b, j);
for(j = 396770; j < 396780; j++) _solve(b, j);
for(j = 397610; j < 397620; j++) _solve(b, j);
for(j = 398450; j < 398460; j++) _solve(b, j);
for(j = 399290; j < 399300; j++) _solve(b, j);
for(j = 400130; j < 400140; j++) _solve(b, j);
for(j = 400970; j < 400980; j++) _solve(b, j);
for(j = 401810; j < 401820; j++) _solve(b, j);
for(j = 402650; j < 402660; j++) _solve(b, j);
for(j = 403490; j < 403500; j++) _solve(b, j);
for(j = 404330; j < 404340; j++) _solve(b, j);
for(j = 405170; j < 405180; j++) _solve(b, j);
for(j = 406010; j < 406020; j++) _solve(b, j);
for(j = 406850; j < 406860; j++) _solve(b, j);
for(j = 407690; j < 407700; j++) _solve(b, j);
for(j = 408530; j < 408540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 409370; j < 409380; j++) _solve(b, j);
for(j = 410210; j < 410220; j++) _solve(b, j);
for(j = 411050; j < 411060; j++) _solve(b, j);
for(j = 411890; j < 411900; j++) _solve(b, j);
for(j = 412730; j < 412740; j++) _solve(b, j);
for(j = 413570; j < 413580; j++) _solve(b, j);
for(j = 414410; j < 414420; j++) _solve(b, j);
for(j = 415250; j < 415260; j++) _solve(b, j);
for(j = 416090; j < 416100; j++) _solve(b, j);
for(j = 416930; j < 416940; j++) _solve(b, j);
for(j = 417770; j < 417780; j++) _solve(b, j);
for(j = 418610; j < 418620; j++) _solve(b, j);
for(j = 419450; j < 419460; j++) _solve(b, j);
for(j = 420290; j < 420300; j++) _solve(b, j);
for(j = 421130; j < 421140; j++) _solve(b, j);
for(j = 421970; j < 421980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 422810; j < 422820; j++) _solve(b, j);
for(j = 423650; j < 423660; j++) _solve(b, j);
for(j = 424490; j < 424500; j++) _solve(b, j);
for(j = 425330; j < 425340; j++) _solve(b, j);
for(j = 426170; j < 426180; j++) _solve(b, j);
for(j = 427010; j < 427020; j++) _solve(b, j);
for(j = 427850; j < 427860; j++) _solve(b, j);
for(j = 428690; j < 428700; j++) _solve(b, j);
for(j = 429530; j < 429540; j++) _solve(b, j);
for(j = 430370; j < 430380; j++) _solve(b, j);
for(j = 431210; j < 431220; j++) _solve(b, j);
for(j = 432050; j < 432060; j++) _solve(b, j);
for(j = 432890; j < 432900; j++) _solve(b, j);
for(j = 433730; j < 433740; j++) _solve(b, j);
for(j = 434570; j < 434580; j++) _solve(b, j);
for(j = 435410; j < 435420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 436250; j < 436260; j++) _solve(b, j);
for(j = 437090; j < 437100; j++) _solve(b, j);
for(j = 437930; j < 437940; j++) _solve(b, j);
for(j = 438770; j < 438780; j++) _solve(b, j);
for(j = 439610; j < 439620; j++) _solve(b, j);
for(j = 440450; j < 440460; j++) _solve(b, j);
for(j = 441290; j < 441300; j++) _solve(b, j);
for(j = 442130; j < 442140; j++) _solve(b, j);
for(j = 442970; j < 442980; j++) _solve(b, j);
for(j = 443810; j < 443820; j++) _solve(b, j);
for(j = 444650; j < 444660; j++) _solve(b, j);
for(j = 445490; j < 445500; j++) _solve(b, j);
for(j = 446330; j < 446340; j++) _solve(b, j);
for(j = 447170; j < 447180; j++) _solve(b, j);
for(j = 448010; j < 448020; j++) _solve(b, j);
for(j = 448850; j < 448860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 449690; j < 449700; j++) _solve(b, j);
for(j = 450530; j < 450540; j++) _solve(b, j);
for(j = 451370; j < 451380; j++) _solve(b, j);
for(j = 452210; j < 452220; j++) _solve(b, j);
for(j = 453050; j < 453060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 383340; j < 383350; j++) _solve(b, j);
for(j = 384180; j < 384190; j++) _solve(b, j);
for(j = 385020; j < 385030; j++) _solve(b, j);
for(j = 385860; j < 385870; j++) _solve(b, j);
for(j = 386700; j < 386710; j++) _solve(b, j);
for(j = 387540; j < 387550; j++) _solve(b, j);
for(j = 388380; j < 388390; j++) _solve(b, j);
for(j = 389220; j < 389230; j++) _solve(b, j);
for(j = 390060; j < 390070; j++) _solve(b, j);
for(j = 390900; j < 390910; j++) _solve(b, j);
for(j = 391740; j < 391750; j++) _solve(b, j);
for(j = 392580; j < 392590; j++) _solve(b, j);
for(j = 393420; j < 393430; j++) _solve(b, j);
for(j = 394260; j < 394270; j++) _solve(b, j);
for(j = 395100; j < 395110; j++) _solve(b, j);
for(j = 395940; j < 395950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 396780; j < 396790; j++) _solve(b, j);
for(j = 397620; j < 397630; j++) _solve(b, j);
for(j = 398460; j < 398470; j++) _solve(b, j);
for(j = 399300; j < 399310; j++) _solve(b, j);
for(j = 400140; j < 400150; j++) _solve(b, j);
for(j = 400980; j < 400990; j++) _solve(b, j);
for(j = 401820; j < 401830; j++) _solve(b, j);
for(j = 402660; j < 402670; j++) _solve(b, j);
for(j = 403500; j < 403510; j++) _solve(b, j);
for(j = 404340; j < 404350; j++) _solve(b, j);
for(j = 405180; j < 405190; j++) _solve(b, j);
for(j = 406020; j < 406030; j++) _solve(b, j);
for(j = 406860; j < 406870; j++) _solve(b, j);
for(j = 407700; j < 407710; j++) _solve(b, j);
for(j = 408540; j < 408550; j++) _solve(b, j);
for(j = 409380; j < 409390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 410220; j < 410230; j++) _solve(b, j);
for(j = 411060; j < 411070; j++) _solve(b, j);
for(j = 411900; j < 411910; j++) _solve(b, j);
for(j = 412740; j < 412750; j++) _solve(b, j);
for(j = 413580; j < 413590; j++) _solve(b, j);
for(j = 414420; j < 414430; j++) _solve(b, j);
for(j = 415260; j < 415270; j++) _solve(b, j);
for(j = 416100; j < 416110; j++) _solve(b, j);
for(j = 416940; j < 416950; j++) _solve(b, j);
for(j = 417780; j < 417790; j++) _solve(b, j);
for(j = 418620; j < 418630; j++) _solve(b, j);
for(j = 419460; j < 419470; j++) _solve(b, j);
for(j = 420300; j < 420310; j++) _solve(b, j);
for(j = 421140; j < 421150; j++) _solve(b, j);
for(j = 421980; j < 421990; j++) _solve(b, j);
for(j = 422820; j < 422830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 423660; j < 423670; j++) _solve(b, j);
for(j = 424500; j < 424510; j++) _solve(b, j);
for(j = 425340; j < 425350; j++) _solve(b, j);
for(j = 426180; j < 426190; j++) _solve(b, j);
for(j = 427020; j < 427030; j++) _solve(b, j);
for(j = 427860; j < 427870; j++) _solve(b, j);
for(j = 428700; j < 428710; j++) _solve(b, j);
for(j = 429540; j < 429550; j++) _solve(b, j);
for(j = 430380; j < 430390; j++) _solve(b, j);
for(j = 431220; j < 431230; j++) _solve(b, j);
for(j = 432060; j < 432070; j++) _solve(b, j);
for(j = 432900; j < 432910; j++) _solve(b, j);
for(j = 433740; j < 433750; j++) _solve(b, j);
for(j = 434580; j < 434590; j++) _solve(b, j);
for(j = 435420; j < 435430; j++) _solve(b, j);
for(j = 436260; j < 436270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 437100; j < 437110; j++) _solve(b, j);
for(j = 437940; j < 437950; j++) _solve(b, j);
for(j = 438780; j < 438790; j++) _solve(b, j);
for(j = 439620; j < 439630; j++) _solve(b, j);
for(j = 440460; j < 440470; j++) _solve(b, j);
for(j = 441300; j < 441310; j++) _solve(b, j);
for(j = 442140; j < 442150; j++) _solve(b, j);
for(j = 442980; j < 442990; j++) _solve(b, j);
for(j = 443820; j < 443830; j++) _solve(b, j);
for(j = 444660; j < 444670; j++) _solve(b, j);
for(j = 445500; j < 445510; j++) _solve(b, j);
for(j = 446340; j < 446350; j++) _solve(b, j);
for(j = 447180; j < 447190; j++) _solve(b, j);
for(j = 448020; j < 448030; j++) _solve(b, j);
for(j = 448860; j < 448870; j++) _solve(b, j);
for(j = 449700; j < 449710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 450540; j < 450550; j++) _solve(b, j);
for(j = 451380; j < 451390; j++) _solve(b, j);
for(j = 452220; j < 452230; j++) _solve(b, j);
for(j = 453060; j < 453070; j++) _solve(b, j);
for(j = 453900; j < 453910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 384190; j < 384200; j++) _solve(b, j);
for(j = 385030; j < 385040; j++) _solve(b, j);
for(j = 385870; j < 385880; j++) _solve(b, j);
for(j = 386710; j < 386720; j++) _solve(b, j);
for(j = 387550; j < 387560; j++) _solve(b, j);
for(j = 388390; j < 388400; j++) _solve(b, j);
for(j = 389230; j < 389240; j++) _solve(b, j);
for(j = 390070; j < 390080; j++) _solve(b, j);
for(j = 390910; j < 390920; j++) _solve(b, j);
for(j = 391750; j < 391760; j++) _solve(b, j);
for(j = 392590; j < 392600; j++) _solve(b, j);
for(j = 393430; j < 393440; j++) _solve(b, j);
for(j = 394270; j < 394280; j++) _solve(b, j);
for(j = 395110; j < 395120; j++) _solve(b, j);
for(j = 395950; j < 395960; j++) _solve(b, j);
for(j = 396790; j < 396800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 397630; j < 397640; j++) _solve(b, j);
for(j = 398470; j < 398480; j++) _solve(b, j);
for(j = 399310; j < 399320; j++) _solve(b, j);
for(j = 400150; j < 400160; j++) _solve(b, j);
for(j = 400990; j < 401000; j++) _solve(b, j);
for(j = 401830; j < 401840; j++) _solve(b, j);
for(j = 402670; j < 402680; j++) _solve(b, j);
for(j = 403510; j < 403520; j++) _solve(b, j);
for(j = 404350; j < 404360; j++) _solve(b, j);
for(j = 405190; j < 405200; j++) _solve(b, j);
for(j = 406030; j < 406040; j++) _solve(b, j);
for(j = 406870; j < 406880; j++) _solve(b, j);
for(j = 407710; j < 407720; j++) _solve(b, j);
for(j = 408550; j < 408560; j++) _solve(b, j);
for(j = 409390; j < 409400; j++) _solve(b, j);
for(j = 410230; j < 410240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 411070; j < 411080; j++) _solve(b, j);
for(j = 411910; j < 411920; j++) _solve(b, j);
for(j = 412750; j < 412760; j++) _solve(b, j);
for(j = 413590; j < 413600; j++) _solve(b, j);
for(j = 414430; j < 414440; j++) _solve(b, j);
for(j = 415270; j < 415280; j++) _solve(b, j);
for(j = 416110; j < 416120; j++) _solve(b, j);
for(j = 416950; j < 416960; j++) _solve(b, j);
for(j = 417790; j < 417800; j++) _solve(b, j);
for(j = 418630; j < 418640; j++) _solve(b, j);
for(j = 419470; j < 419480; j++) _solve(b, j);
for(j = 420310; j < 420320; j++) _solve(b, j);
for(j = 421150; j < 421160; j++) _solve(b, j);
for(j = 421990; j < 422000; j++) _solve(b, j);
for(j = 422830; j < 422840; j++) _solve(b, j);
for(j = 423670; j < 423680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 424510; j < 424520; j++) _solve(b, j);
for(j = 425350; j < 425360; j++) _solve(b, j);
for(j = 426190; j < 426200; j++) _solve(b, j);
for(j = 427030; j < 427040; j++) _solve(b, j);
for(j = 427870; j < 427880; j++) _solve(b, j);
for(j = 428710; j < 428720; j++) _solve(b, j);
for(j = 429550; j < 429560; j++) _solve(b, j);
for(j = 430390; j < 430400; j++) _solve(b, j);
for(j = 431230; j < 431240; j++) _solve(b, j);
for(j = 432070; j < 432080; j++) _solve(b, j);
for(j = 432910; j < 432920; j++) _solve(b, j);
for(j = 433750; j < 433760; j++) _solve(b, j);
for(j = 434590; j < 434600; j++) _solve(b, j);
for(j = 435430; j < 435440; j++) _solve(b, j);
for(j = 436270; j < 436280; j++) _solve(b, j);
for(j = 437110; j < 437120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 437950; j < 437960; j++) _solve(b, j);
for(j = 438790; j < 438800; j++) _solve(b, j);
for(j = 439630; j < 439640; j++) _solve(b, j);
for(j = 440470; j < 440480; j++) _solve(b, j);
for(j = 441310; j < 441320; j++) _solve(b, j);
for(j = 442150; j < 442160; j++) _solve(b, j);
for(j = 442990; j < 443000; j++) _solve(b, j);
for(j = 443830; j < 443840; j++) _solve(b, j);
for(j = 444670; j < 444680; j++) _solve(b, j);
for(j = 445510; j < 445520; j++) _solve(b, j);
for(j = 446350; j < 446360; j++) _solve(b, j);
for(j = 447190; j < 447200; j++) _solve(b, j);
for(j = 448030; j < 448040; j++) _solve(b, j);
for(j = 448870; j < 448880; j++) _solve(b, j);
for(j = 449710; j < 449720; j++) _solve(b, j);
for(j = 450550; j < 450560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 451390; j < 451400; j++) _solve(b, j);
for(j = 452230; j < 452240; j++) _solve(b, j);
for(j = 453070; j < 453080; j++) _solve(b, j);
for(j = 453910; j < 453920; j++) _solve(b, j);
for(j = 454750; j < 454760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 385040; j < 385050; j++) _solve(b, j);
for(j = 385880; j < 385890; j++) _solve(b, j);
for(j = 386720; j < 386730; j++) _solve(b, j);
for(j = 387560; j < 387570; j++) _solve(b, j);
for(j = 388400; j < 388410; j++) _solve(b, j);
for(j = 389240; j < 389250; j++) _solve(b, j);
for(j = 390080; j < 390090; j++) _solve(b, j);
for(j = 390920; j < 390930; j++) _solve(b, j);
for(j = 391760; j < 391770; j++) _solve(b, j);
for(j = 392600; j < 392610; j++) _solve(b, j);
for(j = 393440; j < 393450; j++) _solve(b, j);
for(j = 394280; j < 394290; j++) _solve(b, j);
for(j = 395120; j < 395130; j++) _solve(b, j);
for(j = 395960; j < 395970; j++) _solve(b, j);
for(j = 396800; j < 396810; j++) _solve(b, j);
for(j = 397640; j < 397650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 398480; j < 398490; j++) _solve(b, j);
for(j = 399320; j < 399330; j++) _solve(b, j);
for(j = 400160; j < 400170; j++) _solve(b, j);
for(j = 401000; j < 401010; j++) _solve(b, j);
for(j = 401840; j < 401850; j++) _solve(b, j);
for(j = 402680; j < 402690; j++) _solve(b, j);
for(j = 403520; j < 403530; j++) _solve(b, j);
for(j = 404360; j < 404370; j++) _solve(b, j);
for(j = 405200; j < 405210; j++) _solve(b, j);
for(j = 406040; j < 406050; j++) _solve(b, j);
for(j = 406880; j < 406890; j++) _solve(b, j);
for(j = 407720; j < 407730; j++) _solve(b, j);
for(j = 408560; j < 408570; j++) _solve(b, j);
for(j = 409400; j < 409410; j++) _solve(b, j);
for(j = 410240; j < 410250; j++) _solve(b, j);
for(j = 411080; j < 411090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 411920; j < 411930; j++) _solve(b, j);
for(j = 412760; j < 412770; j++) _solve(b, j);
for(j = 413600; j < 413610; j++) _solve(b, j);
for(j = 414440; j < 414450; j++) _solve(b, j);
for(j = 415280; j < 415290; j++) _solve(b, j);
for(j = 416120; j < 416130; j++) _solve(b, j);
for(j = 416960; j < 416970; j++) _solve(b, j);
for(j = 417800; j < 417810; j++) _solve(b, j);
for(j = 418640; j < 418650; j++) _solve(b, j);
for(j = 419480; j < 419490; j++) _solve(b, j);
for(j = 420320; j < 420330; j++) _solve(b, j);
for(j = 421160; j < 421170; j++) _solve(b, j);
for(j = 422000; j < 422010; j++) _solve(b, j);
for(j = 422840; j < 422850; j++) _solve(b, j);
for(j = 423680; j < 423690; j++) _solve(b, j);
for(j = 424520; j < 424530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 425360; j < 425370; j++) _solve(b, j);
for(j = 426200; j < 426210; j++) _solve(b, j);
for(j = 427040; j < 427050; j++) _solve(b, j);
for(j = 427880; j < 427890; j++) _solve(b, j);
for(j = 428720; j < 428730; j++) _solve(b, j);
for(j = 429560; j < 429570; j++) _solve(b, j);
for(j = 430400; j < 430410; j++) _solve(b, j);
for(j = 431240; j < 431250; j++) _solve(b, j);
for(j = 432080; j < 432090; j++) _solve(b, j);
for(j = 432920; j < 432930; j++) _solve(b, j);
for(j = 433760; j < 433770; j++) _solve(b, j);
for(j = 434600; j < 434610; j++) _solve(b, j);
for(j = 435440; j < 435450; j++) _solve(b, j);
for(j = 436280; j < 436290; j++) _solve(b, j);
for(j = 437120; j < 437130; j++) _solve(b, j);
for(j = 437960; j < 437970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 438800; j < 438810; j++) _solve(b, j);
for(j = 439640; j < 439650; j++) _solve(b, j);
for(j = 440480; j < 440490; j++) _solve(b, j);
for(j = 441320; j < 441330; j++) _solve(b, j);
for(j = 442160; j < 442170; j++) _solve(b, j);
for(j = 443000; j < 443010; j++) _solve(b, j);
for(j = 443840; j < 443850; j++) _solve(b, j);
for(j = 444680; j < 444690; j++) _solve(b, j);
for(j = 445520; j < 445530; j++) _solve(b, j);
for(j = 446360; j < 446370; j++) _solve(b, j);
for(j = 447200; j < 447210; j++) _solve(b, j);
for(j = 448040; j < 448050; j++) _solve(b, j);
for(j = 448880; j < 448890; j++) _solve(b, j);
for(j = 449720; j < 449730; j++) _solve(b, j);
for(j = 450560; j < 450570; j++) _solve(b, j);
for(j = 451400; j < 451410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 452240; j < 452250; j++) _solve(b, j);
for(j = 453080; j < 453090; j++) _solve(b, j);
for(j = 453920; j < 453930; j++) _solve(b, j);
for(j = 454760; j < 454770; j++) _solve(b, j);
for(j = 455600; j < 455610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 385890; j < 385900; j++) _solve(b, j);
for(j = 386730; j < 386740; j++) _solve(b, j);
for(j = 387570; j < 387580; j++) _solve(b, j);
for(j = 388410; j < 388420; j++) _solve(b, j);
for(j = 389250; j < 389260; j++) _solve(b, j);
for(j = 390090; j < 390100; j++) _solve(b, j);
for(j = 390930; j < 390940; j++) _solve(b, j);
for(j = 391770; j < 391780; j++) _solve(b, j);
for(j = 392610; j < 392620; j++) _solve(b, j);
for(j = 393450; j < 393460; j++) _solve(b, j);
for(j = 394290; j < 394300; j++) _solve(b, j);
for(j = 395130; j < 395140; j++) _solve(b, j);
for(j = 395970; j < 395980; j++) _solve(b, j);
for(j = 396810; j < 396820; j++) _solve(b, j);
for(j = 397650; j < 397660; j++) _solve(b, j);
for(j = 398490; j < 398500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 399330; j < 399340; j++) _solve(b, j);
for(j = 400170; j < 400180; j++) _solve(b, j);
for(j = 401010; j < 401020; j++) _solve(b, j);
for(j = 401850; j < 401860; j++) _solve(b, j);
for(j = 402690; j < 402700; j++) _solve(b, j);
for(j = 403530; j < 403540; j++) _solve(b, j);
for(j = 404370; j < 404380; j++) _solve(b, j);
for(j = 405210; j < 405220; j++) _solve(b, j);
for(j = 406050; j < 406060; j++) _solve(b, j);
for(j = 406890; j < 406900; j++) _solve(b, j);
for(j = 407730; j < 407740; j++) _solve(b, j);
for(j = 408570; j < 408580; j++) _solve(b, j);
for(j = 409410; j < 409420; j++) _solve(b, j);
for(j = 410250; j < 410260; j++) _solve(b, j);
for(j = 411090; j < 411100; j++) _solve(b, j);
for(j = 411930; j < 411940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 412770; j < 412780; j++) _solve(b, j);
for(j = 413610; j < 413620; j++) _solve(b, j);
for(j = 414450; j < 414460; j++) _solve(b, j);
for(j = 415290; j < 415300; j++) _solve(b, j);
for(j = 416130; j < 416140; j++) _solve(b, j);
for(j = 416970; j < 416980; j++) _solve(b, j);
for(j = 417810; j < 417820; j++) _solve(b, j);
for(j = 418650; j < 418660; j++) _solve(b, j);
for(j = 419490; j < 419500; j++) _solve(b, j);
for(j = 420330; j < 420340; j++) _solve(b, j);
for(j = 421170; j < 421180; j++) _solve(b, j);
for(j = 422010; j < 422020; j++) _solve(b, j);
for(j = 422850; j < 422860; j++) _solve(b, j);
for(j = 423690; j < 423700; j++) _solve(b, j);
for(j = 424530; j < 424540; j++) _solve(b, j);
for(j = 425370; j < 425380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 426210; j < 426220; j++) _solve(b, j);
for(j = 427050; j < 427060; j++) _solve(b, j);
for(j = 427890; j < 427900; j++) _solve(b, j);
for(j = 428730; j < 428740; j++) _solve(b, j);
for(j = 429570; j < 429580; j++) _solve(b, j);
for(j = 430410; j < 430420; j++) _solve(b, j);
for(j = 431250; j < 431260; j++) _solve(b, j);
for(j = 432090; j < 432100; j++) _solve(b, j);
for(j = 432930; j < 432940; j++) _solve(b, j);
for(j = 433770; j < 433780; j++) _solve(b, j);
for(j = 434610; j < 434620; j++) _solve(b, j);
for(j = 435450; j < 435460; j++) _solve(b, j);
for(j = 436290; j < 436300; j++) _solve(b, j);
for(j = 437130; j < 437140; j++) _solve(b, j);
for(j = 437970; j < 437980; j++) _solve(b, j);
for(j = 438810; j < 438820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 439650; j < 439660; j++) _solve(b, j);
for(j = 440490; j < 440500; j++) _solve(b, j);
for(j = 441330; j < 441340; j++) _solve(b, j);
for(j = 442170; j < 442180; j++) _solve(b, j);
for(j = 443010; j < 443020; j++) _solve(b, j);
for(j = 443850; j < 443860; j++) _solve(b, j);
for(j = 444690; j < 444700; j++) _solve(b, j);
for(j = 445530; j < 445540; j++) _solve(b, j);
for(j = 446370; j < 446380; j++) _solve(b, j);
for(j = 447210; j < 447220; j++) _solve(b, j);
for(j = 448050; j < 448060; j++) _solve(b, j);
for(j = 448890; j < 448900; j++) _solve(b, j);
for(j = 449730; j < 449740; j++) _solve(b, j);
for(j = 450570; j < 450580; j++) _solve(b, j);
for(j = 451410; j < 451420; j++) _solve(b, j);
for(j = 452250; j < 452260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 453090; j < 453100; j++) _solve(b, j);
for(j = 453930; j < 453940; j++) _solve(b, j);
for(j = 454770; j < 454780; j++) _solve(b, j);
for(j = 455610; j < 455620; j++) _solve(b, j);
for(j = 456450; j < 456460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 386740; j < 386750; j++) _solve(b, j);
for(j = 387580; j < 387590; j++) _solve(b, j);
for(j = 388420; j < 388430; j++) _solve(b, j);
for(j = 389260; j < 389270; j++) _solve(b, j);
for(j = 390100; j < 390110; j++) _solve(b, j);
for(j = 390940; j < 390950; j++) _solve(b, j);
for(j = 391780; j < 391790; j++) _solve(b, j);
for(j = 392620; j < 392630; j++) _solve(b, j);
for(j = 393460; j < 393470; j++) _solve(b, j);
for(j = 394300; j < 394310; j++) _solve(b, j);
for(j = 395140; j < 395150; j++) _solve(b, j);
for(j = 395980; j < 395990; j++) _solve(b, j);
for(j = 396820; j < 396830; j++) _solve(b, j);
for(j = 397660; j < 397670; j++) _solve(b, j);
for(j = 398500; j < 398510; j++) _solve(b, j);
for(j = 399340; j < 399350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 400180; j < 400190; j++) _solve(b, j);
for(j = 401020; j < 401030; j++) _solve(b, j);
for(j = 401860; j < 401870; j++) _solve(b, j);
for(j = 402700; j < 402710; j++) _solve(b, j);
for(j = 403540; j < 403550; j++) _solve(b, j);
for(j = 404380; j < 404390; j++) _solve(b, j);
for(j = 405220; j < 405230; j++) _solve(b, j);
for(j = 406060; j < 406070; j++) _solve(b, j);
for(j = 406900; j < 406910; j++) _solve(b, j);
for(j = 407740; j < 407750; j++) _solve(b, j);
for(j = 408580; j < 408590; j++) _solve(b, j);
for(j = 409420; j < 409430; j++) _solve(b, j);
for(j = 410260; j < 410270; j++) _solve(b, j);
for(j = 411100; j < 411110; j++) _solve(b, j);
for(j = 411940; j < 411950; j++) _solve(b, j);
for(j = 412780; j < 412790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 413620; j < 413630; j++) _solve(b, j);
for(j = 414460; j < 414470; j++) _solve(b, j);
for(j = 415300; j < 415310; j++) _solve(b, j);
for(j = 416140; j < 416150; j++) _solve(b, j);
for(j = 416980; j < 416990; j++) _solve(b, j);
for(j = 417820; j < 417830; j++) _solve(b, j);
for(j = 418660; j < 418670; j++) _solve(b, j);
for(j = 419500; j < 419510; j++) _solve(b, j);
for(j = 420340; j < 420350; j++) _solve(b, j);
for(j = 421180; j < 421190; j++) _solve(b, j);
for(j = 422020; j < 422030; j++) _solve(b, j);
for(j = 422860; j < 422870; j++) _solve(b, j);
for(j = 423700; j < 423710; j++) _solve(b, j);
for(j = 424540; j < 424550; j++) _solve(b, j);
for(j = 425380; j < 425390; j++) _solve(b, j);
for(j = 426220; j < 426230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 427060; j < 427070; j++) _solve(b, j);
for(j = 427900; j < 427910; j++) _solve(b, j);
for(j = 428740; j < 428750; j++) _solve(b, j);
for(j = 429580; j < 429590; j++) _solve(b, j);
for(j = 430420; j < 430430; j++) _solve(b, j);
for(j = 431260; j < 431270; j++) _solve(b, j);
for(j = 432100; j < 432110; j++) _solve(b, j);
for(j = 432940; j < 432950; j++) _solve(b, j);
for(j = 433780; j < 433790; j++) _solve(b, j);
for(j = 434620; j < 434630; j++) _solve(b, j);
for(j = 435460; j < 435470; j++) _solve(b, j);
for(j = 436300; j < 436310; j++) _solve(b, j);
for(j = 437140; j < 437150; j++) _solve(b, j);
for(j = 437980; j < 437990; j++) _solve(b, j);
for(j = 438820; j < 438830; j++) _solve(b, j);
for(j = 439660; j < 439670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 440500; j < 440510; j++) _solve(b, j);
for(j = 441340; j < 441350; j++) _solve(b, j);
for(j = 442180; j < 442190; j++) _solve(b, j);
for(j = 443020; j < 443030; j++) _solve(b, j);
for(j = 443860; j < 443870; j++) _solve(b, j);
for(j = 444700; j < 444710; j++) _solve(b, j);
for(j = 445540; j < 445550; j++) _solve(b, j);
for(j = 446380; j < 446390; j++) _solve(b, j);
for(j = 447220; j < 447230; j++) _solve(b, j);
for(j = 448060; j < 448070; j++) _solve(b, j);
for(j = 448900; j < 448910; j++) _solve(b, j);
for(j = 449740; j < 449750; j++) _solve(b, j);
for(j = 450580; j < 450590; j++) _solve(b, j);
for(j = 451420; j < 451430; j++) _solve(b, j);
for(j = 452260; j < 452270; j++) _solve(b, j);
for(j = 453100; j < 453110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 453940; j < 453950; j++) _solve(b, j);
for(j = 454780; j < 454790; j++) _solve(b, j);
for(j = 455620; j < 455630; j++) _solve(b, j);
for(j = 456460; j < 456470; j++) _solve(b, j);
for(j = 457300; j < 457310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 387590; j < 387600; j++) _solve(b, j);
for(j = 388430; j < 388440; j++) _solve(b, j);
for(j = 389270; j < 389280; j++) _solve(b, j);
for(j = 390110; j < 390120; j++) _solve(b, j);
for(j = 390950; j < 390960; j++) _solve(b, j);
for(j = 391790; j < 391800; j++) _solve(b, j);
for(j = 392630; j < 392640; j++) _solve(b, j);
for(j = 393470; j < 393480; j++) _solve(b, j);
for(j = 394310; j < 394320; j++) _solve(b, j);
for(j = 395150; j < 395160; j++) _solve(b, j);
for(j = 395990; j < 396000; j++) _solve(b, j);
for(j = 396830; j < 396840; j++) _solve(b, j);
for(j = 397670; j < 397680; j++) _solve(b, j);
for(j = 398510; j < 398520; j++) _solve(b, j);
for(j = 399350; j < 399360; j++) _solve(b, j);
for(j = 400190; j < 400200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 401030; j < 401040; j++) _solve(b, j);
for(j = 401870; j < 401880; j++) _solve(b, j);
for(j = 402710; j < 402720; j++) _solve(b, j);
for(j = 403550; j < 403560; j++) _solve(b, j);
for(j = 404390; j < 404400; j++) _solve(b, j);
for(j = 405230; j < 405240; j++) _solve(b, j);
for(j = 406070; j < 406080; j++) _solve(b, j);
for(j = 406910; j < 406920; j++) _solve(b, j);
for(j = 407750; j < 407760; j++) _solve(b, j);
for(j = 408590; j < 408600; j++) _solve(b, j);
for(j = 409430; j < 409440; j++) _solve(b, j);
for(j = 410270; j < 410280; j++) _solve(b, j);
for(j = 411110; j < 411120; j++) _solve(b, j);
for(j = 411950; j < 411960; j++) _solve(b, j);
for(j = 412790; j < 412800; j++) _solve(b, j);
for(j = 413630; j < 413640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 414470; j < 414480; j++) _solve(b, j);
for(j = 415310; j < 415320; j++) _solve(b, j);
for(j = 416150; j < 416160; j++) _solve(b, j);
for(j = 416990; j < 417000; j++) _solve(b, j);
for(j = 417830; j < 417840; j++) _solve(b, j);
for(j = 418670; j < 418680; j++) _solve(b, j);
for(j = 419510; j < 419520; j++) _solve(b, j);
for(j = 420350; j < 420360; j++) _solve(b, j);
for(j = 421190; j < 421200; j++) _solve(b, j);
for(j = 422030; j < 422040; j++) _solve(b, j);
for(j = 422870; j < 422880; j++) _solve(b, j);
for(j = 423710; j < 423720; j++) _solve(b, j);
for(j = 424550; j < 424560; j++) _solve(b, j);
for(j = 425390; j < 425400; j++) _solve(b, j);
for(j = 426230; j < 426240; j++) _solve(b, j);
for(j = 427070; j < 427080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 427910; j < 427920; j++) _solve(b, j);
for(j = 428750; j < 428760; j++) _solve(b, j);
for(j = 429590; j < 429600; j++) _solve(b, j);
for(j = 430430; j < 430440; j++) _solve(b, j);
for(j = 431270; j < 431280; j++) _solve(b, j);
for(j = 432110; j < 432120; j++) _solve(b, j);
for(j = 432950; j < 432960; j++) _solve(b, j);
for(j = 433790; j < 433800; j++) _solve(b, j);
for(j = 434630; j < 434640; j++) _solve(b, j);
for(j = 435470; j < 435480; j++) _solve(b, j);
for(j = 436310; j < 436320; j++) _solve(b, j);
for(j = 437150; j < 437160; j++) _solve(b, j);
for(j = 437990; j < 438000; j++) _solve(b, j);
for(j = 438830; j < 438840; j++) _solve(b, j);
for(j = 439670; j < 439680; j++) _solve(b, j);
for(j = 440510; j < 440520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 441350; j < 441360; j++) _solve(b, j);
for(j = 442190; j < 442200; j++) _solve(b, j);
for(j = 443030; j < 443040; j++) _solve(b, j);
for(j = 443870; j < 443880; j++) _solve(b, j);
for(j = 444710; j < 444720; j++) _solve(b, j);
for(j = 445550; j < 445560; j++) _solve(b, j);
for(j = 446390; j < 446400; j++) _solve(b, j);
for(j = 447230; j < 447240; j++) _solve(b, j);
for(j = 448070; j < 448080; j++) _solve(b, j);
for(j = 448910; j < 448920; j++) _solve(b, j);
for(j = 449750; j < 449760; j++) _solve(b, j);
for(j = 450590; j < 450600; j++) _solve(b, j);
for(j = 451430; j < 451440; j++) _solve(b, j);
for(j = 452270; j < 452280; j++) _solve(b, j);
for(j = 453110; j < 453120; j++) _solve(b, j);
for(j = 453950; j < 453960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 454790; j < 454800; j++) _solve(b, j);
for(j = 455630; j < 455640; j++) _solve(b, j);
for(j = 456470; j < 456480; j++) _solve(b, j);
for(j = 457310; j < 457320; j++) _solve(b, j);
for(j = 458150; j < 458160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 388440; j < 388450; j++) _solve(b, j);
for(j = 389280; j < 389290; j++) _solve(b, j);
for(j = 390120; j < 390130; j++) _solve(b, j);
for(j = 390960; j < 390970; j++) _solve(b, j);
for(j = 391800; j < 391810; j++) _solve(b, j);
for(j = 392640; j < 392650; j++) _solve(b, j);
for(j = 393480; j < 393490; j++) _solve(b, j);
for(j = 394320; j < 394330; j++) _solve(b, j);
for(j = 395160; j < 395170; j++) _solve(b, j);
for(j = 396000; j < 396010; j++) _solve(b, j);
for(j = 396840; j < 396850; j++) _solve(b, j);
for(j = 397680; j < 397690; j++) _solve(b, j);
for(j = 398520; j < 398530; j++) _solve(b, j);
for(j = 399360; j < 399370; j++) _solve(b, j);
for(j = 400200; j < 400210; j++) _solve(b, j);
for(j = 401040; j < 401050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 401880; j < 401890; j++) _solve(b, j);
for(j = 402720; j < 402730; j++) _solve(b, j);
for(j = 403560; j < 403570; j++) _solve(b, j);
for(j = 404400; j < 404410; j++) _solve(b, j);
for(j = 405240; j < 405250; j++) _solve(b, j);
for(j = 406080; j < 406090; j++) _solve(b, j);
for(j = 406920; j < 406930; j++) _solve(b, j);
for(j = 407760; j < 407770; j++) _solve(b, j);
for(j = 408600; j < 408610; j++) _solve(b, j);
for(j = 409440; j < 409450; j++) _solve(b, j);
for(j = 410280; j < 410290; j++) _solve(b, j);
for(j = 411120; j < 411130; j++) _solve(b, j);
for(j = 411960; j < 411970; j++) _solve(b, j);
for(j = 412800; j < 412810; j++) _solve(b, j);
for(j = 413640; j < 413650; j++) _solve(b, j);
for(j = 414480; j < 414490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 415320; j < 415330; j++) _solve(b, j);
for(j = 416160; j < 416170; j++) _solve(b, j);
for(j = 417000; j < 417010; j++) _solve(b, j);
for(j = 417840; j < 417850; j++) _solve(b, j);
for(j = 418680; j < 418690; j++) _solve(b, j);
for(j = 419520; j < 419530; j++) _solve(b, j);
for(j = 420360; j < 420370; j++) _solve(b, j);
for(j = 421200; j < 421210; j++) _solve(b, j);
for(j = 422040; j < 422050; j++) _solve(b, j);
for(j = 422880; j < 422890; j++) _solve(b, j);
for(j = 423720; j < 423730; j++) _solve(b, j);
for(j = 424560; j < 424570; j++) _solve(b, j);
for(j = 425400; j < 425410; j++) _solve(b, j);
for(j = 426240; j < 426250; j++) _solve(b, j);
for(j = 427080; j < 427090; j++) _solve(b, j);
for(j = 427920; j < 427930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 428760; j < 428770; j++) _solve(b, j);
for(j = 429600; j < 429610; j++) _solve(b, j);
for(j = 430440; j < 430450; j++) _solve(b, j);
for(j = 431280; j < 431290; j++) _solve(b, j);
for(j = 432120; j < 432130; j++) _solve(b, j);
for(j = 432960; j < 432970; j++) _solve(b, j);
for(j = 433800; j < 433810; j++) _solve(b, j);
for(j = 434640; j < 434650; j++) _solve(b, j);
for(j = 435480; j < 435490; j++) _solve(b, j);
for(j = 436320; j < 436330; j++) _solve(b, j);
for(j = 437160; j < 437170; j++) _solve(b, j);
for(j = 438000; j < 438010; j++) _solve(b, j);
for(j = 438840; j < 438850; j++) _solve(b, j);
for(j = 439680; j < 439690; j++) _solve(b, j);
for(j = 440520; j < 440530; j++) _solve(b, j);
for(j = 441360; j < 441370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 442200; j < 442210; j++) _solve(b, j);
for(j = 443040; j < 443050; j++) _solve(b, j);
for(j = 443880; j < 443890; j++) _solve(b, j);
for(j = 444720; j < 444730; j++) _solve(b, j);
for(j = 445560; j < 445570; j++) _solve(b, j);
for(j = 446400; j < 446410; j++) _solve(b, j);
for(j = 447240; j < 447250; j++) _solve(b, j);
for(j = 448080; j < 448090; j++) _solve(b, j);
for(j = 448920; j < 448930; j++) _solve(b, j);
for(j = 449760; j < 449770; j++) _solve(b, j);
for(j = 450600; j < 450610; j++) _solve(b, j);
for(j = 451440; j < 451450; j++) _solve(b, j);
for(j = 452280; j < 452290; j++) _solve(b, j);
for(j = 453120; j < 453130; j++) _solve(b, j);
for(j = 453960; j < 453970; j++) _solve(b, j);
for(j = 454800; j < 454810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 455640; j < 455650; j++) _solve(b, j);
for(j = 456480; j < 456490; j++) _solve(b, j);
for(j = 457320; j < 457330; j++) _solve(b, j);
for(j = 458160; j < 458170; j++) _solve(b, j);
for(j = 459000; j < 459010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 389290; j < 389300; j++) _solve(b, j);
for(j = 390130; j < 390140; j++) _solve(b, j);
for(j = 390970; j < 390980; j++) _solve(b, j);
for(j = 391810; j < 391820; j++) _solve(b, j);
for(j = 392650; j < 392660; j++) _solve(b, j);
for(j = 393490; j < 393500; j++) _solve(b, j);
for(j = 394330; j < 394340; j++) _solve(b, j);
for(j = 395170; j < 395180; j++) _solve(b, j);
for(j = 396010; j < 396020; j++) _solve(b, j);
for(j = 396850; j < 396860; j++) _solve(b, j);
for(j = 397690; j < 397700; j++) _solve(b, j);
for(j = 398530; j < 398540; j++) _solve(b, j);
for(j = 399370; j < 399380; j++) _solve(b, j);
for(j = 400210; j < 400220; j++) _solve(b, j);
for(j = 401050; j < 401060; j++) _solve(b, j);
for(j = 401890; j < 401900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 402730; j < 402740; j++) _solve(b, j);
for(j = 403570; j < 403580; j++) _solve(b, j);
for(j = 404410; j < 404420; j++) _solve(b, j);
for(j = 405250; j < 405260; j++) _solve(b, j);
for(j = 406090; j < 406100; j++) _solve(b, j);
for(j = 406930; j < 406940; j++) _solve(b, j);
for(j = 407770; j < 407780; j++) _solve(b, j);
for(j = 408610; j < 408620; j++) _solve(b, j);
for(j = 409450; j < 409460; j++) _solve(b, j);
for(j = 410290; j < 410300; j++) _solve(b, j);
for(j = 411130; j < 411140; j++) _solve(b, j);
for(j = 411970; j < 411980; j++) _solve(b, j);
for(j = 412810; j < 412820; j++) _solve(b, j);
for(j = 413650; j < 413660; j++) _solve(b, j);
for(j = 414490; j < 414500; j++) _solve(b, j);
for(j = 415330; j < 415340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 416170; j < 416180; j++) _solve(b, j);
for(j = 417010; j < 417020; j++) _solve(b, j);
for(j = 417850; j < 417860; j++) _solve(b, j);
for(j = 418690; j < 418700; j++) _solve(b, j);
for(j = 419530; j < 419540; j++) _solve(b, j);
for(j = 420370; j < 420380; j++) _solve(b, j);
for(j = 421210; j < 421220; j++) _solve(b, j);
for(j = 422050; j < 422060; j++) _solve(b, j);
for(j = 422890; j < 422900; j++) _solve(b, j);
for(j = 423730; j < 423740; j++) _solve(b, j);
for(j = 424570; j < 424580; j++) _solve(b, j);
for(j = 425410; j < 425420; j++) _solve(b, j);
for(j = 426250; j < 426260; j++) _solve(b, j);
for(j = 427090; j < 427100; j++) _solve(b, j);
for(j = 427930; j < 427940; j++) _solve(b, j);
for(j = 428770; j < 428780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 429610; j < 429620; j++) _solve(b, j);
for(j = 430450; j < 430460; j++) _solve(b, j);
for(j = 431290; j < 431300; j++) _solve(b, j);
for(j = 432130; j < 432140; j++) _solve(b, j);
for(j = 432970; j < 432980; j++) _solve(b, j);
for(j = 433810; j < 433820; j++) _solve(b, j);
for(j = 434650; j < 434660; j++) _solve(b, j);
for(j = 435490; j < 435500; j++) _solve(b, j);
for(j = 436330; j < 436340; j++) _solve(b, j);
for(j = 437170; j < 437180; j++) _solve(b, j);
for(j = 438010; j < 438020; j++) _solve(b, j);
for(j = 438850; j < 438860; j++) _solve(b, j);
for(j = 439690; j < 439700; j++) _solve(b, j);
for(j = 440530; j < 440540; j++) _solve(b, j);
for(j = 441370; j < 441380; j++) _solve(b, j);
for(j = 442210; j < 442220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 443050; j < 443060; j++) _solve(b, j);
for(j = 443890; j < 443900; j++) _solve(b, j);
for(j = 444730; j < 444740; j++) _solve(b, j);
for(j = 445570; j < 445580; j++) _solve(b, j);
for(j = 446410; j < 446420; j++) _solve(b, j);
for(j = 447250; j < 447260; j++) _solve(b, j);
for(j = 448090; j < 448100; j++) _solve(b, j);
for(j = 448930; j < 448940; j++) _solve(b, j);
for(j = 449770; j < 449780; j++) _solve(b, j);
for(j = 450610; j < 450620; j++) _solve(b, j);
for(j = 451450; j < 451460; j++) _solve(b, j);
for(j = 452290; j < 452300; j++) _solve(b, j);
for(j = 453130; j < 453140; j++) _solve(b, j);
for(j = 453970; j < 453980; j++) _solve(b, j);
for(j = 454810; j < 454820; j++) _solve(b, j);
for(j = 455650; j < 455660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 456490; j < 456500; j++) _solve(b, j);
for(j = 457330; j < 457340; j++) _solve(b, j);
for(j = 458170; j < 458180; j++) _solve(b, j);
for(j = 459010; j < 459020; j++) _solve(b, j);
for(j = 459850; j < 459860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 390140; j < 390150; j++) _solve(b, j);
for(j = 390980; j < 390990; j++) _solve(b, j);
for(j = 391820; j < 391830; j++) _solve(b, j);
for(j = 392660; j < 392670; j++) _solve(b, j);
for(j = 393500; j < 393510; j++) _solve(b, j);
for(j = 394340; j < 394350; j++) _solve(b, j);
for(j = 395180; j < 395190; j++) _solve(b, j);
for(j = 396020; j < 396030; j++) _solve(b, j);
for(j = 396860; j < 396870; j++) _solve(b, j);
for(j = 397700; j < 397710; j++) _solve(b, j);
for(j = 398540; j < 398550; j++) _solve(b, j);
for(j = 399380; j < 399390; j++) _solve(b, j);
for(j = 400220; j < 400230; j++) _solve(b, j);
for(j = 401060; j < 401070; j++) _solve(b, j);
for(j = 401900; j < 401910; j++) _solve(b, j);
for(j = 402740; j < 402750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 403580; j < 403590; j++) _solve(b, j);
for(j = 404420; j < 404430; j++) _solve(b, j);
for(j = 405260; j < 405270; j++) _solve(b, j);
for(j = 406100; j < 406110; j++) _solve(b, j);
for(j = 406940; j < 406950; j++) _solve(b, j);
for(j = 407780; j < 407790; j++) _solve(b, j);
for(j = 408620; j < 408630; j++) _solve(b, j);
for(j = 409460; j < 409470; j++) _solve(b, j);
for(j = 410300; j < 410310; j++) _solve(b, j);
for(j = 411140; j < 411150; j++) _solve(b, j);
for(j = 411980; j < 411990; j++) _solve(b, j);
for(j = 412820; j < 412830; j++) _solve(b, j);
for(j = 413660; j < 413670; j++) _solve(b, j);
for(j = 414500; j < 414510; j++) _solve(b, j);
for(j = 415340; j < 415350; j++) _solve(b, j);
for(j = 416180; j < 416190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 417020; j < 417030; j++) _solve(b, j);
for(j = 417860; j < 417870; j++) _solve(b, j);
for(j = 418700; j < 418710; j++) _solve(b, j);
for(j = 419540; j < 419550; j++) _solve(b, j);
for(j = 420380; j < 420390; j++) _solve(b, j);
for(j = 421220; j < 421230; j++) _solve(b, j);
for(j = 422060; j < 422070; j++) _solve(b, j);
for(j = 422900; j < 422910; j++) _solve(b, j);
for(j = 423740; j < 423750; j++) _solve(b, j);
for(j = 424580; j < 424590; j++) _solve(b, j);
for(j = 425420; j < 425430; j++) _solve(b, j);
for(j = 426260; j < 426270; j++) _solve(b, j);
for(j = 427100; j < 427110; j++) _solve(b, j);
for(j = 427940; j < 427950; j++) _solve(b, j);
for(j = 428780; j < 428790; j++) _solve(b, j);
for(j = 429620; j < 429630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 430460; j < 430470; j++) _solve(b, j);
for(j = 431300; j < 431310; j++) _solve(b, j);
for(j = 432140; j < 432150; j++) _solve(b, j);
for(j = 432980; j < 432990; j++) _solve(b, j);
for(j = 433820; j < 433830; j++) _solve(b, j);
for(j = 434660; j < 434670; j++) _solve(b, j);
for(j = 435500; j < 435510; j++) _solve(b, j);
for(j = 436340; j < 436350; j++) _solve(b, j);
for(j = 437180; j < 437190; j++) _solve(b, j);
for(j = 438020; j < 438030; j++) _solve(b, j);
for(j = 438860; j < 438870; j++) _solve(b, j);
for(j = 439700; j < 439710; j++) _solve(b, j);
for(j = 440540; j < 440550; j++) _solve(b, j);
for(j = 441380; j < 441390; j++) _solve(b, j);
for(j = 442220; j < 442230; j++) _solve(b, j);
for(j = 443060; j < 443070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 443900; j < 443910; j++) _solve(b, j);
for(j = 444740; j < 444750; j++) _solve(b, j);
for(j = 445580; j < 445590; j++) _solve(b, j);
for(j = 446420; j < 446430; j++) _solve(b, j);
for(j = 447260; j < 447270; j++) _solve(b, j);
for(j = 448100; j < 448110; j++) _solve(b, j);
for(j = 448940; j < 448950; j++) _solve(b, j);
for(j = 449780; j < 449790; j++) _solve(b, j);
for(j = 450620; j < 450630; j++) _solve(b, j);
for(j = 451460; j < 451470; j++) _solve(b, j);
for(j = 452300; j < 452310; j++) _solve(b, j);
for(j = 453140; j < 453150; j++) _solve(b, j);
for(j = 453980; j < 453990; j++) _solve(b, j);
for(j = 454820; j < 454830; j++) _solve(b, j);
for(j = 455660; j < 455670; j++) _solve(b, j);
for(j = 456500; j < 456510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 457340; j < 457350; j++) _solve(b, j);
for(j = 458180; j < 458190; j++) _solve(b, j);
for(j = 459020; j < 459030; j++) _solve(b, j);
for(j = 459860; j < 459870; j++) _solve(b, j);
for(j = 460700; j < 460710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 390990; j < 391000; j++) _solve(b, j);
for(j = 391830; j < 391840; j++) _solve(b, j);
for(j = 392670; j < 392680; j++) _solve(b, j);
for(j = 393510; j < 393520; j++) _solve(b, j);
for(j = 394350; j < 394360; j++) _solve(b, j);
for(j = 395190; j < 395200; j++) _solve(b, j);
for(j = 396030; j < 396040; j++) _solve(b, j);
for(j = 396870; j < 396880; j++) _solve(b, j);
for(j = 397710; j < 397720; j++) _solve(b, j);
for(j = 398550; j < 398560; j++) _solve(b, j);
for(j = 399390; j < 399400; j++) _solve(b, j);
for(j = 400230; j < 400240; j++) _solve(b, j);
for(j = 401070; j < 401080; j++) _solve(b, j);
for(j = 401910; j < 401920; j++) _solve(b, j);
for(j = 402750; j < 402760; j++) _solve(b, j);
for(j = 403590; j < 403600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 404430; j < 404440; j++) _solve(b, j);
for(j = 405270; j < 405280; j++) _solve(b, j);
for(j = 406110; j < 406120; j++) _solve(b, j);
for(j = 406950; j < 406960; j++) _solve(b, j);
for(j = 407790; j < 407800; j++) _solve(b, j);
for(j = 408630; j < 408640; j++) _solve(b, j);
for(j = 409470; j < 409480; j++) _solve(b, j);
for(j = 410310; j < 410320; j++) _solve(b, j);
for(j = 411150; j < 411160; j++) _solve(b, j);
for(j = 411990; j < 412000; j++) _solve(b, j);
for(j = 412830; j < 412840; j++) _solve(b, j);
for(j = 413670; j < 413680; j++) _solve(b, j);
for(j = 414510; j < 414520; j++) _solve(b, j);
for(j = 415350; j < 415360; j++) _solve(b, j);
for(j = 416190; j < 416200; j++) _solve(b, j);
for(j = 417030; j < 417040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 417870; j < 417880; j++) _solve(b, j);
for(j = 418710; j < 418720; j++) _solve(b, j);
for(j = 419550; j < 419560; j++) _solve(b, j);
for(j = 420390; j < 420400; j++) _solve(b, j);
for(j = 421230; j < 421240; j++) _solve(b, j);
for(j = 422070; j < 422080; j++) _solve(b, j);
for(j = 422910; j < 422920; j++) _solve(b, j);
for(j = 423750; j < 423760; j++) _solve(b, j);
for(j = 424590; j < 424600; j++) _solve(b, j);
for(j = 425430; j < 425440; j++) _solve(b, j);
for(j = 426270; j < 426280; j++) _solve(b, j);
for(j = 427110; j < 427120; j++) _solve(b, j);
for(j = 427950; j < 427960; j++) _solve(b, j);
for(j = 428790; j < 428800; j++) _solve(b, j);
for(j = 429630; j < 429640; j++) _solve(b, j);
for(j = 430470; j < 430480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 431310; j < 431320; j++) _solve(b, j);
for(j = 432150; j < 432160; j++) _solve(b, j);
for(j = 432990; j < 433000; j++) _solve(b, j);
for(j = 433830; j < 433840; j++) _solve(b, j);
for(j = 434670; j < 434680; j++) _solve(b, j);
for(j = 435510; j < 435520; j++) _solve(b, j);
for(j = 436350; j < 436360; j++) _solve(b, j);
for(j = 437190; j < 437200; j++) _solve(b, j);
for(j = 438030; j < 438040; j++) _solve(b, j);
for(j = 438870; j < 438880; j++) _solve(b, j);
for(j = 439710; j < 439720; j++) _solve(b, j);
for(j = 440550; j < 440560; j++) _solve(b, j);
for(j = 441390; j < 441400; j++) _solve(b, j);
for(j = 442230; j < 442240; j++) _solve(b, j);
for(j = 443070; j < 443080; j++) _solve(b, j);
for(j = 443910; j < 443920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 444750; j < 444760; j++) _solve(b, j);
for(j = 445590; j < 445600; j++) _solve(b, j);
for(j = 446430; j < 446440; j++) _solve(b, j);
for(j = 447270; j < 447280; j++) _solve(b, j);
for(j = 448110; j < 448120; j++) _solve(b, j);
for(j = 448950; j < 448960; j++) _solve(b, j);
for(j = 449790; j < 449800; j++) _solve(b, j);
for(j = 450630; j < 450640; j++) _solve(b, j);
for(j = 451470; j < 451480; j++) _solve(b, j);
for(j = 452310; j < 452320; j++) _solve(b, j);
for(j = 453150; j < 453160; j++) _solve(b, j);
for(j = 453990; j < 454000; j++) _solve(b, j);
for(j = 454830; j < 454840; j++) _solve(b, j);
for(j = 455670; j < 455680; j++) _solve(b, j);
for(j = 456510; j < 456520; j++) _solve(b, j);
for(j = 457350; j < 457360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 458190; j < 458200; j++) _solve(b, j);
for(j = 459030; j < 459040; j++) _solve(b, j);
for(j = 459870; j < 459880; j++) _solve(b, j);
for(j = 460710; j < 460720; j++) _solve(b, j);
for(j = 461550; j < 461560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 391840; j < 391850; j++) _solve(b, j);
for(j = 392680; j < 392690; j++) _solve(b, j);
for(j = 393520; j < 393530; j++) _solve(b, j);
for(j = 394360; j < 394370; j++) _solve(b, j);
for(j = 395200; j < 395210; j++) _solve(b, j);
for(j = 396040; j < 396050; j++) _solve(b, j);
for(j = 396880; j < 396890; j++) _solve(b, j);
for(j = 397720; j < 397730; j++) _solve(b, j);
for(j = 398560; j < 398570; j++) _solve(b, j);
for(j = 399400; j < 399410; j++) _solve(b, j);
for(j = 400240; j < 400250; j++) _solve(b, j);
for(j = 401080; j < 401090; j++) _solve(b, j);
for(j = 401920; j < 401930; j++) _solve(b, j);
for(j = 402760; j < 402770; j++) _solve(b, j);
for(j = 403600; j < 403610; j++) _solve(b, j);
for(j = 404440; j < 404450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 405280; j < 405290; j++) _solve(b, j);
for(j = 406120; j < 406130; j++) _solve(b, j);
for(j = 406960; j < 406970; j++) _solve(b, j);
for(j = 407800; j < 407810; j++) _solve(b, j);
for(j = 408640; j < 408650; j++) _solve(b, j);
for(j = 409480; j < 409490; j++) _solve(b, j);
for(j = 410320; j < 410330; j++) _solve(b, j);
for(j = 411160; j < 411170; j++) _solve(b, j);
for(j = 412000; j < 412010; j++) _solve(b, j);
for(j = 412840; j < 412850; j++) _solve(b, j);
for(j = 413680; j < 413690; j++) _solve(b, j);
for(j = 414520; j < 414530; j++) _solve(b, j);
for(j = 415360; j < 415370; j++) _solve(b, j);
for(j = 416200; j < 416210; j++) _solve(b, j);
for(j = 417040; j < 417050; j++) _solve(b, j);
for(j = 417880; j < 417890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 418720; j < 418730; j++) _solve(b, j);
for(j = 419560; j < 419570; j++) _solve(b, j);
for(j = 420400; j < 420410; j++) _solve(b, j);
for(j = 421240; j < 421250; j++) _solve(b, j);
for(j = 422080; j < 422090; j++) _solve(b, j);
for(j = 422920; j < 422930; j++) _solve(b, j);
for(j = 423760; j < 423770; j++) _solve(b, j);
for(j = 424600; j < 424610; j++) _solve(b, j);
for(j = 425440; j < 425450; j++) _solve(b, j);
for(j = 426280; j < 426290; j++) _solve(b, j);
for(j = 427120; j < 427130; j++) _solve(b, j);
for(j = 427960; j < 427970; j++) _solve(b, j);
for(j = 428800; j < 428810; j++) _solve(b, j);
for(j = 429640; j < 429650; j++) _solve(b, j);
for(j = 430480; j < 430490; j++) _solve(b, j);
for(j = 431320; j < 431330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 432160; j < 432170; j++) _solve(b, j);
for(j = 433000; j < 433010; j++) _solve(b, j);
for(j = 433840; j < 433850; j++) _solve(b, j);
for(j = 434680; j < 434690; j++) _solve(b, j);
for(j = 435520; j < 435530; j++) _solve(b, j);
for(j = 436360; j < 436370; j++) _solve(b, j);
for(j = 437200; j < 437210; j++) _solve(b, j);
for(j = 438040; j < 438050; j++) _solve(b, j);
for(j = 438880; j < 438890; j++) _solve(b, j);
for(j = 439720; j < 439730; j++) _solve(b, j);
for(j = 440560; j < 440570; j++) _solve(b, j);
for(j = 441400; j < 441410; j++) _solve(b, j);
for(j = 442240; j < 442250; j++) _solve(b, j);
for(j = 443080; j < 443090; j++) _solve(b, j);
for(j = 443920; j < 443930; j++) _solve(b, j);
for(j = 444760; j < 444770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 445600; j < 445610; j++) _solve(b, j);
for(j = 446440; j < 446450; j++) _solve(b, j);
for(j = 447280; j < 447290; j++) _solve(b, j);
for(j = 448120; j < 448130; j++) _solve(b, j);
for(j = 448960; j < 448970; j++) _solve(b, j);
for(j = 449800; j < 449810; j++) _solve(b, j);
for(j = 450640; j < 450650; j++) _solve(b, j);
for(j = 451480; j < 451490; j++) _solve(b, j);
for(j = 452320; j < 452330; j++) _solve(b, j);
for(j = 453160; j < 453170; j++) _solve(b, j);
for(j = 454000; j < 454010; j++) _solve(b, j);
for(j = 454840; j < 454850; j++) _solve(b, j);
for(j = 455680; j < 455690; j++) _solve(b, j);
for(j = 456520; j < 456530; j++) _solve(b, j);
for(j = 457360; j < 457370; j++) _solve(b, j);
for(j = 458200; j < 458210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 459040; j < 459050; j++) _solve(b, j);
for(j = 459880; j < 459890; j++) _solve(b, j);
for(j = 460720; j < 460730; j++) _solve(b, j);
for(j = 461560; j < 461570; j++) _solve(b, j);
for(j = 462400; j < 462410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 392690; j < 392700; j++) _solve(b, j);
for(j = 393530; j < 393540; j++) _solve(b, j);
for(j = 394370; j < 394380; j++) _solve(b, j);
for(j = 395210; j < 395220; j++) _solve(b, j);
for(j = 396050; j < 396060; j++) _solve(b, j);
for(j = 396890; j < 396900; j++) _solve(b, j);
for(j = 397730; j < 397740; j++) _solve(b, j);
for(j = 398570; j < 398580; j++) _solve(b, j);
for(j = 399410; j < 399420; j++) _solve(b, j);
for(j = 400250; j < 400260; j++) _solve(b, j);
for(j = 401090; j < 401100; j++) _solve(b, j);
for(j = 401930; j < 401940; j++) _solve(b, j);
for(j = 402770; j < 402780; j++) _solve(b, j);
for(j = 403610; j < 403620; j++) _solve(b, j);
for(j = 404450; j < 404460; j++) _solve(b, j);
for(j = 405290; j < 405300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 406130; j < 406140; j++) _solve(b, j);
for(j = 406970; j < 406980; j++) _solve(b, j);
for(j = 407810; j < 407820; j++) _solve(b, j);
for(j = 408650; j < 408660; j++) _solve(b, j);
for(j = 409490; j < 409500; j++) _solve(b, j);
for(j = 410330; j < 410340; j++) _solve(b, j);
for(j = 411170; j < 411180; j++) _solve(b, j);
for(j = 412010; j < 412020; j++) _solve(b, j);
for(j = 412850; j < 412860; j++) _solve(b, j);
for(j = 413690; j < 413700; j++) _solve(b, j);
for(j = 414530; j < 414540; j++) _solve(b, j);
for(j = 415370; j < 415380; j++) _solve(b, j);
for(j = 416210; j < 416220; j++) _solve(b, j);
for(j = 417050; j < 417060; j++) _solve(b, j);
for(j = 417890; j < 417900; j++) _solve(b, j);
for(j = 418730; j < 418740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 419570; j < 419580; j++) _solve(b, j);
for(j = 420410; j < 420420; j++) _solve(b, j);
for(j = 421250; j < 421260; j++) _solve(b, j);
for(j = 422090; j < 422100; j++) _solve(b, j);
for(j = 422930; j < 422940; j++) _solve(b, j);
for(j = 423770; j < 423780; j++) _solve(b, j);
for(j = 424610; j < 424620; j++) _solve(b, j);
for(j = 425450; j < 425460; j++) _solve(b, j);
for(j = 426290; j < 426300; j++) _solve(b, j);
for(j = 427130; j < 427140; j++) _solve(b, j);
for(j = 427970; j < 427980; j++) _solve(b, j);
for(j = 428810; j < 428820; j++) _solve(b, j);
for(j = 429650; j < 429660; j++) _solve(b, j);
for(j = 430490; j < 430500; j++) _solve(b, j);
for(j = 431330; j < 431340; j++) _solve(b, j);
for(j = 432170; j < 432180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 433010; j < 433020; j++) _solve(b, j);
for(j = 433850; j < 433860; j++) _solve(b, j);
for(j = 434690; j < 434700; j++) _solve(b, j);
for(j = 435530; j < 435540; j++) _solve(b, j);
for(j = 436370; j < 436380; j++) _solve(b, j);
for(j = 437210; j < 437220; j++) _solve(b, j);
for(j = 438050; j < 438060; j++) _solve(b, j);
for(j = 438890; j < 438900; j++) _solve(b, j);
for(j = 439730; j < 439740; j++) _solve(b, j);
for(j = 440570; j < 440580; j++) _solve(b, j);
for(j = 441410; j < 441420; j++) _solve(b, j);
for(j = 442250; j < 442260; j++) _solve(b, j);
for(j = 443090; j < 443100; j++) _solve(b, j);
for(j = 443930; j < 443940; j++) _solve(b, j);
for(j = 444770; j < 444780; j++) _solve(b, j);
for(j = 445610; j < 445620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 446450; j < 446460; j++) _solve(b, j);
for(j = 447290; j < 447300; j++) _solve(b, j);
for(j = 448130; j < 448140; j++) _solve(b, j);
for(j = 448970; j < 448980; j++) _solve(b, j);
for(j = 449810; j < 449820; j++) _solve(b, j);
for(j = 450650; j < 450660; j++) _solve(b, j);
for(j = 451490; j < 451500; j++) _solve(b, j);
for(j = 452330; j < 452340; j++) _solve(b, j);
for(j = 453170; j < 453180; j++) _solve(b, j);
for(j = 454010; j < 454020; j++) _solve(b, j);
for(j = 454850; j < 454860; j++) _solve(b, j);
for(j = 455690; j < 455700; j++) _solve(b, j);
for(j = 456530; j < 456540; j++) _solve(b, j);
for(j = 457370; j < 457380; j++) _solve(b, j);
for(j = 458210; j < 458220; j++) _solve(b, j);
for(j = 459050; j < 459060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 459890; j < 459900; j++) _solve(b, j);
for(j = 460730; j < 460740; j++) _solve(b, j);
for(j = 461570; j < 461580; j++) _solve(b, j);
for(j = 462410; j < 462420; j++) _solve(b, j);
for(j = 463250; j < 463260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 393540; j < 393550; j++) _solve(b, j);
for(j = 394380; j < 394390; j++) _solve(b, j);
for(j = 395220; j < 395230; j++) _solve(b, j);
for(j = 396060; j < 396070; j++) _solve(b, j);
for(j = 396900; j < 396910; j++) _solve(b, j);
for(j = 397740; j < 397750; j++) _solve(b, j);
for(j = 398580; j < 398590; j++) _solve(b, j);
for(j = 399420; j < 399430; j++) _solve(b, j);
for(j = 400260; j < 400270; j++) _solve(b, j);
for(j = 401100; j < 401110; j++) _solve(b, j);
for(j = 401940; j < 401950; j++) _solve(b, j);
for(j = 402780; j < 402790; j++) _solve(b, j);
for(j = 403620; j < 403630; j++) _solve(b, j);
for(j = 404460; j < 404470; j++) _solve(b, j);
for(j = 405300; j < 405310; j++) _solve(b, j);
for(j = 406140; j < 406150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 406980; j < 406990; j++) _solve(b, j);
for(j = 407820; j < 407830; j++) _solve(b, j);
for(j = 408660; j < 408670; j++) _solve(b, j);
for(j = 409500; j < 409510; j++) _solve(b, j);
for(j = 410340; j < 410350; j++) _solve(b, j);
for(j = 411180; j < 411190; j++) _solve(b, j);
for(j = 412020; j < 412030; j++) _solve(b, j);
for(j = 412860; j < 412870; j++) _solve(b, j);
for(j = 413700; j < 413710; j++) _solve(b, j);
for(j = 414540; j < 414550; j++) _solve(b, j);
for(j = 415380; j < 415390; j++) _solve(b, j);
for(j = 416220; j < 416230; j++) _solve(b, j);
for(j = 417060; j < 417070; j++) _solve(b, j);
for(j = 417900; j < 417910; j++) _solve(b, j);
for(j = 418740; j < 418750; j++) _solve(b, j);
for(j = 419580; j < 419590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 420420; j < 420430; j++) _solve(b, j);
for(j = 421260; j < 421270; j++) _solve(b, j);
for(j = 422100; j < 422110; j++) _solve(b, j);
for(j = 422940; j < 422950; j++) _solve(b, j);
for(j = 423780; j < 423790; j++) _solve(b, j);
for(j = 424620; j < 424630; j++) _solve(b, j);
for(j = 425460; j < 425470; j++) _solve(b, j);
for(j = 426300; j < 426310; j++) _solve(b, j);
for(j = 427140; j < 427150; j++) _solve(b, j);
for(j = 427980; j < 427990; j++) _solve(b, j);
for(j = 428820; j < 428830; j++) _solve(b, j);
for(j = 429660; j < 429670; j++) _solve(b, j);
for(j = 430500; j < 430510; j++) _solve(b, j);
for(j = 431340; j < 431350; j++) _solve(b, j);
for(j = 432180; j < 432190; j++) _solve(b, j);
for(j = 433020; j < 433030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 433860; j < 433870; j++) _solve(b, j);
for(j = 434700; j < 434710; j++) _solve(b, j);
for(j = 435540; j < 435550; j++) _solve(b, j);
for(j = 436380; j < 436390; j++) _solve(b, j);
for(j = 437220; j < 437230; j++) _solve(b, j);
for(j = 438060; j < 438070; j++) _solve(b, j);
for(j = 438900; j < 438910; j++) _solve(b, j);
for(j = 439740; j < 439750; j++) _solve(b, j);
for(j = 440580; j < 440590; j++) _solve(b, j);
for(j = 441420; j < 441430; j++) _solve(b, j);
for(j = 442260; j < 442270; j++) _solve(b, j);
for(j = 443100; j < 443110; j++) _solve(b, j);
for(j = 443940; j < 443950; j++) _solve(b, j);
for(j = 444780; j < 444790; j++) _solve(b, j);
for(j = 445620; j < 445630; j++) _solve(b, j);
for(j = 446460; j < 446470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 447300; j < 447310; j++) _solve(b, j);
for(j = 448140; j < 448150; j++) _solve(b, j);
for(j = 448980; j < 448990; j++) _solve(b, j);
for(j = 449820; j < 449830; j++) _solve(b, j);
for(j = 450660; j < 450670; j++) _solve(b, j);
for(j = 451500; j < 451510; j++) _solve(b, j);
for(j = 452340; j < 452350; j++) _solve(b, j);
for(j = 453180; j < 453190; j++) _solve(b, j);
for(j = 454020; j < 454030; j++) _solve(b, j);
for(j = 454860; j < 454870; j++) _solve(b, j);
for(j = 455700; j < 455710; j++) _solve(b, j);
for(j = 456540; j < 456550; j++) _solve(b, j);
for(j = 457380; j < 457390; j++) _solve(b, j);
for(j = 458220; j < 458230; j++) _solve(b, j);
for(j = 459060; j < 459070; j++) _solve(b, j);
for(j = 459900; j < 459910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 460740; j < 460750; j++) _solve(b, j);
for(j = 461580; j < 461590; j++) _solve(b, j);
for(j = 462420; j < 462430; j++) _solve(b, j);
for(j = 463260; j < 463270; j++) _solve(b, j);
for(j = 464100; j < 464110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 394390; j < 394400; j++) _solve(b, j);
for(j = 395230; j < 395240; j++) _solve(b, j);
for(j = 396070; j < 396080; j++) _solve(b, j);
for(j = 396910; j < 396920; j++) _solve(b, j);
for(j = 397750; j < 397760; j++) _solve(b, j);
for(j = 398590; j < 398600; j++) _solve(b, j);
for(j = 399430; j < 399440; j++) _solve(b, j);
for(j = 400270; j < 400280; j++) _solve(b, j);
for(j = 401110; j < 401120; j++) _solve(b, j);
for(j = 401950; j < 401960; j++) _solve(b, j);
for(j = 402790; j < 402800; j++) _solve(b, j);
for(j = 403630; j < 403640; j++) _solve(b, j);
for(j = 404470; j < 404480; j++) _solve(b, j);
for(j = 405310; j < 405320; j++) _solve(b, j);
for(j = 406150; j < 406160; j++) _solve(b, j);
for(j = 406990; j < 407000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 407830; j < 407840; j++) _solve(b, j);
for(j = 408670; j < 408680; j++) _solve(b, j);
for(j = 409510; j < 409520; j++) _solve(b, j);
for(j = 410350; j < 410360; j++) _solve(b, j);
for(j = 411190; j < 411200; j++) _solve(b, j);
for(j = 412030; j < 412040; j++) _solve(b, j);
for(j = 412870; j < 412880; j++) _solve(b, j);
for(j = 413710; j < 413720; j++) _solve(b, j);
for(j = 414550; j < 414560; j++) _solve(b, j);
for(j = 415390; j < 415400; j++) _solve(b, j);
for(j = 416230; j < 416240; j++) _solve(b, j);
for(j = 417070; j < 417080; j++) _solve(b, j);
for(j = 417910; j < 417920; j++) _solve(b, j);
for(j = 418750; j < 418760; j++) _solve(b, j);
for(j = 419590; j < 419600; j++) _solve(b, j);
for(j = 420430; j < 420440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 421270; j < 421280; j++) _solve(b, j);
for(j = 422110; j < 422120; j++) _solve(b, j);
for(j = 422950; j < 422960; j++) _solve(b, j);
for(j = 423790; j < 423800; j++) _solve(b, j);
for(j = 424630; j < 424640; j++) _solve(b, j);
for(j = 425470; j < 425480; j++) _solve(b, j);
for(j = 426310; j < 426320; j++) _solve(b, j);
for(j = 427150; j < 427160; j++) _solve(b, j);
for(j = 427990; j < 428000; j++) _solve(b, j);
for(j = 428830; j < 428840; j++) _solve(b, j);
for(j = 429670; j < 429680; j++) _solve(b, j);
for(j = 430510; j < 430520; j++) _solve(b, j);
for(j = 431350; j < 431360; j++) _solve(b, j);
for(j = 432190; j < 432200; j++) _solve(b, j);
for(j = 433030; j < 433040; j++) _solve(b, j);
for(j = 433870; j < 433880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 434710; j < 434720; j++) _solve(b, j);
for(j = 435550; j < 435560; j++) _solve(b, j);
for(j = 436390; j < 436400; j++) _solve(b, j);
for(j = 437230; j < 437240; j++) _solve(b, j);
for(j = 438070; j < 438080; j++) _solve(b, j);
for(j = 438910; j < 438920; j++) _solve(b, j);
for(j = 439750; j < 439760; j++) _solve(b, j);
for(j = 440590; j < 440600; j++) _solve(b, j);
for(j = 441430; j < 441440; j++) _solve(b, j);
for(j = 442270; j < 442280; j++) _solve(b, j);
for(j = 443110; j < 443120; j++) _solve(b, j);
for(j = 443950; j < 443960; j++) _solve(b, j);
for(j = 444790; j < 444800; j++) _solve(b, j);
for(j = 445630; j < 445640; j++) _solve(b, j);
for(j = 446470; j < 446480; j++) _solve(b, j);
for(j = 447310; j < 447320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 448150; j < 448160; j++) _solve(b, j);
for(j = 448990; j < 449000; j++) _solve(b, j);
for(j = 449830; j < 449840; j++) _solve(b, j);
for(j = 450670; j < 450680; j++) _solve(b, j);
for(j = 451510; j < 451520; j++) _solve(b, j);
for(j = 452350; j < 452360; j++) _solve(b, j);
for(j = 453190; j < 453200; j++) _solve(b, j);
for(j = 454030; j < 454040; j++) _solve(b, j);
for(j = 454870; j < 454880; j++) _solve(b, j);
for(j = 455710; j < 455720; j++) _solve(b, j);
for(j = 456550; j < 456560; j++) _solve(b, j);
for(j = 457390; j < 457400; j++) _solve(b, j);
for(j = 458230; j < 458240; j++) _solve(b, j);
for(j = 459070; j < 459080; j++) _solve(b, j);
for(j = 459910; j < 459920; j++) _solve(b, j);
for(j = 460750; j < 460760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 461590; j < 461600; j++) _solve(b, j);
for(j = 462430; j < 462440; j++) _solve(b, j);
for(j = 463270; j < 463280; j++) _solve(b, j);
for(j = 464110; j < 464120; j++) _solve(b, j);
for(j = 464950; j < 464960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 395240; j < 395250; j++) _solve(b, j);
for(j = 396080; j < 396090; j++) _solve(b, j);
for(j = 396920; j < 396930; j++) _solve(b, j);
for(j = 397760; j < 397770; j++) _solve(b, j);
for(j = 398600; j < 398610; j++) _solve(b, j);
for(j = 399440; j < 399450; j++) _solve(b, j);
for(j = 400280; j < 400290; j++) _solve(b, j);
for(j = 401120; j < 401130; j++) _solve(b, j);
for(j = 401960; j < 401970; j++) _solve(b, j);
for(j = 402800; j < 402810; j++) _solve(b, j);
for(j = 403640; j < 403650; j++) _solve(b, j);
for(j = 404480; j < 404490; j++) _solve(b, j);
for(j = 405320; j < 405330; j++) _solve(b, j);
for(j = 406160; j < 406170; j++) _solve(b, j);
for(j = 407000; j < 407010; j++) _solve(b, j);
for(j = 407840; j < 407850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 408680; j < 408690; j++) _solve(b, j);
for(j = 409520; j < 409530; j++) _solve(b, j);
for(j = 410360; j < 410370; j++) _solve(b, j);
for(j = 411200; j < 411210; j++) _solve(b, j);
for(j = 412040; j < 412050; j++) _solve(b, j);
for(j = 412880; j < 412890; j++) _solve(b, j);
for(j = 413720; j < 413730; j++) _solve(b, j);
for(j = 414560; j < 414570; j++) _solve(b, j);
for(j = 415400; j < 415410; j++) _solve(b, j);
for(j = 416240; j < 416250; j++) _solve(b, j);
for(j = 417080; j < 417090; j++) _solve(b, j);
for(j = 417920; j < 417930; j++) _solve(b, j);
for(j = 418760; j < 418770; j++) _solve(b, j);
for(j = 419600; j < 419610; j++) _solve(b, j);
for(j = 420440; j < 420450; j++) _solve(b, j);
for(j = 421280; j < 421290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 422120; j < 422130; j++) _solve(b, j);
for(j = 422960; j < 422970; j++) _solve(b, j);
for(j = 423800; j < 423810; j++) _solve(b, j);
for(j = 424640; j < 424650; j++) _solve(b, j);
for(j = 425480; j < 425490; j++) _solve(b, j);
for(j = 426320; j < 426330; j++) _solve(b, j);
for(j = 427160; j < 427170; j++) _solve(b, j);
for(j = 428000; j < 428010; j++) _solve(b, j);
for(j = 428840; j < 428850; j++) _solve(b, j);
for(j = 429680; j < 429690; j++) _solve(b, j);
for(j = 430520; j < 430530; j++) _solve(b, j);
for(j = 431360; j < 431370; j++) _solve(b, j);
for(j = 432200; j < 432210; j++) _solve(b, j);
for(j = 433040; j < 433050; j++) _solve(b, j);
for(j = 433880; j < 433890; j++) _solve(b, j);
for(j = 434720; j < 434730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 435560; j < 435570; j++) _solve(b, j);
for(j = 436400; j < 436410; j++) _solve(b, j);
for(j = 437240; j < 437250; j++) _solve(b, j);
for(j = 438080; j < 438090; j++) _solve(b, j);
for(j = 438920; j < 438930; j++) _solve(b, j);
for(j = 439760; j < 439770; j++) _solve(b, j);
for(j = 440600; j < 440610; j++) _solve(b, j);
for(j = 441440; j < 441450; j++) _solve(b, j);
for(j = 442280; j < 442290; j++) _solve(b, j);
for(j = 443120; j < 443130; j++) _solve(b, j);
for(j = 443960; j < 443970; j++) _solve(b, j);
for(j = 444800; j < 444810; j++) _solve(b, j);
for(j = 445640; j < 445650; j++) _solve(b, j);
for(j = 446480; j < 446490; j++) _solve(b, j);
for(j = 447320; j < 447330; j++) _solve(b, j);
for(j = 448160; j < 448170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 449000; j < 449010; j++) _solve(b, j);
for(j = 449840; j < 449850; j++) _solve(b, j);
for(j = 450680; j < 450690; j++) _solve(b, j);
for(j = 451520; j < 451530; j++) _solve(b, j);
for(j = 452360; j < 452370; j++) _solve(b, j);
for(j = 453200; j < 453210; j++) _solve(b, j);
for(j = 454040; j < 454050; j++) _solve(b, j);
for(j = 454880; j < 454890; j++) _solve(b, j);
for(j = 455720; j < 455730; j++) _solve(b, j);
for(j = 456560; j < 456570; j++) _solve(b, j);
for(j = 457400; j < 457410; j++) _solve(b, j);
for(j = 458240; j < 458250; j++) _solve(b, j);
for(j = 459080; j < 459090; j++) _solve(b, j);
for(j = 459920; j < 459930; j++) _solve(b, j);
for(j = 460760; j < 460770; j++) _solve(b, j);
for(j = 461600; j < 461610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 462440; j < 462450; j++) _solve(b, j);
for(j = 463280; j < 463290; j++) _solve(b, j);
for(j = 464120; j < 464130; j++) _solve(b, j);
for(j = 464960; j < 464970; j++) _solve(b, j);
for(j = 465800; j < 465810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 396090; j < 396100; j++) _solve(b, j);
for(j = 396930; j < 396940; j++) _solve(b, j);
for(j = 397770; j < 397780; j++) _solve(b, j);
for(j = 398610; j < 398620; j++) _solve(b, j);
for(j = 399450; j < 399460; j++) _solve(b, j);
for(j = 400290; j < 400300; j++) _solve(b, j);
for(j = 401130; j < 401140; j++) _solve(b, j);
for(j = 401970; j < 401980; j++) _solve(b, j);
for(j = 402810; j < 402820; j++) _solve(b, j);
for(j = 403650; j < 403660; j++) _solve(b, j);
for(j = 404490; j < 404500; j++) _solve(b, j);
for(j = 405330; j < 405340; j++) _solve(b, j);
for(j = 406170; j < 406180; j++) _solve(b, j);
for(j = 407010; j < 407020; j++) _solve(b, j);
for(j = 407850; j < 407860; j++) _solve(b, j);
for(j = 408690; j < 408700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 409530; j < 409540; j++) _solve(b, j);
for(j = 410370; j < 410380; j++) _solve(b, j);
for(j = 411210; j < 411220; j++) _solve(b, j);
for(j = 412050; j < 412060; j++) _solve(b, j);
for(j = 412890; j < 412900; j++) _solve(b, j);
for(j = 413730; j < 413740; j++) _solve(b, j);
for(j = 414570; j < 414580; j++) _solve(b, j);
for(j = 415410; j < 415420; j++) _solve(b, j);
for(j = 416250; j < 416260; j++) _solve(b, j);
for(j = 417090; j < 417100; j++) _solve(b, j);
for(j = 417930; j < 417940; j++) _solve(b, j);
for(j = 418770; j < 418780; j++) _solve(b, j);
for(j = 419610; j < 419620; j++) _solve(b, j);
for(j = 420450; j < 420460; j++) _solve(b, j);
for(j = 421290; j < 421300; j++) _solve(b, j);
for(j = 422130; j < 422140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 422970; j < 422980; j++) _solve(b, j);
for(j = 423810; j < 423820; j++) _solve(b, j);
for(j = 424650; j < 424660; j++) _solve(b, j);
for(j = 425490; j < 425500; j++) _solve(b, j);
for(j = 426330; j < 426340; j++) _solve(b, j);
for(j = 427170; j < 427180; j++) _solve(b, j);
for(j = 428010; j < 428020; j++) _solve(b, j);
for(j = 428850; j < 428860; j++) _solve(b, j);
for(j = 429690; j < 429700; j++) _solve(b, j);
for(j = 430530; j < 430540; j++) _solve(b, j);
for(j = 431370; j < 431380; j++) _solve(b, j);
for(j = 432210; j < 432220; j++) _solve(b, j);
for(j = 433050; j < 433060; j++) _solve(b, j);
for(j = 433890; j < 433900; j++) _solve(b, j);
for(j = 434730; j < 434740; j++) _solve(b, j);
for(j = 435570; j < 435580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 436410; j < 436420; j++) _solve(b, j);
for(j = 437250; j < 437260; j++) _solve(b, j);
for(j = 438090; j < 438100; j++) _solve(b, j);
for(j = 438930; j < 438940; j++) _solve(b, j);
for(j = 439770; j < 439780; j++) _solve(b, j);
for(j = 440610; j < 440620; j++) _solve(b, j);
for(j = 441450; j < 441460; j++) _solve(b, j);
for(j = 442290; j < 442300; j++) _solve(b, j);
for(j = 443130; j < 443140; j++) _solve(b, j);
for(j = 443970; j < 443980; j++) _solve(b, j);
for(j = 444810; j < 444820; j++) _solve(b, j);
for(j = 445650; j < 445660; j++) _solve(b, j);
for(j = 446490; j < 446500; j++) _solve(b, j);
for(j = 447330; j < 447340; j++) _solve(b, j);
for(j = 448170; j < 448180; j++) _solve(b, j);
for(j = 449010; j < 449020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 449850; j < 449860; j++) _solve(b, j);
for(j = 450690; j < 450700; j++) _solve(b, j);
for(j = 451530; j < 451540; j++) _solve(b, j);
for(j = 452370; j < 452380; j++) _solve(b, j);
for(j = 453210; j < 453220; j++) _solve(b, j);
for(j = 454050; j < 454060; j++) _solve(b, j);
for(j = 454890; j < 454900; j++) _solve(b, j);
for(j = 455730; j < 455740; j++) _solve(b, j);
for(j = 456570; j < 456580; j++) _solve(b, j);
for(j = 457410; j < 457420; j++) _solve(b, j);
for(j = 458250; j < 458260; j++) _solve(b, j);
for(j = 459090; j < 459100; j++) _solve(b, j);
for(j = 459930; j < 459940; j++) _solve(b, j);
for(j = 460770; j < 460780; j++) _solve(b, j);
for(j = 461610; j < 461620; j++) _solve(b, j);
for(j = 462450; j < 462460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 463290; j < 463300; j++) _solve(b, j);
for(j = 464130; j < 464140; j++) _solve(b, j);
for(j = 464970; j < 464980; j++) _solve(b, j);
for(j = 465810; j < 465820; j++) _solve(b, j);
for(j = 466650; j < 466660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 396940; j < 396950; j++) _solve(b, j);
for(j = 397780; j < 397790; j++) _solve(b, j);
for(j = 398620; j < 398630; j++) _solve(b, j);
for(j = 399460; j < 399470; j++) _solve(b, j);
for(j = 400300; j < 400310; j++) _solve(b, j);
for(j = 401140; j < 401150; j++) _solve(b, j);
for(j = 401980; j < 401990; j++) _solve(b, j);
for(j = 402820; j < 402830; j++) _solve(b, j);
for(j = 403660; j < 403670; j++) _solve(b, j);
for(j = 404500; j < 404510; j++) _solve(b, j);
for(j = 405340; j < 405350; j++) _solve(b, j);
for(j = 406180; j < 406190; j++) _solve(b, j);
for(j = 407020; j < 407030; j++) _solve(b, j);
for(j = 407860; j < 407870; j++) _solve(b, j);
for(j = 408700; j < 408710; j++) _solve(b, j);
for(j = 409540; j < 409550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 410380; j < 410390; j++) _solve(b, j);
for(j = 411220; j < 411230; j++) _solve(b, j);
for(j = 412060; j < 412070; j++) _solve(b, j);
for(j = 412900; j < 412910; j++) _solve(b, j);
for(j = 413740; j < 413750; j++) _solve(b, j);
for(j = 414580; j < 414590; j++) _solve(b, j);
for(j = 415420; j < 415430; j++) _solve(b, j);
for(j = 416260; j < 416270; j++) _solve(b, j);
for(j = 417100; j < 417110; j++) _solve(b, j);
for(j = 417940; j < 417950; j++) _solve(b, j);
for(j = 418780; j < 418790; j++) _solve(b, j);
for(j = 419620; j < 419630; j++) _solve(b, j);
for(j = 420460; j < 420470; j++) _solve(b, j);
for(j = 421300; j < 421310; j++) _solve(b, j);
for(j = 422140; j < 422150; j++) _solve(b, j);
for(j = 422980; j < 422990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 423820; j < 423830; j++) _solve(b, j);
for(j = 424660; j < 424670; j++) _solve(b, j);
for(j = 425500; j < 425510; j++) _solve(b, j);
for(j = 426340; j < 426350; j++) _solve(b, j);
for(j = 427180; j < 427190; j++) _solve(b, j);
for(j = 428020; j < 428030; j++) _solve(b, j);
for(j = 428860; j < 428870; j++) _solve(b, j);
for(j = 429700; j < 429710; j++) _solve(b, j);
for(j = 430540; j < 430550; j++) _solve(b, j);
for(j = 431380; j < 431390; j++) _solve(b, j);
for(j = 432220; j < 432230; j++) _solve(b, j);
for(j = 433060; j < 433070; j++) _solve(b, j);
for(j = 433900; j < 433910; j++) _solve(b, j);
for(j = 434740; j < 434750; j++) _solve(b, j);
for(j = 435580; j < 435590; j++) _solve(b, j);
for(j = 436420; j < 436430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 437260; j < 437270; j++) _solve(b, j);
for(j = 438100; j < 438110; j++) _solve(b, j);
for(j = 438940; j < 438950; j++) _solve(b, j);
for(j = 439780; j < 439790; j++) _solve(b, j);
for(j = 440620; j < 440630; j++) _solve(b, j);
for(j = 441460; j < 441470; j++) _solve(b, j);
for(j = 442300; j < 442310; j++) _solve(b, j);
for(j = 443140; j < 443150; j++) _solve(b, j);
for(j = 443980; j < 443990; j++) _solve(b, j);
for(j = 444820; j < 444830; j++) _solve(b, j);
for(j = 445660; j < 445670; j++) _solve(b, j);
for(j = 446500; j < 446510; j++) _solve(b, j);
for(j = 447340; j < 447350; j++) _solve(b, j);
for(j = 448180; j < 448190; j++) _solve(b, j);
for(j = 449020; j < 449030; j++) _solve(b, j);
for(j = 449860; j < 449870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 450700; j < 450710; j++) _solve(b, j);
for(j = 451540; j < 451550; j++) _solve(b, j);
for(j = 452380; j < 452390; j++) _solve(b, j);
for(j = 453220; j < 453230; j++) _solve(b, j);
for(j = 454060; j < 454070; j++) _solve(b, j);
for(j = 454900; j < 454910; j++) _solve(b, j);
for(j = 455740; j < 455750; j++) _solve(b, j);
for(j = 456580; j < 456590; j++) _solve(b, j);
for(j = 457420; j < 457430; j++) _solve(b, j);
for(j = 458260; j < 458270; j++) _solve(b, j);
for(j = 459100; j < 459110; j++) _solve(b, j);
for(j = 459940; j < 459950; j++) _solve(b, j);
for(j = 460780; j < 460790; j++) _solve(b, j);
for(j = 461620; j < 461630; j++) _solve(b, j);
for(j = 462460; j < 462470; j++) _solve(b, j);
for(j = 463300; j < 463310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 464140; j < 464150; j++) _solve(b, j);
for(j = 464980; j < 464990; j++) _solve(b, j);
for(j = 465820; j < 465830; j++) _solve(b, j);
for(j = 466660; j < 466670; j++) _solve(b, j);
for(j = 467500; j < 467510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 397790; j < 397800; j++) _solve(b, j);
for(j = 398630; j < 398640; j++) _solve(b, j);
for(j = 399470; j < 399480; j++) _solve(b, j);
for(j = 400310; j < 400320; j++) _solve(b, j);
for(j = 401150; j < 401160; j++) _solve(b, j);
for(j = 401990; j < 402000; j++) _solve(b, j);
for(j = 402830; j < 402840; j++) _solve(b, j);
for(j = 403670; j < 403680; j++) _solve(b, j);
for(j = 404510; j < 404520; j++) _solve(b, j);
for(j = 405350; j < 405360; j++) _solve(b, j);
for(j = 406190; j < 406200; j++) _solve(b, j);
for(j = 407030; j < 407040; j++) _solve(b, j);
for(j = 407870; j < 407880; j++) _solve(b, j);
for(j = 408710; j < 408720; j++) _solve(b, j);
for(j = 409550; j < 409560; j++) _solve(b, j);
for(j = 410390; j < 410400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 411230; j < 411240; j++) _solve(b, j);
for(j = 412070; j < 412080; j++) _solve(b, j);
for(j = 412910; j < 412920; j++) _solve(b, j);
for(j = 413750; j < 413760; j++) _solve(b, j);
for(j = 414590; j < 414600; j++) _solve(b, j);
for(j = 415430; j < 415440; j++) _solve(b, j);
for(j = 416270; j < 416280; j++) _solve(b, j);
for(j = 417110; j < 417120; j++) _solve(b, j);
for(j = 417950; j < 417960; j++) _solve(b, j);
for(j = 418790; j < 418800; j++) _solve(b, j);
for(j = 419630; j < 419640; j++) _solve(b, j);
for(j = 420470; j < 420480; j++) _solve(b, j);
for(j = 421310; j < 421320; j++) _solve(b, j);
for(j = 422150; j < 422160; j++) _solve(b, j);
for(j = 422990; j < 423000; j++) _solve(b, j);
for(j = 423830; j < 423840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 424670; j < 424680; j++) _solve(b, j);
for(j = 425510; j < 425520; j++) _solve(b, j);
for(j = 426350; j < 426360; j++) _solve(b, j);
for(j = 427190; j < 427200; j++) _solve(b, j);
for(j = 428030; j < 428040; j++) _solve(b, j);
for(j = 428870; j < 428880; j++) _solve(b, j);
for(j = 429710; j < 429720; j++) _solve(b, j);
for(j = 430550; j < 430560; j++) _solve(b, j);
for(j = 431390; j < 431400; j++) _solve(b, j);
for(j = 432230; j < 432240; j++) _solve(b, j);
for(j = 433070; j < 433080; j++) _solve(b, j);
for(j = 433910; j < 433920; j++) _solve(b, j);
for(j = 434750; j < 434760; j++) _solve(b, j);
for(j = 435590; j < 435600; j++) _solve(b, j);
for(j = 436430; j < 436440; j++) _solve(b, j);
for(j = 437270; j < 437280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 438110; j < 438120; j++) _solve(b, j);
for(j = 438950; j < 438960; j++) _solve(b, j);
for(j = 439790; j < 439800; j++) _solve(b, j);
for(j = 440630; j < 440640; j++) _solve(b, j);
for(j = 441470; j < 441480; j++) _solve(b, j);
for(j = 442310; j < 442320; j++) _solve(b, j);
for(j = 443150; j < 443160; j++) _solve(b, j);
for(j = 443990; j < 444000; j++) _solve(b, j);
for(j = 444830; j < 444840; j++) _solve(b, j);
for(j = 445670; j < 445680; j++) _solve(b, j);
for(j = 446510; j < 446520; j++) _solve(b, j);
for(j = 447350; j < 447360; j++) _solve(b, j);
for(j = 448190; j < 448200; j++) _solve(b, j);
for(j = 449030; j < 449040; j++) _solve(b, j);
for(j = 449870; j < 449880; j++) _solve(b, j);
for(j = 450710; j < 450720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 451550; j < 451560; j++) _solve(b, j);
for(j = 452390; j < 452400; j++) _solve(b, j);
for(j = 453230; j < 453240; j++) _solve(b, j);
for(j = 454070; j < 454080; j++) _solve(b, j);
for(j = 454910; j < 454920; j++) _solve(b, j);
for(j = 455750; j < 455760; j++) _solve(b, j);
for(j = 456590; j < 456600; j++) _solve(b, j);
for(j = 457430; j < 457440; j++) _solve(b, j);
for(j = 458270; j < 458280; j++) _solve(b, j);
for(j = 459110; j < 459120; j++) _solve(b, j);
for(j = 459950; j < 459960; j++) _solve(b, j);
for(j = 460790; j < 460800; j++) _solve(b, j);
for(j = 461630; j < 461640; j++) _solve(b, j);
for(j = 462470; j < 462480; j++) _solve(b, j);
for(j = 463310; j < 463320; j++) _solve(b, j);
for(j = 464150; j < 464160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 464990; j < 465000; j++) _solve(b, j);
for(j = 465830; j < 465840; j++) _solve(b, j);
for(j = 466670; j < 466680; j++) _solve(b, j);
for(j = 467510; j < 467520; j++) _solve(b, j);
for(j = 468350; j < 468360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 398640; j < 398650; j++) _solve(b, j);
for(j = 399480; j < 399490; j++) _solve(b, j);
for(j = 400320; j < 400330; j++) _solve(b, j);
for(j = 401160; j < 401170; j++) _solve(b, j);
for(j = 402000; j < 402010; j++) _solve(b, j);
for(j = 402840; j < 402850; j++) _solve(b, j);
for(j = 403680; j < 403690; j++) _solve(b, j);
for(j = 404520; j < 404530; j++) _solve(b, j);
for(j = 405360; j < 405370; j++) _solve(b, j);
for(j = 406200; j < 406210; j++) _solve(b, j);
for(j = 407040; j < 407050; j++) _solve(b, j);
for(j = 407880; j < 407890; j++) _solve(b, j);
for(j = 408720; j < 408730; j++) _solve(b, j);
for(j = 409560; j < 409570; j++) _solve(b, j);
for(j = 410400; j < 410410; j++) _solve(b, j);
for(j = 411240; j < 411250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 412080; j < 412090; j++) _solve(b, j);
for(j = 412920; j < 412930; j++) _solve(b, j);
for(j = 413760; j < 413770; j++) _solve(b, j);
for(j = 414600; j < 414610; j++) _solve(b, j);
for(j = 415440; j < 415450; j++) _solve(b, j);
for(j = 416280; j < 416290; j++) _solve(b, j);
for(j = 417120; j < 417130; j++) _solve(b, j);
for(j = 417960; j < 417970; j++) _solve(b, j);
for(j = 418800; j < 418810; j++) _solve(b, j);
for(j = 419640; j < 419650; j++) _solve(b, j);
for(j = 420480; j < 420490; j++) _solve(b, j);
for(j = 421320; j < 421330; j++) _solve(b, j);
for(j = 422160; j < 422170; j++) _solve(b, j);
for(j = 423000; j < 423010; j++) _solve(b, j);
for(j = 423840; j < 423850; j++) _solve(b, j);
for(j = 424680; j < 424690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 425520; j < 425530; j++) _solve(b, j);
for(j = 426360; j < 426370; j++) _solve(b, j);
for(j = 427200; j < 427210; j++) _solve(b, j);
for(j = 428040; j < 428050; j++) _solve(b, j);
for(j = 428880; j < 428890; j++) _solve(b, j);
for(j = 429720; j < 429730; j++) _solve(b, j);
for(j = 430560; j < 430570; j++) _solve(b, j);
for(j = 431400; j < 431410; j++) _solve(b, j);
for(j = 432240; j < 432250; j++) _solve(b, j);
for(j = 433080; j < 433090; j++) _solve(b, j);
for(j = 433920; j < 433930; j++) _solve(b, j);
for(j = 434760; j < 434770; j++) _solve(b, j);
for(j = 435600; j < 435610; j++) _solve(b, j);
for(j = 436440; j < 436450; j++) _solve(b, j);
for(j = 437280; j < 437290; j++) _solve(b, j);
for(j = 438120; j < 438130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 438960; j < 438970; j++) _solve(b, j);
for(j = 439800; j < 439810; j++) _solve(b, j);
for(j = 440640; j < 440650; j++) _solve(b, j);
for(j = 441480; j < 441490; j++) _solve(b, j);
for(j = 442320; j < 442330; j++) _solve(b, j);
for(j = 443160; j < 443170; j++) _solve(b, j);
for(j = 444000; j < 444010; j++) _solve(b, j);
for(j = 444840; j < 444850; j++) _solve(b, j);
for(j = 445680; j < 445690; j++) _solve(b, j);
for(j = 446520; j < 446530; j++) _solve(b, j);
for(j = 447360; j < 447370; j++) _solve(b, j);
for(j = 448200; j < 448210; j++) _solve(b, j);
for(j = 449040; j < 449050; j++) _solve(b, j);
for(j = 449880; j < 449890; j++) _solve(b, j);
for(j = 450720; j < 450730; j++) _solve(b, j);
for(j = 451560; j < 451570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 452400; j < 452410; j++) _solve(b, j);
for(j = 453240; j < 453250; j++) _solve(b, j);
for(j = 454080; j < 454090; j++) _solve(b, j);
for(j = 454920; j < 454930; j++) _solve(b, j);
for(j = 455760; j < 455770; j++) _solve(b, j);
for(j = 456600; j < 456610; j++) _solve(b, j);
for(j = 457440; j < 457450; j++) _solve(b, j);
for(j = 458280; j < 458290; j++) _solve(b, j);
for(j = 459120; j < 459130; j++) _solve(b, j);
for(j = 459960; j < 459970; j++) _solve(b, j);
for(j = 460800; j < 460810; j++) _solve(b, j);
for(j = 461640; j < 461650; j++) _solve(b, j);
for(j = 462480; j < 462490; j++) _solve(b, j);
for(j = 463320; j < 463330; j++) _solve(b, j);
for(j = 464160; j < 464170; j++) _solve(b, j);
for(j = 465000; j < 465010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 465840; j < 465850; j++) _solve(b, j);
for(j = 466680; j < 466690; j++) _solve(b, j);
for(j = 467520; j < 467530; j++) _solve(b, j);
for(j = 468360; j < 468370; j++) _solve(b, j);
for(j = 469200; j < 469210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 399490; j < 399500; j++) _solve(b, j);
for(j = 400330; j < 400340; j++) _solve(b, j);
for(j = 401170; j < 401180; j++) _solve(b, j);
for(j = 402010; j < 402020; j++) _solve(b, j);
for(j = 402850; j < 402860; j++) _solve(b, j);
for(j = 403690; j < 403700; j++) _solve(b, j);
for(j = 404530; j < 404540; j++) _solve(b, j);
for(j = 405370; j < 405380; j++) _solve(b, j);
for(j = 406210; j < 406220; j++) _solve(b, j);
for(j = 407050; j < 407060; j++) _solve(b, j);
for(j = 407890; j < 407900; j++) _solve(b, j);
for(j = 408730; j < 408740; j++) _solve(b, j);
for(j = 409570; j < 409580; j++) _solve(b, j);
for(j = 410410; j < 410420; j++) _solve(b, j);
for(j = 411250; j < 411260; j++) _solve(b, j);
for(j = 412090; j < 412100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 412930; j < 412940; j++) _solve(b, j);
for(j = 413770; j < 413780; j++) _solve(b, j);
for(j = 414610; j < 414620; j++) _solve(b, j);
for(j = 415450; j < 415460; j++) _solve(b, j);
for(j = 416290; j < 416300; j++) _solve(b, j);
for(j = 417130; j < 417140; j++) _solve(b, j);
for(j = 417970; j < 417980; j++) _solve(b, j);
for(j = 418810; j < 418820; j++) _solve(b, j);
for(j = 419650; j < 419660; j++) _solve(b, j);
for(j = 420490; j < 420500; j++) _solve(b, j);
for(j = 421330; j < 421340; j++) _solve(b, j);
for(j = 422170; j < 422180; j++) _solve(b, j);
for(j = 423010; j < 423020; j++) _solve(b, j);
for(j = 423850; j < 423860; j++) _solve(b, j);
for(j = 424690; j < 424700; j++) _solve(b, j);
for(j = 425530; j < 425540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 426370; j < 426380; j++) _solve(b, j);
for(j = 427210; j < 427220; j++) _solve(b, j);
for(j = 428050; j < 428060; j++) _solve(b, j);
for(j = 428890; j < 428900; j++) _solve(b, j);
for(j = 429730; j < 429740; j++) _solve(b, j);
for(j = 430570; j < 430580; j++) _solve(b, j);
for(j = 431410; j < 431420; j++) _solve(b, j);
for(j = 432250; j < 432260; j++) _solve(b, j);
for(j = 433090; j < 433100; j++) _solve(b, j);
for(j = 433930; j < 433940; j++) _solve(b, j);
for(j = 434770; j < 434780; j++) _solve(b, j);
for(j = 435610; j < 435620; j++) _solve(b, j);
for(j = 436450; j < 436460; j++) _solve(b, j);
for(j = 437290; j < 437300; j++) _solve(b, j);
for(j = 438130; j < 438140; j++) _solve(b, j);
for(j = 438970; j < 438980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 439810; j < 439820; j++) _solve(b, j);
for(j = 440650; j < 440660; j++) _solve(b, j);
for(j = 441490; j < 441500; j++) _solve(b, j);
for(j = 442330; j < 442340; j++) _solve(b, j);
for(j = 443170; j < 443180; j++) _solve(b, j);
for(j = 444010; j < 444020; j++) _solve(b, j);
for(j = 444850; j < 444860; j++) _solve(b, j);
for(j = 445690; j < 445700; j++) _solve(b, j);
for(j = 446530; j < 446540; j++) _solve(b, j);
for(j = 447370; j < 447380; j++) _solve(b, j);
for(j = 448210; j < 448220; j++) _solve(b, j);
for(j = 449050; j < 449060; j++) _solve(b, j);
for(j = 449890; j < 449900; j++) _solve(b, j);
for(j = 450730; j < 450740; j++) _solve(b, j);
for(j = 451570; j < 451580; j++) _solve(b, j);
for(j = 452410; j < 452420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 453250; j < 453260; j++) _solve(b, j);
for(j = 454090; j < 454100; j++) _solve(b, j);
for(j = 454930; j < 454940; j++) _solve(b, j);
for(j = 455770; j < 455780; j++) _solve(b, j);
for(j = 456610; j < 456620; j++) _solve(b, j);
for(j = 457450; j < 457460; j++) _solve(b, j);
for(j = 458290; j < 458300; j++) _solve(b, j);
for(j = 459130; j < 459140; j++) _solve(b, j);
for(j = 459970; j < 459980; j++) _solve(b, j);
for(j = 460810; j < 460820; j++) _solve(b, j);
for(j = 461650; j < 461660; j++) _solve(b, j);
for(j = 462490; j < 462500; j++) _solve(b, j);
for(j = 463330; j < 463340; j++) _solve(b, j);
for(j = 464170; j < 464180; j++) _solve(b, j);
for(j = 465010; j < 465020; j++) _solve(b, j);
for(j = 465850; j < 465860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 466690; j < 466700; j++) _solve(b, j);
for(j = 467530; j < 467540; j++) _solve(b, j);
for(j = 468370; j < 468380; j++) _solve(b, j);
for(j = 469210; j < 469220; j++) _solve(b, j);
for(j = 470050; j < 470060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 400340; j < 400350; j++) _solve(b, j);
for(j = 401180; j < 401190; j++) _solve(b, j);
for(j = 402020; j < 402030; j++) _solve(b, j);
for(j = 402860; j < 402870; j++) _solve(b, j);
for(j = 403700; j < 403710; j++) _solve(b, j);
for(j = 404540; j < 404550; j++) _solve(b, j);
for(j = 405380; j < 405390; j++) _solve(b, j);
for(j = 406220; j < 406230; j++) _solve(b, j);
for(j = 407060; j < 407070; j++) _solve(b, j);
for(j = 407900; j < 407910; j++) _solve(b, j);
for(j = 408740; j < 408750; j++) _solve(b, j);
for(j = 409580; j < 409590; j++) _solve(b, j);
for(j = 410420; j < 410430; j++) _solve(b, j);
for(j = 411260; j < 411270; j++) _solve(b, j);
for(j = 412100; j < 412110; j++) _solve(b, j);
for(j = 412940; j < 412950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 413780; j < 413790; j++) _solve(b, j);
for(j = 414620; j < 414630; j++) _solve(b, j);
for(j = 415460; j < 415470; j++) _solve(b, j);
for(j = 416300; j < 416310; j++) _solve(b, j);
for(j = 417140; j < 417150; j++) _solve(b, j);
for(j = 417980; j < 417990; j++) _solve(b, j);
for(j = 418820; j < 418830; j++) _solve(b, j);
for(j = 419660; j < 419670; j++) _solve(b, j);
for(j = 420500; j < 420510; j++) _solve(b, j);
for(j = 421340; j < 421350; j++) _solve(b, j);
for(j = 422180; j < 422190; j++) _solve(b, j);
for(j = 423020; j < 423030; j++) _solve(b, j);
for(j = 423860; j < 423870; j++) _solve(b, j);
for(j = 424700; j < 424710; j++) _solve(b, j);
for(j = 425540; j < 425550; j++) _solve(b, j);
for(j = 426380; j < 426390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 427220; j < 427230; j++) _solve(b, j);
for(j = 428060; j < 428070; j++) _solve(b, j);
for(j = 428900; j < 428910; j++) _solve(b, j);
for(j = 429740; j < 429750; j++) _solve(b, j);
for(j = 430580; j < 430590; j++) _solve(b, j);
for(j = 431420; j < 431430; j++) _solve(b, j);
for(j = 432260; j < 432270; j++) _solve(b, j);
for(j = 433100; j < 433110; j++) _solve(b, j);
for(j = 433940; j < 433950; j++) _solve(b, j);
for(j = 434780; j < 434790; j++) _solve(b, j);
for(j = 435620; j < 435630; j++) _solve(b, j);
for(j = 436460; j < 436470; j++) _solve(b, j);
for(j = 437300; j < 437310; j++) _solve(b, j);
for(j = 438140; j < 438150; j++) _solve(b, j);
for(j = 438980; j < 438990; j++) _solve(b, j);
for(j = 439820; j < 439830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 440660; j < 440670; j++) _solve(b, j);
for(j = 441500; j < 441510; j++) _solve(b, j);
for(j = 442340; j < 442350; j++) _solve(b, j);
for(j = 443180; j < 443190; j++) _solve(b, j);
for(j = 444020; j < 444030; j++) _solve(b, j);
for(j = 444860; j < 444870; j++) _solve(b, j);
for(j = 445700; j < 445710; j++) _solve(b, j);
for(j = 446540; j < 446550; j++) _solve(b, j);
for(j = 447380; j < 447390; j++) _solve(b, j);
for(j = 448220; j < 448230; j++) _solve(b, j);
for(j = 449060; j < 449070; j++) _solve(b, j);
for(j = 449900; j < 449910; j++) _solve(b, j);
for(j = 450740; j < 450750; j++) _solve(b, j);
for(j = 451580; j < 451590; j++) _solve(b, j);
for(j = 452420; j < 452430; j++) _solve(b, j);
for(j = 453260; j < 453270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 454100; j < 454110; j++) _solve(b, j);
for(j = 454940; j < 454950; j++) _solve(b, j);
for(j = 455780; j < 455790; j++) _solve(b, j);
for(j = 456620; j < 456630; j++) _solve(b, j);
for(j = 457460; j < 457470; j++) _solve(b, j);
for(j = 458300; j < 458310; j++) _solve(b, j);
for(j = 459140; j < 459150; j++) _solve(b, j);
for(j = 459980; j < 459990; j++) _solve(b, j);
for(j = 460820; j < 460830; j++) _solve(b, j);
for(j = 461660; j < 461670; j++) _solve(b, j);
for(j = 462500; j < 462510; j++) _solve(b, j);
for(j = 463340; j < 463350; j++) _solve(b, j);
for(j = 464180; j < 464190; j++) _solve(b, j);
for(j = 465020; j < 465030; j++) _solve(b, j);
for(j = 465860; j < 465870; j++) _solve(b, j);
for(j = 466700; j < 466710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 467540; j < 467550; j++) _solve(b, j);
for(j = 468380; j < 468390; j++) _solve(b, j);
for(j = 469220; j < 469230; j++) _solve(b, j);
for(j = 470060; j < 470070; j++) _solve(b, j);
for(j = 470900; j < 470910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 401190; j < 401200; j++) _solve(b, j);
for(j = 402030; j < 402040; j++) _solve(b, j);
for(j = 402870; j < 402880; j++) _solve(b, j);
for(j = 403710; j < 403720; j++) _solve(b, j);
for(j = 404550; j < 404560; j++) _solve(b, j);
for(j = 405390; j < 405400; j++) _solve(b, j);
for(j = 406230; j < 406240; j++) _solve(b, j);
for(j = 407070; j < 407080; j++) _solve(b, j);
for(j = 407910; j < 407920; j++) _solve(b, j);
for(j = 408750; j < 408760; j++) _solve(b, j);
for(j = 409590; j < 409600; j++) _solve(b, j);
for(j = 410430; j < 410440; j++) _solve(b, j);
for(j = 411270; j < 411280; j++) _solve(b, j);
for(j = 412110; j < 412120; j++) _solve(b, j);
for(j = 412950; j < 412960; j++) _solve(b, j);
for(j = 413790; j < 413800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 414630; j < 414640; j++) _solve(b, j);
for(j = 415470; j < 415480; j++) _solve(b, j);
for(j = 416310; j < 416320; j++) _solve(b, j);
for(j = 417150; j < 417160; j++) _solve(b, j);
for(j = 417990; j < 418000; j++) _solve(b, j);
for(j = 418830; j < 418840; j++) _solve(b, j);
for(j = 419670; j < 419680; j++) _solve(b, j);
for(j = 420510; j < 420520; j++) _solve(b, j);
for(j = 421350; j < 421360; j++) _solve(b, j);
for(j = 422190; j < 422200; j++) _solve(b, j);
for(j = 423030; j < 423040; j++) _solve(b, j);
for(j = 423870; j < 423880; j++) _solve(b, j);
for(j = 424710; j < 424720; j++) _solve(b, j);
for(j = 425550; j < 425560; j++) _solve(b, j);
for(j = 426390; j < 426400; j++) _solve(b, j);
for(j = 427230; j < 427240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 428070; j < 428080; j++) _solve(b, j);
for(j = 428910; j < 428920; j++) _solve(b, j);
for(j = 429750; j < 429760; j++) _solve(b, j);
for(j = 430590; j < 430600; j++) _solve(b, j);
for(j = 431430; j < 431440; j++) _solve(b, j);
for(j = 432270; j < 432280; j++) _solve(b, j);
for(j = 433110; j < 433120; j++) _solve(b, j);
for(j = 433950; j < 433960; j++) _solve(b, j);
for(j = 434790; j < 434800; j++) _solve(b, j);
for(j = 435630; j < 435640; j++) _solve(b, j);
for(j = 436470; j < 436480; j++) _solve(b, j);
for(j = 437310; j < 437320; j++) _solve(b, j);
for(j = 438150; j < 438160; j++) _solve(b, j);
for(j = 438990; j < 439000; j++) _solve(b, j);
for(j = 439830; j < 439840; j++) _solve(b, j);
for(j = 440670; j < 440680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 441510; j < 441520; j++) _solve(b, j);
for(j = 442350; j < 442360; j++) _solve(b, j);
for(j = 443190; j < 443200; j++) _solve(b, j);
for(j = 444030; j < 444040; j++) _solve(b, j);
for(j = 444870; j < 444880; j++) _solve(b, j);
for(j = 445710; j < 445720; j++) _solve(b, j);
for(j = 446550; j < 446560; j++) _solve(b, j);
for(j = 447390; j < 447400; j++) _solve(b, j);
for(j = 448230; j < 448240; j++) _solve(b, j);
for(j = 449070; j < 449080; j++) _solve(b, j);
for(j = 449910; j < 449920; j++) _solve(b, j);
for(j = 450750; j < 450760; j++) _solve(b, j);
for(j = 451590; j < 451600; j++) _solve(b, j);
for(j = 452430; j < 452440; j++) _solve(b, j);
for(j = 453270; j < 453280; j++) _solve(b, j);
for(j = 454110; j < 454120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 454950; j < 454960; j++) _solve(b, j);
for(j = 455790; j < 455800; j++) _solve(b, j);
for(j = 456630; j < 456640; j++) _solve(b, j);
for(j = 457470; j < 457480; j++) _solve(b, j);
for(j = 458310; j < 458320; j++) _solve(b, j);
for(j = 459150; j < 459160; j++) _solve(b, j);
for(j = 459990; j < 460000; j++) _solve(b, j);
for(j = 460830; j < 460840; j++) _solve(b, j);
for(j = 461670; j < 461680; j++) _solve(b, j);
for(j = 462510; j < 462520; j++) _solve(b, j);
for(j = 463350; j < 463360; j++) _solve(b, j);
for(j = 464190; j < 464200; j++) _solve(b, j);
for(j = 465030; j < 465040; j++) _solve(b, j);
for(j = 465870; j < 465880; j++) _solve(b, j);
for(j = 466710; j < 466720; j++) _solve(b, j);
for(j = 467550; j < 467560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 468390; j < 468400; j++) _solve(b, j);
for(j = 469230; j < 469240; j++) _solve(b, j);
for(j = 470070; j < 470080; j++) _solve(b, j);
for(j = 470910; j < 470920; j++) _solve(b, j);
for(j = 471750; j < 471760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 402040; j < 402050; j++) _solve(b, j);
for(j = 402880; j < 402890; j++) _solve(b, j);
for(j = 403720; j < 403730; j++) _solve(b, j);
for(j = 404560; j < 404570; j++) _solve(b, j);
for(j = 405400; j < 405410; j++) _solve(b, j);
for(j = 406240; j < 406250; j++) _solve(b, j);
for(j = 407080; j < 407090; j++) _solve(b, j);
for(j = 407920; j < 407930; j++) _solve(b, j);
for(j = 408760; j < 408770; j++) _solve(b, j);
for(j = 409600; j < 409610; j++) _solve(b, j);
for(j = 410440; j < 410450; j++) _solve(b, j);
for(j = 411280; j < 411290; j++) _solve(b, j);
for(j = 412120; j < 412130; j++) _solve(b, j);
for(j = 412960; j < 412970; j++) _solve(b, j);
for(j = 413800; j < 413810; j++) _solve(b, j);
for(j = 414640; j < 414650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 415480; j < 415490; j++) _solve(b, j);
for(j = 416320; j < 416330; j++) _solve(b, j);
for(j = 417160; j < 417170; j++) _solve(b, j);
for(j = 418000; j < 418010; j++) _solve(b, j);
for(j = 418840; j < 418850; j++) _solve(b, j);
for(j = 419680; j < 419690; j++) _solve(b, j);
for(j = 420520; j < 420530; j++) _solve(b, j);
for(j = 421360; j < 421370; j++) _solve(b, j);
for(j = 422200; j < 422210; j++) _solve(b, j);
for(j = 423040; j < 423050; j++) _solve(b, j);
for(j = 423880; j < 423890; j++) _solve(b, j);
for(j = 424720; j < 424730; j++) _solve(b, j);
for(j = 425560; j < 425570; j++) _solve(b, j);
for(j = 426400; j < 426410; j++) _solve(b, j);
for(j = 427240; j < 427250; j++) _solve(b, j);
for(j = 428080; j < 428090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 428920; j < 428930; j++) _solve(b, j);
for(j = 429760; j < 429770; j++) _solve(b, j);
for(j = 430600; j < 430610; j++) _solve(b, j);
for(j = 431440; j < 431450; j++) _solve(b, j);
for(j = 432280; j < 432290; j++) _solve(b, j);
for(j = 433120; j < 433130; j++) _solve(b, j);
for(j = 433960; j < 433970; j++) _solve(b, j);
for(j = 434800; j < 434810; j++) _solve(b, j);
for(j = 435640; j < 435650; j++) _solve(b, j);
for(j = 436480; j < 436490; j++) _solve(b, j);
for(j = 437320; j < 437330; j++) _solve(b, j);
for(j = 438160; j < 438170; j++) _solve(b, j);
for(j = 439000; j < 439010; j++) _solve(b, j);
for(j = 439840; j < 439850; j++) _solve(b, j);
for(j = 440680; j < 440690; j++) _solve(b, j);
for(j = 441520; j < 441530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 442360; j < 442370; j++) _solve(b, j);
for(j = 443200; j < 443210; j++) _solve(b, j);
for(j = 444040; j < 444050; j++) _solve(b, j);
for(j = 444880; j < 444890; j++) _solve(b, j);
for(j = 445720; j < 445730; j++) _solve(b, j);
for(j = 446560; j < 446570; j++) _solve(b, j);
for(j = 447400; j < 447410; j++) _solve(b, j);
for(j = 448240; j < 448250; j++) _solve(b, j);
for(j = 449080; j < 449090; j++) _solve(b, j);
for(j = 449920; j < 449930; j++) _solve(b, j);
for(j = 450760; j < 450770; j++) _solve(b, j);
for(j = 451600; j < 451610; j++) _solve(b, j);
for(j = 452440; j < 452450; j++) _solve(b, j);
for(j = 453280; j < 453290; j++) _solve(b, j);
for(j = 454120; j < 454130; j++) _solve(b, j);
for(j = 454960; j < 454970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 455800; j < 455810; j++) _solve(b, j);
for(j = 456640; j < 456650; j++) _solve(b, j);
for(j = 457480; j < 457490; j++) _solve(b, j);
for(j = 458320; j < 458330; j++) _solve(b, j);
for(j = 459160; j < 459170; j++) _solve(b, j);
for(j = 460000; j < 460010; j++) _solve(b, j);
for(j = 460840; j < 460850; j++) _solve(b, j);
for(j = 461680; j < 461690; j++) _solve(b, j);
for(j = 462520; j < 462530; j++) _solve(b, j);
for(j = 463360; j < 463370; j++) _solve(b, j);
for(j = 464200; j < 464210; j++) _solve(b, j);
for(j = 465040; j < 465050; j++) _solve(b, j);
for(j = 465880; j < 465890; j++) _solve(b, j);
for(j = 466720; j < 466730; j++) _solve(b, j);
for(j = 467560; j < 467570; j++) _solve(b, j);
for(j = 468400; j < 468410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 469240; j < 469250; j++) _solve(b, j);
for(j = 470080; j < 470090; j++) _solve(b, j);
for(j = 470920; j < 470930; j++) _solve(b, j);
for(j = 471760; j < 471770; j++) _solve(b, j);
for(j = 472600; j < 472610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 402890; j < 402900; j++) _solve(b, j);
for(j = 403730; j < 403740; j++) _solve(b, j);
for(j = 404570; j < 404580; j++) _solve(b, j);
for(j = 405410; j < 405420; j++) _solve(b, j);
for(j = 406250; j < 406260; j++) _solve(b, j);
for(j = 407090; j < 407100; j++) _solve(b, j);
for(j = 407930; j < 407940; j++) _solve(b, j);
for(j = 408770; j < 408780; j++) _solve(b, j);
for(j = 409610; j < 409620; j++) _solve(b, j);
for(j = 410450; j < 410460; j++) _solve(b, j);
for(j = 411290; j < 411300; j++) _solve(b, j);
for(j = 412130; j < 412140; j++) _solve(b, j);
for(j = 412970; j < 412980; j++) _solve(b, j);
for(j = 413810; j < 413820; j++) _solve(b, j);
for(j = 414650; j < 414660; j++) _solve(b, j);
for(j = 415490; j < 415500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 416330; j < 416340; j++) _solve(b, j);
for(j = 417170; j < 417180; j++) _solve(b, j);
for(j = 418010; j < 418020; j++) _solve(b, j);
for(j = 418850; j < 418860; j++) _solve(b, j);
for(j = 419690; j < 419700; j++) _solve(b, j);
for(j = 420530; j < 420540; j++) _solve(b, j);
for(j = 421370; j < 421380; j++) _solve(b, j);
for(j = 422210; j < 422220; j++) _solve(b, j);
for(j = 423050; j < 423060; j++) _solve(b, j);
for(j = 423890; j < 423900; j++) _solve(b, j);
for(j = 424730; j < 424740; j++) _solve(b, j);
for(j = 425570; j < 425580; j++) _solve(b, j);
for(j = 426410; j < 426420; j++) _solve(b, j);
for(j = 427250; j < 427260; j++) _solve(b, j);
for(j = 428090; j < 428100; j++) _solve(b, j);
for(j = 428930; j < 428940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 429770; j < 429780; j++) _solve(b, j);
for(j = 430610; j < 430620; j++) _solve(b, j);
for(j = 431450; j < 431460; j++) _solve(b, j);
for(j = 432290; j < 432300; j++) _solve(b, j);
for(j = 433130; j < 433140; j++) _solve(b, j);
for(j = 433970; j < 433980; j++) _solve(b, j);
for(j = 434810; j < 434820; j++) _solve(b, j);
for(j = 435650; j < 435660; j++) _solve(b, j);
for(j = 436490; j < 436500; j++) _solve(b, j);
for(j = 437330; j < 437340; j++) _solve(b, j);
for(j = 438170; j < 438180; j++) _solve(b, j);
for(j = 439010; j < 439020; j++) _solve(b, j);
for(j = 439850; j < 439860; j++) _solve(b, j);
for(j = 440690; j < 440700; j++) _solve(b, j);
for(j = 441530; j < 441540; j++) _solve(b, j);
for(j = 442370; j < 442380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 443210; j < 443220; j++) _solve(b, j);
for(j = 444050; j < 444060; j++) _solve(b, j);
for(j = 444890; j < 444900; j++) _solve(b, j);
for(j = 445730; j < 445740; j++) _solve(b, j);
for(j = 446570; j < 446580; j++) _solve(b, j);
for(j = 447410; j < 447420; j++) _solve(b, j);
for(j = 448250; j < 448260; j++) _solve(b, j);
for(j = 449090; j < 449100; j++) _solve(b, j);
for(j = 449930; j < 449940; j++) _solve(b, j);
for(j = 450770; j < 450780; j++) _solve(b, j);
for(j = 451610; j < 451620; j++) _solve(b, j);
for(j = 452450; j < 452460; j++) _solve(b, j);
for(j = 453290; j < 453300; j++) _solve(b, j);
for(j = 454130; j < 454140; j++) _solve(b, j);
for(j = 454970; j < 454980; j++) _solve(b, j);
for(j = 455810; j < 455820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 456650; j < 456660; j++) _solve(b, j);
for(j = 457490; j < 457500; j++) _solve(b, j);
for(j = 458330; j < 458340; j++) _solve(b, j);
for(j = 459170; j < 459180; j++) _solve(b, j);
for(j = 460010; j < 460020; j++) _solve(b, j);
for(j = 460850; j < 460860; j++) _solve(b, j);
for(j = 461690; j < 461700; j++) _solve(b, j);
for(j = 462530; j < 462540; j++) _solve(b, j);
for(j = 463370; j < 463380; j++) _solve(b, j);
for(j = 464210; j < 464220; j++) _solve(b, j);
for(j = 465050; j < 465060; j++) _solve(b, j);
for(j = 465890; j < 465900; j++) _solve(b, j);
for(j = 466730; j < 466740; j++) _solve(b, j);
for(j = 467570; j < 467580; j++) _solve(b, j);
for(j = 468410; j < 468420; j++) _solve(b, j);
for(j = 469250; j < 469260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 470090; j < 470100; j++) _solve(b, j);
for(j = 470930; j < 470940; j++) _solve(b, j);
for(j = 471770; j < 471780; j++) _solve(b, j);
for(j = 472610; j < 472620; j++) _solve(b, j);
for(j = 473450; j < 473460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 403740; j < 403750; j++) _solve(b, j);
for(j = 404580; j < 404590; j++) _solve(b, j);
for(j = 405420; j < 405430; j++) _solve(b, j);
for(j = 406260; j < 406270; j++) _solve(b, j);
for(j = 407100; j < 407110; j++) _solve(b, j);
for(j = 407940; j < 407950; j++) _solve(b, j);
for(j = 408780; j < 408790; j++) _solve(b, j);
for(j = 409620; j < 409630; j++) _solve(b, j);
for(j = 410460; j < 410470; j++) _solve(b, j);
for(j = 411300; j < 411310; j++) _solve(b, j);
for(j = 412140; j < 412150; j++) _solve(b, j);
for(j = 412980; j < 412990; j++) _solve(b, j);
for(j = 413820; j < 413830; j++) _solve(b, j);
for(j = 414660; j < 414670; j++) _solve(b, j);
for(j = 415500; j < 415510; j++) _solve(b, j);
for(j = 416340; j < 416350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 417180; j < 417190; j++) _solve(b, j);
for(j = 418020; j < 418030; j++) _solve(b, j);
for(j = 418860; j < 418870; j++) _solve(b, j);
for(j = 419700; j < 419710; j++) _solve(b, j);
for(j = 420540; j < 420550; j++) _solve(b, j);
for(j = 421380; j < 421390; j++) _solve(b, j);
for(j = 422220; j < 422230; j++) _solve(b, j);
for(j = 423060; j < 423070; j++) _solve(b, j);
for(j = 423900; j < 423910; j++) _solve(b, j);
for(j = 424740; j < 424750; j++) _solve(b, j);
for(j = 425580; j < 425590; j++) _solve(b, j);
for(j = 426420; j < 426430; j++) _solve(b, j);
for(j = 427260; j < 427270; j++) _solve(b, j);
for(j = 428100; j < 428110; j++) _solve(b, j);
for(j = 428940; j < 428950; j++) _solve(b, j);
for(j = 429780; j < 429790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 430620; j < 430630; j++) _solve(b, j);
for(j = 431460; j < 431470; j++) _solve(b, j);
for(j = 432300; j < 432310; j++) _solve(b, j);
for(j = 433140; j < 433150; j++) _solve(b, j);
for(j = 433980; j < 433990; j++) _solve(b, j);
for(j = 434820; j < 434830; j++) _solve(b, j);
for(j = 435660; j < 435670; j++) _solve(b, j);
for(j = 436500; j < 436510; j++) _solve(b, j);
for(j = 437340; j < 437350; j++) _solve(b, j);
for(j = 438180; j < 438190; j++) _solve(b, j);
for(j = 439020; j < 439030; j++) _solve(b, j);
for(j = 439860; j < 439870; j++) _solve(b, j);
for(j = 440700; j < 440710; j++) _solve(b, j);
for(j = 441540; j < 441550; j++) _solve(b, j);
for(j = 442380; j < 442390; j++) _solve(b, j);
for(j = 443220; j < 443230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 444060; j < 444070; j++) _solve(b, j);
for(j = 444900; j < 444910; j++) _solve(b, j);
for(j = 445740; j < 445750; j++) _solve(b, j);
for(j = 446580; j < 446590; j++) _solve(b, j);
for(j = 447420; j < 447430; j++) _solve(b, j);
for(j = 448260; j < 448270; j++) _solve(b, j);
for(j = 449100; j < 449110; j++) _solve(b, j);
for(j = 449940; j < 449950; j++) _solve(b, j);
for(j = 450780; j < 450790; j++) _solve(b, j);
for(j = 451620; j < 451630; j++) _solve(b, j);
for(j = 452460; j < 452470; j++) _solve(b, j);
for(j = 453300; j < 453310; j++) _solve(b, j);
for(j = 454140; j < 454150; j++) _solve(b, j);
for(j = 454980; j < 454990; j++) _solve(b, j);
for(j = 455820; j < 455830; j++) _solve(b, j);
for(j = 456660; j < 456670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 457500; j < 457510; j++) _solve(b, j);
for(j = 458340; j < 458350; j++) _solve(b, j);
for(j = 459180; j < 459190; j++) _solve(b, j);
for(j = 460020; j < 460030; j++) _solve(b, j);
for(j = 460860; j < 460870; j++) _solve(b, j);
for(j = 461700; j < 461710; j++) _solve(b, j);
for(j = 462540; j < 462550; j++) _solve(b, j);
for(j = 463380; j < 463390; j++) _solve(b, j);
for(j = 464220; j < 464230; j++) _solve(b, j);
for(j = 465060; j < 465070; j++) _solve(b, j);
for(j = 465900; j < 465910; j++) _solve(b, j);
for(j = 466740; j < 466750; j++) _solve(b, j);
for(j = 467580; j < 467590; j++) _solve(b, j);
for(j = 468420; j < 468430; j++) _solve(b, j);
for(j = 469260; j < 469270; j++) _solve(b, j);
for(j = 470100; j < 470110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 470940; j < 470950; j++) _solve(b, j);
for(j = 471780; j < 471790; j++) _solve(b, j);
for(j = 472620; j < 472630; j++) _solve(b, j);
for(j = 473460; j < 473470; j++) _solve(b, j);
for(j = 474300; j < 474310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 404590; j < 404600; j++) _solve(b, j);
for(j = 405430; j < 405440; j++) _solve(b, j);
for(j = 406270; j < 406280; j++) _solve(b, j);
for(j = 407110; j < 407120; j++) _solve(b, j);
for(j = 407950; j < 407960; j++) _solve(b, j);
for(j = 408790; j < 408800; j++) _solve(b, j);
for(j = 409630; j < 409640; j++) _solve(b, j);
for(j = 410470; j < 410480; j++) _solve(b, j);
for(j = 411310; j < 411320; j++) _solve(b, j);
for(j = 412150; j < 412160; j++) _solve(b, j);
for(j = 412990; j < 413000; j++) _solve(b, j);
for(j = 413830; j < 413840; j++) _solve(b, j);
for(j = 414670; j < 414680; j++) _solve(b, j);
for(j = 415510; j < 415520; j++) _solve(b, j);
for(j = 416350; j < 416360; j++) _solve(b, j);
for(j = 417190; j < 417200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 418030; j < 418040; j++) _solve(b, j);
for(j = 418870; j < 418880; j++) _solve(b, j);
for(j = 419710; j < 419720; j++) _solve(b, j);
for(j = 420550; j < 420560; j++) _solve(b, j);
for(j = 421390; j < 421400; j++) _solve(b, j);
for(j = 422230; j < 422240; j++) _solve(b, j);
for(j = 423070; j < 423080; j++) _solve(b, j);
for(j = 423910; j < 423920; j++) _solve(b, j);
for(j = 424750; j < 424760; j++) _solve(b, j);
for(j = 425590; j < 425600; j++) _solve(b, j);
for(j = 426430; j < 426440; j++) _solve(b, j);
for(j = 427270; j < 427280; j++) _solve(b, j);
for(j = 428110; j < 428120; j++) _solve(b, j);
for(j = 428950; j < 428960; j++) _solve(b, j);
for(j = 429790; j < 429800; j++) _solve(b, j);
for(j = 430630; j < 430640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 431470; j < 431480; j++) _solve(b, j);
for(j = 432310; j < 432320; j++) _solve(b, j);
for(j = 433150; j < 433160; j++) _solve(b, j);
for(j = 433990; j < 434000; j++) _solve(b, j);
for(j = 434830; j < 434840; j++) _solve(b, j);
for(j = 435670; j < 435680; j++) _solve(b, j);
for(j = 436510; j < 436520; j++) _solve(b, j);
for(j = 437350; j < 437360; j++) _solve(b, j);
for(j = 438190; j < 438200; j++) _solve(b, j);
for(j = 439030; j < 439040; j++) _solve(b, j);
for(j = 439870; j < 439880; j++) _solve(b, j);
for(j = 440710; j < 440720; j++) _solve(b, j);
for(j = 441550; j < 441560; j++) _solve(b, j);
for(j = 442390; j < 442400; j++) _solve(b, j);
for(j = 443230; j < 443240; j++) _solve(b, j);
for(j = 444070; j < 444080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 444910; j < 444920; j++) _solve(b, j);
for(j = 445750; j < 445760; j++) _solve(b, j);
for(j = 446590; j < 446600; j++) _solve(b, j);
for(j = 447430; j < 447440; j++) _solve(b, j);
for(j = 448270; j < 448280; j++) _solve(b, j);
for(j = 449110; j < 449120; j++) _solve(b, j);
for(j = 449950; j < 449960; j++) _solve(b, j);
for(j = 450790; j < 450800; j++) _solve(b, j);
for(j = 451630; j < 451640; j++) _solve(b, j);
for(j = 452470; j < 452480; j++) _solve(b, j);
for(j = 453310; j < 453320; j++) _solve(b, j);
for(j = 454150; j < 454160; j++) _solve(b, j);
for(j = 454990; j < 455000; j++) _solve(b, j);
for(j = 455830; j < 455840; j++) _solve(b, j);
for(j = 456670; j < 456680; j++) _solve(b, j);
for(j = 457510; j < 457520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 458350; j < 458360; j++) _solve(b, j);
for(j = 459190; j < 459200; j++) _solve(b, j);
for(j = 460030; j < 460040; j++) _solve(b, j);
for(j = 460870; j < 460880; j++) _solve(b, j);
for(j = 461710; j < 461720; j++) _solve(b, j);
for(j = 462550; j < 462560; j++) _solve(b, j);
for(j = 463390; j < 463400; j++) _solve(b, j);
for(j = 464230; j < 464240; j++) _solve(b, j);
for(j = 465070; j < 465080; j++) _solve(b, j);
for(j = 465910; j < 465920; j++) _solve(b, j);
for(j = 466750; j < 466760; j++) _solve(b, j);
for(j = 467590; j < 467600; j++) _solve(b, j);
for(j = 468430; j < 468440; j++) _solve(b, j);
for(j = 469270; j < 469280; j++) _solve(b, j);
for(j = 470110; j < 470120; j++) _solve(b, j);
for(j = 470950; j < 470960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 471790; j < 471800; j++) _solve(b, j);
for(j = 472630; j < 472640; j++) _solve(b, j);
for(j = 473470; j < 473480; j++) _solve(b, j);
for(j = 474310; j < 474320; j++) _solve(b, j);
for(j = 475150; j < 475160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 405440; j < 405450; j++) _solve(b, j);
for(j = 406280; j < 406290; j++) _solve(b, j);
for(j = 407120; j < 407130; j++) _solve(b, j);
for(j = 407960; j < 407970; j++) _solve(b, j);
for(j = 408800; j < 408810; j++) _solve(b, j);
for(j = 409640; j < 409650; j++) _solve(b, j);
for(j = 410480; j < 410490; j++) _solve(b, j);
for(j = 411320; j < 411330; j++) _solve(b, j);
for(j = 412160; j < 412170; j++) _solve(b, j);
for(j = 413000; j < 413010; j++) _solve(b, j);
for(j = 413840; j < 413850; j++) _solve(b, j);
for(j = 414680; j < 414690; j++) _solve(b, j);
for(j = 415520; j < 415530; j++) _solve(b, j);
for(j = 416360; j < 416370; j++) _solve(b, j);
for(j = 417200; j < 417210; j++) _solve(b, j);
for(j = 418040; j < 418050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 418880; j < 418890; j++) _solve(b, j);
for(j = 419720; j < 419730; j++) _solve(b, j);
for(j = 420560; j < 420570; j++) _solve(b, j);
for(j = 421400; j < 421410; j++) _solve(b, j);
for(j = 422240; j < 422250; j++) _solve(b, j);
for(j = 423080; j < 423090; j++) _solve(b, j);
for(j = 423920; j < 423930; j++) _solve(b, j);
for(j = 424760; j < 424770; j++) _solve(b, j);
for(j = 425600; j < 425610; j++) _solve(b, j);
for(j = 426440; j < 426450; j++) _solve(b, j);
for(j = 427280; j < 427290; j++) _solve(b, j);
for(j = 428120; j < 428130; j++) _solve(b, j);
for(j = 428960; j < 428970; j++) _solve(b, j);
for(j = 429800; j < 429810; j++) _solve(b, j);
for(j = 430640; j < 430650; j++) _solve(b, j);
for(j = 431480; j < 431490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 432320; j < 432330; j++) _solve(b, j);
for(j = 433160; j < 433170; j++) _solve(b, j);
for(j = 434000; j < 434010; j++) _solve(b, j);
for(j = 434840; j < 434850; j++) _solve(b, j);
for(j = 435680; j < 435690; j++) _solve(b, j);
for(j = 436520; j < 436530; j++) _solve(b, j);
for(j = 437360; j < 437370; j++) _solve(b, j);
for(j = 438200; j < 438210; j++) _solve(b, j);
for(j = 439040; j < 439050; j++) _solve(b, j);
for(j = 439880; j < 439890; j++) _solve(b, j);
for(j = 440720; j < 440730; j++) _solve(b, j);
for(j = 441560; j < 441570; j++) _solve(b, j);
for(j = 442400; j < 442410; j++) _solve(b, j);
for(j = 443240; j < 443250; j++) _solve(b, j);
for(j = 444080; j < 444090; j++) _solve(b, j);
for(j = 444920; j < 444930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 445760; j < 445770; j++) _solve(b, j);
for(j = 446600; j < 446610; j++) _solve(b, j);
for(j = 447440; j < 447450; j++) _solve(b, j);
for(j = 448280; j < 448290; j++) _solve(b, j);
for(j = 449120; j < 449130; j++) _solve(b, j);
for(j = 449960; j < 449970; j++) _solve(b, j);
for(j = 450800; j < 450810; j++) _solve(b, j);
for(j = 451640; j < 451650; j++) _solve(b, j);
for(j = 452480; j < 452490; j++) _solve(b, j);
for(j = 453320; j < 453330; j++) _solve(b, j);
for(j = 454160; j < 454170; j++) _solve(b, j);
for(j = 455000; j < 455010; j++) _solve(b, j);
for(j = 455840; j < 455850; j++) _solve(b, j);
for(j = 456680; j < 456690; j++) _solve(b, j);
for(j = 457520; j < 457530; j++) _solve(b, j);
for(j = 458360; j < 458370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 459200; j < 459210; j++) _solve(b, j);
for(j = 460040; j < 460050; j++) _solve(b, j);
for(j = 460880; j < 460890; j++) _solve(b, j);
for(j = 461720; j < 461730; j++) _solve(b, j);
for(j = 462560; j < 462570; j++) _solve(b, j);
for(j = 463400; j < 463410; j++) _solve(b, j);
for(j = 464240; j < 464250; j++) _solve(b, j);
for(j = 465080; j < 465090; j++) _solve(b, j);
for(j = 465920; j < 465930; j++) _solve(b, j);
for(j = 466760; j < 466770; j++) _solve(b, j);
for(j = 467600; j < 467610; j++) _solve(b, j);
for(j = 468440; j < 468450; j++) _solve(b, j);
for(j = 469280; j < 469290; j++) _solve(b, j);
for(j = 470120; j < 470130; j++) _solve(b, j);
for(j = 470960; j < 470970; j++) _solve(b, j);
for(j = 471800; j < 471810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 472640; j < 472650; j++) _solve(b, j);
for(j = 473480; j < 473490; j++) _solve(b, j);
for(j = 474320; j < 474330; j++) _solve(b, j);
for(j = 475160; j < 475170; j++) _solve(b, j);
for(j = 476000; j < 476010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 406290; j < 406300; j++) _solve(b, j);
for(j = 407130; j < 407140; j++) _solve(b, j);
for(j = 407970; j < 407980; j++) _solve(b, j);
for(j = 408810; j < 408820; j++) _solve(b, j);
for(j = 409650; j < 409660; j++) _solve(b, j);
for(j = 410490; j < 410500; j++) _solve(b, j);
for(j = 411330; j < 411340; j++) _solve(b, j);
for(j = 412170; j < 412180; j++) _solve(b, j);
for(j = 413010; j < 413020; j++) _solve(b, j);
for(j = 413850; j < 413860; j++) _solve(b, j);
for(j = 414690; j < 414700; j++) _solve(b, j);
for(j = 415530; j < 415540; j++) _solve(b, j);
for(j = 416370; j < 416380; j++) _solve(b, j);
for(j = 417210; j < 417220; j++) _solve(b, j);
for(j = 418050; j < 418060; j++) _solve(b, j);
for(j = 418890; j < 418900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 419730; j < 419740; j++) _solve(b, j);
for(j = 420570; j < 420580; j++) _solve(b, j);
for(j = 421410; j < 421420; j++) _solve(b, j);
for(j = 422250; j < 422260; j++) _solve(b, j);
for(j = 423090; j < 423100; j++) _solve(b, j);
for(j = 423930; j < 423940; j++) _solve(b, j);
for(j = 424770; j < 424780; j++) _solve(b, j);
for(j = 425610; j < 425620; j++) _solve(b, j);
for(j = 426450; j < 426460; j++) _solve(b, j);
for(j = 427290; j < 427300; j++) _solve(b, j);
for(j = 428130; j < 428140; j++) _solve(b, j);
for(j = 428970; j < 428980; j++) _solve(b, j);
for(j = 429810; j < 429820; j++) _solve(b, j);
for(j = 430650; j < 430660; j++) _solve(b, j);
for(j = 431490; j < 431500; j++) _solve(b, j);
for(j = 432330; j < 432340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 433170; j < 433180; j++) _solve(b, j);
for(j = 434010; j < 434020; j++) _solve(b, j);
for(j = 434850; j < 434860; j++) _solve(b, j);
for(j = 435690; j < 435700; j++) _solve(b, j);
for(j = 436530; j < 436540; j++) _solve(b, j);
for(j = 437370; j < 437380; j++) _solve(b, j);
for(j = 438210; j < 438220; j++) _solve(b, j);
for(j = 439050; j < 439060; j++) _solve(b, j);
for(j = 439890; j < 439900; j++) _solve(b, j);
for(j = 440730; j < 440740; j++) _solve(b, j);
for(j = 441570; j < 441580; j++) _solve(b, j);
for(j = 442410; j < 442420; j++) _solve(b, j);
for(j = 443250; j < 443260; j++) _solve(b, j);
for(j = 444090; j < 444100; j++) _solve(b, j);
for(j = 444930; j < 444940; j++) _solve(b, j);
for(j = 445770; j < 445780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 446610; j < 446620; j++) _solve(b, j);
for(j = 447450; j < 447460; j++) _solve(b, j);
for(j = 448290; j < 448300; j++) _solve(b, j);
for(j = 449130; j < 449140; j++) _solve(b, j);
for(j = 449970; j < 449980; j++) _solve(b, j);
for(j = 450810; j < 450820; j++) _solve(b, j);
for(j = 451650; j < 451660; j++) _solve(b, j);
for(j = 452490; j < 452500; j++) _solve(b, j);
for(j = 453330; j < 453340; j++) _solve(b, j);
for(j = 454170; j < 454180; j++) _solve(b, j);
for(j = 455010; j < 455020; j++) _solve(b, j);
for(j = 455850; j < 455860; j++) _solve(b, j);
for(j = 456690; j < 456700; j++) _solve(b, j);
for(j = 457530; j < 457540; j++) _solve(b, j);
for(j = 458370; j < 458380; j++) _solve(b, j);
for(j = 459210; j < 459220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 460050; j < 460060; j++) _solve(b, j);
for(j = 460890; j < 460900; j++) _solve(b, j);
for(j = 461730; j < 461740; j++) _solve(b, j);
for(j = 462570; j < 462580; j++) _solve(b, j);
for(j = 463410; j < 463420; j++) _solve(b, j);
for(j = 464250; j < 464260; j++) _solve(b, j);
for(j = 465090; j < 465100; j++) _solve(b, j);
for(j = 465930; j < 465940; j++) _solve(b, j);
for(j = 466770; j < 466780; j++) _solve(b, j);
for(j = 467610; j < 467620; j++) _solve(b, j);
for(j = 468450; j < 468460; j++) _solve(b, j);
for(j = 469290; j < 469300; j++) _solve(b, j);
for(j = 470130; j < 470140; j++) _solve(b, j);
for(j = 470970; j < 470980; j++) _solve(b, j);
for(j = 471810; j < 471820; j++) _solve(b, j);
for(j = 472650; j < 472660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 473490; j < 473500; j++) _solve(b, j);
for(j = 474330; j < 474340; j++) _solve(b, j);
for(j = 475170; j < 475180; j++) _solve(b, j);
for(j = 476010; j < 476020; j++) _solve(b, j);
for(j = 476850; j < 476860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 407140; j < 407150; j++) _solve(b, j);
for(j = 407980; j < 407990; j++) _solve(b, j);
for(j = 408820; j < 408830; j++) _solve(b, j);
for(j = 409660; j < 409670; j++) _solve(b, j);
for(j = 410500; j < 410510; j++) _solve(b, j);
for(j = 411340; j < 411350; j++) _solve(b, j);
for(j = 412180; j < 412190; j++) _solve(b, j);
for(j = 413020; j < 413030; j++) _solve(b, j);
for(j = 413860; j < 413870; j++) _solve(b, j);
for(j = 414700; j < 414710; j++) _solve(b, j);
for(j = 415540; j < 415550; j++) _solve(b, j);
for(j = 416380; j < 416390; j++) _solve(b, j);
for(j = 417220; j < 417230; j++) _solve(b, j);
for(j = 418060; j < 418070; j++) _solve(b, j);
for(j = 418900; j < 418910; j++) _solve(b, j);
for(j = 419740; j < 419750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 420580; j < 420590; j++) _solve(b, j);
for(j = 421420; j < 421430; j++) _solve(b, j);
for(j = 422260; j < 422270; j++) _solve(b, j);
for(j = 423100; j < 423110; j++) _solve(b, j);
for(j = 423940; j < 423950; j++) _solve(b, j);
for(j = 424780; j < 424790; j++) _solve(b, j);
for(j = 425620; j < 425630; j++) _solve(b, j);
for(j = 426460; j < 426470; j++) _solve(b, j);
for(j = 427300; j < 427310; j++) _solve(b, j);
for(j = 428140; j < 428150; j++) _solve(b, j);
for(j = 428980; j < 428990; j++) _solve(b, j);
for(j = 429820; j < 429830; j++) _solve(b, j);
for(j = 430660; j < 430670; j++) _solve(b, j);
for(j = 431500; j < 431510; j++) _solve(b, j);
for(j = 432340; j < 432350; j++) _solve(b, j);
for(j = 433180; j < 433190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 434020; j < 434030; j++) _solve(b, j);
for(j = 434860; j < 434870; j++) _solve(b, j);
for(j = 435700; j < 435710; j++) _solve(b, j);
for(j = 436540; j < 436550; j++) _solve(b, j);
for(j = 437380; j < 437390; j++) _solve(b, j);
for(j = 438220; j < 438230; j++) _solve(b, j);
for(j = 439060; j < 439070; j++) _solve(b, j);
for(j = 439900; j < 439910; j++) _solve(b, j);
for(j = 440740; j < 440750; j++) _solve(b, j);
for(j = 441580; j < 441590; j++) _solve(b, j);
for(j = 442420; j < 442430; j++) _solve(b, j);
for(j = 443260; j < 443270; j++) _solve(b, j);
for(j = 444100; j < 444110; j++) _solve(b, j);
for(j = 444940; j < 444950; j++) _solve(b, j);
for(j = 445780; j < 445790; j++) _solve(b, j);
for(j = 446620; j < 446630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 447460; j < 447470; j++) _solve(b, j);
for(j = 448300; j < 448310; j++) _solve(b, j);
for(j = 449140; j < 449150; j++) _solve(b, j);
for(j = 449980; j < 449990; j++) _solve(b, j);
for(j = 450820; j < 450830; j++) _solve(b, j);
for(j = 451660; j < 451670; j++) _solve(b, j);
for(j = 452500; j < 452510; j++) _solve(b, j);
for(j = 453340; j < 453350; j++) _solve(b, j);
for(j = 454180; j < 454190; j++) _solve(b, j);
for(j = 455020; j < 455030; j++) _solve(b, j);
for(j = 455860; j < 455870; j++) _solve(b, j);
for(j = 456700; j < 456710; j++) _solve(b, j);
for(j = 457540; j < 457550; j++) _solve(b, j);
for(j = 458380; j < 458390; j++) _solve(b, j);
for(j = 459220; j < 459230; j++) _solve(b, j);
for(j = 460060; j < 460070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 460900; j < 460910; j++) _solve(b, j);
for(j = 461740; j < 461750; j++) _solve(b, j);
for(j = 462580; j < 462590; j++) _solve(b, j);
for(j = 463420; j < 463430; j++) _solve(b, j);
for(j = 464260; j < 464270; j++) _solve(b, j);
for(j = 465100; j < 465110; j++) _solve(b, j);
for(j = 465940; j < 465950; j++) _solve(b, j);
for(j = 466780; j < 466790; j++) _solve(b, j);
for(j = 467620; j < 467630; j++) _solve(b, j);
for(j = 468460; j < 468470; j++) _solve(b, j);
for(j = 469300; j < 469310; j++) _solve(b, j);
for(j = 470140; j < 470150; j++) _solve(b, j);
for(j = 470980; j < 470990; j++) _solve(b, j);
for(j = 471820; j < 471830; j++) _solve(b, j);
for(j = 472660; j < 472670; j++) _solve(b, j);
for(j = 473500; j < 473510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 474340; j < 474350; j++) _solve(b, j);
for(j = 475180; j < 475190; j++) _solve(b, j);
for(j = 476020; j < 476030; j++) _solve(b, j);
for(j = 476860; j < 476870; j++) _solve(b, j);
for(j = 477700; j < 477710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 407990; j < 408000; j++) _solve(b, j);
for(j = 408830; j < 408840; j++) _solve(b, j);
for(j = 409670; j < 409680; j++) _solve(b, j);
for(j = 410510; j < 410520; j++) _solve(b, j);
for(j = 411350; j < 411360; j++) _solve(b, j);
for(j = 412190; j < 412200; j++) _solve(b, j);
for(j = 413030; j < 413040; j++) _solve(b, j);
for(j = 413870; j < 413880; j++) _solve(b, j);
for(j = 414710; j < 414720; j++) _solve(b, j);
for(j = 415550; j < 415560; j++) _solve(b, j);
for(j = 416390; j < 416400; j++) _solve(b, j);
for(j = 417230; j < 417240; j++) _solve(b, j);
for(j = 418070; j < 418080; j++) _solve(b, j);
for(j = 418910; j < 418920; j++) _solve(b, j);
for(j = 419750; j < 419760; j++) _solve(b, j);
for(j = 420590; j < 420600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 421430; j < 421440; j++) _solve(b, j);
for(j = 422270; j < 422280; j++) _solve(b, j);
for(j = 423110; j < 423120; j++) _solve(b, j);
for(j = 423950; j < 423960; j++) _solve(b, j);
for(j = 424790; j < 424800; j++) _solve(b, j);
for(j = 425630; j < 425640; j++) _solve(b, j);
for(j = 426470; j < 426480; j++) _solve(b, j);
for(j = 427310; j < 427320; j++) _solve(b, j);
for(j = 428150; j < 428160; j++) _solve(b, j);
for(j = 428990; j < 429000; j++) _solve(b, j);
for(j = 429830; j < 429840; j++) _solve(b, j);
for(j = 430670; j < 430680; j++) _solve(b, j);
for(j = 431510; j < 431520; j++) _solve(b, j);
for(j = 432350; j < 432360; j++) _solve(b, j);
for(j = 433190; j < 433200; j++) _solve(b, j);
for(j = 434030; j < 434040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 434870; j < 434880; j++) _solve(b, j);
for(j = 435710; j < 435720; j++) _solve(b, j);
for(j = 436550; j < 436560; j++) _solve(b, j);
for(j = 437390; j < 437400; j++) _solve(b, j);
for(j = 438230; j < 438240; j++) _solve(b, j);
for(j = 439070; j < 439080; j++) _solve(b, j);
for(j = 439910; j < 439920; j++) _solve(b, j);
for(j = 440750; j < 440760; j++) _solve(b, j);
for(j = 441590; j < 441600; j++) _solve(b, j);
for(j = 442430; j < 442440; j++) _solve(b, j);
for(j = 443270; j < 443280; j++) _solve(b, j);
for(j = 444110; j < 444120; j++) _solve(b, j);
for(j = 444950; j < 444960; j++) _solve(b, j);
for(j = 445790; j < 445800; j++) _solve(b, j);
for(j = 446630; j < 446640; j++) _solve(b, j);
for(j = 447470; j < 447480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 448310; j < 448320; j++) _solve(b, j);
for(j = 449150; j < 449160; j++) _solve(b, j);
for(j = 449990; j < 450000; j++) _solve(b, j);
for(j = 450830; j < 450840; j++) _solve(b, j);
for(j = 451670; j < 451680; j++) _solve(b, j);
for(j = 452510; j < 452520; j++) _solve(b, j);
for(j = 453350; j < 453360; j++) _solve(b, j);
for(j = 454190; j < 454200; j++) _solve(b, j);
for(j = 455030; j < 455040; j++) _solve(b, j);
for(j = 455870; j < 455880; j++) _solve(b, j);
for(j = 456710; j < 456720; j++) _solve(b, j);
for(j = 457550; j < 457560; j++) _solve(b, j);
for(j = 458390; j < 458400; j++) _solve(b, j);
for(j = 459230; j < 459240; j++) _solve(b, j);
for(j = 460070; j < 460080; j++) _solve(b, j);
for(j = 460910; j < 460920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 461750; j < 461760; j++) _solve(b, j);
for(j = 462590; j < 462600; j++) _solve(b, j);
for(j = 463430; j < 463440; j++) _solve(b, j);
for(j = 464270; j < 464280; j++) _solve(b, j);
for(j = 465110; j < 465120; j++) _solve(b, j);
for(j = 465950; j < 465960; j++) _solve(b, j);
for(j = 466790; j < 466800; j++) _solve(b, j);
for(j = 467630; j < 467640; j++) _solve(b, j);
for(j = 468470; j < 468480; j++) _solve(b, j);
for(j = 469310; j < 469320; j++) _solve(b, j);
for(j = 470150; j < 470160; j++) _solve(b, j);
for(j = 470990; j < 471000; j++) _solve(b, j);
for(j = 471830; j < 471840; j++) _solve(b, j);
for(j = 472670; j < 472680; j++) _solve(b, j);
for(j = 473510; j < 473520; j++) _solve(b, j);
for(j = 474350; j < 474360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 475190; j < 475200; j++) _solve(b, j);
for(j = 476030; j < 476040; j++) _solve(b, j);
for(j = 476870; j < 476880; j++) _solve(b, j);
for(j = 477710; j < 477720; j++) _solve(b, j);
for(j = 478550; j < 478560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 408840; j < 408850; j++) _solve(b, j);
for(j = 409680; j < 409690; j++) _solve(b, j);
for(j = 410520; j < 410530; j++) _solve(b, j);
for(j = 411360; j < 411370; j++) _solve(b, j);
for(j = 412200; j < 412210; j++) _solve(b, j);
for(j = 413040; j < 413050; j++) _solve(b, j);
for(j = 413880; j < 413890; j++) _solve(b, j);
for(j = 414720; j < 414730; j++) _solve(b, j);
for(j = 415560; j < 415570; j++) _solve(b, j);
for(j = 416400; j < 416410; j++) _solve(b, j);
for(j = 417240; j < 417250; j++) _solve(b, j);
for(j = 418080; j < 418090; j++) _solve(b, j);
for(j = 418920; j < 418930; j++) _solve(b, j);
for(j = 419760; j < 419770; j++) _solve(b, j);
for(j = 420600; j < 420610; j++) _solve(b, j);
for(j = 421440; j < 421450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 422280; j < 422290; j++) _solve(b, j);
for(j = 423120; j < 423130; j++) _solve(b, j);
for(j = 423960; j < 423970; j++) _solve(b, j);
for(j = 424800; j < 424810; j++) _solve(b, j);
for(j = 425640; j < 425650; j++) _solve(b, j);
for(j = 426480; j < 426490; j++) _solve(b, j);
for(j = 427320; j < 427330; j++) _solve(b, j);
for(j = 428160; j < 428170; j++) _solve(b, j);
for(j = 429000; j < 429010; j++) _solve(b, j);
for(j = 429840; j < 429850; j++) _solve(b, j);
for(j = 430680; j < 430690; j++) _solve(b, j);
for(j = 431520; j < 431530; j++) _solve(b, j);
for(j = 432360; j < 432370; j++) _solve(b, j);
for(j = 433200; j < 433210; j++) _solve(b, j);
for(j = 434040; j < 434050; j++) _solve(b, j);
for(j = 434880; j < 434890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 435720; j < 435730; j++) _solve(b, j);
for(j = 436560; j < 436570; j++) _solve(b, j);
for(j = 437400; j < 437410; j++) _solve(b, j);
for(j = 438240; j < 438250; j++) _solve(b, j);
for(j = 439080; j < 439090; j++) _solve(b, j);
for(j = 439920; j < 439930; j++) _solve(b, j);
for(j = 440760; j < 440770; j++) _solve(b, j);
for(j = 441600; j < 441610; j++) _solve(b, j);
for(j = 442440; j < 442450; j++) _solve(b, j);
for(j = 443280; j < 443290; j++) _solve(b, j);
for(j = 444120; j < 444130; j++) _solve(b, j);
for(j = 444960; j < 444970; j++) _solve(b, j);
for(j = 445800; j < 445810; j++) _solve(b, j);
for(j = 446640; j < 446650; j++) _solve(b, j);
for(j = 447480; j < 447490; j++) _solve(b, j);
for(j = 448320; j < 448330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 449160; j < 449170; j++) _solve(b, j);
for(j = 450000; j < 450010; j++) _solve(b, j);
for(j = 450840; j < 450850; j++) _solve(b, j);
for(j = 451680; j < 451690; j++) _solve(b, j);
for(j = 452520; j < 452530; j++) _solve(b, j);
for(j = 453360; j < 453370; j++) _solve(b, j);
for(j = 454200; j < 454210; j++) _solve(b, j);
for(j = 455040; j < 455050; j++) _solve(b, j);
for(j = 455880; j < 455890; j++) _solve(b, j);
for(j = 456720; j < 456730; j++) _solve(b, j);
for(j = 457560; j < 457570; j++) _solve(b, j);
for(j = 458400; j < 458410; j++) _solve(b, j);
for(j = 459240; j < 459250; j++) _solve(b, j);
for(j = 460080; j < 460090; j++) _solve(b, j);
for(j = 460920; j < 460930; j++) _solve(b, j);
for(j = 461760; j < 461770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 462600; j < 462610; j++) _solve(b, j);
for(j = 463440; j < 463450; j++) _solve(b, j);
for(j = 464280; j < 464290; j++) _solve(b, j);
for(j = 465120; j < 465130; j++) _solve(b, j);
for(j = 465960; j < 465970; j++) _solve(b, j);
for(j = 466800; j < 466810; j++) _solve(b, j);
for(j = 467640; j < 467650; j++) _solve(b, j);
for(j = 468480; j < 468490; j++) _solve(b, j);
for(j = 469320; j < 469330; j++) _solve(b, j);
for(j = 470160; j < 470170; j++) _solve(b, j);
for(j = 471000; j < 471010; j++) _solve(b, j);
for(j = 471840; j < 471850; j++) _solve(b, j);
for(j = 472680; j < 472690; j++) _solve(b, j);
for(j = 473520; j < 473530; j++) _solve(b, j);
for(j = 474360; j < 474370; j++) _solve(b, j);
for(j = 475200; j < 475210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 476040; j < 476050; j++) _solve(b, j);
for(j = 476880; j < 476890; j++) _solve(b, j);
for(j = 477720; j < 477730; j++) _solve(b, j);
for(j = 478560; j < 478570; j++) _solve(b, j);
for(j = 479400; j < 479410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 409690; j < 409700; j++) _solve(b, j);
for(j = 410530; j < 410540; j++) _solve(b, j);
for(j = 411370; j < 411380; j++) _solve(b, j);
for(j = 412210; j < 412220; j++) _solve(b, j);
for(j = 413050; j < 413060; j++) _solve(b, j);
for(j = 413890; j < 413900; j++) _solve(b, j);
for(j = 414730; j < 414740; j++) _solve(b, j);
for(j = 415570; j < 415580; j++) _solve(b, j);
for(j = 416410; j < 416420; j++) _solve(b, j);
for(j = 417250; j < 417260; j++) _solve(b, j);
for(j = 418090; j < 418100; j++) _solve(b, j);
for(j = 418930; j < 418940; j++) _solve(b, j);
for(j = 419770; j < 419780; j++) _solve(b, j);
for(j = 420610; j < 420620; j++) _solve(b, j);
for(j = 421450; j < 421460; j++) _solve(b, j);
for(j = 422290; j < 422300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 423130; j < 423140; j++) _solve(b, j);
for(j = 423970; j < 423980; j++) _solve(b, j);
for(j = 424810; j < 424820; j++) _solve(b, j);
for(j = 425650; j < 425660; j++) _solve(b, j);
for(j = 426490; j < 426500; j++) _solve(b, j);
for(j = 427330; j < 427340; j++) _solve(b, j);
for(j = 428170; j < 428180; j++) _solve(b, j);
for(j = 429010; j < 429020; j++) _solve(b, j);
for(j = 429850; j < 429860; j++) _solve(b, j);
for(j = 430690; j < 430700; j++) _solve(b, j);
for(j = 431530; j < 431540; j++) _solve(b, j);
for(j = 432370; j < 432380; j++) _solve(b, j);
for(j = 433210; j < 433220; j++) _solve(b, j);
for(j = 434050; j < 434060; j++) _solve(b, j);
for(j = 434890; j < 434900; j++) _solve(b, j);
for(j = 435730; j < 435740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 436570; j < 436580; j++) _solve(b, j);
for(j = 437410; j < 437420; j++) _solve(b, j);
for(j = 438250; j < 438260; j++) _solve(b, j);
for(j = 439090; j < 439100; j++) _solve(b, j);
for(j = 439930; j < 439940; j++) _solve(b, j);
for(j = 440770; j < 440780; j++) _solve(b, j);
for(j = 441610; j < 441620; j++) _solve(b, j);
for(j = 442450; j < 442460; j++) _solve(b, j);
for(j = 443290; j < 443300; j++) _solve(b, j);
for(j = 444130; j < 444140; j++) _solve(b, j);
for(j = 444970; j < 444980; j++) _solve(b, j);
for(j = 445810; j < 445820; j++) _solve(b, j);
for(j = 446650; j < 446660; j++) _solve(b, j);
for(j = 447490; j < 447500; j++) _solve(b, j);
for(j = 448330; j < 448340; j++) _solve(b, j);
for(j = 449170; j < 449180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 450010; j < 450020; j++) _solve(b, j);
for(j = 450850; j < 450860; j++) _solve(b, j);
for(j = 451690; j < 451700; j++) _solve(b, j);
for(j = 452530; j < 452540; j++) _solve(b, j);
for(j = 453370; j < 453380; j++) _solve(b, j);
for(j = 454210; j < 454220; j++) _solve(b, j);
for(j = 455050; j < 455060; j++) _solve(b, j);
for(j = 455890; j < 455900; j++) _solve(b, j);
for(j = 456730; j < 456740; j++) _solve(b, j);
for(j = 457570; j < 457580; j++) _solve(b, j);
for(j = 458410; j < 458420; j++) _solve(b, j);
for(j = 459250; j < 459260; j++) _solve(b, j);
for(j = 460090; j < 460100; j++) _solve(b, j);
for(j = 460930; j < 460940; j++) _solve(b, j);
for(j = 461770; j < 461780; j++) _solve(b, j);
for(j = 462610; j < 462620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 463450; j < 463460; j++) _solve(b, j);
for(j = 464290; j < 464300; j++) _solve(b, j);
for(j = 465130; j < 465140; j++) _solve(b, j);
for(j = 465970; j < 465980; j++) _solve(b, j);
for(j = 466810; j < 466820; j++) _solve(b, j);
for(j = 467650; j < 467660; j++) _solve(b, j);
for(j = 468490; j < 468500; j++) _solve(b, j);
for(j = 469330; j < 469340; j++) _solve(b, j);
for(j = 470170; j < 470180; j++) _solve(b, j);
for(j = 471010; j < 471020; j++) _solve(b, j);
for(j = 471850; j < 471860; j++) _solve(b, j);
for(j = 472690; j < 472700; j++) _solve(b, j);
for(j = 473530; j < 473540; j++) _solve(b, j);
for(j = 474370; j < 474380; j++) _solve(b, j);
for(j = 475210; j < 475220; j++) _solve(b, j);
for(j = 476050; j < 476060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 476890; j < 476900; j++) _solve(b, j);
for(j = 477730; j < 477740; j++) _solve(b, j);
for(j = 478570; j < 478580; j++) _solve(b, j);
for(j = 479410; j < 479420; j++) _solve(b, j);
for(j = 480250; j < 480260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 410540; j < 410550; j++) _solve(b, j);
for(j = 411380; j < 411390; j++) _solve(b, j);
for(j = 412220; j < 412230; j++) _solve(b, j);
for(j = 413060; j < 413070; j++) _solve(b, j);
for(j = 413900; j < 413910; j++) _solve(b, j);
for(j = 414740; j < 414750; j++) _solve(b, j);
for(j = 415580; j < 415590; j++) _solve(b, j);
for(j = 416420; j < 416430; j++) _solve(b, j);
for(j = 417260; j < 417270; j++) _solve(b, j);
for(j = 418100; j < 418110; j++) _solve(b, j);
for(j = 418940; j < 418950; j++) _solve(b, j);
for(j = 419780; j < 419790; j++) _solve(b, j);
for(j = 420620; j < 420630; j++) _solve(b, j);
for(j = 421460; j < 421470; j++) _solve(b, j);
for(j = 422300; j < 422310; j++) _solve(b, j);
for(j = 423140; j < 423150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 423980; j < 423990; j++) _solve(b, j);
for(j = 424820; j < 424830; j++) _solve(b, j);
for(j = 425660; j < 425670; j++) _solve(b, j);
for(j = 426500; j < 426510; j++) _solve(b, j);
for(j = 427340; j < 427350; j++) _solve(b, j);
for(j = 428180; j < 428190; j++) _solve(b, j);
for(j = 429020; j < 429030; j++) _solve(b, j);
for(j = 429860; j < 429870; j++) _solve(b, j);
for(j = 430700; j < 430710; j++) _solve(b, j);
for(j = 431540; j < 431550; j++) _solve(b, j);
for(j = 432380; j < 432390; j++) _solve(b, j);
for(j = 433220; j < 433230; j++) _solve(b, j);
for(j = 434060; j < 434070; j++) _solve(b, j);
for(j = 434900; j < 434910; j++) _solve(b, j);
for(j = 435740; j < 435750; j++) _solve(b, j);
for(j = 436580; j < 436590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 437420; j < 437430; j++) _solve(b, j);
for(j = 438260; j < 438270; j++) _solve(b, j);
for(j = 439100; j < 439110; j++) _solve(b, j);
for(j = 439940; j < 439950; j++) _solve(b, j);
for(j = 440780; j < 440790; j++) _solve(b, j);
for(j = 441620; j < 441630; j++) _solve(b, j);
for(j = 442460; j < 442470; j++) _solve(b, j);
for(j = 443300; j < 443310; j++) _solve(b, j);
for(j = 444140; j < 444150; j++) _solve(b, j);
for(j = 444980; j < 444990; j++) _solve(b, j);
for(j = 445820; j < 445830; j++) _solve(b, j);
for(j = 446660; j < 446670; j++) _solve(b, j);
for(j = 447500; j < 447510; j++) _solve(b, j);
for(j = 448340; j < 448350; j++) _solve(b, j);
for(j = 449180; j < 449190; j++) _solve(b, j);
for(j = 450020; j < 450030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 450860; j < 450870; j++) _solve(b, j);
for(j = 451700; j < 451710; j++) _solve(b, j);
for(j = 452540; j < 452550; j++) _solve(b, j);
for(j = 453380; j < 453390; j++) _solve(b, j);
for(j = 454220; j < 454230; j++) _solve(b, j);
for(j = 455060; j < 455070; j++) _solve(b, j);
for(j = 455900; j < 455910; j++) _solve(b, j);
for(j = 456740; j < 456750; j++) _solve(b, j);
for(j = 457580; j < 457590; j++) _solve(b, j);
for(j = 458420; j < 458430; j++) _solve(b, j);
for(j = 459260; j < 459270; j++) _solve(b, j);
for(j = 460100; j < 460110; j++) _solve(b, j);
for(j = 460940; j < 460950; j++) _solve(b, j);
for(j = 461780; j < 461790; j++) _solve(b, j);
for(j = 462620; j < 462630; j++) _solve(b, j);
for(j = 463460; j < 463470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 464300; j < 464310; j++) _solve(b, j);
for(j = 465140; j < 465150; j++) _solve(b, j);
for(j = 465980; j < 465990; j++) _solve(b, j);
for(j = 466820; j < 466830; j++) _solve(b, j);
for(j = 467660; j < 467670; j++) _solve(b, j);
for(j = 468500; j < 468510; j++) _solve(b, j);
for(j = 469340; j < 469350; j++) _solve(b, j);
for(j = 470180; j < 470190; j++) _solve(b, j);
for(j = 471020; j < 471030; j++) _solve(b, j);
for(j = 471860; j < 471870; j++) _solve(b, j);
for(j = 472700; j < 472710; j++) _solve(b, j);
for(j = 473540; j < 473550; j++) _solve(b, j);
for(j = 474380; j < 474390; j++) _solve(b, j);
for(j = 475220; j < 475230; j++) _solve(b, j);
for(j = 476060; j < 476070; j++) _solve(b, j);
for(j = 476900; j < 476910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 477740; j < 477750; j++) _solve(b, j);
for(j = 478580; j < 478590; j++) _solve(b, j);
for(j = 479420; j < 479430; j++) _solve(b, j);
for(j = 480260; j < 480270; j++) _solve(b, j);
for(j = 481100; j < 481110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 411390; j < 411400; j++) _solve(b, j);
for(j = 412230; j < 412240; j++) _solve(b, j);
for(j = 413070; j < 413080; j++) _solve(b, j);
for(j = 413910; j < 413920; j++) _solve(b, j);
for(j = 414750; j < 414760; j++) _solve(b, j);
for(j = 415590; j < 415600; j++) _solve(b, j);
for(j = 416430; j < 416440; j++) _solve(b, j);
for(j = 417270; j < 417280; j++) _solve(b, j);
for(j = 418110; j < 418120; j++) _solve(b, j);
for(j = 418950; j < 418960; j++) _solve(b, j);
for(j = 419790; j < 419800; j++) _solve(b, j);
for(j = 420630; j < 420640; j++) _solve(b, j);
for(j = 421470; j < 421480; j++) _solve(b, j);
for(j = 422310; j < 422320; j++) _solve(b, j);
for(j = 423150; j < 423160; j++) _solve(b, j);
for(j = 423990; j < 424000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 424830; j < 424840; j++) _solve(b, j);
for(j = 425670; j < 425680; j++) _solve(b, j);
for(j = 426510; j < 426520; j++) _solve(b, j);
for(j = 427350; j < 427360; j++) _solve(b, j);
for(j = 428190; j < 428200; j++) _solve(b, j);
for(j = 429030; j < 429040; j++) _solve(b, j);
for(j = 429870; j < 429880; j++) _solve(b, j);
for(j = 430710; j < 430720; j++) _solve(b, j);
for(j = 431550; j < 431560; j++) _solve(b, j);
for(j = 432390; j < 432400; j++) _solve(b, j);
for(j = 433230; j < 433240; j++) _solve(b, j);
for(j = 434070; j < 434080; j++) _solve(b, j);
for(j = 434910; j < 434920; j++) _solve(b, j);
for(j = 435750; j < 435760; j++) _solve(b, j);
for(j = 436590; j < 436600; j++) _solve(b, j);
for(j = 437430; j < 437440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 438270; j < 438280; j++) _solve(b, j);
for(j = 439110; j < 439120; j++) _solve(b, j);
for(j = 439950; j < 439960; j++) _solve(b, j);
for(j = 440790; j < 440800; j++) _solve(b, j);
for(j = 441630; j < 441640; j++) _solve(b, j);
for(j = 442470; j < 442480; j++) _solve(b, j);
for(j = 443310; j < 443320; j++) _solve(b, j);
for(j = 444150; j < 444160; j++) _solve(b, j);
for(j = 444990; j < 445000; j++) _solve(b, j);
for(j = 445830; j < 445840; j++) _solve(b, j);
for(j = 446670; j < 446680; j++) _solve(b, j);
for(j = 447510; j < 447520; j++) _solve(b, j);
for(j = 448350; j < 448360; j++) _solve(b, j);
for(j = 449190; j < 449200; j++) _solve(b, j);
for(j = 450030; j < 450040; j++) _solve(b, j);
for(j = 450870; j < 450880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 451710; j < 451720; j++) _solve(b, j);
for(j = 452550; j < 452560; j++) _solve(b, j);
for(j = 453390; j < 453400; j++) _solve(b, j);
for(j = 454230; j < 454240; j++) _solve(b, j);
for(j = 455070; j < 455080; j++) _solve(b, j);
for(j = 455910; j < 455920; j++) _solve(b, j);
for(j = 456750; j < 456760; j++) _solve(b, j);
for(j = 457590; j < 457600; j++) _solve(b, j);
for(j = 458430; j < 458440; j++) _solve(b, j);
for(j = 459270; j < 459280; j++) _solve(b, j);
for(j = 460110; j < 460120; j++) _solve(b, j);
for(j = 460950; j < 460960; j++) _solve(b, j);
for(j = 461790; j < 461800; j++) _solve(b, j);
for(j = 462630; j < 462640; j++) _solve(b, j);
for(j = 463470; j < 463480; j++) _solve(b, j);
for(j = 464310; j < 464320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 465150; j < 465160; j++) _solve(b, j);
for(j = 465990; j < 466000; j++) _solve(b, j);
for(j = 466830; j < 466840; j++) _solve(b, j);
for(j = 467670; j < 467680; j++) _solve(b, j);
for(j = 468510; j < 468520; j++) _solve(b, j);
for(j = 469350; j < 469360; j++) _solve(b, j);
for(j = 470190; j < 470200; j++) _solve(b, j);
for(j = 471030; j < 471040; j++) _solve(b, j);
for(j = 471870; j < 471880; j++) _solve(b, j);
for(j = 472710; j < 472720; j++) _solve(b, j);
for(j = 473550; j < 473560; j++) _solve(b, j);
for(j = 474390; j < 474400; j++) _solve(b, j);
for(j = 475230; j < 475240; j++) _solve(b, j);
for(j = 476070; j < 476080; j++) _solve(b, j);
for(j = 476910; j < 476920; j++) _solve(b, j);
for(j = 477750; j < 477760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 478590; j < 478600; j++) _solve(b, j);
for(j = 479430; j < 479440; j++) _solve(b, j);
for(j = 480270; j < 480280; j++) _solve(b, j);
for(j = 481110; j < 481120; j++) _solve(b, j);
for(j = 481950; j < 481960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 412240; j < 412250; j++) _solve(b, j);
for(j = 413080; j < 413090; j++) _solve(b, j);
for(j = 413920; j < 413930; j++) _solve(b, j);
for(j = 414760; j < 414770; j++) _solve(b, j);
for(j = 415600; j < 415610; j++) _solve(b, j);
for(j = 416440; j < 416450; j++) _solve(b, j);
for(j = 417280; j < 417290; j++) _solve(b, j);
for(j = 418120; j < 418130; j++) _solve(b, j);
for(j = 418960; j < 418970; j++) _solve(b, j);
for(j = 419800; j < 419810; j++) _solve(b, j);
for(j = 420640; j < 420650; j++) _solve(b, j);
for(j = 421480; j < 421490; j++) _solve(b, j);
for(j = 422320; j < 422330; j++) _solve(b, j);
for(j = 423160; j < 423170; j++) _solve(b, j);
for(j = 424000; j < 424010; j++) _solve(b, j);
for(j = 424840; j < 424850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 425680; j < 425690; j++) _solve(b, j);
for(j = 426520; j < 426530; j++) _solve(b, j);
for(j = 427360; j < 427370; j++) _solve(b, j);
for(j = 428200; j < 428210; j++) _solve(b, j);
for(j = 429040; j < 429050; j++) _solve(b, j);
for(j = 429880; j < 429890; j++) _solve(b, j);
for(j = 430720; j < 430730; j++) _solve(b, j);
for(j = 431560; j < 431570; j++) _solve(b, j);
for(j = 432400; j < 432410; j++) _solve(b, j);
for(j = 433240; j < 433250; j++) _solve(b, j);
for(j = 434080; j < 434090; j++) _solve(b, j);
for(j = 434920; j < 434930; j++) _solve(b, j);
for(j = 435760; j < 435770; j++) _solve(b, j);
for(j = 436600; j < 436610; j++) _solve(b, j);
for(j = 437440; j < 437450; j++) _solve(b, j);
for(j = 438280; j < 438290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 439120; j < 439130; j++) _solve(b, j);
for(j = 439960; j < 439970; j++) _solve(b, j);
for(j = 440800; j < 440810; j++) _solve(b, j);
for(j = 441640; j < 441650; j++) _solve(b, j);
for(j = 442480; j < 442490; j++) _solve(b, j);
for(j = 443320; j < 443330; j++) _solve(b, j);
for(j = 444160; j < 444170; j++) _solve(b, j);
for(j = 445000; j < 445010; j++) _solve(b, j);
for(j = 445840; j < 445850; j++) _solve(b, j);
for(j = 446680; j < 446690; j++) _solve(b, j);
for(j = 447520; j < 447530; j++) _solve(b, j);
for(j = 448360; j < 448370; j++) _solve(b, j);
for(j = 449200; j < 449210; j++) _solve(b, j);
for(j = 450040; j < 450050; j++) _solve(b, j);
for(j = 450880; j < 450890; j++) _solve(b, j);
for(j = 451720; j < 451730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 452560; j < 452570; j++) _solve(b, j);
for(j = 453400; j < 453410; j++) _solve(b, j);
for(j = 454240; j < 454250; j++) _solve(b, j);
for(j = 455080; j < 455090; j++) _solve(b, j);
for(j = 455920; j < 455930; j++) _solve(b, j);
for(j = 456760; j < 456770; j++) _solve(b, j);
for(j = 457600; j < 457610; j++) _solve(b, j);
for(j = 458440; j < 458450; j++) _solve(b, j);
for(j = 459280; j < 459290; j++) _solve(b, j);
for(j = 460120; j < 460130; j++) _solve(b, j);
for(j = 460960; j < 460970; j++) _solve(b, j);
for(j = 461800; j < 461810; j++) _solve(b, j);
for(j = 462640; j < 462650; j++) _solve(b, j);
for(j = 463480; j < 463490; j++) _solve(b, j);
for(j = 464320; j < 464330; j++) _solve(b, j);
for(j = 465160; j < 465170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 466000; j < 466010; j++) _solve(b, j);
for(j = 466840; j < 466850; j++) _solve(b, j);
for(j = 467680; j < 467690; j++) _solve(b, j);
for(j = 468520; j < 468530; j++) _solve(b, j);
for(j = 469360; j < 469370; j++) _solve(b, j);
for(j = 470200; j < 470210; j++) _solve(b, j);
for(j = 471040; j < 471050; j++) _solve(b, j);
for(j = 471880; j < 471890; j++) _solve(b, j);
for(j = 472720; j < 472730; j++) _solve(b, j);
for(j = 473560; j < 473570; j++) _solve(b, j);
for(j = 474400; j < 474410; j++) _solve(b, j);
for(j = 475240; j < 475250; j++) _solve(b, j);
for(j = 476080; j < 476090; j++) _solve(b, j);
for(j = 476920; j < 476930; j++) _solve(b, j);
for(j = 477760; j < 477770; j++) _solve(b, j);
for(j = 478600; j < 478610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 479440; j < 479450; j++) _solve(b, j);
for(j = 480280; j < 480290; j++) _solve(b, j);
for(j = 481120; j < 481130; j++) _solve(b, j);
for(j = 481960; j < 481970; j++) _solve(b, j);
for(j = 482800; j < 482810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 413090; j < 413100; j++) _solve(b, j);
for(j = 413930; j < 413940; j++) _solve(b, j);
for(j = 414770; j < 414780; j++) _solve(b, j);
for(j = 415610; j < 415620; j++) _solve(b, j);
for(j = 416450; j < 416460; j++) _solve(b, j);
for(j = 417290; j < 417300; j++) _solve(b, j);
for(j = 418130; j < 418140; j++) _solve(b, j);
for(j = 418970; j < 418980; j++) _solve(b, j);
for(j = 419810; j < 419820; j++) _solve(b, j);
for(j = 420650; j < 420660; j++) _solve(b, j);
for(j = 421490; j < 421500; j++) _solve(b, j);
for(j = 422330; j < 422340; j++) _solve(b, j);
for(j = 423170; j < 423180; j++) _solve(b, j);
for(j = 424010; j < 424020; j++) _solve(b, j);
for(j = 424850; j < 424860; j++) _solve(b, j);
for(j = 425690; j < 425700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 426530; j < 426540; j++) _solve(b, j);
for(j = 427370; j < 427380; j++) _solve(b, j);
for(j = 428210; j < 428220; j++) _solve(b, j);
for(j = 429050; j < 429060; j++) _solve(b, j);
for(j = 429890; j < 429900; j++) _solve(b, j);
for(j = 430730; j < 430740; j++) _solve(b, j);
for(j = 431570; j < 431580; j++) _solve(b, j);
for(j = 432410; j < 432420; j++) _solve(b, j);
for(j = 433250; j < 433260; j++) _solve(b, j);
for(j = 434090; j < 434100; j++) _solve(b, j);
for(j = 434930; j < 434940; j++) _solve(b, j);
for(j = 435770; j < 435780; j++) _solve(b, j);
for(j = 436610; j < 436620; j++) _solve(b, j);
for(j = 437450; j < 437460; j++) _solve(b, j);
for(j = 438290; j < 438300; j++) _solve(b, j);
for(j = 439130; j < 439140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 439970; j < 439980; j++) _solve(b, j);
for(j = 440810; j < 440820; j++) _solve(b, j);
for(j = 441650; j < 441660; j++) _solve(b, j);
for(j = 442490; j < 442500; j++) _solve(b, j);
for(j = 443330; j < 443340; j++) _solve(b, j);
for(j = 444170; j < 444180; j++) _solve(b, j);
for(j = 445010; j < 445020; j++) _solve(b, j);
for(j = 445850; j < 445860; j++) _solve(b, j);
for(j = 446690; j < 446700; j++) _solve(b, j);
for(j = 447530; j < 447540; j++) _solve(b, j);
for(j = 448370; j < 448380; j++) _solve(b, j);
for(j = 449210; j < 449220; j++) _solve(b, j);
for(j = 450050; j < 450060; j++) _solve(b, j);
for(j = 450890; j < 450900; j++) _solve(b, j);
for(j = 451730; j < 451740; j++) _solve(b, j);
for(j = 452570; j < 452580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 453410; j < 453420; j++) _solve(b, j);
for(j = 454250; j < 454260; j++) _solve(b, j);
for(j = 455090; j < 455100; j++) _solve(b, j);
for(j = 455930; j < 455940; j++) _solve(b, j);
for(j = 456770; j < 456780; j++) _solve(b, j);
for(j = 457610; j < 457620; j++) _solve(b, j);
for(j = 458450; j < 458460; j++) _solve(b, j);
for(j = 459290; j < 459300; j++) _solve(b, j);
for(j = 460130; j < 460140; j++) _solve(b, j);
for(j = 460970; j < 460980; j++) _solve(b, j);
for(j = 461810; j < 461820; j++) _solve(b, j);
for(j = 462650; j < 462660; j++) _solve(b, j);
for(j = 463490; j < 463500; j++) _solve(b, j);
for(j = 464330; j < 464340; j++) _solve(b, j);
for(j = 465170; j < 465180; j++) _solve(b, j);
for(j = 466010; j < 466020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 466850; j < 466860; j++) _solve(b, j);
for(j = 467690; j < 467700; j++) _solve(b, j);
for(j = 468530; j < 468540; j++) _solve(b, j);
for(j = 469370; j < 469380; j++) _solve(b, j);
for(j = 470210; j < 470220; j++) _solve(b, j);
for(j = 471050; j < 471060; j++) _solve(b, j);
for(j = 471890; j < 471900; j++) _solve(b, j);
for(j = 472730; j < 472740; j++) _solve(b, j);
for(j = 473570; j < 473580; j++) _solve(b, j);
for(j = 474410; j < 474420; j++) _solve(b, j);
for(j = 475250; j < 475260; j++) _solve(b, j);
for(j = 476090; j < 476100; j++) _solve(b, j);
for(j = 476930; j < 476940; j++) _solve(b, j);
for(j = 477770; j < 477780; j++) _solve(b, j);
for(j = 478610; j < 478620; j++) _solve(b, j);
for(j = 479450; j < 479460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 480290; j < 480300; j++) _solve(b, j);
for(j = 481130; j < 481140; j++) _solve(b, j);
for(j = 481970; j < 481980; j++) _solve(b, j);
for(j = 482810; j < 482820; j++) _solve(b, j);
for(j = 483650; j < 483660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 413940; j < 413950; j++) _solve(b, j);
for(j = 414780; j < 414790; j++) _solve(b, j);
for(j = 415620; j < 415630; j++) _solve(b, j);
for(j = 416460; j < 416470; j++) _solve(b, j);
for(j = 417300; j < 417310; j++) _solve(b, j);
for(j = 418140; j < 418150; j++) _solve(b, j);
for(j = 418980; j < 418990; j++) _solve(b, j);
for(j = 419820; j < 419830; j++) _solve(b, j);
for(j = 420660; j < 420670; j++) _solve(b, j);
for(j = 421500; j < 421510; j++) _solve(b, j);
for(j = 422340; j < 422350; j++) _solve(b, j);
for(j = 423180; j < 423190; j++) _solve(b, j);
for(j = 424020; j < 424030; j++) _solve(b, j);
for(j = 424860; j < 424870; j++) _solve(b, j);
for(j = 425700; j < 425710; j++) _solve(b, j);
for(j = 426540; j < 426550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 427380; j < 427390; j++) _solve(b, j);
for(j = 428220; j < 428230; j++) _solve(b, j);
for(j = 429060; j < 429070; j++) _solve(b, j);
for(j = 429900; j < 429910; j++) _solve(b, j);
for(j = 430740; j < 430750; j++) _solve(b, j);
for(j = 431580; j < 431590; j++) _solve(b, j);
for(j = 432420; j < 432430; j++) _solve(b, j);
for(j = 433260; j < 433270; j++) _solve(b, j);
for(j = 434100; j < 434110; j++) _solve(b, j);
for(j = 434940; j < 434950; j++) _solve(b, j);
for(j = 435780; j < 435790; j++) _solve(b, j);
for(j = 436620; j < 436630; j++) _solve(b, j);
for(j = 437460; j < 437470; j++) _solve(b, j);
for(j = 438300; j < 438310; j++) _solve(b, j);
for(j = 439140; j < 439150; j++) _solve(b, j);
for(j = 439980; j < 439990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 440820; j < 440830; j++) _solve(b, j);
for(j = 441660; j < 441670; j++) _solve(b, j);
for(j = 442500; j < 442510; j++) _solve(b, j);
for(j = 443340; j < 443350; j++) _solve(b, j);
for(j = 444180; j < 444190; j++) _solve(b, j);
for(j = 445020; j < 445030; j++) _solve(b, j);
for(j = 445860; j < 445870; j++) _solve(b, j);
for(j = 446700; j < 446710; j++) _solve(b, j);
for(j = 447540; j < 447550; j++) _solve(b, j);
for(j = 448380; j < 448390; j++) _solve(b, j);
for(j = 449220; j < 449230; j++) _solve(b, j);
for(j = 450060; j < 450070; j++) _solve(b, j);
for(j = 450900; j < 450910; j++) _solve(b, j);
for(j = 451740; j < 451750; j++) _solve(b, j);
for(j = 452580; j < 452590; j++) _solve(b, j);
for(j = 453420; j < 453430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 454260; j < 454270; j++) _solve(b, j);
for(j = 455100; j < 455110; j++) _solve(b, j);
for(j = 455940; j < 455950; j++) _solve(b, j);
for(j = 456780; j < 456790; j++) _solve(b, j);
for(j = 457620; j < 457630; j++) _solve(b, j);
for(j = 458460; j < 458470; j++) _solve(b, j);
for(j = 459300; j < 459310; j++) _solve(b, j);
for(j = 460140; j < 460150; j++) _solve(b, j);
for(j = 460980; j < 460990; j++) _solve(b, j);
for(j = 461820; j < 461830; j++) _solve(b, j);
for(j = 462660; j < 462670; j++) _solve(b, j);
for(j = 463500; j < 463510; j++) _solve(b, j);
for(j = 464340; j < 464350; j++) _solve(b, j);
for(j = 465180; j < 465190; j++) _solve(b, j);
for(j = 466020; j < 466030; j++) _solve(b, j);
for(j = 466860; j < 466870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 467700; j < 467710; j++) _solve(b, j);
for(j = 468540; j < 468550; j++) _solve(b, j);
for(j = 469380; j < 469390; j++) _solve(b, j);
for(j = 470220; j < 470230; j++) _solve(b, j);
for(j = 471060; j < 471070; j++) _solve(b, j);
for(j = 471900; j < 471910; j++) _solve(b, j);
for(j = 472740; j < 472750; j++) _solve(b, j);
for(j = 473580; j < 473590; j++) _solve(b, j);
for(j = 474420; j < 474430; j++) _solve(b, j);
for(j = 475260; j < 475270; j++) _solve(b, j);
for(j = 476100; j < 476110; j++) _solve(b, j);
for(j = 476940; j < 476950; j++) _solve(b, j);
for(j = 477780; j < 477790; j++) _solve(b, j);
for(j = 478620; j < 478630; j++) _solve(b, j);
for(j = 479460; j < 479470; j++) _solve(b, j);
for(j = 480300; j < 480310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 481140; j < 481150; j++) _solve(b, j);
for(j = 481980; j < 481990; j++) _solve(b, j);
for(j = 482820; j < 482830; j++) _solve(b, j);
for(j = 483660; j < 483670; j++) _solve(b, j);
for(j = 484500; j < 484510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 414790; j < 414800; j++) _solve(b, j);
for(j = 415630; j < 415640; j++) _solve(b, j);
for(j = 416470; j < 416480; j++) _solve(b, j);
for(j = 417310; j < 417320; j++) _solve(b, j);
for(j = 418150; j < 418160; j++) _solve(b, j);
for(j = 418990; j < 419000; j++) _solve(b, j);
for(j = 419830; j < 419840; j++) _solve(b, j);
for(j = 420670; j < 420680; j++) _solve(b, j);
for(j = 421510; j < 421520; j++) _solve(b, j);
for(j = 422350; j < 422360; j++) _solve(b, j);
for(j = 423190; j < 423200; j++) _solve(b, j);
for(j = 424030; j < 424040; j++) _solve(b, j);
for(j = 424870; j < 424880; j++) _solve(b, j);
for(j = 425710; j < 425720; j++) _solve(b, j);
for(j = 426550; j < 426560; j++) _solve(b, j);
for(j = 427390; j < 427400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 428230; j < 428240; j++) _solve(b, j);
for(j = 429070; j < 429080; j++) _solve(b, j);
for(j = 429910; j < 429920; j++) _solve(b, j);
for(j = 430750; j < 430760; j++) _solve(b, j);
for(j = 431590; j < 431600; j++) _solve(b, j);
for(j = 432430; j < 432440; j++) _solve(b, j);
for(j = 433270; j < 433280; j++) _solve(b, j);
for(j = 434110; j < 434120; j++) _solve(b, j);
for(j = 434950; j < 434960; j++) _solve(b, j);
for(j = 435790; j < 435800; j++) _solve(b, j);
for(j = 436630; j < 436640; j++) _solve(b, j);
for(j = 437470; j < 437480; j++) _solve(b, j);
for(j = 438310; j < 438320; j++) _solve(b, j);
for(j = 439150; j < 439160; j++) _solve(b, j);
for(j = 439990; j < 440000; j++) _solve(b, j);
for(j = 440830; j < 440840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 441670; j < 441680; j++) _solve(b, j);
for(j = 442510; j < 442520; j++) _solve(b, j);
for(j = 443350; j < 443360; j++) _solve(b, j);
for(j = 444190; j < 444200; j++) _solve(b, j);
for(j = 445030; j < 445040; j++) _solve(b, j);
for(j = 445870; j < 445880; j++) _solve(b, j);
for(j = 446710; j < 446720; j++) _solve(b, j);
for(j = 447550; j < 447560; j++) _solve(b, j);
for(j = 448390; j < 448400; j++) _solve(b, j);
for(j = 449230; j < 449240; j++) _solve(b, j);
for(j = 450070; j < 450080; j++) _solve(b, j);
for(j = 450910; j < 450920; j++) _solve(b, j);
for(j = 451750; j < 451760; j++) _solve(b, j);
for(j = 452590; j < 452600; j++) _solve(b, j);
for(j = 453430; j < 453440; j++) _solve(b, j);
for(j = 454270; j < 454280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 455110; j < 455120; j++) _solve(b, j);
for(j = 455950; j < 455960; j++) _solve(b, j);
for(j = 456790; j < 456800; j++) _solve(b, j);
for(j = 457630; j < 457640; j++) _solve(b, j);
for(j = 458470; j < 458480; j++) _solve(b, j);
for(j = 459310; j < 459320; j++) _solve(b, j);
for(j = 460150; j < 460160; j++) _solve(b, j);
for(j = 460990; j < 461000; j++) _solve(b, j);
for(j = 461830; j < 461840; j++) _solve(b, j);
for(j = 462670; j < 462680; j++) _solve(b, j);
for(j = 463510; j < 463520; j++) _solve(b, j);
for(j = 464350; j < 464360; j++) _solve(b, j);
for(j = 465190; j < 465200; j++) _solve(b, j);
for(j = 466030; j < 466040; j++) _solve(b, j);
for(j = 466870; j < 466880; j++) _solve(b, j);
for(j = 467710; j < 467720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 468550; j < 468560; j++) _solve(b, j);
for(j = 469390; j < 469400; j++) _solve(b, j);
for(j = 470230; j < 470240; j++) _solve(b, j);
for(j = 471070; j < 471080; j++) _solve(b, j);
for(j = 471910; j < 471920; j++) _solve(b, j);
for(j = 472750; j < 472760; j++) _solve(b, j);
for(j = 473590; j < 473600; j++) _solve(b, j);
for(j = 474430; j < 474440; j++) _solve(b, j);
for(j = 475270; j < 475280; j++) _solve(b, j);
for(j = 476110; j < 476120; j++) _solve(b, j);
for(j = 476950; j < 476960; j++) _solve(b, j);
for(j = 477790; j < 477800; j++) _solve(b, j);
for(j = 478630; j < 478640; j++) _solve(b, j);
for(j = 479470; j < 479480; j++) _solve(b, j);
for(j = 480310; j < 480320; j++) _solve(b, j);
for(j = 481150; j < 481160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 481990; j < 482000; j++) _solve(b, j);
for(j = 482830; j < 482840; j++) _solve(b, j);
for(j = 483670; j < 483680; j++) _solve(b, j);
for(j = 484510; j < 484520; j++) _solve(b, j);
for(j = 485350; j < 485360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 415640; j < 415650; j++) _solve(b, j);
for(j = 416480; j < 416490; j++) _solve(b, j);
for(j = 417320; j < 417330; j++) _solve(b, j);
for(j = 418160; j < 418170; j++) _solve(b, j);
for(j = 419000; j < 419010; j++) _solve(b, j);
for(j = 419840; j < 419850; j++) _solve(b, j);
for(j = 420680; j < 420690; j++) _solve(b, j);
for(j = 421520; j < 421530; j++) _solve(b, j);
for(j = 422360; j < 422370; j++) _solve(b, j);
for(j = 423200; j < 423210; j++) _solve(b, j);
for(j = 424040; j < 424050; j++) _solve(b, j);
for(j = 424880; j < 424890; j++) _solve(b, j);
for(j = 425720; j < 425730; j++) _solve(b, j);
for(j = 426560; j < 426570; j++) _solve(b, j);
for(j = 427400; j < 427410; j++) _solve(b, j);
for(j = 428240; j < 428250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 429080; j < 429090; j++) _solve(b, j);
for(j = 429920; j < 429930; j++) _solve(b, j);
for(j = 430760; j < 430770; j++) _solve(b, j);
for(j = 431600; j < 431610; j++) _solve(b, j);
for(j = 432440; j < 432450; j++) _solve(b, j);
for(j = 433280; j < 433290; j++) _solve(b, j);
for(j = 434120; j < 434130; j++) _solve(b, j);
for(j = 434960; j < 434970; j++) _solve(b, j);
for(j = 435800; j < 435810; j++) _solve(b, j);
for(j = 436640; j < 436650; j++) _solve(b, j);
for(j = 437480; j < 437490; j++) _solve(b, j);
for(j = 438320; j < 438330; j++) _solve(b, j);
for(j = 439160; j < 439170; j++) _solve(b, j);
for(j = 440000; j < 440010; j++) _solve(b, j);
for(j = 440840; j < 440850; j++) _solve(b, j);
for(j = 441680; j < 441690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 442520; j < 442530; j++) _solve(b, j);
for(j = 443360; j < 443370; j++) _solve(b, j);
for(j = 444200; j < 444210; j++) _solve(b, j);
for(j = 445040; j < 445050; j++) _solve(b, j);
for(j = 445880; j < 445890; j++) _solve(b, j);
for(j = 446720; j < 446730; j++) _solve(b, j);
for(j = 447560; j < 447570; j++) _solve(b, j);
for(j = 448400; j < 448410; j++) _solve(b, j);
for(j = 449240; j < 449250; j++) _solve(b, j);
for(j = 450080; j < 450090; j++) _solve(b, j);
for(j = 450920; j < 450930; j++) _solve(b, j);
for(j = 451760; j < 451770; j++) _solve(b, j);
for(j = 452600; j < 452610; j++) _solve(b, j);
for(j = 453440; j < 453450; j++) _solve(b, j);
for(j = 454280; j < 454290; j++) _solve(b, j);
for(j = 455120; j < 455130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 455960; j < 455970; j++) _solve(b, j);
for(j = 456800; j < 456810; j++) _solve(b, j);
for(j = 457640; j < 457650; j++) _solve(b, j);
for(j = 458480; j < 458490; j++) _solve(b, j);
for(j = 459320; j < 459330; j++) _solve(b, j);
for(j = 460160; j < 460170; j++) _solve(b, j);
for(j = 461000; j < 461010; j++) _solve(b, j);
for(j = 461840; j < 461850; j++) _solve(b, j);
for(j = 462680; j < 462690; j++) _solve(b, j);
for(j = 463520; j < 463530; j++) _solve(b, j);
for(j = 464360; j < 464370; j++) _solve(b, j);
for(j = 465200; j < 465210; j++) _solve(b, j);
for(j = 466040; j < 466050; j++) _solve(b, j);
for(j = 466880; j < 466890; j++) _solve(b, j);
for(j = 467720; j < 467730; j++) _solve(b, j);
for(j = 468560; j < 468570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 469400; j < 469410; j++) _solve(b, j);
for(j = 470240; j < 470250; j++) _solve(b, j);
for(j = 471080; j < 471090; j++) _solve(b, j);
for(j = 471920; j < 471930; j++) _solve(b, j);
for(j = 472760; j < 472770; j++) _solve(b, j);
for(j = 473600; j < 473610; j++) _solve(b, j);
for(j = 474440; j < 474450; j++) _solve(b, j);
for(j = 475280; j < 475290; j++) _solve(b, j);
for(j = 476120; j < 476130; j++) _solve(b, j);
for(j = 476960; j < 476970; j++) _solve(b, j);
for(j = 477800; j < 477810; j++) _solve(b, j);
for(j = 478640; j < 478650; j++) _solve(b, j);
for(j = 479480; j < 479490; j++) _solve(b, j);
for(j = 480320; j < 480330; j++) _solve(b, j);
for(j = 481160; j < 481170; j++) _solve(b, j);
for(j = 482000; j < 482010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 482840; j < 482850; j++) _solve(b, j);
for(j = 483680; j < 483690; j++) _solve(b, j);
for(j = 484520; j < 484530; j++) _solve(b, j);
for(j = 485360; j < 485370; j++) _solve(b, j);
for(j = 486200; j < 486210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 416490; j < 416500; j++) _solve(b, j);
for(j = 417330; j < 417340; j++) _solve(b, j);
for(j = 418170; j < 418180; j++) _solve(b, j);
for(j = 419010; j < 419020; j++) _solve(b, j);
for(j = 419850; j < 419860; j++) _solve(b, j);
for(j = 420690; j < 420700; j++) _solve(b, j);
for(j = 421530; j < 421540; j++) _solve(b, j);
for(j = 422370; j < 422380; j++) _solve(b, j);
for(j = 423210; j < 423220; j++) _solve(b, j);
for(j = 424050; j < 424060; j++) _solve(b, j);
for(j = 424890; j < 424900; j++) _solve(b, j);
for(j = 425730; j < 425740; j++) _solve(b, j);
for(j = 426570; j < 426580; j++) _solve(b, j);
for(j = 427410; j < 427420; j++) _solve(b, j);
for(j = 428250; j < 428260; j++) _solve(b, j);
for(j = 429090; j < 429100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 429930; j < 429940; j++) _solve(b, j);
for(j = 430770; j < 430780; j++) _solve(b, j);
for(j = 431610; j < 431620; j++) _solve(b, j);
for(j = 432450; j < 432460; j++) _solve(b, j);
for(j = 433290; j < 433300; j++) _solve(b, j);
for(j = 434130; j < 434140; j++) _solve(b, j);
for(j = 434970; j < 434980; j++) _solve(b, j);
for(j = 435810; j < 435820; j++) _solve(b, j);
for(j = 436650; j < 436660; j++) _solve(b, j);
for(j = 437490; j < 437500; j++) _solve(b, j);
for(j = 438330; j < 438340; j++) _solve(b, j);
for(j = 439170; j < 439180; j++) _solve(b, j);
for(j = 440010; j < 440020; j++) _solve(b, j);
for(j = 440850; j < 440860; j++) _solve(b, j);
for(j = 441690; j < 441700; j++) _solve(b, j);
for(j = 442530; j < 442540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 443370; j < 443380; j++) _solve(b, j);
for(j = 444210; j < 444220; j++) _solve(b, j);
for(j = 445050; j < 445060; j++) _solve(b, j);
for(j = 445890; j < 445900; j++) _solve(b, j);
for(j = 446730; j < 446740; j++) _solve(b, j);
for(j = 447570; j < 447580; j++) _solve(b, j);
for(j = 448410; j < 448420; j++) _solve(b, j);
for(j = 449250; j < 449260; j++) _solve(b, j);
for(j = 450090; j < 450100; j++) _solve(b, j);
for(j = 450930; j < 450940; j++) _solve(b, j);
for(j = 451770; j < 451780; j++) _solve(b, j);
for(j = 452610; j < 452620; j++) _solve(b, j);
for(j = 453450; j < 453460; j++) _solve(b, j);
for(j = 454290; j < 454300; j++) _solve(b, j);
for(j = 455130; j < 455140; j++) _solve(b, j);
for(j = 455970; j < 455980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 456810; j < 456820; j++) _solve(b, j);
for(j = 457650; j < 457660; j++) _solve(b, j);
for(j = 458490; j < 458500; j++) _solve(b, j);
for(j = 459330; j < 459340; j++) _solve(b, j);
for(j = 460170; j < 460180; j++) _solve(b, j);
for(j = 461010; j < 461020; j++) _solve(b, j);
for(j = 461850; j < 461860; j++) _solve(b, j);
for(j = 462690; j < 462700; j++) _solve(b, j);
for(j = 463530; j < 463540; j++) _solve(b, j);
for(j = 464370; j < 464380; j++) _solve(b, j);
for(j = 465210; j < 465220; j++) _solve(b, j);
for(j = 466050; j < 466060; j++) _solve(b, j);
for(j = 466890; j < 466900; j++) _solve(b, j);
for(j = 467730; j < 467740; j++) _solve(b, j);
for(j = 468570; j < 468580; j++) _solve(b, j);
for(j = 469410; j < 469420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 470250; j < 470260; j++) _solve(b, j);
for(j = 471090; j < 471100; j++) _solve(b, j);
for(j = 471930; j < 471940; j++) _solve(b, j);
for(j = 472770; j < 472780; j++) _solve(b, j);
for(j = 473610; j < 473620; j++) _solve(b, j);
for(j = 474450; j < 474460; j++) _solve(b, j);
for(j = 475290; j < 475300; j++) _solve(b, j);
for(j = 476130; j < 476140; j++) _solve(b, j);
for(j = 476970; j < 476980; j++) _solve(b, j);
for(j = 477810; j < 477820; j++) _solve(b, j);
for(j = 478650; j < 478660; j++) _solve(b, j);
for(j = 479490; j < 479500; j++) _solve(b, j);
for(j = 480330; j < 480340; j++) _solve(b, j);
for(j = 481170; j < 481180; j++) _solve(b, j);
for(j = 482010; j < 482020; j++) _solve(b, j);
for(j = 482850; j < 482860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 483690; j < 483700; j++) _solve(b, j);
for(j = 484530; j < 484540; j++) _solve(b, j);
for(j = 485370; j < 485380; j++) _solve(b, j);
for(j = 486210; j < 486220; j++) _solve(b, j);
for(j = 487050; j < 487060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 417340; j < 417350; j++) _solve(b, j);
for(j = 418180; j < 418190; j++) _solve(b, j);
for(j = 419020; j < 419030; j++) _solve(b, j);
for(j = 419860; j < 419870; j++) _solve(b, j);
for(j = 420700; j < 420710; j++) _solve(b, j);
for(j = 421540; j < 421550; j++) _solve(b, j);
for(j = 422380; j < 422390; j++) _solve(b, j);
for(j = 423220; j < 423230; j++) _solve(b, j);
for(j = 424060; j < 424070; j++) _solve(b, j);
for(j = 424900; j < 424910; j++) _solve(b, j);
for(j = 425740; j < 425750; j++) _solve(b, j);
for(j = 426580; j < 426590; j++) _solve(b, j);
for(j = 427420; j < 427430; j++) _solve(b, j);
for(j = 428260; j < 428270; j++) _solve(b, j);
for(j = 429100; j < 429110; j++) _solve(b, j);
for(j = 429940; j < 429950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 430780; j < 430790; j++) _solve(b, j);
for(j = 431620; j < 431630; j++) _solve(b, j);
for(j = 432460; j < 432470; j++) _solve(b, j);
for(j = 433300; j < 433310; j++) _solve(b, j);
for(j = 434140; j < 434150; j++) _solve(b, j);
for(j = 434980; j < 434990; j++) _solve(b, j);
for(j = 435820; j < 435830; j++) _solve(b, j);
for(j = 436660; j < 436670; j++) _solve(b, j);
for(j = 437500; j < 437510; j++) _solve(b, j);
for(j = 438340; j < 438350; j++) _solve(b, j);
for(j = 439180; j < 439190; j++) _solve(b, j);
for(j = 440020; j < 440030; j++) _solve(b, j);
for(j = 440860; j < 440870; j++) _solve(b, j);
for(j = 441700; j < 441710; j++) _solve(b, j);
for(j = 442540; j < 442550; j++) _solve(b, j);
for(j = 443380; j < 443390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 444220; j < 444230; j++) _solve(b, j);
for(j = 445060; j < 445070; j++) _solve(b, j);
for(j = 445900; j < 445910; j++) _solve(b, j);
for(j = 446740; j < 446750; j++) _solve(b, j);
for(j = 447580; j < 447590; j++) _solve(b, j);
for(j = 448420; j < 448430; j++) _solve(b, j);
for(j = 449260; j < 449270; j++) _solve(b, j);
for(j = 450100; j < 450110; j++) _solve(b, j);
for(j = 450940; j < 450950; j++) _solve(b, j);
for(j = 451780; j < 451790; j++) _solve(b, j);
for(j = 452620; j < 452630; j++) _solve(b, j);
for(j = 453460; j < 453470; j++) _solve(b, j);
for(j = 454300; j < 454310; j++) _solve(b, j);
for(j = 455140; j < 455150; j++) _solve(b, j);
for(j = 455980; j < 455990; j++) _solve(b, j);
for(j = 456820; j < 456830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 457660; j < 457670; j++) _solve(b, j);
for(j = 458500; j < 458510; j++) _solve(b, j);
for(j = 459340; j < 459350; j++) _solve(b, j);
for(j = 460180; j < 460190; j++) _solve(b, j);
for(j = 461020; j < 461030; j++) _solve(b, j);
for(j = 461860; j < 461870; j++) _solve(b, j);
for(j = 462700; j < 462710; j++) _solve(b, j);
for(j = 463540; j < 463550; j++) _solve(b, j);
for(j = 464380; j < 464390; j++) _solve(b, j);
for(j = 465220; j < 465230; j++) _solve(b, j);
for(j = 466060; j < 466070; j++) _solve(b, j);
for(j = 466900; j < 466910; j++) _solve(b, j);
for(j = 467740; j < 467750; j++) _solve(b, j);
for(j = 468580; j < 468590; j++) _solve(b, j);
for(j = 469420; j < 469430; j++) _solve(b, j);
for(j = 470260; j < 470270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 471100; j < 471110; j++) _solve(b, j);
for(j = 471940; j < 471950; j++) _solve(b, j);
for(j = 472780; j < 472790; j++) _solve(b, j);
for(j = 473620; j < 473630; j++) _solve(b, j);
for(j = 474460; j < 474470; j++) _solve(b, j);
for(j = 475300; j < 475310; j++) _solve(b, j);
for(j = 476140; j < 476150; j++) _solve(b, j);
for(j = 476980; j < 476990; j++) _solve(b, j);
for(j = 477820; j < 477830; j++) _solve(b, j);
for(j = 478660; j < 478670; j++) _solve(b, j);
for(j = 479500; j < 479510; j++) _solve(b, j);
for(j = 480340; j < 480350; j++) _solve(b, j);
for(j = 481180; j < 481190; j++) _solve(b, j);
for(j = 482020; j < 482030; j++) _solve(b, j);
for(j = 482860; j < 482870; j++) _solve(b, j);
for(j = 483700; j < 483710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 484540; j < 484550; j++) _solve(b, j);
for(j = 485380; j < 485390; j++) _solve(b, j);
for(j = 486220; j < 486230; j++) _solve(b, j);
for(j = 487060; j < 487070; j++) _solve(b, j);
for(j = 487900; j < 487910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 418190; j < 418200; j++) _solve(b, j);
for(j = 419030; j < 419040; j++) _solve(b, j);
for(j = 419870; j < 419880; j++) _solve(b, j);
for(j = 420710; j < 420720; j++) _solve(b, j);
for(j = 421550; j < 421560; j++) _solve(b, j);
for(j = 422390; j < 422400; j++) _solve(b, j);
for(j = 423230; j < 423240; j++) _solve(b, j);
for(j = 424070; j < 424080; j++) _solve(b, j);
for(j = 424910; j < 424920; j++) _solve(b, j);
for(j = 425750; j < 425760; j++) _solve(b, j);
for(j = 426590; j < 426600; j++) _solve(b, j);
for(j = 427430; j < 427440; j++) _solve(b, j);
for(j = 428270; j < 428280; j++) _solve(b, j);
for(j = 429110; j < 429120; j++) _solve(b, j);
for(j = 429950; j < 429960; j++) _solve(b, j);
for(j = 430790; j < 430800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 431630; j < 431640; j++) _solve(b, j);
for(j = 432470; j < 432480; j++) _solve(b, j);
for(j = 433310; j < 433320; j++) _solve(b, j);
for(j = 434150; j < 434160; j++) _solve(b, j);
for(j = 434990; j < 435000; j++) _solve(b, j);
for(j = 435830; j < 435840; j++) _solve(b, j);
for(j = 436670; j < 436680; j++) _solve(b, j);
for(j = 437510; j < 437520; j++) _solve(b, j);
for(j = 438350; j < 438360; j++) _solve(b, j);
for(j = 439190; j < 439200; j++) _solve(b, j);
for(j = 440030; j < 440040; j++) _solve(b, j);
for(j = 440870; j < 440880; j++) _solve(b, j);
for(j = 441710; j < 441720; j++) _solve(b, j);
for(j = 442550; j < 442560; j++) _solve(b, j);
for(j = 443390; j < 443400; j++) _solve(b, j);
for(j = 444230; j < 444240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 445070; j < 445080; j++) _solve(b, j);
for(j = 445910; j < 445920; j++) _solve(b, j);
for(j = 446750; j < 446760; j++) _solve(b, j);
for(j = 447590; j < 447600; j++) _solve(b, j);
for(j = 448430; j < 448440; j++) _solve(b, j);
for(j = 449270; j < 449280; j++) _solve(b, j);
for(j = 450110; j < 450120; j++) _solve(b, j);
for(j = 450950; j < 450960; j++) _solve(b, j);
for(j = 451790; j < 451800; j++) _solve(b, j);
for(j = 452630; j < 452640; j++) _solve(b, j);
for(j = 453470; j < 453480; j++) _solve(b, j);
for(j = 454310; j < 454320; j++) _solve(b, j);
for(j = 455150; j < 455160; j++) _solve(b, j);
for(j = 455990; j < 456000; j++) _solve(b, j);
for(j = 456830; j < 456840; j++) _solve(b, j);
for(j = 457670; j < 457680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 458510; j < 458520; j++) _solve(b, j);
for(j = 459350; j < 459360; j++) _solve(b, j);
for(j = 460190; j < 460200; j++) _solve(b, j);
for(j = 461030; j < 461040; j++) _solve(b, j);
for(j = 461870; j < 461880; j++) _solve(b, j);
for(j = 462710; j < 462720; j++) _solve(b, j);
for(j = 463550; j < 463560; j++) _solve(b, j);
for(j = 464390; j < 464400; j++) _solve(b, j);
for(j = 465230; j < 465240; j++) _solve(b, j);
for(j = 466070; j < 466080; j++) _solve(b, j);
for(j = 466910; j < 466920; j++) _solve(b, j);
for(j = 467750; j < 467760; j++) _solve(b, j);
for(j = 468590; j < 468600; j++) _solve(b, j);
for(j = 469430; j < 469440; j++) _solve(b, j);
for(j = 470270; j < 470280; j++) _solve(b, j);
for(j = 471110; j < 471120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 471950; j < 471960; j++) _solve(b, j);
for(j = 472790; j < 472800; j++) _solve(b, j);
for(j = 473630; j < 473640; j++) _solve(b, j);
for(j = 474470; j < 474480; j++) _solve(b, j);
for(j = 475310; j < 475320; j++) _solve(b, j);
for(j = 476150; j < 476160; j++) _solve(b, j);
for(j = 476990; j < 477000; j++) _solve(b, j);
for(j = 477830; j < 477840; j++) _solve(b, j);
for(j = 478670; j < 478680; j++) _solve(b, j);
for(j = 479510; j < 479520; j++) _solve(b, j);
for(j = 480350; j < 480360; j++) _solve(b, j);
for(j = 481190; j < 481200; j++) _solve(b, j);
for(j = 482030; j < 482040; j++) _solve(b, j);
for(j = 482870; j < 482880; j++) _solve(b, j);
for(j = 483710; j < 483720; j++) _solve(b, j);
for(j = 484550; j < 484560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 485390; j < 485400; j++) _solve(b, j);
for(j = 486230; j < 486240; j++) _solve(b, j);
for(j = 487070; j < 487080; j++) _solve(b, j);
for(j = 487910; j < 487920; j++) _solve(b, j);
for(j = 488750; j < 488760; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 419040; j < 419050; j++) _solve(b, j);
for(j = 419880; j < 419890; j++) _solve(b, j);
for(j = 420720; j < 420730; j++) _solve(b, j);
for(j = 421560; j < 421570; j++) _solve(b, j);
for(j = 422400; j < 422410; j++) _solve(b, j);
for(j = 423240; j < 423250; j++) _solve(b, j);
for(j = 424080; j < 424090; j++) _solve(b, j);
for(j = 424920; j < 424930; j++) _solve(b, j);
for(j = 425760; j < 425770; j++) _solve(b, j);
for(j = 426600; j < 426610; j++) _solve(b, j);
for(j = 427440; j < 427450; j++) _solve(b, j);
for(j = 428280; j < 428290; j++) _solve(b, j);
for(j = 429120; j < 429130; j++) _solve(b, j);
for(j = 429960; j < 429970; j++) _solve(b, j);
for(j = 430800; j < 430810; j++) _solve(b, j);
for(j = 431640; j < 431650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 432480; j < 432490; j++) _solve(b, j);
for(j = 433320; j < 433330; j++) _solve(b, j);
for(j = 434160; j < 434170; j++) _solve(b, j);
for(j = 435000; j < 435010; j++) _solve(b, j);
for(j = 435840; j < 435850; j++) _solve(b, j);
for(j = 436680; j < 436690; j++) _solve(b, j);
for(j = 437520; j < 437530; j++) _solve(b, j);
for(j = 438360; j < 438370; j++) _solve(b, j);
for(j = 439200; j < 439210; j++) _solve(b, j);
for(j = 440040; j < 440050; j++) _solve(b, j);
for(j = 440880; j < 440890; j++) _solve(b, j);
for(j = 441720; j < 441730; j++) _solve(b, j);
for(j = 442560; j < 442570; j++) _solve(b, j);
for(j = 443400; j < 443410; j++) _solve(b, j);
for(j = 444240; j < 444250; j++) _solve(b, j);
for(j = 445080; j < 445090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 445920; j < 445930; j++) _solve(b, j);
for(j = 446760; j < 446770; j++) _solve(b, j);
for(j = 447600; j < 447610; j++) _solve(b, j);
for(j = 448440; j < 448450; j++) _solve(b, j);
for(j = 449280; j < 449290; j++) _solve(b, j);
for(j = 450120; j < 450130; j++) _solve(b, j);
for(j = 450960; j < 450970; j++) _solve(b, j);
for(j = 451800; j < 451810; j++) _solve(b, j);
for(j = 452640; j < 452650; j++) _solve(b, j);
for(j = 453480; j < 453490; j++) _solve(b, j);
for(j = 454320; j < 454330; j++) _solve(b, j);
for(j = 455160; j < 455170; j++) _solve(b, j);
for(j = 456000; j < 456010; j++) _solve(b, j);
for(j = 456840; j < 456850; j++) _solve(b, j);
for(j = 457680; j < 457690; j++) _solve(b, j);
for(j = 458520; j < 458530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 459360; j < 459370; j++) _solve(b, j);
for(j = 460200; j < 460210; j++) _solve(b, j);
for(j = 461040; j < 461050; j++) _solve(b, j);
for(j = 461880; j < 461890; j++) _solve(b, j);
for(j = 462720; j < 462730; j++) _solve(b, j);
for(j = 463560; j < 463570; j++) _solve(b, j);
for(j = 464400; j < 464410; j++) _solve(b, j);
for(j = 465240; j < 465250; j++) _solve(b, j);
for(j = 466080; j < 466090; j++) _solve(b, j);
for(j = 466920; j < 466930; j++) _solve(b, j);
for(j = 467760; j < 467770; j++) _solve(b, j);
for(j = 468600; j < 468610; j++) _solve(b, j);
for(j = 469440; j < 469450; j++) _solve(b, j);
for(j = 470280; j < 470290; j++) _solve(b, j);
for(j = 471120; j < 471130; j++) _solve(b, j);
for(j = 471960; j < 471970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 472800; j < 472810; j++) _solve(b, j);
for(j = 473640; j < 473650; j++) _solve(b, j);
for(j = 474480; j < 474490; j++) _solve(b, j);
for(j = 475320; j < 475330; j++) _solve(b, j);
for(j = 476160; j < 476170; j++) _solve(b, j);
for(j = 477000; j < 477010; j++) _solve(b, j);
for(j = 477840; j < 477850; j++) _solve(b, j);
for(j = 478680; j < 478690; j++) _solve(b, j);
for(j = 479520; j < 479530; j++) _solve(b, j);
for(j = 480360; j < 480370; j++) _solve(b, j);
for(j = 481200; j < 481210; j++) _solve(b, j);
for(j = 482040; j < 482050; j++) _solve(b, j);
for(j = 482880; j < 482890; j++) _solve(b, j);
for(j = 483720; j < 483730; j++) _solve(b, j);
for(j = 484560; j < 484570; j++) _solve(b, j);
for(j = 485400; j < 485410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 486240; j < 486250; j++) _solve(b, j);
for(j = 487080; j < 487090; j++) _solve(b, j);
for(j = 487920; j < 487930; j++) _solve(b, j);
for(j = 488760; j < 488770; j++) _solve(b, j);
for(j = 489600; j < 489610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 419890; j < 419900; j++) _solve(b, j);
for(j = 420730; j < 420740; j++) _solve(b, j);
for(j = 421570; j < 421580; j++) _solve(b, j);
for(j = 422410; j < 422420; j++) _solve(b, j);
for(j = 423250; j < 423260; j++) _solve(b, j);
for(j = 424090; j < 424100; j++) _solve(b, j);
for(j = 424930; j < 424940; j++) _solve(b, j);
for(j = 425770; j < 425780; j++) _solve(b, j);
for(j = 426610; j < 426620; j++) _solve(b, j);
for(j = 427450; j < 427460; j++) _solve(b, j);
for(j = 428290; j < 428300; j++) _solve(b, j);
for(j = 429130; j < 429140; j++) _solve(b, j);
for(j = 429970; j < 429980; j++) _solve(b, j);
for(j = 430810; j < 430820; j++) _solve(b, j);
for(j = 431650; j < 431660; j++) _solve(b, j);
for(j = 432490; j < 432500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 433330; j < 433340; j++) _solve(b, j);
for(j = 434170; j < 434180; j++) _solve(b, j);
for(j = 435010; j < 435020; j++) _solve(b, j);
for(j = 435850; j < 435860; j++) _solve(b, j);
for(j = 436690; j < 436700; j++) _solve(b, j);
for(j = 437530; j < 437540; j++) _solve(b, j);
for(j = 438370; j < 438380; j++) _solve(b, j);
for(j = 439210; j < 439220; j++) _solve(b, j);
for(j = 440050; j < 440060; j++) _solve(b, j);
for(j = 440890; j < 440900; j++) _solve(b, j);
for(j = 441730; j < 441740; j++) _solve(b, j);
for(j = 442570; j < 442580; j++) _solve(b, j);
for(j = 443410; j < 443420; j++) _solve(b, j);
for(j = 444250; j < 444260; j++) _solve(b, j);
for(j = 445090; j < 445100; j++) _solve(b, j);
for(j = 445930; j < 445940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 446770; j < 446780; j++) _solve(b, j);
for(j = 447610; j < 447620; j++) _solve(b, j);
for(j = 448450; j < 448460; j++) _solve(b, j);
for(j = 449290; j < 449300; j++) _solve(b, j);
for(j = 450130; j < 450140; j++) _solve(b, j);
for(j = 450970; j < 450980; j++) _solve(b, j);
for(j = 451810; j < 451820; j++) _solve(b, j);
for(j = 452650; j < 452660; j++) _solve(b, j);
for(j = 453490; j < 453500; j++) _solve(b, j);
for(j = 454330; j < 454340; j++) _solve(b, j);
for(j = 455170; j < 455180; j++) _solve(b, j);
for(j = 456010; j < 456020; j++) _solve(b, j);
for(j = 456850; j < 456860; j++) _solve(b, j);
for(j = 457690; j < 457700; j++) _solve(b, j);
for(j = 458530; j < 458540; j++) _solve(b, j);
for(j = 459370; j < 459380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 460210; j < 460220; j++) _solve(b, j);
for(j = 461050; j < 461060; j++) _solve(b, j);
for(j = 461890; j < 461900; j++) _solve(b, j);
for(j = 462730; j < 462740; j++) _solve(b, j);
for(j = 463570; j < 463580; j++) _solve(b, j);
for(j = 464410; j < 464420; j++) _solve(b, j);
for(j = 465250; j < 465260; j++) _solve(b, j);
for(j = 466090; j < 466100; j++) _solve(b, j);
for(j = 466930; j < 466940; j++) _solve(b, j);
for(j = 467770; j < 467780; j++) _solve(b, j);
for(j = 468610; j < 468620; j++) _solve(b, j);
for(j = 469450; j < 469460; j++) _solve(b, j);
for(j = 470290; j < 470300; j++) _solve(b, j);
for(j = 471130; j < 471140; j++) _solve(b, j);
for(j = 471970; j < 471980; j++) _solve(b, j);
for(j = 472810; j < 472820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 473650; j < 473660; j++) _solve(b, j);
for(j = 474490; j < 474500; j++) _solve(b, j);
for(j = 475330; j < 475340; j++) _solve(b, j);
for(j = 476170; j < 476180; j++) _solve(b, j);
for(j = 477010; j < 477020; j++) _solve(b, j);
for(j = 477850; j < 477860; j++) _solve(b, j);
for(j = 478690; j < 478700; j++) _solve(b, j);
for(j = 479530; j < 479540; j++) _solve(b, j);
for(j = 480370; j < 480380; j++) _solve(b, j);
for(j = 481210; j < 481220; j++) _solve(b, j);
for(j = 482050; j < 482060; j++) _solve(b, j);
for(j = 482890; j < 482900; j++) _solve(b, j);
for(j = 483730; j < 483740; j++) _solve(b, j);
for(j = 484570; j < 484580; j++) _solve(b, j);
for(j = 485410; j < 485420; j++) _solve(b, j);
for(j = 486250; j < 486260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 487090; j < 487100; j++) _solve(b, j);
for(j = 487930; j < 487940; j++) _solve(b, j);
for(j = 488770; j < 488780; j++) _solve(b, j);
for(j = 489610; j < 489620; j++) _solve(b, j);
for(j = 490450; j < 490460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 420740; j < 420750; j++) _solve(b, j);
for(j = 421580; j < 421590; j++) _solve(b, j);
for(j = 422420; j < 422430; j++) _solve(b, j);
for(j = 423260; j < 423270; j++) _solve(b, j);
for(j = 424100; j < 424110; j++) _solve(b, j);
for(j = 424940; j < 424950; j++) _solve(b, j);
for(j = 425780; j < 425790; j++) _solve(b, j);
for(j = 426620; j < 426630; j++) _solve(b, j);
for(j = 427460; j < 427470; j++) _solve(b, j);
for(j = 428300; j < 428310; j++) _solve(b, j);
for(j = 429140; j < 429150; j++) _solve(b, j);
for(j = 429980; j < 429990; j++) _solve(b, j);
for(j = 430820; j < 430830; j++) _solve(b, j);
for(j = 431660; j < 431670; j++) _solve(b, j);
for(j = 432500; j < 432510; j++) _solve(b, j);
for(j = 433340; j < 433350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 434180; j < 434190; j++) _solve(b, j);
for(j = 435020; j < 435030; j++) _solve(b, j);
for(j = 435860; j < 435870; j++) _solve(b, j);
for(j = 436700; j < 436710; j++) _solve(b, j);
for(j = 437540; j < 437550; j++) _solve(b, j);
for(j = 438380; j < 438390; j++) _solve(b, j);
for(j = 439220; j < 439230; j++) _solve(b, j);
for(j = 440060; j < 440070; j++) _solve(b, j);
for(j = 440900; j < 440910; j++) _solve(b, j);
for(j = 441740; j < 441750; j++) _solve(b, j);
for(j = 442580; j < 442590; j++) _solve(b, j);
for(j = 443420; j < 443430; j++) _solve(b, j);
for(j = 444260; j < 444270; j++) _solve(b, j);
for(j = 445100; j < 445110; j++) _solve(b, j);
for(j = 445940; j < 445950; j++) _solve(b, j);
for(j = 446780; j < 446790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 447620; j < 447630; j++) _solve(b, j);
for(j = 448460; j < 448470; j++) _solve(b, j);
for(j = 449300; j < 449310; j++) _solve(b, j);
for(j = 450140; j < 450150; j++) _solve(b, j);
for(j = 450980; j < 450990; j++) _solve(b, j);
for(j = 451820; j < 451830; j++) _solve(b, j);
for(j = 452660; j < 452670; j++) _solve(b, j);
for(j = 453500; j < 453510; j++) _solve(b, j);
for(j = 454340; j < 454350; j++) _solve(b, j);
for(j = 455180; j < 455190; j++) _solve(b, j);
for(j = 456020; j < 456030; j++) _solve(b, j);
for(j = 456860; j < 456870; j++) _solve(b, j);
for(j = 457700; j < 457710; j++) _solve(b, j);
for(j = 458540; j < 458550; j++) _solve(b, j);
for(j = 459380; j < 459390; j++) _solve(b, j);
for(j = 460220; j < 460230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 461060; j < 461070; j++) _solve(b, j);
for(j = 461900; j < 461910; j++) _solve(b, j);
for(j = 462740; j < 462750; j++) _solve(b, j);
for(j = 463580; j < 463590; j++) _solve(b, j);
for(j = 464420; j < 464430; j++) _solve(b, j);
for(j = 465260; j < 465270; j++) _solve(b, j);
for(j = 466100; j < 466110; j++) _solve(b, j);
for(j = 466940; j < 466950; j++) _solve(b, j);
for(j = 467780; j < 467790; j++) _solve(b, j);
for(j = 468620; j < 468630; j++) _solve(b, j);
for(j = 469460; j < 469470; j++) _solve(b, j);
for(j = 470300; j < 470310; j++) _solve(b, j);
for(j = 471140; j < 471150; j++) _solve(b, j);
for(j = 471980; j < 471990; j++) _solve(b, j);
for(j = 472820; j < 472830; j++) _solve(b, j);
for(j = 473660; j < 473670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 474500; j < 474510; j++) _solve(b, j);
for(j = 475340; j < 475350; j++) _solve(b, j);
for(j = 476180; j < 476190; j++) _solve(b, j);
for(j = 477020; j < 477030; j++) _solve(b, j);
for(j = 477860; j < 477870; j++) _solve(b, j);
for(j = 478700; j < 478710; j++) _solve(b, j);
for(j = 479540; j < 479550; j++) _solve(b, j);
for(j = 480380; j < 480390; j++) _solve(b, j);
for(j = 481220; j < 481230; j++) _solve(b, j);
for(j = 482060; j < 482070; j++) _solve(b, j);
for(j = 482900; j < 482910; j++) _solve(b, j);
for(j = 483740; j < 483750; j++) _solve(b, j);
for(j = 484580; j < 484590; j++) _solve(b, j);
for(j = 485420; j < 485430; j++) _solve(b, j);
for(j = 486260; j < 486270; j++) _solve(b, j);
for(j = 487100; j < 487110; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 487940; j < 487950; j++) _solve(b, j);
for(j = 488780; j < 488790; j++) _solve(b, j);
for(j = 489620; j < 489630; j++) _solve(b, j);
for(j = 490460; j < 490470; j++) _solve(b, j);
for(j = 491300; j < 491310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 421590; j < 421600; j++) _solve(b, j);
for(j = 422430; j < 422440; j++) _solve(b, j);
for(j = 423270; j < 423280; j++) _solve(b, j);
for(j = 424110; j < 424120; j++) _solve(b, j);
for(j = 424950; j < 424960; j++) _solve(b, j);
for(j = 425790; j < 425800; j++) _solve(b, j);
for(j = 426630; j < 426640; j++) _solve(b, j);
for(j = 427470; j < 427480; j++) _solve(b, j);
for(j = 428310; j < 428320; j++) _solve(b, j);
for(j = 429150; j < 429160; j++) _solve(b, j);
for(j = 429990; j < 430000; j++) _solve(b, j);
for(j = 430830; j < 430840; j++) _solve(b, j);
for(j = 431670; j < 431680; j++) _solve(b, j);
for(j = 432510; j < 432520; j++) _solve(b, j);
for(j = 433350; j < 433360; j++) _solve(b, j);
for(j = 434190; j < 434200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 435030; j < 435040; j++) _solve(b, j);
for(j = 435870; j < 435880; j++) _solve(b, j);
for(j = 436710; j < 436720; j++) _solve(b, j);
for(j = 437550; j < 437560; j++) _solve(b, j);
for(j = 438390; j < 438400; j++) _solve(b, j);
for(j = 439230; j < 439240; j++) _solve(b, j);
for(j = 440070; j < 440080; j++) _solve(b, j);
for(j = 440910; j < 440920; j++) _solve(b, j);
for(j = 441750; j < 441760; j++) _solve(b, j);
for(j = 442590; j < 442600; j++) _solve(b, j);
for(j = 443430; j < 443440; j++) _solve(b, j);
for(j = 444270; j < 444280; j++) _solve(b, j);
for(j = 445110; j < 445120; j++) _solve(b, j);
for(j = 445950; j < 445960; j++) _solve(b, j);
for(j = 446790; j < 446800; j++) _solve(b, j);
for(j = 447630; j < 447640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 448470; j < 448480; j++) _solve(b, j);
for(j = 449310; j < 449320; j++) _solve(b, j);
for(j = 450150; j < 450160; j++) _solve(b, j);
for(j = 450990; j < 451000; j++) _solve(b, j);
for(j = 451830; j < 451840; j++) _solve(b, j);
for(j = 452670; j < 452680; j++) _solve(b, j);
for(j = 453510; j < 453520; j++) _solve(b, j);
for(j = 454350; j < 454360; j++) _solve(b, j);
for(j = 455190; j < 455200; j++) _solve(b, j);
for(j = 456030; j < 456040; j++) _solve(b, j);
for(j = 456870; j < 456880; j++) _solve(b, j);
for(j = 457710; j < 457720; j++) _solve(b, j);
for(j = 458550; j < 458560; j++) _solve(b, j);
for(j = 459390; j < 459400; j++) _solve(b, j);
for(j = 460230; j < 460240; j++) _solve(b, j);
for(j = 461070; j < 461080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 461910; j < 461920; j++) _solve(b, j);
for(j = 462750; j < 462760; j++) _solve(b, j);
for(j = 463590; j < 463600; j++) _solve(b, j);
for(j = 464430; j < 464440; j++) _solve(b, j);
for(j = 465270; j < 465280; j++) _solve(b, j);
for(j = 466110; j < 466120; j++) _solve(b, j);
for(j = 466950; j < 466960; j++) _solve(b, j);
for(j = 467790; j < 467800; j++) _solve(b, j);
for(j = 468630; j < 468640; j++) _solve(b, j);
for(j = 469470; j < 469480; j++) _solve(b, j);
for(j = 470310; j < 470320; j++) _solve(b, j);
for(j = 471150; j < 471160; j++) _solve(b, j);
for(j = 471990; j < 472000; j++) _solve(b, j);
for(j = 472830; j < 472840; j++) _solve(b, j);
for(j = 473670; j < 473680; j++) _solve(b, j);
for(j = 474510; j < 474520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 475350; j < 475360; j++) _solve(b, j);
for(j = 476190; j < 476200; j++) _solve(b, j);
for(j = 477030; j < 477040; j++) _solve(b, j);
for(j = 477870; j < 477880; j++) _solve(b, j);
for(j = 478710; j < 478720; j++) _solve(b, j);
for(j = 479550; j < 479560; j++) _solve(b, j);
for(j = 480390; j < 480400; j++) _solve(b, j);
for(j = 481230; j < 481240; j++) _solve(b, j);
for(j = 482070; j < 482080; j++) _solve(b, j);
for(j = 482910; j < 482920; j++) _solve(b, j);
for(j = 483750; j < 483760; j++) _solve(b, j);
for(j = 484590; j < 484600; j++) _solve(b, j);
for(j = 485430; j < 485440; j++) _solve(b, j);
for(j = 486270; j < 486280; j++) _solve(b, j);
for(j = 487110; j < 487120; j++) _solve(b, j);
for(j = 487950; j < 487960; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 488790; j < 488800; j++) _solve(b, j);
for(j = 489630; j < 489640; j++) _solve(b, j);
for(j = 490470; j < 490480; j++) _solve(b, j);
for(j = 491310; j < 491320; j++) _solve(b, j);
for(j = 492150; j < 492160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 422440; j < 422450; j++) _solve(b, j);
for(j = 423280; j < 423290; j++) _solve(b, j);
for(j = 424120; j < 424130; j++) _solve(b, j);
for(j = 424960; j < 424970; j++) _solve(b, j);
for(j = 425800; j < 425810; j++) _solve(b, j);
for(j = 426640; j < 426650; j++) _solve(b, j);
for(j = 427480; j < 427490; j++) _solve(b, j);
for(j = 428320; j < 428330; j++) _solve(b, j);
for(j = 429160; j < 429170; j++) _solve(b, j);
for(j = 430000; j < 430010; j++) _solve(b, j);
for(j = 430840; j < 430850; j++) _solve(b, j);
for(j = 431680; j < 431690; j++) _solve(b, j);
for(j = 432520; j < 432530; j++) _solve(b, j);
for(j = 433360; j < 433370; j++) _solve(b, j);
for(j = 434200; j < 434210; j++) _solve(b, j);
for(j = 435040; j < 435050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 435880; j < 435890; j++) _solve(b, j);
for(j = 436720; j < 436730; j++) _solve(b, j);
for(j = 437560; j < 437570; j++) _solve(b, j);
for(j = 438400; j < 438410; j++) _solve(b, j);
for(j = 439240; j < 439250; j++) _solve(b, j);
for(j = 440080; j < 440090; j++) _solve(b, j);
for(j = 440920; j < 440930; j++) _solve(b, j);
for(j = 441760; j < 441770; j++) _solve(b, j);
for(j = 442600; j < 442610; j++) _solve(b, j);
for(j = 443440; j < 443450; j++) _solve(b, j);
for(j = 444280; j < 444290; j++) _solve(b, j);
for(j = 445120; j < 445130; j++) _solve(b, j);
for(j = 445960; j < 445970; j++) _solve(b, j);
for(j = 446800; j < 446810; j++) _solve(b, j);
for(j = 447640; j < 447650; j++) _solve(b, j);
for(j = 448480; j < 448490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 449320; j < 449330; j++) _solve(b, j);
for(j = 450160; j < 450170; j++) _solve(b, j);
for(j = 451000; j < 451010; j++) _solve(b, j);
for(j = 451840; j < 451850; j++) _solve(b, j);
for(j = 452680; j < 452690; j++) _solve(b, j);
for(j = 453520; j < 453530; j++) _solve(b, j);
for(j = 454360; j < 454370; j++) _solve(b, j);
for(j = 455200; j < 455210; j++) _solve(b, j);
for(j = 456040; j < 456050; j++) _solve(b, j);
for(j = 456880; j < 456890; j++) _solve(b, j);
for(j = 457720; j < 457730; j++) _solve(b, j);
for(j = 458560; j < 458570; j++) _solve(b, j);
for(j = 459400; j < 459410; j++) _solve(b, j);
for(j = 460240; j < 460250; j++) _solve(b, j);
for(j = 461080; j < 461090; j++) _solve(b, j);
for(j = 461920; j < 461930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 462760; j < 462770; j++) _solve(b, j);
for(j = 463600; j < 463610; j++) _solve(b, j);
for(j = 464440; j < 464450; j++) _solve(b, j);
for(j = 465280; j < 465290; j++) _solve(b, j);
for(j = 466120; j < 466130; j++) _solve(b, j);
for(j = 466960; j < 466970; j++) _solve(b, j);
for(j = 467800; j < 467810; j++) _solve(b, j);
for(j = 468640; j < 468650; j++) _solve(b, j);
for(j = 469480; j < 469490; j++) _solve(b, j);
for(j = 470320; j < 470330; j++) _solve(b, j);
for(j = 471160; j < 471170; j++) _solve(b, j);
for(j = 472000; j < 472010; j++) _solve(b, j);
for(j = 472840; j < 472850; j++) _solve(b, j);
for(j = 473680; j < 473690; j++) _solve(b, j);
for(j = 474520; j < 474530; j++) _solve(b, j);
for(j = 475360; j < 475370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 476200; j < 476210; j++) _solve(b, j);
for(j = 477040; j < 477050; j++) _solve(b, j);
for(j = 477880; j < 477890; j++) _solve(b, j);
for(j = 478720; j < 478730; j++) _solve(b, j);
for(j = 479560; j < 479570; j++) _solve(b, j);
for(j = 480400; j < 480410; j++) _solve(b, j);
for(j = 481240; j < 481250; j++) _solve(b, j);
for(j = 482080; j < 482090; j++) _solve(b, j);
for(j = 482920; j < 482930; j++) _solve(b, j);
for(j = 483760; j < 483770; j++) _solve(b, j);
for(j = 484600; j < 484610; j++) _solve(b, j);
for(j = 485440; j < 485450; j++) _solve(b, j);
for(j = 486280; j < 486290; j++) _solve(b, j);
for(j = 487120; j < 487130; j++) _solve(b, j);
for(j = 487960; j < 487970; j++) _solve(b, j);
for(j = 488800; j < 488810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 489640; j < 489650; j++) _solve(b, j);
for(j = 490480; j < 490490; j++) _solve(b, j);
for(j = 491320; j < 491330; j++) _solve(b, j);
for(j = 492160; j < 492170; j++) _solve(b, j);
for(j = 493000; j < 493010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 423290; j < 423300; j++) _solve(b, j);
for(j = 424130; j < 424140; j++) _solve(b, j);
for(j = 424970; j < 424980; j++) _solve(b, j);
for(j = 425810; j < 425820; j++) _solve(b, j);
for(j = 426650; j < 426660; j++) _solve(b, j);
for(j = 427490; j < 427500; j++) _solve(b, j);
for(j = 428330; j < 428340; j++) _solve(b, j);
for(j = 429170; j < 429180; j++) _solve(b, j);
for(j = 430010; j < 430020; j++) _solve(b, j);
for(j = 430850; j < 430860; j++) _solve(b, j);
for(j = 431690; j < 431700; j++) _solve(b, j);
for(j = 432530; j < 432540; j++) _solve(b, j);
for(j = 433370; j < 433380; j++) _solve(b, j);
for(j = 434210; j < 434220; j++) _solve(b, j);
for(j = 435050; j < 435060; j++) _solve(b, j);
for(j = 435890; j < 435900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 436730; j < 436740; j++) _solve(b, j);
for(j = 437570; j < 437580; j++) _solve(b, j);
for(j = 438410; j < 438420; j++) _solve(b, j);
for(j = 439250; j < 439260; j++) _solve(b, j);
for(j = 440090; j < 440100; j++) _solve(b, j);
for(j = 440930; j < 440940; j++) _solve(b, j);
for(j = 441770; j < 441780; j++) _solve(b, j);
for(j = 442610; j < 442620; j++) _solve(b, j);
for(j = 443450; j < 443460; j++) _solve(b, j);
for(j = 444290; j < 444300; j++) _solve(b, j);
for(j = 445130; j < 445140; j++) _solve(b, j);
for(j = 445970; j < 445980; j++) _solve(b, j);
for(j = 446810; j < 446820; j++) _solve(b, j);
for(j = 447650; j < 447660; j++) _solve(b, j);
for(j = 448490; j < 448500; j++) _solve(b, j);
for(j = 449330; j < 449340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 450170; j < 450180; j++) _solve(b, j);
for(j = 451010; j < 451020; j++) _solve(b, j);
for(j = 451850; j < 451860; j++) _solve(b, j);
for(j = 452690; j < 452700; j++) _solve(b, j);
for(j = 453530; j < 453540; j++) _solve(b, j);
for(j = 454370; j < 454380; j++) _solve(b, j);
for(j = 455210; j < 455220; j++) _solve(b, j);
for(j = 456050; j < 456060; j++) _solve(b, j);
for(j = 456890; j < 456900; j++) _solve(b, j);
for(j = 457730; j < 457740; j++) _solve(b, j);
for(j = 458570; j < 458580; j++) _solve(b, j);
for(j = 459410; j < 459420; j++) _solve(b, j);
for(j = 460250; j < 460260; j++) _solve(b, j);
for(j = 461090; j < 461100; j++) _solve(b, j);
for(j = 461930; j < 461940; j++) _solve(b, j);
for(j = 462770; j < 462780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 463610; j < 463620; j++) _solve(b, j);
for(j = 464450; j < 464460; j++) _solve(b, j);
for(j = 465290; j < 465300; j++) _solve(b, j);
for(j = 466130; j < 466140; j++) _solve(b, j);
for(j = 466970; j < 466980; j++) _solve(b, j);
for(j = 467810; j < 467820; j++) _solve(b, j);
for(j = 468650; j < 468660; j++) _solve(b, j);
for(j = 469490; j < 469500; j++) _solve(b, j);
for(j = 470330; j < 470340; j++) _solve(b, j);
for(j = 471170; j < 471180; j++) _solve(b, j);
for(j = 472010; j < 472020; j++) _solve(b, j);
for(j = 472850; j < 472860; j++) _solve(b, j);
for(j = 473690; j < 473700; j++) _solve(b, j);
for(j = 474530; j < 474540; j++) _solve(b, j);
for(j = 475370; j < 475380; j++) _solve(b, j);
for(j = 476210; j < 476220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 477050; j < 477060; j++) _solve(b, j);
for(j = 477890; j < 477900; j++) _solve(b, j);
for(j = 478730; j < 478740; j++) _solve(b, j);
for(j = 479570; j < 479580; j++) _solve(b, j);
for(j = 480410; j < 480420; j++) _solve(b, j);
for(j = 481250; j < 481260; j++) _solve(b, j);
for(j = 482090; j < 482100; j++) _solve(b, j);
for(j = 482930; j < 482940; j++) _solve(b, j);
for(j = 483770; j < 483780; j++) _solve(b, j);
for(j = 484610; j < 484620; j++) _solve(b, j);
for(j = 485450; j < 485460; j++) _solve(b, j);
for(j = 486290; j < 486300; j++) _solve(b, j);
for(j = 487130; j < 487140; j++) _solve(b, j);
for(j = 487970; j < 487980; j++) _solve(b, j);
for(j = 488810; j < 488820; j++) _solve(b, j);
for(j = 489650; j < 489660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 490490; j < 490500; j++) _solve(b, j);
for(j = 491330; j < 491340; j++) _solve(b, j);
for(j = 492170; j < 492180; j++) _solve(b, j);
for(j = 493010; j < 493020; j++) _solve(b, j);
for(j = 493850; j < 493860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 424140; j < 424150; j++) _solve(b, j);
for(j = 424980; j < 424990; j++) _solve(b, j);
for(j = 425820; j < 425830; j++) _solve(b, j);
for(j = 426660; j < 426670; j++) _solve(b, j);
for(j = 427500; j < 427510; j++) _solve(b, j);
for(j = 428340; j < 428350; j++) _solve(b, j);
for(j = 429180; j < 429190; j++) _solve(b, j);
for(j = 430020; j < 430030; j++) _solve(b, j);
for(j = 430860; j < 430870; j++) _solve(b, j);
for(j = 431700; j < 431710; j++) _solve(b, j);
for(j = 432540; j < 432550; j++) _solve(b, j);
for(j = 433380; j < 433390; j++) _solve(b, j);
for(j = 434220; j < 434230; j++) _solve(b, j);
for(j = 435060; j < 435070; j++) _solve(b, j);
for(j = 435900; j < 435910; j++) _solve(b, j);
for(j = 436740; j < 436750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 437580; j < 437590; j++) _solve(b, j);
for(j = 438420; j < 438430; j++) _solve(b, j);
for(j = 439260; j < 439270; j++) _solve(b, j);
for(j = 440100; j < 440110; j++) _solve(b, j);
for(j = 440940; j < 440950; j++) _solve(b, j);
for(j = 441780; j < 441790; j++) _solve(b, j);
for(j = 442620; j < 442630; j++) _solve(b, j);
for(j = 443460; j < 443470; j++) _solve(b, j);
for(j = 444300; j < 444310; j++) _solve(b, j);
for(j = 445140; j < 445150; j++) _solve(b, j);
for(j = 445980; j < 445990; j++) _solve(b, j);
for(j = 446820; j < 446830; j++) _solve(b, j);
for(j = 447660; j < 447670; j++) _solve(b, j);
for(j = 448500; j < 448510; j++) _solve(b, j);
for(j = 449340; j < 449350; j++) _solve(b, j);
for(j = 450180; j < 450190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 451020; j < 451030; j++) _solve(b, j);
for(j = 451860; j < 451870; j++) _solve(b, j);
for(j = 452700; j < 452710; j++) _solve(b, j);
for(j = 453540; j < 453550; j++) _solve(b, j);
for(j = 454380; j < 454390; j++) _solve(b, j);
for(j = 455220; j < 455230; j++) _solve(b, j);
for(j = 456060; j < 456070; j++) _solve(b, j);
for(j = 456900; j < 456910; j++) _solve(b, j);
for(j = 457740; j < 457750; j++) _solve(b, j);
for(j = 458580; j < 458590; j++) _solve(b, j);
for(j = 459420; j < 459430; j++) _solve(b, j);
for(j = 460260; j < 460270; j++) _solve(b, j);
for(j = 461100; j < 461110; j++) _solve(b, j);
for(j = 461940; j < 461950; j++) _solve(b, j);
for(j = 462780; j < 462790; j++) _solve(b, j);
for(j = 463620; j < 463630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 464460; j < 464470; j++) _solve(b, j);
for(j = 465300; j < 465310; j++) _solve(b, j);
for(j = 466140; j < 466150; j++) _solve(b, j);
for(j = 466980; j < 466990; j++) _solve(b, j);
for(j = 467820; j < 467830; j++) _solve(b, j);
for(j = 468660; j < 468670; j++) _solve(b, j);
for(j = 469500; j < 469510; j++) _solve(b, j);
for(j = 470340; j < 470350; j++) _solve(b, j);
for(j = 471180; j < 471190; j++) _solve(b, j);
for(j = 472020; j < 472030; j++) _solve(b, j);
for(j = 472860; j < 472870; j++) _solve(b, j);
for(j = 473700; j < 473710; j++) _solve(b, j);
for(j = 474540; j < 474550; j++) _solve(b, j);
for(j = 475380; j < 475390; j++) _solve(b, j);
for(j = 476220; j < 476230; j++) _solve(b, j);
for(j = 477060; j < 477070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 477900; j < 477910; j++) _solve(b, j);
for(j = 478740; j < 478750; j++) _solve(b, j);
for(j = 479580; j < 479590; j++) _solve(b, j);
for(j = 480420; j < 480430; j++) _solve(b, j);
for(j = 481260; j < 481270; j++) _solve(b, j);
for(j = 482100; j < 482110; j++) _solve(b, j);
for(j = 482940; j < 482950; j++) _solve(b, j);
for(j = 483780; j < 483790; j++) _solve(b, j);
for(j = 484620; j < 484630; j++) _solve(b, j);
for(j = 485460; j < 485470; j++) _solve(b, j);
for(j = 486300; j < 486310; j++) _solve(b, j);
for(j = 487140; j < 487150; j++) _solve(b, j);
for(j = 487980; j < 487990; j++) _solve(b, j);
for(j = 488820; j < 488830; j++) _solve(b, j);
for(j = 489660; j < 489670; j++) _solve(b, j);
for(j = 490500; j < 490510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 491340; j < 491350; j++) _solve(b, j);
for(j = 492180; j < 492190; j++) _solve(b, j);
for(j = 493020; j < 493030; j++) _solve(b, j);
for(j = 493860; j < 493870; j++) _solve(b, j);
for(j = 494700; j < 494710; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 424990; j < 425000; j++) _solve(b, j);
for(j = 425830; j < 425840; j++) _solve(b, j);
for(j = 426670; j < 426680; j++) _solve(b, j);
for(j = 427510; j < 427520; j++) _solve(b, j);
for(j = 428350; j < 428360; j++) _solve(b, j);
for(j = 429190; j < 429200; j++) _solve(b, j);
for(j = 430030; j < 430040; j++) _solve(b, j);
for(j = 430870; j < 430880; j++) _solve(b, j);
for(j = 431710; j < 431720; j++) _solve(b, j);
for(j = 432550; j < 432560; j++) _solve(b, j);
for(j = 433390; j < 433400; j++) _solve(b, j);
for(j = 434230; j < 434240; j++) _solve(b, j);
for(j = 435070; j < 435080; j++) _solve(b, j);
for(j = 435910; j < 435920; j++) _solve(b, j);
for(j = 436750; j < 436760; j++) _solve(b, j);
for(j = 437590; j < 437600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 438430; j < 438440; j++) _solve(b, j);
for(j = 439270; j < 439280; j++) _solve(b, j);
for(j = 440110; j < 440120; j++) _solve(b, j);
for(j = 440950; j < 440960; j++) _solve(b, j);
for(j = 441790; j < 441800; j++) _solve(b, j);
for(j = 442630; j < 442640; j++) _solve(b, j);
for(j = 443470; j < 443480; j++) _solve(b, j);
for(j = 444310; j < 444320; j++) _solve(b, j);
for(j = 445150; j < 445160; j++) _solve(b, j);
for(j = 445990; j < 446000; j++) _solve(b, j);
for(j = 446830; j < 446840; j++) _solve(b, j);
for(j = 447670; j < 447680; j++) _solve(b, j);
for(j = 448510; j < 448520; j++) _solve(b, j);
for(j = 449350; j < 449360; j++) _solve(b, j);
for(j = 450190; j < 450200; j++) _solve(b, j);
for(j = 451030; j < 451040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 451870; j < 451880; j++) _solve(b, j);
for(j = 452710; j < 452720; j++) _solve(b, j);
for(j = 453550; j < 453560; j++) _solve(b, j);
for(j = 454390; j < 454400; j++) _solve(b, j);
for(j = 455230; j < 455240; j++) _solve(b, j);
for(j = 456070; j < 456080; j++) _solve(b, j);
for(j = 456910; j < 456920; j++) _solve(b, j);
for(j = 457750; j < 457760; j++) _solve(b, j);
for(j = 458590; j < 458600; j++) _solve(b, j);
for(j = 459430; j < 459440; j++) _solve(b, j);
for(j = 460270; j < 460280; j++) _solve(b, j);
for(j = 461110; j < 461120; j++) _solve(b, j);
for(j = 461950; j < 461960; j++) _solve(b, j);
for(j = 462790; j < 462800; j++) _solve(b, j);
for(j = 463630; j < 463640; j++) _solve(b, j);
for(j = 464470; j < 464480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 465310; j < 465320; j++) _solve(b, j);
for(j = 466150; j < 466160; j++) _solve(b, j);
for(j = 466990; j < 467000; j++) _solve(b, j);
for(j = 467830; j < 467840; j++) _solve(b, j);
for(j = 468670; j < 468680; j++) _solve(b, j);
for(j = 469510; j < 469520; j++) _solve(b, j);
for(j = 470350; j < 470360; j++) _solve(b, j);
for(j = 471190; j < 471200; j++) _solve(b, j);
for(j = 472030; j < 472040; j++) _solve(b, j);
for(j = 472870; j < 472880; j++) _solve(b, j);
for(j = 473710; j < 473720; j++) _solve(b, j);
for(j = 474550; j < 474560; j++) _solve(b, j);
for(j = 475390; j < 475400; j++) _solve(b, j);
for(j = 476230; j < 476240; j++) _solve(b, j);
for(j = 477070; j < 477080; j++) _solve(b, j);
for(j = 477910; j < 477920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 478750; j < 478760; j++) _solve(b, j);
for(j = 479590; j < 479600; j++) _solve(b, j);
for(j = 480430; j < 480440; j++) _solve(b, j);
for(j = 481270; j < 481280; j++) _solve(b, j);
for(j = 482110; j < 482120; j++) _solve(b, j);
for(j = 482950; j < 482960; j++) _solve(b, j);
for(j = 483790; j < 483800; j++) _solve(b, j);
for(j = 484630; j < 484640; j++) _solve(b, j);
for(j = 485470; j < 485480; j++) _solve(b, j);
for(j = 486310; j < 486320; j++) _solve(b, j);
for(j = 487150; j < 487160; j++) _solve(b, j);
for(j = 487990; j < 488000; j++) _solve(b, j);
for(j = 488830; j < 488840; j++) _solve(b, j);
for(j = 489670; j < 489680; j++) _solve(b, j);
for(j = 490510; j < 490520; j++) _solve(b, j);
for(j = 491350; j < 491360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 492190; j < 492200; j++) _solve(b, j);
for(j = 493030; j < 493040; j++) _solve(b, j);
for(j = 493870; j < 493880; j++) _solve(b, j);
for(j = 494710; j < 494720; j++) _solve(b, j);
for(j = 495550; j < 495560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 425840; j < 425850; j++) _solve(b, j);
for(j = 426680; j < 426690; j++) _solve(b, j);
for(j = 427520; j < 427530; j++) _solve(b, j);
for(j = 428360; j < 428370; j++) _solve(b, j);
for(j = 429200; j < 429210; j++) _solve(b, j);
for(j = 430040; j < 430050; j++) _solve(b, j);
for(j = 430880; j < 430890; j++) _solve(b, j);
for(j = 431720; j < 431730; j++) _solve(b, j);
for(j = 432560; j < 432570; j++) _solve(b, j);
for(j = 433400; j < 433410; j++) _solve(b, j);
for(j = 434240; j < 434250; j++) _solve(b, j);
for(j = 435080; j < 435090; j++) _solve(b, j);
for(j = 435920; j < 435930; j++) _solve(b, j);
for(j = 436760; j < 436770; j++) _solve(b, j);
for(j = 437600; j < 437610; j++) _solve(b, j);
for(j = 438440; j < 438450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 439280; j < 439290; j++) _solve(b, j);
for(j = 440120; j < 440130; j++) _solve(b, j);
for(j = 440960; j < 440970; j++) _solve(b, j);
for(j = 441800; j < 441810; j++) _solve(b, j);
for(j = 442640; j < 442650; j++) _solve(b, j);
for(j = 443480; j < 443490; j++) _solve(b, j);
for(j = 444320; j < 444330; j++) _solve(b, j);
for(j = 445160; j < 445170; j++) _solve(b, j);
for(j = 446000; j < 446010; j++) _solve(b, j);
for(j = 446840; j < 446850; j++) _solve(b, j);
for(j = 447680; j < 447690; j++) _solve(b, j);
for(j = 448520; j < 448530; j++) _solve(b, j);
for(j = 449360; j < 449370; j++) _solve(b, j);
for(j = 450200; j < 450210; j++) _solve(b, j);
for(j = 451040; j < 451050; j++) _solve(b, j);
for(j = 451880; j < 451890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 452720; j < 452730; j++) _solve(b, j);
for(j = 453560; j < 453570; j++) _solve(b, j);
for(j = 454400; j < 454410; j++) _solve(b, j);
for(j = 455240; j < 455250; j++) _solve(b, j);
for(j = 456080; j < 456090; j++) _solve(b, j);
for(j = 456920; j < 456930; j++) _solve(b, j);
for(j = 457760; j < 457770; j++) _solve(b, j);
for(j = 458600; j < 458610; j++) _solve(b, j);
for(j = 459440; j < 459450; j++) _solve(b, j);
for(j = 460280; j < 460290; j++) _solve(b, j);
for(j = 461120; j < 461130; j++) _solve(b, j);
for(j = 461960; j < 461970; j++) _solve(b, j);
for(j = 462800; j < 462810; j++) _solve(b, j);
for(j = 463640; j < 463650; j++) _solve(b, j);
for(j = 464480; j < 464490; j++) _solve(b, j);
for(j = 465320; j < 465330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 466160; j < 466170; j++) _solve(b, j);
for(j = 467000; j < 467010; j++) _solve(b, j);
for(j = 467840; j < 467850; j++) _solve(b, j);
for(j = 468680; j < 468690; j++) _solve(b, j);
for(j = 469520; j < 469530; j++) _solve(b, j);
for(j = 470360; j < 470370; j++) _solve(b, j);
for(j = 471200; j < 471210; j++) _solve(b, j);
for(j = 472040; j < 472050; j++) _solve(b, j);
for(j = 472880; j < 472890; j++) _solve(b, j);
for(j = 473720; j < 473730; j++) _solve(b, j);
for(j = 474560; j < 474570; j++) _solve(b, j);
for(j = 475400; j < 475410; j++) _solve(b, j);
for(j = 476240; j < 476250; j++) _solve(b, j);
for(j = 477080; j < 477090; j++) _solve(b, j);
for(j = 477920; j < 477930; j++) _solve(b, j);
for(j = 478760; j < 478770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 479600; j < 479610; j++) _solve(b, j);
for(j = 480440; j < 480450; j++) _solve(b, j);
for(j = 481280; j < 481290; j++) _solve(b, j);
for(j = 482120; j < 482130; j++) _solve(b, j);
for(j = 482960; j < 482970; j++) _solve(b, j);
for(j = 483800; j < 483810; j++) _solve(b, j);
for(j = 484640; j < 484650; j++) _solve(b, j);
for(j = 485480; j < 485490; j++) _solve(b, j);
for(j = 486320; j < 486330; j++) _solve(b, j);
for(j = 487160; j < 487170; j++) _solve(b, j);
for(j = 488000; j < 488010; j++) _solve(b, j);
for(j = 488840; j < 488850; j++) _solve(b, j);
for(j = 489680; j < 489690; j++) _solve(b, j);
for(j = 490520; j < 490530; j++) _solve(b, j);
for(j = 491360; j < 491370; j++) _solve(b, j);
for(j = 492200; j < 492210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 493040; j < 493050; j++) _solve(b, j);
for(j = 493880; j < 493890; j++) _solve(b, j);
for(j = 494720; j < 494730; j++) _solve(b, j);
for(j = 495560; j < 495570; j++) _solve(b, j);
for(j = 496400; j < 496410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 426690; j < 426700; j++) _solve(b, j);
for(j = 427530; j < 427540; j++) _solve(b, j);
for(j = 428370; j < 428380; j++) _solve(b, j);
for(j = 429210; j < 429220; j++) _solve(b, j);
for(j = 430050; j < 430060; j++) _solve(b, j);
for(j = 430890; j < 430900; j++) _solve(b, j);
for(j = 431730; j < 431740; j++) _solve(b, j);
for(j = 432570; j < 432580; j++) _solve(b, j);
for(j = 433410; j < 433420; j++) _solve(b, j);
for(j = 434250; j < 434260; j++) _solve(b, j);
for(j = 435090; j < 435100; j++) _solve(b, j);
for(j = 435930; j < 435940; j++) _solve(b, j);
for(j = 436770; j < 436780; j++) _solve(b, j);
for(j = 437610; j < 437620; j++) _solve(b, j);
for(j = 438450; j < 438460; j++) _solve(b, j);
for(j = 439290; j < 439300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 440130; j < 440140; j++) _solve(b, j);
for(j = 440970; j < 440980; j++) _solve(b, j);
for(j = 441810; j < 441820; j++) _solve(b, j);
for(j = 442650; j < 442660; j++) _solve(b, j);
for(j = 443490; j < 443500; j++) _solve(b, j);
for(j = 444330; j < 444340; j++) _solve(b, j);
for(j = 445170; j < 445180; j++) _solve(b, j);
for(j = 446010; j < 446020; j++) _solve(b, j);
for(j = 446850; j < 446860; j++) _solve(b, j);
for(j = 447690; j < 447700; j++) _solve(b, j);
for(j = 448530; j < 448540; j++) _solve(b, j);
for(j = 449370; j < 449380; j++) _solve(b, j);
for(j = 450210; j < 450220; j++) _solve(b, j);
for(j = 451050; j < 451060; j++) _solve(b, j);
for(j = 451890; j < 451900; j++) _solve(b, j);
for(j = 452730; j < 452740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 453570; j < 453580; j++) _solve(b, j);
for(j = 454410; j < 454420; j++) _solve(b, j);
for(j = 455250; j < 455260; j++) _solve(b, j);
for(j = 456090; j < 456100; j++) _solve(b, j);
for(j = 456930; j < 456940; j++) _solve(b, j);
for(j = 457770; j < 457780; j++) _solve(b, j);
for(j = 458610; j < 458620; j++) _solve(b, j);
for(j = 459450; j < 459460; j++) _solve(b, j);
for(j = 460290; j < 460300; j++) _solve(b, j);
for(j = 461130; j < 461140; j++) _solve(b, j);
for(j = 461970; j < 461980; j++) _solve(b, j);
for(j = 462810; j < 462820; j++) _solve(b, j);
for(j = 463650; j < 463660; j++) _solve(b, j);
for(j = 464490; j < 464500; j++) _solve(b, j);
for(j = 465330; j < 465340; j++) _solve(b, j);
for(j = 466170; j < 466180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 467010; j < 467020; j++) _solve(b, j);
for(j = 467850; j < 467860; j++) _solve(b, j);
for(j = 468690; j < 468700; j++) _solve(b, j);
for(j = 469530; j < 469540; j++) _solve(b, j);
for(j = 470370; j < 470380; j++) _solve(b, j);
for(j = 471210; j < 471220; j++) _solve(b, j);
for(j = 472050; j < 472060; j++) _solve(b, j);
for(j = 472890; j < 472900; j++) _solve(b, j);
for(j = 473730; j < 473740; j++) _solve(b, j);
for(j = 474570; j < 474580; j++) _solve(b, j);
for(j = 475410; j < 475420; j++) _solve(b, j);
for(j = 476250; j < 476260; j++) _solve(b, j);
for(j = 477090; j < 477100; j++) _solve(b, j);
for(j = 477930; j < 477940; j++) _solve(b, j);
for(j = 478770; j < 478780; j++) _solve(b, j);
for(j = 479610; j < 479620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 480450; j < 480460; j++) _solve(b, j);
for(j = 481290; j < 481300; j++) _solve(b, j);
for(j = 482130; j < 482140; j++) _solve(b, j);
for(j = 482970; j < 482980; j++) _solve(b, j);
for(j = 483810; j < 483820; j++) _solve(b, j);
for(j = 484650; j < 484660; j++) _solve(b, j);
for(j = 485490; j < 485500; j++) _solve(b, j);
for(j = 486330; j < 486340; j++) _solve(b, j);
for(j = 487170; j < 487180; j++) _solve(b, j);
for(j = 488010; j < 488020; j++) _solve(b, j);
for(j = 488850; j < 488860; j++) _solve(b, j);
for(j = 489690; j < 489700; j++) _solve(b, j);
for(j = 490530; j < 490540; j++) _solve(b, j);
for(j = 491370; j < 491380; j++) _solve(b, j);
for(j = 492210; j < 492220; j++) _solve(b, j);
for(j = 493050; j < 493060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 493890; j < 493900; j++) _solve(b, j);
for(j = 494730; j < 494740; j++) _solve(b, j);
for(j = 495570; j < 495580; j++) _solve(b, j);
for(j = 496410; j < 496420; j++) _solve(b, j);
for(j = 497250; j < 497260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 427540; j < 427550; j++) _solve(b, j);
for(j = 428380; j < 428390; j++) _solve(b, j);
for(j = 429220; j < 429230; j++) _solve(b, j);
for(j = 430060; j < 430070; j++) _solve(b, j);
for(j = 430900; j < 430910; j++) _solve(b, j);
for(j = 431740; j < 431750; j++) _solve(b, j);
for(j = 432580; j < 432590; j++) _solve(b, j);
for(j = 433420; j < 433430; j++) _solve(b, j);
for(j = 434260; j < 434270; j++) _solve(b, j);
for(j = 435100; j < 435110; j++) _solve(b, j);
for(j = 435940; j < 435950; j++) _solve(b, j);
for(j = 436780; j < 436790; j++) _solve(b, j);
for(j = 437620; j < 437630; j++) _solve(b, j);
for(j = 438460; j < 438470; j++) _solve(b, j);
for(j = 439300; j < 439310; j++) _solve(b, j);
for(j = 440140; j < 440150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 440980; j < 440990; j++) _solve(b, j);
for(j = 441820; j < 441830; j++) _solve(b, j);
for(j = 442660; j < 442670; j++) _solve(b, j);
for(j = 443500; j < 443510; j++) _solve(b, j);
for(j = 444340; j < 444350; j++) _solve(b, j);
for(j = 445180; j < 445190; j++) _solve(b, j);
for(j = 446020; j < 446030; j++) _solve(b, j);
for(j = 446860; j < 446870; j++) _solve(b, j);
for(j = 447700; j < 447710; j++) _solve(b, j);
for(j = 448540; j < 448550; j++) _solve(b, j);
for(j = 449380; j < 449390; j++) _solve(b, j);
for(j = 450220; j < 450230; j++) _solve(b, j);
for(j = 451060; j < 451070; j++) _solve(b, j);
for(j = 451900; j < 451910; j++) _solve(b, j);
for(j = 452740; j < 452750; j++) _solve(b, j);
for(j = 453580; j < 453590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 454420; j < 454430; j++) _solve(b, j);
for(j = 455260; j < 455270; j++) _solve(b, j);
for(j = 456100; j < 456110; j++) _solve(b, j);
for(j = 456940; j < 456950; j++) _solve(b, j);
for(j = 457780; j < 457790; j++) _solve(b, j);
for(j = 458620; j < 458630; j++) _solve(b, j);
for(j = 459460; j < 459470; j++) _solve(b, j);
for(j = 460300; j < 460310; j++) _solve(b, j);
for(j = 461140; j < 461150; j++) _solve(b, j);
for(j = 461980; j < 461990; j++) _solve(b, j);
for(j = 462820; j < 462830; j++) _solve(b, j);
for(j = 463660; j < 463670; j++) _solve(b, j);
for(j = 464500; j < 464510; j++) _solve(b, j);
for(j = 465340; j < 465350; j++) _solve(b, j);
for(j = 466180; j < 466190; j++) _solve(b, j);
for(j = 467020; j < 467030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 467860; j < 467870; j++) _solve(b, j);
for(j = 468700; j < 468710; j++) _solve(b, j);
for(j = 469540; j < 469550; j++) _solve(b, j);
for(j = 470380; j < 470390; j++) _solve(b, j);
for(j = 471220; j < 471230; j++) _solve(b, j);
for(j = 472060; j < 472070; j++) _solve(b, j);
for(j = 472900; j < 472910; j++) _solve(b, j);
for(j = 473740; j < 473750; j++) _solve(b, j);
for(j = 474580; j < 474590; j++) _solve(b, j);
for(j = 475420; j < 475430; j++) _solve(b, j);
for(j = 476260; j < 476270; j++) _solve(b, j);
for(j = 477100; j < 477110; j++) _solve(b, j);
for(j = 477940; j < 477950; j++) _solve(b, j);
for(j = 478780; j < 478790; j++) _solve(b, j);
for(j = 479620; j < 479630; j++) _solve(b, j);
for(j = 480460; j < 480470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 481300; j < 481310; j++) _solve(b, j);
for(j = 482140; j < 482150; j++) _solve(b, j);
for(j = 482980; j < 482990; j++) _solve(b, j);
for(j = 483820; j < 483830; j++) _solve(b, j);
for(j = 484660; j < 484670; j++) _solve(b, j);
for(j = 485500; j < 485510; j++) _solve(b, j);
for(j = 486340; j < 486350; j++) _solve(b, j);
for(j = 487180; j < 487190; j++) _solve(b, j);
for(j = 488020; j < 488030; j++) _solve(b, j);
for(j = 488860; j < 488870; j++) _solve(b, j);
for(j = 489700; j < 489710; j++) _solve(b, j);
for(j = 490540; j < 490550; j++) _solve(b, j);
for(j = 491380; j < 491390; j++) _solve(b, j);
for(j = 492220; j < 492230; j++) _solve(b, j);
for(j = 493060; j < 493070; j++) _solve(b, j);
for(j = 493900; j < 493910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 494740; j < 494750; j++) _solve(b, j);
for(j = 495580; j < 495590; j++) _solve(b, j);
for(j = 496420; j < 496430; j++) _solve(b, j);
for(j = 497260; j < 497270; j++) _solve(b, j);
for(j = 498100; j < 498110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 428390; j < 428400; j++) _solve(b, j);
for(j = 429230; j < 429240; j++) _solve(b, j);
for(j = 430070; j < 430080; j++) _solve(b, j);
for(j = 430910; j < 430920; j++) _solve(b, j);
for(j = 431750; j < 431760; j++) _solve(b, j);
for(j = 432590; j < 432600; j++) _solve(b, j);
for(j = 433430; j < 433440; j++) _solve(b, j);
for(j = 434270; j < 434280; j++) _solve(b, j);
for(j = 435110; j < 435120; j++) _solve(b, j);
for(j = 435950; j < 435960; j++) _solve(b, j);
for(j = 436790; j < 436800; j++) _solve(b, j);
for(j = 437630; j < 437640; j++) _solve(b, j);
for(j = 438470; j < 438480; j++) _solve(b, j);
for(j = 439310; j < 439320; j++) _solve(b, j);
for(j = 440150; j < 440160; j++) _solve(b, j);
for(j = 440990; j < 441000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 441830; j < 441840; j++) _solve(b, j);
for(j = 442670; j < 442680; j++) _solve(b, j);
for(j = 443510; j < 443520; j++) _solve(b, j);
for(j = 444350; j < 444360; j++) _solve(b, j);
for(j = 445190; j < 445200; j++) _solve(b, j);
for(j = 446030; j < 446040; j++) _solve(b, j);
for(j = 446870; j < 446880; j++) _solve(b, j);
for(j = 447710; j < 447720; j++) _solve(b, j);
for(j = 448550; j < 448560; j++) _solve(b, j);
for(j = 449390; j < 449400; j++) _solve(b, j);
for(j = 450230; j < 450240; j++) _solve(b, j);
for(j = 451070; j < 451080; j++) _solve(b, j);
for(j = 451910; j < 451920; j++) _solve(b, j);
for(j = 452750; j < 452760; j++) _solve(b, j);
for(j = 453590; j < 453600; j++) _solve(b, j);
for(j = 454430; j < 454440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 455270; j < 455280; j++) _solve(b, j);
for(j = 456110; j < 456120; j++) _solve(b, j);
for(j = 456950; j < 456960; j++) _solve(b, j);
for(j = 457790; j < 457800; j++) _solve(b, j);
for(j = 458630; j < 458640; j++) _solve(b, j);
for(j = 459470; j < 459480; j++) _solve(b, j);
for(j = 460310; j < 460320; j++) _solve(b, j);
for(j = 461150; j < 461160; j++) _solve(b, j);
for(j = 461990; j < 462000; j++) _solve(b, j);
for(j = 462830; j < 462840; j++) _solve(b, j);
for(j = 463670; j < 463680; j++) _solve(b, j);
for(j = 464510; j < 464520; j++) _solve(b, j);
for(j = 465350; j < 465360; j++) _solve(b, j);
for(j = 466190; j < 466200; j++) _solve(b, j);
for(j = 467030; j < 467040; j++) _solve(b, j);
for(j = 467870; j < 467880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 468710; j < 468720; j++) _solve(b, j);
for(j = 469550; j < 469560; j++) _solve(b, j);
for(j = 470390; j < 470400; j++) _solve(b, j);
for(j = 471230; j < 471240; j++) _solve(b, j);
for(j = 472070; j < 472080; j++) _solve(b, j);
for(j = 472910; j < 472920; j++) _solve(b, j);
for(j = 473750; j < 473760; j++) _solve(b, j);
for(j = 474590; j < 474600; j++) _solve(b, j);
for(j = 475430; j < 475440; j++) _solve(b, j);
for(j = 476270; j < 476280; j++) _solve(b, j);
for(j = 477110; j < 477120; j++) _solve(b, j);
for(j = 477950; j < 477960; j++) _solve(b, j);
for(j = 478790; j < 478800; j++) _solve(b, j);
for(j = 479630; j < 479640; j++) _solve(b, j);
for(j = 480470; j < 480480; j++) _solve(b, j);
for(j = 481310; j < 481320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 482150; j < 482160; j++) _solve(b, j);
for(j = 482990; j < 483000; j++) _solve(b, j);
for(j = 483830; j < 483840; j++) _solve(b, j);
for(j = 484670; j < 484680; j++) _solve(b, j);
for(j = 485510; j < 485520; j++) _solve(b, j);
for(j = 486350; j < 486360; j++) _solve(b, j);
for(j = 487190; j < 487200; j++) _solve(b, j);
for(j = 488030; j < 488040; j++) _solve(b, j);
for(j = 488870; j < 488880; j++) _solve(b, j);
for(j = 489710; j < 489720; j++) _solve(b, j);
for(j = 490550; j < 490560; j++) _solve(b, j);
for(j = 491390; j < 491400; j++) _solve(b, j);
for(j = 492230; j < 492240; j++) _solve(b, j);
for(j = 493070; j < 493080; j++) _solve(b, j);
for(j = 493910; j < 493920; j++) _solve(b, j);
for(j = 494750; j < 494760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 495590; j < 495600; j++) _solve(b, j);
for(j = 496430; j < 496440; j++) _solve(b, j);
for(j = 497270; j < 497280; j++) _solve(b, j);
for(j = 498110; j < 498120; j++) _solve(b, j);
for(j = 498950; j < 498960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 429240; j < 429250; j++) _solve(b, j);
for(j = 430080; j < 430090; j++) _solve(b, j);
for(j = 430920; j < 430930; j++) _solve(b, j);
for(j = 431760; j < 431770; j++) _solve(b, j);
for(j = 432600; j < 432610; j++) _solve(b, j);
for(j = 433440; j < 433450; j++) _solve(b, j);
for(j = 434280; j < 434290; j++) _solve(b, j);
for(j = 435120; j < 435130; j++) _solve(b, j);
for(j = 435960; j < 435970; j++) _solve(b, j);
for(j = 436800; j < 436810; j++) _solve(b, j);
for(j = 437640; j < 437650; j++) _solve(b, j);
for(j = 438480; j < 438490; j++) _solve(b, j);
for(j = 439320; j < 439330; j++) _solve(b, j);
for(j = 440160; j < 440170; j++) _solve(b, j);
for(j = 441000; j < 441010; j++) _solve(b, j);
for(j = 441840; j < 441850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 442680; j < 442690; j++) _solve(b, j);
for(j = 443520; j < 443530; j++) _solve(b, j);
for(j = 444360; j < 444370; j++) _solve(b, j);
for(j = 445200; j < 445210; j++) _solve(b, j);
for(j = 446040; j < 446050; j++) _solve(b, j);
for(j = 446880; j < 446890; j++) _solve(b, j);
for(j = 447720; j < 447730; j++) _solve(b, j);
for(j = 448560; j < 448570; j++) _solve(b, j);
for(j = 449400; j < 449410; j++) _solve(b, j);
for(j = 450240; j < 450250; j++) _solve(b, j);
for(j = 451080; j < 451090; j++) _solve(b, j);
for(j = 451920; j < 451930; j++) _solve(b, j);
for(j = 452760; j < 452770; j++) _solve(b, j);
for(j = 453600; j < 453610; j++) _solve(b, j);
for(j = 454440; j < 454450; j++) _solve(b, j);
for(j = 455280; j < 455290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 456120; j < 456130; j++) _solve(b, j);
for(j = 456960; j < 456970; j++) _solve(b, j);
for(j = 457800; j < 457810; j++) _solve(b, j);
for(j = 458640; j < 458650; j++) _solve(b, j);
for(j = 459480; j < 459490; j++) _solve(b, j);
for(j = 460320; j < 460330; j++) _solve(b, j);
for(j = 461160; j < 461170; j++) _solve(b, j);
for(j = 462000; j < 462010; j++) _solve(b, j);
for(j = 462840; j < 462850; j++) _solve(b, j);
for(j = 463680; j < 463690; j++) _solve(b, j);
for(j = 464520; j < 464530; j++) _solve(b, j);
for(j = 465360; j < 465370; j++) _solve(b, j);
for(j = 466200; j < 466210; j++) _solve(b, j);
for(j = 467040; j < 467050; j++) _solve(b, j);
for(j = 467880; j < 467890; j++) _solve(b, j);
for(j = 468720; j < 468730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 469560; j < 469570; j++) _solve(b, j);
for(j = 470400; j < 470410; j++) _solve(b, j);
for(j = 471240; j < 471250; j++) _solve(b, j);
for(j = 472080; j < 472090; j++) _solve(b, j);
for(j = 472920; j < 472930; j++) _solve(b, j);
for(j = 473760; j < 473770; j++) _solve(b, j);
for(j = 474600; j < 474610; j++) _solve(b, j);
for(j = 475440; j < 475450; j++) _solve(b, j);
for(j = 476280; j < 476290; j++) _solve(b, j);
for(j = 477120; j < 477130; j++) _solve(b, j);
for(j = 477960; j < 477970; j++) _solve(b, j);
for(j = 478800; j < 478810; j++) _solve(b, j);
for(j = 479640; j < 479650; j++) _solve(b, j);
for(j = 480480; j < 480490; j++) _solve(b, j);
for(j = 481320; j < 481330; j++) _solve(b, j);
for(j = 482160; j < 482170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 483000; j < 483010; j++) _solve(b, j);
for(j = 483840; j < 483850; j++) _solve(b, j);
for(j = 484680; j < 484690; j++) _solve(b, j);
for(j = 485520; j < 485530; j++) _solve(b, j);
for(j = 486360; j < 486370; j++) _solve(b, j);
for(j = 487200; j < 487210; j++) _solve(b, j);
for(j = 488040; j < 488050; j++) _solve(b, j);
for(j = 488880; j < 488890; j++) _solve(b, j);
for(j = 489720; j < 489730; j++) _solve(b, j);
for(j = 490560; j < 490570; j++) _solve(b, j);
for(j = 491400; j < 491410; j++) _solve(b, j);
for(j = 492240; j < 492250; j++) _solve(b, j);
for(j = 493080; j < 493090; j++) _solve(b, j);
for(j = 493920; j < 493930; j++) _solve(b, j);
for(j = 494760; j < 494770; j++) _solve(b, j);
for(j = 495600; j < 495610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496440; j < 496450; j++) _solve(b, j);
for(j = 497280; j < 497290; j++) _solve(b, j);
for(j = 498120; j < 498130; j++) _solve(b, j);
for(j = 498960; j < 498970; j++) _solve(b, j);
for(j = 499800; j < 499810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 430090; j < 430100; j++) _solve(b, j);
for(j = 430930; j < 430940; j++) _solve(b, j);
for(j = 431770; j < 431780; j++) _solve(b, j);
for(j = 432610; j < 432620; j++) _solve(b, j);
for(j = 433450; j < 433460; j++) _solve(b, j);
for(j = 434290; j < 434300; j++) _solve(b, j);
for(j = 435130; j < 435140; j++) _solve(b, j);
for(j = 435970; j < 435980; j++) _solve(b, j);
for(j = 436810; j < 436820; j++) _solve(b, j);
for(j = 437650; j < 437660; j++) _solve(b, j);
for(j = 438490; j < 438500; j++) _solve(b, j);
for(j = 439330; j < 439340; j++) _solve(b, j);
for(j = 440170; j < 440180; j++) _solve(b, j);
for(j = 441010; j < 441020; j++) _solve(b, j);
for(j = 441850; j < 441860; j++) _solve(b, j);
for(j = 442690; j < 442700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 443530; j < 443540; j++) _solve(b, j);
for(j = 444370; j < 444380; j++) _solve(b, j);
for(j = 445210; j < 445220; j++) _solve(b, j);
for(j = 446050; j < 446060; j++) _solve(b, j);
for(j = 446890; j < 446900; j++) _solve(b, j);
for(j = 447730; j < 447740; j++) _solve(b, j);
for(j = 448570; j < 448580; j++) _solve(b, j);
for(j = 449410; j < 449420; j++) _solve(b, j);
for(j = 450250; j < 450260; j++) _solve(b, j);
for(j = 451090; j < 451100; j++) _solve(b, j);
for(j = 451930; j < 451940; j++) _solve(b, j);
for(j = 452770; j < 452780; j++) _solve(b, j);
for(j = 453610; j < 453620; j++) _solve(b, j);
for(j = 454450; j < 454460; j++) _solve(b, j);
for(j = 455290; j < 455300; j++) _solve(b, j);
for(j = 456130; j < 456140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 456970; j < 456980; j++) _solve(b, j);
for(j = 457810; j < 457820; j++) _solve(b, j);
for(j = 458650; j < 458660; j++) _solve(b, j);
for(j = 459490; j < 459500; j++) _solve(b, j);
for(j = 460330; j < 460340; j++) _solve(b, j);
for(j = 461170; j < 461180; j++) _solve(b, j);
for(j = 462010; j < 462020; j++) _solve(b, j);
for(j = 462850; j < 462860; j++) _solve(b, j);
for(j = 463690; j < 463700; j++) _solve(b, j);
for(j = 464530; j < 464540; j++) _solve(b, j);
for(j = 465370; j < 465380; j++) _solve(b, j);
for(j = 466210; j < 466220; j++) _solve(b, j);
for(j = 467050; j < 467060; j++) _solve(b, j);
for(j = 467890; j < 467900; j++) _solve(b, j);
for(j = 468730; j < 468740; j++) _solve(b, j);
for(j = 469570; j < 469580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 470410; j < 470420; j++) _solve(b, j);
for(j = 471250; j < 471260; j++) _solve(b, j);
for(j = 472090; j < 472100; j++) _solve(b, j);
for(j = 472930; j < 472940; j++) _solve(b, j);
for(j = 473770; j < 473780; j++) _solve(b, j);
for(j = 474610; j < 474620; j++) _solve(b, j);
for(j = 475450; j < 475460; j++) _solve(b, j);
for(j = 476290; j < 476300; j++) _solve(b, j);
for(j = 477130; j < 477140; j++) _solve(b, j);
for(j = 477970; j < 477980; j++) _solve(b, j);
for(j = 478810; j < 478820; j++) _solve(b, j);
for(j = 479650; j < 479660; j++) _solve(b, j);
for(j = 480490; j < 480500; j++) _solve(b, j);
for(j = 481330; j < 481340; j++) _solve(b, j);
for(j = 482170; j < 482180; j++) _solve(b, j);
for(j = 483010; j < 483020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 483850; j < 483860; j++) _solve(b, j);
for(j = 484690; j < 484700; j++) _solve(b, j);
for(j = 485530; j < 485540; j++) _solve(b, j);
for(j = 486370; j < 486380; j++) _solve(b, j);
for(j = 487210; j < 487220; j++) _solve(b, j);
for(j = 488050; j < 488060; j++) _solve(b, j);
for(j = 488890; j < 488900; j++) _solve(b, j);
for(j = 489730; j < 489740; j++) _solve(b, j);
for(j = 490570; j < 490580; j++) _solve(b, j);
for(j = 491410; j < 491420; j++) _solve(b, j);
for(j = 492250; j < 492260; j++) _solve(b, j);
for(j = 493090; j < 493100; j++) _solve(b, j);
for(j = 493930; j < 493940; j++) _solve(b, j);
for(j = 494770; j < 494780; j++) _solve(b, j);
for(j = 495610; j < 495620; j++) _solve(b, j);
for(j = 496450; j < 496460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497290; j < 497300; j++) _solve(b, j);
for(j = 498130; j < 498140; j++) _solve(b, j);
for(j = 498970; j < 498980; j++) _solve(b, j);
for(j = 499810; j < 499820; j++) _solve(b, j);
for(j = 500650; j < 500660; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 430940; j < 430950; j++) _solve(b, j);
for(j = 431780; j < 431790; j++) _solve(b, j);
for(j = 432620; j < 432630; j++) _solve(b, j);
for(j = 433460; j < 433470; j++) _solve(b, j);
for(j = 434300; j < 434310; j++) _solve(b, j);
for(j = 435140; j < 435150; j++) _solve(b, j);
for(j = 435980; j < 435990; j++) _solve(b, j);
for(j = 436820; j < 436830; j++) _solve(b, j);
for(j = 437660; j < 437670; j++) _solve(b, j);
for(j = 438500; j < 438510; j++) _solve(b, j);
for(j = 439340; j < 439350; j++) _solve(b, j);
for(j = 440180; j < 440190; j++) _solve(b, j);
for(j = 441020; j < 441030; j++) _solve(b, j);
for(j = 441860; j < 441870; j++) _solve(b, j);
for(j = 442700; j < 442710; j++) _solve(b, j);
for(j = 443540; j < 443550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 444380; j < 444390; j++) _solve(b, j);
for(j = 445220; j < 445230; j++) _solve(b, j);
for(j = 446060; j < 446070; j++) _solve(b, j);
for(j = 446900; j < 446910; j++) _solve(b, j);
for(j = 447740; j < 447750; j++) _solve(b, j);
for(j = 448580; j < 448590; j++) _solve(b, j);
for(j = 449420; j < 449430; j++) _solve(b, j);
for(j = 450260; j < 450270; j++) _solve(b, j);
for(j = 451100; j < 451110; j++) _solve(b, j);
for(j = 451940; j < 451950; j++) _solve(b, j);
for(j = 452780; j < 452790; j++) _solve(b, j);
for(j = 453620; j < 453630; j++) _solve(b, j);
for(j = 454460; j < 454470; j++) _solve(b, j);
for(j = 455300; j < 455310; j++) _solve(b, j);
for(j = 456140; j < 456150; j++) _solve(b, j);
for(j = 456980; j < 456990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 457820; j < 457830; j++) _solve(b, j);
for(j = 458660; j < 458670; j++) _solve(b, j);
for(j = 459500; j < 459510; j++) _solve(b, j);
for(j = 460340; j < 460350; j++) _solve(b, j);
for(j = 461180; j < 461190; j++) _solve(b, j);
for(j = 462020; j < 462030; j++) _solve(b, j);
for(j = 462860; j < 462870; j++) _solve(b, j);
for(j = 463700; j < 463710; j++) _solve(b, j);
for(j = 464540; j < 464550; j++) _solve(b, j);
for(j = 465380; j < 465390; j++) _solve(b, j);
for(j = 466220; j < 466230; j++) _solve(b, j);
for(j = 467060; j < 467070; j++) _solve(b, j);
for(j = 467900; j < 467910; j++) _solve(b, j);
for(j = 468740; j < 468750; j++) _solve(b, j);
for(j = 469580; j < 469590; j++) _solve(b, j);
for(j = 470420; j < 470430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 471260; j < 471270; j++) _solve(b, j);
for(j = 472100; j < 472110; j++) _solve(b, j);
for(j = 472940; j < 472950; j++) _solve(b, j);
for(j = 473780; j < 473790; j++) _solve(b, j);
for(j = 474620; j < 474630; j++) _solve(b, j);
for(j = 475460; j < 475470; j++) _solve(b, j);
for(j = 476300; j < 476310; j++) _solve(b, j);
for(j = 477140; j < 477150; j++) _solve(b, j);
for(j = 477980; j < 477990; j++) _solve(b, j);
for(j = 478820; j < 478830; j++) _solve(b, j);
for(j = 479660; j < 479670; j++) _solve(b, j);
for(j = 480500; j < 480510; j++) _solve(b, j);
for(j = 481340; j < 481350; j++) _solve(b, j);
for(j = 482180; j < 482190; j++) _solve(b, j);
for(j = 483020; j < 483030; j++) _solve(b, j);
for(j = 483860; j < 483870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 484700; j < 484710; j++) _solve(b, j);
for(j = 485540; j < 485550; j++) _solve(b, j);
for(j = 486380; j < 486390; j++) _solve(b, j);
for(j = 487220; j < 487230; j++) _solve(b, j);
for(j = 488060; j < 488070; j++) _solve(b, j);
for(j = 488900; j < 488910; j++) _solve(b, j);
for(j = 489740; j < 489750; j++) _solve(b, j);
for(j = 490580; j < 490590; j++) _solve(b, j);
for(j = 491420; j < 491430; j++) _solve(b, j);
for(j = 492260; j < 492270; j++) _solve(b, j);
for(j = 493100; j < 493110; j++) _solve(b, j);
for(j = 493940; j < 493950; j++) _solve(b, j);
for(j = 494780; j < 494790; j++) _solve(b, j);
for(j = 495620; j < 495630; j++) _solve(b, j);
for(j = 496460; j < 496470; j++) _solve(b, j);
for(j = 497300; j < 497310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498140; j < 498150; j++) _solve(b, j);
for(j = 498980; j < 498990; j++) _solve(b, j);
for(j = 499820; j < 499830; j++) _solve(b, j);
for(j = 500660; j < 500670; j++) _solve(b, j);
for(j = 501500; j < 501510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 431790; j < 431800; j++) _solve(b, j);
for(j = 432630; j < 432640; j++) _solve(b, j);
for(j = 433470; j < 433480; j++) _solve(b, j);
for(j = 434310; j < 434320; j++) _solve(b, j);
for(j = 435150; j < 435160; j++) _solve(b, j);
for(j = 435990; j < 436000; j++) _solve(b, j);
for(j = 436830; j < 436840; j++) _solve(b, j);
for(j = 437670; j < 437680; j++) _solve(b, j);
for(j = 438510; j < 438520; j++) _solve(b, j);
for(j = 439350; j < 439360; j++) _solve(b, j);
for(j = 440190; j < 440200; j++) _solve(b, j);
for(j = 441030; j < 441040; j++) _solve(b, j);
for(j = 441870; j < 441880; j++) _solve(b, j);
for(j = 442710; j < 442720; j++) _solve(b, j);
for(j = 443550; j < 443560; j++) _solve(b, j);
for(j = 444390; j < 444400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 445230; j < 445240; j++) _solve(b, j);
for(j = 446070; j < 446080; j++) _solve(b, j);
for(j = 446910; j < 446920; j++) _solve(b, j);
for(j = 447750; j < 447760; j++) _solve(b, j);
for(j = 448590; j < 448600; j++) _solve(b, j);
for(j = 449430; j < 449440; j++) _solve(b, j);
for(j = 450270; j < 450280; j++) _solve(b, j);
for(j = 451110; j < 451120; j++) _solve(b, j);
for(j = 451950; j < 451960; j++) _solve(b, j);
for(j = 452790; j < 452800; j++) _solve(b, j);
for(j = 453630; j < 453640; j++) _solve(b, j);
for(j = 454470; j < 454480; j++) _solve(b, j);
for(j = 455310; j < 455320; j++) _solve(b, j);
for(j = 456150; j < 456160; j++) _solve(b, j);
for(j = 456990; j < 457000; j++) _solve(b, j);
for(j = 457830; j < 457840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 458670; j < 458680; j++) _solve(b, j);
for(j = 459510; j < 459520; j++) _solve(b, j);
for(j = 460350; j < 460360; j++) _solve(b, j);
for(j = 461190; j < 461200; j++) _solve(b, j);
for(j = 462030; j < 462040; j++) _solve(b, j);
for(j = 462870; j < 462880; j++) _solve(b, j);
for(j = 463710; j < 463720; j++) _solve(b, j);
for(j = 464550; j < 464560; j++) _solve(b, j);
for(j = 465390; j < 465400; j++) _solve(b, j);
for(j = 466230; j < 466240; j++) _solve(b, j);
for(j = 467070; j < 467080; j++) _solve(b, j);
for(j = 467910; j < 467920; j++) _solve(b, j);
for(j = 468750; j < 468760; j++) _solve(b, j);
for(j = 469590; j < 469600; j++) _solve(b, j);
for(j = 470430; j < 470440; j++) _solve(b, j);
for(j = 471270; j < 471280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 472110; j < 472120; j++) _solve(b, j);
for(j = 472950; j < 472960; j++) _solve(b, j);
for(j = 473790; j < 473800; j++) _solve(b, j);
for(j = 474630; j < 474640; j++) _solve(b, j);
for(j = 475470; j < 475480; j++) _solve(b, j);
for(j = 476310; j < 476320; j++) _solve(b, j);
for(j = 477150; j < 477160; j++) _solve(b, j);
for(j = 477990; j < 478000; j++) _solve(b, j);
for(j = 478830; j < 478840; j++) _solve(b, j);
for(j = 479670; j < 479680; j++) _solve(b, j);
for(j = 480510; j < 480520; j++) _solve(b, j);
for(j = 481350; j < 481360; j++) _solve(b, j);
for(j = 482190; j < 482200; j++) _solve(b, j);
for(j = 483030; j < 483040; j++) _solve(b, j);
for(j = 483870; j < 483880; j++) _solve(b, j);
for(j = 484710; j < 484720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 485550; j < 485560; j++) _solve(b, j);
for(j = 486390; j < 486400; j++) _solve(b, j);
for(j = 487230; j < 487240; j++) _solve(b, j);
for(j = 488070; j < 488080; j++) _solve(b, j);
for(j = 488910; j < 488920; j++) _solve(b, j);
for(j = 489750; j < 489760; j++) _solve(b, j);
for(j = 490590; j < 490600; j++) _solve(b, j);
for(j = 491430; j < 491440; j++) _solve(b, j);
for(j = 492270; j < 492280; j++) _solve(b, j);
for(j = 493110; j < 493120; j++) _solve(b, j);
for(j = 493950; j < 493960; j++) _solve(b, j);
for(j = 494790; j < 494800; j++) _solve(b, j);
for(j = 495630; j < 495640; j++) _solve(b, j);
for(j = 496470; j < 496480; j++) _solve(b, j);
for(j = 497310; j < 497320; j++) _solve(b, j);
for(j = 498150; j < 498160; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498990; j < 499000; j++) _solve(b, j);
for(j = 499830; j < 499840; j++) _solve(b, j);
for(j = 500670; j < 500680; j++) _solve(b, j);
for(j = 501510; j < 501520; j++) _solve(b, j);
for(j = 502350; j < 502360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 432640; j < 432650; j++) _solve(b, j);
for(j = 433480; j < 433490; j++) _solve(b, j);
for(j = 434320; j < 434330; j++) _solve(b, j);
for(j = 435160; j < 435170; j++) _solve(b, j);
for(j = 436000; j < 436010; j++) _solve(b, j);
for(j = 436840; j < 436850; j++) _solve(b, j);
for(j = 437680; j < 437690; j++) _solve(b, j);
for(j = 438520; j < 438530; j++) _solve(b, j);
for(j = 439360; j < 439370; j++) _solve(b, j);
for(j = 440200; j < 440210; j++) _solve(b, j);
for(j = 441040; j < 441050; j++) _solve(b, j);
for(j = 441880; j < 441890; j++) _solve(b, j);
for(j = 442720; j < 442730; j++) _solve(b, j);
for(j = 443560; j < 443570; j++) _solve(b, j);
for(j = 444400; j < 444410; j++) _solve(b, j);
for(j = 445240; j < 445250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 446080; j < 446090; j++) _solve(b, j);
for(j = 446920; j < 446930; j++) _solve(b, j);
for(j = 447760; j < 447770; j++) _solve(b, j);
for(j = 448600; j < 448610; j++) _solve(b, j);
for(j = 449440; j < 449450; j++) _solve(b, j);
for(j = 450280; j < 450290; j++) _solve(b, j);
for(j = 451120; j < 451130; j++) _solve(b, j);
for(j = 451960; j < 451970; j++) _solve(b, j);
for(j = 452800; j < 452810; j++) _solve(b, j);
for(j = 453640; j < 453650; j++) _solve(b, j);
for(j = 454480; j < 454490; j++) _solve(b, j);
for(j = 455320; j < 455330; j++) _solve(b, j);
for(j = 456160; j < 456170; j++) _solve(b, j);
for(j = 457000; j < 457010; j++) _solve(b, j);
for(j = 457840; j < 457850; j++) _solve(b, j);
for(j = 458680; j < 458690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 459520; j < 459530; j++) _solve(b, j);
for(j = 460360; j < 460370; j++) _solve(b, j);
for(j = 461200; j < 461210; j++) _solve(b, j);
for(j = 462040; j < 462050; j++) _solve(b, j);
for(j = 462880; j < 462890; j++) _solve(b, j);
for(j = 463720; j < 463730; j++) _solve(b, j);
for(j = 464560; j < 464570; j++) _solve(b, j);
for(j = 465400; j < 465410; j++) _solve(b, j);
for(j = 466240; j < 466250; j++) _solve(b, j);
for(j = 467080; j < 467090; j++) _solve(b, j);
for(j = 467920; j < 467930; j++) _solve(b, j);
for(j = 468760; j < 468770; j++) _solve(b, j);
for(j = 469600; j < 469610; j++) _solve(b, j);
for(j = 470440; j < 470450; j++) _solve(b, j);
for(j = 471280; j < 471290; j++) _solve(b, j);
for(j = 472120; j < 472130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 472960; j < 472970; j++) _solve(b, j);
for(j = 473800; j < 473810; j++) _solve(b, j);
for(j = 474640; j < 474650; j++) _solve(b, j);
for(j = 475480; j < 475490; j++) _solve(b, j);
for(j = 476320; j < 476330; j++) _solve(b, j);
for(j = 477160; j < 477170; j++) _solve(b, j);
for(j = 478000; j < 478010; j++) _solve(b, j);
for(j = 478840; j < 478850; j++) _solve(b, j);
for(j = 479680; j < 479690; j++) _solve(b, j);
for(j = 480520; j < 480530; j++) _solve(b, j);
for(j = 481360; j < 481370; j++) _solve(b, j);
for(j = 482200; j < 482210; j++) _solve(b, j);
for(j = 483040; j < 483050; j++) _solve(b, j);
for(j = 483880; j < 483890; j++) _solve(b, j);
for(j = 484720; j < 484730; j++) _solve(b, j);
for(j = 485560; j < 485570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 486400; j < 486410; j++) _solve(b, j);
for(j = 487240; j < 487250; j++) _solve(b, j);
for(j = 488080; j < 488090; j++) _solve(b, j);
for(j = 488920; j < 488930; j++) _solve(b, j);
for(j = 489760; j < 489770; j++) _solve(b, j);
for(j = 490600; j < 490610; j++) _solve(b, j);
for(j = 491440; j < 491450; j++) _solve(b, j);
for(j = 492280; j < 492290; j++) _solve(b, j);
for(j = 493120; j < 493130; j++) _solve(b, j);
for(j = 493960; j < 493970; j++) _solve(b, j);
for(j = 494800; j < 494810; j++) _solve(b, j);
for(j = 495640; j < 495650; j++) _solve(b, j);
for(j = 496480; j < 496490; j++) _solve(b, j);
for(j = 497320; j < 497330; j++) _solve(b, j);
for(j = 498160; j < 498170; j++) _solve(b, j);
for(j = 499000; j < 499010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499840; j < 499850; j++) _solve(b, j);
for(j = 500680; j < 500690; j++) _solve(b, j);
for(j = 501520; j < 501530; j++) _solve(b, j);
for(j = 502360; j < 502370; j++) _solve(b, j);
for(j = 503200; j < 503210; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 433490; j < 433500; j++) _solve(b, j);
for(j = 434330; j < 434340; j++) _solve(b, j);
for(j = 435170; j < 435180; j++) _solve(b, j);
for(j = 436010; j < 436020; j++) _solve(b, j);
for(j = 436850; j < 436860; j++) _solve(b, j);
for(j = 437690; j < 437700; j++) _solve(b, j);
for(j = 438530; j < 438540; j++) _solve(b, j);
for(j = 439370; j < 439380; j++) _solve(b, j);
for(j = 440210; j < 440220; j++) _solve(b, j);
for(j = 441050; j < 441060; j++) _solve(b, j);
for(j = 441890; j < 441900; j++) _solve(b, j);
for(j = 442730; j < 442740; j++) _solve(b, j);
for(j = 443570; j < 443580; j++) _solve(b, j);
for(j = 444410; j < 444420; j++) _solve(b, j);
for(j = 445250; j < 445260; j++) _solve(b, j);
for(j = 446090; j < 446100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 446930; j < 446940; j++) _solve(b, j);
for(j = 447770; j < 447780; j++) _solve(b, j);
for(j = 448610; j < 448620; j++) _solve(b, j);
for(j = 449450; j < 449460; j++) _solve(b, j);
for(j = 450290; j < 450300; j++) _solve(b, j);
for(j = 451130; j < 451140; j++) _solve(b, j);
for(j = 451970; j < 451980; j++) _solve(b, j);
for(j = 452810; j < 452820; j++) _solve(b, j);
for(j = 453650; j < 453660; j++) _solve(b, j);
for(j = 454490; j < 454500; j++) _solve(b, j);
for(j = 455330; j < 455340; j++) _solve(b, j);
for(j = 456170; j < 456180; j++) _solve(b, j);
for(j = 457010; j < 457020; j++) _solve(b, j);
for(j = 457850; j < 457860; j++) _solve(b, j);
for(j = 458690; j < 458700; j++) _solve(b, j);
for(j = 459530; j < 459540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 460370; j < 460380; j++) _solve(b, j);
for(j = 461210; j < 461220; j++) _solve(b, j);
for(j = 462050; j < 462060; j++) _solve(b, j);
for(j = 462890; j < 462900; j++) _solve(b, j);
for(j = 463730; j < 463740; j++) _solve(b, j);
for(j = 464570; j < 464580; j++) _solve(b, j);
for(j = 465410; j < 465420; j++) _solve(b, j);
for(j = 466250; j < 466260; j++) _solve(b, j);
for(j = 467090; j < 467100; j++) _solve(b, j);
for(j = 467930; j < 467940; j++) _solve(b, j);
for(j = 468770; j < 468780; j++) _solve(b, j);
for(j = 469610; j < 469620; j++) _solve(b, j);
for(j = 470450; j < 470460; j++) _solve(b, j);
for(j = 471290; j < 471300; j++) _solve(b, j);
for(j = 472130; j < 472140; j++) _solve(b, j);
for(j = 472970; j < 472980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 473810; j < 473820; j++) _solve(b, j);
for(j = 474650; j < 474660; j++) _solve(b, j);
for(j = 475490; j < 475500; j++) _solve(b, j);
for(j = 476330; j < 476340; j++) _solve(b, j);
for(j = 477170; j < 477180; j++) _solve(b, j);
for(j = 478010; j < 478020; j++) _solve(b, j);
for(j = 478850; j < 478860; j++) _solve(b, j);
for(j = 479690; j < 479700; j++) _solve(b, j);
for(j = 480530; j < 480540; j++) _solve(b, j);
for(j = 481370; j < 481380; j++) _solve(b, j);
for(j = 482210; j < 482220; j++) _solve(b, j);
for(j = 483050; j < 483060; j++) _solve(b, j);
for(j = 483890; j < 483900; j++) _solve(b, j);
for(j = 484730; j < 484740; j++) _solve(b, j);
for(j = 485570; j < 485580; j++) _solve(b, j);
for(j = 486410; j < 486420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 487250; j < 487260; j++) _solve(b, j);
for(j = 488090; j < 488100; j++) _solve(b, j);
for(j = 488930; j < 488940; j++) _solve(b, j);
for(j = 489770; j < 489780; j++) _solve(b, j);
for(j = 490610; j < 490620; j++) _solve(b, j);
for(j = 491450; j < 491460; j++) _solve(b, j);
for(j = 492290; j < 492300; j++) _solve(b, j);
for(j = 493130; j < 493140; j++) _solve(b, j);
for(j = 493970; j < 493980; j++) _solve(b, j);
for(j = 494810; j < 494820; j++) _solve(b, j);
for(j = 495650; j < 495660; j++) _solve(b, j);
for(j = 496490; j < 496500; j++) _solve(b, j);
for(j = 497330; j < 497340; j++) _solve(b, j);
for(j = 498170; j < 498180; j++) _solve(b, j);
for(j = 499010; j < 499020; j++) _solve(b, j);
for(j = 499850; j < 499860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500690; j < 500700; j++) _solve(b, j);
for(j = 501530; j < 501540; j++) _solve(b, j);
for(j = 502370; j < 502380; j++) _solve(b, j);
for(j = 503210; j < 503220; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 434340; j < 434350; j++) _solve(b, j);
for(j = 435180; j < 435190; j++) _solve(b, j);
for(j = 436020; j < 436030; j++) _solve(b, j);
for(j = 436860; j < 436870; j++) _solve(b, j);
for(j = 437700; j < 437710; j++) _solve(b, j);
for(j = 438540; j < 438550; j++) _solve(b, j);
for(j = 439380; j < 439390; j++) _solve(b, j);
for(j = 440220; j < 440230; j++) _solve(b, j);
for(j = 441060; j < 441070; j++) _solve(b, j);
for(j = 441900; j < 441910; j++) _solve(b, j);
for(j = 442740; j < 442750; j++) _solve(b, j);
for(j = 443580; j < 443590; j++) _solve(b, j);
for(j = 444420; j < 444430; j++) _solve(b, j);
for(j = 445260; j < 445270; j++) _solve(b, j);
for(j = 446100; j < 446110; j++) _solve(b, j);
for(j = 446940; j < 446950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 447780; j < 447790; j++) _solve(b, j);
for(j = 448620; j < 448630; j++) _solve(b, j);
for(j = 449460; j < 449470; j++) _solve(b, j);
for(j = 450300; j < 450310; j++) _solve(b, j);
for(j = 451140; j < 451150; j++) _solve(b, j);
for(j = 451980; j < 451990; j++) _solve(b, j);
for(j = 452820; j < 452830; j++) _solve(b, j);
for(j = 453660; j < 453670; j++) _solve(b, j);
for(j = 454500; j < 454510; j++) _solve(b, j);
for(j = 455340; j < 455350; j++) _solve(b, j);
for(j = 456180; j < 456190; j++) _solve(b, j);
for(j = 457020; j < 457030; j++) _solve(b, j);
for(j = 457860; j < 457870; j++) _solve(b, j);
for(j = 458700; j < 458710; j++) _solve(b, j);
for(j = 459540; j < 459550; j++) _solve(b, j);
for(j = 460380; j < 460390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 461220; j < 461230; j++) _solve(b, j);
for(j = 462060; j < 462070; j++) _solve(b, j);
for(j = 462900; j < 462910; j++) _solve(b, j);
for(j = 463740; j < 463750; j++) _solve(b, j);
for(j = 464580; j < 464590; j++) _solve(b, j);
for(j = 465420; j < 465430; j++) _solve(b, j);
for(j = 466260; j < 466270; j++) _solve(b, j);
for(j = 467100; j < 467110; j++) _solve(b, j);
for(j = 467940; j < 467950; j++) _solve(b, j);
for(j = 468780; j < 468790; j++) _solve(b, j);
for(j = 469620; j < 469630; j++) _solve(b, j);
for(j = 470460; j < 470470; j++) _solve(b, j);
for(j = 471300; j < 471310; j++) _solve(b, j);
for(j = 472140; j < 472150; j++) _solve(b, j);
for(j = 472980; j < 472990; j++) _solve(b, j);
for(j = 473820; j < 473830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 474660; j < 474670; j++) _solve(b, j);
for(j = 475500; j < 475510; j++) _solve(b, j);
for(j = 476340; j < 476350; j++) _solve(b, j);
for(j = 477180; j < 477190; j++) _solve(b, j);
for(j = 478020; j < 478030; j++) _solve(b, j);
for(j = 478860; j < 478870; j++) _solve(b, j);
for(j = 479700; j < 479710; j++) _solve(b, j);
for(j = 480540; j < 480550; j++) _solve(b, j);
for(j = 481380; j < 481390; j++) _solve(b, j);
for(j = 482220; j < 482230; j++) _solve(b, j);
for(j = 483060; j < 483070; j++) _solve(b, j);
for(j = 483900; j < 483910; j++) _solve(b, j);
for(j = 484740; j < 484750; j++) _solve(b, j);
for(j = 485580; j < 485590; j++) _solve(b, j);
for(j = 486420; j < 486430; j++) _solve(b, j);
for(j = 487260; j < 487270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 488100; j < 488110; j++) _solve(b, j);
for(j = 488940; j < 488950; j++) _solve(b, j);
for(j = 489780; j < 489790; j++) _solve(b, j);
for(j = 490620; j < 490630; j++) _solve(b, j);
for(j = 491460; j < 491470; j++) _solve(b, j);
for(j = 492300; j < 492310; j++) _solve(b, j);
for(j = 493140; j < 493150; j++) _solve(b, j);
for(j = 493980; j < 493990; j++) _solve(b, j);
for(j = 494820; j < 494830; j++) _solve(b, j);
for(j = 495660; j < 495670; j++) _solve(b, j);
for(j = 496500; j < 496510; j++) _solve(b, j);
for(j = 497340; j < 497350; j++) _solve(b, j);
for(j = 498180; j < 498190; j++) _solve(b, j);
for(j = 499020; j < 499030; j++) _solve(b, j);
for(j = 499860; j < 499870; j++) _solve(b, j);
for(j = 500700; j < 500710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501540; j < 501550; j++) _solve(b, j);
for(j = 502380; j < 502390; j++) _solve(b, j);
for(j = 503220; j < 503230; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 435190; j < 435200; j++) _solve(b, j);
for(j = 436030; j < 436040; j++) _solve(b, j);
for(j = 436870; j < 436880; j++) _solve(b, j);
for(j = 437710; j < 437720; j++) _solve(b, j);
for(j = 438550; j < 438560; j++) _solve(b, j);
for(j = 439390; j < 439400; j++) _solve(b, j);
for(j = 440230; j < 440240; j++) _solve(b, j);
for(j = 441070; j < 441080; j++) _solve(b, j);
for(j = 441910; j < 441920; j++) _solve(b, j);
for(j = 442750; j < 442760; j++) _solve(b, j);
for(j = 443590; j < 443600; j++) _solve(b, j);
for(j = 444430; j < 444440; j++) _solve(b, j);
for(j = 445270; j < 445280; j++) _solve(b, j);
for(j = 446110; j < 446120; j++) _solve(b, j);
for(j = 446950; j < 446960; j++) _solve(b, j);
for(j = 447790; j < 447800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 448630; j < 448640; j++) _solve(b, j);
for(j = 449470; j < 449480; j++) _solve(b, j);
for(j = 450310; j < 450320; j++) _solve(b, j);
for(j = 451150; j < 451160; j++) _solve(b, j);
for(j = 451990; j < 452000; j++) _solve(b, j);
for(j = 452830; j < 452840; j++) _solve(b, j);
for(j = 453670; j < 453680; j++) _solve(b, j);
for(j = 454510; j < 454520; j++) _solve(b, j);
for(j = 455350; j < 455360; j++) _solve(b, j);
for(j = 456190; j < 456200; j++) _solve(b, j);
for(j = 457030; j < 457040; j++) _solve(b, j);
for(j = 457870; j < 457880; j++) _solve(b, j);
for(j = 458710; j < 458720; j++) _solve(b, j);
for(j = 459550; j < 459560; j++) _solve(b, j);
for(j = 460390; j < 460400; j++) _solve(b, j);
for(j = 461230; j < 461240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 462070; j < 462080; j++) _solve(b, j);
for(j = 462910; j < 462920; j++) _solve(b, j);
for(j = 463750; j < 463760; j++) _solve(b, j);
for(j = 464590; j < 464600; j++) _solve(b, j);
for(j = 465430; j < 465440; j++) _solve(b, j);
for(j = 466270; j < 466280; j++) _solve(b, j);
for(j = 467110; j < 467120; j++) _solve(b, j);
for(j = 467950; j < 467960; j++) _solve(b, j);
for(j = 468790; j < 468800; j++) _solve(b, j);
for(j = 469630; j < 469640; j++) _solve(b, j);
for(j = 470470; j < 470480; j++) _solve(b, j);
for(j = 471310; j < 471320; j++) _solve(b, j);
for(j = 472150; j < 472160; j++) _solve(b, j);
for(j = 472990; j < 473000; j++) _solve(b, j);
for(j = 473830; j < 473840; j++) _solve(b, j);
for(j = 474670; j < 474680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 475510; j < 475520; j++) _solve(b, j);
for(j = 476350; j < 476360; j++) _solve(b, j);
for(j = 477190; j < 477200; j++) _solve(b, j);
for(j = 478030; j < 478040; j++) _solve(b, j);
for(j = 478870; j < 478880; j++) _solve(b, j);
for(j = 479710; j < 479720; j++) _solve(b, j);
for(j = 480550; j < 480560; j++) _solve(b, j);
for(j = 481390; j < 481400; j++) _solve(b, j);
for(j = 482230; j < 482240; j++) _solve(b, j);
for(j = 483070; j < 483080; j++) _solve(b, j);
for(j = 483910; j < 483920; j++) _solve(b, j);
for(j = 484750; j < 484760; j++) _solve(b, j);
for(j = 485590; j < 485600; j++) _solve(b, j);
for(j = 486430; j < 486440; j++) _solve(b, j);
for(j = 487270; j < 487280; j++) _solve(b, j);
for(j = 488110; j < 488120; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 488950; j < 488960; j++) _solve(b, j);
for(j = 489790; j < 489800; j++) _solve(b, j);
for(j = 490630; j < 490640; j++) _solve(b, j);
for(j = 491470; j < 491480; j++) _solve(b, j);
for(j = 492310; j < 492320; j++) _solve(b, j);
for(j = 493150; j < 493160; j++) _solve(b, j);
for(j = 493990; j < 494000; j++) _solve(b, j);
for(j = 494830; j < 494840; j++) _solve(b, j);
for(j = 495670; j < 495680; j++) _solve(b, j);
for(j = 496510; j < 496520; j++) _solve(b, j);
for(j = 497350; j < 497360; j++) _solve(b, j);
for(j = 498190; j < 498200; j++) _solve(b, j);
for(j = 499030; j < 499040; j++) _solve(b, j);
for(j = 499870; j < 499880; j++) _solve(b, j);
for(j = 500710; j < 500720; j++) _solve(b, j);
for(j = 501550; j < 501560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502390; j < 502400; j++) _solve(b, j);
for(j = 503230; j < 503240; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 436040; j < 436050; j++) _solve(b, j);
for(j = 436880; j < 436890; j++) _solve(b, j);
for(j = 437720; j < 437730; j++) _solve(b, j);
for(j = 438560; j < 438570; j++) _solve(b, j);
for(j = 439400; j < 439410; j++) _solve(b, j);
for(j = 440240; j < 440250; j++) _solve(b, j);
for(j = 441080; j < 441090; j++) _solve(b, j);
for(j = 441920; j < 441930; j++) _solve(b, j);
for(j = 442760; j < 442770; j++) _solve(b, j);
for(j = 443600; j < 443610; j++) _solve(b, j);
for(j = 444440; j < 444450; j++) _solve(b, j);
for(j = 445280; j < 445290; j++) _solve(b, j);
for(j = 446120; j < 446130; j++) _solve(b, j);
for(j = 446960; j < 446970; j++) _solve(b, j);
for(j = 447800; j < 447810; j++) _solve(b, j);
for(j = 448640; j < 448650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 449480; j < 449490; j++) _solve(b, j);
for(j = 450320; j < 450330; j++) _solve(b, j);
for(j = 451160; j < 451170; j++) _solve(b, j);
for(j = 452000; j < 452010; j++) _solve(b, j);
for(j = 452840; j < 452850; j++) _solve(b, j);
for(j = 453680; j < 453690; j++) _solve(b, j);
for(j = 454520; j < 454530; j++) _solve(b, j);
for(j = 455360; j < 455370; j++) _solve(b, j);
for(j = 456200; j < 456210; j++) _solve(b, j);
for(j = 457040; j < 457050; j++) _solve(b, j);
for(j = 457880; j < 457890; j++) _solve(b, j);
for(j = 458720; j < 458730; j++) _solve(b, j);
for(j = 459560; j < 459570; j++) _solve(b, j);
for(j = 460400; j < 460410; j++) _solve(b, j);
for(j = 461240; j < 461250; j++) _solve(b, j);
for(j = 462080; j < 462090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 462920; j < 462930; j++) _solve(b, j);
for(j = 463760; j < 463770; j++) _solve(b, j);
for(j = 464600; j < 464610; j++) _solve(b, j);
for(j = 465440; j < 465450; j++) _solve(b, j);
for(j = 466280; j < 466290; j++) _solve(b, j);
for(j = 467120; j < 467130; j++) _solve(b, j);
for(j = 467960; j < 467970; j++) _solve(b, j);
for(j = 468800; j < 468810; j++) _solve(b, j);
for(j = 469640; j < 469650; j++) _solve(b, j);
for(j = 470480; j < 470490; j++) _solve(b, j);
for(j = 471320; j < 471330; j++) _solve(b, j);
for(j = 472160; j < 472170; j++) _solve(b, j);
for(j = 473000; j < 473010; j++) _solve(b, j);
for(j = 473840; j < 473850; j++) _solve(b, j);
for(j = 474680; j < 474690; j++) _solve(b, j);
for(j = 475520; j < 475530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 476360; j < 476370; j++) _solve(b, j);
for(j = 477200; j < 477210; j++) _solve(b, j);
for(j = 478040; j < 478050; j++) _solve(b, j);
for(j = 478880; j < 478890; j++) _solve(b, j);
for(j = 479720; j < 479730; j++) _solve(b, j);
for(j = 480560; j < 480570; j++) _solve(b, j);
for(j = 481400; j < 481410; j++) _solve(b, j);
for(j = 482240; j < 482250; j++) _solve(b, j);
for(j = 483080; j < 483090; j++) _solve(b, j);
for(j = 483920; j < 483930; j++) _solve(b, j);
for(j = 484760; j < 484770; j++) _solve(b, j);
for(j = 485600; j < 485610; j++) _solve(b, j);
for(j = 486440; j < 486450; j++) _solve(b, j);
for(j = 487280; j < 487290; j++) _solve(b, j);
for(j = 488120; j < 488130; j++) _solve(b, j);
for(j = 488960; j < 488970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 489800; j < 489810; j++) _solve(b, j);
for(j = 490640; j < 490650; j++) _solve(b, j);
for(j = 491480; j < 491490; j++) _solve(b, j);
for(j = 492320; j < 492330; j++) _solve(b, j);
for(j = 493160; j < 493170; j++) _solve(b, j);
for(j = 494000; j < 494010; j++) _solve(b, j);
for(j = 494840; j < 494850; j++) _solve(b, j);
for(j = 495680; j < 495690; j++) _solve(b, j);
for(j = 496520; j < 496530; j++) _solve(b, j);
for(j = 497360; j < 497370; j++) _solve(b, j);
for(j = 498200; j < 498210; j++) _solve(b, j);
for(j = 499040; j < 499050; j++) _solve(b, j);
for(j = 499880; j < 499890; j++) _solve(b, j);
for(j = 500720; j < 500730; j++) _solve(b, j);
for(j = 501560; j < 501570; j++) _solve(b, j);
for(j = 502400; j < 502410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503240; j < 503250; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 436890; j < 436900; j++) _solve(b, j);
for(j = 437730; j < 437740; j++) _solve(b, j);
for(j = 438570; j < 438580; j++) _solve(b, j);
for(j = 439410; j < 439420; j++) _solve(b, j);
for(j = 440250; j < 440260; j++) _solve(b, j);
for(j = 441090; j < 441100; j++) _solve(b, j);
for(j = 441930; j < 441940; j++) _solve(b, j);
for(j = 442770; j < 442780; j++) _solve(b, j);
for(j = 443610; j < 443620; j++) _solve(b, j);
for(j = 444450; j < 444460; j++) _solve(b, j);
for(j = 445290; j < 445300; j++) _solve(b, j);
for(j = 446130; j < 446140; j++) _solve(b, j);
for(j = 446970; j < 446980; j++) _solve(b, j);
for(j = 447810; j < 447820; j++) _solve(b, j);
for(j = 448650; j < 448660; j++) _solve(b, j);
for(j = 449490; j < 449500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 450330; j < 450340; j++) _solve(b, j);
for(j = 451170; j < 451180; j++) _solve(b, j);
for(j = 452010; j < 452020; j++) _solve(b, j);
for(j = 452850; j < 452860; j++) _solve(b, j);
for(j = 453690; j < 453700; j++) _solve(b, j);
for(j = 454530; j < 454540; j++) _solve(b, j);
for(j = 455370; j < 455380; j++) _solve(b, j);
for(j = 456210; j < 456220; j++) _solve(b, j);
for(j = 457050; j < 457060; j++) _solve(b, j);
for(j = 457890; j < 457900; j++) _solve(b, j);
for(j = 458730; j < 458740; j++) _solve(b, j);
for(j = 459570; j < 459580; j++) _solve(b, j);
for(j = 460410; j < 460420; j++) _solve(b, j);
for(j = 461250; j < 461260; j++) _solve(b, j);
for(j = 462090; j < 462100; j++) _solve(b, j);
for(j = 462930; j < 462940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 463770; j < 463780; j++) _solve(b, j);
for(j = 464610; j < 464620; j++) _solve(b, j);
for(j = 465450; j < 465460; j++) _solve(b, j);
for(j = 466290; j < 466300; j++) _solve(b, j);
for(j = 467130; j < 467140; j++) _solve(b, j);
for(j = 467970; j < 467980; j++) _solve(b, j);
for(j = 468810; j < 468820; j++) _solve(b, j);
for(j = 469650; j < 469660; j++) _solve(b, j);
for(j = 470490; j < 470500; j++) _solve(b, j);
for(j = 471330; j < 471340; j++) _solve(b, j);
for(j = 472170; j < 472180; j++) _solve(b, j);
for(j = 473010; j < 473020; j++) _solve(b, j);
for(j = 473850; j < 473860; j++) _solve(b, j);
for(j = 474690; j < 474700; j++) _solve(b, j);
for(j = 475530; j < 475540; j++) _solve(b, j);
for(j = 476370; j < 476380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 477210; j < 477220; j++) _solve(b, j);
for(j = 478050; j < 478060; j++) _solve(b, j);
for(j = 478890; j < 478900; j++) _solve(b, j);
for(j = 479730; j < 479740; j++) _solve(b, j);
for(j = 480570; j < 480580; j++) _solve(b, j);
for(j = 481410; j < 481420; j++) _solve(b, j);
for(j = 482250; j < 482260; j++) _solve(b, j);
for(j = 483090; j < 483100; j++) _solve(b, j);
for(j = 483930; j < 483940; j++) _solve(b, j);
for(j = 484770; j < 484780; j++) _solve(b, j);
for(j = 485610; j < 485620; j++) _solve(b, j);
for(j = 486450; j < 486460; j++) _solve(b, j);
for(j = 487290; j < 487300; j++) _solve(b, j);
for(j = 488130; j < 488140; j++) _solve(b, j);
for(j = 488970; j < 488980; j++) _solve(b, j);
for(j = 489810; j < 489820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 490650; j < 490660; j++) _solve(b, j);
for(j = 491490; j < 491500; j++) _solve(b, j);
for(j = 492330; j < 492340; j++) _solve(b, j);
for(j = 493170; j < 493180; j++) _solve(b, j);
for(j = 494010; j < 494020; j++) _solve(b, j);
for(j = 494850; j < 494860; j++) _solve(b, j);
for(j = 495690; j < 495700; j++) _solve(b, j);
for(j = 496530; j < 496540; j++) _solve(b, j);
for(j = 497370; j < 497380; j++) _solve(b, j);
for(j = 498210; j < 498220; j++) _solve(b, j);
for(j = 499050; j < 499060; j++) _solve(b, j);
for(j = 499890; j < 499900; j++) _solve(b, j);
for(j = 500730; j < 500740; j++) _solve(b, j);
for(j = 501570; j < 501580; j++) _solve(b, j);
for(j = 502410; j < 502420; j++) _solve(b, j);
for(j = 503250; j < 503260; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 437740; j < 437750; j++) _solve(b, j);
for(j = 438580; j < 438590; j++) _solve(b, j);
for(j = 439420; j < 439430; j++) _solve(b, j);
for(j = 440260; j < 440270; j++) _solve(b, j);
for(j = 441100; j < 441110; j++) _solve(b, j);
for(j = 441940; j < 441950; j++) _solve(b, j);
for(j = 442780; j < 442790; j++) _solve(b, j);
for(j = 443620; j < 443630; j++) _solve(b, j);
for(j = 444460; j < 444470; j++) _solve(b, j);
for(j = 445300; j < 445310; j++) _solve(b, j);
for(j = 446140; j < 446150; j++) _solve(b, j);
for(j = 446980; j < 446990; j++) _solve(b, j);
for(j = 447820; j < 447830; j++) _solve(b, j);
for(j = 448660; j < 448670; j++) _solve(b, j);
for(j = 449500; j < 449510; j++) _solve(b, j);
for(j = 450340; j < 450350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 451180; j < 451190; j++) _solve(b, j);
for(j = 452020; j < 452030; j++) _solve(b, j);
for(j = 452860; j < 452870; j++) _solve(b, j);
for(j = 453700; j < 453710; j++) _solve(b, j);
for(j = 454540; j < 454550; j++) _solve(b, j);
for(j = 455380; j < 455390; j++) _solve(b, j);
for(j = 456220; j < 456230; j++) _solve(b, j);
for(j = 457060; j < 457070; j++) _solve(b, j);
for(j = 457900; j < 457910; j++) _solve(b, j);
for(j = 458740; j < 458750; j++) _solve(b, j);
for(j = 459580; j < 459590; j++) _solve(b, j);
for(j = 460420; j < 460430; j++) _solve(b, j);
for(j = 461260; j < 461270; j++) _solve(b, j);
for(j = 462100; j < 462110; j++) _solve(b, j);
for(j = 462940; j < 462950; j++) _solve(b, j);
for(j = 463780; j < 463790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 464620; j < 464630; j++) _solve(b, j);
for(j = 465460; j < 465470; j++) _solve(b, j);
for(j = 466300; j < 466310; j++) _solve(b, j);
for(j = 467140; j < 467150; j++) _solve(b, j);
for(j = 467980; j < 467990; j++) _solve(b, j);
for(j = 468820; j < 468830; j++) _solve(b, j);
for(j = 469660; j < 469670; j++) _solve(b, j);
for(j = 470500; j < 470510; j++) _solve(b, j);
for(j = 471340; j < 471350; j++) _solve(b, j);
for(j = 472180; j < 472190; j++) _solve(b, j);
for(j = 473020; j < 473030; j++) _solve(b, j);
for(j = 473860; j < 473870; j++) _solve(b, j);
for(j = 474700; j < 474710; j++) _solve(b, j);
for(j = 475540; j < 475550; j++) _solve(b, j);
for(j = 476380; j < 476390; j++) _solve(b, j);
for(j = 477220; j < 477230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 478060; j < 478070; j++) _solve(b, j);
for(j = 478900; j < 478910; j++) _solve(b, j);
for(j = 479740; j < 479750; j++) _solve(b, j);
for(j = 480580; j < 480590; j++) _solve(b, j);
for(j = 481420; j < 481430; j++) _solve(b, j);
for(j = 482260; j < 482270; j++) _solve(b, j);
for(j = 483100; j < 483110; j++) _solve(b, j);
for(j = 483940; j < 483950; j++) _solve(b, j);
for(j = 484780; j < 484790; j++) _solve(b, j);
for(j = 485620; j < 485630; j++) _solve(b, j);
for(j = 486460; j < 486470; j++) _solve(b, j);
for(j = 487300; j < 487310; j++) _solve(b, j);
for(j = 488140; j < 488150; j++) _solve(b, j);
for(j = 488980; j < 488990; j++) _solve(b, j);
for(j = 489820; j < 489830; j++) _solve(b, j);
for(j = 490660; j < 490670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 491500; j < 491510; j++) _solve(b, j);
for(j = 492340; j < 492350; j++) _solve(b, j);
for(j = 493180; j < 493190; j++) _solve(b, j);
for(j = 494020; j < 494030; j++) _solve(b, j);
for(j = 494860; j < 494870; j++) _solve(b, j);
for(j = 495700; j < 495710; j++) _solve(b, j);
for(j = 496540; j < 496550; j++) _solve(b, j);
for(j = 497380; j < 497390; j++) _solve(b, j);
for(j = 498220; j < 498230; j++) _solve(b, j);
for(j = 499060; j < 499070; j++) _solve(b, j);
for(j = 499900; j < 499910; j++) _solve(b, j);
for(j = 500740; j < 500750; j++) _solve(b, j);
for(j = 501580; j < 501590; j++) _solve(b, j);
for(j = 502420; j < 502430; j++) _solve(b, j);
for(j = 503260; j < 503270; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 438590; j < 438600; j++) _solve(b, j);
for(j = 439430; j < 439440; j++) _solve(b, j);
for(j = 440270; j < 440280; j++) _solve(b, j);
for(j = 441110; j < 441120; j++) _solve(b, j);
for(j = 441950; j < 441960; j++) _solve(b, j);
for(j = 442790; j < 442800; j++) _solve(b, j);
for(j = 443630; j < 443640; j++) _solve(b, j);
for(j = 444470; j < 444480; j++) _solve(b, j);
for(j = 445310; j < 445320; j++) _solve(b, j);
for(j = 446150; j < 446160; j++) _solve(b, j);
for(j = 446990; j < 447000; j++) _solve(b, j);
for(j = 447830; j < 447840; j++) _solve(b, j);
for(j = 448670; j < 448680; j++) _solve(b, j);
for(j = 449510; j < 449520; j++) _solve(b, j);
for(j = 450350; j < 450360; j++) _solve(b, j);
for(j = 451190; j < 451200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 452030; j < 452040; j++) _solve(b, j);
for(j = 452870; j < 452880; j++) _solve(b, j);
for(j = 453710; j < 453720; j++) _solve(b, j);
for(j = 454550; j < 454560; j++) _solve(b, j);
for(j = 455390; j < 455400; j++) _solve(b, j);
for(j = 456230; j < 456240; j++) _solve(b, j);
for(j = 457070; j < 457080; j++) _solve(b, j);
for(j = 457910; j < 457920; j++) _solve(b, j);
for(j = 458750; j < 458760; j++) _solve(b, j);
for(j = 459590; j < 459600; j++) _solve(b, j);
for(j = 460430; j < 460440; j++) _solve(b, j);
for(j = 461270; j < 461280; j++) _solve(b, j);
for(j = 462110; j < 462120; j++) _solve(b, j);
for(j = 462950; j < 462960; j++) _solve(b, j);
for(j = 463790; j < 463800; j++) _solve(b, j);
for(j = 464630; j < 464640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 465470; j < 465480; j++) _solve(b, j);
for(j = 466310; j < 466320; j++) _solve(b, j);
for(j = 467150; j < 467160; j++) _solve(b, j);
for(j = 467990; j < 468000; j++) _solve(b, j);
for(j = 468830; j < 468840; j++) _solve(b, j);
for(j = 469670; j < 469680; j++) _solve(b, j);
for(j = 470510; j < 470520; j++) _solve(b, j);
for(j = 471350; j < 471360; j++) _solve(b, j);
for(j = 472190; j < 472200; j++) _solve(b, j);
for(j = 473030; j < 473040; j++) _solve(b, j);
for(j = 473870; j < 473880; j++) _solve(b, j);
for(j = 474710; j < 474720; j++) _solve(b, j);
for(j = 475550; j < 475560; j++) _solve(b, j);
for(j = 476390; j < 476400; j++) _solve(b, j);
for(j = 477230; j < 477240; j++) _solve(b, j);
for(j = 478070; j < 478080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 478910; j < 478920; j++) _solve(b, j);
for(j = 479750; j < 479760; j++) _solve(b, j);
for(j = 480590; j < 480600; j++) _solve(b, j);
for(j = 481430; j < 481440; j++) _solve(b, j);
for(j = 482270; j < 482280; j++) _solve(b, j);
for(j = 483110; j < 483120; j++) _solve(b, j);
for(j = 483950; j < 483960; j++) _solve(b, j);
for(j = 484790; j < 484800; j++) _solve(b, j);
for(j = 485630; j < 485640; j++) _solve(b, j);
for(j = 486470; j < 486480; j++) _solve(b, j);
for(j = 487310; j < 487320; j++) _solve(b, j);
for(j = 488150; j < 488160; j++) _solve(b, j);
for(j = 488990; j < 489000; j++) _solve(b, j);
for(j = 489830; j < 489840; j++) _solve(b, j);
for(j = 490670; j < 490680; j++) _solve(b, j);
for(j = 491510; j < 491520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 492350; j < 492360; j++) _solve(b, j);
for(j = 493190; j < 493200; j++) _solve(b, j);
for(j = 494030; j < 494040; j++) _solve(b, j);
for(j = 494870; j < 494880; j++) _solve(b, j);
for(j = 495710; j < 495720; j++) _solve(b, j);
for(j = 496550; j < 496560; j++) _solve(b, j);
for(j = 497390; j < 497400; j++) _solve(b, j);
for(j = 498230; j < 498240; j++) _solve(b, j);
for(j = 499070; j < 499080; j++) _solve(b, j);
for(j = 499910; j < 499920; j++) _solve(b, j);
for(j = 500750; j < 500760; j++) _solve(b, j);
for(j = 501590; j < 501600; j++) _solve(b, j);
for(j = 502430; j < 502440; j++) _solve(b, j);
for(j = 503270; j < 503280; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 439440; j < 439450; j++) _solve(b, j);
for(j = 440280; j < 440290; j++) _solve(b, j);
for(j = 441120; j < 441130; j++) _solve(b, j);
for(j = 441960; j < 441970; j++) _solve(b, j);
for(j = 442800; j < 442810; j++) _solve(b, j);
for(j = 443640; j < 443650; j++) _solve(b, j);
for(j = 444480; j < 444490; j++) _solve(b, j);
for(j = 445320; j < 445330; j++) _solve(b, j);
for(j = 446160; j < 446170; j++) _solve(b, j);
for(j = 447000; j < 447010; j++) _solve(b, j);
for(j = 447840; j < 447850; j++) _solve(b, j);
for(j = 448680; j < 448690; j++) _solve(b, j);
for(j = 449520; j < 449530; j++) _solve(b, j);
for(j = 450360; j < 450370; j++) _solve(b, j);
for(j = 451200; j < 451210; j++) _solve(b, j);
for(j = 452040; j < 452050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 452880; j < 452890; j++) _solve(b, j);
for(j = 453720; j < 453730; j++) _solve(b, j);
for(j = 454560; j < 454570; j++) _solve(b, j);
for(j = 455400; j < 455410; j++) _solve(b, j);
for(j = 456240; j < 456250; j++) _solve(b, j);
for(j = 457080; j < 457090; j++) _solve(b, j);
for(j = 457920; j < 457930; j++) _solve(b, j);
for(j = 458760; j < 458770; j++) _solve(b, j);
for(j = 459600; j < 459610; j++) _solve(b, j);
for(j = 460440; j < 460450; j++) _solve(b, j);
for(j = 461280; j < 461290; j++) _solve(b, j);
for(j = 462120; j < 462130; j++) _solve(b, j);
for(j = 462960; j < 462970; j++) _solve(b, j);
for(j = 463800; j < 463810; j++) _solve(b, j);
for(j = 464640; j < 464650; j++) _solve(b, j);
for(j = 465480; j < 465490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 466320; j < 466330; j++) _solve(b, j);
for(j = 467160; j < 467170; j++) _solve(b, j);
for(j = 468000; j < 468010; j++) _solve(b, j);
for(j = 468840; j < 468850; j++) _solve(b, j);
for(j = 469680; j < 469690; j++) _solve(b, j);
for(j = 470520; j < 470530; j++) _solve(b, j);
for(j = 471360; j < 471370; j++) _solve(b, j);
for(j = 472200; j < 472210; j++) _solve(b, j);
for(j = 473040; j < 473050; j++) _solve(b, j);
for(j = 473880; j < 473890; j++) _solve(b, j);
for(j = 474720; j < 474730; j++) _solve(b, j);
for(j = 475560; j < 475570; j++) _solve(b, j);
for(j = 476400; j < 476410; j++) _solve(b, j);
for(j = 477240; j < 477250; j++) _solve(b, j);
for(j = 478080; j < 478090; j++) _solve(b, j);
for(j = 478920; j < 478930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 479760; j < 479770; j++) _solve(b, j);
for(j = 480600; j < 480610; j++) _solve(b, j);
for(j = 481440; j < 481450; j++) _solve(b, j);
for(j = 482280; j < 482290; j++) _solve(b, j);
for(j = 483120; j < 483130; j++) _solve(b, j);
for(j = 483960; j < 483970; j++) _solve(b, j);
for(j = 484800; j < 484810; j++) _solve(b, j);
for(j = 485640; j < 485650; j++) _solve(b, j);
for(j = 486480; j < 486490; j++) _solve(b, j);
for(j = 487320; j < 487330; j++) _solve(b, j);
for(j = 488160; j < 488170; j++) _solve(b, j);
for(j = 489000; j < 489010; j++) _solve(b, j);
for(j = 489840; j < 489850; j++) _solve(b, j);
for(j = 490680; j < 490690; j++) _solve(b, j);
for(j = 491520; j < 491530; j++) _solve(b, j);
for(j = 492360; j < 492370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 493200; j < 493210; j++) _solve(b, j);
for(j = 494040; j < 494050; j++) _solve(b, j);
for(j = 494880; j < 494890; j++) _solve(b, j);
for(j = 495720; j < 495730; j++) _solve(b, j);
for(j = 496560; j < 496570; j++) _solve(b, j);
for(j = 497400; j < 497410; j++) _solve(b, j);
for(j = 498240; j < 498250; j++) _solve(b, j);
for(j = 499080; j < 499090; j++) _solve(b, j);
for(j = 499920; j < 499930; j++) _solve(b, j);
for(j = 500760; j < 500770; j++) _solve(b, j);
for(j = 501600; j < 501610; j++) _solve(b, j);
for(j = 502440; j < 502450; j++) _solve(b, j);
for(j = 503280; j < 503290; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 440290; j < 440300; j++) _solve(b, j);
for(j = 441130; j < 441140; j++) _solve(b, j);
for(j = 441970; j < 441980; j++) _solve(b, j);
for(j = 442810; j < 442820; j++) _solve(b, j);
for(j = 443650; j < 443660; j++) _solve(b, j);
for(j = 444490; j < 444500; j++) _solve(b, j);
for(j = 445330; j < 445340; j++) _solve(b, j);
for(j = 446170; j < 446180; j++) _solve(b, j);
for(j = 447010; j < 447020; j++) _solve(b, j);
for(j = 447850; j < 447860; j++) _solve(b, j);
for(j = 448690; j < 448700; j++) _solve(b, j);
for(j = 449530; j < 449540; j++) _solve(b, j);
for(j = 450370; j < 450380; j++) _solve(b, j);
for(j = 451210; j < 451220; j++) _solve(b, j);
for(j = 452050; j < 452060; j++) _solve(b, j);
for(j = 452890; j < 452900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 453730; j < 453740; j++) _solve(b, j);
for(j = 454570; j < 454580; j++) _solve(b, j);
for(j = 455410; j < 455420; j++) _solve(b, j);
for(j = 456250; j < 456260; j++) _solve(b, j);
for(j = 457090; j < 457100; j++) _solve(b, j);
for(j = 457930; j < 457940; j++) _solve(b, j);
for(j = 458770; j < 458780; j++) _solve(b, j);
for(j = 459610; j < 459620; j++) _solve(b, j);
for(j = 460450; j < 460460; j++) _solve(b, j);
for(j = 461290; j < 461300; j++) _solve(b, j);
for(j = 462130; j < 462140; j++) _solve(b, j);
for(j = 462970; j < 462980; j++) _solve(b, j);
for(j = 463810; j < 463820; j++) _solve(b, j);
for(j = 464650; j < 464660; j++) _solve(b, j);
for(j = 465490; j < 465500; j++) _solve(b, j);
for(j = 466330; j < 466340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 467170; j < 467180; j++) _solve(b, j);
for(j = 468010; j < 468020; j++) _solve(b, j);
for(j = 468850; j < 468860; j++) _solve(b, j);
for(j = 469690; j < 469700; j++) _solve(b, j);
for(j = 470530; j < 470540; j++) _solve(b, j);
for(j = 471370; j < 471380; j++) _solve(b, j);
for(j = 472210; j < 472220; j++) _solve(b, j);
for(j = 473050; j < 473060; j++) _solve(b, j);
for(j = 473890; j < 473900; j++) _solve(b, j);
for(j = 474730; j < 474740; j++) _solve(b, j);
for(j = 475570; j < 475580; j++) _solve(b, j);
for(j = 476410; j < 476420; j++) _solve(b, j);
for(j = 477250; j < 477260; j++) _solve(b, j);
for(j = 478090; j < 478100; j++) _solve(b, j);
for(j = 478930; j < 478940; j++) _solve(b, j);
for(j = 479770; j < 479780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 480610; j < 480620; j++) _solve(b, j);
for(j = 481450; j < 481460; j++) _solve(b, j);
for(j = 482290; j < 482300; j++) _solve(b, j);
for(j = 483130; j < 483140; j++) _solve(b, j);
for(j = 483970; j < 483980; j++) _solve(b, j);
for(j = 484810; j < 484820; j++) _solve(b, j);
for(j = 485650; j < 485660; j++) _solve(b, j);
for(j = 486490; j < 486500; j++) _solve(b, j);
for(j = 487330; j < 487340; j++) _solve(b, j);
for(j = 488170; j < 488180; j++) _solve(b, j);
for(j = 489010; j < 489020; j++) _solve(b, j);
for(j = 489850; j < 489860; j++) _solve(b, j);
for(j = 490690; j < 490700; j++) _solve(b, j);
for(j = 491530; j < 491540; j++) _solve(b, j);
for(j = 492370; j < 492380; j++) _solve(b, j);
for(j = 493210; j < 493220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 494050; j < 494060; j++) _solve(b, j);
for(j = 494890; j < 494900; j++) _solve(b, j);
for(j = 495730; j < 495740; j++) _solve(b, j);
for(j = 496570; j < 496580; j++) _solve(b, j);
for(j = 497410; j < 497420; j++) _solve(b, j);
for(j = 498250; j < 498260; j++) _solve(b, j);
for(j = 499090; j < 499100; j++) _solve(b, j);
for(j = 499930; j < 499940; j++) _solve(b, j);
for(j = 500770; j < 500780; j++) _solve(b, j);
for(j = 501610; j < 501620; j++) _solve(b, j);
for(j = 502450; j < 502460; j++) _solve(b, j);
for(j = 503290; j < 503300; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 441140; j < 441150; j++) _solve(b, j);
for(j = 441980; j < 441990; j++) _solve(b, j);
for(j = 442820; j < 442830; j++) _solve(b, j);
for(j = 443660; j < 443670; j++) _solve(b, j);
for(j = 444500; j < 444510; j++) _solve(b, j);
for(j = 445340; j < 445350; j++) _solve(b, j);
for(j = 446180; j < 446190; j++) _solve(b, j);
for(j = 447020; j < 447030; j++) _solve(b, j);
for(j = 447860; j < 447870; j++) _solve(b, j);
for(j = 448700; j < 448710; j++) _solve(b, j);
for(j = 449540; j < 449550; j++) _solve(b, j);
for(j = 450380; j < 450390; j++) _solve(b, j);
for(j = 451220; j < 451230; j++) _solve(b, j);
for(j = 452060; j < 452070; j++) _solve(b, j);
for(j = 452900; j < 452910; j++) _solve(b, j);
for(j = 453740; j < 453750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 454580; j < 454590; j++) _solve(b, j);
for(j = 455420; j < 455430; j++) _solve(b, j);
for(j = 456260; j < 456270; j++) _solve(b, j);
for(j = 457100; j < 457110; j++) _solve(b, j);
for(j = 457940; j < 457950; j++) _solve(b, j);
for(j = 458780; j < 458790; j++) _solve(b, j);
for(j = 459620; j < 459630; j++) _solve(b, j);
for(j = 460460; j < 460470; j++) _solve(b, j);
for(j = 461300; j < 461310; j++) _solve(b, j);
for(j = 462140; j < 462150; j++) _solve(b, j);
for(j = 462980; j < 462990; j++) _solve(b, j);
for(j = 463820; j < 463830; j++) _solve(b, j);
for(j = 464660; j < 464670; j++) _solve(b, j);
for(j = 465500; j < 465510; j++) _solve(b, j);
for(j = 466340; j < 466350; j++) _solve(b, j);
for(j = 467180; j < 467190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 468020; j < 468030; j++) _solve(b, j);
for(j = 468860; j < 468870; j++) _solve(b, j);
for(j = 469700; j < 469710; j++) _solve(b, j);
for(j = 470540; j < 470550; j++) _solve(b, j);
for(j = 471380; j < 471390; j++) _solve(b, j);
for(j = 472220; j < 472230; j++) _solve(b, j);
for(j = 473060; j < 473070; j++) _solve(b, j);
for(j = 473900; j < 473910; j++) _solve(b, j);
for(j = 474740; j < 474750; j++) _solve(b, j);
for(j = 475580; j < 475590; j++) _solve(b, j);
for(j = 476420; j < 476430; j++) _solve(b, j);
for(j = 477260; j < 477270; j++) _solve(b, j);
for(j = 478100; j < 478110; j++) _solve(b, j);
for(j = 478940; j < 478950; j++) _solve(b, j);
for(j = 479780; j < 479790; j++) _solve(b, j);
for(j = 480620; j < 480630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 481460; j < 481470; j++) _solve(b, j);
for(j = 482300; j < 482310; j++) _solve(b, j);
for(j = 483140; j < 483150; j++) _solve(b, j);
for(j = 483980; j < 483990; j++) _solve(b, j);
for(j = 484820; j < 484830; j++) _solve(b, j);
for(j = 485660; j < 485670; j++) _solve(b, j);
for(j = 486500; j < 486510; j++) _solve(b, j);
for(j = 487340; j < 487350; j++) _solve(b, j);
for(j = 488180; j < 488190; j++) _solve(b, j);
for(j = 489020; j < 489030; j++) _solve(b, j);
for(j = 489860; j < 489870; j++) _solve(b, j);
for(j = 490700; j < 490710; j++) _solve(b, j);
for(j = 491540; j < 491550; j++) _solve(b, j);
for(j = 492380; j < 492390; j++) _solve(b, j);
for(j = 493220; j < 493230; j++) _solve(b, j);
for(j = 494060; j < 494070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 494900; j < 494910; j++) _solve(b, j);
for(j = 495740; j < 495750; j++) _solve(b, j);
for(j = 496580; j < 496590; j++) _solve(b, j);
for(j = 497420; j < 497430; j++) _solve(b, j);
for(j = 498260; j < 498270; j++) _solve(b, j);
for(j = 499100; j < 499110; j++) _solve(b, j);
for(j = 499940; j < 499950; j++) _solve(b, j);
for(j = 500780; j < 500790; j++) _solve(b, j);
for(j = 501620; j < 501630; j++) _solve(b, j);
for(j = 502460; j < 502470; j++) _solve(b, j);
for(j = 503300; j < 503310; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 441990; j < 442000; j++) _solve(b, j);
for(j = 442830; j < 442840; j++) _solve(b, j);
for(j = 443670; j < 443680; j++) _solve(b, j);
for(j = 444510; j < 444520; j++) _solve(b, j);
for(j = 445350; j < 445360; j++) _solve(b, j);
for(j = 446190; j < 446200; j++) _solve(b, j);
for(j = 447030; j < 447040; j++) _solve(b, j);
for(j = 447870; j < 447880; j++) _solve(b, j);
for(j = 448710; j < 448720; j++) _solve(b, j);
for(j = 449550; j < 449560; j++) _solve(b, j);
for(j = 450390; j < 450400; j++) _solve(b, j);
for(j = 451230; j < 451240; j++) _solve(b, j);
for(j = 452070; j < 452080; j++) _solve(b, j);
for(j = 452910; j < 452920; j++) _solve(b, j);
for(j = 453750; j < 453760; j++) _solve(b, j);
for(j = 454590; j < 454600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 455430; j < 455440; j++) _solve(b, j);
for(j = 456270; j < 456280; j++) _solve(b, j);
for(j = 457110; j < 457120; j++) _solve(b, j);
for(j = 457950; j < 457960; j++) _solve(b, j);
for(j = 458790; j < 458800; j++) _solve(b, j);
for(j = 459630; j < 459640; j++) _solve(b, j);
for(j = 460470; j < 460480; j++) _solve(b, j);
for(j = 461310; j < 461320; j++) _solve(b, j);
for(j = 462150; j < 462160; j++) _solve(b, j);
for(j = 462990; j < 463000; j++) _solve(b, j);
for(j = 463830; j < 463840; j++) _solve(b, j);
for(j = 464670; j < 464680; j++) _solve(b, j);
for(j = 465510; j < 465520; j++) _solve(b, j);
for(j = 466350; j < 466360; j++) _solve(b, j);
for(j = 467190; j < 467200; j++) _solve(b, j);
for(j = 468030; j < 468040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 468870; j < 468880; j++) _solve(b, j);
for(j = 469710; j < 469720; j++) _solve(b, j);
for(j = 470550; j < 470560; j++) _solve(b, j);
for(j = 471390; j < 471400; j++) _solve(b, j);
for(j = 472230; j < 472240; j++) _solve(b, j);
for(j = 473070; j < 473080; j++) _solve(b, j);
for(j = 473910; j < 473920; j++) _solve(b, j);
for(j = 474750; j < 474760; j++) _solve(b, j);
for(j = 475590; j < 475600; j++) _solve(b, j);
for(j = 476430; j < 476440; j++) _solve(b, j);
for(j = 477270; j < 477280; j++) _solve(b, j);
for(j = 478110; j < 478120; j++) _solve(b, j);
for(j = 478950; j < 478960; j++) _solve(b, j);
for(j = 479790; j < 479800; j++) _solve(b, j);
for(j = 480630; j < 480640; j++) _solve(b, j);
for(j = 481470; j < 481480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 482310; j < 482320; j++) _solve(b, j);
for(j = 483150; j < 483160; j++) _solve(b, j);
for(j = 483990; j < 484000; j++) _solve(b, j);
for(j = 484830; j < 484840; j++) _solve(b, j);
for(j = 485670; j < 485680; j++) _solve(b, j);
for(j = 486510; j < 486520; j++) _solve(b, j);
for(j = 487350; j < 487360; j++) _solve(b, j);
for(j = 488190; j < 488200; j++) _solve(b, j);
for(j = 489030; j < 489040; j++) _solve(b, j);
for(j = 489870; j < 489880; j++) _solve(b, j);
for(j = 490710; j < 490720; j++) _solve(b, j);
for(j = 491550; j < 491560; j++) _solve(b, j);
for(j = 492390; j < 492400; j++) _solve(b, j);
for(j = 493230; j < 493240; j++) _solve(b, j);
for(j = 494070; j < 494080; j++) _solve(b, j);
for(j = 494910; j < 494920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 495750; j < 495760; j++) _solve(b, j);
for(j = 496590; j < 496600; j++) _solve(b, j);
for(j = 497430; j < 497440; j++) _solve(b, j);
for(j = 498270; j < 498280; j++) _solve(b, j);
for(j = 499110; j < 499120; j++) _solve(b, j);
for(j = 499950; j < 499960; j++) _solve(b, j);
for(j = 500790; j < 500800; j++) _solve(b, j);
for(j = 501630; j < 501640; j++) _solve(b, j);
for(j = 502470; j < 502480; j++) _solve(b, j);
for(j = 503310; j < 503320; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 442840; j < 442850; j++) _solve(b, j);
for(j = 443680; j < 443690; j++) _solve(b, j);
for(j = 444520; j < 444530; j++) _solve(b, j);
for(j = 445360; j < 445370; j++) _solve(b, j);
for(j = 446200; j < 446210; j++) _solve(b, j);
for(j = 447040; j < 447050; j++) _solve(b, j);
for(j = 447880; j < 447890; j++) _solve(b, j);
for(j = 448720; j < 448730; j++) _solve(b, j);
for(j = 449560; j < 449570; j++) _solve(b, j);
for(j = 450400; j < 450410; j++) _solve(b, j);
for(j = 451240; j < 451250; j++) _solve(b, j);
for(j = 452080; j < 452090; j++) _solve(b, j);
for(j = 452920; j < 452930; j++) _solve(b, j);
for(j = 453760; j < 453770; j++) _solve(b, j);
for(j = 454600; j < 454610; j++) _solve(b, j);
for(j = 455440; j < 455450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 456280; j < 456290; j++) _solve(b, j);
for(j = 457120; j < 457130; j++) _solve(b, j);
for(j = 457960; j < 457970; j++) _solve(b, j);
for(j = 458800; j < 458810; j++) _solve(b, j);
for(j = 459640; j < 459650; j++) _solve(b, j);
for(j = 460480; j < 460490; j++) _solve(b, j);
for(j = 461320; j < 461330; j++) _solve(b, j);
for(j = 462160; j < 462170; j++) _solve(b, j);
for(j = 463000; j < 463010; j++) _solve(b, j);
for(j = 463840; j < 463850; j++) _solve(b, j);
for(j = 464680; j < 464690; j++) _solve(b, j);
for(j = 465520; j < 465530; j++) _solve(b, j);
for(j = 466360; j < 466370; j++) _solve(b, j);
for(j = 467200; j < 467210; j++) _solve(b, j);
for(j = 468040; j < 468050; j++) _solve(b, j);
for(j = 468880; j < 468890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 469720; j < 469730; j++) _solve(b, j);
for(j = 470560; j < 470570; j++) _solve(b, j);
for(j = 471400; j < 471410; j++) _solve(b, j);
for(j = 472240; j < 472250; j++) _solve(b, j);
for(j = 473080; j < 473090; j++) _solve(b, j);
for(j = 473920; j < 473930; j++) _solve(b, j);
for(j = 474760; j < 474770; j++) _solve(b, j);
for(j = 475600; j < 475610; j++) _solve(b, j);
for(j = 476440; j < 476450; j++) _solve(b, j);
for(j = 477280; j < 477290; j++) _solve(b, j);
for(j = 478120; j < 478130; j++) _solve(b, j);
for(j = 478960; j < 478970; j++) _solve(b, j);
for(j = 479800; j < 479810; j++) _solve(b, j);
for(j = 480640; j < 480650; j++) _solve(b, j);
for(j = 481480; j < 481490; j++) _solve(b, j);
for(j = 482320; j < 482330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 483160; j < 483170; j++) _solve(b, j);
for(j = 484000; j < 484010; j++) _solve(b, j);
for(j = 484840; j < 484850; j++) _solve(b, j);
for(j = 485680; j < 485690; j++) _solve(b, j);
for(j = 486520; j < 486530; j++) _solve(b, j);
for(j = 487360; j < 487370; j++) _solve(b, j);
for(j = 488200; j < 488210; j++) _solve(b, j);
for(j = 489040; j < 489050; j++) _solve(b, j);
for(j = 489880; j < 489890; j++) _solve(b, j);
for(j = 490720; j < 490730; j++) _solve(b, j);
for(j = 491560; j < 491570; j++) _solve(b, j);
for(j = 492400; j < 492410; j++) _solve(b, j);
for(j = 493240; j < 493250; j++) _solve(b, j);
for(j = 494080; j < 494090; j++) _solve(b, j);
for(j = 494920; j < 494930; j++) _solve(b, j);
for(j = 495760; j < 495770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496600; j < 496610; j++) _solve(b, j);
for(j = 497440; j < 497450; j++) _solve(b, j);
for(j = 498280; j < 498290; j++) _solve(b, j);
for(j = 499120; j < 499130; j++) _solve(b, j);
for(j = 499960; j < 499970; j++) _solve(b, j);
for(j = 500800; j < 500810; j++) _solve(b, j);
for(j = 501640; j < 501650; j++) _solve(b, j);
for(j = 502480; j < 502490; j++) _solve(b, j);
for(j = 503320; j < 503330; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 443690; j < 443700; j++) _solve(b, j);
for(j = 444530; j < 444540; j++) _solve(b, j);
for(j = 445370; j < 445380; j++) _solve(b, j);
for(j = 446210; j < 446220; j++) _solve(b, j);
for(j = 447050; j < 447060; j++) _solve(b, j);
for(j = 447890; j < 447900; j++) _solve(b, j);
for(j = 448730; j < 448740; j++) _solve(b, j);
for(j = 449570; j < 449580; j++) _solve(b, j);
for(j = 450410; j < 450420; j++) _solve(b, j);
for(j = 451250; j < 451260; j++) _solve(b, j);
for(j = 452090; j < 452100; j++) _solve(b, j);
for(j = 452930; j < 452940; j++) _solve(b, j);
for(j = 453770; j < 453780; j++) _solve(b, j);
for(j = 454610; j < 454620; j++) _solve(b, j);
for(j = 455450; j < 455460; j++) _solve(b, j);
for(j = 456290; j < 456300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 457130; j < 457140; j++) _solve(b, j);
for(j = 457970; j < 457980; j++) _solve(b, j);
for(j = 458810; j < 458820; j++) _solve(b, j);
for(j = 459650; j < 459660; j++) _solve(b, j);
for(j = 460490; j < 460500; j++) _solve(b, j);
for(j = 461330; j < 461340; j++) _solve(b, j);
for(j = 462170; j < 462180; j++) _solve(b, j);
for(j = 463010; j < 463020; j++) _solve(b, j);
for(j = 463850; j < 463860; j++) _solve(b, j);
for(j = 464690; j < 464700; j++) _solve(b, j);
for(j = 465530; j < 465540; j++) _solve(b, j);
for(j = 466370; j < 466380; j++) _solve(b, j);
for(j = 467210; j < 467220; j++) _solve(b, j);
for(j = 468050; j < 468060; j++) _solve(b, j);
for(j = 468890; j < 468900; j++) _solve(b, j);
for(j = 469730; j < 469740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 470570; j < 470580; j++) _solve(b, j);
for(j = 471410; j < 471420; j++) _solve(b, j);
for(j = 472250; j < 472260; j++) _solve(b, j);
for(j = 473090; j < 473100; j++) _solve(b, j);
for(j = 473930; j < 473940; j++) _solve(b, j);
for(j = 474770; j < 474780; j++) _solve(b, j);
for(j = 475610; j < 475620; j++) _solve(b, j);
for(j = 476450; j < 476460; j++) _solve(b, j);
for(j = 477290; j < 477300; j++) _solve(b, j);
for(j = 478130; j < 478140; j++) _solve(b, j);
for(j = 478970; j < 478980; j++) _solve(b, j);
for(j = 479810; j < 479820; j++) _solve(b, j);
for(j = 480650; j < 480660; j++) _solve(b, j);
for(j = 481490; j < 481500; j++) _solve(b, j);
for(j = 482330; j < 482340; j++) _solve(b, j);
for(j = 483170; j < 483180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 484010; j < 484020; j++) _solve(b, j);
for(j = 484850; j < 484860; j++) _solve(b, j);
for(j = 485690; j < 485700; j++) _solve(b, j);
for(j = 486530; j < 486540; j++) _solve(b, j);
for(j = 487370; j < 487380; j++) _solve(b, j);
for(j = 488210; j < 488220; j++) _solve(b, j);
for(j = 489050; j < 489060; j++) _solve(b, j);
for(j = 489890; j < 489900; j++) _solve(b, j);
for(j = 490730; j < 490740; j++) _solve(b, j);
for(j = 491570; j < 491580; j++) _solve(b, j);
for(j = 492410; j < 492420; j++) _solve(b, j);
for(j = 493250; j < 493260; j++) _solve(b, j);
for(j = 494090; j < 494100; j++) _solve(b, j);
for(j = 494930; j < 494940; j++) _solve(b, j);
for(j = 495770; j < 495780; j++) _solve(b, j);
for(j = 496610; j < 496620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497450; j < 497460; j++) _solve(b, j);
for(j = 498290; j < 498300; j++) _solve(b, j);
for(j = 499130; j < 499140; j++) _solve(b, j);
for(j = 499970; j < 499980; j++) _solve(b, j);
for(j = 500810; j < 500820; j++) _solve(b, j);
for(j = 501650; j < 501660; j++) _solve(b, j);
for(j = 502490; j < 502500; j++) _solve(b, j);
for(j = 503330; j < 503340; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 444540; j < 444550; j++) _solve(b, j);
for(j = 445380; j < 445390; j++) _solve(b, j);
for(j = 446220; j < 446230; j++) _solve(b, j);
for(j = 447060; j < 447070; j++) _solve(b, j);
for(j = 447900; j < 447910; j++) _solve(b, j);
for(j = 448740; j < 448750; j++) _solve(b, j);
for(j = 449580; j < 449590; j++) _solve(b, j);
for(j = 450420; j < 450430; j++) _solve(b, j);
for(j = 451260; j < 451270; j++) _solve(b, j);
for(j = 452100; j < 452110; j++) _solve(b, j);
for(j = 452940; j < 452950; j++) _solve(b, j);
for(j = 453780; j < 453790; j++) _solve(b, j);
for(j = 454620; j < 454630; j++) _solve(b, j);
for(j = 455460; j < 455470; j++) _solve(b, j);
for(j = 456300; j < 456310; j++) _solve(b, j);
for(j = 457140; j < 457150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 457980; j < 457990; j++) _solve(b, j);
for(j = 458820; j < 458830; j++) _solve(b, j);
for(j = 459660; j < 459670; j++) _solve(b, j);
for(j = 460500; j < 460510; j++) _solve(b, j);
for(j = 461340; j < 461350; j++) _solve(b, j);
for(j = 462180; j < 462190; j++) _solve(b, j);
for(j = 463020; j < 463030; j++) _solve(b, j);
for(j = 463860; j < 463870; j++) _solve(b, j);
for(j = 464700; j < 464710; j++) _solve(b, j);
for(j = 465540; j < 465550; j++) _solve(b, j);
for(j = 466380; j < 466390; j++) _solve(b, j);
for(j = 467220; j < 467230; j++) _solve(b, j);
for(j = 468060; j < 468070; j++) _solve(b, j);
for(j = 468900; j < 468910; j++) _solve(b, j);
for(j = 469740; j < 469750; j++) _solve(b, j);
for(j = 470580; j < 470590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 471420; j < 471430; j++) _solve(b, j);
for(j = 472260; j < 472270; j++) _solve(b, j);
for(j = 473100; j < 473110; j++) _solve(b, j);
for(j = 473940; j < 473950; j++) _solve(b, j);
for(j = 474780; j < 474790; j++) _solve(b, j);
for(j = 475620; j < 475630; j++) _solve(b, j);
for(j = 476460; j < 476470; j++) _solve(b, j);
for(j = 477300; j < 477310; j++) _solve(b, j);
for(j = 478140; j < 478150; j++) _solve(b, j);
for(j = 478980; j < 478990; j++) _solve(b, j);
for(j = 479820; j < 479830; j++) _solve(b, j);
for(j = 480660; j < 480670; j++) _solve(b, j);
for(j = 481500; j < 481510; j++) _solve(b, j);
for(j = 482340; j < 482350; j++) _solve(b, j);
for(j = 483180; j < 483190; j++) _solve(b, j);
for(j = 484020; j < 484030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 484860; j < 484870; j++) _solve(b, j);
for(j = 485700; j < 485710; j++) _solve(b, j);
for(j = 486540; j < 486550; j++) _solve(b, j);
for(j = 487380; j < 487390; j++) _solve(b, j);
for(j = 488220; j < 488230; j++) _solve(b, j);
for(j = 489060; j < 489070; j++) _solve(b, j);
for(j = 489900; j < 489910; j++) _solve(b, j);
for(j = 490740; j < 490750; j++) _solve(b, j);
for(j = 491580; j < 491590; j++) _solve(b, j);
for(j = 492420; j < 492430; j++) _solve(b, j);
for(j = 493260; j < 493270; j++) _solve(b, j);
for(j = 494100; j < 494110; j++) _solve(b, j);
for(j = 494940; j < 494950; j++) _solve(b, j);
for(j = 495780; j < 495790; j++) _solve(b, j);
for(j = 496620; j < 496630; j++) _solve(b, j);
for(j = 497460; j < 497470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498300; j < 498310; j++) _solve(b, j);
for(j = 499140; j < 499150; j++) _solve(b, j);
for(j = 499980; j < 499990; j++) _solve(b, j);
for(j = 500820; j < 500830; j++) _solve(b, j);
for(j = 501660; j < 501670; j++) _solve(b, j);
for(j = 502500; j < 502510; j++) _solve(b, j);
for(j = 503340; j < 503350; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 445390; j < 445400; j++) _solve(b, j);
for(j = 446230; j < 446240; j++) _solve(b, j);
for(j = 447070; j < 447080; j++) _solve(b, j);
for(j = 447910; j < 447920; j++) _solve(b, j);
for(j = 448750; j < 448760; j++) _solve(b, j);
for(j = 449590; j < 449600; j++) _solve(b, j);
for(j = 450430; j < 450440; j++) _solve(b, j);
for(j = 451270; j < 451280; j++) _solve(b, j);
for(j = 452110; j < 452120; j++) _solve(b, j);
for(j = 452950; j < 452960; j++) _solve(b, j);
for(j = 453790; j < 453800; j++) _solve(b, j);
for(j = 454630; j < 454640; j++) _solve(b, j);
for(j = 455470; j < 455480; j++) _solve(b, j);
for(j = 456310; j < 456320; j++) _solve(b, j);
for(j = 457150; j < 457160; j++) _solve(b, j);
for(j = 457990; j < 458000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 458830; j < 458840; j++) _solve(b, j);
for(j = 459670; j < 459680; j++) _solve(b, j);
for(j = 460510; j < 460520; j++) _solve(b, j);
for(j = 461350; j < 461360; j++) _solve(b, j);
for(j = 462190; j < 462200; j++) _solve(b, j);
for(j = 463030; j < 463040; j++) _solve(b, j);
for(j = 463870; j < 463880; j++) _solve(b, j);
for(j = 464710; j < 464720; j++) _solve(b, j);
for(j = 465550; j < 465560; j++) _solve(b, j);
for(j = 466390; j < 466400; j++) _solve(b, j);
for(j = 467230; j < 467240; j++) _solve(b, j);
for(j = 468070; j < 468080; j++) _solve(b, j);
for(j = 468910; j < 468920; j++) _solve(b, j);
for(j = 469750; j < 469760; j++) _solve(b, j);
for(j = 470590; j < 470600; j++) _solve(b, j);
for(j = 471430; j < 471440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 472270; j < 472280; j++) _solve(b, j);
for(j = 473110; j < 473120; j++) _solve(b, j);
for(j = 473950; j < 473960; j++) _solve(b, j);
for(j = 474790; j < 474800; j++) _solve(b, j);
for(j = 475630; j < 475640; j++) _solve(b, j);
for(j = 476470; j < 476480; j++) _solve(b, j);
for(j = 477310; j < 477320; j++) _solve(b, j);
for(j = 478150; j < 478160; j++) _solve(b, j);
for(j = 478990; j < 479000; j++) _solve(b, j);
for(j = 479830; j < 479840; j++) _solve(b, j);
for(j = 480670; j < 480680; j++) _solve(b, j);
for(j = 481510; j < 481520; j++) _solve(b, j);
for(j = 482350; j < 482360; j++) _solve(b, j);
for(j = 483190; j < 483200; j++) _solve(b, j);
for(j = 484030; j < 484040; j++) _solve(b, j);
for(j = 484870; j < 484880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 485710; j < 485720; j++) _solve(b, j);
for(j = 486550; j < 486560; j++) _solve(b, j);
for(j = 487390; j < 487400; j++) _solve(b, j);
for(j = 488230; j < 488240; j++) _solve(b, j);
for(j = 489070; j < 489080; j++) _solve(b, j);
for(j = 489910; j < 489920; j++) _solve(b, j);
for(j = 490750; j < 490760; j++) _solve(b, j);
for(j = 491590; j < 491600; j++) _solve(b, j);
for(j = 492430; j < 492440; j++) _solve(b, j);
for(j = 493270; j < 493280; j++) _solve(b, j);
for(j = 494110; j < 494120; j++) _solve(b, j);
for(j = 494950; j < 494960; j++) _solve(b, j);
for(j = 495790; j < 495800; j++) _solve(b, j);
for(j = 496630; j < 496640; j++) _solve(b, j);
for(j = 497470; j < 497480; j++) _solve(b, j);
for(j = 498310; j < 498320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499150; j < 499160; j++) _solve(b, j);
for(j = 499990; j < 500000; j++) _solve(b, j);
for(j = 500830; j < 500840; j++) _solve(b, j);
for(j = 501670; j < 501680; j++) _solve(b, j);
for(j = 502510; j < 502520; j++) _solve(b, j);
for(j = 503350; j < 503360; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 446240; j < 446250; j++) _solve(b, j);
for(j = 447080; j < 447090; j++) _solve(b, j);
for(j = 447920; j < 447930; j++) _solve(b, j);
for(j = 448760; j < 448770; j++) _solve(b, j);
for(j = 449600; j < 449610; j++) _solve(b, j);
for(j = 450440; j < 450450; j++) _solve(b, j);
for(j = 451280; j < 451290; j++) _solve(b, j);
for(j = 452120; j < 452130; j++) _solve(b, j);
for(j = 452960; j < 452970; j++) _solve(b, j);
for(j = 453800; j < 453810; j++) _solve(b, j);
for(j = 454640; j < 454650; j++) _solve(b, j);
for(j = 455480; j < 455490; j++) _solve(b, j);
for(j = 456320; j < 456330; j++) _solve(b, j);
for(j = 457160; j < 457170; j++) _solve(b, j);
for(j = 458000; j < 458010; j++) _solve(b, j);
for(j = 458840; j < 458850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 459680; j < 459690; j++) _solve(b, j);
for(j = 460520; j < 460530; j++) _solve(b, j);
for(j = 461360; j < 461370; j++) _solve(b, j);
for(j = 462200; j < 462210; j++) _solve(b, j);
for(j = 463040; j < 463050; j++) _solve(b, j);
for(j = 463880; j < 463890; j++) _solve(b, j);
for(j = 464720; j < 464730; j++) _solve(b, j);
for(j = 465560; j < 465570; j++) _solve(b, j);
for(j = 466400; j < 466410; j++) _solve(b, j);
for(j = 467240; j < 467250; j++) _solve(b, j);
for(j = 468080; j < 468090; j++) _solve(b, j);
for(j = 468920; j < 468930; j++) _solve(b, j);
for(j = 469760; j < 469770; j++) _solve(b, j);
for(j = 470600; j < 470610; j++) _solve(b, j);
for(j = 471440; j < 471450; j++) _solve(b, j);
for(j = 472280; j < 472290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 473120; j < 473130; j++) _solve(b, j);
for(j = 473960; j < 473970; j++) _solve(b, j);
for(j = 474800; j < 474810; j++) _solve(b, j);
for(j = 475640; j < 475650; j++) _solve(b, j);
for(j = 476480; j < 476490; j++) _solve(b, j);
for(j = 477320; j < 477330; j++) _solve(b, j);
for(j = 478160; j < 478170; j++) _solve(b, j);
for(j = 479000; j < 479010; j++) _solve(b, j);
for(j = 479840; j < 479850; j++) _solve(b, j);
for(j = 480680; j < 480690; j++) _solve(b, j);
for(j = 481520; j < 481530; j++) _solve(b, j);
for(j = 482360; j < 482370; j++) _solve(b, j);
for(j = 483200; j < 483210; j++) _solve(b, j);
for(j = 484040; j < 484050; j++) _solve(b, j);
for(j = 484880; j < 484890; j++) _solve(b, j);
for(j = 485720; j < 485730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 486560; j < 486570; j++) _solve(b, j);
for(j = 487400; j < 487410; j++) _solve(b, j);
for(j = 488240; j < 488250; j++) _solve(b, j);
for(j = 489080; j < 489090; j++) _solve(b, j);
for(j = 489920; j < 489930; j++) _solve(b, j);
for(j = 490760; j < 490770; j++) _solve(b, j);
for(j = 491600; j < 491610; j++) _solve(b, j);
for(j = 492440; j < 492450; j++) _solve(b, j);
for(j = 493280; j < 493290; j++) _solve(b, j);
for(j = 494120; j < 494130; j++) _solve(b, j);
for(j = 494960; j < 494970; j++) _solve(b, j);
for(j = 495800; j < 495810; j++) _solve(b, j);
for(j = 496640; j < 496650; j++) _solve(b, j);
for(j = 497480; j < 497490; j++) _solve(b, j);
for(j = 498320; j < 498330; j++) _solve(b, j);
for(j = 499160; j < 499170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500000; j < 500010; j++) _solve(b, j);
for(j = 500840; j < 500850; j++) _solve(b, j);
for(j = 501680; j < 501690; j++) _solve(b, j);
for(j = 502520; j < 502530; j++) _solve(b, j);
for(j = 503360; j < 503370; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 447090; j < 447100; j++) _solve(b, j);
for(j = 447930; j < 447940; j++) _solve(b, j);
for(j = 448770; j < 448780; j++) _solve(b, j);
for(j = 449610; j < 449620; j++) _solve(b, j);
for(j = 450450; j < 450460; j++) _solve(b, j);
for(j = 451290; j < 451300; j++) _solve(b, j);
for(j = 452130; j < 452140; j++) _solve(b, j);
for(j = 452970; j < 452980; j++) _solve(b, j);
for(j = 453810; j < 453820; j++) _solve(b, j);
for(j = 454650; j < 454660; j++) _solve(b, j);
for(j = 455490; j < 455500; j++) _solve(b, j);
for(j = 456330; j < 456340; j++) _solve(b, j);
for(j = 457170; j < 457180; j++) _solve(b, j);
for(j = 458010; j < 458020; j++) _solve(b, j);
for(j = 458850; j < 458860; j++) _solve(b, j);
for(j = 459690; j < 459700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 460530; j < 460540; j++) _solve(b, j);
for(j = 461370; j < 461380; j++) _solve(b, j);
for(j = 462210; j < 462220; j++) _solve(b, j);
for(j = 463050; j < 463060; j++) _solve(b, j);
for(j = 463890; j < 463900; j++) _solve(b, j);
for(j = 464730; j < 464740; j++) _solve(b, j);
for(j = 465570; j < 465580; j++) _solve(b, j);
for(j = 466410; j < 466420; j++) _solve(b, j);
for(j = 467250; j < 467260; j++) _solve(b, j);
for(j = 468090; j < 468100; j++) _solve(b, j);
for(j = 468930; j < 468940; j++) _solve(b, j);
for(j = 469770; j < 469780; j++) _solve(b, j);
for(j = 470610; j < 470620; j++) _solve(b, j);
for(j = 471450; j < 471460; j++) _solve(b, j);
for(j = 472290; j < 472300; j++) _solve(b, j);
for(j = 473130; j < 473140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 473970; j < 473980; j++) _solve(b, j);
for(j = 474810; j < 474820; j++) _solve(b, j);
for(j = 475650; j < 475660; j++) _solve(b, j);
for(j = 476490; j < 476500; j++) _solve(b, j);
for(j = 477330; j < 477340; j++) _solve(b, j);
for(j = 478170; j < 478180; j++) _solve(b, j);
for(j = 479010; j < 479020; j++) _solve(b, j);
for(j = 479850; j < 479860; j++) _solve(b, j);
for(j = 480690; j < 480700; j++) _solve(b, j);
for(j = 481530; j < 481540; j++) _solve(b, j);
for(j = 482370; j < 482380; j++) _solve(b, j);
for(j = 483210; j < 483220; j++) _solve(b, j);
for(j = 484050; j < 484060; j++) _solve(b, j);
for(j = 484890; j < 484900; j++) _solve(b, j);
for(j = 485730; j < 485740; j++) _solve(b, j);
for(j = 486570; j < 486580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 487410; j < 487420; j++) _solve(b, j);
for(j = 488250; j < 488260; j++) _solve(b, j);
for(j = 489090; j < 489100; j++) _solve(b, j);
for(j = 489930; j < 489940; j++) _solve(b, j);
for(j = 490770; j < 490780; j++) _solve(b, j);
for(j = 491610; j < 491620; j++) _solve(b, j);
for(j = 492450; j < 492460; j++) _solve(b, j);
for(j = 493290; j < 493300; j++) _solve(b, j);
for(j = 494130; j < 494140; j++) _solve(b, j);
for(j = 494970; j < 494980; j++) _solve(b, j);
for(j = 495810; j < 495820; j++) _solve(b, j);
for(j = 496650; j < 496660; j++) _solve(b, j);
for(j = 497490; j < 497500; j++) _solve(b, j);
for(j = 498330; j < 498340; j++) _solve(b, j);
for(j = 499170; j < 499180; j++) _solve(b, j);
for(j = 500010; j < 500020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500850; j < 500860; j++) _solve(b, j);
for(j = 501690; j < 501700; j++) _solve(b, j);
for(j = 502530; j < 502540; j++) _solve(b, j);
for(j = 503370; j < 503380; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 447940; j < 447950; j++) _solve(b, j);
for(j = 448780; j < 448790; j++) _solve(b, j);
for(j = 449620; j < 449630; j++) _solve(b, j);
for(j = 450460; j < 450470; j++) _solve(b, j);
for(j = 451300; j < 451310; j++) _solve(b, j);
for(j = 452140; j < 452150; j++) _solve(b, j);
for(j = 452980; j < 452990; j++) _solve(b, j);
for(j = 453820; j < 453830; j++) _solve(b, j);
for(j = 454660; j < 454670; j++) _solve(b, j);
for(j = 455500; j < 455510; j++) _solve(b, j);
for(j = 456340; j < 456350; j++) _solve(b, j);
for(j = 457180; j < 457190; j++) _solve(b, j);
for(j = 458020; j < 458030; j++) _solve(b, j);
for(j = 458860; j < 458870; j++) _solve(b, j);
for(j = 459700; j < 459710; j++) _solve(b, j);
for(j = 460540; j < 460550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 461380; j < 461390; j++) _solve(b, j);
for(j = 462220; j < 462230; j++) _solve(b, j);
for(j = 463060; j < 463070; j++) _solve(b, j);
for(j = 463900; j < 463910; j++) _solve(b, j);
for(j = 464740; j < 464750; j++) _solve(b, j);
for(j = 465580; j < 465590; j++) _solve(b, j);
for(j = 466420; j < 466430; j++) _solve(b, j);
for(j = 467260; j < 467270; j++) _solve(b, j);
for(j = 468100; j < 468110; j++) _solve(b, j);
for(j = 468940; j < 468950; j++) _solve(b, j);
for(j = 469780; j < 469790; j++) _solve(b, j);
for(j = 470620; j < 470630; j++) _solve(b, j);
for(j = 471460; j < 471470; j++) _solve(b, j);
for(j = 472300; j < 472310; j++) _solve(b, j);
for(j = 473140; j < 473150; j++) _solve(b, j);
for(j = 473980; j < 473990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 474820; j < 474830; j++) _solve(b, j);
for(j = 475660; j < 475670; j++) _solve(b, j);
for(j = 476500; j < 476510; j++) _solve(b, j);
for(j = 477340; j < 477350; j++) _solve(b, j);
for(j = 478180; j < 478190; j++) _solve(b, j);
for(j = 479020; j < 479030; j++) _solve(b, j);
for(j = 479860; j < 479870; j++) _solve(b, j);
for(j = 480700; j < 480710; j++) _solve(b, j);
for(j = 481540; j < 481550; j++) _solve(b, j);
for(j = 482380; j < 482390; j++) _solve(b, j);
for(j = 483220; j < 483230; j++) _solve(b, j);
for(j = 484060; j < 484070; j++) _solve(b, j);
for(j = 484900; j < 484910; j++) _solve(b, j);
for(j = 485740; j < 485750; j++) _solve(b, j);
for(j = 486580; j < 486590; j++) _solve(b, j);
for(j = 487420; j < 487430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 488260; j < 488270; j++) _solve(b, j);
for(j = 489100; j < 489110; j++) _solve(b, j);
for(j = 489940; j < 489950; j++) _solve(b, j);
for(j = 490780; j < 490790; j++) _solve(b, j);
for(j = 491620; j < 491630; j++) _solve(b, j);
for(j = 492460; j < 492470; j++) _solve(b, j);
for(j = 493300; j < 493310; j++) _solve(b, j);
for(j = 494140; j < 494150; j++) _solve(b, j);
for(j = 494980; j < 494990; j++) _solve(b, j);
for(j = 495820; j < 495830; j++) _solve(b, j);
for(j = 496660; j < 496670; j++) _solve(b, j);
for(j = 497500; j < 497510; j++) _solve(b, j);
for(j = 498340; j < 498350; j++) _solve(b, j);
for(j = 499180; j < 499190; j++) _solve(b, j);
for(j = 500020; j < 500030; j++) _solve(b, j);
for(j = 500860; j < 500870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501700; j < 501710; j++) _solve(b, j);
for(j = 502540; j < 502550; j++) _solve(b, j);
for(j = 503380; j < 503390; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 448790; j < 448800; j++) _solve(b, j);
for(j = 449630; j < 449640; j++) _solve(b, j);
for(j = 450470; j < 450480; j++) _solve(b, j);
for(j = 451310; j < 451320; j++) _solve(b, j);
for(j = 452150; j < 452160; j++) _solve(b, j);
for(j = 452990; j < 453000; j++) _solve(b, j);
for(j = 453830; j < 453840; j++) _solve(b, j);
for(j = 454670; j < 454680; j++) _solve(b, j);
for(j = 455510; j < 455520; j++) _solve(b, j);
for(j = 456350; j < 456360; j++) _solve(b, j);
for(j = 457190; j < 457200; j++) _solve(b, j);
for(j = 458030; j < 458040; j++) _solve(b, j);
for(j = 458870; j < 458880; j++) _solve(b, j);
for(j = 459710; j < 459720; j++) _solve(b, j);
for(j = 460550; j < 460560; j++) _solve(b, j);
for(j = 461390; j < 461400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 462230; j < 462240; j++) _solve(b, j);
for(j = 463070; j < 463080; j++) _solve(b, j);
for(j = 463910; j < 463920; j++) _solve(b, j);
for(j = 464750; j < 464760; j++) _solve(b, j);
for(j = 465590; j < 465600; j++) _solve(b, j);
for(j = 466430; j < 466440; j++) _solve(b, j);
for(j = 467270; j < 467280; j++) _solve(b, j);
for(j = 468110; j < 468120; j++) _solve(b, j);
for(j = 468950; j < 468960; j++) _solve(b, j);
for(j = 469790; j < 469800; j++) _solve(b, j);
for(j = 470630; j < 470640; j++) _solve(b, j);
for(j = 471470; j < 471480; j++) _solve(b, j);
for(j = 472310; j < 472320; j++) _solve(b, j);
for(j = 473150; j < 473160; j++) _solve(b, j);
for(j = 473990; j < 474000; j++) _solve(b, j);
for(j = 474830; j < 474840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 475670; j < 475680; j++) _solve(b, j);
for(j = 476510; j < 476520; j++) _solve(b, j);
for(j = 477350; j < 477360; j++) _solve(b, j);
for(j = 478190; j < 478200; j++) _solve(b, j);
for(j = 479030; j < 479040; j++) _solve(b, j);
for(j = 479870; j < 479880; j++) _solve(b, j);
for(j = 480710; j < 480720; j++) _solve(b, j);
for(j = 481550; j < 481560; j++) _solve(b, j);
for(j = 482390; j < 482400; j++) _solve(b, j);
for(j = 483230; j < 483240; j++) _solve(b, j);
for(j = 484070; j < 484080; j++) _solve(b, j);
for(j = 484910; j < 484920; j++) _solve(b, j);
for(j = 485750; j < 485760; j++) _solve(b, j);
for(j = 486590; j < 486600; j++) _solve(b, j);
for(j = 487430; j < 487440; j++) _solve(b, j);
for(j = 488270; j < 488280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 489110; j < 489120; j++) _solve(b, j);
for(j = 489950; j < 489960; j++) _solve(b, j);
for(j = 490790; j < 490800; j++) _solve(b, j);
for(j = 491630; j < 491640; j++) _solve(b, j);
for(j = 492470; j < 492480; j++) _solve(b, j);
for(j = 493310; j < 493320; j++) _solve(b, j);
for(j = 494150; j < 494160; j++) _solve(b, j);
for(j = 494990; j < 495000; j++) _solve(b, j);
for(j = 495830; j < 495840; j++) _solve(b, j);
for(j = 496670; j < 496680; j++) _solve(b, j);
for(j = 497510; j < 497520; j++) _solve(b, j);
for(j = 498350; j < 498360; j++) _solve(b, j);
for(j = 499190; j < 499200; j++) _solve(b, j);
for(j = 500030; j < 500040; j++) _solve(b, j);
for(j = 500870; j < 500880; j++) _solve(b, j);
for(j = 501710; j < 501720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502550; j < 502560; j++) _solve(b, j);
for(j = 503390; j < 503400; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 449640; j < 449650; j++) _solve(b, j);
for(j = 450480; j < 450490; j++) _solve(b, j);
for(j = 451320; j < 451330; j++) _solve(b, j);
for(j = 452160; j < 452170; j++) _solve(b, j);
for(j = 453000; j < 453010; j++) _solve(b, j);
for(j = 453840; j < 453850; j++) _solve(b, j);
for(j = 454680; j < 454690; j++) _solve(b, j);
for(j = 455520; j < 455530; j++) _solve(b, j);
for(j = 456360; j < 456370; j++) _solve(b, j);
for(j = 457200; j < 457210; j++) _solve(b, j);
for(j = 458040; j < 458050; j++) _solve(b, j);
for(j = 458880; j < 458890; j++) _solve(b, j);
for(j = 459720; j < 459730; j++) _solve(b, j);
for(j = 460560; j < 460570; j++) _solve(b, j);
for(j = 461400; j < 461410; j++) _solve(b, j);
for(j = 462240; j < 462250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 463080; j < 463090; j++) _solve(b, j);
for(j = 463920; j < 463930; j++) _solve(b, j);
for(j = 464760; j < 464770; j++) _solve(b, j);
for(j = 465600; j < 465610; j++) _solve(b, j);
for(j = 466440; j < 466450; j++) _solve(b, j);
for(j = 467280; j < 467290; j++) _solve(b, j);
for(j = 468120; j < 468130; j++) _solve(b, j);
for(j = 468960; j < 468970; j++) _solve(b, j);
for(j = 469800; j < 469810; j++) _solve(b, j);
for(j = 470640; j < 470650; j++) _solve(b, j);
for(j = 471480; j < 471490; j++) _solve(b, j);
for(j = 472320; j < 472330; j++) _solve(b, j);
for(j = 473160; j < 473170; j++) _solve(b, j);
for(j = 474000; j < 474010; j++) _solve(b, j);
for(j = 474840; j < 474850; j++) _solve(b, j);
for(j = 475680; j < 475690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 476520; j < 476530; j++) _solve(b, j);
for(j = 477360; j < 477370; j++) _solve(b, j);
for(j = 478200; j < 478210; j++) _solve(b, j);
for(j = 479040; j < 479050; j++) _solve(b, j);
for(j = 479880; j < 479890; j++) _solve(b, j);
for(j = 480720; j < 480730; j++) _solve(b, j);
for(j = 481560; j < 481570; j++) _solve(b, j);
for(j = 482400; j < 482410; j++) _solve(b, j);
for(j = 483240; j < 483250; j++) _solve(b, j);
for(j = 484080; j < 484090; j++) _solve(b, j);
for(j = 484920; j < 484930; j++) _solve(b, j);
for(j = 485760; j < 485770; j++) _solve(b, j);
for(j = 486600; j < 486610; j++) _solve(b, j);
for(j = 487440; j < 487450; j++) _solve(b, j);
for(j = 488280; j < 488290; j++) _solve(b, j);
for(j = 489120; j < 489130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 489960; j < 489970; j++) _solve(b, j);
for(j = 490800; j < 490810; j++) _solve(b, j);
for(j = 491640; j < 491650; j++) _solve(b, j);
for(j = 492480; j < 492490; j++) _solve(b, j);
for(j = 493320; j < 493330; j++) _solve(b, j);
for(j = 494160; j < 494170; j++) _solve(b, j);
for(j = 495000; j < 495010; j++) _solve(b, j);
for(j = 495840; j < 495850; j++) _solve(b, j);
for(j = 496680; j < 496690; j++) _solve(b, j);
for(j = 497520; j < 497530; j++) _solve(b, j);
for(j = 498360; j < 498370; j++) _solve(b, j);
for(j = 499200; j < 499210; j++) _solve(b, j);
for(j = 500040; j < 500050; j++) _solve(b, j);
for(j = 500880; j < 500890; j++) _solve(b, j);
for(j = 501720; j < 501730; j++) _solve(b, j);
for(j = 502560; j < 502570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503400; j < 503410; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 450490; j < 450500; j++) _solve(b, j);
for(j = 451330; j < 451340; j++) _solve(b, j);
for(j = 452170; j < 452180; j++) _solve(b, j);
for(j = 453010; j < 453020; j++) _solve(b, j);
for(j = 453850; j < 453860; j++) _solve(b, j);
for(j = 454690; j < 454700; j++) _solve(b, j);
for(j = 455530; j < 455540; j++) _solve(b, j);
for(j = 456370; j < 456380; j++) _solve(b, j);
for(j = 457210; j < 457220; j++) _solve(b, j);
for(j = 458050; j < 458060; j++) _solve(b, j);
for(j = 458890; j < 458900; j++) _solve(b, j);
for(j = 459730; j < 459740; j++) _solve(b, j);
for(j = 460570; j < 460580; j++) _solve(b, j);
for(j = 461410; j < 461420; j++) _solve(b, j);
for(j = 462250; j < 462260; j++) _solve(b, j);
for(j = 463090; j < 463100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 463930; j < 463940; j++) _solve(b, j);
for(j = 464770; j < 464780; j++) _solve(b, j);
for(j = 465610; j < 465620; j++) _solve(b, j);
for(j = 466450; j < 466460; j++) _solve(b, j);
for(j = 467290; j < 467300; j++) _solve(b, j);
for(j = 468130; j < 468140; j++) _solve(b, j);
for(j = 468970; j < 468980; j++) _solve(b, j);
for(j = 469810; j < 469820; j++) _solve(b, j);
for(j = 470650; j < 470660; j++) _solve(b, j);
for(j = 471490; j < 471500; j++) _solve(b, j);
for(j = 472330; j < 472340; j++) _solve(b, j);
for(j = 473170; j < 473180; j++) _solve(b, j);
for(j = 474010; j < 474020; j++) _solve(b, j);
for(j = 474850; j < 474860; j++) _solve(b, j);
for(j = 475690; j < 475700; j++) _solve(b, j);
for(j = 476530; j < 476540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 477370; j < 477380; j++) _solve(b, j);
for(j = 478210; j < 478220; j++) _solve(b, j);
for(j = 479050; j < 479060; j++) _solve(b, j);
for(j = 479890; j < 479900; j++) _solve(b, j);
for(j = 480730; j < 480740; j++) _solve(b, j);
for(j = 481570; j < 481580; j++) _solve(b, j);
for(j = 482410; j < 482420; j++) _solve(b, j);
for(j = 483250; j < 483260; j++) _solve(b, j);
for(j = 484090; j < 484100; j++) _solve(b, j);
for(j = 484930; j < 484940; j++) _solve(b, j);
for(j = 485770; j < 485780; j++) _solve(b, j);
for(j = 486610; j < 486620; j++) _solve(b, j);
for(j = 487450; j < 487460; j++) _solve(b, j);
for(j = 488290; j < 488300; j++) _solve(b, j);
for(j = 489130; j < 489140; j++) _solve(b, j);
for(j = 489970; j < 489980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 490810; j < 490820; j++) _solve(b, j);
for(j = 491650; j < 491660; j++) _solve(b, j);
for(j = 492490; j < 492500; j++) _solve(b, j);
for(j = 493330; j < 493340; j++) _solve(b, j);
for(j = 494170; j < 494180; j++) _solve(b, j);
for(j = 495010; j < 495020; j++) _solve(b, j);
for(j = 495850; j < 495860; j++) _solve(b, j);
for(j = 496690; j < 496700; j++) _solve(b, j);
for(j = 497530; j < 497540; j++) _solve(b, j);
for(j = 498370; j < 498380; j++) _solve(b, j);
for(j = 499210; j < 499220; j++) _solve(b, j);
for(j = 500050; j < 500060; j++) _solve(b, j);
for(j = 500890; j < 500900; j++) _solve(b, j);
for(j = 501730; j < 501740; j++) _solve(b, j);
for(j = 502570; j < 502580; j++) _solve(b, j);
for(j = 503410; j < 503420; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 451340; j < 451350; j++) _solve(b, j);
for(j = 452180; j < 452190; j++) _solve(b, j);
for(j = 453020; j < 453030; j++) _solve(b, j);
for(j = 453860; j < 453870; j++) _solve(b, j);
for(j = 454700; j < 454710; j++) _solve(b, j);
for(j = 455540; j < 455550; j++) _solve(b, j);
for(j = 456380; j < 456390; j++) _solve(b, j);
for(j = 457220; j < 457230; j++) _solve(b, j);
for(j = 458060; j < 458070; j++) _solve(b, j);
for(j = 458900; j < 458910; j++) _solve(b, j);
for(j = 459740; j < 459750; j++) _solve(b, j);
for(j = 460580; j < 460590; j++) _solve(b, j);
for(j = 461420; j < 461430; j++) _solve(b, j);
for(j = 462260; j < 462270; j++) _solve(b, j);
for(j = 463100; j < 463110; j++) _solve(b, j);
for(j = 463940; j < 463950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 464780; j < 464790; j++) _solve(b, j);
for(j = 465620; j < 465630; j++) _solve(b, j);
for(j = 466460; j < 466470; j++) _solve(b, j);
for(j = 467300; j < 467310; j++) _solve(b, j);
for(j = 468140; j < 468150; j++) _solve(b, j);
for(j = 468980; j < 468990; j++) _solve(b, j);
for(j = 469820; j < 469830; j++) _solve(b, j);
for(j = 470660; j < 470670; j++) _solve(b, j);
for(j = 471500; j < 471510; j++) _solve(b, j);
for(j = 472340; j < 472350; j++) _solve(b, j);
for(j = 473180; j < 473190; j++) _solve(b, j);
for(j = 474020; j < 474030; j++) _solve(b, j);
for(j = 474860; j < 474870; j++) _solve(b, j);
for(j = 475700; j < 475710; j++) _solve(b, j);
for(j = 476540; j < 476550; j++) _solve(b, j);
for(j = 477380; j < 477390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 478220; j < 478230; j++) _solve(b, j);
for(j = 479060; j < 479070; j++) _solve(b, j);
for(j = 479900; j < 479910; j++) _solve(b, j);
for(j = 480740; j < 480750; j++) _solve(b, j);
for(j = 481580; j < 481590; j++) _solve(b, j);
for(j = 482420; j < 482430; j++) _solve(b, j);
for(j = 483260; j < 483270; j++) _solve(b, j);
for(j = 484100; j < 484110; j++) _solve(b, j);
for(j = 484940; j < 484950; j++) _solve(b, j);
for(j = 485780; j < 485790; j++) _solve(b, j);
for(j = 486620; j < 486630; j++) _solve(b, j);
for(j = 487460; j < 487470; j++) _solve(b, j);
for(j = 488300; j < 488310; j++) _solve(b, j);
for(j = 489140; j < 489150; j++) _solve(b, j);
for(j = 489980; j < 489990; j++) _solve(b, j);
for(j = 490820; j < 490830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 491660; j < 491670; j++) _solve(b, j);
for(j = 492500; j < 492510; j++) _solve(b, j);
for(j = 493340; j < 493350; j++) _solve(b, j);
for(j = 494180; j < 494190; j++) _solve(b, j);
for(j = 495020; j < 495030; j++) _solve(b, j);
for(j = 495860; j < 495870; j++) _solve(b, j);
for(j = 496700; j < 496710; j++) _solve(b, j);
for(j = 497540; j < 497550; j++) _solve(b, j);
for(j = 498380; j < 498390; j++) _solve(b, j);
for(j = 499220; j < 499230; j++) _solve(b, j);
for(j = 500060; j < 500070; j++) _solve(b, j);
for(j = 500900; j < 500910; j++) _solve(b, j);
for(j = 501740; j < 501750; j++) _solve(b, j);
for(j = 502580; j < 502590; j++) _solve(b, j);
for(j = 503420; j < 503430; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 452190; j < 452200; j++) _solve(b, j);
for(j = 453030; j < 453040; j++) _solve(b, j);
for(j = 453870; j < 453880; j++) _solve(b, j);
for(j = 454710; j < 454720; j++) _solve(b, j);
for(j = 455550; j < 455560; j++) _solve(b, j);
for(j = 456390; j < 456400; j++) _solve(b, j);
for(j = 457230; j < 457240; j++) _solve(b, j);
for(j = 458070; j < 458080; j++) _solve(b, j);
for(j = 458910; j < 458920; j++) _solve(b, j);
for(j = 459750; j < 459760; j++) _solve(b, j);
for(j = 460590; j < 460600; j++) _solve(b, j);
for(j = 461430; j < 461440; j++) _solve(b, j);
for(j = 462270; j < 462280; j++) _solve(b, j);
for(j = 463110; j < 463120; j++) _solve(b, j);
for(j = 463950; j < 463960; j++) _solve(b, j);
for(j = 464790; j < 464800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 465630; j < 465640; j++) _solve(b, j);
for(j = 466470; j < 466480; j++) _solve(b, j);
for(j = 467310; j < 467320; j++) _solve(b, j);
for(j = 468150; j < 468160; j++) _solve(b, j);
for(j = 468990; j < 469000; j++) _solve(b, j);
for(j = 469830; j < 469840; j++) _solve(b, j);
for(j = 470670; j < 470680; j++) _solve(b, j);
for(j = 471510; j < 471520; j++) _solve(b, j);
for(j = 472350; j < 472360; j++) _solve(b, j);
for(j = 473190; j < 473200; j++) _solve(b, j);
for(j = 474030; j < 474040; j++) _solve(b, j);
for(j = 474870; j < 474880; j++) _solve(b, j);
for(j = 475710; j < 475720; j++) _solve(b, j);
for(j = 476550; j < 476560; j++) _solve(b, j);
for(j = 477390; j < 477400; j++) _solve(b, j);
for(j = 478230; j < 478240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 479070; j < 479080; j++) _solve(b, j);
for(j = 479910; j < 479920; j++) _solve(b, j);
for(j = 480750; j < 480760; j++) _solve(b, j);
for(j = 481590; j < 481600; j++) _solve(b, j);
for(j = 482430; j < 482440; j++) _solve(b, j);
for(j = 483270; j < 483280; j++) _solve(b, j);
for(j = 484110; j < 484120; j++) _solve(b, j);
for(j = 484950; j < 484960; j++) _solve(b, j);
for(j = 485790; j < 485800; j++) _solve(b, j);
for(j = 486630; j < 486640; j++) _solve(b, j);
for(j = 487470; j < 487480; j++) _solve(b, j);
for(j = 488310; j < 488320; j++) _solve(b, j);
for(j = 489150; j < 489160; j++) _solve(b, j);
for(j = 489990; j < 490000; j++) _solve(b, j);
for(j = 490830; j < 490840; j++) _solve(b, j);
for(j = 491670; j < 491680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 492510; j < 492520; j++) _solve(b, j);
for(j = 493350; j < 493360; j++) _solve(b, j);
for(j = 494190; j < 494200; j++) _solve(b, j);
for(j = 495030; j < 495040; j++) _solve(b, j);
for(j = 495870; j < 495880; j++) _solve(b, j);
for(j = 496710; j < 496720; j++) _solve(b, j);
for(j = 497550; j < 497560; j++) _solve(b, j);
for(j = 498390; j < 498400; j++) _solve(b, j);
for(j = 499230; j < 499240; j++) _solve(b, j);
for(j = 500070; j < 500080; j++) _solve(b, j);
for(j = 500910; j < 500920; j++) _solve(b, j);
for(j = 501750; j < 501760; j++) _solve(b, j);
for(j = 502590; j < 502600; j++) _solve(b, j);
for(j = 503430; j < 503440; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 453040; j < 453050; j++) _solve(b, j);
for(j = 453880; j < 453890; j++) _solve(b, j);
for(j = 454720; j < 454730; j++) _solve(b, j);
for(j = 455560; j < 455570; j++) _solve(b, j);
for(j = 456400; j < 456410; j++) _solve(b, j);
for(j = 457240; j < 457250; j++) _solve(b, j);
for(j = 458080; j < 458090; j++) _solve(b, j);
for(j = 458920; j < 458930; j++) _solve(b, j);
for(j = 459760; j < 459770; j++) _solve(b, j);
for(j = 460600; j < 460610; j++) _solve(b, j);
for(j = 461440; j < 461450; j++) _solve(b, j);
for(j = 462280; j < 462290; j++) _solve(b, j);
for(j = 463120; j < 463130; j++) _solve(b, j);
for(j = 463960; j < 463970; j++) _solve(b, j);
for(j = 464800; j < 464810; j++) _solve(b, j);
for(j = 465640; j < 465650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 466480; j < 466490; j++) _solve(b, j);
for(j = 467320; j < 467330; j++) _solve(b, j);
for(j = 468160; j < 468170; j++) _solve(b, j);
for(j = 469000; j < 469010; j++) _solve(b, j);
for(j = 469840; j < 469850; j++) _solve(b, j);
for(j = 470680; j < 470690; j++) _solve(b, j);
for(j = 471520; j < 471530; j++) _solve(b, j);
for(j = 472360; j < 472370; j++) _solve(b, j);
for(j = 473200; j < 473210; j++) _solve(b, j);
for(j = 474040; j < 474050; j++) _solve(b, j);
for(j = 474880; j < 474890; j++) _solve(b, j);
for(j = 475720; j < 475730; j++) _solve(b, j);
for(j = 476560; j < 476570; j++) _solve(b, j);
for(j = 477400; j < 477410; j++) _solve(b, j);
for(j = 478240; j < 478250; j++) _solve(b, j);
for(j = 479080; j < 479090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 479920; j < 479930; j++) _solve(b, j);
for(j = 480760; j < 480770; j++) _solve(b, j);
for(j = 481600; j < 481610; j++) _solve(b, j);
for(j = 482440; j < 482450; j++) _solve(b, j);
for(j = 483280; j < 483290; j++) _solve(b, j);
for(j = 484120; j < 484130; j++) _solve(b, j);
for(j = 484960; j < 484970; j++) _solve(b, j);
for(j = 485800; j < 485810; j++) _solve(b, j);
for(j = 486640; j < 486650; j++) _solve(b, j);
for(j = 487480; j < 487490; j++) _solve(b, j);
for(j = 488320; j < 488330; j++) _solve(b, j);
for(j = 489160; j < 489170; j++) _solve(b, j);
for(j = 490000; j < 490010; j++) _solve(b, j);
for(j = 490840; j < 490850; j++) _solve(b, j);
for(j = 491680; j < 491690; j++) _solve(b, j);
for(j = 492520; j < 492530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 493360; j < 493370; j++) _solve(b, j);
for(j = 494200; j < 494210; j++) _solve(b, j);
for(j = 495040; j < 495050; j++) _solve(b, j);
for(j = 495880; j < 495890; j++) _solve(b, j);
for(j = 496720; j < 496730; j++) _solve(b, j);
for(j = 497560; j < 497570; j++) _solve(b, j);
for(j = 498400; j < 498410; j++) _solve(b, j);
for(j = 499240; j < 499250; j++) _solve(b, j);
for(j = 500080; j < 500090; j++) _solve(b, j);
for(j = 500920; j < 500930; j++) _solve(b, j);
for(j = 501760; j < 501770; j++) _solve(b, j);
for(j = 502600; j < 502610; j++) _solve(b, j);
for(j = 503440; j < 503450; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 453890; j < 453900; j++) _solve(b, j);
for(j = 454730; j < 454740; j++) _solve(b, j);
for(j = 455570; j < 455580; j++) _solve(b, j);
for(j = 456410; j < 456420; j++) _solve(b, j);
for(j = 457250; j < 457260; j++) _solve(b, j);
for(j = 458090; j < 458100; j++) _solve(b, j);
for(j = 458930; j < 458940; j++) _solve(b, j);
for(j = 459770; j < 459780; j++) _solve(b, j);
for(j = 460610; j < 460620; j++) _solve(b, j);
for(j = 461450; j < 461460; j++) _solve(b, j);
for(j = 462290; j < 462300; j++) _solve(b, j);
for(j = 463130; j < 463140; j++) _solve(b, j);
for(j = 463970; j < 463980; j++) _solve(b, j);
for(j = 464810; j < 464820; j++) _solve(b, j);
for(j = 465650; j < 465660; j++) _solve(b, j);
for(j = 466490; j < 466500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 467330; j < 467340; j++) _solve(b, j);
for(j = 468170; j < 468180; j++) _solve(b, j);
for(j = 469010; j < 469020; j++) _solve(b, j);
for(j = 469850; j < 469860; j++) _solve(b, j);
for(j = 470690; j < 470700; j++) _solve(b, j);
for(j = 471530; j < 471540; j++) _solve(b, j);
for(j = 472370; j < 472380; j++) _solve(b, j);
for(j = 473210; j < 473220; j++) _solve(b, j);
for(j = 474050; j < 474060; j++) _solve(b, j);
for(j = 474890; j < 474900; j++) _solve(b, j);
for(j = 475730; j < 475740; j++) _solve(b, j);
for(j = 476570; j < 476580; j++) _solve(b, j);
for(j = 477410; j < 477420; j++) _solve(b, j);
for(j = 478250; j < 478260; j++) _solve(b, j);
for(j = 479090; j < 479100; j++) _solve(b, j);
for(j = 479930; j < 479940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 480770; j < 480780; j++) _solve(b, j);
for(j = 481610; j < 481620; j++) _solve(b, j);
for(j = 482450; j < 482460; j++) _solve(b, j);
for(j = 483290; j < 483300; j++) _solve(b, j);
for(j = 484130; j < 484140; j++) _solve(b, j);
for(j = 484970; j < 484980; j++) _solve(b, j);
for(j = 485810; j < 485820; j++) _solve(b, j);
for(j = 486650; j < 486660; j++) _solve(b, j);
for(j = 487490; j < 487500; j++) _solve(b, j);
for(j = 488330; j < 488340; j++) _solve(b, j);
for(j = 489170; j < 489180; j++) _solve(b, j);
for(j = 490010; j < 490020; j++) _solve(b, j);
for(j = 490850; j < 490860; j++) _solve(b, j);
for(j = 491690; j < 491700; j++) _solve(b, j);
for(j = 492530; j < 492540; j++) _solve(b, j);
for(j = 493370; j < 493380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 494210; j < 494220; j++) _solve(b, j);
for(j = 495050; j < 495060; j++) _solve(b, j);
for(j = 495890; j < 495900; j++) _solve(b, j);
for(j = 496730; j < 496740; j++) _solve(b, j);
for(j = 497570; j < 497580; j++) _solve(b, j);
for(j = 498410; j < 498420; j++) _solve(b, j);
for(j = 499250; j < 499260; j++) _solve(b, j);
for(j = 500090; j < 500100; j++) _solve(b, j);
for(j = 500930; j < 500940; j++) _solve(b, j);
for(j = 501770; j < 501780; j++) _solve(b, j);
for(j = 502610; j < 502620; j++) _solve(b, j);
for(j = 503450; j < 503460; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 454740; j < 454750; j++) _solve(b, j);
for(j = 455580; j < 455590; j++) _solve(b, j);
for(j = 456420; j < 456430; j++) _solve(b, j);
for(j = 457260; j < 457270; j++) _solve(b, j);
for(j = 458100; j < 458110; j++) _solve(b, j);
for(j = 458940; j < 458950; j++) _solve(b, j);
for(j = 459780; j < 459790; j++) _solve(b, j);
for(j = 460620; j < 460630; j++) _solve(b, j);
for(j = 461460; j < 461470; j++) _solve(b, j);
for(j = 462300; j < 462310; j++) _solve(b, j);
for(j = 463140; j < 463150; j++) _solve(b, j);
for(j = 463980; j < 463990; j++) _solve(b, j);
for(j = 464820; j < 464830; j++) _solve(b, j);
for(j = 465660; j < 465670; j++) _solve(b, j);
for(j = 466500; j < 466510; j++) _solve(b, j);
for(j = 467340; j < 467350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 468180; j < 468190; j++) _solve(b, j);
for(j = 469020; j < 469030; j++) _solve(b, j);
for(j = 469860; j < 469870; j++) _solve(b, j);
for(j = 470700; j < 470710; j++) _solve(b, j);
for(j = 471540; j < 471550; j++) _solve(b, j);
for(j = 472380; j < 472390; j++) _solve(b, j);
for(j = 473220; j < 473230; j++) _solve(b, j);
for(j = 474060; j < 474070; j++) _solve(b, j);
for(j = 474900; j < 474910; j++) _solve(b, j);
for(j = 475740; j < 475750; j++) _solve(b, j);
for(j = 476580; j < 476590; j++) _solve(b, j);
for(j = 477420; j < 477430; j++) _solve(b, j);
for(j = 478260; j < 478270; j++) _solve(b, j);
for(j = 479100; j < 479110; j++) _solve(b, j);
for(j = 479940; j < 479950; j++) _solve(b, j);
for(j = 480780; j < 480790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 481620; j < 481630; j++) _solve(b, j);
for(j = 482460; j < 482470; j++) _solve(b, j);
for(j = 483300; j < 483310; j++) _solve(b, j);
for(j = 484140; j < 484150; j++) _solve(b, j);
for(j = 484980; j < 484990; j++) _solve(b, j);
for(j = 485820; j < 485830; j++) _solve(b, j);
for(j = 486660; j < 486670; j++) _solve(b, j);
for(j = 487500; j < 487510; j++) _solve(b, j);
for(j = 488340; j < 488350; j++) _solve(b, j);
for(j = 489180; j < 489190; j++) _solve(b, j);
for(j = 490020; j < 490030; j++) _solve(b, j);
for(j = 490860; j < 490870; j++) _solve(b, j);
for(j = 491700; j < 491710; j++) _solve(b, j);
for(j = 492540; j < 492550; j++) _solve(b, j);
for(j = 493380; j < 493390; j++) _solve(b, j);
for(j = 494220; j < 494230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 495060; j < 495070; j++) _solve(b, j);
for(j = 495900; j < 495910; j++) _solve(b, j);
for(j = 496740; j < 496750; j++) _solve(b, j);
for(j = 497580; j < 497590; j++) _solve(b, j);
for(j = 498420; j < 498430; j++) _solve(b, j);
for(j = 499260; j < 499270; j++) _solve(b, j);
for(j = 500100; j < 500110; j++) _solve(b, j);
for(j = 500940; j < 500950; j++) _solve(b, j);
for(j = 501780; j < 501790; j++) _solve(b, j);
for(j = 502620; j < 502630; j++) _solve(b, j);
for(j = 503460; j < 503470; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 455590; j < 455600; j++) _solve(b, j);
for(j = 456430; j < 456440; j++) _solve(b, j);
for(j = 457270; j < 457280; j++) _solve(b, j);
for(j = 458110; j < 458120; j++) _solve(b, j);
for(j = 458950; j < 458960; j++) _solve(b, j);
for(j = 459790; j < 459800; j++) _solve(b, j);
for(j = 460630; j < 460640; j++) _solve(b, j);
for(j = 461470; j < 461480; j++) _solve(b, j);
for(j = 462310; j < 462320; j++) _solve(b, j);
for(j = 463150; j < 463160; j++) _solve(b, j);
for(j = 463990; j < 464000; j++) _solve(b, j);
for(j = 464830; j < 464840; j++) _solve(b, j);
for(j = 465670; j < 465680; j++) _solve(b, j);
for(j = 466510; j < 466520; j++) _solve(b, j);
for(j = 467350; j < 467360; j++) _solve(b, j);
for(j = 468190; j < 468200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 469030; j < 469040; j++) _solve(b, j);
for(j = 469870; j < 469880; j++) _solve(b, j);
for(j = 470710; j < 470720; j++) _solve(b, j);
for(j = 471550; j < 471560; j++) _solve(b, j);
for(j = 472390; j < 472400; j++) _solve(b, j);
for(j = 473230; j < 473240; j++) _solve(b, j);
for(j = 474070; j < 474080; j++) _solve(b, j);
for(j = 474910; j < 474920; j++) _solve(b, j);
for(j = 475750; j < 475760; j++) _solve(b, j);
for(j = 476590; j < 476600; j++) _solve(b, j);
for(j = 477430; j < 477440; j++) _solve(b, j);
for(j = 478270; j < 478280; j++) _solve(b, j);
for(j = 479110; j < 479120; j++) _solve(b, j);
for(j = 479950; j < 479960; j++) _solve(b, j);
for(j = 480790; j < 480800; j++) _solve(b, j);
for(j = 481630; j < 481640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 482470; j < 482480; j++) _solve(b, j);
for(j = 483310; j < 483320; j++) _solve(b, j);
for(j = 484150; j < 484160; j++) _solve(b, j);
for(j = 484990; j < 485000; j++) _solve(b, j);
for(j = 485830; j < 485840; j++) _solve(b, j);
for(j = 486670; j < 486680; j++) _solve(b, j);
for(j = 487510; j < 487520; j++) _solve(b, j);
for(j = 488350; j < 488360; j++) _solve(b, j);
for(j = 489190; j < 489200; j++) _solve(b, j);
for(j = 490030; j < 490040; j++) _solve(b, j);
for(j = 490870; j < 490880; j++) _solve(b, j);
for(j = 491710; j < 491720; j++) _solve(b, j);
for(j = 492550; j < 492560; j++) _solve(b, j);
for(j = 493390; j < 493400; j++) _solve(b, j);
for(j = 494230; j < 494240; j++) _solve(b, j);
for(j = 495070; j < 495080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 495910; j < 495920; j++) _solve(b, j);
for(j = 496750; j < 496760; j++) _solve(b, j);
for(j = 497590; j < 497600; j++) _solve(b, j);
for(j = 498430; j < 498440; j++) _solve(b, j);
for(j = 499270; j < 499280; j++) _solve(b, j);
for(j = 500110; j < 500120; j++) _solve(b, j);
for(j = 500950; j < 500960; j++) _solve(b, j);
for(j = 501790; j < 501800; j++) _solve(b, j);
for(j = 502630; j < 502640; j++) _solve(b, j);
for(j = 503470; j < 503480; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 456440; j < 456450; j++) _solve(b, j);
for(j = 457280; j < 457290; j++) _solve(b, j);
for(j = 458120; j < 458130; j++) _solve(b, j);
for(j = 458960; j < 458970; j++) _solve(b, j);
for(j = 459800; j < 459810; j++) _solve(b, j);
for(j = 460640; j < 460650; j++) _solve(b, j);
for(j = 461480; j < 461490; j++) _solve(b, j);
for(j = 462320; j < 462330; j++) _solve(b, j);
for(j = 463160; j < 463170; j++) _solve(b, j);
for(j = 464000; j < 464010; j++) _solve(b, j);
for(j = 464840; j < 464850; j++) _solve(b, j);
for(j = 465680; j < 465690; j++) _solve(b, j);
for(j = 466520; j < 466530; j++) _solve(b, j);
for(j = 467360; j < 467370; j++) _solve(b, j);
for(j = 468200; j < 468210; j++) _solve(b, j);
for(j = 469040; j < 469050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 469880; j < 469890; j++) _solve(b, j);
for(j = 470720; j < 470730; j++) _solve(b, j);
for(j = 471560; j < 471570; j++) _solve(b, j);
for(j = 472400; j < 472410; j++) _solve(b, j);
for(j = 473240; j < 473250; j++) _solve(b, j);
for(j = 474080; j < 474090; j++) _solve(b, j);
for(j = 474920; j < 474930; j++) _solve(b, j);
for(j = 475760; j < 475770; j++) _solve(b, j);
for(j = 476600; j < 476610; j++) _solve(b, j);
for(j = 477440; j < 477450; j++) _solve(b, j);
for(j = 478280; j < 478290; j++) _solve(b, j);
for(j = 479120; j < 479130; j++) _solve(b, j);
for(j = 479960; j < 479970; j++) _solve(b, j);
for(j = 480800; j < 480810; j++) _solve(b, j);
for(j = 481640; j < 481650; j++) _solve(b, j);
for(j = 482480; j < 482490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 483320; j < 483330; j++) _solve(b, j);
for(j = 484160; j < 484170; j++) _solve(b, j);
for(j = 485000; j < 485010; j++) _solve(b, j);
for(j = 485840; j < 485850; j++) _solve(b, j);
for(j = 486680; j < 486690; j++) _solve(b, j);
for(j = 487520; j < 487530; j++) _solve(b, j);
for(j = 488360; j < 488370; j++) _solve(b, j);
for(j = 489200; j < 489210; j++) _solve(b, j);
for(j = 490040; j < 490050; j++) _solve(b, j);
for(j = 490880; j < 490890; j++) _solve(b, j);
for(j = 491720; j < 491730; j++) _solve(b, j);
for(j = 492560; j < 492570; j++) _solve(b, j);
for(j = 493400; j < 493410; j++) _solve(b, j);
for(j = 494240; j < 494250; j++) _solve(b, j);
for(j = 495080; j < 495090; j++) _solve(b, j);
for(j = 495920; j < 495930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496760; j < 496770; j++) _solve(b, j);
for(j = 497600; j < 497610; j++) _solve(b, j);
for(j = 498440; j < 498450; j++) _solve(b, j);
for(j = 499280; j < 499290; j++) _solve(b, j);
for(j = 500120; j < 500130; j++) _solve(b, j);
for(j = 500960; j < 500970; j++) _solve(b, j);
for(j = 501800; j < 501810; j++) _solve(b, j);
for(j = 502640; j < 502650; j++) _solve(b, j);
for(j = 503480; j < 503490; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 457290; j < 457300; j++) _solve(b, j);
for(j = 458130; j < 458140; j++) _solve(b, j);
for(j = 458970; j < 458980; j++) _solve(b, j);
for(j = 459810; j < 459820; j++) _solve(b, j);
for(j = 460650; j < 460660; j++) _solve(b, j);
for(j = 461490; j < 461500; j++) _solve(b, j);
for(j = 462330; j < 462340; j++) _solve(b, j);
for(j = 463170; j < 463180; j++) _solve(b, j);
for(j = 464010; j < 464020; j++) _solve(b, j);
for(j = 464850; j < 464860; j++) _solve(b, j);
for(j = 465690; j < 465700; j++) _solve(b, j);
for(j = 466530; j < 466540; j++) _solve(b, j);
for(j = 467370; j < 467380; j++) _solve(b, j);
for(j = 468210; j < 468220; j++) _solve(b, j);
for(j = 469050; j < 469060; j++) _solve(b, j);
for(j = 469890; j < 469900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 470730; j < 470740; j++) _solve(b, j);
for(j = 471570; j < 471580; j++) _solve(b, j);
for(j = 472410; j < 472420; j++) _solve(b, j);
for(j = 473250; j < 473260; j++) _solve(b, j);
for(j = 474090; j < 474100; j++) _solve(b, j);
for(j = 474930; j < 474940; j++) _solve(b, j);
for(j = 475770; j < 475780; j++) _solve(b, j);
for(j = 476610; j < 476620; j++) _solve(b, j);
for(j = 477450; j < 477460; j++) _solve(b, j);
for(j = 478290; j < 478300; j++) _solve(b, j);
for(j = 479130; j < 479140; j++) _solve(b, j);
for(j = 479970; j < 479980; j++) _solve(b, j);
for(j = 480810; j < 480820; j++) _solve(b, j);
for(j = 481650; j < 481660; j++) _solve(b, j);
for(j = 482490; j < 482500; j++) _solve(b, j);
for(j = 483330; j < 483340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 484170; j < 484180; j++) _solve(b, j);
for(j = 485010; j < 485020; j++) _solve(b, j);
for(j = 485850; j < 485860; j++) _solve(b, j);
for(j = 486690; j < 486700; j++) _solve(b, j);
for(j = 487530; j < 487540; j++) _solve(b, j);
for(j = 488370; j < 488380; j++) _solve(b, j);
for(j = 489210; j < 489220; j++) _solve(b, j);
for(j = 490050; j < 490060; j++) _solve(b, j);
for(j = 490890; j < 490900; j++) _solve(b, j);
for(j = 491730; j < 491740; j++) _solve(b, j);
for(j = 492570; j < 492580; j++) _solve(b, j);
for(j = 493410; j < 493420; j++) _solve(b, j);
for(j = 494250; j < 494260; j++) _solve(b, j);
for(j = 495090; j < 495100; j++) _solve(b, j);
for(j = 495930; j < 495940; j++) _solve(b, j);
for(j = 496770; j < 496780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497610; j < 497620; j++) _solve(b, j);
for(j = 498450; j < 498460; j++) _solve(b, j);
for(j = 499290; j < 499300; j++) _solve(b, j);
for(j = 500130; j < 500140; j++) _solve(b, j);
for(j = 500970; j < 500980; j++) _solve(b, j);
for(j = 501810; j < 501820; j++) _solve(b, j);
for(j = 502650; j < 502660; j++) _solve(b, j);
for(j = 503490; j < 503500; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 458140; j < 458150; j++) _solve(b, j);
for(j = 458980; j < 458990; j++) _solve(b, j);
for(j = 459820; j < 459830; j++) _solve(b, j);
for(j = 460660; j < 460670; j++) _solve(b, j);
for(j = 461500; j < 461510; j++) _solve(b, j);
for(j = 462340; j < 462350; j++) _solve(b, j);
for(j = 463180; j < 463190; j++) _solve(b, j);
for(j = 464020; j < 464030; j++) _solve(b, j);
for(j = 464860; j < 464870; j++) _solve(b, j);
for(j = 465700; j < 465710; j++) _solve(b, j);
for(j = 466540; j < 466550; j++) _solve(b, j);
for(j = 467380; j < 467390; j++) _solve(b, j);
for(j = 468220; j < 468230; j++) _solve(b, j);
for(j = 469060; j < 469070; j++) _solve(b, j);
for(j = 469900; j < 469910; j++) _solve(b, j);
for(j = 470740; j < 470750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 471580; j < 471590; j++) _solve(b, j);
for(j = 472420; j < 472430; j++) _solve(b, j);
for(j = 473260; j < 473270; j++) _solve(b, j);
for(j = 474100; j < 474110; j++) _solve(b, j);
for(j = 474940; j < 474950; j++) _solve(b, j);
for(j = 475780; j < 475790; j++) _solve(b, j);
for(j = 476620; j < 476630; j++) _solve(b, j);
for(j = 477460; j < 477470; j++) _solve(b, j);
for(j = 478300; j < 478310; j++) _solve(b, j);
for(j = 479140; j < 479150; j++) _solve(b, j);
for(j = 479980; j < 479990; j++) _solve(b, j);
for(j = 480820; j < 480830; j++) _solve(b, j);
for(j = 481660; j < 481670; j++) _solve(b, j);
for(j = 482500; j < 482510; j++) _solve(b, j);
for(j = 483340; j < 483350; j++) _solve(b, j);
for(j = 484180; j < 484190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 485020; j < 485030; j++) _solve(b, j);
for(j = 485860; j < 485870; j++) _solve(b, j);
for(j = 486700; j < 486710; j++) _solve(b, j);
for(j = 487540; j < 487550; j++) _solve(b, j);
for(j = 488380; j < 488390; j++) _solve(b, j);
for(j = 489220; j < 489230; j++) _solve(b, j);
for(j = 490060; j < 490070; j++) _solve(b, j);
for(j = 490900; j < 490910; j++) _solve(b, j);
for(j = 491740; j < 491750; j++) _solve(b, j);
for(j = 492580; j < 492590; j++) _solve(b, j);
for(j = 493420; j < 493430; j++) _solve(b, j);
for(j = 494260; j < 494270; j++) _solve(b, j);
for(j = 495100; j < 495110; j++) _solve(b, j);
for(j = 495940; j < 495950; j++) _solve(b, j);
for(j = 496780; j < 496790; j++) _solve(b, j);
for(j = 497620; j < 497630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498460; j < 498470; j++) _solve(b, j);
for(j = 499300; j < 499310; j++) _solve(b, j);
for(j = 500140; j < 500150; j++) _solve(b, j);
for(j = 500980; j < 500990; j++) _solve(b, j);
for(j = 501820; j < 501830; j++) _solve(b, j);
for(j = 502660; j < 502670; j++) _solve(b, j);
for(j = 503500; j < 503510; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 458990; j < 459000; j++) _solve(b, j);
for(j = 459830; j < 459840; j++) _solve(b, j);
for(j = 460670; j < 460680; j++) _solve(b, j);
for(j = 461510; j < 461520; j++) _solve(b, j);
for(j = 462350; j < 462360; j++) _solve(b, j);
for(j = 463190; j < 463200; j++) _solve(b, j);
for(j = 464030; j < 464040; j++) _solve(b, j);
for(j = 464870; j < 464880; j++) _solve(b, j);
for(j = 465710; j < 465720; j++) _solve(b, j);
for(j = 466550; j < 466560; j++) _solve(b, j);
for(j = 467390; j < 467400; j++) _solve(b, j);
for(j = 468230; j < 468240; j++) _solve(b, j);
for(j = 469070; j < 469080; j++) _solve(b, j);
for(j = 469910; j < 469920; j++) _solve(b, j);
for(j = 470750; j < 470760; j++) _solve(b, j);
for(j = 471590; j < 471600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 472430; j < 472440; j++) _solve(b, j);
for(j = 473270; j < 473280; j++) _solve(b, j);
for(j = 474110; j < 474120; j++) _solve(b, j);
for(j = 474950; j < 474960; j++) _solve(b, j);
for(j = 475790; j < 475800; j++) _solve(b, j);
for(j = 476630; j < 476640; j++) _solve(b, j);
for(j = 477470; j < 477480; j++) _solve(b, j);
for(j = 478310; j < 478320; j++) _solve(b, j);
for(j = 479150; j < 479160; j++) _solve(b, j);
for(j = 479990; j < 480000; j++) _solve(b, j);
for(j = 480830; j < 480840; j++) _solve(b, j);
for(j = 481670; j < 481680; j++) _solve(b, j);
for(j = 482510; j < 482520; j++) _solve(b, j);
for(j = 483350; j < 483360; j++) _solve(b, j);
for(j = 484190; j < 484200; j++) _solve(b, j);
for(j = 485030; j < 485040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 485870; j < 485880; j++) _solve(b, j);
for(j = 486710; j < 486720; j++) _solve(b, j);
for(j = 487550; j < 487560; j++) _solve(b, j);
for(j = 488390; j < 488400; j++) _solve(b, j);
for(j = 489230; j < 489240; j++) _solve(b, j);
for(j = 490070; j < 490080; j++) _solve(b, j);
for(j = 490910; j < 490920; j++) _solve(b, j);
for(j = 491750; j < 491760; j++) _solve(b, j);
for(j = 492590; j < 492600; j++) _solve(b, j);
for(j = 493430; j < 493440; j++) _solve(b, j);
for(j = 494270; j < 494280; j++) _solve(b, j);
for(j = 495110; j < 495120; j++) _solve(b, j);
for(j = 495950; j < 495960; j++) _solve(b, j);
for(j = 496790; j < 496800; j++) _solve(b, j);
for(j = 497630; j < 497640; j++) _solve(b, j);
for(j = 498470; j < 498480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499310; j < 499320; j++) _solve(b, j);
for(j = 500150; j < 500160; j++) _solve(b, j);
for(j = 500990; j < 501000; j++) _solve(b, j);
for(j = 501830; j < 501840; j++) _solve(b, j);
for(j = 502670; j < 502680; j++) _solve(b, j);
for(j = 503510; j < 503520; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 459840; j < 459850; j++) _solve(b, j);
for(j = 460680; j < 460690; j++) _solve(b, j);
for(j = 461520; j < 461530; j++) _solve(b, j);
for(j = 462360; j < 462370; j++) _solve(b, j);
for(j = 463200; j < 463210; j++) _solve(b, j);
for(j = 464040; j < 464050; j++) _solve(b, j);
for(j = 464880; j < 464890; j++) _solve(b, j);
for(j = 465720; j < 465730; j++) _solve(b, j);
for(j = 466560; j < 466570; j++) _solve(b, j);
for(j = 467400; j < 467410; j++) _solve(b, j);
for(j = 468240; j < 468250; j++) _solve(b, j);
for(j = 469080; j < 469090; j++) _solve(b, j);
for(j = 469920; j < 469930; j++) _solve(b, j);
for(j = 470760; j < 470770; j++) _solve(b, j);
for(j = 471600; j < 471610; j++) _solve(b, j);
for(j = 472440; j < 472450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 473280; j < 473290; j++) _solve(b, j);
for(j = 474120; j < 474130; j++) _solve(b, j);
for(j = 474960; j < 474970; j++) _solve(b, j);
for(j = 475800; j < 475810; j++) _solve(b, j);
for(j = 476640; j < 476650; j++) _solve(b, j);
for(j = 477480; j < 477490; j++) _solve(b, j);
for(j = 478320; j < 478330; j++) _solve(b, j);
for(j = 479160; j < 479170; j++) _solve(b, j);
for(j = 480000; j < 480010; j++) _solve(b, j);
for(j = 480840; j < 480850; j++) _solve(b, j);
for(j = 481680; j < 481690; j++) _solve(b, j);
for(j = 482520; j < 482530; j++) _solve(b, j);
for(j = 483360; j < 483370; j++) _solve(b, j);
for(j = 484200; j < 484210; j++) _solve(b, j);
for(j = 485040; j < 485050; j++) _solve(b, j);
for(j = 485880; j < 485890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 486720; j < 486730; j++) _solve(b, j);
for(j = 487560; j < 487570; j++) _solve(b, j);
for(j = 488400; j < 488410; j++) _solve(b, j);
for(j = 489240; j < 489250; j++) _solve(b, j);
for(j = 490080; j < 490090; j++) _solve(b, j);
for(j = 490920; j < 490930; j++) _solve(b, j);
for(j = 491760; j < 491770; j++) _solve(b, j);
for(j = 492600; j < 492610; j++) _solve(b, j);
for(j = 493440; j < 493450; j++) _solve(b, j);
for(j = 494280; j < 494290; j++) _solve(b, j);
for(j = 495120; j < 495130; j++) _solve(b, j);
for(j = 495960; j < 495970; j++) _solve(b, j);
for(j = 496800; j < 496810; j++) _solve(b, j);
for(j = 497640; j < 497650; j++) _solve(b, j);
for(j = 498480; j < 498490; j++) _solve(b, j);
for(j = 499320; j < 499330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500160; j < 500170; j++) _solve(b, j);
for(j = 501000; j < 501010; j++) _solve(b, j);
for(j = 501840; j < 501850; j++) _solve(b, j);
for(j = 502680; j < 502690; j++) _solve(b, j);
for(j = 503520; j < 503530; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 460690; j < 460700; j++) _solve(b, j);
for(j = 461530; j < 461540; j++) _solve(b, j);
for(j = 462370; j < 462380; j++) _solve(b, j);
for(j = 463210; j < 463220; j++) _solve(b, j);
for(j = 464050; j < 464060; j++) _solve(b, j);
for(j = 464890; j < 464900; j++) _solve(b, j);
for(j = 465730; j < 465740; j++) _solve(b, j);
for(j = 466570; j < 466580; j++) _solve(b, j);
for(j = 467410; j < 467420; j++) _solve(b, j);
for(j = 468250; j < 468260; j++) _solve(b, j);
for(j = 469090; j < 469100; j++) _solve(b, j);
for(j = 469930; j < 469940; j++) _solve(b, j);
for(j = 470770; j < 470780; j++) _solve(b, j);
for(j = 471610; j < 471620; j++) _solve(b, j);
for(j = 472450; j < 472460; j++) _solve(b, j);
for(j = 473290; j < 473300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 474130; j < 474140; j++) _solve(b, j);
for(j = 474970; j < 474980; j++) _solve(b, j);
for(j = 475810; j < 475820; j++) _solve(b, j);
for(j = 476650; j < 476660; j++) _solve(b, j);
for(j = 477490; j < 477500; j++) _solve(b, j);
for(j = 478330; j < 478340; j++) _solve(b, j);
for(j = 479170; j < 479180; j++) _solve(b, j);
for(j = 480010; j < 480020; j++) _solve(b, j);
for(j = 480850; j < 480860; j++) _solve(b, j);
for(j = 481690; j < 481700; j++) _solve(b, j);
for(j = 482530; j < 482540; j++) _solve(b, j);
for(j = 483370; j < 483380; j++) _solve(b, j);
for(j = 484210; j < 484220; j++) _solve(b, j);
for(j = 485050; j < 485060; j++) _solve(b, j);
for(j = 485890; j < 485900; j++) _solve(b, j);
for(j = 486730; j < 486740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 487570; j < 487580; j++) _solve(b, j);
for(j = 488410; j < 488420; j++) _solve(b, j);
for(j = 489250; j < 489260; j++) _solve(b, j);
for(j = 490090; j < 490100; j++) _solve(b, j);
for(j = 490930; j < 490940; j++) _solve(b, j);
for(j = 491770; j < 491780; j++) _solve(b, j);
for(j = 492610; j < 492620; j++) _solve(b, j);
for(j = 493450; j < 493460; j++) _solve(b, j);
for(j = 494290; j < 494300; j++) _solve(b, j);
for(j = 495130; j < 495140; j++) _solve(b, j);
for(j = 495970; j < 495980; j++) _solve(b, j);
for(j = 496810; j < 496820; j++) _solve(b, j);
for(j = 497650; j < 497660; j++) _solve(b, j);
for(j = 498490; j < 498500; j++) _solve(b, j);
for(j = 499330; j < 499340; j++) _solve(b, j);
for(j = 500170; j < 500180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501010; j < 501020; j++) _solve(b, j);
for(j = 501850; j < 501860; j++) _solve(b, j);
for(j = 502690; j < 502700; j++) _solve(b, j);
for(j = 503530; j < 503540; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 461540; j < 461550; j++) _solve(b, j);
for(j = 462380; j < 462390; j++) _solve(b, j);
for(j = 463220; j < 463230; j++) _solve(b, j);
for(j = 464060; j < 464070; j++) _solve(b, j);
for(j = 464900; j < 464910; j++) _solve(b, j);
for(j = 465740; j < 465750; j++) _solve(b, j);
for(j = 466580; j < 466590; j++) _solve(b, j);
for(j = 467420; j < 467430; j++) _solve(b, j);
for(j = 468260; j < 468270; j++) _solve(b, j);
for(j = 469100; j < 469110; j++) _solve(b, j);
for(j = 469940; j < 469950; j++) _solve(b, j);
for(j = 470780; j < 470790; j++) _solve(b, j);
for(j = 471620; j < 471630; j++) _solve(b, j);
for(j = 472460; j < 472470; j++) _solve(b, j);
for(j = 473300; j < 473310; j++) _solve(b, j);
for(j = 474140; j < 474150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 474980; j < 474990; j++) _solve(b, j);
for(j = 475820; j < 475830; j++) _solve(b, j);
for(j = 476660; j < 476670; j++) _solve(b, j);
for(j = 477500; j < 477510; j++) _solve(b, j);
for(j = 478340; j < 478350; j++) _solve(b, j);
for(j = 479180; j < 479190; j++) _solve(b, j);
for(j = 480020; j < 480030; j++) _solve(b, j);
for(j = 480860; j < 480870; j++) _solve(b, j);
for(j = 481700; j < 481710; j++) _solve(b, j);
for(j = 482540; j < 482550; j++) _solve(b, j);
for(j = 483380; j < 483390; j++) _solve(b, j);
for(j = 484220; j < 484230; j++) _solve(b, j);
for(j = 485060; j < 485070; j++) _solve(b, j);
for(j = 485900; j < 485910; j++) _solve(b, j);
for(j = 486740; j < 486750; j++) _solve(b, j);
for(j = 487580; j < 487590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 488420; j < 488430; j++) _solve(b, j);
for(j = 489260; j < 489270; j++) _solve(b, j);
for(j = 490100; j < 490110; j++) _solve(b, j);
for(j = 490940; j < 490950; j++) _solve(b, j);
for(j = 491780; j < 491790; j++) _solve(b, j);
for(j = 492620; j < 492630; j++) _solve(b, j);
for(j = 493460; j < 493470; j++) _solve(b, j);
for(j = 494300; j < 494310; j++) _solve(b, j);
for(j = 495140; j < 495150; j++) _solve(b, j);
for(j = 495980; j < 495990; j++) _solve(b, j);
for(j = 496820; j < 496830; j++) _solve(b, j);
for(j = 497660; j < 497670; j++) _solve(b, j);
for(j = 498500; j < 498510; j++) _solve(b, j);
for(j = 499340; j < 499350; j++) _solve(b, j);
for(j = 500180; j < 500190; j++) _solve(b, j);
for(j = 501020; j < 501030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501860; j < 501870; j++) _solve(b, j);
for(j = 502700; j < 502710; j++) _solve(b, j);
for(j = 503540; j < 503550; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 462390; j < 462400; j++) _solve(b, j);
for(j = 463230; j < 463240; j++) _solve(b, j);
for(j = 464070; j < 464080; j++) _solve(b, j);
for(j = 464910; j < 464920; j++) _solve(b, j);
for(j = 465750; j < 465760; j++) _solve(b, j);
for(j = 466590; j < 466600; j++) _solve(b, j);
for(j = 467430; j < 467440; j++) _solve(b, j);
for(j = 468270; j < 468280; j++) _solve(b, j);
for(j = 469110; j < 469120; j++) _solve(b, j);
for(j = 469950; j < 469960; j++) _solve(b, j);
for(j = 470790; j < 470800; j++) _solve(b, j);
for(j = 471630; j < 471640; j++) _solve(b, j);
for(j = 472470; j < 472480; j++) _solve(b, j);
for(j = 473310; j < 473320; j++) _solve(b, j);
for(j = 474150; j < 474160; j++) _solve(b, j);
for(j = 474990; j < 475000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 475830; j < 475840; j++) _solve(b, j);
for(j = 476670; j < 476680; j++) _solve(b, j);
for(j = 477510; j < 477520; j++) _solve(b, j);
for(j = 478350; j < 478360; j++) _solve(b, j);
for(j = 479190; j < 479200; j++) _solve(b, j);
for(j = 480030; j < 480040; j++) _solve(b, j);
for(j = 480870; j < 480880; j++) _solve(b, j);
for(j = 481710; j < 481720; j++) _solve(b, j);
for(j = 482550; j < 482560; j++) _solve(b, j);
for(j = 483390; j < 483400; j++) _solve(b, j);
for(j = 484230; j < 484240; j++) _solve(b, j);
for(j = 485070; j < 485080; j++) _solve(b, j);
for(j = 485910; j < 485920; j++) _solve(b, j);
for(j = 486750; j < 486760; j++) _solve(b, j);
for(j = 487590; j < 487600; j++) _solve(b, j);
for(j = 488430; j < 488440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 489270; j < 489280; j++) _solve(b, j);
for(j = 490110; j < 490120; j++) _solve(b, j);
for(j = 490950; j < 490960; j++) _solve(b, j);
for(j = 491790; j < 491800; j++) _solve(b, j);
for(j = 492630; j < 492640; j++) _solve(b, j);
for(j = 493470; j < 493480; j++) _solve(b, j);
for(j = 494310; j < 494320; j++) _solve(b, j);
for(j = 495150; j < 495160; j++) _solve(b, j);
for(j = 495990; j < 496000; j++) _solve(b, j);
for(j = 496830; j < 496840; j++) _solve(b, j);
for(j = 497670; j < 497680; j++) _solve(b, j);
for(j = 498510; j < 498520; j++) _solve(b, j);
for(j = 499350; j < 499360; j++) _solve(b, j);
for(j = 500190; j < 500200; j++) _solve(b, j);
for(j = 501030; j < 501040; j++) _solve(b, j);
for(j = 501870; j < 501880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502710; j < 502720; j++) _solve(b, j);
for(j = 503550; j < 503560; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 463240; j < 463250; j++) _solve(b, j);
for(j = 464080; j < 464090; j++) _solve(b, j);
for(j = 464920; j < 464930; j++) _solve(b, j);
for(j = 465760; j < 465770; j++) _solve(b, j);
for(j = 466600; j < 466610; j++) _solve(b, j);
for(j = 467440; j < 467450; j++) _solve(b, j);
for(j = 468280; j < 468290; j++) _solve(b, j);
for(j = 469120; j < 469130; j++) _solve(b, j);
for(j = 469960; j < 469970; j++) _solve(b, j);
for(j = 470800; j < 470810; j++) _solve(b, j);
for(j = 471640; j < 471650; j++) _solve(b, j);
for(j = 472480; j < 472490; j++) _solve(b, j);
for(j = 473320; j < 473330; j++) _solve(b, j);
for(j = 474160; j < 474170; j++) _solve(b, j);
for(j = 475000; j < 475010; j++) _solve(b, j);
for(j = 475840; j < 475850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 476680; j < 476690; j++) _solve(b, j);
for(j = 477520; j < 477530; j++) _solve(b, j);
for(j = 478360; j < 478370; j++) _solve(b, j);
for(j = 479200; j < 479210; j++) _solve(b, j);
for(j = 480040; j < 480050; j++) _solve(b, j);
for(j = 480880; j < 480890; j++) _solve(b, j);
for(j = 481720; j < 481730; j++) _solve(b, j);
for(j = 482560; j < 482570; j++) _solve(b, j);
for(j = 483400; j < 483410; j++) _solve(b, j);
for(j = 484240; j < 484250; j++) _solve(b, j);
for(j = 485080; j < 485090; j++) _solve(b, j);
for(j = 485920; j < 485930; j++) _solve(b, j);
for(j = 486760; j < 486770; j++) _solve(b, j);
for(j = 487600; j < 487610; j++) _solve(b, j);
for(j = 488440; j < 488450; j++) _solve(b, j);
for(j = 489280; j < 489290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 490120; j < 490130; j++) _solve(b, j);
for(j = 490960; j < 490970; j++) _solve(b, j);
for(j = 491800; j < 491810; j++) _solve(b, j);
for(j = 492640; j < 492650; j++) _solve(b, j);
for(j = 493480; j < 493490; j++) _solve(b, j);
for(j = 494320; j < 494330; j++) _solve(b, j);
for(j = 495160; j < 495170; j++) _solve(b, j);
for(j = 496000; j < 496010; j++) _solve(b, j);
for(j = 496840; j < 496850; j++) _solve(b, j);
for(j = 497680; j < 497690; j++) _solve(b, j);
for(j = 498520; j < 498530; j++) _solve(b, j);
for(j = 499360; j < 499370; j++) _solve(b, j);
for(j = 500200; j < 500210; j++) _solve(b, j);
for(j = 501040; j < 501050; j++) _solve(b, j);
for(j = 501880; j < 501890; j++) _solve(b, j);
for(j = 502720; j < 502730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503560; j < 503570; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 464090; j < 464100; j++) _solve(b, j);
for(j = 464930; j < 464940; j++) _solve(b, j);
for(j = 465770; j < 465780; j++) _solve(b, j);
for(j = 466610; j < 466620; j++) _solve(b, j);
for(j = 467450; j < 467460; j++) _solve(b, j);
for(j = 468290; j < 468300; j++) _solve(b, j);
for(j = 469130; j < 469140; j++) _solve(b, j);
for(j = 469970; j < 469980; j++) _solve(b, j);
for(j = 470810; j < 470820; j++) _solve(b, j);
for(j = 471650; j < 471660; j++) _solve(b, j);
for(j = 472490; j < 472500; j++) _solve(b, j);
for(j = 473330; j < 473340; j++) _solve(b, j);
for(j = 474170; j < 474180; j++) _solve(b, j);
for(j = 475010; j < 475020; j++) _solve(b, j);
for(j = 475850; j < 475860; j++) _solve(b, j);
for(j = 476690; j < 476700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 477530; j < 477540; j++) _solve(b, j);
for(j = 478370; j < 478380; j++) _solve(b, j);
for(j = 479210; j < 479220; j++) _solve(b, j);
for(j = 480050; j < 480060; j++) _solve(b, j);
for(j = 480890; j < 480900; j++) _solve(b, j);
for(j = 481730; j < 481740; j++) _solve(b, j);
for(j = 482570; j < 482580; j++) _solve(b, j);
for(j = 483410; j < 483420; j++) _solve(b, j);
for(j = 484250; j < 484260; j++) _solve(b, j);
for(j = 485090; j < 485100; j++) _solve(b, j);
for(j = 485930; j < 485940; j++) _solve(b, j);
for(j = 486770; j < 486780; j++) _solve(b, j);
for(j = 487610; j < 487620; j++) _solve(b, j);
for(j = 488450; j < 488460; j++) _solve(b, j);
for(j = 489290; j < 489300; j++) _solve(b, j);
for(j = 490130; j < 490140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 490970; j < 490980; j++) _solve(b, j);
for(j = 491810; j < 491820; j++) _solve(b, j);
for(j = 492650; j < 492660; j++) _solve(b, j);
for(j = 493490; j < 493500; j++) _solve(b, j);
for(j = 494330; j < 494340; j++) _solve(b, j);
for(j = 495170; j < 495180; j++) _solve(b, j);
for(j = 496010; j < 496020; j++) _solve(b, j);
for(j = 496850; j < 496860; j++) _solve(b, j);
for(j = 497690; j < 497700; j++) _solve(b, j);
for(j = 498530; j < 498540; j++) _solve(b, j);
for(j = 499370; j < 499380; j++) _solve(b, j);
for(j = 500210; j < 500220; j++) _solve(b, j);
for(j = 501050; j < 501060; j++) _solve(b, j);
for(j = 501890; j < 501900; j++) _solve(b, j);
for(j = 502730; j < 502740; j++) _solve(b, j);
for(j = 503570; j < 503580; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 464940; j < 464950; j++) _solve(b, j);
for(j = 465780; j < 465790; j++) _solve(b, j);
for(j = 466620; j < 466630; j++) _solve(b, j);
for(j = 467460; j < 467470; j++) _solve(b, j);
for(j = 468300; j < 468310; j++) _solve(b, j);
for(j = 469140; j < 469150; j++) _solve(b, j);
for(j = 469980; j < 469990; j++) _solve(b, j);
for(j = 470820; j < 470830; j++) _solve(b, j);
for(j = 471660; j < 471670; j++) _solve(b, j);
for(j = 472500; j < 472510; j++) _solve(b, j);
for(j = 473340; j < 473350; j++) _solve(b, j);
for(j = 474180; j < 474190; j++) _solve(b, j);
for(j = 475020; j < 475030; j++) _solve(b, j);
for(j = 475860; j < 475870; j++) _solve(b, j);
for(j = 476700; j < 476710; j++) _solve(b, j);
for(j = 477540; j < 477550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 478380; j < 478390; j++) _solve(b, j);
for(j = 479220; j < 479230; j++) _solve(b, j);
for(j = 480060; j < 480070; j++) _solve(b, j);
for(j = 480900; j < 480910; j++) _solve(b, j);
for(j = 481740; j < 481750; j++) _solve(b, j);
for(j = 482580; j < 482590; j++) _solve(b, j);
for(j = 483420; j < 483430; j++) _solve(b, j);
for(j = 484260; j < 484270; j++) _solve(b, j);
for(j = 485100; j < 485110; j++) _solve(b, j);
for(j = 485940; j < 485950; j++) _solve(b, j);
for(j = 486780; j < 486790; j++) _solve(b, j);
for(j = 487620; j < 487630; j++) _solve(b, j);
for(j = 488460; j < 488470; j++) _solve(b, j);
for(j = 489300; j < 489310; j++) _solve(b, j);
for(j = 490140; j < 490150; j++) _solve(b, j);
for(j = 490980; j < 490990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 491820; j < 491830; j++) _solve(b, j);
for(j = 492660; j < 492670; j++) _solve(b, j);
for(j = 493500; j < 493510; j++) _solve(b, j);
for(j = 494340; j < 494350; j++) _solve(b, j);
for(j = 495180; j < 495190; j++) _solve(b, j);
for(j = 496020; j < 496030; j++) _solve(b, j);
for(j = 496860; j < 496870; j++) _solve(b, j);
for(j = 497700; j < 497710; j++) _solve(b, j);
for(j = 498540; j < 498550; j++) _solve(b, j);
for(j = 499380; j < 499390; j++) _solve(b, j);
for(j = 500220; j < 500230; j++) _solve(b, j);
for(j = 501060; j < 501070; j++) _solve(b, j);
for(j = 501900; j < 501910; j++) _solve(b, j);
for(j = 502740; j < 502750; j++) _solve(b, j);
for(j = 503580; j < 503590; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 465790; j < 465800; j++) _solve(b, j);
for(j = 466630; j < 466640; j++) _solve(b, j);
for(j = 467470; j < 467480; j++) _solve(b, j);
for(j = 468310; j < 468320; j++) _solve(b, j);
for(j = 469150; j < 469160; j++) _solve(b, j);
for(j = 469990; j < 470000; j++) _solve(b, j);
for(j = 470830; j < 470840; j++) _solve(b, j);
for(j = 471670; j < 471680; j++) _solve(b, j);
for(j = 472510; j < 472520; j++) _solve(b, j);
for(j = 473350; j < 473360; j++) _solve(b, j);
for(j = 474190; j < 474200; j++) _solve(b, j);
for(j = 475030; j < 475040; j++) _solve(b, j);
for(j = 475870; j < 475880; j++) _solve(b, j);
for(j = 476710; j < 476720; j++) _solve(b, j);
for(j = 477550; j < 477560; j++) _solve(b, j);
for(j = 478390; j < 478400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 479230; j < 479240; j++) _solve(b, j);
for(j = 480070; j < 480080; j++) _solve(b, j);
for(j = 480910; j < 480920; j++) _solve(b, j);
for(j = 481750; j < 481760; j++) _solve(b, j);
for(j = 482590; j < 482600; j++) _solve(b, j);
for(j = 483430; j < 483440; j++) _solve(b, j);
for(j = 484270; j < 484280; j++) _solve(b, j);
for(j = 485110; j < 485120; j++) _solve(b, j);
for(j = 485950; j < 485960; j++) _solve(b, j);
for(j = 486790; j < 486800; j++) _solve(b, j);
for(j = 487630; j < 487640; j++) _solve(b, j);
for(j = 488470; j < 488480; j++) _solve(b, j);
for(j = 489310; j < 489320; j++) _solve(b, j);
for(j = 490150; j < 490160; j++) _solve(b, j);
for(j = 490990; j < 491000; j++) _solve(b, j);
for(j = 491830; j < 491840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 492670; j < 492680; j++) _solve(b, j);
for(j = 493510; j < 493520; j++) _solve(b, j);
for(j = 494350; j < 494360; j++) _solve(b, j);
for(j = 495190; j < 495200; j++) _solve(b, j);
for(j = 496030; j < 496040; j++) _solve(b, j);
for(j = 496870; j < 496880; j++) _solve(b, j);
for(j = 497710; j < 497720; j++) _solve(b, j);
for(j = 498550; j < 498560; j++) _solve(b, j);
for(j = 499390; j < 499400; j++) _solve(b, j);
for(j = 500230; j < 500240; j++) _solve(b, j);
for(j = 501070; j < 501080; j++) _solve(b, j);
for(j = 501910; j < 501920; j++) _solve(b, j);
for(j = 502750; j < 502760; j++) _solve(b, j);
for(j = 503590; j < 503600; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 466640; j < 466650; j++) _solve(b, j);
for(j = 467480; j < 467490; j++) _solve(b, j);
for(j = 468320; j < 468330; j++) _solve(b, j);
for(j = 469160; j < 469170; j++) _solve(b, j);
for(j = 470000; j < 470010; j++) _solve(b, j);
for(j = 470840; j < 470850; j++) _solve(b, j);
for(j = 471680; j < 471690; j++) _solve(b, j);
for(j = 472520; j < 472530; j++) _solve(b, j);
for(j = 473360; j < 473370; j++) _solve(b, j);
for(j = 474200; j < 474210; j++) _solve(b, j);
for(j = 475040; j < 475050; j++) _solve(b, j);
for(j = 475880; j < 475890; j++) _solve(b, j);
for(j = 476720; j < 476730; j++) _solve(b, j);
for(j = 477560; j < 477570; j++) _solve(b, j);
for(j = 478400; j < 478410; j++) _solve(b, j);
for(j = 479240; j < 479250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 480080; j < 480090; j++) _solve(b, j);
for(j = 480920; j < 480930; j++) _solve(b, j);
for(j = 481760; j < 481770; j++) _solve(b, j);
for(j = 482600; j < 482610; j++) _solve(b, j);
for(j = 483440; j < 483450; j++) _solve(b, j);
for(j = 484280; j < 484290; j++) _solve(b, j);
for(j = 485120; j < 485130; j++) _solve(b, j);
for(j = 485960; j < 485970; j++) _solve(b, j);
for(j = 486800; j < 486810; j++) _solve(b, j);
for(j = 487640; j < 487650; j++) _solve(b, j);
for(j = 488480; j < 488490; j++) _solve(b, j);
for(j = 489320; j < 489330; j++) _solve(b, j);
for(j = 490160; j < 490170; j++) _solve(b, j);
for(j = 491000; j < 491010; j++) _solve(b, j);
for(j = 491840; j < 491850; j++) _solve(b, j);
for(j = 492680; j < 492690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 493520; j < 493530; j++) _solve(b, j);
for(j = 494360; j < 494370; j++) _solve(b, j);
for(j = 495200; j < 495210; j++) _solve(b, j);
for(j = 496040; j < 496050; j++) _solve(b, j);
for(j = 496880; j < 496890; j++) _solve(b, j);
for(j = 497720; j < 497730; j++) _solve(b, j);
for(j = 498560; j < 498570; j++) _solve(b, j);
for(j = 499400; j < 499410; j++) _solve(b, j);
for(j = 500240; j < 500250; j++) _solve(b, j);
for(j = 501080; j < 501090; j++) _solve(b, j);
for(j = 501920; j < 501930; j++) _solve(b, j);
for(j = 502760; j < 502770; j++) _solve(b, j);
for(j = 503600; j < 503610; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 467490; j < 467500; j++) _solve(b, j);
for(j = 468330; j < 468340; j++) _solve(b, j);
for(j = 469170; j < 469180; j++) _solve(b, j);
for(j = 470010; j < 470020; j++) _solve(b, j);
for(j = 470850; j < 470860; j++) _solve(b, j);
for(j = 471690; j < 471700; j++) _solve(b, j);
for(j = 472530; j < 472540; j++) _solve(b, j);
for(j = 473370; j < 473380; j++) _solve(b, j);
for(j = 474210; j < 474220; j++) _solve(b, j);
for(j = 475050; j < 475060; j++) _solve(b, j);
for(j = 475890; j < 475900; j++) _solve(b, j);
for(j = 476730; j < 476740; j++) _solve(b, j);
for(j = 477570; j < 477580; j++) _solve(b, j);
for(j = 478410; j < 478420; j++) _solve(b, j);
for(j = 479250; j < 479260; j++) _solve(b, j);
for(j = 480090; j < 480100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 480930; j < 480940; j++) _solve(b, j);
for(j = 481770; j < 481780; j++) _solve(b, j);
for(j = 482610; j < 482620; j++) _solve(b, j);
for(j = 483450; j < 483460; j++) _solve(b, j);
for(j = 484290; j < 484300; j++) _solve(b, j);
for(j = 485130; j < 485140; j++) _solve(b, j);
for(j = 485970; j < 485980; j++) _solve(b, j);
for(j = 486810; j < 486820; j++) _solve(b, j);
for(j = 487650; j < 487660; j++) _solve(b, j);
for(j = 488490; j < 488500; j++) _solve(b, j);
for(j = 489330; j < 489340; j++) _solve(b, j);
for(j = 490170; j < 490180; j++) _solve(b, j);
for(j = 491010; j < 491020; j++) _solve(b, j);
for(j = 491850; j < 491860; j++) _solve(b, j);
for(j = 492690; j < 492700; j++) _solve(b, j);
for(j = 493530; j < 493540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 494370; j < 494380; j++) _solve(b, j);
for(j = 495210; j < 495220; j++) _solve(b, j);
for(j = 496050; j < 496060; j++) _solve(b, j);
for(j = 496890; j < 496900; j++) _solve(b, j);
for(j = 497730; j < 497740; j++) _solve(b, j);
for(j = 498570; j < 498580; j++) _solve(b, j);
for(j = 499410; j < 499420; j++) _solve(b, j);
for(j = 500250; j < 500260; j++) _solve(b, j);
for(j = 501090; j < 501100; j++) _solve(b, j);
for(j = 501930; j < 501940; j++) _solve(b, j);
for(j = 502770; j < 502780; j++) _solve(b, j);
for(j = 503610; j < 503620; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 468340; j < 468350; j++) _solve(b, j);
for(j = 469180; j < 469190; j++) _solve(b, j);
for(j = 470020; j < 470030; j++) _solve(b, j);
for(j = 470860; j < 470870; j++) _solve(b, j);
for(j = 471700; j < 471710; j++) _solve(b, j);
for(j = 472540; j < 472550; j++) _solve(b, j);
for(j = 473380; j < 473390; j++) _solve(b, j);
for(j = 474220; j < 474230; j++) _solve(b, j);
for(j = 475060; j < 475070; j++) _solve(b, j);
for(j = 475900; j < 475910; j++) _solve(b, j);
for(j = 476740; j < 476750; j++) _solve(b, j);
for(j = 477580; j < 477590; j++) _solve(b, j);
for(j = 478420; j < 478430; j++) _solve(b, j);
for(j = 479260; j < 479270; j++) _solve(b, j);
for(j = 480100; j < 480110; j++) _solve(b, j);
for(j = 480940; j < 480950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 481780; j < 481790; j++) _solve(b, j);
for(j = 482620; j < 482630; j++) _solve(b, j);
for(j = 483460; j < 483470; j++) _solve(b, j);
for(j = 484300; j < 484310; j++) _solve(b, j);
for(j = 485140; j < 485150; j++) _solve(b, j);
for(j = 485980; j < 485990; j++) _solve(b, j);
for(j = 486820; j < 486830; j++) _solve(b, j);
for(j = 487660; j < 487670; j++) _solve(b, j);
for(j = 488500; j < 488510; j++) _solve(b, j);
for(j = 489340; j < 489350; j++) _solve(b, j);
for(j = 490180; j < 490190; j++) _solve(b, j);
for(j = 491020; j < 491030; j++) _solve(b, j);
for(j = 491860; j < 491870; j++) _solve(b, j);
for(j = 492700; j < 492710; j++) _solve(b, j);
for(j = 493540; j < 493550; j++) _solve(b, j);
for(j = 494380; j < 494390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 495220; j < 495230; j++) _solve(b, j);
for(j = 496060; j < 496070; j++) _solve(b, j);
for(j = 496900; j < 496910; j++) _solve(b, j);
for(j = 497740; j < 497750; j++) _solve(b, j);
for(j = 498580; j < 498590; j++) _solve(b, j);
for(j = 499420; j < 499430; j++) _solve(b, j);
for(j = 500260; j < 500270; j++) _solve(b, j);
for(j = 501100; j < 501110; j++) _solve(b, j);
for(j = 501940; j < 501950; j++) _solve(b, j);
for(j = 502780; j < 502790; j++) _solve(b, j);
for(j = 503620; j < 503625; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 469190; j < 469200; j++) _solve(b, j);
for(j = 470030; j < 470040; j++) _solve(b, j);
for(j = 470870; j < 470880; j++) _solve(b, j);
for(j = 471710; j < 471720; j++) _solve(b, j);
for(j = 472550; j < 472560; j++) _solve(b, j);
for(j = 473390; j < 473400; j++) _solve(b, j);
for(j = 474230; j < 474240; j++) _solve(b, j);
for(j = 475070; j < 475080; j++) _solve(b, j);
for(j = 475910; j < 475920; j++) _solve(b, j);
for(j = 476750; j < 476760; j++) _solve(b, j);
for(j = 477590; j < 477600; j++) _solve(b, j);
for(j = 478430; j < 478440; j++) _solve(b, j);
for(j = 479270; j < 479280; j++) _solve(b, j);
for(j = 480110; j < 480120; j++) _solve(b, j);
for(j = 480950; j < 480960; j++) _solve(b, j);
for(j = 481790; j < 481800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 482630; j < 482640; j++) _solve(b, j);
for(j = 483470; j < 483480; j++) _solve(b, j);
for(j = 484310; j < 484320; j++) _solve(b, j);
for(j = 485150; j < 485160; j++) _solve(b, j);
for(j = 485990; j < 486000; j++) _solve(b, j);
for(j = 486830; j < 486840; j++) _solve(b, j);
for(j = 487670; j < 487680; j++) _solve(b, j);
for(j = 488510; j < 488520; j++) _solve(b, j);
for(j = 489350; j < 489360; j++) _solve(b, j);
for(j = 490190; j < 490200; j++) _solve(b, j);
for(j = 491030; j < 491040; j++) _solve(b, j);
for(j = 491870; j < 491880; j++) _solve(b, j);
for(j = 492710; j < 492720; j++) _solve(b, j);
for(j = 493550; j < 493560; j++) _solve(b, j);
for(j = 494390; j < 494400; j++) _solve(b, j);
for(j = 495230; j < 495240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496070; j < 496080; j++) _solve(b, j);
for(j = 496910; j < 496920; j++) _solve(b, j);
for(j = 497750; j < 497760; j++) _solve(b, j);
for(j = 498590; j < 498600; j++) _solve(b, j);
for(j = 499430; j < 499440; j++) _solve(b, j);
for(j = 500270; j < 500280; j++) _solve(b, j);
for(j = 501110; j < 501120; j++) _solve(b, j);
for(j = 501950; j < 501960; j++) _solve(b, j);
for(j = 502790; j < 502800; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 470040; j < 470050; j++) _solve(b, j);
for(j = 470880; j < 470890; j++) _solve(b, j);
for(j = 471720; j < 471730; j++) _solve(b, j);
for(j = 472560; j < 472570; j++) _solve(b, j);
for(j = 473400; j < 473410; j++) _solve(b, j);
for(j = 474240; j < 474250; j++) _solve(b, j);
for(j = 475080; j < 475090; j++) _solve(b, j);
for(j = 475920; j < 475930; j++) _solve(b, j);
for(j = 476760; j < 476770; j++) _solve(b, j);
for(j = 477600; j < 477610; j++) _solve(b, j);
for(j = 478440; j < 478450; j++) _solve(b, j);
for(j = 479280; j < 479290; j++) _solve(b, j);
for(j = 480120; j < 480130; j++) _solve(b, j);
for(j = 480960; j < 480970; j++) _solve(b, j);
for(j = 481800; j < 481810; j++) _solve(b, j);
for(j = 482640; j < 482650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 483480; j < 483490; j++) _solve(b, j);
for(j = 484320; j < 484330; j++) _solve(b, j);
for(j = 485160; j < 485170; j++) _solve(b, j);
for(j = 486000; j < 486010; j++) _solve(b, j);
for(j = 486840; j < 486850; j++) _solve(b, j);
for(j = 487680; j < 487690; j++) _solve(b, j);
for(j = 488520; j < 488530; j++) _solve(b, j);
for(j = 489360; j < 489370; j++) _solve(b, j);
for(j = 490200; j < 490210; j++) _solve(b, j);
for(j = 491040; j < 491050; j++) _solve(b, j);
for(j = 491880; j < 491890; j++) _solve(b, j);
for(j = 492720; j < 492730; j++) _solve(b, j);
for(j = 493560; j < 493570; j++) _solve(b, j);
for(j = 494400; j < 494410; j++) _solve(b, j);
for(j = 495240; j < 495250; j++) _solve(b, j);
for(j = 496080; j < 496090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496920; j < 496930; j++) _solve(b, j);
for(j = 497760; j < 497770; j++) _solve(b, j);
for(j = 498600; j < 498610; j++) _solve(b, j);
for(j = 499440; j < 499450; j++) _solve(b, j);
for(j = 500280; j < 500290; j++) _solve(b, j);
for(j = 501120; j < 501130; j++) _solve(b, j);
for(j = 501960; j < 501970; j++) _solve(b, j);
for(j = 502800; j < 502810; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 470890; j < 470900; j++) _solve(b, j);
for(j = 471730; j < 471740; j++) _solve(b, j);
for(j = 472570; j < 472580; j++) _solve(b, j);
for(j = 473410; j < 473420; j++) _solve(b, j);
for(j = 474250; j < 474260; j++) _solve(b, j);
for(j = 475090; j < 475100; j++) _solve(b, j);
for(j = 475930; j < 475940; j++) _solve(b, j);
for(j = 476770; j < 476780; j++) _solve(b, j);
for(j = 477610; j < 477620; j++) _solve(b, j);
for(j = 478450; j < 478460; j++) _solve(b, j);
for(j = 479290; j < 479300; j++) _solve(b, j);
for(j = 480130; j < 480140; j++) _solve(b, j);
for(j = 480970; j < 480980; j++) _solve(b, j);
for(j = 481810; j < 481820; j++) _solve(b, j);
for(j = 482650; j < 482660; j++) _solve(b, j);
for(j = 483490; j < 483500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 484330; j < 484340; j++) _solve(b, j);
for(j = 485170; j < 485180; j++) _solve(b, j);
for(j = 486010; j < 486020; j++) _solve(b, j);
for(j = 486850; j < 486860; j++) _solve(b, j);
for(j = 487690; j < 487700; j++) _solve(b, j);
for(j = 488530; j < 488540; j++) _solve(b, j);
for(j = 489370; j < 489380; j++) _solve(b, j);
for(j = 490210; j < 490220; j++) _solve(b, j);
for(j = 491050; j < 491060; j++) _solve(b, j);
for(j = 491890; j < 491900; j++) _solve(b, j);
for(j = 492730; j < 492740; j++) _solve(b, j);
for(j = 493570; j < 493580; j++) _solve(b, j);
for(j = 494410; j < 494420; j++) _solve(b, j);
for(j = 495250; j < 495260; j++) _solve(b, j);
for(j = 496090; j < 496100; j++) _solve(b, j);
for(j = 496930; j < 496940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497770; j < 497780; j++) _solve(b, j);
for(j = 498610; j < 498620; j++) _solve(b, j);
for(j = 499450; j < 499460; j++) _solve(b, j);
for(j = 500290; j < 500300; j++) _solve(b, j);
for(j = 501130; j < 501140; j++) _solve(b, j);
for(j = 501970; j < 501980; j++) _solve(b, j);
for(j = 502810; j < 502820; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 471740; j < 471750; j++) _solve(b, j);
for(j = 472580; j < 472590; j++) _solve(b, j);
for(j = 473420; j < 473430; j++) _solve(b, j);
for(j = 474260; j < 474270; j++) _solve(b, j);
for(j = 475100; j < 475110; j++) _solve(b, j);
for(j = 475940; j < 475950; j++) _solve(b, j);
for(j = 476780; j < 476790; j++) _solve(b, j);
for(j = 477620; j < 477630; j++) _solve(b, j);
for(j = 478460; j < 478470; j++) _solve(b, j);
for(j = 479300; j < 479310; j++) _solve(b, j);
for(j = 480140; j < 480150; j++) _solve(b, j);
for(j = 480980; j < 480990; j++) _solve(b, j);
for(j = 481820; j < 481830; j++) _solve(b, j);
for(j = 482660; j < 482670; j++) _solve(b, j);
for(j = 483500; j < 483510; j++) _solve(b, j);
for(j = 484340; j < 484350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 485180; j < 485190; j++) _solve(b, j);
for(j = 486020; j < 486030; j++) _solve(b, j);
for(j = 486860; j < 486870; j++) _solve(b, j);
for(j = 487700; j < 487710; j++) _solve(b, j);
for(j = 488540; j < 488550; j++) _solve(b, j);
for(j = 489380; j < 489390; j++) _solve(b, j);
for(j = 490220; j < 490230; j++) _solve(b, j);
for(j = 491060; j < 491070; j++) _solve(b, j);
for(j = 491900; j < 491910; j++) _solve(b, j);
for(j = 492740; j < 492750; j++) _solve(b, j);
for(j = 493580; j < 493590; j++) _solve(b, j);
for(j = 494420; j < 494430; j++) _solve(b, j);
for(j = 495260; j < 495270; j++) _solve(b, j);
for(j = 496100; j < 496110; j++) _solve(b, j);
for(j = 496940; j < 496950; j++) _solve(b, j);
for(j = 497780; j < 497790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498620; j < 498630; j++) _solve(b, j);
for(j = 499460; j < 499470; j++) _solve(b, j);
for(j = 500300; j < 500310; j++) _solve(b, j);
for(j = 501140; j < 501150; j++) _solve(b, j);
for(j = 501980; j < 501990; j++) _solve(b, j);
for(j = 502820; j < 502830; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 472590; j < 472600; j++) _solve(b, j);
for(j = 473430; j < 473440; j++) _solve(b, j);
for(j = 474270; j < 474280; j++) _solve(b, j);
for(j = 475110; j < 475120; j++) _solve(b, j);
for(j = 475950; j < 475960; j++) _solve(b, j);
for(j = 476790; j < 476800; j++) _solve(b, j);
for(j = 477630; j < 477640; j++) _solve(b, j);
for(j = 478470; j < 478480; j++) _solve(b, j);
for(j = 479310; j < 479320; j++) _solve(b, j);
for(j = 480150; j < 480160; j++) _solve(b, j);
for(j = 480990; j < 481000; j++) _solve(b, j);
for(j = 481830; j < 481840; j++) _solve(b, j);
for(j = 482670; j < 482680; j++) _solve(b, j);
for(j = 483510; j < 483520; j++) _solve(b, j);
for(j = 484350; j < 484360; j++) _solve(b, j);
for(j = 485190; j < 485200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 486030; j < 486040; j++) _solve(b, j);
for(j = 486870; j < 486880; j++) _solve(b, j);
for(j = 487710; j < 487720; j++) _solve(b, j);
for(j = 488550; j < 488560; j++) _solve(b, j);
for(j = 489390; j < 489400; j++) _solve(b, j);
for(j = 490230; j < 490240; j++) _solve(b, j);
for(j = 491070; j < 491080; j++) _solve(b, j);
for(j = 491910; j < 491920; j++) _solve(b, j);
for(j = 492750; j < 492760; j++) _solve(b, j);
for(j = 493590; j < 493600; j++) _solve(b, j);
for(j = 494430; j < 494440; j++) _solve(b, j);
for(j = 495270; j < 495280; j++) _solve(b, j);
for(j = 496110; j < 496120; j++) _solve(b, j);
for(j = 496950; j < 496960; j++) _solve(b, j);
for(j = 497790; j < 497800; j++) _solve(b, j);
for(j = 498630; j < 498640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499470; j < 499480; j++) _solve(b, j);
for(j = 500310; j < 500320; j++) _solve(b, j);
for(j = 501150; j < 501160; j++) _solve(b, j);
for(j = 501990; j < 502000; j++) _solve(b, j);
for(j = 502830; j < 502840; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 473440; j < 473450; j++) _solve(b, j);
for(j = 474280; j < 474290; j++) _solve(b, j);
for(j = 475120; j < 475130; j++) _solve(b, j);
for(j = 475960; j < 475970; j++) _solve(b, j);
for(j = 476800; j < 476810; j++) _solve(b, j);
for(j = 477640; j < 477650; j++) _solve(b, j);
for(j = 478480; j < 478490; j++) _solve(b, j);
for(j = 479320; j < 479330; j++) _solve(b, j);
for(j = 480160; j < 480170; j++) _solve(b, j);
for(j = 481000; j < 481010; j++) _solve(b, j);
for(j = 481840; j < 481850; j++) _solve(b, j);
for(j = 482680; j < 482690; j++) _solve(b, j);
for(j = 483520; j < 483530; j++) _solve(b, j);
for(j = 484360; j < 484370; j++) _solve(b, j);
for(j = 485200; j < 485210; j++) _solve(b, j);
for(j = 486040; j < 486050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 486880; j < 486890; j++) _solve(b, j);
for(j = 487720; j < 487730; j++) _solve(b, j);
for(j = 488560; j < 488570; j++) _solve(b, j);
for(j = 489400; j < 489410; j++) _solve(b, j);
for(j = 490240; j < 490250; j++) _solve(b, j);
for(j = 491080; j < 491090; j++) _solve(b, j);
for(j = 491920; j < 491930; j++) _solve(b, j);
for(j = 492760; j < 492770; j++) _solve(b, j);
for(j = 493600; j < 493610; j++) _solve(b, j);
for(j = 494440; j < 494450; j++) _solve(b, j);
for(j = 495280; j < 495290; j++) _solve(b, j);
for(j = 496120; j < 496130; j++) _solve(b, j);
for(j = 496960; j < 496970; j++) _solve(b, j);
for(j = 497800; j < 497810; j++) _solve(b, j);
for(j = 498640; j < 498650; j++) _solve(b, j);
for(j = 499480; j < 499490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500320; j < 500330; j++) _solve(b, j);
for(j = 501160; j < 501170; j++) _solve(b, j);
for(j = 502000; j < 502010; j++) _solve(b, j);
for(j = 502840; j < 502850; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 474290; j < 474300; j++) _solve(b, j);
for(j = 475130; j < 475140; j++) _solve(b, j);
for(j = 475970; j < 475980; j++) _solve(b, j);
for(j = 476810; j < 476820; j++) _solve(b, j);
for(j = 477650; j < 477660; j++) _solve(b, j);
for(j = 478490; j < 478500; j++) _solve(b, j);
for(j = 479330; j < 479340; j++) _solve(b, j);
for(j = 480170; j < 480180; j++) _solve(b, j);
for(j = 481010; j < 481020; j++) _solve(b, j);
for(j = 481850; j < 481860; j++) _solve(b, j);
for(j = 482690; j < 482700; j++) _solve(b, j);
for(j = 483530; j < 483540; j++) _solve(b, j);
for(j = 484370; j < 484380; j++) _solve(b, j);
for(j = 485210; j < 485220; j++) _solve(b, j);
for(j = 486050; j < 486060; j++) _solve(b, j);
for(j = 486890; j < 486900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 487730; j < 487740; j++) _solve(b, j);
for(j = 488570; j < 488580; j++) _solve(b, j);
for(j = 489410; j < 489420; j++) _solve(b, j);
for(j = 490250; j < 490260; j++) _solve(b, j);
for(j = 491090; j < 491100; j++) _solve(b, j);
for(j = 491930; j < 491940; j++) _solve(b, j);
for(j = 492770; j < 492780; j++) _solve(b, j);
for(j = 493610; j < 493620; j++) _solve(b, j);
for(j = 494450; j < 494460; j++) _solve(b, j);
for(j = 495290; j < 495300; j++) _solve(b, j);
for(j = 496130; j < 496140; j++) _solve(b, j);
for(j = 496970; j < 496980; j++) _solve(b, j);
for(j = 497810; j < 497820; j++) _solve(b, j);
for(j = 498650; j < 498660; j++) _solve(b, j);
for(j = 499490; j < 499500; j++) _solve(b, j);
for(j = 500330; j < 500340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501170; j < 501180; j++) _solve(b, j);
for(j = 502010; j < 502020; j++) _solve(b, j);
for(j = 502850; j < 502860; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 475140; j < 475150; j++) _solve(b, j);
for(j = 475980; j < 475990; j++) _solve(b, j);
for(j = 476820; j < 476830; j++) _solve(b, j);
for(j = 477660; j < 477670; j++) _solve(b, j);
for(j = 478500; j < 478510; j++) _solve(b, j);
for(j = 479340; j < 479350; j++) _solve(b, j);
for(j = 480180; j < 480190; j++) _solve(b, j);
for(j = 481020; j < 481030; j++) _solve(b, j);
for(j = 481860; j < 481870; j++) _solve(b, j);
for(j = 482700; j < 482710; j++) _solve(b, j);
for(j = 483540; j < 483550; j++) _solve(b, j);
for(j = 484380; j < 484390; j++) _solve(b, j);
for(j = 485220; j < 485230; j++) _solve(b, j);
for(j = 486060; j < 486070; j++) _solve(b, j);
for(j = 486900; j < 486910; j++) _solve(b, j);
for(j = 487740; j < 487750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 488580; j < 488590; j++) _solve(b, j);
for(j = 489420; j < 489430; j++) _solve(b, j);
for(j = 490260; j < 490270; j++) _solve(b, j);
for(j = 491100; j < 491110; j++) _solve(b, j);
for(j = 491940; j < 491950; j++) _solve(b, j);
for(j = 492780; j < 492790; j++) _solve(b, j);
for(j = 493620; j < 493630; j++) _solve(b, j);
for(j = 494460; j < 494470; j++) _solve(b, j);
for(j = 495300; j < 495310; j++) _solve(b, j);
for(j = 496140; j < 496150; j++) _solve(b, j);
for(j = 496980; j < 496990; j++) _solve(b, j);
for(j = 497820; j < 497830; j++) _solve(b, j);
for(j = 498660; j < 498670; j++) _solve(b, j);
for(j = 499500; j < 499510; j++) _solve(b, j);
for(j = 500340; j < 500350; j++) _solve(b, j);
for(j = 501180; j < 501190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502020; j < 502030; j++) _solve(b, j);
for(j = 502860; j < 502870; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 475990; j < 476000; j++) _solve(b, j);
for(j = 476830; j < 476840; j++) _solve(b, j);
for(j = 477670; j < 477680; j++) _solve(b, j);
for(j = 478510; j < 478520; j++) _solve(b, j);
for(j = 479350; j < 479360; j++) _solve(b, j);
for(j = 480190; j < 480200; j++) _solve(b, j);
for(j = 481030; j < 481040; j++) _solve(b, j);
for(j = 481870; j < 481880; j++) _solve(b, j);
for(j = 482710; j < 482720; j++) _solve(b, j);
for(j = 483550; j < 483560; j++) _solve(b, j);
for(j = 484390; j < 484400; j++) _solve(b, j);
for(j = 485230; j < 485240; j++) _solve(b, j);
for(j = 486070; j < 486080; j++) _solve(b, j);
for(j = 486910; j < 486920; j++) _solve(b, j);
for(j = 487750; j < 487760; j++) _solve(b, j);
for(j = 488590; j < 488600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 489430; j < 489440; j++) _solve(b, j);
for(j = 490270; j < 490280; j++) _solve(b, j);
for(j = 491110; j < 491120; j++) _solve(b, j);
for(j = 491950; j < 491960; j++) _solve(b, j);
for(j = 492790; j < 492800; j++) _solve(b, j);
for(j = 493630; j < 493640; j++) _solve(b, j);
for(j = 494470; j < 494480; j++) _solve(b, j);
for(j = 495310; j < 495320; j++) _solve(b, j);
for(j = 496150; j < 496160; j++) _solve(b, j);
for(j = 496990; j < 497000; j++) _solve(b, j);
for(j = 497830; j < 497840; j++) _solve(b, j);
for(j = 498670; j < 498680; j++) _solve(b, j);
for(j = 499510; j < 499520; j++) _solve(b, j);
for(j = 500350; j < 500360; j++) _solve(b, j);
for(j = 501190; j < 501200; j++) _solve(b, j);
for(j = 502030; j < 502040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502870; j < 502880; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 476840; j < 476850; j++) _solve(b, j);
for(j = 477680; j < 477690; j++) _solve(b, j);
for(j = 478520; j < 478530; j++) _solve(b, j);
for(j = 479360; j < 479370; j++) _solve(b, j);
for(j = 480200; j < 480210; j++) _solve(b, j);
for(j = 481040; j < 481050; j++) _solve(b, j);
for(j = 481880; j < 481890; j++) _solve(b, j);
for(j = 482720; j < 482730; j++) _solve(b, j);
for(j = 483560; j < 483570; j++) _solve(b, j);
for(j = 484400; j < 484410; j++) _solve(b, j);
for(j = 485240; j < 485250; j++) _solve(b, j);
for(j = 486080; j < 486090; j++) _solve(b, j);
for(j = 486920; j < 486930; j++) _solve(b, j);
for(j = 487760; j < 487770; j++) _solve(b, j);
for(j = 488600; j < 488610; j++) _solve(b, j);
for(j = 489440; j < 489450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 490280; j < 490290; j++) _solve(b, j);
for(j = 491120; j < 491130; j++) _solve(b, j);
for(j = 491960; j < 491970; j++) _solve(b, j);
for(j = 492800; j < 492810; j++) _solve(b, j);
for(j = 493640; j < 493650; j++) _solve(b, j);
for(j = 494480; j < 494490; j++) _solve(b, j);
for(j = 495320; j < 495330; j++) _solve(b, j);
for(j = 496160; j < 496170; j++) _solve(b, j);
for(j = 497000; j < 497010; j++) _solve(b, j);
for(j = 497840; j < 497850; j++) _solve(b, j);
for(j = 498680; j < 498690; j++) _solve(b, j);
for(j = 499520; j < 499530; j++) _solve(b, j);
for(j = 500360; j < 500370; j++) _solve(b, j);
for(j = 501200; j < 501210; j++) _solve(b, j);
for(j = 502040; j < 502050; j++) _solve(b, j);
for(j = 502880; j < 502890; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 477690; j < 477700; j++) _solve(b, j);
for(j = 478530; j < 478540; j++) _solve(b, j);
for(j = 479370; j < 479380; j++) _solve(b, j);
for(j = 480210; j < 480220; j++) _solve(b, j);
for(j = 481050; j < 481060; j++) _solve(b, j);
for(j = 481890; j < 481900; j++) _solve(b, j);
for(j = 482730; j < 482740; j++) _solve(b, j);
for(j = 483570; j < 483580; j++) _solve(b, j);
for(j = 484410; j < 484420; j++) _solve(b, j);
for(j = 485250; j < 485260; j++) _solve(b, j);
for(j = 486090; j < 486100; j++) _solve(b, j);
for(j = 486930; j < 486940; j++) _solve(b, j);
for(j = 487770; j < 487780; j++) _solve(b, j);
for(j = 488610; j < 488620; j++) _solve(b, j);
for(j = 489450; j < 489460; j++) _solve(b, j);
for(j = 490290; j < 490300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 491130; j < 491140; j++) _solve(b, j);
for(j = 491970; j < 491980; j++) _solve(b, j);
for(j = 492810; j < 492820; j++) _solve(b, j);
for(j = 493650; j < 493660; j++) _solve(b, j);
for(j = 494490; j < 494500; j++) _solve(b, j);
for(j = 495330; j < 495340; j++) _solve(b, j);
for(j = 496170; j < 496180; j++) _solve(b, j);
for(j = 497010; j < 497020; j++) _solve(b, j);
for(j = 497850; j < 497860; j++) _solve(b, j);
for(j = 498690; j < 498700; j++) _solve(b, j);
for(j = 499530; j < 499540; j++) _solve(b, j);
for(j = 500370; j < 500380; j++) _solve(b, j);
for(j = 501210; j < 501220; j++) _solve(b, j);
for(j = 502050; j < 502060; j++) _solve(b, j);
for(j = 502890; j < 502900; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 478540; j < 478550; j++) _solve(b, j);
for(j = 479380; j < 479390; j++) _solve(b, j);
for(j = 480220; j < 480230; j++) _solve(b, j);
for(j = 481060; j < 481070; j++) _solve(b, j);
for(j = 481900; j < 481910; j++) _solve(b, j);
for(j = 482740; j < 482750; j++) _solve(b, j);
for(j = 483580; j < 483590; j++) _solve(b, j);
for(j = 484420; j < 484430; j++) _solve(b, j);
for(j = 485260; j < 485270; j++) _solve(b, j);
for(j = 486100; j < 486110; j++) _solve(b, j);
for(j = 486940; j < 486950; j++) _solve(b, j);
for(j = 487780; j < 487790; j++) _solve(b, j);
for(j = 488620; j < 488630; j++) _solve(b, j);
for(j = 489460; j < 489470; j++) _solve(b, j);
for(j = 490300; j < 490310; j++) _solve(b, j);
for(j = 491140; j < 491150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 491980; j < 491990; j++) _solve(b, j);
for(j = 492820; j < 492830; j++) _solve(b, j);
for(j = 493660; j < 493670; j++) _solve(b, j);
for(j = 494500; j < 494510; j++) _solve(b, j);
for(j = 495340; j < 495350; j++) _solve(b, j);
for(j = 496180; j < 496190; j++) _solve(b, j);
for(j = 497020; j < 497030; j++) _solve(b, j);
for(j = 497860; j < 497870; j++) _solve(b, j);
for(j = 498700; j < 498710; j++) _solve(b, j);
for(j = 499540; j < 499550; j++) _solve(b, j);
for(j = 500380; j < 500390; j++) _solve(b, j);
for(j = 501220; j < 501230; j++) _solve(b, j);
for(j = 502060; j < 502070; j++) _solve(b, j);
for(j = 502900; j < 502910; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 479390; j < 479400; j++) _solve(b, j);
for(j = 480230; j < 480240; j++) _solve(b, j);
for(j = 481070; j < 481080; j++) _solve(b, j);
for(j = 481910; j < 481920; j++) _solve(b, j);
for(j = 482750; j < 482760; j++) _solve(b, j);
for(j = 483590; j < 483600; j++) _solve(b, j);
for(j = 484430; j < 484440; j++) _solve(b, j);
for(j = 485270; j < 485280; j++) _solve(b, j);
for(j = 486110; j < 486120; j++) _solve(b, j);
for(j = 486950; j < 486960; j++) _solve(b, j);
for(j = 487790; j < 487800; j++) _solve(b, j);
for(j = 488630; j < 488640; j++) _solve(b, j);
for(j = 489470; j < 489480; j++) _solve(b, j);
for(j = 490310; j < 490320; j++) _solve(b, j);
for(j = 491150; j < 491160; j++) _solve(b, j);
for(j = 491990; j < 492000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 492830; j < 492840; j++) _solve(b, j);
for(j = 493670; j < 493680; j++) _solve(b, j);
for(j = 494510; j < 494520; j++) _solve(b, j);
for(j = 495350; j < 495360; j++) _solve(b, j);
for(j = 496190; j < 496200; j++) _solve(b, j);
for(j = 497030; j < 497040; j++) _solve(b, j);
for(j = 497870; j < 497880; j++) _solve(b, j);
for(j = 498710; j < 498720; j++) _solve(b, j);
for(j = 499550; j < 499560; j++) _solve(b, j);
for(j = 500390; j < 500400; j++) _solve(b, j);
for(j = 501230; j < 501240; j++) _solve(b, j);
for(j = 502070; j < 502080; j++) _solve(b, j);
for(j = 502910; j < 502920; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 480240; j < 480250; j++) _solve(b, j);
for(j = 481080; j < 481090; j++) _solve(b, j);
for(j = 481920; j < 481930; j++) _solve(b, j);
for(j = 482760; j < 482770; j++) _solve(b, j);
for(j = 483600; j < 483610; j++) _solve(b, j);
for(j = 484440; j < 484450; j++) _solve(b, j);
for(j = 485280; j < 485290; j++) _solve(b, j);
for(j = 486120; j < 486130; j++) _solve(b, j);
for(j = 486960; j < 486970; j++) _solve(b, j);
for(j = 487800; j < 487810; j++) _solve(b, j);
for(j = 488640; j < 488650; j++) _solve(b, j);
for(j = 489480; j < 489490; j++) _solve(b, j);
for(j = 490320; j < 490330; j++) _solve(b, j);
for(j = 491160; j < 491170; j++) _solve(b, j);
for(j = 492000; j < 492010; j++) _solve(b, j);
for(j = 492840; j < 492850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 493680; j < 493690; j++) _solve(b, j);
for(j = 494520; j < 494530; j++) _solve(b, j);
for(j = 495360; j < 495370; j++) _solve(b, j);
for(j = 496200; j < 496210; j++) _solve(b, j);
for(j = 497040; j < 497050; j++) _solve(b, j);
for(j = 497880; j < 497890; j++) _solve(b, j);
for(j = 498720; j < 498730; j++) _solve(b, j);
for(j = 499560; j < 499570; j++) _solve(b, j);
for(j = 500400; j < 500410; j++) _solve(b, j);
for(j = 501240; j < 501250; j++) _solve(b, j);
for(j = 502080; j < 502090; j++) _solve(b, j);
for(j = 502920; j < 502930; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 481090; j < 481100; j++) _solve(b, j);
for(j = 481930; j < 481940; j++) _solve(b, j);
for(j = 482770; j < 482780; j++) _solve(b, j);
for(j = 483610; j < 483620; j++) _solve(b, j);
for(j = 484450; j < 484460; j++) _solve(b, j);
for(j = 485290; j < 485300; j++) _solve(b, j);
for(j = 486130; j < 486140; j++) _solve(b, j);
for(j = 486970; j < 486980; j++) _solve(b, j);
for(j = 487810; j < 487820; j++) _solve(b, j);
for(j = 488650; j < 488660; j++) _solve(b, j);
for(j = 489490; j < 489500; j++) _solve(b, j);
for(j = 490330; j < 490340; j++) _solve(b, j);
for(j = 491170; j < 491180; j++) _solve(b, j);
for(j = 492010; j < 492020; j++) _solve(b, j);
for(j = 492850; j < 492860; j++) _solve(b, j);
for(j = 493690; j < 493700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 494530; j < 494540; j++) _solve(b, j);
for(j = 495370; j < 495380; j++) _solve(b, j);
for(j = 496210; j < 496220; j++) _solve(b, j);
for(j = 497050; j < 497060; j++) _solve(b, j);
for(j = 497890; j < 497900; j++) _solve(b, j);
for(j = 498730; j < 498740; j++) _solve(b, j);
for(j = 499570; j < 499580; j++) _solve(b, j);
for(j = 500410; j < 500420; j++) _solve(b, j);
for(j = 501250; j < 501260; j++) _solve(b, j);
for(j = 502090; j < 502100; j++) _solve(b, j);
for(j = 502930; j < 502940; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 481940; j < 481950; j++) _solve(b, j);
for(j = 482780; j < 482790; j++) _solve(b, j);
for(j = 483620; j < 483630; j++) _solve(b, j);
for(j = 484460; j < 484470; j++) _solve(b, j);
for(j = 485300; j < 485310; j++) _solve(b, j);
for(j = 486140; j < 486150; j++) _solve(b, j);
for(j = 486980; j < 486990; j++) _solve(b, j);
for(j = 487820; j < 487830; j++) _solve(b, j);
for(j = 488660; j < 488670; j++) _solve(b, j);
for(j = 489500; j < 489510; j++) _solve(b, j);
for(j = 490340; j < 490350; j++) _solve(b, j);
for(j = 491180; j < 491190; j++) _solve(b, j);
for(j = 492020; j < 492030; j++) _solve(b, j);
for(j = 492860; j < 492870; j++) _solve(b, j);
for(j = 493700; j < 493710; j++) _solve(b, j);
for(j = 494540; j < 494550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 495380; j < 495390; j++) _solve(b, j);
for(j = 496220; j < 496230; j++) _solve(b, j);
for(j = 497060; j < 497070; j++) _solve(b, j);
for(j = 497900; j < 497910; j++) _solve(b, j);
for(j = 498740; j < 498750; j++) _solve(b, j);
for(j = 499580; j < 499590; j++) _solve(b, j);
for(j = 500420; j < 500430; j++) _solve(b, j);
for(j = 501260; j < 501270; j++) _solve(b, j);
for(j = 502100; j < 502110; j++) _solve(b, j);
for(j = 502940; j < 502950; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 482790; j < 482800; j++) _solve(b, j);
for(j = 483630; j < 483640; j++) _solve(b, j);
for(j = 484470; j < 484480; j++) _solve(b, j);
for(j = 485310; j < 485320; j++) _solve(b, j);
for(j = 486150; j < 486160; j++) _solve(b, j);
for(j = 486990; j < 487000; j++) _solve(b, j);
for(j = 487830; j < 487840; j++) _solve(b, j);
for(j = 488670; j < 488680; j++) _solve(b, j);
for(j = 489510; j < 489520; j++) _solve(b, j);
for(j = 490350; j < 490360; j++) _solve(b, j);
for(j = 491190; j < 491200; j++) _solve(b, j);
for(j = 492030; j < 492040; j++) _solve(b, j);
for(j = 492870; j < 492880; j++) _solve(b, j);
for(j = 493710; j < 493720; j++) _solve(b, j);
for(j = 494550; j < 494560; j++) _solve(b, j);
for(j = 495390; j < 495400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496230; j < 496240; j++) _solve(b, j);
for(j = 497070; j < 497080; j++) _solve(b, j);
for(j = 497910; j < 497920; j++) _solve(b, j);
for(j = 498750; j < 498760; j++) _solve(b, j);
for(j = 499590; j < 499600; j++) _solve(b, j);
for(j = 500430; j < 500440; j++) _solve(b, j);
for(j = 501270; j < 501280; j++) _solve(b, j);
for(j = 502110; j < 502120; j++) _solve(b, j);
for(j = 502950; j < 502960; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 483640; j < 483650; j++) _solve(b, j);
for(j = 484480; j < 484490; j++) _solve(b, j);
for(j = 485320; j < 485330; j++) _solve(b, j);
for(j = 486160; j < 486170; j++) _solve(b, j);
for(j = 487000; j < 487010; j++) _solve(b, j);
for(j = 487840; j < 487850; j++) _solve(b, j);
for(j = 488680; j < 488690; j++) _solve(b, j);
for(j = 489520; j < 489530; j++) _solve(b, j);
for(j = 490360; j < 490370; j++) _solve(b, j);
for(j = 491200; j < 491210; j++) _solve(b, j);
for(j = 492040; j < 492050; j++) _solve(b, j);
for(j = 492880; j < 492890; j++) _solve(b, j);
for(j = 493720; j < 493730; j++) _solve(b, j);
for(j = 494560; j < 494570; j++) _solve(b, j);
for(j = 495400; j < 495410; j++) _solve(b, j);
for(j = 496240; j < 496250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497080; j < 497090; j++) _solve(b, j);
for(j = 497920; j < 497930; j++) _solve(b, j);
for(j = 498760; j < 498770; j++) _solve(b, j);
for(j = 499600; j < 499610; j++) _solve(b, j);
for(j = 500440; j < 500450; j++) _solve(b, j);
for(j = 501280; j < 501290; j++) _solve(b, j);
for(j = 502120; j < 502130; j++) _solve(b, j);
for(j = 502960; j < 502970; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 484490; j < 484500; j++) _solve(b, j);
for(j = 485330; j < 485340; j++) _solve(b, j);
for(j = 486170; j < 486180; j++) _solve(b, j);
for(j = 487010; j < 487020; j++) _solve(b, j);
for(j = 487850; j < 487860; j++) _solve(b, j);
for(j = 488690; j < 488700; j++) _solve(b, j);
for(j = 489530; j < 489540; j++) _solve(b, j);
for(j = 490370; j < 490380; j++) _solve(b, j);
for(j = 491210; j < 491220; j++) _solve(b, j);
for(j = 492050; j < 492060; j++) _solve(b, j);
for(j = 492890; j < 492900; j++) _solve(b, j);
for(j = 493730; j < 493740; j++) _solve(b, j);
for(j = 494570; j < 494580; j++) _solve(b, j);
for(j = 495410; j < 495420; j++) _solve(b, j);
for(j = 496250; j < 496260; j++) _solve(b, j);
for(j = 497090; j < 497100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497930; j < 497940; j++) _solve(b, j);
for(j = 498770; j < 498780; j++) _solve(b, j);
for(j = 499610; j < 499620; j++) _solve(b, j);
for(j = 500450; j < 500460; j++) _solve(b, j);
for(j = 501290; j < 501300; j++) _solve(b, j);
for(j = 502130; j < 502140; j++) _solve(b, j);
for(j = 502970; j < 502980; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 485340; j < 485350; j++) _solve(b, j);
for(j = 486180; j < 486190; j++) _solve(b, j);
for(j = 487020; j < 487030; j++) _solve(b, j);
for(j = 487860; j < 487870; j++) _solve(b, j);
for(j = 488700; j < 488710; j++) _solve(b, j);
for(j = 489540; j < 489550; j++) _solve(b, j);
for(j = 490380; j < 490390; j++) _solve(b, j);
for(j = 491220; j < 491230; j++) _solve(b, j);
for(j = 492060; j < 492070; j++) _solve(b, j);
for(j = 492900; j < 492910; j++) _solve(b, j);
for(j = 493740; j < 493750; j++) _solve(b, j);
for(j = 494580; j < 494590; j++) _solve(b, j);
for(j = 495420; j < 495430; j++) _solve(b, j);
for(j = 496260; j < 496270; j++) _solve(b, j);
for(j = 497100; j < 497110; j++) _solve(b, j);
for(j = 497940; j < 497950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498780; j < 498790; j++) _solve(b, j);
for(j = 499620; j < 499630; j++) _solve(b, j);
for(j = 500460; j < 500470; j++) _solve(b, j);
for(j = 501300; j < 501310; j++) _solve(b, j);
for(j = 502140; j < 502150; j++) _solve(b, j);
for(j = 502980; j < 502990; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 486190; j < 486200; j++) _solve(b, j);
for(j = 487030; j < 487040; j++) _solve(b, j);
for(j = 487870; j < 487880; j++) _solve(b, j);
for(j = 488710; j < 488720; j++) _solve(b, j);
for(j = 489550; j < 489560; j++) _solve(b, j);
for(j = 490390; j < 490400; j++) _solve(b, j);
for(j = 491230; j < 491240; j++) _solve(b, j);
for(j = 492070; j < 492080; j++) _solve(b, j);
for(j = 492910; j < 492920; j++) _solve(b, j);
for(j = 493750; j < 493760; j++) _solve(b, j);
for(j = 494590; j < 494600; j++) _solve(b, j);
for(j = 495430; j < 495440; j++) _solve(b, j);
for(j = 496270; j < 496280; j++) _solve(b, j);
for(j = 497110; j < 497120; j++) _solve(b, j);
for(j = 497950; j < 497960; j++) _solve(b, j);
for(j = 498790; j < 498800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499630; j < 499640; j++) _solve(b, j);
for(j = 500470; j < 500480; j++) _solve(b, j);
for(j = 501310; j < 501320; j++) _solve(b, j);
for(j = 502150; j < 502160; j++) _solve(b, j);
for(j = 502990; j < 503000; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 487040; j < 487050; j++) _solve(b, j);
for(j = 487880; j < 487890; j++) _solve(b, j);
for(j = 488720; j < 488730; j++) _solve(b, j);
for(j = 489560; j < 489570; j++) _solve(b, j);
for(j = 490400; j < 490410; j++) _solve(b, j);
for(j = 491240; j < 491250; j++) _solve(b, j);
for(j = 492080; j < 492090; j++) _solve(b, j);
for(j = 492920; j < 492930; j++) _solve(b, j);
for(j = 493760; j < 493770; j++) _solve(b, j);
for(j = 494600; j < 494610; j++) _solve(b, j);
for(j = 495440; j < 495450; j++) _solve(b, j);
for(j = 496280; j < 496290; j++) _solve(b, j);
for(j = 497120; j < 497130; j++) _solve(b, j);
for(j = 497960; j < 497970; j++) _solve(b, j);
for(j = 498800; j < 498810; j++) _solve(b, j);
for(j = 499640; j < 499650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500480; j < 500490; j++) _solve(b, j);
for(j = 501320; j < 501330; j++) _solve(b, j);
for(j = 502160; j < 502170; j++) _solve(b, j);
for(j = 503000; j < 503010; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 487890; j < 487900; j++) _solve(b, j);
for(j = 488730; j < 488740; j++) _solve(b, j);
for(j = 489570; j < 489580; j++) _solve(b, j);
for(j = 490410; j < 490420; j++) _solve(b, j);
for(j = 491250; j < 491260; j++) _solve(b, j);
for(j = 492090; j < 492100; j++) _solve(b, j);
for(j = 492930; j < 492940; j++) _solve(b, j);
for(j = 493770; j < 493780; j++) _solve(b, j);
for(j = 494610; j < 494620; j++) _solve(b, j);
for(j = 495450; j < 495460; j++) _solve(b, j);
for(j = 496290; j < 496300; j++) _solve(b, j);
for(j = 497130; j < 497140; j++) _solve(b, j);
for(j = 497970; j < 497980; j++) _solve(b, j);
for(j = 498810; j < 498820; j++) _solve(b, j);
for(j = 499650; j < 499660; j++) _solve(b, j);
for(j = 500490; j < 500500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501330; j < 501340; j++) _solve(b, j);
for(j = 502170; j < 502180; j++) _solve(b, j);
for(j = 503010; j < 503020; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 488740; j < 488750; j++) _solve(b, j);
for(j = 489580; j < 489590; j++) _solve(b, j);
for(j = 490420; j < 490430; j++) _solve(b, j);
for(j = 491260; j < 491270; j++) _solve(b, j);
for(j = 492100; j < 492110; j++) _solve(b, j);
for(j = 492940; j < 492950; j++) _solve(b, j);
for(j = 493780; j < 493790; j++) _solve(b, j);
for(j = 494620; j < 494630; j++) _solve(b, j);
for(j = 495460; j < 495470; j++) _solve(b, j);
for(j = 496300; j < 496310; j++) _solve(b, j);
for(j = 497140; j < 497150; j++) _solve(b, j);
for(j = 497980; j < 497990; j++) _solve(b, j);
for(j = 498820; j < 498830; j++) _solve(b, j);
for(j = 499660; j < 499670; j++) _solve(b, j);
for(j = 500500; j < 500510; j++) _solve(b, j);
for(j = 501340; j < 501350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502180; j < 502190; j++) _solve(b, j);
for(j = 503020; j < 503030; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 489590; j < 489600; j++) _solve(b, j);
for(j = 490430; j < 490440; j++) _solve(b, j);
for(j = 491270; j < 491280; j++) _solve(b, j);
for(j = 492110; j < 492120; j++) _solve(b, j);
for(j = 492950; j < 492960; j++) _solve(b, j);
for(j = 493790; j < 493800; j++) _solve(b, j);
for(j = 494630; j < 494640; j++) _solve(b, j);
for(j = 495470; j < 495480; j++) _solve(b, j);
for(j = 496310; j < 496320; j++) _solve(b, j);
for(j = 497150; j < 497160; j++) _solve(b, j);
for(j = 497990; j < 498000; j++) _solve(b, j);
for(j = 498830; j < 498840; j++) _solve(b, j);
for(j = 499670; j < 499680; j++) _solve(b, j);
for(j = 500510; j < 500520; j++) _solve(b, j);
for(j = 501350; j < 501360; j++) _solve(b, j);
for(j = 502190; j < 502200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503030; j < 503040; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 490440; j < 490450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 491280; j < 491290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 492120; j < 492130; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 492960; j < 492970; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 493800; j < 493810; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 494640; j < 494650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 495480; j < 495490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496320; j < 496330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497160; j < 497170; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498000; j < 498010; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498840; j < 498850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499680; j < 499690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500520; j < 500530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501360; j < 501370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502200; j < 502210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503040; j < 503050; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 491290; j < 491300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 492130; j < 492140; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 492970; j < 492980; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 493810; j < 493820; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 494650; j < 494660; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 495490; j < 495500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496330; j < 496340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497170; j < 497180; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498010; j < 498020; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498850; j < 498860; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499690; j < 499700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500530; j < 500540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501370; j < 501380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502210; j < 502220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503050; j < 503060; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 492140; j < 492150; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 492980; j < 492990; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 493820; j < 493830; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 494660; j < 494670; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 495500; j < 495510; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496340; j < 496350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497180; j < 497190; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498020; j < 498030; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498860; j < 498870; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499700; j < 499710; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500540; j < 500550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501380; j < 501390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502220; j < 502230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503060; j < 503070; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 492990; j < 493000; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 493830; j < 493840; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 494670; j < 494680; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 495510; j < 495520; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496350; j < 496360; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497190; j < 497200; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498030; j < 498040; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498870; j < 498880; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499710; j < 499720; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500550; j < 500560; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501390; j < 501400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502230; j < 502240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503070; j < 503080; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 493840; j < 493850; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 494680; j < 494690; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 495520; j < 495530; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496360; j < 496370; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497200; j < 497210; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498040; j < 498050; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498880; j < 498890; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499720; j < 499730; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500560; j < 500570; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501400; j < 501410; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502240; j < 502250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503080; j < 503090; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 494690; j < 494700; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 495530; j < 495540; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496370; j < 496380; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497210; j < 497220; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498050; j < 498060; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498890; j < 498900; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499730; j < 499740; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500570; j < 500580; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501410; j < 501420; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502250; j < 502260; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503090; j < 503100; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 495540; j < 495550; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 496380; j < 496390; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497220; j < 497230; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498060; j < 498070; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498900; j < 498910; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499740; j < 499750; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500580; j < 500590; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501420; j < 501430; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502260; j < 502270; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503100; j < 503110; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 496390; j < 496400; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 497230; j < 497240; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498070; j < 498080; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498910; j < 498920; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499750; j < 499760; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500590; j < 500600; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501430; j < 501440; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502270; j < 502280; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503110; j < 503120; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 497240; j < 497250; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498080; j < 498090; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498920; j < 498930; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499760; j < 499770; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500600; j < 500610; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501440; j < 501450; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502280; j < 502290; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503120; j < 503130; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 498090; j < 498100; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 498930; j < 498940; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499770; j < 499780; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500610; j < 500620; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501450; j < 501460; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502290; j < 502300; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503130; j < 503140; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 498940; j < 498950; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 499780; j < 499790; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500620; j < 500630; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501460; j < 501470; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502300; j < 502310; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503140; j < 503150; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 499790; j < 499800; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 500630; j < 500640; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501470; j < 501480; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502310; j < 502320; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503150; j < 503160; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 500640; j < 500650; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 501480; j < 501490; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502320; j < 502330; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503160; j < 503170; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 501490; j < 501500; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 502330; j < 502340; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503170; j < 503180; j++) _solve(b, j);
    }
    }
    #pragma omp sections
    { 
    #pragma omp section
    {
        for(j = 502340; j < 502350; j++) _solve(b, j);
    }
    #pragma omp section
    {
        for(j = 503180; j < 503190; j++) _solve(b, j);
    }
    }
    }
}